; ModuleID = '../../third_party/freetype/src/src/truetype/truetype.c'
source_filename = "../../third_party/freetype/src/src/truetype/truetype.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.FT_ModuleRec_ = type { %struct.FT_Module_Class_*, %struct.FT_LibraryRec_*, %struct.FT_MemoryRec_* }
%struct.FT_Module_Class_ = type { i64, i64, i8*, i64, i64, i8*, {}*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* }
%struct.FT_LibraryRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i32, [32 x %struct.FT_ModuleRec_*], %struct.FT_ListRec_, %struct.FT_RendererRec_*, %struct.FT_ModuleRec_*, [4 x i32 (i8*)*], [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_RendererRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Renderer_Class_*, i32, %struct.FT_Glyph_Class_, %struct.FT_RasterRec_*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)* }
%struct.FT_Renderer_Class_ = type { %struct.FT_Module_Class_, i32, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_RendererRec_*, i64, i8*)*, %struct.FT_Raster_Funcs_* }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type { i8*, i32, %struct.FT_Size_Metrics_ }
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Driver_ClassRec_*, %struct.FT_ListRec_, %struct.FT_GlyphLoaderRec_* }
%struct.FT_Driver_ClassRec_ = type { %struct.FT_Module_Class_, i64, i64, i64, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.FT_FaceRec_*)*, i32 (%struct.FT_SizeRec_*)*, void (%struct.FT_SizeRec_*)*, i32 (%struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphSlotRec_*)*, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)*, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)*, i32 (%struct.FT_SizeRec_*, i64)* }
%struct.FT_GlyphLoaderRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i8, %struct.FT_GlyphLoadRec_, %struct.FT_GlyphLoadRec_, i8* }
%struct.FT_GlyphLoadRec_ = type { %struct.FT_Outline_, %struct.FT_Vector_*, %struct.FT_Vector_*, i32, %struct.FT_SubGlyphRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_Face_InternalRec_ = type { %struct.FT_Matrix_, %struct.FT_Vector_, i32, %struct.FT_ServiceCacheRec_, %struct.FT_Incremental_InterfaceRec_*, i8, i32, [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_Matrix_ = type { i64, i64, i64, i64 }
%struct.FT_ServiceCacheRec_ = type { i8*, i8*, i8*, i8*, i8*, i8* }
%struct.FT_Incremental_InterfaceRec_ = type { %struct.FT_Incremental_FuncsRec_*, %struct.FT_IncrementalRec_* }
%struct.FT_Incremental_FuncsRec_ = type { i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* }
%struct.FT_Data_ = type { i8*, i32 }
%struct.FT_Incremental_MetricsRec_ = type { i64, i64, i64, i64 }
%struct.FT_IncrementalRec_ = type opaque
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type { i32, i16, i32, i32, %struct.FT_Matrix_ }
%struct.FT_Slot_InternalRec_ = type { %struct.FT_GlyphLoaderRec_*, i32, i8, %struct.FT_Matrix_, %struct.FT_Vector_, i8*, i32 }
%struct.FT_Raster_Funcs_ = type { i32, i32 (i8*, %struct.FT_RasterRec_**)*, void (%struct.FT_RasterRec_*, i8*, i64)*, i32 (%struct.FT_RasterRec_*, i64, i8*)*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, void (%struct.FT_RasterRec_*)* }
%struct.FT_Glyph_Class_ = type { i64, i32, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphRec_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphRec_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)* }
%struct.FT_GlyphRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_Glyph_Class_*, i32, %struct.FT_Vector_ }
%struct.FT_RasterRec_ = type opaque
%struct.FT_Raster_Params_ = type { %struct.FT_Bitmap_*, i8*, i32, void (i32, i32, %struct.FT_Span_*, i8*)*, void (i32, i32, %struct.FT_Span_*, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i8*)*, i8*, %struct.FT_BBox_ }
%struct.FT_Span_ = type { i16, i16, i8 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%struct.FT_Parameter_ = type { i64, i8* }
%struct.FT_Size_RequestRec_ = type { i32, i64, i64, i32, i32 }
%struct.TT_GraphicsState_ = type { i16, i16, i16, %struct.FT_UnitVector_, %struct.FT_UnitVector_, %struct.FT_UnitVector_, i64, i64, i32, i8, i64, i64, i64, i16, i16, i8, i8, i32, i16, i16, i16 }
%struct.FT_UnitVector_ = type { i16, i16 }
%struct.FT_ServiceDescRec_ = type { i8*, i8* }
%struct.FT_Service_MultiMastersRec_ = type { i32 (%struct.FT_FaceRec_*, %struct.FT_Multi_Master_*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_MM_Var_**)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32*, i64*)*, i32 (%struct.FT_FaceRec_*, i32*, i64**, i64**, %struct.FT_MM_Var_**)*, void (%struct.FT_FaceRec_*)* }
%struct.FT_Multi_Master_ = type { i32, i32, [4 x %struct.FT_MM_Axis_] }
%struct.FT_MM_Axis_ = type { i8*, i64, i64 }
%struct.FT_MM_Var_ = type { i32, i32, i32, %struct.FT_Var_Axis_*, %struct.FT_Var_Named_Style_* }
%struct.FT_Var_Axis_ = type { i8*, i64, i64, i64, i64, i32 }
%struct.FT_Var_Named_Style_ = type { i64*, i32, i32 }
%struct.FT_Service_MetricsVariationsRec_ = type { i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)*, void (%struct.FT_FaceRec_*)* }
%struct.FT_Service_TrueTypeEngineRec_ = type { i32 }
%struct.FT_Service_TTGlyfRec_ = type { i64 (%struct.FT_FaceRec_*, i32, i64*)* }
%struct.FT_Service_PropertiesRec_ = type { i32 (%struct.FT_ModuleRec_*, i8*, i8*, i8)*, i32 (%struct.FT_ModuleRec_*, i8*, i8*)* }
%struct.FT_Frame_Field_ = type { i8, i8, i16 }
%struct.tt_sfnt_id_rec_ = type { i64, i64 }
%struct.TT_ExecContextRec_ = type { %struct.TT_FaceRec_*, %struct.TT_SizeRec_*, %struct.FT_MemoryRec_*, i32, i64, i64, i64*, i64, i64, %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_, i64, %struct.FT_Size_Metrics_, %struct.TT_Size_Metrics_, %struct.TT_GraphicsState_, i32, i32, i8*, i64, i64, i8, i32, i8, i64, i64*, i64, i64*, i64*, i32, i8*, i32, i32, %struct.TT_DefRecord_*, i32, i32, %struct.TT_DefRecord_*, i32, i32, i32, i32, %struct.TT_CallRec_*, i16, i16, [3 x %struct.TT_CodeRange_], i16, i64*, i16, i64*, i64*, i64, i64, i64, i8, %struct.TT_GraphicsState_, i8, i8, i64, i64 (%struct.TT_ExecContextRec_*, i64, i32)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)*, void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*, void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*, i64 (%struct.TT_ExecContextRec_*)*, i64 (%struct.TT_ExecContextRec_*, i64)*, void (%struct.TT_ExecContextRec_*, i64, i64)*, void (%struct.TT_ExecContextRec_*, i64, i64)*, i8, i8, i8, i8, i8, i8, i8, i64, i64, i64, i64 }
%struct.TT_FaceRec_ = type { %struct.FT_FaceRec_, %struct.TTC_HeaderRec_, i64, i16, %struct.TT_TableRec_*, %struct.TT_Header_, %struct.TT_HoriHeader_, %struct.TT_MaxProfile_, i8, %struct.TT_VertHeader_, i16, %struct.TT_NameTableRec_, %struct.TT_OS2_, %struct.TT_Postscript_, i8*, i64, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_LoaderRec_*, i32, i64, i32)*, void (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i8*, i8*, i8*, i8*, i8*, %struct.TT_Gasp_, %struct.TT_PCLT_, i64, %struct.TT_SBit_ScaleRec_*, %struct.TT_Post_NamesRec_, %struct.FT_Palette_Data_, i16, %struct.FT_Color_*, i8, %struct.FT_Color_, i64, i8*, i64, i8*, i64, i32*, i32 (i8*)*, %struct.FT_Generic_, i8*, i64, i64, i8, i8, %struct.GX_BlendRec_*, i32, i8*, i32, i64, i64, i64, i8*, i8*, i64, i32, i64, i8*, i8*, i64, i32, i32, i32*, i8*, i64, i32, i32, i32, i64, i64, i64, i64, i8*, i8* }
%struct.TTC_HeaderRec_ = type { i64, i64, i64, i64* }
%struct.TT_TableRec_ = type { i64, i64, i64, i64 }
%struct.TT_Header_ = type { i64, i64, i64, i64, i16, i16, [2 x i64], [2 x i64], i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_HoriHeader_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i16], i16, i16, i8*, i8* }
%struct.TT_MaxProfile_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_VertHeader_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i16], i16, i16, i8*, i8* }
%struct.TT_NameTableRec_ = type { i16, i32, i32, %struct.TT_NameRec_*, i32, %struct.TT_LangTagRec_*, %struct.FT_StreamRec_* }
%struct.TT_NameRec_ = type { i16, i16, i16, i16, i16, i64, i8* }
%struct.TT_LangTagRec_ = type { i16, i64, i8* }
%struct.TT_OS2_ = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [10 x i8], i64, i64, i64, i64, [4 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i64, i64, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_Postscript_ = type { i64, i64, i16, i16, i64, i64, i64, i64, i64 }
%struct.TT_LoaderRec_ = type { %struct.TT_FaceRec_*, %struct.TT_SizeRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphLoaderRec_*, i64, i32, %struct.FT_StreamRec_*, i32, i16, %struct.FT_BBox_, i32, i32, i32, i8, %struct.FT_Vector_, %struct.FT_Vector_, %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_, %struct.TT_ExecContextRec_*, i8*, i64, i8*, i32, i32, %struct.FT_Vector_, %struct.FT_Vector_, i8*, i8*, %struct.FT_ListRec_ }
%struct.TT_Gasp_ = type { i16, i16, %struct.TT_GaspRangeRec_* }
%struct.TT_GaspRangeRec_ = type { i16, i16 }
%struct.TT_PCLT_ = type { i64, i64, i16, i16, i16, i16, i16, i16, [16 x i8], [8 x i8], [6 x i8], i8, i8, i8, i8 }
%struct.TT_SBit_ScaleRec_ = type { %struct.TT_SBit_LineMetricsRec_, %struct.TT_SBit_LineMetricsRec_, i8, i8, i8, i8 }
%struct.TT_SBit_LineMetricsRec_ = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8] }
%struct.TT_Post_NamesRec_ = type { i8, %union.anon }
%union.anon = type { %struct.TT_Post_20Rec_ }
%struct.TT_Post_20Rec_ = type { i16, i16, i16*, i8** }
%struct.FT_Palette_Data_ = type { i16, i16*, i16*, i16, i16* }
%struct.FT_Color_ = type { i8, i8, i8, i8 }
%struct.GX_BlendRec_ = type { i32, i64*, i64*, %struct.FT_MM_Var_*, i64, i64*, i8, %struct.GX_AVarSegmentRec_*, i8, i8, i32, %struct.GX_HVVarTableRec_*, i8, i8, i32, %struct.GX_HVVarTableRec_*, %struct.GX_MVarTableRec_*, i32, i64*, i32, i64*, i64 }
%struct.GX_AVarSegmentRec_ = type { i16, %struct.GX_AVarCorrespondenceRec_* }
%struct.GX_AVarCorrespondenceRec_ = type { i64, i64 }
%struct.GX_HVVarTableRec_ = type { %struct.GX_ItemVarStoreRec_, %struct.GX_DeltaSetIdxMapRec_ }
%struct.GX_ItemVarStoreRec_ = type { i32, %struct.GX_ItemVarDataRec_*, i16, i32, %struct.GX_VarRegionRec_* }
%struct.GX_ItemVarDataRec_ = type { i32, i32, i32*, i16* }
%struct.GX_VarRegionRec_ = type { %struct.GX_AxisCoordsRec_* }
%struct.GX_AxisCoordsRec_ = type { i64, i64, i64 }
%struct.GX_DeltaSetIdxMapRec_ = type { i32, i32*, i32* }
%struct.GX_MVarTableRec_ = type { i16, %struct.GX_ItemVarStoreRec_, %struct.GX_ValueRec_* }
%struct.GX_ValueRec_ = type { i64, i16, i16, i16 }
%struct.TT_SizeRec_ = type { %struct.FT_SizeRec_, %struct.FT_Size_Metrics_*, %struct.FT_Size_Metrics_, %struct.TT_Size_Metrics_, i64, i64, i32, i32, %struct.TT_DefRecord_*, i32, i32, %struct.TT_DefRecord_*, i32, i32, [3 x %struct.TT_CodeRange_], %struct.TT_GraphicsState_, i64, i64*, i16, i64*, %struct.TT_GlyphZoneRec_, %struct.TT_ExecContextRec_*, i32, i32 }
%struct.TT_GlyphZoneRec_ = type { %struct.FT_MemoryRec_*, i16, i16, i16, i16, %struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, i8*, i16*, i16 }
%struct.TT_Size_Metrics_ = type { i64, i64, i16, i64, i64, [4 x i64], i8, i8, i8 }
%struct.TT_DefRecord_ = type { i32, i64, i64, i32, i8, i8, i64 }
%struct.TT_CallRec_ = type { i32, i64, i64, %struct.TT_DefRecord_* }
%struct.TT_CodeRange_ = type { i8*, i64 }
%struct.SFNT_Interface_ = type { i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.TT_FaceRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)*, i32 (%struct.TT_FaceRec_*, i64, i64, i8*, i64*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, void (%struct.TT_FaceRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, i64, i32, i32, %struct.FT_StreamRec_*, %struct.FT_Bitmap_*, %struct.TT_SBit_MetricsRec_*)*, i32 (%struct.TT_FaceRec_*, i32, i8**)*, void (%struct.TT_FaceRec_*)*, i32 (%struct.TT_FaceRec_*, i32, i32)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, void (%struct.TT_FaceRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_Size_RequestRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_Size_Metrics_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, void (%struct.TT_FaceRec_*)*, void (%struct.TT_FaceRec_*)*, i32 (%struct.TT_FaceRec_*, i32)*, i8 (%struct.TT_FaceRec_*, i32, i32*, i32*, %struct.FT_LayerIterator_*)*, i8 (%struct.TT_FaceRec_*, i32, i32, %struct.FT_Opaque_Paint_*)*, i8 (%struct.TT_FaceRec_*, %struct.FT_LayerIterator_*, %struct.FT_Opaque_Paint_*)*, i8 (%struct.TT_FaceRec_*, %struct.FT_ColorStop_*, %struct.FT_ColorStopIterator_*)*, i8 (%struct.TT_FaceRec_*, i8*, i8, %struct.FT_COLR_Paint_*)*, i32 (%struct.TT_FaceRec_*, i32, %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_*)*, void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)*, i32 (%struct.TT_FaceRec_*, i16, i8**)*, i8 (%struct.TT_FaceRec_*, i16, i32*, i32*)* }
%struct.TT_SBit_MetricsRec_ = type { i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.FT_LayerIterator_ = type { i32, i32, i8* }
%struct.FT_Opaque_Paint_ = type { i8*, i8 }
%struct.FT_ColorStop_ = type { i16, %struct.FT_ColorIndex_ }
%struct.FT_ColorIndex_ = type { i16, i16 }
%struct.FT_ColorStopIterator_ = type { i32, i32, i8* }
%struct.FT_COLR_Paint_ = type { i32, %union.anon.0 }
%union.anon.0 = type { %struct.FT_PaintLinearGradient_ }
%struct.FT_PaintLinearGradient_ = type { %struct.FT_ColorLine_, %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_Vector_ }
%struct.FT_ColorLine_ = type { i32, %struct.FT_ColorStopIterator_ }
%struct.TT_DriverRec_ = type { %struct.FT_DriverRec_, %struct.TT_GlyphZoneRec_, i32 }
%struct.IUP_WorkerRec_ = type { %struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, i32 }
%struct.GX_FVar_Head_ = type { i64, i16, i16, i16, i16, i16 }
%struct.fvar_axis_ = type { i64, i64, i64, i64, i16, i16 }
%struct.GX_GVar_Head_ = type { i64, i16, i16, i64, i16, i16, i64 }

@.str = private unnamed_addr constant [9 x i8] c"truetype\00", align 1
@tt_driver_class = hidden local_unnamed_addr constant { { i64, i64, i8*, i64, i64, i8*, i32 (%struct.FT_ModuleRec_*)*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* }, i64, i64, i64, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.FT_FaceRec_*)*, i32 (%struct.FT_SizeRec_*)*, void (%struct.FT_SizeRec_*)*, i32 (%struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphSlotRec_*)*, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)*, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)*, i32 (%struct.FT_SizeRec_*, i64)* } { { i64, i64, i8*, i64, i64, i8*, i32 (%struct.FT_ModuleRec_*)*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* } { i64 1281, i64 128, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i64 65536, i64 131072, i8* null, i32 (%struct.FT_ModuleRec_*)* @tt_driver_init, void (%struct.FT_ModuleRec_*)* @tt_driver_done, i8* (%struct.FT_ModuleRec_*, i8*)* @tt_get_interface }, i64 1432, i64 544, i64 304, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)* @tt_face_init, void (%struct.FT_FaceRec_*)* @tt_face_done, i32 (%struct.FT_SizeRec_*)* @tt_size_init, void (%struct.FT_SizeRec_*)* @tt_size_done, i32 (%struct.FT_GlyphSlotRec_*)* @tt_slot_init, void (%struct.FT_GlyphSlotRec_*)* null, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)* @tt_glyph_load, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)* @tt_get_kerning, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)* null, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)* @tt_get_advances, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)* @tt_size_request, i32 (%struct.FT_SizeRec_*, i64)* @tt_size_select }, align 8
@tt_default_graphics_state = hidden local_unnamed_addr constant %struct.TT_GraphicsState_ { i16 0, i16 0, i16 0, %struct.FT_UnitVector_ { i16 16384, i16 0 }, %struct.FT_UnitVector_ { i16 16384, i16 0 }, %struct.FT_UnitVector_ { i16 16384, i16 0 }, i64 1, i64 64, i32 1, i8 1, i64 68, i64 0, i64 0, i16 9, i16 3, i8 0, i8 0, i32 0, i16 1, i16 1, i16 1 }, align 8
@opcode_length = internal unnamed_addr constant [256 x i8] calign 16
@Pop_Push_Count = internal unnamed_addr constant [256 x i8] calign 16
@tt_services = internal constant [7 x %struct.FT_ServiceDescRec_] [%struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.FT_Service_MultiMastersRec_* @tt_service_gx_multi_masters to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i32 0, i32 0), i8* bitcast (%struct.FT_Service_MetricsVariationsRec_* @tt_service_metrics_variations to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.FT_Service_TrueTypeEngineRec_* @tt_service_truetype_engine to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.FT_Service_TTGlyfRec_* @tt_service_truetype_glyf to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), i8* bitcast (%struct.FT_Service_PropertiesRec_* @tt_service_properties to i8*) }, %struct.FT_ServiceDescRec_ zeroinitializer], align 16
@.str.1 = private unnamed_addr constant [5 x i8] c"sfnt\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"font-format\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"TrueType\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"multi-masters\00", align 1
@tt_service_gx_multi_masters = internal constant %struct.FT_Service_MultiMastersRec_ { i32 (%struct.FT_FaceRec_*, %struct.FT_Multi_Master_*)* null, i32 (%struct.FT_FaceRec_*, i32, i64*)* null, i32 (%struct.FT_FaceRec_*, i32, i64*)* bitcast (i32 (%struct.TT_FaceRec_*, i32, i64*)* @TT_Set_MM_Blend to i32 (%struct.FT_FaceRec_*, i32, i64*)*), i32 (%struct.FT_FaceRec_*, i32, i64*)* bitcast (i32 (%struct.TT_FaceRec_*, i32, i64*)* @TT_Get_MM_Blend to i32 (%struct.FT_FaceRec_*, i32, i64*)*), i32 (%struct.FT_FaceRec_*, %struct.FT_MM_Var_**)* bitcast (i32 (%struct.TT_FaceRec_*, %struct.FT_MM_Var_**)* @TT_Get_MM_Var to i32 (%struct.FT_FaceRec_*, %struct.FT_MM_Var_**)*), i32 (%struct.FT_FaceRec_*, i32, i64*)* bitcast (i32 (%struct.TT_FaceRec_*, i32, i64*)* @TT_Set_Var_Design to i32 (%struct.FT_FaceRec_*, i32, i64*)*), i32 (%struct.FT_FaceRec_*, i32, i64*)* bitcast (i32 (%struct.TT_FaceRec_*, i32, i64*)* @TT_Get_Var_Design to i32 (%struct.FT_FaceRec_*, i32, i64*)*), i32 (%struct.FT_FaceRec_*, i32)* bitcast (i32 (%struct.TT_FaceRec_*, i32)* @TT_Set_Named_Instance to i32 (%struct.FT_FaceRec_*, i32)*), i32 (%struct.FT_FaceRec_*, i32, i64*)* null, i32 (%struct.FT_FaceRec_*, i32*, i64*)* null, i32 (%struct.FT_FaceRec_*, i32*, i64**, i64**, %struct.FT_MM_Var_**)* bitcast (i32 (%struct.TT_FaceRec_*, i32*, i64**, i64**, %struct.FT_MM_Var_**)* @tt_get_var_blend to i32 (%struct.FT_FaceRec_*, i32*, i64**, i64**, %struct.FT_MM_Var_**)*), void (%struct.FT_FaceRec_*)* bitcast (void (%struct.TT_FaceRec_*)* @tt_done_blend to void (%struct.FT_FaceRec_*)*) }, align 8
@.str.5 = private unnamed_addr constant [19 x i8] c"metrics-variations\00", align 1
@tt_service_metrics_variations = internal constant %struct.FT_Service_MetricsVariationsRec_ { i32 (%struct.FT_FaceRec_*, i32, i32*)* bitcast (i32 (%struct.TT_FaceRec_*, i32, i32*)* @tt_hadvance_adjust to i32 (%struct.FT_FaceRec_*, i32, i32*)*), i32 (%struct.FT_FaceRec_*, i32, i32*)* null, i32 (%struct.FT_FaceRec_*, i32, i32*)* null, i32 (%struct.FT_FaceRec_*, i32, i32*)* bitcast (i32 (%struct.TT_FaceRec_*, i32, i32*)* @tt_vadvance_adjust to i32 (%struct.FT_FaceRec_*, i32, i32*)*), i32 (%struct.FT_FaceRec_*, i32, i32*)* null, i32 (%struct.FT_FaceRec_*, i32, i32*)* null, i32 (%struct.FT_FaceRec_*, i32, i32*)* null, void (%struct.FT_FaceRec_*)* bitcast (void (%struct.TT_FaceRec_*)* @tt_apply_mvar to void (%struct.FT_FaceRec_*)*) }, align 8
@.str.6 = private unnamed_addr constant [16 x i8] c"truetype-engine\00", align 1
@tt_service_truetype_engine = internal constant %struct.FT_Service_TrueTypeEngineRec_ { i32 2 }, align 4
@.str.7 = private unnamed_addr constant [8 x i8] c"tt-glyf\00", align 1
@tt_service_truetype_glyf = internal constant %struct.FT_Service_TTGlyfRec_ { i64 (%struct.FT_FaceRec_*, i32, i64*)* bitcast (i64 (%struct.TT_FaceRec_*, i32, i32*)* @tt_face_get_location to i64 (%struct.FT_FaceRec_*, i32, i64*)*) }, align 8
@.str.8 = private unnamed_addr constant [11 x i8] c"properties\00", align 1
@tt_service_properties = internal constant %struct.FT_Service_PropertiesRec_ { i32 (%struct.FT_ModuleRec_*, i8*, i8*, i8)* @tt_property_set, i32 (%struct.FT_ModuleRec_*, i8*, i8*)* @tt_property_get }, align 8
@ft_var_load_gvar.gvar_fields = internal constant [9 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 20 }, %struct.FT_Frame_Field_ { i8 17, i8 8, i16 0 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 8 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 10 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 16 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 24 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 26 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 32 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@TT_Get_MM_Var.fvar_fields = internal constant [9 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 16 }, %struct.FT_Frame_Field_ { i8 17, i8 8, i16 0 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 8 }, %struct.FT_Frame_Field_ { i8 13, i8 0, i16 0 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 10 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 12 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 14 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 16 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@TT_Get_MM_Var.fvaraxis_fields = internal constant [8 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 20 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 0 }, %struct.FT_Frame_Field_ { i8 17, i8 8, i16 8 }, %struct.FT_Frame_Field_ { i8 17, i8 8, i16 16 }, %struct.FT_Frame_Field_ { i8 17, i8 8, i16 24 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 32 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 34 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@.str.9 = private unnamed_addr constant [7 x i8] c"Weight\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"Width\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"OpticalSize\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"Slant\00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c"interpreter-version\00", align 1
@tt_check_trickyness_family.trick_names = internal constant [26 x [20 x i8]] [[20 x i8] c"cpop\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [20 x i8] c"DFGirl-W6-WIN-BF\00\00\00\00", [20 x i8] c"DFGothic-EB\00\00\00\00\00\00\00\00\00", [20 x i8] c"DFGyoSho-Lt\00\00\00\00\00\00\00\00\00", [20 x i8] c"DFHei-Md-HK-BF\00\00\00\00\00\00", [20 x i8] c"DFHSGothic-W5\00\00\00\00\00\00\00", [20 x i8] c"DFHSMincho-W3\00\00\00\00\00\00\00", [20 x i8] c"DFHSMincho-W7\00\00\00\00\00\00\00", [20 x i8] c"DFKaiSho-SB\00\00\00\00\00\00\00\00\00", [20 x i8] c"DFKaiShu\00\00\00\00\00\00\00\00\00\00\00\00", [20 x i8] c"DFKaiShu-Md-HK-BF\00\00\00", [20 x i8] c"DFKai-SB\00\00\00\00\00\00\00\00\00\00\00\00", [20 x i8] c"DFMing-Bd-HK-BF\00\00\00\00\00", [20 x i8] c"DLC\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [20 x i8] c"DLCHayMedium\00\00\00\00\00\00\00\00", [20 x i8] c"DLCHayBold\00\00\00\00\00\00\00\00\00\00", [20 x i8] c"DLCKaiMedium\00\00\00\00\00\00\00\00", [20 x i8] c"DLCLiShu\00\00\00\00\00\00\00\00\00\00\00\00", [20 x i8] c"DLCRoundBold\00\00\00\00\00\00\00\00", [20 x i8] c"HuaTianKaiTi?\00\00\00\00\00\00\00", [20 x i8] c"HuaTianSongTi?\00\00\00\00\00\00", [20 x i8] c"Ming(for ISO10646)\00\00", [20 x i8] c"MingLiU\00\00\00\00\00\00\00\00\00\00\00\00\00", [20 x i8] c"MingMedium\00\00\00\00\00\00\00\00\00\00", [20 x i8] c"PMingLiU\00\00\00\00\00\00\00\00\00\00\00\00", [20 x i8] c"MingLi43\00\00\00\00\00\00\00\00\00\00\00\00"], align 16
@tt_check_trickyness_sfnt_ids.sfnt_id = internal unnamed_addr constant [29 x [3 x %struct.tt_sfnt_id_rec_]] [[3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ { i64 96268376, i64 740 }, %struct.tt_sfnt_id_rec_ { i64 673397745, i64 34756 }, %struct.tt_sfnt_id_rec_ { i64 2739184106, i64 481 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ { i64 96268376, i64 740 }, %struct.tt_sfnt_id_rec_ { i64 673397745, i64 34756 }, %struct.tt_sfnt_id_rec_ { i64 2739184107, i64 481 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ { i64 314829746, i64 848 }, %struct.tt_sfnt_id_rec_ { i64 3061902948, i64 34727 }, %struct.tt_sfnt_id_rec_ { i64 3465778531, i64 1880 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ { i64 300280532, i64 848 }, %struct.tt_sfnt_id_rec_ { i64 3461961449, i64 48261 }, %struct.tt_sfnt_id_rec_ { i64 2188571670, i64 69 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ { i64 307751750, i64 848 }, %struct.tt_sfnt_id_rec_ { i64 4137275744, i64 29023 }, %struct.tt_sfnt_id_rec_ { i64 3525506408, i64 956 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ { i64 308472654, i64 848 }, %struct.tt_sfnt_id_rec_ { i64 3899284836, i64 31040 }, %struct.tt_sfnt_id_rec_ { i64 2018572073, i64 1535 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ { i64 304999178, i64 848 }, %struct.tt_sfnt_id_rec_ { i64 1024864906, i64 34203 }, %struct.tt_sfnt_id_rec_ { i64 2839528251, i64 715 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ { i64 308276006, i64 848 }, %struct.tt_sfnt_id_rec_ { i64 2779564418, i64 32481 }, %struct.tt_sfnt_id_rec_ { i64 2425983382, i64 1055 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ { i64 300280532, i64 848 }, %struct.tt_sfnt_id_rec_ { i64 1513146939, i64 36963 }, %struct.tt_sfnt_id_rec_ { i64 329524738, i64 126 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ { i64 300280532, i64 848 }, %struct.tt_sfnt_id_rec_ { i64 2800192513, i64 35224 }, %struct.tt_sfnt_id_rec_ { i64 329524738, i64 126 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ { i64 300280532, i64 864 }, %struct.tt_sfnt_id_rec_ { i64 2645721778, i64 49262 }, %struct.tt_sfnt_id_rec_ { i64 1407637450, i64 130 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ { i64 306440984, i64 848 }, %struct.tt_sfnt_id_rec_ { i64 3121253424, i64 29869 }, %struct.tt_sfnt_id_rec_ { i64 4091032585, i64 891 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ { i64 131921222, i64 776 }, %struct.tt_sfnt_id_rec_ { i64 1090419856, i64 36394 }, %struct.tt_sfnt_id_rec_ { i64 1619096757, i64 122 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ { i64 3951628856, i64 776 }, %struct.tt_sfnt_id_rec_ { i64 3538214100, i64 26479 }, %struct.tt_sfnt_id_rec_ { i64 2393240211, i64 952 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ { i64 4294705148, i64 8 }, %struct.tt_sfnt_id_rec_ { i64 2627619000, i64 48802 }, %struct.tt_sfnt_id_rec_ { i64 1879179538, i64 8 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ { i64 4294705148, i64 8 }, %struct.tt_sfnt_id_rec_ { i64 173671555, i64 97337 }, %struct.tt_sfnt_id_rec_ { i64 1879179538, i64 8 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ zeroinitializer, %struct.tt_sfnt_id_rec_ { i64 1086924117, i64 229 }, %struct.tt_sfnt_id_rec_ { i64 2744867043, i64 4476 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ zeroinitializer, %struct.tt_sfnt_id_rec_ { i64 868488786, i64 229 }, %struct.tt_sfnt_id_rec_ { i64 651609386, i64 3946 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ zeroinitializer, %struct.tt_sfnt_id_rec_ { i64 1840342301, i64 413 }, %struct.tt_sfnt_id_rec_ { i64 1819167491, i64 9362 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ zeroinitializer, %struct.tt_sfnt_id_rec_ { i64 1086924117, i64 229 }, %struct.tt_sfnt_id_rec_ { i64 3729914576, i64 4476 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ zeroinitializer, %struct.tt_sfnt_id_rec_ { i64 2246342244, i64 229 }, %struct.tt_sfnt_id_rec_ { i64 2798004273, i64 7338 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ zeroinitializer, %struct.tt_sfnt_id_rec_ { i64 763960573, i64 413 }, %struct.tt_sfnt_id_rec_ { i64 2690663987, i64 7656 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ zeroinitializer, %struct.tt_sfnt_id_rec_ { i64 1084913484, i64 459 }, %struct.tt_sfnt_id_rec_ { i64 2606541462, i64 8090 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ zeroinitializer, %struct.tt_sfnt_id_rec_ { i64 222161355, i64 321 }, %struct.tt_sfnt_id_rec_ { i64 3557980006, i64 8832 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ zeroinitializer, %struct.tt_sfnt_id_rec_ { i64 1248405144, i64 496 }, %struct.tt_sfnt_id_rec_ { i64 873284422, i64 8138 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ zeroinitializer, %struct.tt_sfnt_id_rec_ { i64 3442787844, i64 358 }, %struct.tt_sfnt_id_rec_ { i64 1827868742, i64 8880 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ zeroinitializer, %struct.tt_sfnt_id_rec_ { i64 1571246869, i64 413 }, %struct.tt_sfnt_id_rec_ { i64 1081367135, i64 8928 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ zeroinitializer, %struct.tt_sfnt_id_rec_ { i64 4032166984, i64 450 }, %struct.tt_sfnt_id_rec_ { i64 956358355, i64 7704 }], [3 x %struct.tt_sfnt_id_rec_] [%struct.tt_sfnt_id_rec_ { i64 1507331, i64 96 }, %struct.tt_sfnt_id_rec_ { i64 3686019182, i64 22698 }, %struct.tt_sfnt_id_rec_ { i64 3594733610, i64 53 }]], align 16
@switch.table.TT_RunIns = private unnamed_addr constant [8 x i64 (%struct.TT_ExecContextRec_*, i64, i32)*] [i64 (%struct.TT_ExecContextRec_*, i64, i32)* @Round_To_Half_Grid, i64 (%struct.TT_ExecContextRec_*, i64, i32)* @Round_To_Grid, i64 (%struct.TT_ExecContextRec_*, i64, i32)* @Round_To_Double_Grid, i64 (%struct.TT_ExecContextRec_*, i64, i32)* @Round_Down_To_Grid, i64 (%struct.TT_ExecContextRec_*, i64, i32)* @Round_Up_To_Grid, i64 (%struct.TT_ExecContextRec_*, i64, i32)* @Round_None, i64 (%struct.TT_ExecContextRec_*, i64, i32)* @Round_Super, i64 (%struct.TT_ExecContextRec_*, i64, i32)* @Round_Super_45], align 8
@switch.table.TT_RunIns.16 = private unnamed_addr constant [4 x i64] [i64 8192, i64 16384, i64 32768, i64 16384], align 8
@switch.table.TT_RunIns.18 = private unnamed_addr constant [4 x i64] [i64 5792, i64 11585, i64 23170, i64 11585], align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal i32 @tt_driver_init(%struct.FT_ModuleRec_* nocapture) #0 {
  %2 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 5
  %3 = bitcast %struct.FT_ModuleRec_* %2 to i32*
  store i32 40, i32* %3, align 8
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @tt_driver_done(%struct.FT_ModuleRec_* nocapture) #1 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @tt_get_interface(%struct.FT_ModuleRec_*, i8*) #2 {
  %3 = tail call i8* @ft_service_list_lookup(%struct.FT_ServiceDescRec_* getelementptr inbounds ([7 x %struct.FT_ServiceDescRec_], [7 x %struct.FT_ServiceDescRec_]* @tt_services, i64 0, i64 0), i8* %1) #11
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %25

5:                                                ; preds = %2
  %6 = icmp eq %struct.FT_ModuleRec_* %0, null
  br i1 %6, label %25, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 0, i32 1
  %9 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %8, align 8
  %10 = icmp eq %struct.FT_LibraryRec_* %9, null
  br i1 %10, label %25, label %11

11:                                               ; preds = %7
  %12 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* nonnull %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #11
  %13 = icmp eq %struct.FT_ModuleRec_* %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %12, i64 0, i32 0
  %16 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %15, align 8
  %17 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %16, i64 0, i32 5
  %18 = bitcast i8** %17 to %struct.SFNT_Interface_**
  %19 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %18, align 8
  %20 = icmp eq %struct.SFNT_Interface_* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %19, i64 0, i32 4
  %23 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %22, align 8
  %24 = tail call i8* %23(%struct.FT_ModuleRec_* nonnull %0, i8* %1) #11
  br label %25

25:                                               ; preds = %11, %14, %7, %5, %2, %21
  %26 = phi i8* [ %24, %21 ], [ %3, %2 ], [ null, %5 ], [ null, %7 ], [ null, %14 ], [ null, %11 ]
  ret i8* %26
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_init(%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*) #2 {
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca [29 x i32], align 16
  %14 = bitcast %struct.FT_FaceRec_* %1 to %struct.TT_FaceRec_*
  %15 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 24
  %16 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %15, align 8
  %17 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %16, i64 0, i32 0, i32 1
  %18 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %17, align 8
  %19 = tail call i8* @FT_Get_Module_Interface(%struct.FT_LibraryRec_* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #11
  %20 = icmp eq i8* %19, null
  br i1 %20, label %538, label %21

21:                                               ; preds = %5
  %22 = tail call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %0, i64 0) #11
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %538

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %19, i64 8
  %26 = bitcast i8* %25 to i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)**
  %27 = load i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)** %26, align 8
  %28 = tail call i32 %27(%struct.FT_StreamRec_* %0, %struct.TT_FaceRec_* %14, i32 %2, i32 %3, %struct.FT_Parameter_* %4) #11
  %29 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 26
  %30 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %29, align 8
  %31 = icmp eq i32 %28, 0
  br i1 %31, label %32, label %538

32:                                               ; preds = %24
  %33 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 4
  %34 = load i64, i64* %33, align 8
  switch i64 %34, label %538 [
    i64 65536, label %35
    i64 131072, label %35
    i64 1953658213, label %35
    i64 2775278180, label %35
    i64 2775348084, label %35
  ]

35:                                               ; preds = %32, %32, %32, %32, %32
  %36 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = or i64 %37, 2048
  store i64 %38, i64* %36, align 8
  %39 = icmp slt i32 %2, 0
  br i1 %39, label %538, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds i8, i8* %19, i64 16
  %42 = bitcast i8* %41 to i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)**
  %43 = load i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)** %42, align 8
  %44 = tail call i32 %43(%struct.FT_StreamRec_* %30, %struct.TT_FaceRec_* %14, i32 %2, i32 %3, %struct.FT_Parameter_* %4) #11
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %538

46:                                               ; preds = %40
  %47 = icmp eq %struct.FT_FaceRec_* %1, null
  br i1 %47, label %192, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 5
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %60, label %54

52:                                               ; preds = %54
  %53 = icmp eq i64 %59, 26
  br i1 %53, label %60, label %54

54:                                               ; preds = %48, %52
  %55 = phi i64 [ %59, %52 ], [ 0, %48 ]
  %56 = getelementptr inbounds [26 x [20 x i8]], [26 x [20 x i8]]* @tt_check_trickyness_family.trick_names, i64 0, i64 %55, i64 0
  %57 = tail call i8* @strstr(i8* nonnull %50, i8* %56) #12
  %58 = icmp eq i8* %57, null
  %59 = add nuw nsw i64 %55, 1
  br i1 %58, label %52, label %189

60:                                               ; preds = %52, %48
  %61 = bitcast [29 x i32]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 116, i8* nonnull %61) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %61, i8 0, i64 116, i1 false) #11
  %62 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 5
  %63 = bitcast i8** %62 to i16*
  %64 = load i16, i16* %63, align 8
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 6
  %68 = bitcast i8** %67 to %struct.TT_TableRec_**
  %69 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 3, i32 11
  %70 = bitcast %struct.FT_Generic_* %69 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  br label %74

71:                                               ; preds = %166, %60
  %72 = phi i8 [ 0, %60 ], [ %168, %166 ]
  %73 = icmp ne i8 %72, 0
  br label %174

74:                                               ; preds = %166, %66
  %75 = phi i16 [ %64, %66 ], [ %167, %166 ]
  %76 = phi i64 [ 0, %66 ], [ %169, %166 ]
  %77 = phi i8 [ 0, %66 ], [ %168, %166 ]
  %78 = load %struct.TT_TableRec_*, %struct.TT_TableRec_** %68, align 8
  %79 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %78, i64 %76, i32 0
  %80 = load i64, i64* %79, align 8
  switch i64 %80, label %166 [
    i64 1668707360, label %83
    i64 1718642541, label %81
    i64 1886545264, label %82
  ]

81:                                               ; preds = %74
  br label %83

82:                                               ; preds = %74
  br label %83

83:                                               ; preds = %82, %81, %74
  %84 = phi i8 [ %77, %82 ], [ %77, %81 ], [ 1, %74 ]
  %85 = phi i64 [ 2, %82 ], [ 1, %81 ], [ 0, %74 ]
  br label %86

86:                                               ; preds = %162, %83
  %87 = phi %struct.TT_TableRec_* [ %78, %83 ], [ %163, %162 ]
  %88 = phi i64 [ 0, %83 ], [ %160, %162 ]
  %89 = phi i64 [ 0, %83 ], [ %159, %162 ]
  %90 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %87, i64 %76, i32 3
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds [29 x [3 x %struct.tt_sfnt_id_rec_]], [29 x [3 x %struct.tt_sfnt_id_rec_]]* @tt_check_trickyness_sfnt_ids.sfnt_id, i64 0, i64 %88, i64 %85, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %91, %93
  br i1 %94, label %95, label %158

95:                                               ; preds = %86
  %96 = icmp eq i64 %89, 0
  br i1 %96, label %97, label %146

97:                                               ; preds = %95
  %98 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %70, align 8
  %99 = icmp eq i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)* %98, null
  br i1 %99, label %146, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %87, i64 %76, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %29, align 8
  %104 = tail call i32 %98(%struct.TT_FaceRec_* nonnull %14, i64 %102, %struct.FT_StreamRec_* %103, i64* null) #11
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %146

106:                                              ; preds = %100
  %107 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %29, align 8
  %108 = load %struct.TT_TableRec_*, %struct.TT_TableRec_** %68, align 8
  %109 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %108, i64 %76, i32 3
  %110 = load i64, i64* %109, align 8
  %111 = tail call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %107, i64 %110) #11
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %143

113:                                              ; preds = %106
  %114 = icmp ugt i64 %110, 3
  br i1 %114, label %121, label %117

115:                                              ; preds = %121
  %116 = and i64 %110, 3
  br label %117

117:                                              ; preds = %115, %113
  %118 = phi i64 [ %110, %113 ], [ %116, %115 ]
  %119 = phi i32 [ 0, %113 ], [ %126, %115 ]
  %120 = icmp eq i64 %118, 0
  br i1 %120, label %141, label %129

121:                                              ; preds = %113, %121
  %122 = phi i32 [ %126, %121 ], [ 0, %113 ]
  %123 = phi i64 [ %127, %121 ], [ %110, %113 ]
  %124 = tail call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %107) #11
  %125 = trunc i64 %124 to i32
  %126 = add i32 %122, %125
  %127 = add i64 %123, -4
  %128 = icmp ugt i64 %127, 3
  br i1 %128, label %121, label %115

129:                                              ; preds = %117, %129
  %130 = phi i32 [ %139, %129 ], [ 3, %117 ]
  %131 = phi i32 [ %137, %129 ], [ %119, %117 ]
  %132 = phi i64 [ %138, %129 ], [ %118, %117 ]
  %133 = tail call signext i8 @FT_Stream_GetChar(%struct.FT_StreamRec_* %107) #11
  %134 = zext i8 %133 to i32
  %135 = shl i32 %130, 3
  %136 = shl i32 %134, %135
  %137 = add i32 %136, %131
  %138 = add i64 %132, -1
  %139 = add i32 %130, -1
  %140 = icmp eq i64 %138, 0
  br i1 %140, label %141, label %129

141:                                              ; preds = %129, %117
  %142 = phi i32 [ %119, %117 ], [ %137, %129 ]
  tail call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %107) #11
  br label %143

143:                                              ; preds = %141, %106
  %144 = phi i32 [ %142, %141 ], [ 0, %106 ]
  %145 = zext i32 %144 to i64
  br label %146

146:                                              ; preds = %143, %100, %97, %95
  %147 = phi i64 [ %89, %95 ], [ %145, %143 ], [ 0, %97 ], [ 0, %100 ]
  %148 = getelementptr inbounds [29 x [3 x %struct.tt_sfnt_id_rec_]], [29 x [3 x %struct.tt_sfnt_id_rec_]]* @tt_check_trickyness_sfnt_ids.sfnt_id, i64 0, i64 %88, i64 %85, i32 0
  %149 = load i64, i64* %148, align 16
  %150 = icmp eq i64 %149, %147
  %151 = getelementptr inbounds [29 x i32], [29 x i32]* %13, i64 0, i64 %88
  %152 = load i32, i32* %151, align 4
  br i1 %150, label %153, label %155

153:                                              ; preds = %146
  %154 = add nsw i32 %152, 1
  store i32 %154, i32* %151, align 4
  br label %155

155:                                              ; preds = %153, %146
  %156 = phi i32 [ %154, %153 ], [ %152, %146 ]
  %157 = icmp eq i32 %156, 3
  br i1 %157, label %187, label %158

158:                                              ; preds = %155, %86
  %159 = phi i64 [ %147, %155 ], [ %89, %86 ]
  %160 = add nuw nsw i64 %88, 1
  %161 = icmp eq i64 %160, 29
  br i1 %161, label %164, label %162

162:                                              ; preds = %158
  %163 = load %struct.TT_TableRec_*, %struct.TT_TableRec_** %68, align 8
  br label %86

164:                                              ; preds = %158
  %165 = load i16, i16* %63, align 8
  br label %166

166:                                              ; preds = %164, %74
  %167 = phi i16 [ %75, %74 ], [ %165, %164 ]
  %168 = phi i8 [ %77, %74 ], [ %84, %164 ]
  %169 = add nuw nsw i64 %76, 1
  %170 = zext i16 %167 to i64
  %171 = icmp ult i64 %169, %170
  br i1 %171, label %74, label %71

172:                                              ; preds = %183
  %173 = icmp eq i64 %186, 29
  br i1 %173, label %188, label %540

174:                                              ; preds = %551, %71
  %175 = phi i64 [ 0, %71 ], [ %552, %551 ]
  %176 = add nsw i64 %175, -16
  %177 = icmp ugt i64 %176, 11
  %178 = or i1 %73, %177
  %179 = getelementptr inbounds [29 x i32], [29 x i32]* %13, i64 0, i64 %175
  %180 = load i32, i32* %179, align 8
  br i1 %178, label %183, label %181

181:                                              ; preds = %174
  %182 = add nsw i32 %180, 1
  store i32 %182, i32* %179, align 8
  br label %183

183:                                              ; preds = %181, %174
  %184 = phi i32 [ %182, %181 ], [ %180, %174 ]
  %185 = icmp eq i32 %184, 3
  %186 = or i64 %175, 1
  br i1 %185, label %187, label %172

187:                                              ; preds = %155, %183, %548
  call void @llvm.lifetime.end.p0i8(i64 116, i8* nonnull %61) #11
  br label %189

188:                                              ; preds = %172
  call void @llvm.lifetime.end.p0i8(i64 116, i8* nonnull %61) #11
  br label %192

189:                                              ; preds = %54, %187
  %190 = load i64, i64* %36, align 8
  %191 = or i64 %190, 8192
  store i64 %191, i64* %36, align 8
  br label %192

192:                                              ; preds = %188, %46, %189
  %193 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %193) #11
  %194 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %30, i64 0, i32 7
  %195 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %194, align 8
  %196 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %196) #11
  store i64 -6148914691236517206, i64* %12, align 8
  %197 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 3, i32 11
  %198 = bitcast %struct.FT_Generic_* %197 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %199 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %198, align 8
  %200 = call i32 %199(%struct.TT_FaceRec_* %14, i64 1751412088, %struct.FT_StreamRec_* %30, i64* nonnull %12) #11
  store i32 %200, i32* %11, align 4
  %201 = icmp ne i32 %200, 0
  %202 = load i64, i64* %12, align 8
  %203 = icmp ult i64 %202, 8
  %204 = or i1 %201, %203
  br i1 %204, label %205, label %206

205:                                              ; preds = %192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %193) #11
  br label %290

206:                                              ; preds = %192
  %207 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 5, i32 5
  %208 = call i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_* %30, i64 %202, i8** %207) #11
  store i32 %208, i32* %11, align 4
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %211, label %210

210:                                              ; preds = %206
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %193) #11
  br label %538

211:                                              ; preds = %206
  %212 = load i8*, i8** %207, align 8
  %213 = load i64, i64* %12, align 8
  %214 = getelementptr inbounds i8, i8* %212, i64 %213
  %215 = getelementptr inbounds i8, i8* %212, i64 2
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i32
  %218 = shl nuw nsw i32 %217, 8
  %219 = getelementptr inbounds i8, i8* %212, i64 3
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = or i32 %218, %221
  %223 = getelementptr inbounds i8, i8* %212, i64 8
  %224 = getelementptr inbounds i8, i8* %212, i64 4
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i64
  %227 = shl nuw nsw i64 %226, 24
  %228 = getelementptr inbounds i8, i8* %212, i64 5
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i64
  %231 = shl nuw nsw i64 %230, 16
  %232 = or i64 %231, %227
  %233 = getelementptr inbounds i8, i8* %212, i64 6
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i64
  %236 = shl nuw nsw i64 %235, 8
  %237 = or i64 %232, %236
  %238 = getelementptr inbounds i8, i8* %212, i64 7
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i64
  %241 = or i64 %237, %240
  %242 = icmp ugt i64 %241, 4294901759
  %243 = and i64 %241, 65535
  %244 = select i1 %242, i64 %243, i64 %241
  %245 = icmp ugt i32 %222, 255
  br i1 %245, label %251, label %246

246:                                              ; preds = %211
  %247 = icmp ne i32 %222, 0
  %248 = add nsw i64 %244, -4
  %249 = icmp ugt i64 %248, 65533
  %250 = and i1 %247, %249
  br i1 %250, label %251, label %252

251:                                              ; preds = %246, %211
  store i32 3, i32* %11, align 4
  br label %284

252:                                              ; preds = %246
  %253 = zext i32 %222 to i64
  %254 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %195, i64 1, i64 0, i64 %253, i8* null, i32* nonnull %11) #11
  %255 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 5, i32 9
  %256 = bitcast i32* %255 to i8**
  store i8* %254, i8** %256, align 8
  %257 = load i32, i32* %11, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %284

259:                                              ; preds = %252
  %260 = icmp eq i32 %222, 0
  br i1 %260, label %276, label %261

261:                                              ; preds = %259, %267
  %262 = phi i64 [ %271, %267 ], [ 0, %259 ]
  %263 = phi i8* [ %265, %267 ], [ %223, %259 ]
  %264 = phi i32 [ %272, %267 ], [ 0, %259 ]
  %265 = getelementptr inbounds i8, i8* %263, i64 %244
  %266 = icmp ugt i8* %265, %214
  br i1 %266, label %274, label %267

267:                                              ; preds = %261
  %268 = load i8, i8* %263, align 1
  %269 = load i8*, i8** %256, align 8
  %270 = getelementptr inbounds i8, i8* %269, i64 %262
  store i8 %268, i8* %270, align 1
  %271 = add nuw nsw i64 %262, 1
  %272 = add nuw nsw i32 %264, 1
  %273 = icmp eq i64 %271, %253
  br i1 %273, label %276, label %261

274:                                              ; preds = %261
  %275 = trunc i64 %262 to i32
  br label %276

276:                                              ; preds = %267, %274, %259
  %277 = phi i32 [ 0, %259 ], [ %275, %274 ], [ %272, %267 ]
  %278 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 5, i32 7
  store i32 %277, i32* %278, align 8
  %279 = load i64, i64* %12, align 8
  %280 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 5, i32 6
  %281 = bitcast i8** %280 to i64*
  store i64 %279, i64* %281, align 8
  %282 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 5, i32 8
  %283 = bitcast %struct.FT_Bitmap_Size_** %282 to i64*
  store i64 %244, i64* %283, align 8
  br label %287

284:                                              ; preds = %252, %251
  call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %30, i8** %207) #11
  %285 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 5, i32 6
  %286 = bitcast i8** %285 to i64*
  store i64 0, i64* %286, align 8
  br label %287

287:                                              ; preds = %276, %284
  %288 = load i32, i32* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %193) #11
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %538

290:                                              ; preds = %205, %287
  %291 = load i64, i64* %36, align 8
  %292 = and i64 %291, 1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %516, label %294

294:                                              ; preds = %290
  %295 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 30
  %296 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %295, align 8
  %297 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %296, i64 0, i32 4
  %298 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %297, align 8
  %299 = icmp eq %struct.FT_Incremental_InterfaceRec_* %298, null
  br i1 %299, label %300, label %415

300:                                              ; preds = %294
  %301 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %301) #11
  store i64 -6148914691236517206, i64* %10, align 8
  %302 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %198, align 8
  %303 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 4, i32 27
  %304 = bitcast %struct.FT_ListRec_* %303 to i64*
  %305 = call i32 %302(%struct.TT_FaceRec_* %14, i64 1735162214, %struct.FT_StreamRec_* %30, i64* %304) #11
  %306 = and i32 %305, 255
  %307 = icmp eq i32 %306, 142
  br i1 %307, label %308, label %310

308:                                              ; preds = %300
  %309 = bitcast %struct.FT_ListRec_* %303 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %309, i8 0, i64 16, i1 false) #11
  br label %324

310:                                              ; preds = %300
  %311 = icmp eq i32 %305, 0
  br i1 %311, label %312, label %406

312:                                              ; preds = %310
  %313 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %295, align 8
  %314 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %313, i64 0, i32 4
  %315 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %314, align 8
  %316 = icmp eq %struct.FT_Incremental_InterfaceRec_* %315, null
  br i1 %316, label %320, label %317

317:                                              ; preds = %312
  %318 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 4, i32 27, i32 1
  %319 = bitcast %struct.FT_ListNodeRec_** %318 to i64*
  store i64 0, i64* %319, align 8
  br label %324

320:                                              ; preds = %312
  %321 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %30) #11
  %322 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 4, i32 27, i32 1
  %323 = bitcast %struct.FT_ListNodeRec_** %322 to i64*
  store i64 %321, i64* %323, align 8
  br label %324

324:                                              ; preds = %320, %317, %308
  %325 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %198, align 8
  %326 = call i32 %325(%struct.TT_FaceRec_* %14, i64 1819239265, %struct.FT_StreamRec_* %30, i64* nonnull %10) #11
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %406

328:                                              ; preds = %324
  %329 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 16
  %330 = load i16, i16* %329, align 2
  %331 = icmp eq i16 %330, 0
  %332 = load i64, i64* %10, align 8
  br i1 %331, label %339, label %333

333:                                              ; preds = %328
  %334 = icmp ugt i64 %332, 262143
  br i1 %334, label %335, label %336

335:                                              ; preds = %333
  store i64 262143, i64* %10, align 8
  br label %336

336:                                              ; preds = %335, %333
  %337 = phi i64 [ 262143, %335 ], [ %332, %333 ]
  %338 = lshr i64 %337, 2
  br label %345

339:                                              ; preds = %328
  %340 = icmp ugt i64 %332, 131071
  br i1 %340, label %341, label %342

341:                                              ; preds = %339
  store i64 131071, i64* %10, align 8
  br label %342

342:                                              ; preds = %341, %339
  %343 = phi i64 [ 131071, %341 ], [ %332, %339 ]
  %344 = lshr i64 %343, 1
  br label %345

345:                                              ; preds = %342, %336
  %346 = phi i64 [ %344, %342 ], [ %338, %336 ]
  %347 = phi i64 [ %343, %342 ], [ %337, %336 ]
  %348 = phi i64 [ 1, %342 ], [ 2, %336 ]
  %349 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 5, i32 3
  store i64 %346, i64* %349, align 8
  %350 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 5, i32 3
  %351 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 4
  %352 = load i64, i64* %351, align 8
  %353 = add i64 %352, 1
  %354 = icmp eq i64 %346, %353
  %355 = icmp ugt i64 %346, %352
  %356 = or i1 %355, %354
  br i1 %356, label %401, label %357

357:                                              ; preds = %345
  %358 = shl i64 %353, %348
  %359 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 6
  %360 = bitcast i8** %359 to %struct.TT_TableRec_**
  %361 = load %struct.TT_TableRec_*, %struct.TT_TableRec_** %360, align 8
  %362 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 5
  %363 = bitcast i8** %362 to i16*
  %364 = load i16, i16* %363, align 8
  %365 = zext i16 %364 to i64
  %366 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %361, i64 %365
  %367 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %30) #11
  %368 = icmp eq i16 %364, 0
  br i1 %368, label %385, label %369

369:                                              ; preds = %357, %369
  %370 = phi i8 [ %380, %369 ], [ 0, %357 ]
  %371 = phi i64 [ %379, %369 ], [ 2147483647, %357 ]
  %372 = phi %struct.TT_TableRec_* [ %381, %369 ], [ %361, %357 ]
  %373 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %372, i64 0, i32 2
  %374 = load i64, i64* %373, align 8
  %375 = sub nsw i64 %374, %367
  %376 = icmp sgt i64 %375, 0
  %377 = icmp slt i64 %375, %371
  %378 = and i1 %376, %377
  %379 = select i1 %378, i64 %375, i64 %371
  %380 = select i1 %378, i8 1, i8 %370
  %381 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %372, i64 1
  %382 = icmp ult %struct.TT_TableRec_* %381, %366
  br i1 %382, label %369, label %383

383:                                              ; preds = %369
  %384 = icmp eq i8 %380, 0
  br i1 %384, label %385, label %389

385:                                              ; preds = %383, %357
  %386 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %30, i64 0, i32 1
  %387 = load i64, i64* %386, align 8
  %388 = sub nsw i64 %387, %367
  br label %389

389:                                              ; preds = %385, %383
  %390 = phi i64 [ %379, %383 ], [ %388, %385 ]
  %391 = icmp ugt i64 %358, %390
  br i1 %391, label %395, label %392

392:                                              ; preds = %389
  %393 = load i64, i64* %351, align 8
  %394 = add i64 %393, 1
  store i64 %394, i64* %350, align 8
  store i64 %358, i64* %10, align 8
  br label %401

395:                                              ; preds = %389
  %396 = load i64, i64* %350, align 8
  %397 = icmp eq i64 %396, 0
  %398 = add nsw i64 %396, -1
  %399 = select i1 %397, i64 0, i64 %398
  store i64 %399, i64* %351, align 8
  %400 = load i64, i64* %10, align 8
  br label %401

401:                                              ; preds = %395, %392, %345
  %402 = phi i64 [ %358, %392 ], [ %400, %395 ], [ %347, %345 ]
  %403 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 5, i32 4
  %404 = bitcast i64* %403 to i8**
  %405 = call i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_* %30, i64 %402, i8** %404) #11
  br label %406

406:                                              ; preds = %310, %324, %401
  %407 = phi i32 [ %405, %401 ], [ %305, %310 ], [ 144, %324 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %301) #11
  %408 = load i64, i64* %304, align 8
  %409 = icmp eq i64 %408, 0
  %410 = and i32 %407, 255
  %411 = icmp ne i32 %410, 142
  %412 = or i1 %411, %409
  %413 = icmp eq i32 %407, 0
  %414 = and i1 %413, %412
  br i1 %414, label %415, label %538

415:                                              ; preds = %406, %294
  %416 = call fastcc i32 @tt_face_load_cvt(%struct.TT_FaceRec_* %14, %struct.FT_StreamRec_* %30)
  %417 = icmp eq i32 %416, 0
  %418 = and i32 %416, 255
  %419 = icmp eq i32 %418, 142
  %420 = or i1 %417, %419
  br i1 %420, label %421, label %538

421:                                              ; preds = %415
  %422 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %422) #11
  store i64 -6148914691236517206, i64* %9, align 8
  %423 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %198, align 8
  %424 = call i32 %423(%struct.TT_FaceRec_* %14, i64 1718642541, %struct.FT_StreamRec_* %30, i64* nonnull %9) #11
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %429, label %426

426:                                              ; preds = %421
  %427 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 4, i32 12, i32 2
  %428 = bitcast i64* %427 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %428, i8 0, i64 16, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %422) #11
  br label %439

429:                                              ; preds = %421
  %430 = load i64, i64* %9, align 8
  %431 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 4, i32 12, i32 2
  store i64 %430, i64* %431, align 8
  %432 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 4, i32 12, i32 3
  %433 = bitcast i64* %432 to i8**
  %434 = call i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_* %30, i64 %430, i8** %433) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %422) #11
  %435 = icmp eq i32 %434, 0
  %436 = and i32 %434, 255
  %437 = icmp eq i32 %436, 142
  %438 = or i1 %435, %437
  br i1 %438, label %439, label %538

439:                                              ; preds = %426, %429
  %440 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %440) #11
  store i64 -6148914691236517206, i64* %8, align 8
  %441 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %198, align 8
  %442 = call i32 %441(%struct.TT_FaceRec_* %14, i64 1886545264, %struct.FT_StreamRec_* %30, i64* nonnull %8) #11
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %447, label %444

444:                                              ; preds = %439
  %445 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 4, i32 13
  %446 = bitcast i16* %445 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %446, i8 0, i64 16, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %440) #11
  br label %458

447:                                              ; preds = %439
  %448 = load i64, i64* %8, align 8
  %449 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 4, i32 13
  %450 = bitcast i16* %449 to i64*
  store i64 %448, i64* %450, align 8
  %451 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 4, i32 17
  %452 = bitcast i16* %451 to i8**
  %453 = call i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_* %30, i64 %448, i8** %452) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %440) #11
  %454 = icmp eq i32 %453, 0
  %455 = and i32 %453, 255
  %456 = icmp eq i32 %455, 142
  %457 = or i1 %454, %456
  br i1 %457, label %458, label %538

458:                                              ; preds = %444, %447
  %459 = phi i32 [ 0, %444 ], [ %453, %447 ]
  %460 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %295, align 8
  %461 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %460, i64 0, i32 4
  %462 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %461, align 8
  %463 = icmp eq %struct.FT_Incremental_InterfaceRec_* %462, null
  br i1 %463, label %464, label %516

464:                                              ; preds = %458
  %465 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 7
  %466 = load i32, i32* %465, align 8
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %516, label %468

468:                                              ; preds = %464
  %469 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 5, i32 4
  %470 = bitcast i64* %469 to i8**
  %471 = load i8*, i8** %470, align 8
  %472 = icmp eq i8* %471, null
  br i1 %472, label %516, label %473

473:                                              ; preds = %468
  %474 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %474) #11
  store i32 -1431655766, i32* %6, align 4
  %475 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 5, i32 3
  %476 = load i64, i64* %475, align 8
  %477 = icmp eq i64 %476, 0
  br i1 %477, label %509, label %478

478:                                              ; preds = %473, %489
  %479 = phi i32 [ %491, %489 ], [ 0, %473 ]
  %480 = phi i64 [ %490, %489 ], [ 0, %473 ]
  %481 = phi i64 [ %492, %489 ], [ 0, %473 ]
  %482 = trunc i64 %481 to i32
  %483 = call i64 @tt_face_get_location(%struct.TT_FaceRec_* %14, i32 %482, i32* nonnull %6) #11
  %484 = load i32, i32* %6, align 4
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %489, label %486

486:                                              ; preds = %478
  %487 = add i32 %479, 1
  %488 = icmp ugt i32 %487, 1
  br i1 %488, label %509, label %489

489:                                              ; preds = %486, %478
  %490 = phi i64 [ %480, %478 ], [ %481, %486 ]
  %491 = phi i32 [ %479, %478 ], [ %487, %486 ]
  %492 = add nuw i64 %481, 1
  %493 = load i64, i64* %475, align 8
  %494 = icmp ult i64 %492, %493
  br i1 %494, label %478, label %495

495:                                              ; preds = %489
  %496 = icmp eq i32 %491, 1
  br i1 %496, label %497, label %509

497:                                              ; preds = %495
  %498 = icmp eq i64 %490, 0
  br i1 %498, label %499, label %500

499:                                              ; preds = %497
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %474) #11
  br label %513

500:                                              ; preds = %497
  %501 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %501) #11
  %502 = trunc i64 %490 to i32
  store i64 -6148914691236517206, i64* %7, align 8
  %503 = call i32 @FT_Get_Glyph_Name(%struct.FT_FaceRec_* %1, i32 %502, i8* nonnull %501, i32 8) #11
  %504 = icmp eq i32 %503, 0
  %505 = load i8, i8* %501, align 8
  %506 = icmp eq i8 %505, 46
  %507 = and i1 %504, %506
  br i1 %507, label %510, label %508

508:                                              ; preds = %500
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %501) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %474) #11
  br label %516

509:                                              ; preds = %486, %495, %473
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %474) #11
  br label %516

510:                                              ; preds = %500
  %511 = load i64, i64* %7, align 8
  %512 = icmp eq i64 %511, 28821929749081646
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %501) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %474) #11
  br i1 %512, label %513, label %516

513:                                              ; preds = %510, %499
  %514 = load i64, i64* %36, align 8
  %515 = and i64 %514, -2
  store i64 %515, i64* %36, align 8
  br label %516

516:                                              ; preds = %510, %508, %509, %468, %464, %458, %290, %513
  %517 = phi i32 [ %459, %458 ], [ %459, %513 ], [ %459, %510 ], [ %459, %468 ], [ %459, %464 ], [ 0, %290 ], [ %459, %509 ], [ %459, %508 ]
  %518 = lshr i32 %2, 16
  %519 = load i64, i64* %36, align 8
  %520 = and i64 %519, 256
  %521 = icmp ne i64 %520, 0
  %522 = icmp ne i32 %518, 0
  %523 = and i1 %522, %521
  br i1 %523, label %524, label %528

524:                                              ; preds = %516
  %525 = call i32 @TT_Set_Named_Instance(%struct.TT_FaceRec_* %14, i32 %518)
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %527, label %538

527:                                              ; preds = %524
  call void @tt_apply_mvar(%struct.TT_FaceRec_* %14)
  br label %528

528:                                              ; preds = %527, %516
  %529 = phi i32 [ %517, %516 ], [ 0, %527 ]
  %530 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 3, i32 11, i32 1
  %531 = bitcast void (i8*)** %530 to i32 (%struct.TT_LoaderRec_*, i32, i64, i32)**
  store i32 (%struct.TT_LoaderRec_*, i32, i64, i32)* @TT_Access_Glyph_Frame, i32 (%struct.TT_LoaderRec_*, i32, i64, i32)** %531, align 8
  %532 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 3, i32 12, i32 1
  %533 = bitcast i64* %532 to <2 x i32 (%struct.TT_LoaderRec_*)*>*
  store <2 x i32 (%struct.TT_LoaderRec_*)*> <i32 (%struct.TT_LoaderRec_*)* @TT_Load_Glyph_Header, i32 (%struct.TT_LoaderRec_*)* @TT_Load_Simple_Glyph>, <2 x i32 (%struct.TT_LoaderRec_*)*>* %533, align 8
  %534 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 3, i32 12, i32 3
  %535 = bitcast i64* %534 to i32 (%struct.TT_LoaderRec_*)**
  store i32 (%struct.TT_LoaderRec_*)* @TT_Load_Composite_Glyph, i32 (%struct.TT_LoaderRec_*)** %535, align 8
  %536 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 3, i32 12
  %537 = bitcast %struct.FT_BBox_* %536 to void (%struct.TT_LoaderRec_*)**
  store void (%struct.TT_LoaderRec_*)* @TT_Forget_Glyph_Frame, void (%struct.TT_LoaderRec_*)** %537, align 8
  br label %538

538:                                              ; preds = %524, %210, %32, %528, %21, %24, %40, %287, %5, %406, %415, %429, %447, %35
  %539 = phi i32 [ 0, %35 ], [ %22, %21 ], [ %28, %24 ], [ %44, %40 ], [ %288, %287 ], [ %529, %528 ], [ 11, %5 ], [ %407, %406 ], [ %416, %415 ], [ %434, %429 ], [ %453, %447 ], [ 2, %32 ], [ %208, %210 ], [ %525, %524 ]
  ret i32 %539

540:                                              ; preds = %172
  %541 = add nsw i64 %175, -15
  %542 = icmp ugt i64 %541, 11
  %543 = or i1 %73, %542
  %544 = getelementptr inbounds [29 x i32], [29 x i32]* %13, i64 0, i64 %186
  %545 = load i32, i32* %544, align 4
  br i1 %543, label %548, label %546

546:                                              ; preds = %540
  %547 = add nsw i32 %545, 1
  store i32 %547, i32* %544, align 4
  br label %548

548:                                              ; preds = %546, %540
  %549 = phi i32 [ %547, %546 ], [ %545, %540 ]
  %550 = icmp eq i32 %549, 3
  br i1 %550, label %187, label %551

551:                                              ; preds = %548
  %552 = add nuw nsw i64 %175, 2
  br label %174
}

; Function Attrs: nounwind ssp uwtable
define internal void @tt_face_done(%struct.FT_FaceRec_*) #2 {
  %2 = bitcast %struct.FT_FaceRec_* %0 to %struct.TT_FaceRec_*
  %3 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %3, label %51, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 25
  %6 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 26
  %8 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 13
  %10 = bitcast i16* %9 to %struct.SFNT_Interface_**
  %11 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %10, align 8
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 24
  %13 = getelementptr inbounds %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %12, i64 1
  %14 = bitcast %struct.FT_DriverRec_** %13 to void (i8*)**
  %15 = load void (i8*)*, void (i8*)** %14, align 8
  %16 = icmp eq void (i8*)* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %4
  %18 = bitcast %struct.FT_DriverRec_** %12 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void %15(i8* %19) #11
  br label %20

20:                                               ; preds = %4, %17
  %21 = icmp eq %struct.SFNT_Interface_* %11, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %11, i64 0, i32 3
  %24 = load void (%struct.TT_FaceRec_*)*, void (%struct.TT_FaceRec_*)** %23, align 8
  tail call void %24(%struct.TT_FaceRec_* nonnull %2) #11
  br label %25

25:                                               ; preds = %20, %22
  %26 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %7, align 8
  %27 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 5, i32 4
  %28 = bitcast i64* %27 to i8**
  tail call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %26, i8** %28) #11
  %29 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 5, i32 3
  store i64 0, i64* %29, align 8
  %30 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %7, align 8
  %31 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %30, i64 0, i32 7
  %32 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %31, align 8
  %33 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 5, i32 9
  %34 = bitcast i32* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %32, i8* %35) #11
  store i8* null, i8** %34, align 8
  %36 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 5, i32 5
  tail call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %30, i8** %36) #11
  %37 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 22
  %38 = bitcast %struct.FT_SizeRec_** %37 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %39) #11
  %40 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 21
  %41 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 12, i32 3
  %42 = bitcast i64* %41 to i8**
  %43 = bitcast %struct.FT_GlyphSlotRec_** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false)
  tail call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %8, i8** %42) #11
  %44 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 17
  %45 = bitcast i16* %44 to i8**
  tail call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %8, i8** %45) #11
  %46 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 12, i32 2
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 13
  %48 = bitcast i16* %47 to i64*
  store i64 0, i64* %48, align 8
  tail call void @tt_done_blend(%struct.TT_FaceRec_* nonnull %2)
  %49 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 28, i32 1
  %50 = bitcast void (i8*)** %49 to %struct.GX_BlendRec_**
  store %struct.GX_BlendRec_* null, %struct.GX_BlendRec_** %50, align 8
  br label %51

51:                                               ; preds = %1, %25
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal i32 @tt_size_init(%struct.FT_SizeRec_* nocapture) #0 {
  %2 = bitcast %struct.FT_SizeRec_* %0 to %struct.TT_SizeRec_*
  %3 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 6, i32 1
  %4 = bitcast %struct.FT_Generic_* %3 to i32*
  store i32 -1, i32* %4, align 8
  %5 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 23
  store i32 -1, i32* %5, align 4
  %6 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 1, i32 2, i32 6
  %7 = getelementptr inbounds i64, i64* %6, i64 9
  %8 = bitcast i64* %7 to i8*
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 2, i32 2, i32 5
  store i64 4294967295, i64* %9, align 8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal void @tt_size_done(%struct.FT_SizeRec_* nocapture) #2 {
  tail call fastcc void @tt_size_done_bytecode(%struct.FT_SizeRec_* %0)
  %2 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 1, i32 2, i32 6
  %3 = getelementptr inbounds i64, i64* %2, i64 9
  %4 = bitcast i64* %3 to i8*
  store i8 0, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_slot_init(%struct.FT_GlyphSlotRec_* nocapture readonly) #2 {
  %2 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 21
  %3 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %2, align 8
  %4 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %3, i64 0, i32 0
  %5 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %4, align 8
  %6 = tail call i32 @FT_GlyphLoader_CreateExtra(%struct.FT_GlyphLoaderRec_* %5) #11
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_glyph_load(%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32) #2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.FT_BBox_, align 8
  %8 = alloca %struct.FT_Incremental_MetricsRec_, align 8
  %9 = alloca %struct.TT_SBit_MetricsRec_, align 4
  %10 = alloca %struct.TT_LoaderRec_, align 8
  %11 = alloca i16, align 2
  %12 = alloca i16, align 2
  %13 = alloca i16, align 2
  %14 = alloca i16, align 2
  %15 = bitcast %struct.FT_SizeRec_* %1 to %struct.TT_SizeRec_*
  %16 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 1
  %17 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %16, align 8
  %18 = icmp eq %struct.FT_GlyphSlotRec_* %0, null
  br i1 %18, label %1062, label %19

19:                                               ; preds = %4
  %20 = icmp eq %struct.FT_SizeRec_* %1, null
  br i1 %20, label %1062, label %21

21:                                               ; preds = %19
  %22 = icmp eq %struct.FT_FaceRec_* %17, null
  br i1 %22, label %1062, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %17, i64 0, i32 4
  %25 = load i64, i64* %24, align 8
  %26 = trunc i64 %25 to i32
  %27 = icmp ugt i32 %26, %2
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %17, i64 0, i32 30
  %30 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %29, align 8
  %31 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %30, i64 0, i32 4
  %32 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %31, align 8
  %33 = icmp eq %struct.FT_Incremental_InterfaceRec_* %32, null
  br i1 %33, label %1062, label %34

34:                                               ; preds = %28, %23
  %35 = and i32 %3, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %17, i64 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, 8192
  %41 = icmp eq i64 %40, 0
  %42 = and i32 %3, -3
  %43 = select i1 %41, i32 %3, i32 %42
  %44 = lshr i32 %43, 14
  %45 = and i32 %44, 2
  %46 = or i32 %45, %43
  br label %47

47:                                               ; preds = %37, %34
  %48 = phi i32 [ %3, %34 ], [ %46, %37 ]
  %49 = and i32 %48, 1025
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %58, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %17, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = and i64 %53, 8192
  %55 = icmp eq i64 %54, 0
  %56 = select i1 %55, i32 11, i32 9
  %57 = or i32 %56, %48
  br label %58

58:                                               ; preds = %51, %47
  %59 = phi i32 [ %48, %47 ], [ %57, %51 ]
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 0, i32 2
  %63 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 1, i32 1
  %64 = bitcast %struct.FT_Generic_* %63 to %struct.FT_Size_Metrics_*
  %65 = select i1 %61, %struct.FT_Size_Metrics_* %64, %struct.FT_Size_Metrics_* %62
  %66 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 1
  %67 = bitcast %struct.FT_SizeRec_* %66 to %struct.FT_Size_Metrics_**
  store %struct.FT_Size_Metrics_* %65, %struct.FT_Size_Metrics_** %67, align 8
  %68 = bitcast %struct.TT_LoaderRec_* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 376, i8* nonnull %68) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 376, i1 false) #11
  %69 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 2, i32 2, i32 5
  %70 = load i64, i64* %69, align 8
  %71 = icmp ne i64 %70, 4294967295
  %72 = and i32 %59, 8
  %73 = icmp eq i32 %72, 0
  %74 = and i1 %73, %71
  br i1 %74, label %75, label %332

75:                                               ; preds = %58
  %76 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %16, align 8
  %77 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %76, i64 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = and i64 %78, 2147418112
  %80 = icmp eq i64 %79, 0
  %81 = bitcast %struct.FT_FaceRec_* %76 to %struct.TT_FaceRec_*
  br i1 %80, label %82, label %332

82:                                               ; preds = %75
  %83 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %76, i64 0, i32 2
  %84 = load i64, i64* %83, align 8
  %85 = trunc i64 %84 to i16
  %86 = icmp slt i16 %85, 0
  br i1 %86, label %332, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 0, i32 2, i32 2
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 0, i32 2, i32 3
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %struct.TT_SBit_MetricsRec_* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %92, i8 -86, i64 16, i1 false) #11
  %93 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %76, i64 3, i32 13
  %94 = bitcast i16* %93 to %struct.SFNT_Interface_**
  %95 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %94, align 8
  %96 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %76, i64 0, i32 26
  %97 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %96, align 8
  %98 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %95, i64 0, i32 18
  %99 = load i32 (%struct.TT_FaceRec_*, i64, i32, i32, %struct.FT_StreamRec_*, %struct.FT_Bitmap_*, %struct.TT_SBit_MetricsRec_*)*, i32 (%struct.TT_FaceRec_*, i64, i32, i32, %struct.FT_StreamRec_*, %struct.FT_Bitmap_*, %struct.TT_SBit_MetricsRec_*)** %98, align 8
  %100 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10
  %101 = call i32 %99(%struct.TT_FaceRec_* %81, i64 %70, i32 %2, i32 %59, %struct.FT_StreamRec_* %97, %struct.FT_Bitmap_* %100, %struct.TT_SBit_MetricsRec_* nonnull %9) #11
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %157

103:                                              ; preds = %87
  %104 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %9, i64 0, i32 7
  %105 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %9, i64 0, i32 6
  %106 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %9, i64 0, i32 5
  %107 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %9, i64 0, i32 4
  %108 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %9, i64 0, i32 3
  %109 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %9, i64 0, i32 2
  %110 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13, i32 1
  store i16 0, i16* %110, align 2
  %111 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13, i32 0
  store i16 0, i16* %111, align 8
  %112 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 0
  %113 = bitcast %struct.TT_SBit_MetricsRec_* %9 to <2 x i16>*
  %114 = load <2 x i16>, <2 x i16>* %113, align 4
  %115 = shufflevector <2 x i16> %114, <2 x i16> undef, <2 x i32> <i32 1, i32 0>
  %116 = zext <2 x i16> %115 to <2 x i64>
  %117 = shl nuw nsw <2 x i64> %116, <i64 6, i64 6>
  %118 = bitcast i64* %112 to <2 x i64>*
  store <2 x i64> %117, <2 x i64>* %118, align 8
  %119 = load i16, i16* %109, align 4
  %120 = sext i16 %119 to i64
  %121 = shl nsw i64 %120, 6
  %122 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 2
  store i64 %121, i64* %122, align 8
  %123 = load i16, i16* %108, align 2
  %124 = sext i16 %123 to i64
  %125 = shl nsw i64 %124, 6
  %126 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 3
  store i64 %125, i64* %126, align 8
  %127 = load i16, i16* %107, align 4
  %128 = zext i16 %127 to i64
  %129 = shl nuw nsw i64 %128, 6
  %130 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 4
  store i64 %129, i64* %130, align 8
  %131 = load i16, i16* %106, align 2
  %132 = sext i16 %131 to i64
  %133 = shl nsw i64 %132, 6
  %134 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 5
  store i64 %133, i64* %134, align 8
  %135 = load i16, i16* %105, align 4
  %136 = sext i16 %135 to i64
  %137 = shl nsw i64 %136, 6
  %138 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 6
  store i64 %137, i64* %138, align 8
  %139 = load i16, i16* %104, align 2
  %140 = zext i16 %139 to i64
  %141 = shl nuw nsw i64 %140, 6
  %142 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 7
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 9
  store i32 1651078259, i32* %143, align 8
  %144 = and i32 %59, 16
  %145 = icmp eq i32 %144, 0
  %146 = select i1 %145, i16 %119, i16 %131
  %147 = select i1 %145, i16 %123, i16 %135
  %148 = sext i16 %147 to i32
  %149 = sext i16 %146 to i32
  %150 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 11
  store i32 %149, i32* %150, align 8
  %151 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 12
  store i32 %148, i32* %151, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #11
  %152 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %16, align 8
  %153 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %152, i64 0, i32 2
  %154 = load i64, i64* %153, align 8
  %155 = and i64 %154, 1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %1060, label %275

157:                                              ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #11
  %158 = and i32 %101, 255
  %159 = icmp eq i32 %158, 157
  %160 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %16, align 8
  %161 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %160, i64 0, i32 2
  %162 = load i64, i64* %161, align 8
  %163 = and i64 %162, 1
  %164 = icmp eq i64 %163, 0
  br i1 %159, label %165, label %274

165:                                              ; preds = %157
  br i1 %164, label %166, label %332

166:                                              ; preds = %165
  %167 = bitcast %struct.FT_FaceRec_* %160 to %struct.TT_FaceRec_*
  %168 = bitcast i16* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %168) #11
  store i16 0, i16* %11, align 2
  %169 = bitcast i16* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %169) #11
  store i16 0, i16* %12, align 2
  %170 = bitcast i16* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %170) #11
  store i16 0, i16* %13, align 2
  %171 = bitcast i16* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %171) #11
  store i16 0, i16* %14, align 2
  %172 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %160, i64 5, i32 1
  %173 = load i64, i64* %172, align 8
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %272, label %175

175:                                              ; preds = %166
  %176 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %160, i64 3, i32 13
  %177 = bitcast i16* %176 to %struct.SFNT_Interface_**
  %178 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %177, align 8
  %179 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %178, i64 0, i32 39
  %180 = load void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)*, void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)** %179, align 8
  call void %180(%struct.TT_FaceRec_* %167, i8 zeroext 0, i32 %2, i16* nonnull %11, i16* nonnull %13) #11
  %181 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %160, i64 2
  %182 = bitcast %struct.FT_FaceRec_* %181 to i8*
  %183 = load i8, i8* %182, align 8
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %191, label %185

185:                                              ; preds = %175
  %186 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %177, align 8
  %187 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %186, i64 0, i32 39
  %188 = load void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)*, void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)** %187, align 8
  call void %188(%struct.TT_FaceRec_* %167, i8 zeroext 1, i32 %2, i16* nonnull %12, i16* nonnull %14) #11
  %189 = load i16, i16* %12, align 2
  %190 = load i16, i16* %14, align 2
  br label %221

191:                                              ; preds = %175
  %192 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %160, i64 2, i32 12, i32 2
  %193 = bitcast i64* %192 to i16*
  %194 = load i16, i16* %193, align 8
  %195 = icmp eq i16 %194, -1
  br i1 %195, label %208, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %167, i64 0, i32 12, i32 25
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %12, align 2
  %199 = sext i16 %198 to i32
  %200 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %167, i64 0, i32 12, i32 26
  %201 = load i16, i16* %200, align 4
  %202 = sext i16 %201 to i32
  %203 = sub nsw i32 %199, %202
  %204 = icmp slt i32 %203, 0
  %205 = sub nsw i32 0, %203
  %206 = select i1 %204, i32 %205, i32 %203
  %207 = trunc i32 %206 to i16
  store i16 %207, i16* %14, align 2
  br label %221

208:                                              ; preds = %191
  %209 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %160, i64 1, i32 22
  %210 = bitcast %struct.FT_SizeRec_** %209 to i16*
  %211 = load i16, i16* %210, align 8
  store i16 %211, i16* %12, align 2
  %212 = sext i16 %211 to i32
  %213 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %167, i64 0, i32 6, i32 2
  %214 = load i16, i16* %213, align 2
  %215 = sext i16 %214 to i32
  %216 = sub nsw i32 %212, %215
  %217 = icmp slt i32 %216, 0
  %218 = sub nsw i32 0, %216
  %219 = select i1 %217, i32 %218, i32 %216
  %220 = trunc i32 %219 to i16
  store i16 %220, i16* %14, align 2
  br label %221

221:                                              ; preds = %208, %196, %185
  %222 = phi i16 [ %190, %185 ], [ %207, %196 ], [ %220, %208 ]
  %223 = phi i16 [ %189, %185 ], [ %198, %196 ], [ %211, %208 ]
  %224 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13, i32 1
  store i16 0, i16* %224, align 2
  %225 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13, i32 0
  store i16 0, i16* %225, align 8
  %226 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 0
  %227 = bitcast i64* %226 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %227, i8 0, i64 16, i1 false) #11
  %228 = load i16, i16* %11, align 2
  %229 = sext i16 %228 to i64
  %230 = shl i64 %89, 32
  %231 = ashr exact i64 %230, 32
  %232 = mul nsw i64 %231, %229
  %233 = ashr i64 %232, 63
  %234 = add nsw i64 %232, 32768
  %235 = add nsw i64 %234, %233
  %236 = shl i64 %235, 16
  %237 = ashr i64 %236, 32
  %238 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 2
  store i64 %237, i64* %238, align 8
  %239 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 3
  store i64 0, i64* %239, align 8
  %240 = load i16, i16* %13, align 2
  %241 = zext i16 %240 to i64
  %242 = mul nsw i64 %231, %241
  %243 = ashr i64 %242, 63
  %244 = add nsw i64 %242, 32768
  %245 = add nsw i64 %244, %243
  %246 = shl i64 %245, 16
  %247 = ashr i64 %246, 32
  %248 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 4
  store i64 %247, i64* %248, align 8
  %249 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 5
  store i64 0, i64* %249, align 8
  %250 = sext i16 %223 to i64
  %251 = shl i64 %91, 32
  %252 = ashr exact i64 %251, 32
  %253 = mul nsw i64 %252, %250
  %254 = ashr i64 %253, 63
  %255 = add nsw i64 %253, 32768
  %256 = add nsw i64 %255, %254
  %257 = shl i64 %256, 16
  %258 = ashr i64 %257, 32
  %259 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 6
  store i64 %258, i64* %259, align 8
  %260 = zext i16 %222 to i64
  %261 = mul nsw i64 %252, %260
  %262 = ashr i64 %261, 63
  %263 = add nsw i64 %261, 32768
  %264 = add nsw i64 %263, %262
  %265 = shl i64 %264, 16
  %266 = ashr i64 %265, 32
  %267 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 7
  store i64 %266, i64* %267, align 8
  %268 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 9
  store i32 1651078259, i32* %268, align 8
  %269 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 5
  store i8 1, i8* %269, align 2
  %270 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 11
  store i32 0, i32* %270, align 8
  %271 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 12
  store i32 0, i32* %271, align 4
  br label %272

272:                                              ; preds = %221, %166
  %273 = phi i32 [ 0, %221 ], [ %101, %166 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %171) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %170) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %169) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %168) #11
  br label %1060

274:                                              ; preds = %157
  br i1 %164, label %1060, label %332

275:                                              ; preds = %103
  %276 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %152, i64 0, i32 26
  %277 = bitcast %struct.FT_StreamRec_** %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 3
  %280 = bitcast %struct.FT_GlyphLoaderRec_** %279 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %280, i8 0, i64 336, i1 false) #11
  %281 = sext i32 %59 to i64
  %282 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 4
  store i64 %281, i64* %282, align 8
  %283 = bitcast %struct.TT_LoaderRec_* %10 to %struct.FT_FaceRec_**
  store %struct.FT_FaceRec_* %152, %struct.FT_FaceRec_** %283, align 8
  %284 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 1
  %285 = bitcast %struct.TT_SizeRec_** %284 to %struct.FT_SizeRec_**
  store %struct.FT_SizeRec_* %1, %struct.FT_SizeRec_** %285, align 8
  %286 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 2
  store %struct.FT_GlyphSlotRec_* %0, %struct.FT_GlyphSlotRec_** %286, align 8
  %287 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 6
  %288 = bitcast %struct.FT_StreamRec_** %287 to i64*
  store i64 %278, i64* %288, align 8
  %289 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 28, i32 0
  %290 = bitcast %struct.FT_ListNodeRec_** %289 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %290, i8 0, i64 16, i1 false) #11
  %291 = call fastcc i32 @load_truetype_glyph(%struct.TT_LoaderRec_* nonnull %10, i32 %2, i32 0, i8 zeroext 1) #11
  %292 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 28
  %293 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 0
  %294 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %293, align 8
  %295 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %294, i64 0, i32 0, i32 25
  %296 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %295, align 8
  call void @FT_List_Finalize(%struct.FT_ListRec_* %292, void (%struct.FT_MemoryRec_*, i8*, i8*)* null, %struct.FT_MemoryRec_* %296, i8* null) #11
  %297 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 12
  %298 = load i32, i32* %297, align 8
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 6
  store i64 %299, i64* %300, align 8
  %301 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 23
  %302 = load i32, i32* %301, align 4
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 7
  store i64 %303, i64* %304, align 8
  %305 = load i64, i64* %130, align 8
  %306 = icmp ne i64 %305, 0
  %307 = icmp eq i32 %298, 0
  %308 = or i1 %307, %306
  br i1 %308, label %318, label %309

309:                                              ; preds = %275
  %310 = shl i64 %89, 32
  %311 = ashr exact i64 %310, 32
  %312 = mul nsw i64 %311, %299
  %313 = ashr i64 %312, 63
  %314 = add nsw i64 %312, 32768
  %315 = add nsw i64 %314, %313
  %316 = shl i64 %315, 16
  %317 = ashr i64 %316, 32
  store i64 %317, i64* %130, align 8
  br label %318

318:                                              ; preds = %309, %275
  %319 = load i64, i64* %142, align 8
  %320 = icmp ne i64 %319, 0
  %321 = icmp eq i32 %302, 0
  %322 = or i1 %321, %320
  br i1 %322, label %1060, label %323

323:                                              ; preds = %318
  %324 = shl i64 %91, 32
  %325 = ashr exact i64 %324, 32
  %326 = mul nsw i64 %325, %303
  %327 = ashr i64 %326, 63
  %328 = add nsw i64 %326, 32768
  %329 = add nsw i64 %328, %327
  %330 = shl i64 %329, 16
  %331 = ashr i64 %330, 32
  store i64 %331, i64* %142, align 8
  br label %1060

332:                                              ; preds = %274, %165, %82, %75, %58
  %333 = sext i32 %59 to i64
  %334 = and i64 %333, 1
  %335 = icmp ne i64 %334, 0
  br i1 %335, label %341, label %336

336:                                              ; preds = %332
  %337 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 2, i32 2, i32 4
  %338 = bitcast i64* %337 to i8*
  %339 = load i8, i8* %338, align 8
  %340 = icmp eq i8 %339, 0
  br i1 %340, label %1060, label %341

341:                                              ; preds = %336, %332
  %342 = and i64 %333, 16384
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %344, label %1060

344:                                              ; preds = %341
  %345 = trunc i32 %59 to i8
  %346 = lshr i8 %345, 7
  %347 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %16, align 8
  %348 = bitcast %struct.FT_FaceRec_* %347 to %struct.TT_FaceRec_*
  %349 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %347, i64 0, i32 24
  %350 = bitcast %struct.FT_DriverRec_** %349 to %struct.TT_DriverRec_**
  %351 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %350, align 8
  %352 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %347, i64 0, i32 26
  %353 = bitcast %struct.FT_StreamRec_** %352 to i64*
  %354 = load i64, i64* %353, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 376, i1 false) #11
  br i1 %61, label %355, label %747

355:                                              ; preds = %344
  %356 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 6, i32 1
  %357 = bitcast %struct.FT_Generic_* %356 to i32*
  %358 = load i32, i32* %357, align 8
  %359 = icmp slt i32 %358, 0
  br i1 %359, label %364, label %360

360:                                              ; preds = %355
  %361 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %15, i64 0, i32 23
  %362 = load i32, i32* %361, align 4
  %363 = icmp slt i32 %362, 0
  br i1 %363, label %602, label %655

364:                                              ; preds = %355
  %365 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %365) #11
  store i32 -1431655766, i32* %6, align 4
  %366 = bitcast %struct.FT_SizeRec_* %1 to %struct.TT_FaceRec_**
  %367 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %366, align 8
  %368 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %367, i64 0, i32 0, i32 25
  %369 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %368, align 8
  %370 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 2, i32 3
  %371 = bitcast %struct.FT_Size_InternalRec_** %370 to %struct.TT_DefRecord_**
  %372 = bitcast %struct.FT_Size_InternalRec_** %370 to i8**
  %373 = load i8*, i8** %372, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %369, i8* %373) #11
  store %struct.TT_DefRecord_* null, %struct.TT_DefRecord_** %371, align 8
  %374 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 3, i32 1
  %375 = bitcast %struct.FT_Generic_* %374 to %struct.TT_DefRecord_**
  %376 = getelementptr inbounds %struct.FT_Generic_, %struct.FT_Generic_* %374, i64 0, i32 0
  %377 = load i8*, i8** %376, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %369, i8* %377) #11
  store %struct.TT_DefRecord_* null, %struct.TT_DefRecord_** %375, align 8
  %378 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 5
  %379 = bitcast %struct.FT_SizeRec_* %378 to i64**
  %380 = bitcast %struct.FT_SizeRec_* %378 to i8**
  %381 = load i8*, i8** %380, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %369, i8* %381) #11
  store i64* null, i64** %379, align 8
  %382 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 5, i32 1, i32 1
  %383 = bitcast void (i8*)** %382 to i64**
  %384 = bitcast void (i8*)** %382 to i8**
  %385 = load i8*, i8** %384, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %369, i8* %385) #11
  store i64* null, i64** %383, align 8
  %386 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 6
  %387 = bitcast %struct.FT_SizeRec_* %386 to %struct.TT_ExecContextRec_**
  %388 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %387, align 8
  %389 = icmp eq %struct.TT_ExecContextRec_* %388, null
  br i1 %389, label %418, label %390

390:                                              ; preds = %364
  %391 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %388, i64 0, i32 2
  %392 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %391, align 8
  %393 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %388, i64 0, i32 44
  store i16 0, i16* %393, align 8
  %394 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %388, i64 0, i32 45
  store i16 0, i16* %394, align 2
  %395 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %388, i64 0, i32 6
  %396 = bitcast i64** %395 to i8**
  %397 = load i8*, i8** %396, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %392, i8* %397) #11
  %398 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %388, i64 0, i32 5
  %399 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %388, i64 0, i32 29
  %400 = bitcast i64** %399 to i8**
  %401 = bitcast i64* %398 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %401, i8 0, i64 16, i1 false) #11
  %402 = load i8*, i8** %400, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %392, i8* %402) #11
  %403 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %388, i64 0, i32 28
  %404 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %388, i64 0, i32 50
  %405 = bitcast i64** %404 to i8**
  %406 = bitcast i64* %403 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %406, i8 0, i64 16, i1 false) #11
  %407 = load i8*, i8** %405, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %392, i8* %407) #11
  store i64* null, i64** %404, align 8
  %408 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %388, i64 0, i32 49
  store i16 0, i16* %408, align 8
  %409 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %388, i64 0, i32 43
  %410 = bitcast %struct.TT_CallRec_** %409 to i8**
  %411 = load i8*, i8** %410, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %392, i8* %411) #11
  %412 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %388, i64 0, i32 41
  %413 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %388, i64 0, i32 32
  %414 = bitcast i32* %412 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %414, i8 0, i64 16, i1 false) #11
  %415 = load i8*, i8** %413, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %392, i8* %415) #11
  store i8* null, i8** %413, align 8
  %416 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %388, i64 0, i32 31
  store i32 0, i32* %416, align 8
  %417 = bitcast %struct.TT_ExecContextRec_* %388 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %417, i8 0, i64 16, i1 false) #11
  call void @ft_mem_free(%struct.FT_MemoryRec_* %392, i8* nonnull %417) #11
  br label %418

418:                                              ; preds = %390, %364
  %419 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 5, i32 2
  %420 = bitcast %struct.FT_Size_Metrics_* %419 to %struct.TT_GlyphZoneRec_*
  call fastcc void @tt_glyphzone_done(%struct.TT_GlyphZoneRec_* %420) #11
  store i32 -1, i32* %357, align 8
  %421 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %15, i64 0, i32 23
  store i32 -1, i32* %421, align 4
  %422 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %367, i64 0, i32 0, i32 24
  %423 = bitcast %struct.FT_DriverRec_** %422 to %struct.TT_DriverRec_**
  %424 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %423, align 8
  %425 = call %struct.TT_ExecContextRec_* @TT_New_Context(%struct.TT_DriverRec_* %424) #11
  store %struct.TT_ExecContextRec_* %425, %struct.TT_ExecContextRec_** %387, align 8
  %426 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %367, i64 0, i32 7, i32 9
  %427 = load i16, i16* %426, align 8
  %428 = zext i16 %427 to i32
  %429 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %15, i64 0, i32 7
  store i32 %428, i32* %429, align 4
  %430 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %367, i64 0, i32 7, i32 10
  %431 = load i16, i16* %430, align 2
  %432 = zext i16 %431 to i32
  %433 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %15, i64 0, i32 10
  store i32 %432, i32* %433, align 4
  %434 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 2, i32 2, i32 7
  %435 = bitcast i64* %434 to i32*
  store i32 0, i32* %435, align 8
  %436 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 3
  %437 = bitcast %struct.FT_SizeRec_* %436 to i32*
  store i32 0, i32* %437, align 8
  %438 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 3, i32 1, i32 1
  %439 = bitcast void (i8*)** %438 to i32*
  store i32 0, i32* %439, align 8
  %440 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %15, i64 0, i32 13
  store i32 0, i32* %440, align 4
  %441 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %367, i64 0, i32 41
  %442 = load i64, i64* %441, align 8
  %443 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 4, i32 3
  %444 = bitcast %struct.FT_Size_InternalRec_** %443 to i64*
  store i64 %442, i64* %444, align 8
  %445 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %367, i64 0, i32 7, i32 8
  %446 = load i16, i16* %445, align 2
  %447 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 5, i32 1
  %448 = bitcast %struct.FT_Generic_* %447 to i16*
  store i16 %446, i16* %448, align 8
  %449 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 1, i32 2, i32 6
  %450 = bitcast i64* %449 to %struct.TT_Size_Metrics_*
  %451 = getelementptr inbounds %struct.TT_Size_Metrics_, %struct.TT_Size_Metrics_* %450, i64 0, i32 7
  store i8 0, i8* %451, align 1
  %452 = getelementptr inbounds %struct.TT_Size_Metrics_, %struct.TT_Size_Metrics_* %450, i64 0, i32 8
  store i8 0, i8* %452, align 2
  %453 = getelementptr inbounds i64, i64* %449, i64 5
  %454 = zext i16 %427 to i64
  %455 = bitcast i64* %453 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %455, i8 0, i64 32, i1 false) #11
  %456 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %369, i64 40, i64 0, i64 %454, i8* null, i32* nonnull %6) #11
  store i8* %456, i8** %372, align 8
  %457 = load i32, i32* %6, align 4
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %459, label %598

459:                                              ; preds = %418
  %460 = load i32, i32* %433, align 4
  %461 = zext i32 %460 to i64
  %462 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %369, i64 40, i64 0, i64 %461, i8* null, i32* nonnull %6) #11
  store i8* %462, i8** %376, align 8
  %463 = load i32, i32* %6, align 4
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %465, label %598

465:                                              ; preds = %459
  %466 = load i64, i64* %444, align 8
  %467 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %369, i64 8, i64 0, i64 %466, i8* null, i32* nonnull %6) #11
  store i8* %467, i8** %380, align 8
  %468 = load i32, i32* %6, align 4
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %598

470:                                              ; preds = %465
  %471 = load i16, i16* %448, align 8
  %472 = zext i16 %471 to i64
  %473 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %369, i64 8, i64 0, i64 %472, i8* null, i32* nonnull %6) #11
  store i8* %473, i8** %384, align 8
  %474 = load i32, i32* %6, align 4
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %476, label %598

476:                                              ; preds = %470
  %477 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %367, i64 0, i32 7, i32 7
  %478 = load i16, i16* %477, align 4
  %479 = add i16 %478, 4
  %480 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %480) #11
  store i32 -1431655766, i32* %5, align 4
  %481 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 5, i32 2, i32 2
  %482 = bitcast i64* %481 to i16*
  %483 = bitcast i64* %481 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %483, i8 0, i64 56, i1 false) #11
  %484 = bitcast %struct.FT_Size_Metrics_* %419 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %369, %struct.FT_MemoryRec_** %484, align 8
  %485 = zext i16 %479 to i64
  %486 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %369, i64 16, i64 0, i64 %485, i8* null, i32* nonnull %5) #11
  %487 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 5, i32 2, i32 3
  %488 = bitcast i64* %487 to i8**
  store i8* %486, i8** %488, align 8
  %489 = load i32, i32* %5, align 4
  %490 = icmp eq i32 %489, 0
  br i1 %490, label %491, label %517

491:                                              ; preds = %476
  %492 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %369, i64 16, i64 0, i64 %485, i8* null, i32* nonnull %5) #11
  %493 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 5, i32 2, i32 4
  %494 = bitcast i64* %493 to i8**
  store i8* %492, i8** %494, align 8
  %495 = load i32, i32* %5, align 4
  %496 = icmp eq i32 %495, 0
  br i1 %496, label %497, label %517

497:                                              ; preds = %491
  %498 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %369, i64 16, i64 0, i64 %485, i8* null, i32* nonnull %5) #11
  %499 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 5, i32 2, i32 5
  %500 = bitcast i64* %499 to i8**
  store i8* %498, i8** %500, align 8
  %501 = load i32, i32* %5, align 4
  %502 = icmp eq i32 %501, 0
  br i1 %502, label %503, label %517

503:                                              ; preds = %497
  %504 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %369, i64 1, i64 0, i64 %485, i8* null, i32* nonnull %5) #11
  %505 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 5, i32 2, i32 6
  %506 = bitcast i64* %505 to i8**
  store i8* %504, i8** %506, align 8
  %507 = load i32, i32* %5, align 4
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %509, label %517

509:                                              ; preds = %503
  %510 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %369, i64 2, i64 0, i64 0, i8* null, i32* nonnull %5) #11
  %511 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 5, i32 2, i32 7
  %512 = bitcast i64* %511 to i8**
  store i8* %510, i8** %512, align 8
  %513 = load i32, i32* %5, align 4
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %515, label %517

515:                                              ; preds = %509
  store i16 %479, i16* %482, align 8
  %516 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %420, i64 0, i32 2
  store i16 0, i16* %516, align 2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %480) #11
  store i32 0, i32* %6, align 4
  br label %520

517:                                              ; preds = %509, %503, %497, %491, %476
  call fastcc void @tt_glyphzone_done(%struct.TT_GlyphZoneRec_* %420) #11
  %518 = load i32, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %480) #11
  store i32 %518, i32* %6, align 4
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %520, label %598

520:                                              ; preds = %517, %515
  %521 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %420, i64 0, i32 3
  store i16 %479, i16* %521, align 4
  %522 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 3, i32 2, i32 7
  %523 = bitcast i64* %522 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %523, i8* align 8 bitcast (%struct.TT_GraphicsState_* @tt_default_graphics_state to i8*), i64 96, i1 false) #11
  %524 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %422, align 8
  %525 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %524, i64 0, i32 0, i32 1
  %526 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %525, align 8
  %527 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %526, i64 0, i32 9, i64 0
  %528 = load i32 (i8*)*, i32 (i8*)** %527, align 8
  %529 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %367, i64 0, i32 43
  %530 = icmp eq i32 (i8*)* %528, null
  %531 = select i1 %530, i32 (i8*)* bitcast (i32 (%struct.TT_ExecContextRec_*)* @TT_RunIns to i32 (i8*)*), i32 (i8*)* %528
  store i32 (i8*)* %531, i32 (i8*)** %529, align 8
  %532 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %366, align 8
  %533 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %387, align 8
  %534 = call fastcc i32 @TT_Load_Context(%struct.TT_ExecContextRec_* %533, %struct.TT_FaceRec_* %532, %struct.TT_SizeRec_* %15) #11
  %535 = icmp eq i32 %534, 0
  br i1 %535, label %536, label %596

536:                                              ; preds = %520
  %537 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 41
  store i32 0, i32* %537, align 8
  %538 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 4
  store i64 0, i64* %538, align 8
  %539 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 52
  store i64 64, i64* %539, align 8
  %540 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 53
  %541 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 59
  %542 = bitcast i64* %540 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %542, i8 0, i64 17, i1 false) #11
  store i64 16384, i64* %541, align 8
  %543 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 58
  store i8 %346, i8* %543, align 1
  %544 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 15, i32 0
  store i16 0, i16* %544, align 8
  %545 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 15, i32 1
  store i16 0, i16* %545, align 2
  %546 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 15, i32 2
  %547 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 16, i32 2
  store i16 0, i16* %547, align 8
  %548 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 16, i32 4
  store i64 0, i64* %548, align 8
  %549 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 16, i32 3
  %550 = bitcast i64* %546 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %550, i8 0, i64 16, i1 false) #11
  store i64 65536, i64* %549, align 8
  %551 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %532, i64 0, i32 38
  %552 = bitcast i8** %551 to i64*
  %553 = load i64, i64* %552, align 8
  %554 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %532, i64 0, i32 37
  %555 = load i64, i64* %554, align 8
  %556 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 46, i64 0, i32 0
  %557 = bitcast i8** %556 to i64*
  store i64 %553, i64* %557, align 8
  %558 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 46, i64 0, i32 1
  store i64 %555, i64* %558, align 8
  %559 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 46, i64 1, i32 0
  %560 = bitcast i8** %559 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %560, i8 0, i64 32, i1 false) #11
  %561 = load i64, i64* %554, align 8
  %562 = icmp eq i64 %561, 0
  br i1 %562, label %563, label %564

563:                                              ; preds = %536
  store i32 0, i32* %357, align 8
  br label %575

564:                                              ; preds = %536
  %565 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 20
  %566 = bitcast i8** %565 to i64*
  store i64 %553, i64* %566, align 8
  %567 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 22
  store i64 %555, i64* %567, align 8
  %568 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 21
  store i64 0, i64* %568, align 8
  %569 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 19
  store i32 1, i32* %569, align 4
  %570 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %532, i64 0, i32 43
  %571 = load i32 (i8*)*, i32 (i8*)** %570, align 8
  %572 = bitcast %struct.TT_ExecContextRec_* %533 to i8*
  %573 = call i32 %571(i8* %572) #11
  store i32 %573, i32* %357, align 8
  %574 = icmp eq i32 %573, 0
  br i1 %574, label %575, label %596

575:                                              ; preds = %564, %563
  %576 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 33
  %577 = load i32, i32* %576, align 8
  store i32 %577, i32* %435, align 8
  %578 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 36
  %579 = load i32, i32* %578, align 8
  store i32 %579, i32* %437, align 8
  %580 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 39
  %581 = load i32, i32* %580, align 8
  store i32 %581, i32* %439, align 8
  %582 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 40
  %583 = load i32, i32* %582, align 4
  store i32 %583, i32* %440, align 4
  %584 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 3, i32 2
  %585 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 46, i64 0
  %586 = bitcast %struct.FT_Size_Metrics_* %584 to i8*
  %587 = bitcast %struct.TT_CodeRange_* %585 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %586, i8* align 8 %587, i64 16, i1 false) #11
  %588 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 3, i32 2, i32 3
  %589 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 46, i64 1
  %590 = bitcast i64* %588 to i8*
  %591 = bitcast %struct.TT_CodeRange_* %589 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %590, i8* align 8 %591, i64 16, i1 false) #11
  %592 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 3, i32 2, i32 5
  %593 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %533, i64 0, i32 46, i64 2
  %594 = bitcast i64* %592 to i8*
  %595 = bitcast %struct.TT_CodeRange_* %593 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %594, i8* align 8 %595, i64 16, i1 false) #11
  br label %596

596:                                              ; preds = %575, %564, %520
  %597 = phi i32 [ %534, %520 ], [ %573, %564 ], [ 0, %575 ]
  store i32 %597, i32* %6, align 4
  br label %600

598:                                              ; preds = %517, %470, %465, %459, %418
  call fastcc void @tt_size_done_bytecode(%struct.FT_SizeRec_* nonnull %1) #11
  %599 = load i32, i32* %6, align 4
  br label %600

600:                                              ; preds = %598, %596
  %601 = phi i32 [ %599, %598 ], [ %597, %596 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %365) #11
  br label %602

602:                                              ; preds = %600, %360
  %603 = phi i32 [ %601, %600 ], [ %358, %360 ]
  %604 = icmp eq i32 %603, 0
  br i1 %604, label %605, label %1060

605:                                              ; preds = %602
  %606 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %15, i64 0, i32 23
  %607 = load i32, i32* %606, align 4
  %608 = icmp slt i32 %607, 0
  br i1 %608, label %609, label %652

609:                                              ; preds = %605
  %610 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %15, i64 0, i32 20, i32 3
  %611 = load i16, i16* %610, align 4
  %612 = icmp eq i16 %611, 0
  br i1 %612, label %618, label %613

613:                                              ; preds = %609
  %614 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 5, i32 2, i32 3
  %615 = bitcast i64* %614 to %struct.FT_Vector_**
  %616 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 5, i32 2, i32 4
  %617 = bitcast i64* %616 to %struct.FT_Vector_**
  br label %626

618:                                              ; preds = %626, %609
  %619 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 5, i32 1
  %620 = bitcast %struct.FT_Generic_* %619 to i16*
  %621 = load i16, i16* %620, align 8
  %622 = icmp eq i16 %621, 0
  br i1 %622, label %648, label %623

623:                                              ; preds = %618
  %624 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 5, i32 1, i32 1
  %625 = bitcast void (i8*)** %624 to i64**
  br label %640

626:                                              ; preds = %626, %613
  %627 = phi i64 [ 0, %613 ], [ %636, %626 ]
  %628 = load %struct.FT_Vector_*, %struct.FT_Vector_** %615, align 8
  %629 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %628, i64 %627, i32 0
  store i64 0, i64* %629, align 8
  %630 = load %struct.FT_Vector_*, %struct.FT_Vector_** %615, align 8
  %631 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %630, i64 %627, i32 1
  store i64 0, i64* %631, align 8
  %632 = load %struct.FT_Vector_*, %struct.FT_Vector_** %617, align 8
  %633 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %632, i64 %627, i32 0
  store i64 0, i64* %633, align 8
  %634 = load %struct.FT_Vector_*, %struct.FT_Vector_** %617, align 8
  %635 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %634, i64 %627, i32 1
  store i64 0, i64* %635, align 8
  %636 = add nuw nsw i64 %627, 1
  %637 = load i16, i16* %610, align 4
  %638 = zext i16 %637 to i64
  %639 = icmp ult i64 %636, %638
  br i1 %639, label %626, label %618

640:                                              ; preds = %640, %623
  %641 = phi i64 [ 0, %623 ], [ %644, %640 ]
  %642 = load i64*, i64** %625, align 8
  %643 = getelementptr inbounds i64, i64* %642, i64 %641
  store i64 0, i64* %643, align 8
  %644 = add nuw nsw i64 %641, 1
  %645 = load i16, i16* %620, align 8
  %646 = zext i16 %645 to i64
  %647 = icmp ult i64 %644, %646
  br i1 %647, label %640, label %648

648:                                              ; preds = %640, %618
  %649 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 3, i32 2, i32 7
  %650 = bitcast i64* %649 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %650, i8* align 8 bitcast (%struct.TT_GraphicsState_* @tt_default_graphics_state to i8*), i64 96, i1 false) #11
  %651 = call fastcc i32 @tt_size_run_prep(%struct.TT_SizeRec_* nonnull %15, i8 zeroext %346) #11
  br label %652

652:                                              ; preds = %648, %605
  %653 = phi i32 [ %651, %648 ], [ %607, %605 ]
  %654 = icmp eq i32 %653, 0
  br i1 %654, label %659, label %1060

655:                                              ; preds = %360
  %656 = icmp eq i32 %358, 0
  br i1 %656, label %657, label %1060

657:                                              ; preds = %655
  %658 = icmp eq i32 %362, 0
  br i1 %658, label %659, label %1060

659:                                              ; preds = %657, %652
  %660 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 6
  %661 = bitcast %struct.FT_SizeRec_* %660 to %struct.TT_ExecContextRec_**
  %662 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %661, align 8
  %663 = icmp eq %struct.TT_ExecContextRec_* %662, null
  br i1 %663, label %1060, label %664

664:                                              ; preds = %659
  %665 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %351, i64 0, i32 2
  %666 = load i32, i32* %665, align 8
  %667 = icmp eq i32 %666, 40
  br i1 %667, label %668, label %681

668:                                              ; preds = %664
  %669 = and i32 %59, 983040
  %670 = icmp ne i32 %669, 131072
  %671 = zext i1 %670 to i8
  %672 = and i32 %59, 196608
  %673 = icmp eq i32 %672, 0
  %674 = and i1 %670, %673
  %675 = lshr i32 %59, 18
  %676 = trunc i32 %675 to i8
  %677 = and i8 %676, 1
  %678 = xor i8 %677, 1
  %679 = select i1 %674, i8 %678, i8 0
  %680 = select i1 %670, i8 %677, i8 0
  br label %681

681:                                              ; preds = %668, %664
  %682 = phi i8 [ %680, %668 ], [ 0, %664 ]
  %683 = phi i8 [ %671, %668 ], [ 0, %664 ]
  %684 = phi i8 [ %679, %668 ], [ 0, %664 ]
  %685 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %662, i64 0, i32 72
  store i8 %682, i8* %685, align 2
  %686 = load i32, i32* %665, align 8
  %687 = icmp eq i32 %686, 40
  br i1 %687, label %688, label %693

688:                                              ; preds = %681
  %689 = icmp eq i8 %683, 0
  br i1 %689, label %690, label %696

690:                                              ; preds = %688
  %691 = and i32 %59, 983040
  %692 = icmp ne i32 %691, 131072
  br label %696

693:                                              ; preds = %681
  %694 = and i32 %59, 983040
  %695 = icmp ne i32 %694, 131072
  br label %696

696:                                              ; preds = %693, %690, %688
  %697 = phi i1 [ %695, %693 ], [ false, %688 ], [ %692, %690 ]
  %698 = zext i1 %697 to i8
  %699 = call fastcc i32 @TT_Load_Context(%struct.TT_ExecContextRec_* nonnull %662, %struct.TT_FaceRec_* %348, %struct.TT_SizeRec_* nonnull %15) #11
  %700 = icmp eq i32 %699, 0
  br i1 %700, label %701, label %1060

701:                                              ; preds = %696
  %702 = load i32, i32* %665, align 8
  %703 = icmp eq i32 %702, 40
  br i1 %703, label %704, label %715

704:                                              ; preds = %701
  %705 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %662, i64 0, i32 71
  %706 = load i8, i8* %705, align 1
  %707 = icmp eq i8 %683, %706
  br i1 %707, label %709, label %708

708:                                              ; preds = %704
  store i8 %683, i8* %705, align 1
  br label %709

709:                                              ; preds = %708, %704
  %710 = phi i8 [ 1, %708 ], [ 0, %704 ]
  %711 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %662, i64 0, i32 76
  %712 = load i8, i8* %711, align 2
  %713 = icmp eq i8 %684, %712
  br i1 %713, label %715, label %714

714:                                              ; preds = %709
  store i8 %684, i8* %711, align 2
  br label %715

715:                                              ; preds = %714, %709, %701
  %716 = phi i8 [ 1, %714 ], [ %710, %709 ], [ 0, %701 ]
  %717 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %662, i64 0, i32 70
  %718 = load i8, i8* %717, align 8
  %719 = icmp eq i8 %718, %698
  br i1 %719, label %721, label %720

720:                                              ; preds = %715
  store i8 %698, i8* %717, align 8
  br label %723

721:                                              ; preds = %715
  %722 = icmp eq i8 %716, 0
  br i1 %722, label %726, label %723

723:                                              ; preds = %721, %720
  %724 = call fastcc i32 @tt_size_run_prep(%struct.TT_SizeRec_* nonnull %15, i8 zeroext %346) #11
  %725 = icmp eq i32 %724, 0
  br i1 %725, label %726, label %1060

726:                                              ; preds = %723, %721
  %727 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %662, i64 0, i32 17, i32 15
  %728 = load i8, i8* %727, align 4
  %729 = shl i8 %728, 1
  %730 = and i8 %729, 2
  %731 = zext i8 %730 to i32
  %732 = or i32 %59, %731
  %733 = and i8 %728, 2
  %734 = icmp eq i8 %733, 0
  br i1 %734, label %738, label %735

735:                                              ; preds = %726
  %736 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %662, i64 0, i32 17
  %737 = bitcast %struct.TT_GraphicsState_* %736 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %737, i8* align 8 bitcast (%struct.TT_GraphicsState_* @tt_default_graphics_state to i8*), i64 96, i1 false) #11
  br label %738

738:                                              ; preds = %735, %726
  %739 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %662, i64 0, i32 58
  store i8 %346, i8* %739, align 1
  %740 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 18
  store %struct.TT_ExecContextRec_* %662, %struct.TT_ExecContextRec_** %740, align 8
  %741 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %662, i64 0, i32 32
  %742 = bitcast i8** %741 to i64*
  %743 = load i64, i64* %742, align 8
  %744 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 19
  %745 = bitcast i8** %744 to i64*
  store i64 %743, i64* %745, align 8
  %746 = sext i32 %732 to i64
  br label %747

747:                                              ; preds = %738, %344
  %748 = phi i64 [ %333, %344 ], [ %746, %738 ]
  %749 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 21
  %750 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %749, align 8
  %751 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %750, i64 0, i32 0
  %752 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %751, align 8
  call void @FT_GlyphLoader_Rewind(%struct.FT_GlyphLoaderRec_* %752) #11
  %753 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 3
  store %struct.FT_GlyphLoaderRec_* %752, %struct.FT_GlyphLoaderRec_** %753, align 8
  %754 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 4
  store i64 %748, i64* %754, align 8
  %755 = bitcast %struct.TT_LoaderRec_* %10 to %struct.FT_FaceRec_**
  store %struct.FT_FaceRec_* %347, %struct.FT_FaceRec_** %755, align 8
  %756 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 1
  %757 = bitcast %struct.TT_SizeRec_** %756 to %struct.FT_SizeRec_**
  store %struct.FT_SizeRec_* %1, %struct.FT_SizeRec_** %757, align 8
  %758 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 2
  store %struct.FT_GlyphSlotRec_* %0, %struct.FT_GlyphSlotRec_** %758, align 8
  %759 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 6
  %760 = bitcast %struct.FT_StreamRec_** %759 to i64*
  store i64 %354, i64* %760, align 8
  %761 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 28, i32 0
  %762 = bitcast %struct.FT_ListNodeRec_** %761 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %762, i8 0, i64 16, i1 false) #11
  %763 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 9
  store i32 1869968492, i32* %763, align 8
  %764 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 14
  store i32 0, i32* %764, align 8
  %765 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13
  %766 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13, i32 5
  store i32 0, i32* %766, align 8
  %767 = call fastcc i32 @load_truetype_glyph(%struct.TT_LoaderRec_* nonnull %10, i32 %2, i32 0, i8 zeroext 0) #11
  %768 = icmp eq i32 %767, 0
  br i1 %768, label %769, label %1044

769:                                              ; preds = %747
  %770 = load i32, i32* %763, align 8
  %771 = icmp eq i32 %770, 1668246896
  %772 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %753, align 8
  br i1 %771, label %773, label %781

773:                                              ; preds = %769
  %774 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %772, i64 0, i32 5, i32 3
  %775 = load i32, i32* %774, align 8
  store i32 %775, i32* %764, align 8
  %776 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %772, i64 0, i32 5, i32 4
  %777 = bitcast %struct.FT_SubGlyphRec_** %776 to i64*
  %778 = load i64, i64* %777, align 8
  %779 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 15
  %780 = bitcast %struct.FT_SubGlyphRec_** %779 to i64*
  store i64 %778, i64* %780, align 8
  br label %792

781:                                              ; preds = %769
  %782 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %772, i64 0, i32 5, i32 0
  %783 = bitcast %struct.FT_Outline_* %765 to i8*
  %784 = bitcast %struct.FT_Outline_* %782 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %783, i8* align 8 %784, i64 40, i1 false) #11
  %785 = load i32, i32* %766, align 8
  %786 = and i32 %785, -513
  store i32 %786, i32* %766, align 8
  %787 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 14, i32 0
  %788 = load i64, i64* %787, align 8
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %792, label %790

790:                                              ; preds = %781
  %791 = sub nsw i64 0, %788
  call void @FT_Outline_Translate(%struct.FT_Outline_* %765, i64 %791, i64 0) #11
  br label %792

792:                                              ; preds = %790, %781, %773
  %793 = and i64 %333, 2
  %794 = icmp eq i64 %793, 0
  br i1 %794, label %795, label %819

795:                                              ; preds = %792
  %796 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 18
  %797 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %796, align 8
  %798 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %797, i64 0, i32 17, i32 16
  %799 = load i8, i8* %798, align 1
  %800 = icmp eq i8 %799, 0
  br i1 %800, label %816, label %801

801:                                              ; preds = %795
  %802 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %797, i64 0, i32 17, i32 17
  %803 = load i32, i32* %802, align 8
  switch i32 %803, label %813 [
    i32 0, label %804
    i32 1, label %819
    i32 4, label %807
    i32 5, label %810
  ]

804:                                              ; preds = %801
  %805 = load i32, i32* %766, align 8
  %806 = or i32 %805, 32
  store i32 %806, i32* %766, align 8
  br label %819

807:                                              ; preds = %801
  %808 = load i32, i32* %766, align 8
  %809 = or i32 %808, 48
  store i32 %809, i32* %766, align 8
  br label %819

810:                                              ; preds = %801
  %811 = load i32, i32* %766, align 8
  %812 = or i32 %811, 16
  store i32 %812, i32* %766, align 8
  br label %819

813:                                              ; preds = %801
  %814 = load i32, i32* %766, align 8
  %815 = or i32 %814, 8
  store i32 %815, i32* %766, align 8
  br label %819

816:                                              ; preds = %795
  %817 = load i32, i32* %766, align 8
  %818 = or i32 %817, 8
  store i32 %818, i32* %766, align 8
  br label %819

819:                                              ; preds = %816, %813, %810, %807, %804, %801, %792
  %820 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 0
  %821 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %820, align 8
  %822 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %821, i64 0, i32 0, i32 24
  %823 = bitcast %struct.FT_DriverRec_** %822 to %struct.TT_DriverRec_**
  %824 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %823, align 8
  %825 = bitcast %struct.FT_BBox_* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %825) #11
  %826 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %7, i64 0, i32 0
  %827 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %7, i64 0, i32 1
  %828 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %7, i64 0, i32 2
  %829 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %7, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %825, i8 -86, i64 32, i1 false) #11
  %830 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %758, align 8
  %831 = load %struct.TT_SizeRec_*, %struct.TT_SizeRec_** %756, align 8
  %832 = load i64, i64* %754, align 8
  %833 = and i64 %832, 1
  %834 = icmp eq i64 %833, 0
  br i1 %834, label %835, label %840

835:                                              ; preds = %819
  %836 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %831, i64 0, i32 1
  %837 = load %struct.FT_Size_Metrics_*, %struct.FT_Size_Metrics_** %836, align 8
  %838 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %837, i64 0, i32 3
  %839 = load i64, i64* %838, align 8
  br label %840

840:                                              ; preds = %835, %819
  %841 = phi i64 [ %839, %835 ], [ 65536, %819 ]
  %842 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %830, i64 0, i32 9
  %843 = load i32, i32* %842, align 8
  %844 = icmp eq i32 %843, 1668246896
  br i1 %844, label %847, label %845

845:                                              ; preds = %840
  %846 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %830, i64 0, i32 13
  call void @FT_Outline_Get_CBox(%struct.FT_Outline_* %846, %struct.FT_BBox_* nonnull %7) #11
  br label %850

847:                                              ; preds = %840
  %848 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 9
  %849 = bitcast %struct.FT_BBox_* %848 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %825, i8* align 8 %849, i64 32, i1 false) #11
  br label %850

850:                                              ; preds = %847, %845
  %851 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 12
  %852 = load i32, i32* %851, align 8
  %853 = sext i32 %852 to i64
  %854 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %830, i64 0, i32 6
  store i64 %853, i64* %854, align 8
  %855 = load i64, i64* %826, align 8
  %856 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %830, i64 0, i32 5, i32 2
  store i64 %855, i64* %856, align 8
  %857 = load i64, i64* %829, align 8
  %858 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %830, i64 0, i32 5, i32 3
  store i64 %857, i64* %858, align 8
  %859 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 15, i32 0
  %860 = load i64, i64* %859, align 8
  %861 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 14, i32 0
  %862 = load i64, i64* %861, align 8
  %863 = sub i64 %860, %862
  %864 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %830, i64 0, i32 5, i32 4
  store i64 %863, i64* %864, align 8
  %865 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %824, i64 0, i32 2
  %866 = load i32, i32* %865, align 8
  %867 = icmp eq i32 %866, 40
  br i1 %867, label %868, label %876

868:                                              ; preds = %850
  %869 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 18
  %870 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %869, align 8
  %871 = icmp eq %struct.TT_ExecContextRec_* %870, null
  br i1 %871, label %876, label %872

872:                                              ; preds = %868
  %873 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %870, i64 0, i32 73
  %874 = load i8, i8* %873, align 1
  %875 = icmp eq i8 %874, 0
  br i1 %875, label %876, label %927

876:                                              ; preds = %872, %868, %850
  %877 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %821, i64 0, i32 13, i32 4
  %878 = load i64, i64* %877, align 8
  %879 = icmp eq i64 %878, 0
  br i1 %879, label %880, label %927

880:                                              ; preds = %876
  %881 = load i64, i64* %754, align 8
  %882 = and i64 %881, 2097154
  %883 = icmp eq i64 %882, 0
  br i1 %883, label %884, label %927

884:                                              ; preds = %880
  %885 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %831, i64 0, i32 1
  %886 = load %struct.FT_Size_Metrics_*, %struct.FT_Size_Metrics_** %885, align 8
  %887 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %886, i64 0, i32 0
  %888 = load i16, i16* %887, align 8
  %889 = zext i16 %888 to i32
  %890 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %821, i64 0, i32 61
  %891 = load i64, i64* %890, align 8
  %892 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %821, i64 0, i32 58
  %893 = load i8*, i8** %892, align 8
  %894 = icmp eq i8* %893, null
  %895 = getelementptr inbounds i8, i8* %893, i64 8
  %896 = select i1 %894, i8* null, i8* %895
  %897 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %821, i64 0, i32 60
  %898 = load i32, i32* %897, align 8
  %899 = icmp eq i32 %898, 0
  br i1 %899, label %927, label %900

900:                                              ; preds = %884
  %901 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %821, i64 0, i32 62
  %902 = load i8*, i8** %901, align 8
  %903 = zext i32 %898 to i64
  br label %906

904:                                              ; preds = %906
  %905 = icmp eq i64 %912, %903
  br i1 %905, label %927, label %906

906:                                              ; preds = %904, %900
  %907 = phi i64 [ 0, %900 ], [ %912, %904 ]
  %908 = getelementptr inbounds i8, i8* %902, i64 %907
  %909 = load i8, i8* %908, align 1
  %910 = zext i8 %909 to i32
  %911 = icmp eq i32 %910, %889
  %912 = add nuw nsw i64 %907, 1
  br i1 %911, label %913, label %904

913:                                              ; preds = %906
  %914 = add i32 %2, 2
  %915 = zext i32 %914 to i64
  %916 = icmp ugt i64 %891, %915
  br i1 %916, label %917, label %927

917:                                              ; preds = %913
  %918 = and i64 %907, 4294967295
  %919 = mul i64 %918, %891
  %920 = getelementptr inbounds i8, i8* %896, i64 %919
  %921 = getelementptr inbounds i8, i8* %920, i64 %915
  %922 = icmp eq i8* %921, null
  br i1 %922, label %927, label %923

923:                                              ; preds = %917
  %924 = load i8, i8* %921, align 1
  %925 = zext i8 %924 to i64
  %926 = shl nuw nsw i64 %925, 6
  store i64 %926, i64* %864, align 8
  br label %927

927:                                              ; preds = %904, %923, %917, %913, %884, %880, %876, %872
  %928 = load i64, i64* %828, align 8
  %929 = sub i64 %928, %855
  %930 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %830, i64 0, i32 5, i32 0
  store i64 %929, i64* %930, align 8
  %931 = load i64, i64* %827, align 8
  %932 = sub i64 %857, %931
  %933 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %830, i64 0, i32 5, i32 1
  store i64 %932, i64* %933, align 8
  %934 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %821, i64 0, i32 8
  %935 = load i8, i8* %934, align 8
  %936 = icmp eq i8 %935, 0
  br i1 %936, label %956, label %937

937:                                              ; preds = %927
  %938 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %821, i64 0, i32 9, i32 13
  %939 = load i16, i16* %938, align 2
  %940 = icmp eq i16 %939, 0
  br i1 %940, label %956, label %941

941:                                              ; preds = %937
  %942 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 24, i32 1
  %943 = load i64, i64* %942, align 8
  %944 = sub i64 %943, %857
  %945 = call i64 @FT_DivFix(i64 %944, i64 %841) #11
  %946 = shl i64 %945, 48
  %947 = ashr exact i64 %946, 48
  %948 = load i64, i64* %942, align 8
  %949 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 25, i32 1
  %950 = load i64, i64* %949, align 8
  %951 = icmp sgt i64 %948, %950
  br i1 %951, label %952, label %976

952:                                              ; preds = %941
  %953 = sub i64 %948, %950
  %954 = call i64 @FT_DivFix(i64 %953, i64 %841) #11
  %955 = and i64 %954, 65535
  br label %976

956:                                              ; preds = %937, %927
  %957 = call i64 @FT_DivFix(i64 %932, i64 %841) #11
  %958 = shl i64 %957, 48
  %959 = ashr exact i64 %958, 48
  %960 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %821, i64 0, i32 12, i32 0
  %961 = load i16, i16* %960, align 8
  %962 = icmp eq i16 %961, -1
  %963 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %821, i64 0, i32 6, i32 1
  %964 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %821, i64 0, i32 6, i32 2
  %965 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %821, i64 0, i32 12, i32 25
  %966 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %821, i64 0, i32 12, i32 26
  %967 = select i1 %962, i16* %964, i16* %966
  %968 = select i1 %962, i16* %963, i16* %965
  %969 = load i16, i16* %968, align 2
  %970 = sext i16 %969 to i64
  %971 = load i16, i16* %967, align 2
  %972 = sext i16 %971 to i64
  %973 = sub nsw i64 %970, %972
  %974 = sub nsw i64 %973, %959
  %975 = sdiv i64 %974, 2
  br label %976

976:                                              ; preds = %956, %952, %941
  %977 = phi i64 [ %947, %952 ], [ %975, %956 ], [ %947, %941 ]
  %978 = phi i64 [ %955, %952 ], [ %973, %956 ], [ 0, %941 ]
  %979 = bitcast %struct.FT_Incremental_MetricsRec_* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %979) #11
  %980 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %8, i64 0, i32 0
  %981 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %8, i64 0, i32 1
  %982 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %8, i64 0, i32 2
  %983 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %821, i64 0, i32 0, i32 30
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %979, i8 -86, i64 32, i1 false) #11
  %984 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %983, align 8
  %985 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %984, i64 0, i32 4
  %986 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %985, align 8
  %987 = icmp eq %struct.FT_Incremental_InterfaceRec_* %986, null
  br i1 %987, label %1005, label %988

988:                                              ; preds = %976
  %989 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %986, i64 0, i32 0
  %990 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %989, align 8
  %991 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %990, i64 0, i32 2
  %992 = load i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)** %991, align 8
  %993 = icmp eq i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* %992, null
  br i1 %993, label %1005, label %994

994:                                              ; preds = %988
  store i64 0, i64* %980, align 8
  store i64 %977, i64* %981, align 8
  store i64 %978, i64* %982, align 8
  %995 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %989, align 8
  %996 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %995, i64 0, i32 2
  %997 = load i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)** %996, align 8
  %998 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %986, i64 0, i32 1
  %999 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %998, align 8
  %1000 = call i32 %997(%struct.FT_IncrementalRec_* %999, i32 %2, i8 zeroext 1, %struct.FT_Incremental_MetricsRec_* nonnull %8) #11
  %1001 = icmp eq i32 %1000, 0
  br i1 %1001, label %1002, label %1031

1002:                                             ; preds = %994
  %1003 = load i64, i64* %981, align 8
  %1004 = load i64, i64* %982, align 8
  br label %1005

1005:                                             ; preds = %1002, %988, %976
  %1006 = phi i64 [ %977, %976 ], [ %977, %988 ], [ %1003, %1002 ]
  %1007 = phi i64 [ %978, %976 ], [ %978, %988 ], [ %1004, %1002 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %979) #11
  %1008 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %830, i64 0, i32 7
  store i64 %1007, i64* %1008, align 8
  %1009 = load i64, i64* %754, align 8
  %1010 = and i64 %1009, 1
  %1011 = icmp eq i64 %1010, 0
  br i1 %1011, label %1012, label %1032

1012:                                             ; preds = %1005
  %1013 = shl i64 %1006, 32
  %1014 = ashr exact i64 %1013, 32
  %1015 = shl i64 %841, 32
  %1016 = ashr exact i64 %1015, 32
  %1017 = mul nsw i64 %1014, %1016
  %1018 = ashr i64 %1017, 63
  %1019 = add nsw i64 %1017, 32768
  %1020 = add nsw i64 %1019, %1018
  %1021 = shl i64 %1020, 16
  %1022 = ashr i64 %1021, 32
  %1023 = shl i64 %1007, 32
  %1024 = ashr exact i64 %1023, 32
  %1025 = mul nsw i64 %1024, %1016
  %1026 = ashr i64 %1025, 63
  %1027 = add nsw i64 %1025, 32768
  %1028 = add nsw i64 %1027, %1026
  %1029 = shl i64 %1028, 16
  %1030 = ashr i64 %1029, 32
  br label %1032

1031:                                             ; preds = %994
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %979) #11
  br label %1042

1032:                                             ; preds = %1012, %1005
  %1033 = phi i64 [ %1006, %1005 ], [ %1022, %1012 ]
  %1034 = phi i64 [ %1007, %1005 ], [ %1030, %1012 ]
  %1035 = load i64, i64* %856, align 8
  %1036 = load i64, i64* %864, align 8
  %1037 = sdiv i64 %1036, 2
  %1038 = sub i64 %1035, %1037
  %1039 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %830, i64 0, i32 5, i32 5
  store i64 %1038, i64* %1039, align 8
  %1040 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %830, i64 0, i32 5, i32 6
  store i64 %1033, i64* %1040, align 8
  %1041 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %830, i64 0, i32 5, i32 7
  store i64 %1034, i64* %1041, align 8
  br label %1042

1042:                                             ; preds = %1032, %1031
  %1043 = phi i32 [ 0, %1032 ], [ %1000, %1031 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %825) #11
  br label %1044

1044:                                             ; preds = %1042, %747
  %1045 = phi i32 [ %767, %747 ], [ %1043, %1042 ]
  br i1 %335, label %1054, label %1046

1046:                                             ; preds = %1044
  %1047 = load %struct.FT_Size_Metrics_*, %struct.FT_Size_Metrics_** %67, align 8
  %1048 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %1047, i64 0, i32 1
  %1049 = load i16, i16* %1048, align 2
  %1050 = icmp ult i16 %1049, 24
  br i1 %1050, label %1051, label %1054

1051:                                             ; preds = %1046
  %1052 = load i32, i32* %766, align 8
  %1053 = or i32 %1052, 256
  store i32 %1053, i32* %766, align 8
  br label %1054

1054:                                             ; preds = %1051, %1046, %1044
  %1055 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 28
  %1056 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %10, i64 0, i32 0
  %1057 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %1056, align 8
  %1058 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1057, i64 0, i32 0, i32 25
  %1059 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %1058, align 8
  call void @FT_List_Finalize(%struct.FT_ListRec_* %1055, void (%struct.FT_MemoryRec_*, i8*, i8*)* null, %struct.FT_MemoryRec_* %1059, i8* null) #11
  br label %1060

1060:                                             ; preds = %103, %272, %274, %318, %323, %336, %341, %602, %652, %655, %657, %659, %696, %723, %1054
  %1061 = phi i32 [ %1045, %1054 ], [ 36, %336 ], [ 6, %341 ], [ 0, %103 ], [ 0, %323 ], [ 0, %318 ], [ %101, %274 ], [ %273, %272 ], [ %603, %602 ], [ %653, %652 ], [ %358, %655 ], [ %362, %657 ], [ 153, %659 ], [ %699, %696 ], [ %724, %723 ]
  call void @llvm.lifetime.end.p0i8(i64 376, i8* nonnull %68) #11
  br label %1062

1062:                                             ; preds = %28, %21, %19, %4, %1060
  %1063 = phi i32 [ %1061, %1060 ], [ 37, %4 ], [ 36, %19 ], [ 35, %21 ], [ 6, %28 ]
  ret i32 %1063
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_get_kerning(%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_* nocapture) #2 {
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 13
  %6 = bitcast i16* %5 to %struct.SFNT_Interface_**
  %7 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %6, align 8
  %8 = icmp eq %struct.SFNT_Interface_* %7, null
  %9 = bitcast %struct.FT_Vector_* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false)
  br i1 %8, label %17, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3, i64 0, i32 0
  %12 = bitcast %struct.FT_FaceRec_* %0 to %struct.TT_FaceRec_*
  %13 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %7, i64 0, i32 21
  %14 = load i32 (%struct.TT_FaceRec_*, i32, i32)*, i32 (%struct.TT_FaceRec_*, i32, i32)** %13, align 8
  %15 = tail call i32 %14(%struct.TT_FaceRec_* %12, i32 %1, i32 %2) #11
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %11, align 8
  br label %17

17:                                               ; preds = %4, %10
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_get_advances(%struct.FT_FaceRec_*, i32, i32, i32, i64* nocapture) #2 {
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = bitcast %struct.FT_FaceRec_* %0 to %struct.TT_FaceRec_*
  %11 = and i32 %3, 16
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, 2147418112
  %16 = icmp ne i64 %15, 0
  br i1 %12, label %86, label %17

17:                                               ; preds = %5
  br i1 %16, label %23, label %18

18:                                               ; preds = %17
  %19 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %20 to i16
  %22 = icmp slt i16 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %18, %17
  %24 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 29
  %25 = bitcast i8** %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 16
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %118, label %29

29:                                               ; preds = %23, %18
  %30 = icmp eq i32 %2, 0
  br i1 %30, label %118, label %31

31:                                               ; preds = %29
  %32 = bitcast i16* %6 to i8*
  %33 = bitcast i16* %7 to i8*
  %34 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2
  %35 = bitcast %struct.FT_FaceRec_* %34 to i8*
  %36 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 13
  %37 = bitcast i16* %36 to %struct.SFNT_Interface_**
  %38 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 12, i32 2
  %39 = bitcast i64* %38 to i16*
  %40 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %10, i64 0, i32 12, i32 25
  %41 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %10, i64 0, i32 12, i32 26
  %42 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 22
  %43 = bitcast %struct.FT_SizeRec_** %42 to i16*
  %44 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %10, i64 0, i32 6, i32 2
  %45 = zext i32 %2 to i64
  br label %46

46:                                               ; preds = %80, %31
  %47 = phi i64 [ 0, %31 ], [ %84, %80 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %32) #11
  store i16 -21846, i16* %6, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %33) #11
  store i16 -21846, i16* %7, align 2
  %48 = load i8, i8* %35, align 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %57, label %50

50:                                               ; preds = %46
  %51 = trunc i64 %47 to i32
  %52 = add i32 %51, %1
  %53 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %37, align 8
  %54 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %53, i64 0, i32 39
  %55 = load void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)*, void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)** %54, align 8
  call void %55(%struct.TT_FaceRec_* %10, i8 zeroext 1, i32 %52, i16* nonnull %6, i16* nonnull %7) #11
  %56 = load i16, i16* %7, align 2
  br label %80

57:                                               ; preds = %46
  %58 = load i16, i16* %39, align 8
  %59 = icmp eq i16 %58, -1
  br i1 %59, label %70, label %60

60:                                               ; preds = %57
  %61 = load i16, i16* %40, align 2
  store i16 %61, i16* %6, align 2
  %62 = sext i16 %61 to i32
  %63 = load i16, i16* %41, align 4
  %64 = sext i16 %63 to i32
  %65 = sub nsw i32 %62, %64
  %66 = icmp slt i32 %65, 0
  %67 = sub nsw i32 0, %65
  %68 = select i1 %66, i32 %67, i32 %65
  %69 = trunc i32 %68 to i16
  store i16 %69, i16* %7, align 2
  br label %80

70:                                               ; preds = %57
  %71 = load i16, i16* %43, align 8
  store i16 %71, i16* %6, align 2
  %72 = sext i16 %71 to i32
  %73 = load i16, i16* %44, align 2
  %74 = sext i16 %73 to i32
  %75 = sub nsw i32 %72, %74
  %76 = icmp slt i32 %75, 0
  %77 = sub nsw i32 0, %75
  %78 = select i1 %76, i32 %77, i32 %75
  %79 = trunc i32 %78 to i16
  store i16 %79, i16* %7, align 2
  br label %80

80:                                               ; preds = %50, %60, %70
  %81 = phi i16 [ %56, %50 ], [ %69, %60 ], [ %79, %70 ]
  %82 = zext i16 %81 to i64
  %83 = getelementptr inbounds i64, i64* %4, i64 %47
  store i64 %82, i64* %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %32) #11
  %84 = add nuw nsw i64 %47, 1
  %85 = icmp eq i64 %84, %45
  br i1 %85, label %118, label %46

86:                                               ; preds = %5
  br i1 %16, label %92, label %87

87:                                               ; preds = %86
  %88 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %89 = load i64, i64* %88, align 8
  %90 = trunc i64 %89 to i16
  %91 = icmp slt i16 %90, 0
  br i1 %91, label %92, label %98

92:                                               ; preds = %87, %86
  %93 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 29
  %94 = bitcast i8** %93 to i32*
  %95 = load i32, i32* %94, align 8
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %118, label %98

98:                                               ; preds = %92, %87
  %99 = icmp eq i32 %2, 0
  br i1 %99, label %118, label %100

100:                                              ; preds = %98
  %101 = bitcast i16* %8 to i8*
  %102 = bitcast i16* %9 to i8*
  %103 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 13
  %104 = bitcast i16* %103 to %struct.SFNT_Interface_**
  %105 = zext i32 %2 to i64
  br label %106

106:                                              ; preds = %106, %100
  %107 = phi i64 [ 0, %100 ], [ %116, %106 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %101) #11
  store i16 -21846, i16* %8, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %102) #11
  store i16 -21846, i16* %9, align 2
  %108 = trunc i64 %107 to i32
  %109 = add i32 %108, %1
  %110 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %104, align 8
  %111 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %110, i64 0, i32 39
  %112 = load void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)*, void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)** %111, align 8
  call void %112(%struct.TT_FaceRec_* %10, i8 zeroext 0, i32 %109, i16* nonnull %8, i16* nonnull %9) #11
  %113 = load i16, i16* %9, align 2
  %114 = zext i16 %113 to i64
  %115 = getelementptr inbounds i64, i64* %4, i64 %107
  store i64 %114, i64* %115, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %102) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %101) #11
  %116 = add nuw nsw i64 %107, 1
  %117 = icmp eq i64 %116, %105
  br i1 %117, label %118, label %106

118:                                              ; preds = %80, %106, %98, %29, %92, %23
  %119 = phi i32 [ 7, %23 ], [ 7, %92 ], [ 0, %98 ], [ 0, %29 ], [ 0, %106 ], [ 0, %80 ]
  ret i32 %119
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_size_request(%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*) #2 {
  %3 = alloca i64, align 8
  %4 = bitcast %struct.FT_SizeRec_* %0 to %struct.TT_SizeRec_*
  %5 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 0
  %6 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %6, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 2
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %48, label %11

11:                                               ; preds = %2
  %12 = bitcast %struct.FT_FaceRec_* %6 to %struct.TT_FaceRec_*
  %13 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %6, i64 3, i32 13
  %14 = bitcast i16* %13 to %struct.SFNT_Interface_**
  %15 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %14, align 8
  %16 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  store i64 -6148914691236517206, i64* %3, align 8
  %17 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %15, i64 0, i32 26
  %18 = load i32 (%struct.TT_FaceRec_*, %struct.FT_Size_RequestRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_Size_RequestRec_*, i64*)** %17, align 8
  %19 = call i32 %18(%struct.TT_FaceRec_* %12, %struct.FT_Size_RequestRec_* %1, i64* nonnull %3) #11
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %45

21:                                               ; preds = %11
  %22 = load i64, i64* %3, align 8
  %23 = bitcast %struct.FT_SizeRec_* %0 to %struct.TT_FaceRec_**
  %24 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %23, align 8
  %25 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 2, i32 2, i32 5
  store i64 %22, i64* %25, align 8
  %26 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %24, i64 0, i32 0, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %24, i64 0, i32 0
  call void @FT_Select_Metrics(%struct.FT_FaceRec_* %31, i64 %22) #11
  %32 = call fastcc i32 @tt_size_reset(%struct.TT_SizeRec_* %4, i8 zeroext 0) #11
  br label %43

33:                                               ; preds = %21
  %34 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %24, i64 0, i32 22
  %35 = bitcast i8** %34 to %struct.SFNT_Interface_**
  %36 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %35, align 8
  %37 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 2
  %38 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %36, i64 0, i32 27
  %39 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_Size_Metrics_*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_Size_Metrics_*)** %38, align 8
  %40 = call i32 %39(%struct.TT_FaceRec_* %24, i64 %22, %struct.FT_Size_Metrics_* %37) #11
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %33
  store i64 4294967295, i64* %25, align 8
  br label %43

43:                                               ; preds = %30, %33, %42
  %44 = phi i32 [ %40, %42 ], [ 0, %33 ], [ 0, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %86

45:                                               ; preds = %11
  %46 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 2, i32 2, i32 5
  store i64 4294967295, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  %47 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %5, align 8
  br label %48

48:                                               ; preds = %45, %2
  %49 = phi %struct.FT_FaceRec_* [ %47, %45 ], [ %6, %2 ]
  %50 = phi i32 [ %19, %45 ], [ 0, %2 ]
  call void @FT_Request_Metrics(%struct.FT_FaceRec_* %49, %struct.FT_Size_RequestRec_* %1) #11
  %51 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %5, align 8
  %52 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %51, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %86, label %56

56:                                               ; preds = %48
  %57 = call fastcc i32 @tt_size_reset(%struct.TT_SizeRec_* %4, i8 zeroext 0)
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %86

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 1
  %61 = bitcast %struct.FT_SizeRec_* %60 to %struct.FT_Size_Metrics_**
  %62 = load %struct.FT_Size_Metrics_*, %struct.FT_Size_Metrics_** %61, align 8
  %63 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %62, i64 0, i32 0
  %64 = load i16, i16* %63, align 8
  %65 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %62, i64 0, i32 1
  %66 = load i16, i16* %65, align 2
  %67 = icmp ugt i16 %64, %66
  %68 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 3
  %69 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 4
  %70 = select i1 %67, i32* %68, i32* %69
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = icmp ne i32 %73, 4
  %75 = icmp ne i32 %71, 0
  %76 = and i1 %75, %74
  %77 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 1, i32 2, i32 6
  %78 = getelementptr inbounds i64, i64* %77, i64 2
  %79 = bitcast i64* %78 to i16*
  %80 = load i16, i16* %79, align 8
  %81 = zext i16 %80 to i64
  %82 = zext i32 %71 to i64
  %83 = select i1 %76, i64 %82, i64 72
  %84 = call i64 @FT_MulDiv(i64 %81, i64 4608, i64 %83) #11
  %85 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 2, i32 2, i32 6
  store i64 %84, i64* %85, align 8
  br label %86

86:                                               ; preds = %43, %59, %48, %56
  %87 = phi i32 [ %57, %56 ], [ 0, %59 ], [ %50, %48 ], [ %44, %43 ]
  ret i32 %87
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_size_select(%struct.FT_SizeRec_*, i64) #2 {
  %3 = bitcast %struct.FT_SizeRec_* %0 to %struct.TT_FaceRec_**
  %4 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 2, i32 2, i32 5
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 0
  %12 = bitcast %struct.FT_SizeRec_* %0 to %struct.TT_SizeRec_*
  tail call void @FT_Select_Metrics(%struct.FT_FaceRec_* %11, i64 %1) #11
  %13 = tail call fastcc i32 @tt_size_reset(%struct.TT_SizeRec_* %12, i8 zeroext 0)
  br label %24

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 22
  %16 = bitcast i8** %15 to %struct.SFNT_Interface_**
  %17 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %16, align 8
  %18 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 2
  %19 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %17, i64 0, i32 27
  %20 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_Size_Metrics_*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_Size_Metrics_*)** %19, align 8
  %21 = tail call i32 %20(%struct.TT_FaceRec_* %4, i64 %1, %struct.FT_Size_Metrics_* %18) #11
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %14
  store i64 4294967295, i64* %5, align 8
  br label %24

24:                                               ; preds = %23, %14, %10
  %25 = phi i32 [ 0, %10 ], [ 0, %14 ], [ %21, %23 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.TT_ExecContextRec_* @TT_New_Context(%struct.TT_DriverRec_* readonly) local_unnamed_addr #2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #11
  store i32 -1431655766, i32* %3, align 4
  %5 = icmp eq %struct.TT_DriverRec_* %0, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %7, align 8
  %9 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %8, i64 1152, i32* nonnull %3) #11
  %10 = bitcast i8* %9 to %struct.TT_ExecContextRec_*
  %11 = load i32, i32* %3, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %63

13:                                               ; preds = %6
  %14 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #11
  store i32 -1431655766, i32* %2, align 4
  %15 = getelementptr inbounds i8, i8* %9, i64 16
  %16 = bitcast i8* %15 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %8, %struct.FT_MemoryRec_** %16, align 8
  %17 = getelementptr inbounds i8, i8* %9, i64 780
  %18 = bitcast i8* %17 to i32*
  store i32 32, i32* %18, align 4
  %19 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %8, i64 32, i64 0, i64 32, i8* null, i32* nonnull %2) #11
  %20 = getelementptr inbounds i8, i8* %9, i64 784
  %21 = bitcast i8* %20 to i8**
  store i8* %19, i8** %21, align 8
  %22 = load i32, i32* %2, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %13
  %25 = getelementptr inbounds i8, i8* %9, i64 792
  %26 = bitcast i8* %25 to i16*
  store i16 0, i16* %26, align 8
  %27 = getelementptr inbounds i8, i8* %9, i64 794
  %28 = bitcast i8* %27 to i16*
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds i8, i8* %9, i64 40
  %30 = getelementptr inbounds i8, i8* %9, i64 720
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds i8, i8* %9, i64 728
  %33 = bitcast i8* %32 to i8**
  store i8* null, i8** %33, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  store i32 0, i32* %3, align 4
  br label %64

34:                                               ; preds = %13
  %35 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %16, align 8
  %36 = getelementptr inbounds i8, i8* %9, i64 792
  %37 = bitcast i8* %36 to i16*
  store i16 0, i16* %37, align 8
  %38 = getelementptr inbounds i8, i8* %9, i64 794
  %39 = bitcast i8* %38 to i16*
  store i16 0, i16* %39, align 2
  %40 = getelementptr inbounds i8, i8* %9, i64 48
  %41 = bitcast i8* %40 to i8**
  %42 = load i8*, i8** %41, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %35, i8* %42) #11
  %43 = getelementptr inbounds i8, i8* %9, i64 40
  %44 = getelementptr inbounds i8, i8* %9, i64 704
  %45 = bitcast i8* %44 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #11
  %46 = load i8*, i8** %45, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %35, i8* %46) #11
  %47 = getelementptr inbounds i8, i8* %9, i64 696
  %48 = getelementptr inbounds i8, i8* %9, i64 872
  %49 = bitcast i8* %48 to i64**
  %50 = bitcast i8* %48 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #11
  %51 = load i8*, i8** %50, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %35, i8* %51) #11
  store i64* null, i64** %49, align 8
  %52 = getelementptr inbounds i8, i8* %9, i64 864
  %53 = bitcast i8* %52 to i16*
  store i16 0, i16* %53, align 8
  %54 = load i8*, i8** %21, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %35, i8* %54) #11
  %55 = getelementptr inbounds i8, i8* %9, i64 776
  %56 = getelementptr inbounds i8, i8* %9, i64 728
  %57 = bitcast i8* %56 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #11
  %58 = load i8*, i8** %57, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %35, i8* %58) #11
  store i8* null, i8** %57, align 8
  %59 = getelementptr inbounds i8, i8* %9, i64 720
  %60 = bitcast i8* %59 to i32*
  store i32 0, i32* %60, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #11
  call void @ft_mem_free(%struct.FT_MemoryRec_* %35, i8* %9) #11
  %61 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  store i32 %61, i32* %3, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %64, label %63

63:                                               ; preds = %34, %6, %1
  br label %64

64:                                               ; preds = %24, %34, %63
  %65 = phi %struct.TT_ExecContextRec_* [ null, %63 ], [ %10, %34 ], [ %10, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #11
  ret %struct.TT_ExecContextRec_* %65
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare hidden i8* @ft_mem_alloc(%struct.FT_MemoryRec_*, i64, i32*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @TT_RunIns(%struct.TT_ExecContextRec_*) #2 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.TT_GlyphZoneRec_, align 8
  %4 = alloca i16, align 2
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.TT_GlyphZoneRec_, align 8
  %8 = alloca i16, align 2
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %struct.TT_GlyphZoneRec_, align 8
  %12 = alloca i16, align 2
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca %struct.IUP_WorkerRec_, align 16
  %16 = alloca %struct.FT_Vector_, align 8
  %17 = alloca %struct.FT_Vector_, align 8
  %18 = alloca %struct.FT_Vector_, align 8
  %19 = alloca %struct.FT_Vector_, align 8
  %20 = alloca %struct.FT_Vector_, align 8
  %21 = alloca %struct.FT_Vector_, align 8
  %22 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 0
  %23 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %22, align 8
  %24 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %23, i64 0, i32 0, i32 24
  %25 = bitcast %struct.FT_DriverRec_** %24 to %struct.TT_DriverRec_**
  %26 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %25, align 8
  %27 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %26, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 40
  br i1 %29, label %30, label %45

30:                                               ; preds = %1
  %31 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 71
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %23, i64 0, i32 0, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 8192
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %45

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 15
  %41 = load i8, i8* %40, align 4
  %42 = lshr i8 %41, 2
  %43 = and i8 %42, 1
  %44 = xor i8 %43, 1
  br label %45

45:                                               ; preds = %1, %30, %34, %39
  %46 = phi i8 [ %44, %39 ], [ 0, %34 ], [ 0, %30 ], [ 0, %1 ]
  %47 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 73
  store i8 %46, i8* %47, align 1
  %48 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 74
  store i8 0, i8* %48, align 4
  %49 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 75
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 12, i32 3
  %51 = load i16, i16* %50, align 4
  %52 = zext i16 %51 to i64
  %53 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 26
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, %52
  %56 = shl i64 %55, 1
  %57 = icmp ugt i64 %56, 30
  %58 = select i1 %57, i64 %56, i64 30
  %59 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 13, i32 3
  %60 = load i16, i16* %59, align 4
  %61 = zext i16 %60 to i64
  %62 = icmp ult i64 %58, %61
  br i1 %62, label %63, label %67

63:                                               ; preds = %45
  %64 = icmp ult i64 %58, 65535
  %65 = select i1 %64, i64 %58, i64 65535
  %66 = trunc i64 %65 to i16
  store i16 %66, i16* %59, align 4
  br label %67

67:                                               ; preds = %63, %45
  %68 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 77
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 79
  store i64 0, i64* %69, align 8
  %70 = icmp eq i16 %51, 0
  br i1 %70, label %81, label %71

71:                                               ; preds = %67
  %72 = zext i16 %51 to i32
  %73 = mul nuw nsw i32 %72, 10
  %74 = icmp ugt i32 %73, 50
  %75 = select i1 %74, i32 %73, i32 50
  %76 = zext i32 %75 to i64
  %77 = icmp ult i64 %54, 500
  %78 = udiv i64 %54, 10
  %79 = select i1 %77, i64 50, i64 %78
  %80 = add nuw nsw i64 %79, %76
  br label %84

81:                                               ; preds = %67
  %82 = mul i64 %54, 22
  %83 = add i64 %82, 300
  br label %84

84:                                               ; preds = %81, %71
  %85 = phi i64 [ %83, %81 ], [ %80, %71 ]
  %86 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 78
  store i64 %85, i64* %86, align 8
  %87 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %23, i64 0, i32 0, i32 4
  %88 = load i64, i64* %87, align 8
  %89 = mul i64 %88, 100
  %90 = icmp ugt i64 %85, %89
  %91 = select i1 %90, i64 %89, i64 %85
  store i64 %91, i64* %86, align 8
  %92 = select i1 %90, i64 %89, i64 %85
  %93 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 80
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 3
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 15, i32 0
  %96 = load i16, i16* %95, align 8
  %97 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 15, i32 1
  %98 = load i16, i16* %97, align 2
  %99 = icmp eq i16 %96, %98
  %100 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 66
  %101 = select i1 %99, i64 (%struct.TT_ExecContextRec_*)* @Current_Ppem, i64 (%struct.TT_ExecContextRec_*)* @Current_Ppem_Stretched
  %102 = select i1 %99, i64 (%struct.TT_ExecContextRec_*, i64)* @Read_CVT, i64 (%struct.TT_ExecContextRec_*, i64)* @Read_CVT_Stretched
  %103 = select i1 %99, void (%struct.TT_ExecContextRec_*, i64, i64)* @Write_CVT, void (%struct.TT_ExecContextRec_*, i64, i64)* @Write_CVT_Stretched
  %104 = select i1 %99, void (%struct.TT_ExecContextRec_*, i64, i64)* @Move_CVT, void (%struct.TT_ExecContextRec_*, i64, i64)* @Move_CVT_Stretched
  store i64 (%struct.TT_ExecContextRec_*)* %101, i64 (%struct.TT_ExecContextRec_*)** %100, align 8
  %105 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 67
  store i64 (%struct.TT_ExecContextRec_*, i64)* %102, i64 (%struct.TT_ExecContextRec_*, i64)** %105, align 8
  %106 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 68
  store void (%struct.TT_ExecContextRec_*, i64, i64)* %103, void (%struct.TT_ExecContextRec_*, i64, i64)** %106, align 8
  %107 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 69
  store void (%struct.TT_ExecContextRec_*, i64, i64)* %104, void (%struct.TT_ExecContextRec_*, i64, i64)** %107, align 8
  %108 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 27
  %109 = bitcast i64** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 30
  %112 = bitcast i64** %111 to i64*
  store i64 %110, i64* %112, align 8
  %113 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 48
  %114 = bitcast i64** %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 51
  %117 = bitcast i64** %116 to i64*
  store i64 %115, i64* %117, align 8
  %118 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 19
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 18
  store i32 %119, i32* %120, align 8
  tail call fastcc void @Compute_Funcs(%struct.TT_ExecContextRec_* %0)
  %121 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 8
  %122 = load i32, i32* %121, align 8
  %123 = trunc i32 %122 to i8
  %124 = icmp ult i8 %123, 8
  br i1 %124, label %125, label %132

125:                                              ; preds = %84
  %126 = sext i8 %123 to i64
  %127 = getelementptr inbounds [8 x i64 (%struct.TT_ExecContextRec_*, i64, i32)*], [8 x i64 (%struct.TT_ExecContextRec_*, i64, i32)*]* @switch.table.TT_RunIns, i64 0, i64 %126
  %128 = bitcast i64 (%struct.TT_ExecContextRec_*, i64, i32)** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 60
  %131 = bitcast i64 (%struct.TT_ExecContextRec_*, i64, i32)** %130 to i64*
  store i64 %129, i64* %131, align 8
  br label %132

132:                                              ; preds = %84, %125
  %133 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 20
  %134 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 21
  %135 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 23
  %136 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 24
  %137 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 22
  %138 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 4
  %139 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 7
  %140 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 58
  %141 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 6
  %142 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 8
  %143 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 5
  %144 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 25
  %145 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 3
  %146 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 38
  %147 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 36
  %148 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 41
  %149 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 42
  %150 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 43
  %151 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 15
  %152 = bitcast %struct.TT_ExecContextRec_* %0 to %struct.FT_FaceRec_**
  %153 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 73
  %154 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 17
  %155 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 37
  %156 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 40
  %157 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 7
  %158 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 8
  %159 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 70
  %160 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 71
  %161 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 72
  %162 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 76
  %163 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 10, i32 3
  %164 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 11, i32 3
  %165 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 10, i32 5
  %166 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 11, i32 5
  %167 = bitcast %struct.FT_Vector_* %17 to i8*
  %168 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %17, i64 0, i32 0
  %169 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %17, i64 0, i32 1
  %170 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 3, i32 0
  %171 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 3, i32 1
  %172 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 10, i32 6
  %173 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 11, i32 6
  %174 = bitcast %struct.FT_Vector_* %16 to i8*
  %175 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %16, i64 0, i32 0
  %176 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %16, i64 0, i32 1
  %177 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 4, i32 0
  %178 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 4, i32 1
  %179 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 16
  %180 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 2
  %181 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 12, i32 8
  %182 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 6
  %183 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 60
  %184 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 52
  %185 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 53
  %186 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 54
  %187 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 13
  %188 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 14
  %189 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 4
  %190 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 9
  %191 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 14
  %192 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 9, i32 3
  %193 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 61
  %194 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 9, i32 6
  %195 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 18
  %196 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 19
  %197 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 9, i32 7
  %198 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 10, i32 7
  %199 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 15, i32 2
  %200 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 15, i32 3
  %201 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 62
  %202 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 9, i32 5
  %203 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 11
  %204 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 64
  %205 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 20
  %206 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 47
  %207 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 49
  %208 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 2
  %209 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 50
  %210 = bitcast i32* %2 to i8*
  %211 = bitcast i64** %209 to i8**
  %212 = bitcast i64** %113 to i8**
  %213 = bitcast i64** %209 to i64*
  %214 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 9
  %215 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 5, i32 0
  %216 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 5, i32 1
  %217 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 10
  %218 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 0
  %219 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 1
  %220 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 10
  %221 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 65
  %222 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 2
  %223 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 11, i32 7
  %224 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 57
  %225 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 11, i32 8
  %226 = bitcast %struct.TT_GlyphZoneRec_* %3 to i8*
  %227 = bitcast i16* %4 to i8*
  %228 = bitcast i64* %5 to i8*
  %229 = bitcast i64* %6 to i8*
  %230 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 11, i32 4
  %231 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 11, i32 9
  %232 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %3, i64 0, i32 6
  %233 = bitcast %struct.TT_GlyphZoneRec_* %7 to i8*
  %234 = bitcast i16* %8 to i8*
  %235 = bitcast i64* %9 to i8*
  %236 = bitcast i64* %10 to i8*
  %237 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 11, i32 10
  %238 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %7, i64 0, i32 6
  %239 = bitcast %struct.TT_GlyphZoneRec_* %11 to i8*
  %240 = bitcast i16* %12 to i8*
  %241 = bitcast i64* %13 to i8*
  %242 = bitcast i64* %14 to i8*
  %243 = bitcast %struct.IUP_WorkerRec_* %15 to i8*
  %244 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 12, i32 4
  %245 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 12, i32 5
  %246 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 12, i32 7
  %247 = bitcast %struct.FT_Vector_** %246 to i64*
  %248 = getelementptr inbounds %struct.IUP_WorkerRec_, %struct.IUP_WorkerRec_* %15, i64 0, i32 2
  %249 = bitcast %struct.FT_Vector_** %248 to i64*
  %250 = bitcast %struct.FT_Vector_** %246 to i64**
  %251 = bitcast %struct.FT_Vector_** %248 to i64**
  %252 = getelementptr inbounds %struct.IUP_WorkerRec_, %struct.IUP_WorkerRec_* %15, i64 0, i32 3
  %253 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 12, i32 9
  %254 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 12, i32 10
  %255 = getelementptr inbounds %struct.IUP_WorkerRec_, %struct.IUP_WorkerRec_* %15, i64 0, i32 0
  %256 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 35
  %257 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 33
  %258 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 34
  %259 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 39
  %260 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 9, i32 8
  %261 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 12
  %262 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 11
  %263 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 7
  %264 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 12
  %265 = bitcast %struct.TT_GlyphZoneRec_* %214 to i8*
  %266 = bitcast %struct.TT_GlyphZoneRec_* %264 to i8*
  %267 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 13
  %268 = bitcast %struct.TT_GlyphZoneRec_* %267 to i8*
  %269 = bitcast %struct.TT_GlyphZoneRec_* %220 to i8*
  %270 = bitcast %struct.TT_GlyphZoneRec_* %203 to i8*
  %271 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 5
  %272 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 4
  %273 = bitcast %struct.FT_UnitVector_* %272 to i32*
  %274 = bitcast %struct.FT_UnitVector_* %271 to i32*
  %275 = bitcast %struct.FT_Vector_* %18 to i8*
  %276 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %18, i64 0, i32 0
  %277 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %18, i64 0, i32 1
  %278 = bitcast %struct.FT_Vector_* %19 to i8*
  %279 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %19, i64 0, i32 0
  %280 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %19, i64 0, i32 1
  %281 = getelementptr inbounds %struct.FT_UnitVector_, %struct.FT_UnitVector_* %272, i64 0, i32 0
  %282 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 3
  %283 = bitcast %struct.FT_UnitVector_* %282 to i32*
  %284 = bitcast %struct.FT_Vector_* %20 to i8*
  %285 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %20, i64 0, i32 0
  %286 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %20, i64 0, i32 1
  %287 = bitcast %struct.FT_Vector_* %21 to i8*
  %288 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %21, i64 0, i32 0
  %289 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %21, i64 0, i32 1
  %290 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 55
  %291 = load i64, i64* %134, align 8
  %292 = bitcast %struct.FT_Vector_** %245 to <2 x i64>*
  %293 = bitcast %struct.IUP_WorkerRec_* %15 to <2 x i64>*
  %294 = bitcast %struct.FT_Vector_** %245 to <2 x i64*>*
  %295 = bitcast %struct.IUP_WorkerRec_* %15 to <2 x i64*>*
  br label %296

296:                                              ; preds = %4874, %132
  %297 = phi i64 [ %291, %132 ], [ %4867, %4874 ]
  %298 = phi i64 [ 0, %132 ], [ %4866, %4874 ]
  %299 = load i8*, i8** %133, align 8
  %300 = getelementptr inbounds i8, i8* %299, i64 %297
  %301 = load i8, i8* %300, align 1
  store i8 %301, i8* %135, align 8
  %302 = zext i8 %301 to i64
  %303 = getelementptr inbounds [256 x i8], [256 x i8]* @opcode_length, i64 0, i64 %302
  %304 = load i8, i8* %303, align 1
  %305 = sext i8 %304 to i32
  store i32 %305, i32* %136, align 4
  %306 = or i64 %302, 1
  %307 = icmp eq i64 %306, 65
  br i1 %307, label %310, label %308

308:                                              ; preds = %296
  %309 = load i64, i64* %137, align 8
  br label %320

310:                                              ; preds = %296
  %311 = add nsw i64 %297, 1
  %312 = load i64, i64* %137, align 8
  %313 = icmp slt i64 %311, %312
  br i1 %313, label %314, label %4877

314:                                              ; preds = %310
  %315 = getelementptr inbounds i8, i8* %299, i64 %311
  %316 = load i8, i8* %315, align 1
  %317 = zext i8 %316 to i32
  %318 = mul nsw i32 %317, %305
  %319 = sub nsw i32 2, %318
  store i32 %319, i32* %136, align 4
  br label %320

320:                                              ; preds = %308, %314
  %321 = phi i64 [ %312, %314 ], [ %309, %308 ]
  %322 = phi i32 [ %319, %314 ], [ %305, %308 ]
  %323 = sext i32 %322 to i64
  %324 = add nsw i64 %297, %323
  %325 = icmp sgt i64 %324, %321
  br i1 %325, label %4877, label %326

326:                                              ; preds = %320
  %327 = load i64, i64* %138, align 8
  %328 = getelementptr inbounds [256 x i8], [256 x i8]* @Pop_Push_Count, i64 0, i64 %302
  %329 = load i8, i8* %328, align 1
  %330 = lshr i8 %329, 4
  %331 = zext i8 %330 to i64
  %332 = sub nsw i64 %327, %331
  store i64 %332, i64* %139, align 8
  %333 = icmp slt i64 %332, 0
  br i1 %333, label %334, label %356

334:                                              ; preds = %326
  %335 = load i8, i8* %140, align 1
  %336 = icmp eq i8 %335, 0
  br i1 %336, label %337, label %339

337:                                              ; preds = %334
  %338 = icmp ugt i8 %329, 15
  br i1 %338, label %340, label %354

339:                                              ; preds = %334
  store i32 129, i32* %145, align 8
  br label %4878

340:                                              ; preds = %337, %340
  %341 = phi i16 [ %345, %340 ], [ 0, %337 ]
  %342 = load i64*, i64** %141, align 8
  %343 = zext i16 %341 to i64
  %344 = getelementptr inbounds i64, i64* %342, i64 %343
  store i64 0, i64* %344, align 8
  %345 = add i16 %341, 1
  %346 = zext i16 %345 to i32
  %347 = load i8, i8* %135, align 8
  %348 = zext i8 %347 to i64
  %349 = getelementptr inbounds [256 x i8], [256 x i8]* @Pop_Push_Count, i64 0, i64 %348
  %350 = load i8, i8* %349, align 1
  %351 = lshr i8 %350, 4
  %352 = zext i8 %351 to i32
  %353 = icmp ult i32 %346, %352
  br i1 %353, label %340, label %354

354:                                              ; preds = %340, %337
  %355 = phi i8 [ %301, %337 ], [ %347, %340 ]
  store i64 0, i64* %139, align 8
  br label %356

356:                                              ; preds = %354, %326
  %357 = phi i64 [ 0, %354 ], [ %332, %326 ]
  %358 = phi i8 [ %355, %354 ], [ %301, %326 ]
  %359 = icmp eq i8 %358, -111
  br i1 %359, label %360, label %372

360:                                              ; preds = %356
  %361 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %22, align 8
  %362 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %361, i64 0, i32 50
  %363 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %362, align 8
  %364 = icmp eq %struct.GX_BlendRec_* %363, null
  br i1 %364, label %365, label %367

365:                                              ; preds = %360
  %366 = load i64, i64* %142, align 8
  br label %379

367:                                              ; preds = %360
  %368 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %363, i64 0, i32 0
  %369 = load i32, i32* %368, align 8
  %370 = zext i32 %369 to i64
  %371 = add nuw nsw i64 %357, %370
  store i64 %371, i64* %142, align 8
  br label %379

372:                                              ; preds = %356
  %373 = zext i8 %358 to i64
  %374 = getelementptr inbounds [256 x i8], [256 x i8]* @Pop_Push_Count, i64 0, i64 %373
  %375 = load i8, i8* %374, align 1
  %376 = and i8 %375, 15
  %377 = zext i8 %376 to i64
  %378 = add nuw nsw i64 %357, %377
  store i64 %378, i64* %142, align 8
  br label %379

379:                                              ; preds = %365, %367, %372
  %380 = phi i64 [ %366, %365 ], [ %371, %367 ], [ %378, %372 ]
  %381 = load i64, i64* %143, align 8
  %382 = icmp sgt i64 %380, %381
  br i1 %382, label %383, label %384

383:                                              ; preds = %379
  store i32 130, i32* %145, align 8
  br label %4878

384:                                              ; preds = %379
  store i8 1, i8* %144, align 8
  store i32 0, i32* %145, align 8
  %385 = load i64*, i64** %141, align 8
  %386 = getelementptr inbounds i64, i64* %385, i64 %357
  %387 = bitcast i64* %386 to i8*
  switch i8 %358, label %4272 [
    i8 0, label %388
    i8 1, label %388
    i8 2, label %388
    i8 3, label %388
    i8 4, label %388
    i8 5, label %388
    i8 6, label %400
    i8 7, label %400
    i8 8, label %450
    i8 9, label %450
    i8 10, label %499
    i8 11, label %519
    i8 12, label %538
    i8 13, label %544
    i8 14, label %550
    i8 15, label %552
    i8 16, label %693
    i8 17, label %696
    i8 18, label %699
    i8 19, label %702
    i8 20, label %714
    i8 21, label %726
    i8 22, label %738
    i8 23, label %754
    i8 24, label %761
    i8 25, label %762
    i8 26, label %763
    i8 27, label %765
    i8 28, label %809
    i8 29, label %840
    i8 30, label %842
    i8 31, label %844
    i8 32, label %857
    i8 33, label %4850
    i8 34, label %860
    i8 35, label %861
    i8 36, label %866
    i8 37, label %868
    i8 38, label %883
    i8 39, label %906
    i8 40, label %948
    i8 41, label %1005
    i8 42, label %1029
    i8 43, label %1120
    i8 44, label %1197
    i8 45, label %1293
    i8 46, label %1333
    i8 47, label %1333
    i8 48, label %1363
    i8 49, label %1363
    i8 50, label %1533
    i8 51, label %1533
    i8 52, label %1634
    i8 53, label %1634
    i8 54, label %1753
    i8 55, label %1753
    i8 56, label %1841
    i8 57, label %2027
    i8 58, label %2278
    i8 59, label %2278
    i8 60, label %2343
    i8 61, label %2404
    i8 62, label %2405
    i8 63, label %2405
    i8 64, label %2477
    i8 65, label %2519
    i8 66, label %2572
    i8 67, label %2617
    i8 68, label %2632
    i8 69, label %2644
    i8 70, label %2657
    i8 71, label %2657
    i8 72, label %2687
    i8 73, label %2721
    i8 74, label %2721
    i8 75, label %2852
    i8 76, label %2855
    i8 77, label %2870
    i8 78, label %2871
    i8 79, label %2872
    i8 80, label %2873
    i8 81, label %2879
    i8 82, label %2885
    i8 83, label %2891
    i8 84, label %2897
    i8 85, label %2903
    i8 86, label %2909
    i8 87, label %2916
    i8 88, label %2923
    i8 89, label %4850
    i8 90, label %2978
    i8 91, label %2988
    i8 92, label %2998
    i8 93, label %3002
    i8 94, label %3003
    i8 95, label %3006
    i8 96, label %3012
    i8 97, label %3017
    i8 98, label %3022
    i8 99, label %3030
    i8 100, label %3035
    i8 101, label %3040
    i8 102, label %3043
    i8 103, label %3046
    i8 104, label %3050
    i8 105, label %3050
    i8 106, label %3050
    i8 107, label %3050
    i8 108, label %3056
    i8 109, label %3056
    i8 110, label %3056
    i8 111, label %3056
    i8 112, label %3073
    i8 113, label %3097
    i8 114, label %3097
    i8 115, label %3098
    i8 116, label %3098
    i8 117, label %3098
    i8 118, label %3157
    i8 119, label %3193
    i8 120, label %3229
    i8 121, label %3264
    i8 122, label %3299
    i8 123, label %3300
    i8 124, label %3357
    i8 125, label %3358
    i8 126, label %4850
    i8 127, label %4850
    i8 -128, label %3359
    i8 -127, label %3418
    i8 -126, label %3466
    i8 -125, label %3514
    i8 -124, label %3514
    i8 -123, label %3571
    i8 -122, label %3632
    i8 -121, label %3632
    i8 -120, label %3714
    i8 -119, label %3800
    i8 -118, label %3895
    i8 -117, label %3902
    i8 -116, label %3908
    i8 -115, label %3914
    i8 -114, label %3920
    i8 -113, label %3961
    i8 -112, label %3961
    i8 -111, label %4018
    i8 -110, label %4209
  ]

388:                                              ; preds = %384, %384, %384, %384, %384, %384
  %389 = zext i8 %358 to i16
  %390 = shl i16 %389, 14
  %391 = and i16 %390, 16384
  %392 = xor i16 %391, 16384
  %393 = icmp ult i8 %358, 4
  br i1 %393, label %394, label %395

394:                                              ; preds = %388
  store i16 %391, i16* %177, align 2
  store i16 %392, i16* %178, align 2
  store i16 %391, i16* %170, align 2
  store i16 %392, i16* %171, align 2
  br label %395

395:                                              ; preds = %394, %388
  %396 = and i8 %358, 2
  %397 = icmp eq i8 %396, 0
  br i1 %397, label %398, label %399

398:                                              ; preds = %395
  store i16 %391, i16* %215, align 2
  store i16 %392, i16* %216, align 2
  br label %399

399:                                              ; preds = %395, %398
  call fastcc void @Compute_Funcs(%struct.TT_ExecContextRec_* %0) #11
  br label %4788

400:                                              ; preds = %384, %384
  %401 = getelementptr inbounds i64, i64* %386, i64 1
  %402 = load i64, i64* %401, align 8
  %403 = trunc i64 %402 to i16
  %404 = load i64, i64* %386, align 8
  %405 = load i16, i16* %164, align 4
  %406 = icmp ugt i16 %405, %403
  br i1 %406, label %407, label %411

407:                                              ; preds = %400
  %408 = trunc i64 %404 to i16
  %409 = load i16, i16* %163, align 4
  %410 = icmp ugt i16 %409, %408
  br i1 %410, label %415, label %411

411:                                              ; preds = %407, %400
  %412 = load i8, i8* %140, align 1
  %413 = icmp eq i8 %412, 0
  br i1 %413, label %4788, label %414

414:                                              ; preds = %411
  store i32 134, i32* %145, align 8
  br label %4878

415:                                              ; preds = %407
  %416 = load %struct.FT_Vector_*, %struct.FT_Vector_** %172, align 8
  %417 = and i64 %404, 65535
  %418 = load %struct.FT_Vector_*, %struct.FT_Vector_** %173, align 8
  %419 = and i64 %402, 65535
  %420 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %416, i64 %417, i32 0
  %421 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %418, i64 %419, i32 0
  %422 = bitcast i64* %420 to <2 x i64>*
  %423 = load <2 x i64>, <2 x i64>* %422, align 8
  %424 = bitcast i64* %421 to <2 x i64>*
  %425 = load <2 x i64>, <2 x i64>* %424, align 8
  %426 = sub <2 x i64> %423, %425
  %427 = extractelement <2 x i64> %426, i32 0
  %428 = extractelement <2 x i64> %426, i32 1
  %429 = or i64 %428, %427
  %430 = icmp eq i64 %429, 0
  %431 = select i1 %430, i64 16384, i64 %427
  %432 = and i8 %358, 1
  %433 = icmp eq i8 %432, 0
  %434 = or i1 %433, %430
  %435 = sub i64 0, %428
  %436 = select i1 %434, i64 %431, i64 %435
  %437 = select i1 %434, i64 %428, i64 %431
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %287) #11
  %438 = or i64 %437, %436
  %439 = icmp eq i64 %438, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %287, i8 -86, i64 16, i1 false) #11
  br i1 %439, label %448, label %440

440:                                              ; preds = %415
  store i64 %436, i64* %288, align 8
  store i64 %437, i64* %289, align 8
  %441 = call i32 @FT_Vector_NormLen(%struct.FT_Vector_* nonnull %21) #11
  %442 = load i64, i64* %288, align 8
  %443 = sdiv i64 %442, 4
  %444 = trunc i64 %443 to i16
  store i16 %444, i16* %281, align 2
  %445 = load i64, i64* %289, align 8
  %446 = sdiv i64 %445, 4
  %447 = trunc i64 %446 to i16
  store i16 %447, i16* %178, align 2
  br label %448

448:                                              ; preds = %440, %415
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %287) #11
  %449 = load i32, i32* %273, align 2
  store i32 %449, i32* %283, align 2
  call fastcc void @Compute_Funcs(%struct.TT_ExecContextRec_* %0) #11
  br label %4788

450:                                              ; preds = %384, %384
  %451 = getelementptr inbounds i64, i64* %386, i64 1
  %452 = load i64, i64* %451, align 8
  %453 = trunc i64 %452 to i16
  %454 = load i64, i64* %386, align 8
  %455 = load i16, i16* %164, align 4
  %456 = icmp ugt i16 %455, %453
  br i1 %456, label %457, label %461

457:                                              ; preds = %450
  %458 = trunc i64 %454 to i16
  %459 = load i16, i16* %163, align 4
  %460 = icmp ugt i16 %459, %458
  br i1 %460, label %465, label %461

461:                                              ; preds = %457, %450
  %462 = load i8, i8* %140, align 1
  %463 = icmp eq i8 %462, 0
  br i1 %463, label %4788, label %464

464:                                              ; preds = %461
  store i32 134, i32* %145, align 8
  br label %4878

465:                                              ; preds = %457
  %466 = load %struct.FT_Vector_*, %struct.FT_Vector_** %172, align 8
  %467 = and i64 %454, 65535
  %468 = load %struct.FT_Vector_*, %struct.FT_Vector_** %173, align 8
  %469 = and i64 %452, 65535
  %470 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %466, i64 %467, i32 0
  %471 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %468, i64 %469, i32 0
  %472 = bitcast i64* %470 to <2 x i64>*
  %473 = load <2 x i64>, <2 x i64>* %472, align 8
  %474 = bitcast i64* %471 to <2 x i64>*
  %475 = load <2 x i64>, <2 x i64>* %474, align 8
  %476 = sub <2 x i64> %473, %475
  %477 = extractelement <2 x i64> %476, i32 0
  %478 = extractelement <2 x i64> %476, i32 1
  %479 = or i64 %478, %477
  %480 = icmp eq i64 %479, 0
  %481 = select i1 %480, i64 16384, i64 %477
  %482 = and i8 %358, 1
  %483 = icmp eq i8 %482, 0
  %484 = or i1 %483, %480
  %485 = sub i64 0, %478
  %486 = select i1 %484, i64 %481, i64 %485
  %487 = select i1 %484, i64 %478, i64 %481
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %284) #11
  %488 = or i64 %487, %486
  %489 = icmp eq i64 %488, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %284, i8 -86, i64 16, i1 false) #11
  br i1 %489, label %498, label %490

490:                                              ; preds = %465
  store i64 %486, i64* %285, align 8
  store i64 %487, i64* %286, align 8
  %491 = call i32 @FT_Vector_NormLen(%struct.FT_Vector_* nonnull %20) #11
  %492 = load i64, i64* %285, align 8
  %493 = sdiv i64 %492, 4
  %494 = trunc i64 %493 to i16
  store i16 %494, i16* %215, align 2
  %495 = load i64, i64* %286, align 8
  %496 = sdiv i64 %495, 4
  %497 = trunc i64 %496 to i16
  store i16 %497, i16* %216, align 2
  br label %498

498:                                              ; preds = %490, %465
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %284) #11
  call fastcc void @Compute_Funcs(%struct.TT_ExecContextRec_* %0) #11
  br label %4788

499:                                              ; preds = %384
  %500 = getelementptr inbounds i64, i64* %386, i64 1
  %501 = load i64, i64* %500, align 8
  %502 = shl i64 %501, 48
  %503 = ashr exact i64 %502, 48
  %504 = load i64, i64* %386, align 8
  %505 = shl i64 %504, 48
  %506 = ashr exact i64 %505, 48
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %278) #11
  %507 = or i64 %506, %503
  %508 = icmp eq i64 %507, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %278, i8 -86, i64 16, i1 false) #11
  br i1 %508, label %517, label %509

509:                                              ; preds = %499
  store i64 %506, i64* %279, align 8
  store i64 %503, i64* %280, align 8
  %510 = call i32 @FT_Vector_NormLen(%struct.FT_Vector_* nonnull %19) #11
  %511 = load i64, i64* %279, align 8
  %512 = sdiv i64 %511, 4
  %513 = trunc i64 %512 to i16
  store i16 %513, i16* %281, align 2
  %514 = load i64, i64* %280, align 8
  %515 = sdiv i64 %514, 4
  %516 = trunc i64 %515 to i16
  store i16 %516, i16* %178, align 2
  br label %517

517:                                              ; preds = %499, %509
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %278) #11
  %518 = load i32, i32* %273, align 2
  store i32 %518, i32* %283, align 2
  call fastcc void @Compute_Funcs(%struct.TT_ExecContextRec_* %0) #11
  br label %4788

519:                                              ; preds = %384
  %520 = getelementptr inbounds i64, i64* %386, i64 1
  %521 = load i64, i64* %520, align 8
  %522 = shl i64 %521, 48
  %523 = ashr exact i64 %522, 48
  %524 = load i64, i64* %386, align 8
  %525 = shl i64 %524, 48
  %526 = ashr exact i64 %525, 48
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %275) #11
  %527 = or i64 %526, %523
  %528 = icmp eq i64 %527, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %275, i8 -86, i64 16, i1 false) #11
  br i1 %528, label %537, label %529

529:                                              ; preds = %519
  store i64 %526, i64* %276, align 8
  store i64 %523, i64* %277, align 8
  %530 = call i32 @FT_Vector_NormLen(%struct.FT_Vector_* nonnull %18) #11
  %531 = load i64, i64* %276, align 8
  %532 = sdiv i64 %531, 4
  %533 = trunc i64 %532 to i16
  store i16 %533, i16* %215, align 2
  %534 = load i64, i64* %277, align 8
  %535 = sdiv i64 %534, 4
  %536 = trunc i64 %535 to i16
  store i16 %536, i16* %216, align 2
  br label %537

537:                                              ; preds = %519, %529
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %275) #11
  call fastcc void @Compute_Funcs(%struct.TT_ExecContextRec_* %0) #11
  br label %4788

538:                                              ; preds = %384
  %539 = load i16, i16* %177, align 2
  %540 = sext i16 %539 to i64
  store i64 %540, i64* %386, align 8
  %541 = load i16, i16* %178, align 2
  %542 = sext i16 %541 to i64
  %543 = getelementptr inbounds i64, i64* %386, i64 1
  store i64 %542, i64* %543, align 8
  br label %4788

544:                                              ; preds = %384
  %545 = load i16, i16* %215, align 2
  %546 = sext i16 %545 to i64
  store i64 %546, i64* %386, align 8
  %547 = load i16, i16* %216, align 2
  %548 = sext i16 %547 to i64
  %549 = getelementptr inbounds i64, i64* %386, i64 1
  store i64 %548, i64* %549, align 8
  br label %4788

550:                                              ; preds = %384
  %551 = load i32, i32* %273, align 2
  store i32 %551, i32* %274, align 2
  call fastcc void @Compute_Funcs(%struct.TT_ExecContextRec_* %0) #11
  br label %4788

552:                                              ; preds = %384
  %553 = load i64, i64* %386, align 8
  %554 = getelementptr inbounds i64, i64* %386, i64 1
  %555 = load i64, i64* %554, align 8
  %556 = getelementptr inbounds i64, i64* %386, i64 2
  %557 = load i64, i64* %556, align 8
  %558 = getelementptr inbounds i64, i64* %386, i64 3
  %559 = load i64, i64* %558, align 8
  %560 = getelementptr inbounds i64, i64* %386, i64 4
  %561 = load i64, i64* %560, align 8
  %562 = trunc i64 %559 to i32
  %563 = and i32 %562, 65535
  %564 = load i16, i16* %192, align 4
  %565 = zext i16 %564 to i32
  %566 = icmp ult i32 %563, %565
  br i1 %566, label %567, label %587

567:                                              ; preds = %552
  %568 = trunc i64 %561 to i32
  %569 = and i32 %568, 65535
  %570 = icmp ult i32 %569, %565
  br i1 %570, label %571, label %587

571:                                              ; preds = %567
  %572 = trunc i64 %555 to i32
  %573 = and i32 %572, 65535
  %574 = load i16, i16* %163, align 4
  %575 = zext i16 %574 to i32
  %576 = icmp ult i32 %573, %575
  br i1 %576, label %577, label %587

577:                                              ; preds = %571
  %578 = trunc i64 %557 to i32
  %579 = and i32 %578, 65535
  %580 = icmp ult i32 %579, %575
  br i1 %580, label %581, label %587

581:                                              ; preds = %577
  %582 = trunc i64 %553 to i32
  %583 = and i32 %582, 65535
  %584 = load i16, i16* %164, align 4
  %585 = zext i16 %584 to i32
  %586 = icmp ult i32 %583, %585
  br i1 %586, label %591, label %587

587:                                              ; preds = %581, %577, %571, %567, %552
  %588 = load i8, i8* %140, align 1
  %589 = icmp eq i8 %588, 0
  br i1 %589, label %4788, label %590

590:                                              ; preds = %587
  store i32 134, i32* %145, align 8
  br label %4878

591:                                              ; preds = %581
  %592 = load %struct.FT_Vector_*, %struct.FT_Vector_** %194, align 8
  %593 = and i64 %561, 65535
  %594 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %592, i64 %593, i32 0
  %595 = load i64, i64* %594, align 8
  %596 = and i64 %559, 65535
  %597 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %592, i64 %596, i32 0
  %598 = load i64, i64* %597, align 8
  %599 = sub i64 %595, %598
  %600 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %592, i64 %593, i32 1
  %601 = load i64, i64* %600, align 8
  %602 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %592, i64 %596, i32 1
  %603 = load i64, i64* %602, align 8
  %604 = sub i64 %601, %603
  %605 = load %struct.FT_Vector_*, %struct.FT_Vector_** %172, align 8
  %606 = and i64 %557, 65535
  %607 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %605, i64 %606, i32 0
  %608 = load i64, i64* %607, align 8
  %609 = and i64 %555, 65535
  %610 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %605, i64 %609, i32 0
  %611 = load i64, i64* %610, align 8
  %612 = sub i64 %608, %611
  %613 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %605, i64 %606, i32 1
  %614 = load i64, i64* %613, align 8
  %615 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %605, i64 %609, i32 1
  %616 = load i64, i64* %615, align 8
  %617 = sub i64 %614, %616
  %618 = sub i64 0, %604
  %619 = call i64 @FT_MulDiv(i64 %612, i64 %618, i64 64) #11
  %620 = call i64 @FT_MulDiv(i64 %617, i64 %599, i64 64) #11
  %621 = add i64 %620, %619
  %622 = call i64 @FT_MulDiv(i64 %612, i64 %599, i64 64) #11
  %623 = call i64 @FT_MulDiv(i64 %617, i64 %604, i64 64) #11
  %624 = add i64 %623, %622
  %625 = icmp slt i64 %621, 0
  %626 = sub nsw i64 0, %621
  %627 = select i1 %625, i64 %626, i64 %621
  %628 = mul i64 %627, 19
  %629 = icmp slt i64 %624, 0
  %630 = sub nsw i64 0, %624
  %631 = select i1 %629, i64 %630, i64 %624
  %632 = icmp sgt i64 %628, %631
  br i1 %632, label %633, label %652

633:                                              ; preds = %591
  %634 = sub i64 %603, %616
  %635 = sub i64 %598, %611
  %636 = call i64 @FT_MulDiv(i64 %635, i64 %618, i64 64) #11
  %637 = call i64 @FT_MulDiv(i64 %634, i64 %599, i64 64) #11
  %638 = add i64 %637, %636
  %639 = call i64 @FT_MulDiv(i64 %638, i64 %612, i64 %621) #11
  %640 = call i64 @FT_MulDiv(i64 %638, i64 %617, i64 %621) #11
  %641 = load %struct.FT_Vector_*, %struct.FT_Vector_** %172, align 8
  %642 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %641, i64 %609, i32 0
  %643 = load i64, i64* %642, align 8
  %644 = add i64 %643, %639
  %645 = load %struct.FT_Vector_*, %struct.FT_Vector_** %173, align 8
  %646 = and i64 %553, 65535
  %647 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %645, i64 %646, i32 0
  store i64 %644, i64* %647, align 8
  %648 = load %struct.FT_Vector_*, %struct.FT_Vector_** %172, align 8
  %649 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %648, i64 %609, i32 1
  %650 = load i64, i64* %649, align 8
  %651 = add i64 %650, %640
  br label %684

652:                                              ; preds = %591
  %653 = load %struct.FT_Vector_*, %struct.FT_Vector_** %172, align 8
  %654 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %653, i64 %609, i32 0
  %655 = load i64, i64* %654, align 8
  %656 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %653, i64 %606, i32 0
  %657 = load i64, i64* %656, align 8
  %658 = load %struct.FT_Vector_*, %struct.FT_Vector_** %194, align 8
  %659 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %658, i64 %596, i32 0
  %660 = load i64, i64* %659, align 8
  %661 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %658, i64 %593, i32 0
  %662 = load i64, i64* %661, align 8
  %663 = add i64 %657, %655
  %664 = add i64 %663, %660
  %665 = add i64 %664, %662
  %666 = sdiv i64 %665, 4
  %667 = load %struct.FT_Vector_*, %struct.FT_Vector_** %173, align 8
  %668 = and i64 %553, 65535
  %669 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %667, i64 %668, i32 0
  store i64 %666, i64* %669, align 8
  %670 = load %struct.FT_Vector_*, %struct.FT_Vector_** %172, align 8
  %671 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %670, i64 %609, i32 1
  %672 = load i64, i64* %671, align 8
  %673 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %670, i64 %606, i32 1
  %674 = load i64, i64* %673, align 8
  %675 = load %struct.FT_Vector_*, %struct.FT_Vector_** %194, align 8
  %676 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %675, i64 %596, i32 1
  %677 = load i64, i64* %676, align 8
  %678 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %675, i64 %593, i32 1
  %679 = load i64, i64* %678, align 8
  %680 = add i64 %674, %672
  %681 = add i64 %680, %677
  %682 = add i64 %681, %679
  %683 = sdiv i64 %682, 4
  br label %684

684:                                              ; preds = %652, %633
  %685 = phi i64 [ %668, %652 ], [ %646, %633 ]
  %686 = phi i64 [ %683, %652 ], [ %651, %633 ]
  %687 = load %struct.FT_Vector_*, %struct.FT_Vector_** %173, align 8
  %688 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %687, i64 %685, i32 1
  store i64 %686, i64* %688, align 8
  %689 = load i8*, i8** %225, align 8
  %690 = getelementptr inbounds i8, i8* %689, i64 %685
  %691 = load i8, i8* %690, align 1
  %692 = or i8 %691, 24
  store i8 %692, i8* %690, align 1
  br label %4788

693:                                              ; preds = %384
  %694 = load i64, i64* %386, align 8
  %695 = trunc i64 %694 to i16
  store i16 %695, i16* %218, align 8
  br label %4788

696:                                              ; preds = %384
  %697 = load i64, i64* %386, align 8
  %698 = trunc i64 %697 to i16
  store i16 %698, i16* %219, align 2
  br label %4788

699:                                              ; preds = %384
  %700 = load i64, i64* %386, align 8
  %701 = trunc i64 %700 to i16
  store i16 %701, i16* %222, align 4
  br label %4788

702:                                              ; preds = %384
  %703 = load i64, i64* %386, align 8
  %704 = trunc i64 %703 to i32
  switch i32 %704, label %706 [
    i32 0, label %710
    i32 1, label %705
  ]

705:                                              ; preds = %702
  br label %710

706:                                              ; preds = %702
  %707 = load i8, i8* %140, align 1
  %708 = icmp eq i8 %707, 0
  br i1 %708, label %4788, label %709

709:                                              ; preds = %706
  store i32 134, i32* %145, align 8
  br label %4878

710:                                              ; preds = %702, %705
  %711 = phi i8* [ %266, %705 ], [ %268, %702 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %265, i8* align 8 %711, i64 64, i1 false) #11
  %712 = load i64, i64* %386, align 8
  %713 = trunc i64 %712 to i16
  store i16 %713, i16* %195, align 4
  br label %4788

714:                                              ; preds = %384
  %715 = load i64, i64* %386, align 8
  %716 = trunc i64 %715 to i32
  switch i32 %716, label %718 [
    i32 0, label %722
    i32 1, label %717
  ]

717:                                              ; preds = %714
  br label %722

718:                                              ; preds = %714
  %719 = load i8, i8* %140, align 1
  %720 = icmp eq i8 %719, 0
  br i1 %720, label %4788, label %721

721:                                              ; preds = %718
  store i32 134, i32* %145, align 8
  br label %4878

722:                                              ; preds = %714, %717
  %723 = phi i8* [ %266, %717 ], [ %268, %714 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %269, i8* align 8 %723, i64 64, i1 false) #11
  %724 = load i64, i64* %386, align 8
  %725 = trunc i64 %724 to i16
  store i16 %725, i16* %196, align 2
  br label %4788

726:                                              ; preds = %384
  %727 = load i64, i64* %386, align 8
  %728 = trunc i64 %727 to i32
  switch i32 %728, label %730 [
    i32 0, label %734
    i32 1, label %729
  ]

729:                                              ; preds = %726
  br label %734

730:                                              ; preds = %726
  %731 = load i8, i8* %140, align 1
  %732 = icmp eq i8 %731, 0
  br i1 %732, label %4788, label %733

733:                                              ; preds = %730
  store i32 134, i32* %145, align 8
  br label %4878

734:                                              ; preds = %726, %729
  %735 = phi i8* [ %266, %729 ], [ %268, %726 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %270, i8* align 8 %735, i64 64, i1 false) #11
  %736 = load i64, i64* %386, align 8
  %737 = trunc i64 %736 to i16
  store i16 %737, i16* %205, align 8
  br label %4788

738:                                              ; preds = %384
  %739 = load i64, i64* %386, align 8
  %740 = trunc i64 %739 to i32
  switch i32 %740, label %742 [
    i32 0, label %746
    i32 1, label %741
  ]

741:                                              ; preds = %738
  br label %746

742:                                              ; preds = %738
  %743 = load i8, i8* %140, align 1
  %744 = icmp eq i8 %743, 0
  br i1 %744, label %4788, label %745

745:                                              ; preds = %742
  store i32 134, i32* %145, align 8
  br label %4878

746:                                              ; preds = %738, %741
  %747 = phi i8* [ %266, %741 ], [ %268, %738 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %265, i8* align 8 %747, i64 64, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %269, i8* align 8 %265, i64 64, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %270, i8* align 8 %265, i64 64, i1 false) #11
  %748 = load i64, i64* %386, align 8
  %749 = trunc i64 %748 to i16
  store i16 %749, i16* %195, align 4
  %750 = load i64, i64* %386, align 8
  %751 = trunc i64 %750 to i16
  store i16 %751, i16* %196, align 2
  %752 = load i64, i64* %386, align 8
  %753 = trunc i64 %752 to i16
  store i16 %753, i16* %205, align 8
  br label %4788

754:                                              ; preds = %384
  %755 = load i64, i64* %386, align 8
  %756 = icmp slt i64 %755, 0
  br i1 %756, label %757, label %758

757:                                              ; preds = %754
  store i32 132, i32* %145, align 8
  br label %4878

758:                                              ; preds = %754
  %759 = icmp slt i64 %755, 65535
  %760 = select i1 %759, i64 %755, i64 65535
  store i64 %760, i64* %182, align 8
  br label %4788

761:                                              ; preds = %384
  store i32 1, i32* %121, align 8
  store i64 (%struct.TT_ExecContextRec_*, i64, i32)* @Round_To_Grid, i64 (%struct.TT_ExecContextRec_*, i64, i32)** %183, align 8
  br label %4788

762:                                              ; preds = %384
  store i32 0, i32* %121, align 8
  store i64 (%struct.TT_ExecContextRec_*, i64, i32)* @Round_To_Half_Grid, i64 (%struct.TT_ExecContextRec_*, i64, i32)** %183, align 8
  br label %4788

763:                                              ; preds = %384
  %764 = load i64, i64* %386, align 8
  store i64 %764, i64* %263, align 8
  br label %4788

765:                                              ; preds = %384
  %766 = load i32, i32* %136, align 4
  %767 = load i64, i64* %134, align 8
  %768 = load i64, i64* %137, align 8
  br label %769

769:                                              ; preds = %806, %765
  %770 = phi i64 [ %767, %765 ], [ %774, %806 ]
  %771 = phi i32 [ %766, %765 ], [ %796, %806 ]
  %772 = phi i32 [ 1, %765 ], [ %807, %806 ]
  %773 = sext i32 %771 to i64
  %774 = add nsw i64 %770, %773
  store i64 %774, i64* %134, align 8
  %775 = icmp slt i64 %774, %768
  br i1 %775, label %776, label %800

776:                                              ; preds = %769
  %777 = load i8*, i8** %133, align 8
  %778 = getelementptr inbounds i8, i8* %777, i64 %774
  %779 = load i8, i8* %778, align 1
  store i8 %779, i8* %135, align 8
  %780 = zext i8 %779 to i64
  %781 = getelementptr inbounds [256 x i8], [256 x i8]* @opcode_length, i64 0, i64 %780
  %782 = load i8, i8* %781, align 1
  %783 = sext i8 %782 to i32
  store i32 %783, i32* %136, align 4
  %784 = or i64 %780, 1
  %785 = icmp eq i64 %784, 65
  br i1 %785, label %786, label %795

786:                                              ; preds = %776
  %787 = add nsw i64 %774, 1
  %788 = icmp slt i64 %787, %768
  br i1 %788, label %789, label %800

789:                                              ; preds = %786
  %790 = getelementptr inbounds i8, i8* %777, i64 %787
  %791 = load i8, i8* %790, align 1
  %792 = zext i8 %791 to i32
  %793 = mul nsw i32 %792, %783
  %794 = sub nsw i32 2, %793
  store i32 %794, i32* %136, align 4
  br label %795

795:                                              ; preds = %789, %776
  %796 = phi i32 [ %794, %789 ], [ %783, %776 ]
  %797 = sext i32 %796 to i64
  %798 = add nsw i64 %774, %797
  %799 = icmp sgt i64 %798, %768
  br i1 %799, label %800, label %801

800:                                              ; preds = %795, %786, %769
  store i32 131, i32* %145, align 8
  br label %4878

801:                                              ; preds = %795
  switch i8 %779, label %806 [
    i8 88, label %802
    i8 89, label %804
  ]

802:                                              ; preds = %801
  %803 = add nsw i32 %772, 1
  br label %806

804:                                              ; preds = %801
  %805 = add nsw i32 %772, -1
  br label %806

806:                                              ; preds = %804, %802, %801
  %807 = phi i32 [ %772, %801 ], [ %805, %804 ], [ %803, %802 ]
  %808 = icmp eq i32 %807, 0
  br i1 %808, label %4788, label %769

809:                                              ; preds = %384
  %810 = load i64, i64* %386, align 8
  %811 = or i64 %810, %357
  %812 = icmp eq i64 %811, 0
  br i1 %812, label %813, label %814

813:                                              ; preds = %809
  store i32 132, i32* %145, align 8
  br label %4878

814:                                              ; preds = %809
  %815 = load i64, i64* %134, align 8
  %816 = add nsw i64 %815, %810
  store i64 %816, i64* %134, align 8
  %817 = icmp slt i64 %816, 0
  br i1 %817, label %830, label %818

818:                                              ; preds = %814
  %819 = load i32, i32* %148, align 8
  %820 = icmp sgt i32 %819, 0
  br i1 %820, label %821, label %831

821:                                              ; preds = %818
  %822 = load %struct.TT_CallRec_*, %struct.TT_CallRec_** %150, align 8
  %823 = add nsw i32 %819, -1
  %824 = sext i32 %823 to i64
  %825 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %822, i64 %824, i32 3
  %826 = load %struct.TT_DefRecord_*, %struct.TT_DefRecord_** %825, align 8
  %827 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %826, i64 0, i32 2
  %828 = load i64, i64* %827, align 8
  %829 = icmp sgt i64 %816, %828
  br i1 %829, label %830, label %831

830:                                              ; preds = %821, %814
  store i32 132, i32* %145, align 8
  br label %4878

831:                                              ; preds = %821, %818
  store i8 0, i8* %144, align 8
  %832 = load i64, i64* %386, align 8
  %833 = icmp slt i64 %832, 0
  br i1 %833, label %834, label %4788

834:                                              ; preds = %831
  %835 = load i64, i64* %69, align 8
  %836 = add i64 %835, 1
  store i64 %836, i64* %69, align 8
  %837 = load i64, i64* %93, align 8
  %838 = icmp ugt i64 %836, %837
  br i1 %838, label %839, label %4788

839:                                              ; preds = %834
  store i32 139, i32* %145, align 8
  br label %4878

840:                                              ; preds = %384
  %841 = load i64, i64* %386, align 8
  store i64 %841, i64* %217, align 8
  br label %4788

842:                                              ; preds = %384
  %843 = load i64, i64* %386, align 8
  store i64 %843, i64* %262, align 8
  br label %4788

844:                                              ; preds = %384
  %845 = load i64, i64* %386, align 8
  %846 = load i64, i64* %189, align 8
  %847 = shl i64 %845, 32
  %848 = ashr exact i64 %847, 32
  %849 = shl i64 %846, 32
  %850 = ashr exact i64 %849, 32
  %851 = mul nsw i64 %850, %848
  %852 = ashr i64 %851, 63
  %853 = add nsw i64 %851, 32768
  %854 = add nsw i64 %853, %852
  %855 = shl i64 %854, 16
  %856 = ashr i64 %855, 32
  store i64 %856, i64* %261, align 8
  br label %4788

857:                                              ; preds = %384
  %858 = load i64, i64* %386, align 8
  %859 = getelementptr inbounds i64, i64* %386, i64 1
  store i64 %858, i64* %859, align 8
  br label %4788

860:                                              ; preds = %384
  store i64 0, i64* %142, align 8
  br label %4788

861:                                              ; preds = %384
  %862 = bitcast i64* %386 to <2 x i64>*
  %863 = load <2 x i64>, <2 x i64>* %862, align 8
  %864 = shufflevector <2 x i64> %863, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %865 = bitcast i64* %386 to <2 x i64>*
  store <2 x i64> %864, <2 x i64>* %865, align 8
  br label %4788

866:                                              ; preds = %384
  %867 = load i64, i64* %138, align 8
  store i64 %867, i64* %386, align 8
  br label %4788

868:                                              ; preds = %384
  %869 = load i64, i64* %386, align 8
  %870 = icmp slt i64 %869, 1
  %871 = icmp slt i64 %357, %869
  %872 = or i1 %870, %871
  br i1 %872, label %873, label %877

873:                                              ; preds = %868
  %874 = load i8, i8* %140, align 1
  %875 = icmp eq i8 %874, 0
  br i1 %875, label %881, label %876

876:                                              ; preds = %873
  store i32 134, i32* %145, align 8
  br label %881

877:                                              ; preds = %868
  %878 = sub nsw i64 %357, %869
  %879 = getelementptr inbounds i64, i64* %385, i64 %878
  %880 = load i64, i64* %879, align 8
  br label %881

881:                                              ; preds = %873, %876, %877
  %882 = phi i64 [ %880, %877 ], [ 0, %873 ], [ 0, %876 ]
  store i64 %882, i64* %386, align 8
  br label %4788

883:                                              ; preds = %384
  %884 = load i64, i64* %386, align 8
  %885 = icmp slt i64 %884, 1
  %886 = icmp slt i64 %357, %884
  %887 = or i1 %885, %886
  br i1 %887, label %888, label %892

888:                                              ; preds = %883
  %889 = load i8, i8* %140, align 1
  %890 = icmp eq i8 %889, 0
  br i1 %890, label %4788, label %891

891:                                              ; preds = %888
  store i32 134, i32* %145, align 8
  br label %4878

892:                                              ; preds = %883
  %893 = sub nsw i64 %357, %884
  %894 = getelementptr inbounds i64, i64* %385, i64 %893
  %895 = load i64, i64* %894, align 8
  %896 = bitcast i64* %894 to i8*
  %897 = add nsw i64 %893, 1
  %898 = getelementptr inbounds i64, i64* %385, i64 %897
  %899 = bitcast i64* %898 to i8*
  %900 = shl i64 %884, 3
  %901 = add i64 %900, -8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %896, i8* align 8 %899, i64 %901, i1 false) #11
  %902 = load i64*, i64** %141, align 8
  %903 = load i64, i64* %139, align 8
  %904 = add nsw i64 %903, -1
  %905 = getelementptr inbounds i64, i64* %902, i64 %904
  store i64 %895, i64* %905, align 8
  br label %4788

906:                                              ; preds = %384
  %907 = load i64, i64* %386, align 8
  %908 = trunc i64 %907 to i16
  %909 = getelementptr inbounds i64, i64* %386, i64 1
  %910 = load i64, i64* %909, align 8
  %911 = trunc i64 %910 to i16
  %912 = trunc i64 %907 to i32
  %913 = and i32 %912, 65535
  %914 = load i16, i16* %163, align 4
  %915 = zext i16 %914 to i32
  %916 = icmp ult i32 %913, %915
  br i1 %916, label %917, label %923

917:                                              ; preds = %906
  %918 = trunc i64 %910 to i32
  %919 = and i32 %918, 65535
  %920 = load i16, i16* %192, align 4
  %921 = zext i16 %920 to i32
  %922 = icmp ult i32 %919, %921
  br i1 %922, label %927, label %923

923:                                              ; preds = %917, %906
  %924 = load i8, i8* %140, align 1
  %925 = icmp eq i8 %924, 0
  br i1 %925, label %4788, label %926

926:                                              ; preds = %923
  store i32 134, i32* %145, align 8
  br label %4878

927:                                              ; preds = %917
  %928 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %193, align 8
  %929 = load %struct.FT_Vector_*, %struct.FT_Vector_** %194, align 8
  %930 = zext i32 %919 to i64
  %931 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %929, i64 %930, i32 0
  %932 = load i64, i64* %931, align 8
  %933 = load %struct.FT_Vector_*, %struct.FT_Vector_** %172, align 8
  %934 = zext i32 %913 to i64
  %935 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %933, i64 %934, i32 0
  %936 = load i64, i64* %935, align 8
  %937 = sub i64 %932, %936
  %938 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %929, i64 %930, i32 1
  %939 = load i64, i64* %938, align 8
  %940 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %933, i64 %934, i32 1
  %941 = load i64, i64* %940, align 8
  %942 = sub i64 %939, %941
  %943 = call i64 %928(%struct.TT_ExecContextRec_* %0, i64 %937, i64 %942) #11
  %944 = sdiv i64 %943, 2
  %945 = load void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*, void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)** %204, align 8
  call void %945(%struct.TT_ExecContextRec_* %0, %struct.TT_GlyphZoneRec_* %220, i16 zeroext %908, i64 %944) #11
  %946 = load void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*, void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)** %204, align 8
  %947 = sub nsw i64 0, %944
  call void %946(%struct.TT_ExecContextRec_* %0, %struct.TT_GlyphZoneRec_* %214, i16 zeroext %911, i64 %947) #11
  br label %4788

948:                                              ; preds = %384
  %949 = load %struct.TT_DefRecord_*, %struct.TT_DefRecord_** %146, align 8
  %950 = icmp eq %struct.TT_DefRecord_* %949, null
  br i1 %950, label %4792, label %951

951:                                              ; preds = %948
  %952 = load i32, i32* %147, align 8
  %953 = zext i32 %952 to i64
  %954 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %949, i64 %953
  %955 = icmp eq i32 %952, 0
  br i1 %955, label %4792, label %956

956:                                              ; preds = %951, %1002
  %957 = phi %struct.TT_DefRecord_* [ %1003, %1002 ], [ %949, %951 ]
  %958 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %957, i64 0, i32 3
  %959 = load i32, i32* %958, align 8
  %960 = trunc i32 %959 to i8
  %961 = icmp eq i8 %960, 40
  br i1 %961, label %962, label %1002

962:                                              ; preds = %956
  %963 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %957, i64 0, i32 4
  %964 = load i8, i8* %963, align 4
  %965 = icmp eq i8 %964, 0
  br i1 %965, label %1002, label %966

966:                                              ; preds = %962
  %967 = load i32, i32* %148, align 8
  %968 = load i32, i32* %149, align 4
  %969 = icmp slt i32 %967, %968
  br i1 %969, label %971, label %970

970:                                              ; preds = %966
  store i32 130, i32* %145, align 8
  br label %4878

971:                                              ; preds = %966
  %972 = load %struct.TT_CallRec_*, %struct.TT_CallRec_** %150, align 8
  %973 = add nsw i32 %967, 1
  store i32 %973, i32* %148, align 8
  %974 = sext i32 %967 to i64
  %975 = load i32, i32* %118, align 4
  %976 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %972, i64 %974, i32 0
  store i32 %975, i32* %976, align 8
  %977 = load i64, i64* %134, align 8
  %978 = add nsw i64 %977, 1
  %979 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %972, i64 %974, i32 1
  store i64 %978, i64* %979, align 8
  %980 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %972, i64 %974, i32 2
  store i64 1, i64* %980, align 8
  %981 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %972, i64 %974, i32 3
  store %struct.TT_DefRecord_* %957, %struct.TT_DefRecord_** %981, align 8
  %982 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %957, i64 0, i32 0
  %983 = load i32, i32* %982, align 8
  %984 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %957, i64 0, i32 1
  %985 = load i64, i64* %984, align 8
  %986 = add i32 %983, -1
  %987 = icmp ugt i32 %986, 2
  br i1 %987, label %988, label %989

988:                                              ; preds = %971
  store i32 132, i32* %145, align 8
  br label %1001

989:                                              ; preds = %971
  %990 = sext i32 %986 to i64
  %991 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %990, i32 0
  %992 = load i8*, i8** %991, align 8
  %993 = icmp eq i8* %992, null
  br i1 %993, label %994, label %995

994:                                              ; preds = %989
  store i32 138, i32* %145, align 8
  br label %1001

995:                                              ; preds = %989
  %996 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %990, i32 1
  %997 = load i64, i64* %996, align 8
  %998 = icmp slt i64 %997, %985
  br i1 %998, label %999, label %1000

999:                                              ; preds = %995
  store i32 131, i32* %145, align 8
  br label %1001

1000:                                             ; preds = %995
  store i8* %992, i8** %133, align 8
  store i64 %997, i64* %137, align 8
  store i64 %985, i64* %134, align 8
  store i32 %983, i32* %118, align 4
  br label %1001

1001:                                             ; preds = %988, %994, %999, %1000
  store i8 0, i8* %144, align 8
  br label %4788

1002:                                             ; preds = %962, %956
  %1003 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %957, i64 1
  %1004 = icmp ult %struct.TT_DefRecord_* %1003, %954
  br i1 %1004, label %956, label %4792

1005:                                             ; preds = %384
  %1006 = load i64, i64* %386, align 8
  %1007 = trunc i64 %1006 to i32
  %1008 = and i32 %1007, 65535
  %1009 = load i16, i16* %192, align 4
  %1010 = zext i16 %1009 to i32
  %1011 = icmp ult i32 %1008, %1010
  br i1 %1011, label %1016, label %1012

1012:                                             ; preds = %1005
  %1013 = load i8, i8* %140, align 1
  %1014 = icmp eq i8 %1013, 0
  br i1 %1014, label %4788, label %1015

1015:                                             ; preds = %1012
  store i32 134, i32* %145, align 8
  br label %4878

1016:                                             ; preds = %1005
  %1017 = load i16, i16* %215, align 2
  %1018 = icmp eq i16 %1017, 0
  %1019 = select i1 %1018, i8 -1, i8 -9
  %1020 = load i16, i16* %216, align 2
  %1021 = icmp eq i16 %1020, 0
  %1022 = and i8 %1019, -17
  %1023 = select i1 %1021, i8 %1019, i8 %1022
  %1024 = load i8*, i8** %260, align 8
  %1025 = and i64 %1006, 65535
  %1026 = getelementptr inbounds i8, i8* %1024, i64 %1025
  %1027 = load i8, i8* %1026, align 1
  %1028 = and i8 %1023, %1027
  store i8 %1028, i8* %1026, align 1
  br label %4788

1029:                                             ; preds = %384
  %1030 = getelementptr inbounds i64, i64* %386, i64 1
  %1031 = load i64, i64* %1030, align 8
  %1032 = load i32, i32* %259, align 8
  %1033 = add i32 %1032, 1
  %1034 = zext i32 %1033 to i64
  %1035 = icmp ult i64 %1031, %1034
  br i1 %1035, label %1036, label %1119

1036:                                             ; preds = %1029
  %1037 = load %struct.TT_DefRecord_*, %struct.TT_DefRecord_** %256, align 8
  %1038 = icmp eq %struct.TT_DefRecord_* %1037, null
  %1039 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1037, i64 %1031
  %1040 = select i1 %1038, %struct.TT_DefRecord_* null, %struct.TT_DefRecord_* %1039
  %1041 = load i32, i32* %257, align 8
  %1042 = icmp eq i32 %1033, %1041
  br i1 %1042, label %1043, label %1048

1043:                                             ; preds = %1036
  %1044 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1040, i64 0, i32 3
  %1045 = load i32, i32* %1044, align 8
  %1046 = zext i32 %1045 to i64
  %1047 = icmp eq i64 %1031, %1046
  br i1 %1047, label %1065, label %1048

1048:                                             ; preds = %1043, %1036
  %1049 = zext i32 %1041 to i64
  %1050 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1037, i64 %1049
  %1051 = select i1 %1038, %struct.TT_DefRecord_* null, %struct.TT_DefRecord_* %1050
  %1052 = icmp ult %struct.TT_DefRecord_* %1037, %1051
  br i1 %1052, label %1053, label %1062

1053:                                             ; preds = %1048, %1059
  %1054 = phi %struct.TT_DefRecord_* [ %1060, %1059 ], [ %1037, %1048 ]
  %1055 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1054, i64 0, i32 3
  %1056 = load i32, i32* %1055, align 8
  %1057 = zext i32 %1056 to i64
  %1058 = icmp eq i64 %1031, %1057
  br i1 %1058, label %1062, label %1059

1059:                                             ; preds = %1053
  %1060 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1054, i64 1
  %1061 = icmp ult %struct.TT_DefRecord_* %1060, %1051
  br i1 %1061, label %1053, label %1062

1062:                                             ; preds = %1059, %1053, %1048
  %1063 = phi %struct.TT_DefRecord_* [ %1037, %1048 ], [ %1060, %1059 ], [ %1054, %1053 ]
  %1064 = icmp eq %struct.TT_DefRecord_* %1063, %1051
  br i1 %1064, label %1119, label %1065

1065:                                             ; preds = %1062, %1043
  %1066 = phi %struct.TT_DefRecord_* [ %1063, %1062 ], [ %1040, %1043 ]
  %1067 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1066, i64 0, i32 4
  %1068 = load i8, i8* %1067, align 4
  %1069 = icmp eq i8 %1068, 0
  br i1 %1069, label %1119, label %1070

1070:                                             ; preds = %1065
  %1071 = load i32, i32* %148, align 8
  %1072 = load i32, i32* %149, align 4
  %1073 = icmp slt i32 %1071, %1072
  br i1 %1073, label %1075, label %1074

1074:                                             ; preds = %1070
  store i32 130, i32* %145, align 8
  br label %4878

1075:                                             ; preds = %1070
  %1076 = load i64, i64* %386, align 8
  %1077 = icmp sgt i64 %1076, 0
  br i1 %1077, label %1078, label %4788

1078:                                             ; preds = %1075
  %1079 = load %struct.TT_CallRec_*, %struct.TT_CallRec_** %150, align 8
  %1080 = sext i32 %1071 to i64
  %1081 = load i32, i32* %118, align 4
  %1082 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %1079, i64 %1080, i32 0
  store i32 %1081, i32* %1082, align 8
  %1083 = load i64, i64* %134, align 8
  %1084 = add nsw i64 %1083, 1
  %1085 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %1079, i64 %1080, i32 1
  store i64 %1084, i64* %1085, align 8
  %1086 = load i64, i64* %386, align 8
  %1087 = shl i64 %1086, 32
  %1088 = ashr exact i64 %1087, 32
  %1089 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %1079, i64 %1080, i32 2
  store i64 %1088, i64* %1089, align 8
  %1090 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %1079, i64 %1080, i32 3
  store %struct.TT_DefRecord_* %1066, %struct.TT_DefRecord_** %1090, align 8
  %1091 = load i32, i32* %148, align 8
  %1092 = add nsw i32 %1091, 1
  store i32 %1092, i32* %148, align 8
  %1093 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1066, i64 0, i32 0
  %1094 = load i32, i32* %1093, align 8
  %1095 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1066, i64 0, i32 1
  %1096 = load i64, i64* %1095, align 8
  %1097 = add i32 %1094, -1
  %1098 = icmp ugt i32 %1097, 2
  br i1 %1098, label %1099, label %1100

1099:                                             ; preds = %1078
  store i32 132, i32* %145, align 8
  br label %1112

1100:                                             ; preds = %1078
  %1101 = sext i32 %1097 to i64
  %1102 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %1101, i32 0
  %1103 = load i8*, i8** %1102, align 8
  %1104 = icmp eq i8* %1103, null
  br i1 %1104, label %1105, label %1106

1105:                                             ; preds = %1100
  store i32 138, i32* %145, align 8
  br label %1112

1106:                                             ; preds = %1100
  %1107 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %1101, i32 1
  %1108 = load i64, i64* %1107, align 8
  %1109 = icmp slt i64 %1108, %1096
  br i1 %1109, label %1110, label %1111

1110:                                             ; preds = %1106
  store i32 131, i32* %145, align 8
  br label %1112

1111:                                             ; preds = %1106
  store i8* %1103, i8** %133, align 8
  store i64 %1108, i64* %137, align 8
  store i64 %1096, i64* %134, align 8
  store i32 %1094, i32* %118, align 4
  br label %1112

1112:                                             ; preds = %1111, %1110, %1105, %1099
  store i8 0, i8* %144, align 8
  %1113 = load i64, i64* %386, align 8
  %1114 = load i64, i64* %68, align 8
  %1115 = add i64 %1114, %1113
  store i64 %1115, i64* %68, align 8
  %1116 = load i64, i64* %86, align 8
  %1117 = icmp ugt i64 %1115, %1116
  br i1 %1117, label %1118, label %4788

1118:                                             ; preds = %1112
  store i32 139, i32* %145, align 8
  br label %4878

1119:                                             ; preds = %1065, %1062, %1029
  store i32 134, i32* %145, align 8
  br label %4878

1120:                                             ; preds = %384
  %1121 = load i64, i64* %386, align 8
  %1122 = load i32, i32* %259, align 8
  %1123 = add i32 %1122, 1
  %1124 = zext i32 %1123 to i64
  %1125 = icmp ult i64 %1121, %1124
  br i1 %1125, label %1126, label %1196

1126:                                             ; preds = %1120
  %1127 = load %struct.TT_DefRecord_*, %struct.TT_DefRecord_** %256, align 8
  %1128 = icmp eq %struct.TT_DefRecord_* %1127, null
  br i1 %1128, label %1196, label %1129

1129:                                             ; preds = %1126
  %1130 = load i32, i32* %257, align 8
  %1131 = icmp eq i32 %1123, %1130
  br i1 %1131, label %1132, label %1138

1132:                                             ; preds = %1129
  %1133 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1127, i64 %1121
  %1134 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1127, i64 %1121, i32 3
  %1135 = load i32, i32* %1134, align 8
  %1136 = zext i32 %1135 to i64
  %1137 = icmp eq i64 %1121, %1136
  br i1 %1137, label %1154, label %1138

1138:                                             ; preds = %1132, %1129
  %1139 = zext i32 %1130 to i64
  %1140 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1127, i64 %1139
  %1141 = icmp eq i32 %1130, 0
  br i1 %1141, label %1151, label %1142

1142:                                             ; preds = %1138, %1148
  %1143 = phi %struct.TT_DefRecord_* [ %1149, %1148 ], [ %1127, %1138 ]
  %1144 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1143, i64 0, i32 3
  %1145 = load i32, i32* %1144, align 8
  %1146 = zext i32 %1145 to i64
  %1147 = icmp eq i64 %1121, %1146
  br i1 %1147, label %1151, label %1148

1148:                                             ; preds = %1142
  %1149 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1143, i64 1
  %1150 = icmp ult %struct.TT_DefRecord_* %1149, %1140
  br i1 %1150, label %1142, label %1151

1151:                                             ; preds = %1148, %1142, %1138
  %1152 = phi %struct.TT_DefRecord_* [ %1127, %1138 ], [ %1149, %1148 ], [ %1143, %1142 ]
  %1153 = icmp eq %struct.TT_DefRecord_* %1152, %1140
  br i1 %1153, label %1196, label %1154

1154:                                             ; preds = %1151, %1132
  %1155 = phi %struct.TT_DefRecord_* [ %1152, %1151 ], [ %1133, %1132 ]
  %1156 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1155, i64 0, i32 4
  %1157 = load i8, i8* %1156, align 4
  %1158 = icmp eq i8 %1157, 0
  br i1 %1158, label %1196, label %1159

1159:                                             ; preds = %1154
  %1160 = load i32, i32* %148, align 8
  %1161 = load i32, i32* %149, align 4
  %1162 = icmp slt i32 %1160, %1161
  br i1 %1162, label %1164, label %1163

1163:                                             ; preds = %1159
  store i32 130, i32* %145, align 8
  br label %4878

1164:                                             ; preds = %1159
  %1165 = load %struct.TT_CallRec_*, %struct.TT_CallRec_** %150, align 8
  %1166 = sext i32 %1160 to i64
  %1167 = load i32, i32* %118, align 4
  %1168 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %1165, i64 %1166, i32 0
  store i32 %1167, i32* %1168, align 8
  %1169 = load i64, i64* %134, align 8
  %1170 = add nsw i64 %1169, 1
  %1171 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %1165, i64 %1166, i32 1
  store i64 %1170, i64* %1171, align 8
  %1172 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %1165, i64 %1166, i32 2
  store i64 1, i64* %1172, align 8
  %1173 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %1165, i64 %1166, i32 3
  store %struct.TT_DefRecord_* %1155, %struct.TT_DefRecord_** %1173, align 8
  %1174 = load i32, i32* %148, align 8
  %1175 = add nsw i32 %1174, 1
  store i32 %1175, i32* %148, align 8
  %1176 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1155, i64 0, i32 0
  %1177 = load i32, i32* %1176, align 8
  %1178 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1155, i64 0, i32 1
  %1179 = load i64, i64* %1178, align 8
  %1180 = add i32 %1177, -1
  %1181 = icmp ugt i32 %1180, 2
  br i1 %1181, label %1182, label %1183

1182:                                             ; preds = %1164
  store i32 132, i32* %145, align 8
  br label %1195

1183:                                             ; preds = %1164
  %1184 = sext i32 %1180 to i64
  %1185 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %1184, i32 0
  %1186 = load i8*, i8** %1185, align 8
  %1187 = icmp eq i8* %1186, null
  br i1 %1187, label %1188, label %1189

1188:                                             ; preds = %1183
  store i32 138, i32* %145, align 8
  br label %1195

1189:                                             ; preds = %1183
  %1190 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %1184, i32 1
  %1191 = load i64, i64* %1190, align 8
  %1192 = icmp slt i64 %1191, %1179
  br i1 %1192, label %1193, label %1194

1193:                                             ; preds = %1189
  store i32 131, i32* %145, align 8
  br label %1195

1194:                                             ; preds = %1189
  store i8* %1186, i8** %133, align 8
  store i64 %1191, i64* %137, align 8
  store i64 %1179, i64* %134, align 8
  store i32 %1177, i32* %118, align 4
  br label %1195

1195:                                             ; preds = %1194, %1193, %1188, %1182
  store i8 0, i8* %144, align 8
  br label %4788

1196:                                             ; preds = %1154, %1151, %1126, %1120
  store i32 134, i32* %145, align 8
  br label %4878

1197:                                             ; preds = %384
  %1198 = load i32, i32* %120, align 8
  %1199 = icmp eq i32 %1198, 3
  br i1 %1199, label %1200, label %1201

1200:                                             ; preds = %1197
  store i32 156, i32* %145, align 8
  br label %4878

1201:                                             ; preds = %1197
  %1202 = load %struct.TT_DefRecord_*, %struct.TT_DefRecord_** %256, align 8
  %1203 = icmp eq %struct.TT_DefRecord_* %1202, null
  br i1 %1203, label %1204, label %1206

1204:                                             ; preds = %1201
  %1205 = load i64, i64* %386, align 8
  br label %1224

1206:                                             ; preds = %1201
  %1207 = load i32, i32* %257, align 8
  %1208 = zext i32 %1207 to i64
  %1209 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1202, i64 %1208
  %1210 = load i64, i64* %386, align 8
  %1211 = icmp eq i32 %1207, 0
  br i1 %1211, label %1221, label %1212

1212:                                             ; preds = %1206, %1218
  %1213 = phi %struct.TT_DefRecord_* [ %1219, %1218 ], [ %1202, %1206 ]
  %1214 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1213, i64 0, i32 3
  %1215 = load i32, i32* %1214, align 8
  %1216 = zext i32 %1215 to i64
  %1217 = icmp eq i64 %1210, %1216
  br i1 %1217, label %1221, label %1218

1218:                                             ; preds = %1212
  %1219 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1213, i64 1
  %1220 = icmp ult %struct.TT_DefRecord_* %1219, %1209
  br i1 %1220, label %1212, label %1221

1221:                                             ; preds = %1218, %1212, %1206
  %1222 = phi %struct.TT_DefRecord_* [ %1202, %1206 ], [ %1219, %1218 ], [ %1213, %1212 ]
  %1223 = icmp eq %struct.TT_DefRecord_* %1222, %1209
  br i1 %1223, label %1224, label %1233

1224:                                             ; preds = %1221, %1204
  %1225 = phi %struct.TT_DefRecord_* [ null, %1204 ], [ %1209, %1221 ]
  %1226 = phi i64 [ %1205, %1204 ], [ %1210, %1221 ]
  %1227 = load i32, i32* %257, align 8
  %1228 = load i32, i32* %258, align 4
  %1229 = icmp ult i32 %1227, %1228
  br i1 %1229, label %1231, label %1230

1230:                                             ; preds = %1224
  store i32 140, i32* %145, align 8
  br label %4878

1231:                                             ; preds = %1224
  %1232 = add nuw i32 %1227, 1
  store i32 %1232, i32* %257, align 8
  br label %1233

1233:                                             ; preds = %1231, %1221
  %1234 = phi %struct.TT_DefRecord_* [ %1225, %1231 ], [ %1222, %1221 ]
  %1235 = phi i64 [ %1226, %1231 ], [ %1210, %1221 ]
  %1236 = icmp ugt i64 %1235, 65535
  br i1 %1236, label %1237, label %1238

1237:                                             ; preds = %1233
  store i32 140, i32* %145, align 8
  br label %4878

1238:                                             ; preds = %1233
  %1239 = load i32, i32* %118, align 4
  %1240 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1234, i64 0, i32 0
  store i32 %1239, i32* %1240, align 8
  %1241 = trunc i64 %1235 to i32
  %1242 = and i32 %1241, 65535
  %1243 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1234, i64 0, i32 3
  store i32 %1242, i32* %1243, align 8
  %1244 = load i64, i64* %134, align 8
  %1245 = add nsw i64 %1244, 1
  %1246 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1234, i64 0, i32 1
  store i64 %1245, i64* %1246, align 8
  %1247 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1234, i64 0, i32 4
  store i8 1, i8* %1247, align 4
  %1248 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1234, i64 0, i32 5
  store i8 0, i8* %1248, align 1
  %1249 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1234, i64 0, i32 6
  store i64 0, i64* %1249, align 8
  %1250 = load i32, i32* %259, align 8
  %1251 = zext i32 %1250 to i64
  %1252 = icmp ugt i64 %1235, %1251
  br i1 %1252, label %1253, label %1254

1253:                                             ; preds = %1238
  store i32 %1242, i32* %259, align 8
  br label %1254

1254:                                             ; preds = %1253, %1238
  %1255 = load i32, i32* %136, align 4
  %1256 = load i64, i64* %134, align 8
  %1257 = load i64, i64* %137, align 8
  br label %1258

1258:                                             ; preds = %1289, %1254
  %1259 = phi i64 [ %1262, %1289 ], [ %1256, %1254 ]
  %1260 = phi i32 [ %1284, %1289 ], [ %1255, %1254 ]
  %1261 = sext i32 %1260 to i64
  %1262 = add nsw i64 %1259, %1261
  store i64 %1262, i64* %134, align 8
  %1263 = icmp slt i64 %1262, %1257
  br i1 %1263, label %1264, label %1288

1264:                                             ; preds = %1258
  %1265 = load i8*, i8** %133, align 8
  %1266 = getelementptr inbounds i8, i8* %1265, i64 %1262
  %1267 = load i8, i8* %1266, align 1
  store i8 %1267, i8* %135, align 8
  %1268 = zext i8 %1267 to i64
  %1269 = getelementptr inbounds [256 x i8], [256 x i8]* @opcode_length, i64 0, i64 %1268
  %1270 = load i8, i8* %1269, align 1
  %1271 = sext i8 %1270 to i32
  store i32 %1271, i32* %136, align 4
  %1272 = or i64 %1268, 1
  %1273 = icmp eq i64 %1272, 65
  br i1 %1273, label %1274, label %1283

1274:                                             ; preds = %1264
  %1275 = add nsw i64 %1262, 1
  %1276 = icmp slt i64 %1275, %1257
  br i1 %1276, label %1277, label %1288

1277:                                             ; preds = %1274
  %1278 = getelementptr inbounds i8, i8* %1265, i64 %1275
  %1279 = load i8, i8* %1278, align 1
  %1280 = zext i8 %1279 to i32
  %1281 = mul nsw i32 %1280, %1271
  %1282 = sub nsw i32 2, %1281
  store i32 %1282, i32* %136, align 4
  br label %1283

1283:                                             ; preds = %1277, %1264
  %1284 = phi i32 [ %1282, %1277 ], [ %1271, %1264 ]
  %1285 = sext i32 %1284 to i64
  %1286 = add nsw i64 %1262, %1285
  %1287 = icmp sgt i64 %1286, %1257
  br i1 %1287, label %1288, label %1289

1288:                                             ; preds = %1283, %1274, %1258
  store i32 131, i32* %145, align 8
  br label %4878

1289:                                             ; preds = %1283
  switch i8 %1267, label %1258 [
    i8 -119, label %1290
    i8 44, label %1290
    i8 45, label %1291
  ]

1290:                                             ; preds = %1289, %1289
  store i32 137, i32* %145, align 8
  br label %4878

1291:                                             ; preds = %1289
  %1292 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1234, i64 0, i32 2
  store i64 %1262, i64* %1292, align 8
  br label %4788

1293:                                             ; preds = %384
  %1294 = load i32, i32* %148, align 8
  %1295 = icmp slt i32 %1294, 1
  br i1 %1295, label %1296, label %1297

1296:                                             ; preds = %1293
  store i32 136, i32* %145, align 8
  br label %4878

1297:                                             ; preds = %1293
  %1298 = add nsw i32 %1294, -1
  store i32 %1298, i32* %148, align 8
  %1299 = load %struct.TT_CallRec_*, %struct.TT_CallRec_** %150, align 8
  %1300 = sext i32 %1298 to i64
  %1301 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %1299, i64 %1300, i32 2
  %1302 = load i64, i64* %1301, align 8
  %1303 = add nsw i64 %1302, -1
  store i64 %1303, i64* %1301, align 8
  store i8 0, i8* %144, align 8
  %1304 = load i64, i64* %1301, align 8
  %1305 = icmp sgt i64 %1304, 0
  br i1 %1305, label %1306, label %1313

1306:                                             ; preds = %1297
  %1307 = load i32, i32* %148, align 8
  %1308 = add nsw i32 %1307, 1
  store i32 %1308, i32* %148, align 8
  %1309 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %1299, i64 %1300, i32 3
  %1310 = load %struct.TT_DefRecord_*, %struct.TT_DefRecord_** %1309, align 8
  %1311 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %1310, i64 0, i32 1
  %1312 = load i64, i64* %1311, align 8
  store i64 %1312, i64* %134, align 8
  br label %4788

1313:                                             ; preds = %1297
  %1314 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %1299, i64 %1300, i32 0
  %1315 = load i32, i32* %1314, align 8
  %1316 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %1299, i64 %1300, i32 1
  %1317 = load i64, i64* %1316, align 8
  %1318 = add i32 %1315, -1
  %1319 = icmp ugt i32 %1318, 2
  br i1 %1319, label %1320, label %1321

1320:                                             ; preds = %1313
  store i32 132, i32* %145, align 8
  br label %4878

1321:                                             ; preds = %1313
  %1322 = sext i32 %1318 to i64
  %1323 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %1322, i32 0
  %1324 = load i8*, i8** %1323, align 8
  %1325 = icmp eq i8* %1324, null
  br i1 %1325, label %1326, label %1327

1326:                                             ; preds = %1321
  store i32 138, i32* %145, align 8
  br label %4878

1327:                                             ; preds = %1321
  %1328 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %1322, i32 1
  %1329 = load i64, i64* %1328, align 8
  %1330 = icmp slt i64 %1329, %1317
  br i1 %1330, label %1331, label %1332

1331:                                             ; preds = %1327
  store i32 131, i32* %145, align 8
  br label %4878

1332:                                             ; preds = %1327
  store i8* %1324, i8** %133, align 8
  store i64 %1329, i64* %137, align 8
  store i64 %1317, i64* %134, align 8
  store i32 %1315, i32* %118, align 4
  br label %4788

1333:                                             ; preds = %384, %384
  %1334 = load i64, i64* %386, align 8
  %1335 = trunc i64 %1334 to i16
  %1336 = trunc i64 %1334 to i32
  %1337 = and i32 %1336, 65535
  %1338 = load i16, i16* %192, align 4
  %1339 = zext i16 %1338 to i32
  %1340 = icmp ult i32 %1337, %1339
  br i1 %1340, label %1345, label %1341

1341:                                             ; preds = %1333
  %1342 = load i8, i8* %140, align 1
  %1343 = icmp eq i8 %1342, 0
  br i1 %1343, label %4788, label %1344

1344:                                             ; preds = %1341
  store i32 134, i32* %145, align 8
  br label %4878

1345:                                             ; preds = %1333
  %1346 = and i8 %358, 1
  %1347 = icmp eq i8 %1346, 0
  br i1 %1347, label %1360, label %1348

1348:                                             ; preds = %1345
  %1349 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %193, align 8
  %1350 = load %struct.FT_Vector_*, %struct.FT_Vector_** %194, align 8
  %1351 = and i64 %1334, 65535
  %1352 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1350, i64 %1351, i32 0
  %1353 = load i64, i64* %1352, align 8
  %1354 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1350, i64 %1351, i32 1
  %1355 = load i64, i64* %1354, align 8
  %1356 = call i64 %1349(%struct.TT_ExecContextRec_* %0, i64 %1353, i64 %1355) #11
  %1357 = load i64 (%struct.TT_ExecContextRec_*, i64, i32)*, i64 (%struct.TT_ExecContextRec_*, i64, i32)** %183, align 8
  %1358 = call i64 %1357(%struct.TT_ExecContextRec_* %0, i64 %1356, i32 3) #11
  %1359 = sub i64 %1358, %1356
  br label %1360

1360:                                             ; preds = %1348, %1345
  %1361 = phi i64 [ %1359, %1348 ], [ 0, %1345 ]
  %1362 = load void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*, void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)** %204, align 8
  call void %1362(%struct.TT_ExecContextRec_* %0, %struct.TT_GlyphZoneRec_* %214, i16 zeroext %1335, i64 %1361) #11
  store i16 %1335, i16* %218, align 8
  store i16 %1335, i16* %219, align 2
  br label %4788

1363:                                             ; preds = %384, %384
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %243) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %243, i8 -86, i64 32, i1 false) #11
  %1364 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %152, align 8
  %1365 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1364, i64 0, i32 24
  %1366 = bitcast %struct.FT_DriverRec_** %1365 to %struct.TT_DriverRec_**
  %1367 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %1366, align 8
  %1368 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %1367, i64 0, i32 2
  %1369 = load i32, i32* %1368, align 8
  %1370 = icmp eq i32 %1369, 40
  br i1 %1370, label %1371, label %1385

1371:                                             ; preds = %1363
  %1372 = load i8, i8* %153, align 1
  %1373 = icmp eq i8 %1372, 0
  br i1 %1373, label %1385, label %1374

1374:                                             ; preds = %1371
  %1375 = load i8, i8* %48, align 4
  %1376 = icmp eq i8 %1375, 0
  br i1 %1376, label %1380, label %1377

1377:                                             ; preds = %1374
  %1378 = load i8, i8* %49, align 1
  %1379 = icmp eq i8 %1378, 0
  br i1 %1379, label %1380, label %1532

1380:                                             ; preds = %1377, %1374
  %1381 = and i8 %358, 1
  %1382 = icmp eq i8 %1381, 0
  br i1 %1382, label %1384, label %1383

1383:                                             ; preds = %1380
  store i8 1, i8* %48, align 4
  br label %1385

1384:                                             ; preds = %1380
  store i8 1, i8* %49, align 1
  br label %1385

1385:                                             ; preds = %1384, %1383, %1371, %1363
  %1386 = load i16, i16* %244, align 2
  %1387 = icmp eq i16 %1386, 0
  br i1 %1387, label %1532, label %1388

1388:                                             ; preds = %1385
  %1389 = and i8 %358, 1
  %1390 = icmp eq i8 %1389, 0
  br i1 %1390, label %1396, label %1391

1391:                                             ; preds = %1388
  %1392 = load <2 x i64>, <2 x i64>* %292, align 8
  store <2 x i64> %1392, <2 x i64>* %293, align 16
  %1393 = load i64, i64* %247, align 8
  store i64 %1393, i64* %249, align 16
  %1394 = extractelement <2 x i64> %1392, i32 1
  %1395 = inttoptr i64 %1394 to %struct.FT_Vector_*
  br label %1403

1396:                                             ; preds = %1388
  %1397 = load <2 x i64*>, <2 x i64*>* %294, align 8
  %1398 = getelementptr i64, <2 x i64*> %1397, <2 x i64> <i64 1, i64 1>
  store <2 x i64*> %1398, <2 x i64*>* %295, align 16
  %1399 = load i64*, i64** %250, align 8
  %1400 = getelementptr inbounds i64, i64* %1399, i64 1
  store i64* %1400, i64** %251, align 16
  %1401 = bitcast <2 x i64*> %1398 to <2 x %struct.FT_Vector_*>
  %1402 = extractelement <2 x %struct.FT_Vector_*> %1401, i32 1
  br label %1403

1403:                                             ; preds = %1396, %1391
  %1404 = phi %struct.FT_Vector_* [ %1395, %1391 ], [ %1402, %1396 ]
  %1405 = phi i32 [ 8, %1391 ], [ 16, %1396 ]
  %1406 = load i16, i16* %50, align 4
  %1407 = zext i16 %1406 to i32
  store i32 %1407, i32* %252, align 8
  br label %1408

1408:                                             ; preds = %1530, %1403
  %1409 = phi i16 [ %1531, %1530 ], [ %1406, %1403 ]
  %1410 = phi i64 [ %1526, %1530 ], [ 0, %1403 ]
  %1411 = phi i32 [ %1525, %1530 ], [ 0, %1403 ]
  %1412 = load i16*, i16** %253, align 8
  %1413 = getelementptr inbounds i16, i16* %1412, i64 %1410
  %1414 = load i16, i16* %1413, align 2
  %1415 = zext i16 %1414 to i32
  %1416 = load i16, i16* %254, align 8
  %1417 = zext i16 %1416 to i32
  %1418 = sub nsw i32 %1415, %1417
  %1419 = zext i16 %1409 to i32
  %1420 = icmp ult i32 %1418, %1419
  %1421 = add nsw i32 %1419, -1
  %1422 = select i1 %1420, i32 %1418, i32 %1421
  %1423 = icmp ugt i32 %1411, %1422
  br i1 %1423, label %1524, label %1424

1424:                                             ; preds = %1408
  %1425 = load i8*, i8** %181, align 8
  br label %1426

1426:                                             ; preds = %1438, %1424
  %1427 = phi i32 [ %1411, %1424 ], [ %1434, %1438 ]
  %1428 = zext i32 %1427 to i64
  %1429 = getelementptr inbounds i8, i8* %1425, i64 %1428
  %1430 = load i8, i8* %1429, align 1
  %1431 = zext i8 %1430 to i32
  %1432 = and i32 %1405, %1431
  %1433 = icmp eq i32 %1432, 0
  %1434 = add i32 %1427, 1
  %1435 = icmp ugt i32 %1434, %1422
  br i1 %1433, label %1438, label %1436

1436:                                             ; preds = %1426
  %1437 = zext i32 %1427 to i64
  br i1 %1435, label %1460, label %1439

1438:                                             ; preds = %1426
  br i1 %1435, label %1524, label %1426

1439:                                             ; preds = %1436, %1456
  %1440 = phi i8* [ %1457, %1456 ], [ %1425, %1436 ]
  %1441 = phi i32 [ %1454, %1456 ], [ %1434, %1436 ]
  %1442 = phi i32 [ %1441, %1456 ], [ %1427, %1436 ]
  %1443 = phi i32 [ %1453, %1456 ], [ %1427, %1436 ]
  %1444 = zext i32 %1441 to i64
  %1445 = getelementptr inbounds i8, i8* %1440, i64 %1444
  %1446 = load i8, i8* %1445, align 1
  %1447 = zext i8 %1446 to i32
  %1448 = and i32 %1405, %1447
  %1449 = icmp eq i32 %1448, 0
  br i1 %1449, label %1452, label %1450

1450:                                             ; preds = %1439
  %1451 = add i32 %1443, 1
  call fastcc void @_iup_worker_interpolate(%struct.IUP_WorkerRec_* nonnull %15, i32 %1451, i32 %1442, i32 %1443, i32 %1441) #11
  br label %1452

1452:                                             ; preds = %1450, %1439
  %1453 = phi i32 [ %1441, %1450 ], [ %1443, %1439 ]
  %1454 = add i32 %1441, 1
  %1455 = icmp ugt i32 %1454, %1422
  br i1 %1455, label %1458, label %1456

1456:                                             ; preds = %1452
  %1457 = load i8*, i8** %181, align 8
  br label %1439

1458:                                             ; preds = %1452
  %1459 = icmp eq i32 %1453, %1427
  br i1 %1459, label %1460, label %1518

1460:                                             ; preds = %1458, %1436
  %1461 = phi i32 [ %1454, %1458 ], [ %1434, %1436 ]
  %1462 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1404, i64 %1437, i32 0
  %1463 = load i64, i64* %1462, align 8
  %1464 = load %struct.FT_Vector_*, %struct.FT_Vector_** %255, align 16
  %1465 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1464, i64 %1437, i32 0
  %1466 = load i64, i64* %1465, align 8
  %1467 = sub i64 %1463, %1466
  %1468 = icmp eq i64 %1467, 0
  br i1 %1468, label %1524, label %1469

1469:                                             ; preds = %1460
  %1470 = icmp ult i32 %1411, %1427
  br i1 %1470, label %1471, label %1490

1471:                                             ; preds = %1469
  %1472 = zext i32 %1411 to i64
  %1473 = sub nsw i64 %1437, %1472
  %1474 = xor i64 %1472, -1
  %1475 = add nsw i64 %1474, %1437
  %1476 = and i64 %1473, 3
  %1477 = icmp eq i64 %1476, 0
  br i1 %1477, label %1487, label %1478

1478:                                             ; preds = %1471, %1478
  %1479 = phi i64 [ %1484, %1478 ], [ %1472, %1471 ]
  %1480 = phi i64 [ %1485, %1478 ], [ %1476, %1471 ]
  %1481 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1404, i64 %1479, i32 0
  %1482 = load i64, i64* %1481, align 8
  %1483 = add i64 %1482, %1467
  store i64 %1483, i64* %1481, align 8
  %1484 = add nuw nsw i64 %1479, 1
  %1485 = add i64 %1480, -1
  %1486 = icmp eq i64 %1485, 0
  br i1 %1486, label %1487, label %1478, !llvm.loop !2

1487:                                             ; preds = %1478, %1471
  %1488 = phi i64 [ %1472, %1471 ], [ %1484, %1478 ]
  %1489 = icmp ult i64 %1475, 3
  br i1 %1489, label %1490, label %1491

1490:                                             ; preds = %1487, %1491, %1469
  br i1 %1435, label %1524, label %1510

1491:                                             ; preds = %1487, %1491
  %1492 = phi i64 [ %1508, %1491 ], [ %1488, %1487 ]
  %1493 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1404, i64 %1492, i32 0
  %1494 = load i64, i64* %1493, align 8
  %1495 = add i64 %1494, %1467
  store i64 %1495, i64* %1493, align 8
  %1496 = add nuw nsw i64 %1492, 1
  %1497 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1404, i64 %1496, i32 0
  %1498 = load i64, i64* %1497, align 8
  %1499 = add i64 %1498, %1467
  store i64 %1499, i64* %1497, align 8
  %1500 = add nuw nsw i64 %1492, 2
  %1501 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1404, i64 %1500, i32 0
  %1502 = load i64, i64* %1501, align 8
  %1503 = add i64 %1502, %1467
  store i64 %1503, i64* %1501, align 8
  %1504 = add nuw nsw i64 %1492, 3
  %1505 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1404, i64 %1504, i32 0
  %1506 = load i64, i64* %1505, align 8
  %1507 = add i64 %1506, %1467
  store i64 %1507, i64* %1505, align 8
  %1508 = add nuw nsw i64 %1492, 4
  %1509 = icmp eq i64 %1508, %1437
  br i1 %1509, label %1490, label %1491

1510:                                             ; preds = %1490, %1510
  %1511 = phi i32 [ %1516, %1510 ], [ %1434, %1490 ]
  %1512 = zext i32 %1511 to i64
  %1513 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1404, i64 %1512, i32 0
  %1514 = load i64, i64* %1513, align 8
  %1515 = add i64 %1514, %1467
  store i64 %1515, i64* %1513, align 8
  %1516 = add i32 %1511, 1
  %1517 = icmp ugt i32 %1516, %1422
  br i1 %1517, label %1524, label %1510

1518:                                             ; preds = %1458
  %1519 = add i32 %1453, 1
  %1520 = and i32 %1519, 65535
  call fastcc void @_iup_worker_interpolate(%struct.IUP_WorkerRec_* nonnull %15, i32 %1520, i32 %1422, i32 %1453, i32 %1427) #11
  %1521 = icmp eq i32 %1427, 0
  br i1 %1521, label %1524, label %1522

1522:                                             ; preds = %1518
  %1523 = add i32 %1427, -1
  call fastcc void @_iup_worker_interpolate(%struct.IUP_WorkerRec_* nonnull %15, i32 %1411, i32 %1523, i32 %1453, i32 %1427) #11
  br label %1524

1524:                                             ; preds = %1438, %1510, %1522, %1518, %1490, %1460, %1408
  %1525 = phi i32 [ %1454, %1522 ], [ %1454, %1518 ], [ %1461, %1460 ], [ %1461, %1490 ], [ %1411, %1408 ], [ %1461, %1510 ], [ %1434, %1438 ]
  %1526 = add nuw nsw i64 %1410, 1
  %1527 = load i16, i16* %244, align 2
  %1528 = sext i16 %1527 to i64
  %1529 = icmp slt i64 %1526, %1528
  br i1 %1529, label %1530, label %1532

1530:                                             ; preds = %1524
  %1531 = load i16, i16* %50, align 4
  br label %1408

1532:                                             ; preds = %1524, %1377, %1385
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %243) #11
  br label %4788

1533:                                             ; preds = %384, %384
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %239) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %239, i8 -86, i64 64, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %240) #11
  store i16 -21846, i16* %12, align 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %241) #11
  store i64 -6148914691236517206, i64* %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %242) #11
  store i64 -6148914691236517206, i64* %14, align 8
  %1534 = load i64, i64* %138, align 8
  %1535 = load i64, i64* %182, align 8
  %1536 = icmp slt i64 %1534, %1535
  br i1 %1536, label %1537, label %1541

1537:                                             ; preds = %1533
  %1538 = load i8, i8* %140, align 1
  %1539 = icmp eq i8 %1538, 0
  br i1 %1539, label %1631, label %1540

1540:                                             ; preds = %1537
  store i32 134, i32* %145, align 8
  br label %1631

1541:                                             ; preds = %1533
  %1542 = call fastcc zeroext i8 @Compute_Point_Displacement(%struct.TT_ExecContextRec_* %0, i64* nonnull %13, i64* nonnull %14, %struct.TT_GlyphZoneRec_* nonnull %11, i16* nonnull %12) #11
  %1543 = icmp eq i8 %1542, 0
  br i1 %1543, label %1544, label %1633

1544:                                             ; preds = %1541
  %1545 = load i64, i64* %182, align 8
  %1546 = icmp sgt i64 %1545, 0
  br i1 %1546, label %1547, label %1631

1547:                                             ; preds = %1544
  %1548 = load i64, i64* %13, align 8
  %1549 = load i64, i64* %14, align 8
  br label %1550

1550:                                             ; preds = %1627, %1547
  %1551 = load i64, i64* %139, align 8
  %1552 = add nsw i64 %1551, -1
  store i64 %1552, i64* %139, align 8
  %1553 = load i64*, i64** %141, align 8
  %1554 = getelementptr inbounds i64, i64* %1553, i64 %1552
  %1555 = load i64, i64* %1554, align 8
  %1556 = trunc i64 %1555 to i32
  %1557 = and i32 %1556, 65535
  %1558 = load i16, i16* %164, align 4
  %1559 = zext i16 %1558 to i32
  %1560 = icmp ult i32 %1557, %1559
  br i1 %1560, label %1565, label %1561

1561:                                             ; preds = %1550
  %1562 = load i8, i8* %140, align 1
  %1563 = icmp eq i8 %1562, 0
  br i1 %1563, label %1627, label %1564

1564:                                             ; preds = %1561
  store i32 134, i32* %145, align 8
  br label %1633

1565:                                             ; preds = %1550
  %1566 = load i16, i16* %215, align 2
  %1567 = icmp eq i16 %1566, 0
  br i1 %1567, label %1593, label %1568

1568:                                             ; preds = %1565
  %1569 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %152, align 8
  %1570 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1569, i64 0, i32 24
  %1571 = bitcast %struct.FT_DriverRec_** %1570 to %struct.TT_DriverRec_**
  %1572 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %1571, align 8
  %1573 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %1572, i64 0, i32 2
  %1574 = load i32, i32* %1573, align 8
  %1575 = icmp eq i32 %1574, 40
  br i1 %1575, label %1576, label %1581

1576:                                             ; preds = %1568
  %1577 = load i8, i8* %153, align 1
  %1578 = icmp eq i8 %1577, 0
  br i1 %1578, label %1581, label %1579

1579:                                             ; preds = %1576
  %1580 = and i64 %1555, 65535
  br label %1587

1581:                                             ; preds = %1576, %1568
  %1582 = load %struct.FT_Vector_*, %struct.FT_Vector_** %173, align 8
  %1583 = and i64 %1555, 65535
  %1584 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1582, i64 %1583, i32 0
  %1585 = load i64, i64* %1584, align 8
  %1586 = add i64 %1585, %1548
  store i64 %1586, i64* %1584, align 8
  br label %1587

1587:                                             ; preds = %1581, %1579
  %1588 = phi i64 [ %1580, %1579 ], [ %1583, %1581 ]
  %1589 = load i8*, i8** %225, align 8
  %1590 = getelementptr inbounds i8, i8* %1589, i64 %1588
  %1591 = load i8, i8* %1590, align 1
  %1592 = or i8 %1591, 8
  store i8 %1592, i8* %1590, align 1
  br label %1593

1593:                                             ; preds = %1587, %1565
  %1594 = load i16, i16* %216, align 2
  %1595 = icmp eq i16 %1594, 0
  br i1 %1595, label %1627, label %1596

1596:                                             ; preds = %1593
  %1597 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %152, align 8
  %1598 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1597, i64 0, i32 24
  %1599 = bitcast %struct.FT_DriverRec_** %1598 to %struct.TT_DriverRec_**
  %1600 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %1599, align 8
  %1601 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %1600, i64 0, i32 2
  %1602 = load i32, i32* %1601, align 8
  %1603 = icmp eq i32 %1602, 40
  br i1 %1603, label %1604, label %1615

1604:                                             ; preds = %1596
  %1605 = load i8, i8* %153, align 1
  %1606 = icmp eq i8 %1605, 0
  br i1 %1606, label %1615, label %1607

1607:                                             ; preds = %1604
  %1608 = load i8, i8* %48, align 4
  %1609 = icmp eq i8 %1608, 0
  br i1 %1609, label %1615, label %1610

1610:                                             ; preds = %1607
  %1611 = load i8, i8* %49, align 1
  %1612 = icmp eq i8 %1611, 0
  br i1 %1612, label %1615, label %1613

1613:                                             ; preds = %1610
  %1614 = and i64 %1555, 65535
  br label %1621

1615:                                             ; preds = %1610, %1607, %1604, %1596
  %1616 = load %struct.FT_Vector_*, %struct.FT_Vector_** %173, align 8
  %1617 = and i64 %1555, 65535
  %1618 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1616, i64 %1617, i32 1
  %1619 = load i64, i64* %1618, align 8
  %1620 = add i64 %1619, %1549
  store i64 %1620, i64* %1618, align 8
  br label %1621

1621:                                             ; preds = %1615, %1613
  %1622 = phi i64 [ %1614, %1613 ], [ %1617, %1615 ]
  %1623 = load i8*, i8** %225, align 8
  %1624 = getelementptr inbounds i8, i8* %1623, i64 %1622
  %1625 = load i8, i8* %1624, align 1
  %1626 = or i8 %1625, 16
  store i8 %1626, i8* %1624, align 1
  br label %1627

1627:                                             ; preds = %1621, %1593, %1561
  %1628 = load i64, i64* %182, align 8
  %1629 = add nsw i64 %1628, -1
  store i64 %1629, i64* %182, align 8
  %1630 = icmp sgt i64 %1629, 0
  br i1 %1630, label %1550, label %1631

1631:                                             ; preds = %1627, %1544, %1540, %1537
  store i64 1, i64* %182, align 8
  %1632 = load i64, i64* %139, align 8
  store i64 %1632, i64* %142, align 8
  br label %1633

1633:                                             ; preds = %1541, %1564, %1631
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %242) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %241) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %240) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %239) #11
  br label %4788

1634:                                             ; preds = %384, %384
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %233) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %233, i8 -86, i64 64, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %234) #11
  store i16 -21846, i16* %8, align 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %235) #11
  store i64 -6148914691236517206, i64* %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %236) #11
  store i64 -6148914691236517206, i64* %10, align 8
  %1635 = load i64, i64* %386, align 8
  %1636 = trunc i64 %1635 to i16
  %1637 = load i16, i16* %205, align 8
  %1638 = icmp eq i16 %1637, 0
  br i1 %1638, label %1642, label %1639

1639:                                             ; preds = %1634
  %1640 = load i16, i16* %230, align 2
  %1641 = sext i16 %1640 to i32
  br label %1642

1642:                                             ; preds = %1639, %1634
  %1643 = phi i32 [ %1641, %1639 ], [ 1, %1634 ]
  %1644 = sext i16 %1636 to i32
  %1645 = icmp ugt i32 %1643, %1644
  br i1 %1645, label %1650, label %1646

1646:                                             ; preds = %1642
  %1647 = load i8, i8* %140, align 1
  %1648 = icmp eq i8 %1647, 0
  br i1 %1648, label %1752, label %1649

1649:                                             ; preds = %1646
  store i32 134, i32* %145, align 8
  br label %1752

1650:                                             ; preds = %1642
  %1651 = call fastcc zeroext i8 @Compute_Point_Displacement(%struct.TT_ExecContextRec_* %0, i64* nonnull %9, i64* nonnull %10, %struct.TT_GlyphZoneRec_* nonnull %7, i16* nonnull %8) #11
  %1652 = icmp eq i8 %1651, 0
  br i1 %1652, label %1653, label %1752

1653:                                             ; preds = %1650
  %1654 = icmp eq i16 %1636, 0
  br i1 %1654, label %1664, label %1655

1655:                                             ; preds = %1653
  %1656 = load i16*, i16** %231, align 8
  %1657 = add nsw i32 %1644, -1
  %1658 = sext i32 %1657 to i64
  %1659 = getelementptr inbounds i16, i16* %1656, i64 %1658
  %1660 = load i16, i16* %1659, align 2
  %1661 = add i16 %1660, 1
  %1662 = load i16, i16* %237, align 8
  %1663 = sub i16 %1661, %1662
  br label %1664

1664:                                             ; preds = %1655, %1653
  %1665 = phi i16 [ %1663, %1655 ], [ 0, %1653 ]
  %1666 = load i16, i16* %205, align 8
  %1667 = icmp eq i16 %1666, 0
  br i1 %1667, label %1668, label %1670

1668:                                             ; preds = %1664
  %1669 = load i16, i16* %164, align 4
  br label %1679

1670:                                             ; preds = %1664
  %1671 = load i16*, i16** %231, align 8
  %1672 = shl i64 %1635, 48
  %1673 = ashr exact i64 %1672, 48
  %1674 = getelementptr inbounds i16, i16* %1671, i64 %1673
  %1675 = load i16, i16* %1674, align 2
  %1676 = load i16, i16* %237, align 8
  %1677 = add i16 %1675, 1
  %1678 = sub i16 %1677, %1676
  br label %1679

1679:                                             ; preds = %1670, %1668
  %1680 = phi i16 [ %1669, %1668 ], [ %1678, %1670 ]
  %1681 = icmp ult i16 %1665, %1680
  br i1 %1681, label %1682, label %1752

1682:                                             ; preds = %1679
  %1683 = load %struct.FT_Vector_*, %struct.FT_Vector_** %238, align 8
  %1684 = load i16, i16* %8, align 2
  %1685 = load i64, i64* %9, align 8
  %1686 = load i64, i64* %10, align 8
  %1687 = zext i16 %1665 to i64
  %1688 = zext i16 %1684 to i64
  %1689 = zext i16 %1680 to i64
  br label %1690

1690:                                             ; preds = %1749, %1682
  %1691 = phi i64 [ %1687, %1682 ], [ %1750, %1749 ]
  %1692 = load %struct.FT_Vector_*, %struct.FT_Vector_** %173, align 8
  %1693 = icmp eq %struct.FT_Vector_* %1683, %1692
  %1694 = icmp eq i64 %1691, %1688
  %1695 = and i1 %1694, %1693
  br i1 %1695, label %1749, label %1696

1696:                                             ; preds = %1690
  %1697 = load i16, i16* %215, align 2
  %1698 = icmp eq i16 %1697, 0
  br i1 %1698, label %1719, label %1699

1699:                                             ; preds = %1696
  %1700 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %152, align 8
  %1701 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1700, i64 0, i32 24
  %1702 = bitcast %struct.FT_DriverRec_** %1701 to %struct.TT_DriverRec_**
  %1703 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %1702, align 8
  %1704 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %1703, i64 0, i32 2
  %1705 = load i32, i32* %1704, align 8
  %1706 = icmp eq i32 %1705, 40
  br i1 %1706, label %1707, label %1710

1707:                                             ; preds = %1699
  %1708 = load i8, i8* %153, align 1
  %1709 = icmp eq i8 %1708, 0
  br i1 %1709, label %1710, label %1714

1710:                                             ; preds = %1707, %1699
  %1711 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1692, i64 %1691, i32 0
  %1712 = load i64, i64* %1711, align 8
  %1713 = add i64 %1712, %1685
  store i64 %1713, i64* %1711, align 8
  br label %1714

1714:                                             ; preds = %1710, %1707
  %1715 = load i8*, i8** %225, align 8
  %1716 = getelementptr inbounds i8, i8* %1715, i64 %1691
  %1717 = load i8, i8* %1716, align 1
  %1718 = or i8 %1717, 8
  store i8 %1718, i8* %1716, align 1
  br label %1719

1719:                                             ; preds = %1714, %1696
  %1720 = load i16, i16* %216, align 2
  %1721 = icmp eq i16 %1720, 0
  br i1 %1721, label %1749, label %1722

1722:                                             ; preds = %1719
  %1723 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %152, align 8
  %1724 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1723, i64 0, i32 24
  %1725 = bitcast %struct.FT_DriverRec_** %1724 to %struct.TT_DriverRec_**
  %1726 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %1725, align 8
  %1727 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %1726, i64 0, i32 2
  %1728 = load i32, i32* %1727, align 8
  %1729 = icmp eq i32 %1728, 40
  br i1 %1729, label %1730, label %1739

1730:                                             ; preds = %1722
  %1731 = load i8, i8* %153, align 1
  %1732 = icmp eq i8 %1731, 0
  br i1 %1732, label %1739, label %1733

1733:                                             ; preds = %1730
  %1734 = load i8, i8* %48, align 4
  %1735 = icmp eq i8 %1734, 0
  br i1 %1735, label %1739, label %1736

1736:                                             ; preds = %1733
  %1737 = load i8, i8* %49, align 1
  %1738 = icmp eq i8 %1737, 0
  br i1 %1738, label %1739, label %1744

1739:                                             ; preds = %1736, %1733, %1730, %1722
  %1740 = load %struct.FT_Vector_*, %struct.FT_Vector_** %173, align 8
  %1741 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1740, i64 %1691, i32 1
  %1742 = load i64, i64* %1741, align 8
  %1743 = add i64 %1742, %1686
  store i64 %1743, i64* %1741, align 8
  br label %1744

1744:                                             ; preds = %1739, %1736
  %1745 = load i8*, i8** %225, align 8
  %1746 = getelementptr inbounds i8, i8* %1745, i64 %1691
  %1747 = load i8, i8* %1746, align 1
  %1748 = or i8 %1747, 16
  store i8 %1748, i8* %1746, align 1
  br label %1749

1749:                                             ; preds = %1744, %1719, %1690
  %1750 = add nuw nsw i64 %1691, 1
  %1751 = icmp eq i64 %1750, %1689
  br i1 %1751, label %1752, label %1690

1752:                                             ; preds = %1749, %1646, %1649, %1650, %1679
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %236) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %235) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %234) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %233) #11
  br label %4788

1753:                                             ; preds = %384, %384
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %226) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %226, i8 -86, i64 64, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %227) #11
  store i16 -21846, i16* %4, align 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #11
  store i64 -6148914691236517206, i64* %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %229) #11
  store i64 -6148914691236517206, i64* %6, align 8
  %1754 = load i64, i64* %386, align 8
  %1755 = trunc i64 %1754 to i32
  %1756 = icmp ugt i32 %1755, 1
  br i1 %1756, label %1757, label %1761

1757:                                             ; preds = %1753
  %1758 = load i8, i8* %140, align 1
  %1759 = icmp eq i8 %1758, 0
  br i1 %1759, label %1840, label %1760

1760:                                             ; preds = %1757
  store i32 134, i32* %145, align 8
  br label %1840

1761:                                             ; preds = %1753
  %1762 = call fastcc zeroext i8 @Compute_Point_Displacement(%struct.TT_ExecContextRec_* %0, i64* nonnull %5, i64* nonnull %6, %struct.TT_GlyphZoneRec_* nonnull %3, i16* nonnull %4) #11
  %1763 = icmp eq i8 %1762, 0
  br i1 %1763, label %1764, label %1840

1764:                                             ; preds = %1761
  %1765 = load i16, i16* %205, align 8
  switch i16 %1765, label %1840 [
    i16 0, label %1766
    i16 1, label %1768
  ]

1766:                                             ; preds = %1764
  %1767 = load i16, i16* %164, align 4
  br label %1778

1768:                                             ; preds = %1764
  %1769 = load i16, i16* %230, align 2
  %1770 = icmp sgt i16 %1769, 0
  br i1 %1770, label %1771, label %1840

1771:                                             ; preds = %1768
  %1772 = sext i16 %1769 to i64
  %1773 = load i16*, i16** %231, align 8
  %1774 = add nsw i64 %1772, -1
  %1775 = getelementptr inbounds i16, i16* %1773, i64 %1774
  %1776 = load i16, i16* %1775, align 2
  %1777 = add i16 %1776, 1
  br label %1778

1778:                                             ; preds = %1771, %1766
  %1779 = phi i16 [ %1767, %1766 ], [ %1777, %1771 ]
  %1780 = icmp eq i16 %1779, 0
  br i1 %1780, label %1840, label %1781

1781:                                             ; preds = %1778
  %1782 = load %struct.FT_Vector_*, %struct.FT_Vector_** %232, align 8
  %1783 = load i16, i16* %4, align 2
  %1784 = load i64, i64* %5, align 8
  %1785 = load i64, i64* %6, align 8
  %1786 = zext i16 %1783 to i64
  %1787 = zext i16 %1779 to i64
  br label %1788

1788:                                             ; preds = %1837, %1781
  %1789 = phi i64 [ 0, %1781 ], [ %1838, %1837 ]
  %1790 = load %struct.FT_Vector_*, %struct.FT_Vector_** %173, align 8
  %1791 = icmp eq %struct.FT_Vector_* %1782, %1790
  %1792 = icmp eq i64 %1789, %1786
  %1793 = and i1 %1792, %1791
  br i1 %1793, label %1837, label %1794

1794:                                             ; preds = %1788
  %1795 = load i16, i16* %215, align 2
  %1796 = icmp eq i16 %1795, 0
  br i1 %1796, label %1812, label %1797

1797:                                             ; preds = %1794
  %1798 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %152, align 8
  %1799 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1798, i64 0, i32 24
  %1800 = bitcast %struct.FT_DriverRec_** %1799 to %struct.TT_DriverRec_**
  %1801 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %1800, align 8
  %1802 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %1801, i64 0, i32 2
  %1803 = load i32, i32* %1802, align 8
  %1804 = icmp eq i32 %1803, 40
  br i1 %1804, label %1805, label %1808

1805:                                             ; preds = %1797
  %1806 = load i8, i8* %153, align 1
  %1807 = icmp eq i8 %1806, 0
  br i1 %1807, label %1808, label %1812

1808:                                             ; preds = %1805, %1797
  %1809 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1790, i64 %1789, i32 0
  %1810 = load i64, i64* %1809, align 8
  %1811 = add i64 %1810, %1784
  store i64 %1811, i64* %1809, align 8
  br label %1812

1812:                                             ; preds = %1808, %1805, %1794
  %1813 = load i16, i16* %216, align 2
  %1814 = icmp eq i16 %1813, 0
  br i1 %1814, label %1837, label %1815

1815:                                             ; preds = %1812
  %1816 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %152, align 8
  %1817 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1816, i64 0, i32 24
  %1818 = bitcast %struct.FT_DriverRec_** %1817 to %struct.TT_DriverRec_**
  %1819 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %1818, align 8
  %1820 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %1819, i64 0, i32 2
  %1821 = load i32, i32* %1820, align 8
  %1822 = icmp eq i32 %1821, 40
  br i1 %1822, label %1823, label %1832

1823:                                             ; preds = %1815
  %1824 = load i8, i8* %153, align 1
  %1825 = icmp eq i8 %1824, 0
  br i1 %1825, label %1832, label %1826

1826:                                             ; preds = %1823
  %1827 = load i8, i8* %48, align 4
  %1828 = icmp eq i8 %1827, 0
  br i1 %1828, label %1832, label %1829

1829:                                             ; preds = %1826
  %1830 = load i8, i8* %49, align 1
  %1831 = icmp eq i8 %1830, 0
  br i1 %1831, label %1832, label %1837

1832:                                             ; preds = %1829, %1826, %1823, %1815
  %1833 = load %struct.FT_Vector_*, %struct.FT_Vector_** %173, align 8
  %1834 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1833, i64 %1789, i32 1
  %1835 = load i64, i64* %1834, align 8
  %1836 = add i64 %1835, %1785
  store i64 %1836, i64* %1834, align 8
  br label %1837

1837:                                             ; preds = %1832, %1829, %1812, %1788
  %1838 = add nuw nsw i64 %1789, 1
  %1839 = icmp eq i64 %1838, %1787
  br i1 %1839, label %1840, label %1788

1840:                                             ; preds = %1837, %1757, %1760, %1761, %1764, %1768, %1778
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %229) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %227) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %226) #11
  br label %4788

1841:                                             ; preds = %384
  %1842 = load i16, i16* %195, align 4
  %1843 = icmp eq i16 %1842, 0
  br i1 %1843, label %1851, label %1844

1844:                                             ; preds = %1841
  %1845 = load i16, i16* %196, align 2
  %1846 = icmp eq i16 %1845, 0
  br i1 %1846, label %1851, label %1847

1847:                                             ; preds = %1844
  %1848 = load i16, i16* %205, align 8
  %1849 = icmp eq i16 %1848, 0
  %1850 = zext i1 %1849 to i32
  br label %1851

1851:                                             ; preds = %1847, %1844, %1841
  %1852 = phi i32 [ 1, %1844 ], [ 1, %1841 ], [ %1850, %1847 ]
  %1853 = load i64, i64* %138, align 8
  %1854 = load i64, i64* %182, align 8
  %1855 = icmp sgt i64 %1853, %1854
  br i1 %1855, label %1860, label %1856

1856:                                             ; preds = %1851
  %1857 = load i8, i8* %140, align 1
  %1858 = icmp eq i8 %1857, 0
  br i1 %1858, label %2025, label %1859

1859:                                             ; preds = %1856
  store i32 134, i32* %145, align 8
  br label %2025

1860:                                             ; preds = %1851
  %1861 = load i64, i64* %386, align 8
  %1862 = trunc i64 %1861 to i32
  %1863 = load i16, i16* %215, align 2
  %1864 = sext i16 %1863 to i32
  %1865 = call fastcc i32 @TT_MulFix14_long_long(i32 %1862, i32 %1864) #12
  %1866 = sext i32 %1865 to i64
  %1867 = load i16, i16* %216, align 2
  %1868 = sext i16 %1867 to i32
  %1869 = call fastcc i32 @TT_MulFix14_long_long(i32 %1862, i32 %1868) #12
  %1870 = sext i32 %1869 to i64
  %1871 = icmp sgt i64 %1854, 0
  br i1 %1871, label %1872, label %2025

1872:                                             ; preds = %1860
  %1873 = icmp eq i32 %1852, 0
  br label %1874

1874:                                             ; preds = %2023, %1872
  %1875 = phi i64* [ %2024, %2023 ], [ %385, %1872 ]
  %1876 = phi i64 [ %2022, %2023 ], [ %357, %1872 ]
  %1877 = add nsw i64 %1876, -1
  store i64 %1877, i64* %139, align 8
  %1878 = getelementptr inbounds i64, i64* %1875, i64 %1877
  %1879 = load i64, i64* %1878, align 8
  %1880 = trunc i64 %1879 to i32
  %1881 = and i32 %1880, 65535
  %1882 = load i16, i16* %164, align 4
  %1883 = zext i16 %1882 to i32
  %1884 = icmp ult i32 %1881, %1883
  br i1 %1884, label %1889, label %1885

1885:                                             ; preds = %1874
  %1886 = load i8, i8* %140, align 1
  %1887 = icmp eq i8 %1886, 0
  br i1 %1887, label %2018, label %1888

1888:                                             ; preds = %1885
  store i32 134, i32* %145, align 8
  br label %4878

1889:                                             ; preds = %1874
  %1890 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %152, align 8
  %1891 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1890, i64 0, i32 24
  %1892 = bitcast %struct.FT_DriverRec_** %1891 to %struct.TT_DriverRec_**
  %1893 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %1892, align 8
  %1894 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %1893, i64 0, i32 2
  %1895 = load i32, i32* %1894, align 8
  %1896 = icmp eq i32 %1895, 40
  br i1 %1896, label %1897, label %1963

1897:                                             ; preds = %1889
  %1898 = load i8, i8* %153, align 1
  %1899 = icmp eq i8 %1898, 0
  br i1 %1899, label %1963, label %1900

1900:                                             ; preds = %1897
  br i1 %1873, label %1901, label %1920

1901:                                             ; preds = %1900
  %1902 = load i8, i8* %48, align 4
  %1903 = icmp eq i8 %1902, 0
  br i1 %1903, label %1907, label %1904

1904:                                             ; preds = %1901
  %1905 = load i8, i8* %49, align 1
  %1906 = icmp eq i8 %1905, 0
  br i1 %1906, label %1907, label %2018

1907:                                             ; preds = %1904, %1901
  %1908 = load i8, i8* %224, align 8
  %1909 = icmp eq i8 %1908, 0
  br i1 %1909, label %1913, label %1910

1910:                                             ; preds = %1907
  %1911 = load i16, i16* %216, align 2
  %1912 = icmp eq i16 %1911, 0
  br i1 %1912, label %1913, label %1920

1913:                                             ; preds = %1910, %1907
  %1914 = load i8*, i8** %225, align 8
  %1915 = and i64 %1879, 65535
  %1916 = getelementptr inbounds i8, i8* %1914, i64 %1915
  %1917 = load i8, i8* %1916, align 1
  %1918 = and i8 %1917, 16
  %1919 = icmp eq i8 %1918, 0
  br i1 %1919, label %2018, label %1920

1920:                                             ; preds = %1913, %1910, %1900
  %1921 = load i16, i16* %215, align 2
  %1922 = icmp eq i16 %1921, 0
  br i1 %1922, label %1929, label %1923

1923:                                             ; preds = %1920
  %1924 = load i8*, i8** %225, align 8
  %1925 = and i64 %1879, 65535
  %1926 = getelementptr inbounds i8, i8* %1924, i64 %1925
  %1927 = load i8, i8* %1926, align 1
  %1928 = or i8 %1927, 8
  store i8 %1928, i8* %1926, align 1
  br label %1929

1929:                                             ; preds = %1923, %1920
  %1930 = load i16, i16* %216, align 2
  %1931 = icmp eq i16 %1930, 0
  br i1 %1931, label %2018, label %1932

1932:                                             ; preds = %1929
  %1933 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %152, align 8
  %1934 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1933, i64 0, i32 24
  %1935 = bitcast %struct.FT_DriverRec_** %1934 to %struct.TT_DriverRec_**
  %1936 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %1935, align 8
  %1937 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %1936, i64 0, i32 2
  %1938 = load i32, i32* %1937, align 8
  %1939 = icmp eq i32 %1938, 40
  br i1 %1939, label %1940, label %1951

1940:                                             ; preds = %1932
  %1941 = load i8, i8* %153, align 1
  %1942 = icmp eq i8 %1941, 0
  br i1 %1942, label %1951, label %1943

1943:                                             ; preds = %1940
  %1944 = load i8, i8* %48, align 4
  %1945 = icmp eq i8 %1944, 0
  br i1 %1945, label %1951, label %1946

1946:                                             ; preds = %1943
  %1947 = load i8, i8* %49, align 1
  %1948 = icmp eq i8 %1947, 0
  br i1 %1948, label %1951, label %1949

1949:                                             ; preds = %1946
  %1950 = and i64 %1879, 65535
  br label %1957

1951:                                             ; preds = %1946, %1943, %1940, %1932
  %1952 = load %struct.FT_Vector_*, %struct.FT_Vector_** %173, align 8
  %1953 = and i64 %1879, 65535
  %1954 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1952, i64 %1953, i32 1
  %1955 = load i64, i64* %1954, align 8
  %1956 = add i64 %1955, %1870
  store i64 %1956, i64* %1954, align 8
  br label %1957

1957:                                             ; preds = %1951, %1949
  %1958 = phi i64 [ %1950, %1949 ], [ %1953, %1951 ]
  %1959 = load i8*, i8** %225, align 8
  %1960 = getelementptr inbounds i8, i8* %1959, i64 %1958
  %1961 = load i8, i8* %1960, align 1
  %1962 = or i8 %1961, 16
  store i8 %1962, i8* %1960, align 1
  br label %2018

1963:                                             ; preds = %1897, %1889
  %1964 = load i16, i16* %215, align 2
  %1965 = icmp eq i16 %1964, 0
  br i1 %1965, label %1984, label %1966

1966:                                             ; preds = %1963
  br i1 %1896, label %1967, label %1972

1967:                                             ; preds = %1966
  %1968 = load i8, i8* %153, align 1
  %1969 = icmp eq i8 %1968, 0
  br i1 %1969, label %1972, label %1970

1970:                                             ; preds = %1967
  %1971 = and i64 %1879, 65535
  br label %1978

1972:                                             ; preds = %1967, %1966
  %1973 = load %struct.FT_Vector_*, %struct.FT_Vector_** %173, align 8
  %1974 = and i64 %1879, 65535
  %1975 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1973, i64 %1974, i32 0
  %1976 = load i64, i64* %1975, align 8
  %1977 = add i64 %1976, %1866
  store i64 %1977, i64* %1975, align 8
  br label %1978

1978:                                             ; preds = %1972, %1970
  %1979 = phi i64 [ %1971, %1970 ], [ %1974, %1972 ]
  %1980 = load i8*, i8** %225, align 8
  %1981 = getelementptr inbounds i8, i8* %1980, i64 %1979
  %1982 = load i8, i8* %1981, align 1
  %1983 = or i8 %1982, 8
  store i8 %1983, i8* %1981, align 1
  br label %1984

1984:                                             ; preds = %1978, %1963
  %1985 = load i16, i16* %216, align 2
  %1986 = icmp eq i16 %1985, 0
  br i1 %1986, label %2018, label %1987

1987:                                             ; preds = %1984
  %1988 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %152, align 8
  %1989 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1988, i64 0, i32 24
  %1990 = bitcast %struct.FT_DriverRec_** %1989 to %struct.TT_DriverRec_**
  %1991 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %1990, align 8
  %1992 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %1991, i64 0, i32 2
  %1993 = load i32, i32* %1992, align 8
  %1994 = icmp eq i32 %1993, 40
  br i1 %1994, label %1995, label %2006

1995:                                             ; preds = %1987
  %1996 = load i8, i8* %153, align 1
  %1997 = icmp eq i8 %1996, 0
  br i1 %1997, label %2006, label %1998

1998:                                             ; preds = %1995
  %1999 = load i8, i8* %48, align 4
  %2000 = icmp eq i8 %1999, 0
  br i1 %2000, label %2006, label %2001

2001:                                             ; preds = %1998
  %2002 = load i8, i8* %49, align 1
  %2003 = icmp eq i8 %2002, 0
  br i1 %2003, label %2006, label %2004

2004:                                             ; preds = %2001
  %2005 = and i64 %1879, 65535
  br label %2012

2006:                                             ; preds = %2001, %1998, %1995, %1987
  %2007 = load %struct.FT_Vector_*, %struct.FT_Vector_** %173, align 8
  %2008 = and i64 %1879, 65535
  %2009 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2007, i64 %2008, i32 1
  %2010 = load i64, i64* %2009, align 8
  %2011 = add i64 %2010, %1870
  store i64 %2011, i64* %2009, align 8
  br label %2012

2012:                                             ; preds = %2006, %2004
  %2013 = phi i64 [ %2005, %2004 ], [ %2008, %2006 ]
  %2014 = load i8*, i8** %225, align 8
  %2015 = getelementptr inbounds i8, i8* %2014, i64 %2013
  %2016 = load i8, i8* %2015, align 1
  %2017 = or i8 %2016, 16
  store i8 %2017, i8* %2015, align 1
  br label %2018

2018:                                             ; preds = %2012, %1984, %1957, %1929, %1913, %1904, %1885
  %2019 = load i64, i64* %182, align 8
  %2020 = add nsw i64 %2019, -1
  store i64 %2020, i64* %182, align 8
  %2021 = icmp sgt i64 %2020, 0
  %2022 = load i64, i64* %139, align 8
  br i1 %2021, label %2023, label %2025

2023:                                             ; preds = %2018
  %2024 = load i64*, i64** %141, align 8
  br label %1874

2025:                                             ; preds = %2018, %1860, %1859, %1856
  %2026 = phi i64 [ %357, %1860 ], [ %357, %1859 ], [ %357, %1856 ], [ %2022, %2018 ]
  store i64 1, i64* %182, align 8
  store i64 %2026, i64* %142, align 8
  br label %4788

2027:                                             ; preds = %384
  %2028 = load i64, i64* %138, align 8
  %2029 = load i64, i64* %182, align 8
  %2030 = icmp slt i64 %2028, %2029
  br i1 %2030, label %2031, label %2035

2031:                                             ; preds = %2027
  %2032 = load i8, i8* %140, align 1
  %2033 = icmp eq i8 %2032, 0
  br i1 %2033, label %2276, label %2034

2034:                                             ; preds = %2031
  store i32 134, i32* %145, align 8
  br label %2276

2035:                                             ; preds = %2027
  %2036 = load i16, i16* %195, align 4
  %2037 = icmp eq i16 %2036, 0
  br i1 %2037, label %2044, label %2038

2038:                                             ; preds = %2035
  %2039 = load i16, i16* %196, align 2
  %2040 = icmp eq i16 %2039, 0
  br i1 %2040, label %2044, label %2041

2041:                                             ; preds = %2038
  %2042 = load i16, i16* %205, align 8
  %2043 = icmp eq i16 %2042, 0
  br label %2044

2044:                                             ; preds = %2041, %2038, %2035
  %2045 = phi i1 [ true, %2038 ], [ true, %2035 ], [ %2043, %2041 ]
  %2046 = load i16, i16* %219, align 2
  %2047 = load i16, i16* %192, align 4
  %2048 = icmp ult i16 %2046, %2047
  br i1 %2048, label %2053, label %2049

2049:                                             ; preds = %2044
  %2050 = load i8, i8* %140, align 1
  %2051 = icmp eq i8 %2050, 0
  br i1 %2051, label %2276, label %2052

2052:                                             ; preds = %2049
  store i32 134, i32* %145, align 8
  br label %2276

2053:                                             ; preds = %2044
  br i1 %2045, label %2054, label %2058

2054:                                             ; preds = %2053
  %2055 = load %struct.FT_Vector_*, %struct.FT_Vector_** %202, align 8
  %2056 = zext i16 %2046 to i64
  %2057 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2055, i64 %2056
  br label %2062

2058:                                             ; preds = %2053
  %2059 = load %struct.FT_Vector_*, %struct.FT_Vector_** %197, align 8
  %2060 = zext i16 %2046 to i64
  %2061 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2059, i64 %2060
  br label %2062

2062:                                             ; preds = %2058, %2054
  %2063 = phi i64 [ %2056, %2054 ], [ %2060, %2058 ]
  %2064 = phi %struct.FT_Vector_* [ %2057, %2054 ], [ %2061, %2058 ]
  %2065 = load %struct.FT_Vector_*, %struct.FT_Vector_** %194, align 8
  %2066 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2065, i64 %2063
  %2067 = load i16, i16* %222, align 4
  %2068 = load i16, i16* %163, align 4
  %2069 = icmp ult i16 %2067, %2068
  br i1 %2069, label %2070, label %2158

2070:                                             ; preds = %2062
  br i1 %2045, label %2071, label %2086

2071:                                             ; preds = %2070
  %2072 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %201, align 8
  %2073 = load %struct.FT_Vector_*, %struct.FT_Vector_** %165, align 8
  %2074 = zext i16 %2067 to i64
  %2075 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2073, i64 %2074, i32 0
  %2076 = load i64, i64* %2075, align 8
  %2077 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2064, i64 0, i32 0
  %2078 = load i64, i64* %2077, align 8
  %2079 = sub i64 %2076, %2078
  %2080 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2073, i64 %2074, i32 1
  %2081 = load i64, i64* %2080, align 8
  %2082 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2064, i64 0, i32 1
  %2083 = load i64, i64* %2082, align 8
  %2084 = sub i64 %2081, %2083
  %2085 = call i64 %2072(%struct.TT_ExecContextRec_* %0, i64 %2079, i64 %2084) #11
  br label %2140

2086:                                             ; preds = %2070
  %2087 = load i64, i64* %199, align 8
  %2088 = load i64, i64* %200, align 8
  %2089 = icmp eq i64 %2087, %2088
  br i1 %2089, label %2090, label %2105

2090:                                             ; preds = %2086
  %2091 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %201, align 8
  %2092 = load %struct.FT_Vector_*, %struct.FT_Vector_** %198, align 8
  %2093 = zext i16 %2067 to i64
  %2094 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2092, i64 %2093, i32 0
  %2095 = load i64, i64* %2094, align 8
  %2096 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2064, i64 0, i32 0
  %2097 = load i64, i64* %2096, align 8
  %2098 = sub i64 %2095, %2097
  %2099 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2092, i64 %2093, i32 1
  %2100 = load i64, i64* %2099, align 8
  %2101 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2064, i64 0, i32 1
  %2102 = load i64, i64* %2101, align 8
  %2103 = sub i64 %2100, %2102
  %2104 = call i64 %2091(%struct.TT_ExecContextRec_* %0, i64 %2098, i64 %2103) #11
  br label %2140

2105:                                             ; preds = %2086
  %2106 = load %struct.FT_Vector_*, %struct.FT_Vector_** %198, align 8
  %2107 = zext i16 %2067 to i64
  %2108 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2106, i64 %2107, i32 0
  %2109 = load i64, i64* %2108, align 8
  %2110 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2064, i64 0, i32 0
  %2111 = load i64, i64* %2110, align 8
  %2112 = sub i64 %2109, %2111
  %2113 = shl i64 %2112, 32
  %2114 = ashr exact i64 %2113, 32
  %2115 = shl i64 %2087, 32
  %2116 = ashr exact i64 %2115, 32
  %2117 = mul nsw i64 %2114, %2116
  %2118 = ashr i64 %2117, 63
  %2119 = add nsw i64 %2117, 32768
  %2120 = add nsw i64 %2119, %2118
  %2121 = shl i64 %2120, 16
  %2122 = ashr i64 %2121, 32
  %2123 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2106, i64 %2107, i32 1
  %2124 = load i64, i64* %2123, align 8
  %2125 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2064, i64 0, i32 1
  %2126 = load i64, i64* %2125, align 8
  %2127 = sub i64 %2124, %2126
  %2128 = shl i64 %2127, 32
  %2129 = ashr exact i64 %2128, 32
  %2130 = shl i64 %2088, 32
  %2131 = ashr exact i64 %2130, 32
  %2132 = mul nsw i64 %2129, %2131
  %2133 = ashr i64 %2132, 63
  %2134 = add nsw i64 %2132, 32768
  %2135 = add nsw i64 %2134, %2133
  %2136 = shl i64 %2135, 16
  %2137 = ashr i64 %2136, 32
  %2138 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %201, align 8
  %2139 = call i64 %2138(%struct.TT_ExecContextRec_* %0, i64 %2122, i64 %2137) #11
  br label %2140

2140:                                             ; preds = %2105, %2090, %2071
  %2141 = phi i64 [ %2085, %2071 ], [ %2104, %2090 ], [ %2139, %2105 ]
  %2142 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %193, align 8
  %2143 = load %struct.FT_Vector_*, %struct.FT_Vector_** %172, align 8
  %2144 = load i16, i16* %222, align 4
  %2145 = zext i16 %2144 to i64
  %2146 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2143, i64 %2145, i32 0
  %2147 = load i64, i64* %2146, align 8
  %2148 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2066, i64 0, i32 0
  %2149 = load i64, i64* %2148, align 8
  %2150 = sub i64 %2147, %2149
  %2151 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2143, i64 %2145, i32 1
  %2152 = load i64, i64* %2151, align 8
  %2153 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2065, i64 %2063, i32 1
  %2154 = load i64, i64* %2153, align 8
  %2155 = sub i64 %2152, %2154
  %2156 = call i64 %2142(%struct.TT_ExecContextRec_* %0, i64 %2150, i64 %2155) #11
  %2157 = load i64, i64* %182, align 8
  br label %2158

2158:                                             ; preds = %2140, %2062
  %2159 = phi i64 [ %2157, %2140 ], [ %2029, %2062 ]
  %2160 = phi i64 [ %2156, %2140 ], [ 0, %2062 ]
  %2161 = phi i64 [ %2141, %2140 ], [ 0, %2062 ]
  %2162 = icmp sgt i64 %2159, 0
  br i1 %2162, label %2163, label %2276

2163:                                             ; preds = %2158
  %2164 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2064, i64 0, i32 0
  %2165 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2064, i64 0, i32 1
  %2166 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2066, i64 0, i32 0
  %2167 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2065, i64 %2063, i32 1
  %2168 = icmp eq i64 %2161, 0
  br label %2169

2169:                                             ; preds = %2272, %2163
  %2170 = phi i64 [ %2159, %2163 ], [ %2274, %2272 ]
  %2171 = load i64*, i64** %141, align 8
  %2172 = load i64, i64* %139, align 8
  %2173 = add nsw i64 %2172, -1
  store i64 %2173, i64* %139, align 8
  %2174 = getelementptr inbounds i64, i64* %2171, i64 %2173
  %2175 = load i64, i64* %2174, align 8
  %2176 = trunc i64 %2175 to i32
  %2177 = load i16, i16* %164, align 4
  %2178 = zext i16 %2177 to i32
  %2179 = icmp ult i32 %2176, %2178
  br i1 %2179, label %2183, label %2180

2180:                                             ; preds = %2169
  %2181 = load i8, i8* %140, align 1
  %2182 = icmp eq i8 %2181, 0
  br i1 %2182, label %2272, label %2271

2183:                                             ; preds = %2169
  br i1 %2045, label %2184, label %2197

2184:                                             ; preds = %2183
  %2185 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %201, align 8
  %2186 = load %struct.FT_Vector_*, %struct.FT_Vector_** %166, align 8
  %2187 = and i64 %2175, 4294967295
  %2188 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2186, i64 %2187, i32 0
  %2189 = load i64, i64* %2188, align 8
  %2190 = load i64, i64* %2164, align 8
  %2191 = sub i64 %2189, %2190
  %2192 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2186, i64 %2187, i32 1
  %2193 = load i64, i64* %2192, align 8
  %2194 = load i64, i64* %2165, align 8
  %2195 = sub i64 %2193, %2194
  %2196 = call i64 %2185(%struct.TT_ExecContextRec_* %0, i64 %2191, i64 %2195) #11
  br label %2247

2197:                                             ; preds = %2183
  %2198 = load i64, i64* %199, align 8
  %2199 = load i64, i64* %200, align 8
  %2200 = icmp eq i64 %2198, %2199
  br i1 %2200, label %2201, label %2214

2201:                                             ; preds = %2197
  %2202 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %201, align 8
  %2203 = load %struct.FT_Vector_*, %struct.FT_Vector_** %223, align 8
  %2204 = and i64 %2175, 4294967295
  %2205 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2203, i64 %2204, i32 0
  %2206 = load i64, i64* %2205, align 8
  %2207 = load i64, i64* %2164, align 8
  %2208 = sub i64 %2206, %2207
  %2209 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2203, i64 %2204, i32 1
  %2210 = load i64, i64* %2209, align 8
  %2211 = load i64, i64* %2165, align 8
  %2212 = sub i64 %2210, %2211
  %2213 = call i64 %2202(%struct.TT_ExecContextRec_* %0, i64 %2208, i64 %2212) #11
  br label %2247

2214:                                             ; preds = %2197
  %2215 = load %struct.FT_Vector_*, %struct.FT_Vector_** %223, align 8
  %2216 = and i64 %2175, 4294967295
  %2217 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2215, i64 %2216, i32 0
  %2218 = load i64, i64* %2217, align 8
  %2219 = load i64, i64* %2164, align 8
  %2220 = sub i64 %2218, %2219
  %2221 = shl i64 %2220, 32
  %2222 = ashr exact i64 %2221, 32
  %2223 = shl i64 %2198, 32
  %2224 = ashr exact i64 %2223, 32
  %2225 = mul nsw i64 %2222, %2224
  %2226 = ashr i64 %2225, 63
  %2227 = add nsw i64 %2225, 32768
  %2228 = add nsw i64 %2227, %2226
  %2229 = shl i64 %2228, 16
  %2230 = ashr i64 %2229, 32
  %2231 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2215, i64 %2216, i32 1
  %2232 = load i64, i64* %2231, align 8
  %2233 = load i64, i64* %2165, align 8
  %2234 = sub i64 %2232, %2233
  %2235 = shl i64 %2234, 32
  %2236 = ashr exact i64 %2235, 32
  %2237 = shl i64 %2199, 32
  %2238 = ashr exact i64 %2237, 32
  %2239 = mul nsw i64 %2236, %2238
  %2240 = ashr i64 %2239, 63
  %2241 = add nsw i64 %2239, 32768
  %2242 = add nsw i64 %2241, %2240
  %2243 = shl i64 %2242, 16
  %2244 = ashr i64 %2243, 32
  %2245 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %201, align 8
  %2246 = call i64 %2245(%struct.TT_ExecContextRec_* %0, i64 %2230, i64 %2244) #11
  br label %2247

2247:                                             ; preds = %2214, %2201, %2184
  %2248 = phi i64 [ %2204, %2201 ], [ %2216, %2214 ], [ %2187, %2184 ]
  %2249 = phi i64 [ %2213, %2201 ], [ %2246, %2214 ], [ %2196, %2184 ]
  %2250 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %193, align 8
  %2251 = load %struct.FT_Vector_*, %struct.FT_Vector_** %173, align 8
  %2252 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2251, i64 %2248, i32 0
  %2253 = load i64, i64* %2252, align 8
  %2254 = load i64, i64* %2166, align 8
  %2255 = sub i64 %2253, %2254
  %2256 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2251, i64 %2248, i32 1
  %2257 = load i64, i64* %2256, align 8
  %2258 = load i64, i64* %2167, align 8
  %2259 = sub i64 %2257, %2258
  %2260 = call i64 %2250(%struct.TT_ExecContextRec_* %0, i64 %2255, i64 %2259) #11
  %2261 = icmp eq i64 %2249, 0
  %2262 = or i1 %2168, %2261
  br i1 %2262, label %2265, label %2263

2263:                                             ; preds = %2247
  %2264 = call i64 @FT_MulDiv(i64 %2249, i64 %2160, i64 %2161) #11
  br label %2265

2265:                                             ; preds = %2263, %2247
  %2266 = phi i64 [ %2264, %2263 ], [ %2249, %2247 ]
  %2267 = load void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*, void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)** %204, align 8
  %2268 = trunc i64 %2175 to i16
  %2269 = sub i64 %2266, %2260
  call void %2267(%struct.TT_ExecContextRec_* %0, %struct.TT_GlyphZoneRec_* %203, i16 zeroext %2268, i64 %2269) #11
  %2270 = load i64, i64* %182, align 8
  br label %2272

2271:                                             ; preds = %2180
  store i32 134, i32* %145, align 8
  br label %4878

2272:                                             ; preds = %2265, %2180
  %2273 = phi i64 [ %2270, %2265 ], [ %2170, %2180 ]
  %2274 = add nsw i64 %2273, -1
  store i64 %2274, i64* %182, align 8
  %2275 = icmp sgt i64 %2274, 0
  br i1 %2275, label %2169, label %2276

2276:                                             ; preds = %2272, %2158, %2052, %2049, %2034, %2031
  store i64 1, i64* %182, align 8
  %2277 = load i64, i64* %139, align 8
  store i64 %2277, i64* %142, align 8
  br label %4788

2278:                                             ; preds = %384, %384
  %2279 = load i64, i64* %386, align 8
  %2280 = trunc i64 %2279 to i16
  %2281 = trunc i64 %2279 to i32
  %2282 = and i32 %2281, 65535
  %2283 = load i16, i16* %163, align 4
  %2284 = zext i16 %2283 to i32
  %2285 = icmp ult i32 %2282, %2284
  br i1 %2285, label %2286, label %2290

2286:                                             ; preds = %2278
  %2287 = load i16, i16* %218, align 8
  %2288 = load i16, i16* %192, align 4
  %2289 = icmp ult i16 %2287, %2288
  br i1 %2289, label %2294, label %2290

2290:                                             ; preds = %2286, %2278
  %2291 = load i8, i8* %140, align 1
  %2292 = icmp eq i8 %2291, 0
  br i1 %2292, label %4788, label %2293

2293:                                             ; preds = %2290
  store i32 134, i32* %145, align 8
  br label %4878

2294:                                             ; preds = %2286
  %2295 = load i16, i16* %196, align 2
  %2296 = icmp eq i16 %2295, 0
  br i1 %2296, label %2297, label %2316

2297:                                             ; preds = %2294
  %2298 = load %struct.FT_Vector_*, %struct.FT_Vector_** %165, align 8
  %2299 = and i64 %2279, 65535
  %2300 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2298, i64 %2299
  %2301 = load %struct.FT_Vector_*, %struct.FT_Vector_** %202, align 8
  %2302 = zext i16 %2287 to i64
  %2303 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2301, i64 %2302
  %2304 = bitcast %struct.FT_Vector_* %2300 to i8*
  %2305 = bitcast %struct.FT_Vector_* %2303 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2304, i8* align 8 %2305, i64 16, i1 false) #11
  %2306 = load void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*, void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)** %221, align 8
  %2307 = getelementptr inbounds i64, i64* %386, i64 1
  %2308 = load i64, i64* %2307, align 8
  call void %2306(%struct.TT_ExecContextRec_* %0, %struct.TT_GlyphZoneRec_* %220, i16 zeroext %2280, i64 %2308) #11
  %2309 = load %struct.FT_Vector_*, %struct.FT_Vector_** %172, align 8
  %2310 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2309, i64 %2299
  %2311 = load %struct.FT_Vector_*, %struct.FT_Vector_** %165, align 8
  %2312 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2311, i64 %2299
  %2313 = bitcast %struct.FT_Vector_* %2310 to i8*
  %2314 = bitcast %struct.FT_Vector_* %2312 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2313, i8* align 8 %2314, i64 16, i1 false) #11
  %2315 = load i16, i16* %218, align 8
  br label %2316

2316:                                             ; preds = %2297, %2294
  %2317 = phi i16 [ %2315, %2297 ], [ %2287, %2294 ]
  %2318 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %193, align 8
  %2319 = load %struct.FT_Vector_*, %struct.FT_Vector_** %172, align 8
  %2320 = zext i32 %2282 to i64
  %2321 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2319, i64 %2320, i32 0
  %2322 = load i64, i64* %2321, align 8
  %2323 = load %struct.FT_Vector_*, %struct.FT_Vector_** %194, align 8
  %2324 = zext i16 %2317 to i64
  %2325 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2323, i64 %2324, i32 0
  %2326 = load i64, i64* %2325, align 8
  %2327 = sub i64 %2322, %2326
  %2328 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2319, i64 %2320, i32 1
  %2329 = load i64, i64* %2328, align 8
  %2330 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2323, i64 %2324, i32 1
  %2331 = load i64, i64* %2330, align 8
  %2332 = sub i64 %2329, %2331
  %2333 = call i64 %2318(%struct.TT_ExecContextRec_* %0, i64 %2327, i64 %2332) #11
  %2334 = load void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*, void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)** %204, align 8
  %2335 = getelementptr inbounds i64, i64* %386, i64 1
  %2336 = load i64, i64* %2335, align 8
  %2337 = sub i64 %2336, %2333
  call void %2334(%struct.TT_ExecContextRec_* %0, %struct.TT_GlyphZoneRec_* %220, i16 zeroext %2280, i64 %2337) #11
  %2338 = load i16, i16* %218, align 8
  store i16 %2338, i16* %219, align 2
  store i16 %2280, i16* %222, align 4
  %2339 = load i8, i8* %135, align 8
  %2340 = and i8 %2339, 1
  %2341 = icmp eq i8 %2340, 0
  br i1 %2341, label %4788, label %2342

2342:                                             ; preds = %2316
  store i16 %2280, i16* %218, align 8
  br label %4788

2343:                                             ; preds = %384
  %2344 = load i64, i64* %138, align 8
  %2345 = load i64, i64* %182, align 8
  %2346 = icmp slt i64 %2344, %2345
  br i1 %2346, label %2351, label %2347

2347:                                             ; preds = %2343
  %2348 = load i16, i16* %218, align 8
  %2349 = load i16, i16* %192, align 4
  %2350 = icmp ult i16 %2348, %2349
  br i1 %2350, label %2355, label %2351

2351:                                             ; preds = %2347, %2343
  %2352 = load i8, i8* %140, align 1
  %2353 = icmp eq i8 %2352, 0
  br i1 %2353, label %2402, label %2354

2354:                                             ; preds = %2351
  store i32 134, i32* %145, align 8
  br label %2402

2355:                                             ; preds = %2347
  %2356 = icmp sgt i64 %2345, 0
  br i1 %2356, label %2357, label %2402

2357:                                             ; preds = %2355, %2400
  %2358 = phi i64* [ %2401, %2400 ], [ %385, %2355 ]
  %2359 = phi i64 [ %2399, %2400 ], [ %357, %2355 ]
  %2360 = phi i64 [ %2397, %2400 ], [ %2345, %2355 ]
  %2361 = add nsw i64 %2359, -1
  store i64 %2361, i64* %139, align 8
  %2362 = getelementptr inbounds i64, i64* %2358, i64 %2361
  %2363 = load i64, i64* %2362, align 8
  %2364 = trunc i64 %2363 to i32
  %2365 = and i32 %2364, 65535
  %2366 = load i16, i16* %163, align 4
  %2367 = zext i16 %2366 to i32
  %2368 = icmp ult i32 %2365, %2367
  br i1 %2368, label %2373, label %2369

2369:                                             ; preds = %2357
  %2370 = load i8, i8* %140, align 1
  %2371 = icmp eq i8 %2370, 0
  br i1 %2371, label %2395, label %2372

2372:                                             ; preds = %2369
  store i32 134, i32* %145, align 8
  br label %4878

2373:                                             ; preds = %2357
  %2374 = trunc i64 %2363 to i16
  %2375 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %193, align 8
  %2376 = load %struct.FT_Vector_*, %struct.FT_Vector_** %172, align 8
  %2377 = zext i32 %2365 to i64
  %2378 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2376, i64 %2377, i32 0
  %2379 = load i64, i64* %2378, align 8
  %2380 = load %struct.FT_Vector_*, %struct.FT_Vector_** %194, align 8
  %2381 = load i16, i16* %218, align 8
  %2382 = zext i16 %2381 to i64
  %2383 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2380, i64 %2382, i32 0
  %2384 = load i64, i64* %2383, align 8
  %2385 = sub i64 %2379, %2384
  %2386 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2376, i64 %2377, i32 1
  %2387 = load i64, i64* %2386, align 8
  %2388 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2380, i64 %2382, i32 1
  %2389 = load i64, i64* %2388, align 8
  %2390 = sub i64 %2387, %2389
  %2391 = call i64 %2375(%struct.TT_ExecContextRec_* %0, i64 %2385, i64 %2390) #11
  %2392 = load void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*, void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)** %204, align 8
  %2393 = sub i64 0, %2391
  call void %2392(%struct.TT_ExecContextRec_* %0, %struct.TT_GlyphZoneRec_* %220, i16 zeroext %2374, i64 %2393) #11
  %2394 = load i64, i64* %182, align 8
  br label %2395

2395:                                             ; preds = %2373, %2369
  %2396 = phi i64 [ %2360, %2369 ], [ %2394, %2373 ]
  %2397 = add nsw i64 %2396, -1
  store i64 %2397, i64* %182, align 8
  %2398 = icmp sgt i64 %2397, 0
  %2399 = load i64, i64* %139, align 8
  br i1 %2398, label %2400, label %2402

2400:                                             ; preds = %2395
  %2401 = load i64*, i64** %141, align 8
  br label %2357

2402:                                             ; preds = %2395, %2355, %2354, %2351
  %2403 = phi i64 [ %357, %2355 ], [ %357, %2354 ], [ %357, %2351 ], [ %2399, %2395 ]
  store i64 1, i64* %182, align 8
  store i64 %2403, i64* %142, align 8
  br label %4788

2404:                                             ; preds = %384
  store i32 2, i32* %121, align 8
  store i64 (%struct.TT_ExecContextRec_*, i64, i32)* @Round_To_Double_Grid, i64 (%struct.TT_ExecContextRec_*, i64, i32)** %183, align 8
  br label %4788

2405:                                             ; preds = %384, %384
  %2406 = getelementptr inbounds i64, i64* %386, i64 1
  %2407 = load i64, i64* %2406, align 8
  %2408 = load i64, i64* %386, align 8
  %2409 = trunc i64 %2408 to i16
  %2410 = trunc i64 %2408 to i32
  %2411 = and i32 %2410, 65535
  %2412 = load i16, i16* %192, align 4
  %2413 = zext i16 %2412 to i32
  %2414 = icmp ult i32 %2411, %2413
  br i1 %2414, label %2415, label %2418

2415:                                             ; preds = %2405
  %2416 = load i64, i64* %53, align 8
  %2417 = icmp ult i64 %2407, %2416
  br i1 %2417, label %2422, label %2418

2418:                                             ; preds = %2415, %2405
  %2419 = load i8, i8* %140, align 1
  %2420 = icmp eq i8 %2419, 0
  br i1 %2420, label %2476, label %2421

2421:                                             ; preds = %2418
  store i32 134, i32* %145, align 8
  br label %2476

2422:                                             ; preds = %2415
  %2423 = load i64 (%struct.TT_ExecContextRec_*, i64)*, i64 (%struct.TT_ExecContextRec_*, i64)** %105, align 8
  %2424 = call i64 %2423(%struct.TT_ExecContextRec_* %0, i64 %2407) #11
  %2425 = load i16, i16* %195, align 4
  %2426 = icmp eq i16 %2425, 0
  br i1 %2426, label %2429, label %2427

2427:                                             ; preds = %2422
  %2428 = and i64 %2408, 65535
  br label %2450

2429:                                             ; preds = %2422
  %2430 = trunc i64 %2424 to i32
  %2431 = load i16, i16* %215, align 2
  %2432 = sext i16 %2431 to i32
  %2433 = call fastcc i32 @TT_MulFix14_long_long(i32 %2430, i32 %2432) #12
  %2434 = sext i32 %2433 to i64
  %2435 = load %struct.FT_Vector_*, %struct.FT_Vector_** %202, align 8
  %2436 = and i64 %2408, 65535
  %2437 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2435, i64 %2436, i32 0
  store i64 %2434, i64* %2437, align 8
  %2438 = load i16, i16* %216, align 2
  %2439 = sext i16 %2438 to i32
  %2440 = call fastcc i32 @TT_MulFix14_long_long(i32 %2430, i32 %2439) #12
  %2441 = sext i32 %2440 to i64
  %2442 = load %struct.FT_Vector_*, %struct.FT_Vector_** %202, align 8
  %2443 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2442, i64 %2436, i32 1
  store i64 %2441, i64* %2443, align 8
  %2444 = load %struct.FT_Vector_*, %struct.FT_Vector_** %194, align 8
  %2445 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2444, i64 %2436
  %2446 = load %struct.FT_Vector_*, %struct.FT_Vector_** %202, align 8
  %2447 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2446, i64 %2436
  %2448 = bitcast %struct.FT_Vector_* %2445 to i8*
  %2449 = bitcast %struct.FT_Vector_* %2447 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2448, i8* align 8 %2449, i64 16, i1 false) #11
  br label %2450

2450:                                             ; preds = %2429, %2427
  %2451 = phi i64 [ %2428, %2427 ], [ %2436, %2429 ]
  %2452 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %193, align 8
  %2453 = load %struct.FT_Vector_*, %struct.FT_Vector_** %194, align 8
  %2454 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2453, i64 %2451, i32 0
  %2455 = load i64, i64* %2454, align 8
  %2456 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2453, i64 %2451, i32 1
  %2457 = load i64, i64* %2456, align 8
  %2458 = call i64 %2452(%struct.TT_ExecContextRec_* %0, i64 %2455, i64 %2457) #11
  %2459 = load i8, i8* %135, align 8
  %2460 = and i8 %2459, 1
  %2461 = icmp eq i8 %2460, 0
  br i1 %2461, label %2472, label %2462

2462:                                             ; preds = %2450
  %2463 = load i64, i64* %217, align 8
  %2464 = sub i64 %2424, %2458
  %2465 = icmp slt i64 %2464, 0
  %2466 = sub i64 0, %2464
  %2467 = select i1 %2465, i64 %2466, i64 %2464
  %2468 = icmp sgt i64 %2467, %2463
  %2469 = select i1 %2468, i64 %2458, i64 %2424
  %2470 = load i64 (%struct.TT_ExecContextRec_*, i64, i32)*, i64 (%struct.TT_ExecContextRec_*, i64, i32)** %183, align 8
  %2471 = call i64 %2470(%struct.TT_ExecContextRec_* %0, i64 %2469, i32 3) #11
  br label %2472

2472:                                             ; preds = %2462, %2450
  %2473 = phi i64 [ %2471, %2462 ], [ %2424, %2450 ]
  %2474 = load void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*, void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)** %204, align 8
  %2475 = sub i64 %2473, %2458
  call void %2474(%struct.TT_ExecContextRec_* %0, %struct.TT_GlyphZoneRec_* %214, i16 zeroext %2409, i64 %2475) #11
  br label %2476

2476:                                             ; preds = %2418, %2421, %2472
  store i16 %2409, i16* %218, align 8
  store i16 %2409, i16* %219, align 2
  br label %4788

2477:                                             ; preds = %384
  %2478 = load i8*, i8** %133, align 8
  %2479 = load i64, i64* %134, align 8
  %2480 = add nsw i64 %2479, 1
  %2481 = getelementptr inbounds i8, i8* %2478, i64 %2480
  %2482 = load i8, i8* %2481, align 1
  %2483 = zext i8 %2482 to i32
  %2484 = add nsw i64 %381, 1
  %2485 = load i64, i64* %138, align 8
  %2486 = sub i64 %2484, %2485
  %2487 = trunc i64 %2486 to i32
  %2488 = icmp ult i32 %2483, %2487
  br i1 %2488, label %2489, label %2497

2489:                                             ; preds = %2477
  %2490 = icmp eq i8 %2482, 0
  br i1 %2490, label %2515, label %2491

2491:                                             ; preds = %2489
  %2492 = add i64 %2479, 2
  %2493 = getelementptr inbounds i8, i8* %2478, i64 %2492
  %2494 = load i8, i8* %2493, align 1
  %2495 = zext i8 %2494 to i64
  store i64 %2495, i64* %386, align 8
  %2496 = icmp eq i8 %2482, 1
  br i1 %2496, label %2515, label %2498

2497:                                             ; preds = %2477
  store i32 130, i32* %145, align 8
  br label %4878

2498:                                             ; preds = %2491, %2498
  %2499 = phi i32 [ %2513, %2498 ], [ 2, %2491 ]
  %2500 = phi i16 [ %2512, %2498 ], [ 2, %2491 ]
  %2501 = load i8*, i8** %133, align 8
  %2502 = load i64, i64* %134, align 8
  %2503 = zext i16 %2500 to i64
  %2504 = add i64 %2502, 1
  %2505 = add i64 %2504, %2503
  %2506 = getelementptr inbounds i8, i8* %2501, i64 %2505
  %2507 = load i8, i8* %2506, align 1
  %2508 = zext i8 %2507 to i64
  %2509 = add nsw i32 %2499, -1
  %2510 = sext i32 %2509 to i64
  %2511 = getelementptr inbounds i64, i64* %386, i64 %2510
  store i64 %2508, i64* %2511, align 8
  %2512 = add i16 %2500, 1
  %2513 = zext i16 %2512 to i32
  %2514 = icmp ugt i32 %2513, %2483
  br i1 %2514, label %2515, label %2498

2515:                                             ; preds = %2498, %2491, %2489
  %2516 = zext i8 %2482 to i64
  %2517 = load i64, i64* %142, align 8
  %2518 = add nsw i64 %2517, %2516
  store i64 %2518, i64* %142, align 8
  br label %4788

2519:                                             ; preds = %384
  %2520 = load i8*, i8** %133, align 8
  %2521 = load i64, i64* %134, align 8
  %2522 = add nsw i64 %2521, 1
  %2523 = getelementptr inbounds i8, i8* %2520, i64 %2522
  %2524 = load i8, i8* %2523, align 1
  %2525 = zext i8 %2524 to i32
  %2526 = add nsw i64 %381, 1
  %2527 = load i64, i64* %138, align 8
  %2528 = sub i64 %2526, %2527
  %2529 = trunc i64 %2528 to i32
  %2530 = icmp ult i32 %2525, %2529
  br i1 %2530, label %2532, label %2531

2531:                                             ; preds = %2519
  store i32 130, i32* %145, align 8
  br label %4878

2532:                                             ; preds = %2519
  %2533 = add nsw i64 %2521, 2
  store i64 %2533, i64* %134, align 8
  %2534 = icmp eq i8 %2524, 0
  br i1 %2534, label %2568, label %2535

2535:                                             ; preds = %2532
  %2536 = add nsw i64 %2521, 4
  store i64 %2536, i64* %134, align 8
  %2537 = getelementptr inbounds i8, i8* %2520, i64 %2533
  %2538 = load i8, i8* %2537, align 1
  %2539 = zext i8 %2538 to i16
  %2540 = shl nuw i16 %2539, 8
  %2541 = add nsw i64 %2521, 3
  %2542 = getelementptr inbounds i8, i8* %2520, i64 %2541
  %2543 = load i8, i8* %2542, align 1
  %2544 = zext i8 %2543 to i16
  %2545 = or i16 %2540, %2544
  %2546 = sext i16 %2545 to i64
  store i64 %2546, i64* %386, align 8
  %2547 = icmp eq i8 %2524, 1
  br i1 %2547, label %2568, label %2548

2548:                                             ; preds = %2535, %2548
  %2549 = phi i16 [ %2565, %2548 ], [ 1, %2535 ]
  %2550 = load i64, i64* %134, align 8
  %2551 = load i8*, i8** %133, align 8
  %2552 = add nsw i64 %2550, 2
  store i64 %2552, i64* %134, align 8
  %2553 = getelementptr inbounds i8, i8* %2551, i64 %2550
  %2554 = load i8, i8* %2553, align 1
  %2555 = zext i8 %2554 to i16
  %2556 = shl nuw i16 %2555, 8
  %2557 = add nsw i64 %2550, 1
  %2558 = getelementptr inbounds i8, i8* %2551, i64 %2557
  %2559 = load i8, i8* %2558, align 1
  %2560 = zext i8 %2559 to i16
  %2561 = or i16 %2556, %2560
  %2562 = sext i16 %2561 to i64
  %2563 = zext i16 %2549 to i64
  %2564 = getelementptr inbounds i64, i64* %386, i64 %2563
  store i64 %2562, i64* %2564, align 8
  %2565 = add i16 %2549, 1
  %2566 = zext i16 %2565 to i32
  %2567 = icmp ult i32 %2566, %2525
  br i1 %2567, label %2548, label %2568

2568:                                             ; preds = %2548, %2535, %2532
  store i8 0, i8* %144, align 8
  %2569 = zext i8 %2524 to i64
  %2570 = load i64, i64* %142, align 8
  %2571 = add nsw i64 %2570, %2569
  store i64 %2571, i64* %142, align 8
  br label %4788

2572:                                             ; preds = %384
  %2573 = load i64, i64* %386, align 8
  %2574 = load i16, i16* %206, align 8
  %2575 = zext i16 %2574 to i64
  %2576 = icmp ult i64 %2573, %2575
  br i1 %2576, label %2581, label %2577

2577:                                             ; preds = %2572
  %2578 = load i8, i8* %140, align 1
  %2579 = icmp eq i8 %2578, 0
  br i1 %2579, label %4788, label %2580

2580:                                             ; preds = %2577
  store i32 134, i32* %145, align 8
  br label %4878

2581:                                             ; preds = %2572
  %2582 = load i32, i32* %120, align 8
  %2583 = icmp eq i32 %2582, 3
  %2584 = load i64*, i64** %113, align 8
  %2585 = bitcast i64* %2584 to i8*
  br i1 %2583, label %2586, label %2612

2586:                                             ; preds = %2581
  %2587 = load i64*, i64** %116, align 8
  %2588 = icmp eq i64* %2584, %2587
  br i1 %2588, label %2589, label %2612

2589:                                             ; preds = %2586
  %2590 = load i16, i16* %207, align 8
  %2591 = zext i16 %2590 to i64
  %2592 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %208, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %210) #11
  store i32 -1431655766, i32* %2, align 4
  %2593 = icmp ult i16 %2590, %2574
  br i1 %2593, label %2595, label %2594

2594:                                             ; preds = %2589
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %210) #11
  store i32 0, i32* %145, align 8
  br label %2605

2595:                                             ; preds = %2589
  %2596 = shl nuw nsw i64 %2591, 3
  %2597 = shl nuw nsw i64 %2575, 3
  %2598 = load i8*, i8** %211, align 8
  %2599 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %2592, i64 1, i64 %2596, i64 %2597, i8* %2598, i32* nonnull %2) #11
  store i8* %2599, i8** %211, align 8
  %2600 = load i32, i32* %2, align 4
  %2601 = icmp eq i32 %2600, 0
  %2602 = select i1 %2601, i16 %2574, i16 %2590
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %210) #11
  store i32 %2600, i32* %145, align 8
  store i16 %2602, i16* %207, align 8
  br i1 %2601, label %2603, label %4790

2603:                                             ; preds = %2595
  %2604 = load i8*, i8** %212, align 8
  br label %2605

2605:                                             ; preds = %2603, %2594
  %2606 = phi i8* [ %2585, %2594 ], [ %2604, %2603 ]
  %2607 = phi i64 [ %2591, %2594 ], [ %2575, %2603 ]
  %2608 = load i8*, i8** %211, align 8
  %2609 = shl nuw nsw i64 %2607, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2608, i8* align 8 %2606, i64 %2609, i1 false) #11
  %2610 = load i64, i64* %213, align 8
  store i64 %2610, i64* %114, align 8
  %2611 = inttoptr i64 %2610 to i64*
  br label %2612

2612:                                             ; preds = %2605, %2586, %2581
  %2613 = phi i64* [ %2611, %2605 ], [ %2584, %2586 ], [ %2584, %2581 ]
  %2614 = getelementptr inbounds i64, i64* %386, i64 1
  %2615 = load i64, i64* %2614, align 8
  %2616 = getelementptr inbounds i64, i64* %2613, i64 %2573
  store i64 %2615, i64* %2616, align 8
  br label %4788

2617:                                             ; preds = %384
  %2618 = load i64, i64* %386, align 8
  %2619 = load i16, i16* %206, align 8
  %2620 = zext i16 %2619 to i64
  %2621 = icmp ult i64 %2618, %2620
  br i1 %2621, label %2626, label %2622

2622:                                             ; preds = %2617
  %2623 = load i8, i8* %140, align 1
  %2624 = icmp eq i8 %2623, 0
  br i1 %2624, label %2630, label %2625

2625:                                             ; preds = %2622
  store i32 134, i32* %145, align 8
  br label %4878

2626:                                             ; preds = %2617
  %2627 = load i64*, i64** %113, align 8
  %2628 = getelementptr inbounds i64, i64* %2627, i64 %2618
  %2629 = load i64, i64* %2628, align 8
  br label %2630

2630:                                             ; preds = %2626, %2622
  %2631 = phi i64 [ %2629, %2626 ], [ 0, %2622 ]
  store i64 %2631, i64* %386, align 8
  br label %4788

2632:                                             ; preds = %384
  %2633 = load i64, i64* %386, align 8
  %2634 = load i64, i64* %53, align 8
  %2635 = icmp ult i64 %2633, %2634
  br i1 %2635, label %2640, label %2636

2636:                                             ; preds = %2632
  %2637 = load i8, i8* %140, align 1
  %2638 = icmp eq i8 %2637, 0
  br i1 %2638, label %4788, label %2639

2639:                                             ; preds = %2636
  store i32 134, i32* %145, align 8
  br label %4878

2640:                                             ; preds = %2632
  %2641 = load void (%struct.TT_ExecContextRec_*, i64, i64)*, void (%struct.TT_ExecContextRec_*, i64, i64)** %106, align 8
  %2642 = getelementptr inbounds i64, i64* %386, i64 1
  %2643 = load i64, i64* %2642, align 8
  call void %2641(%struct.TT_ExecContextRec_* %0, i64 %2633, i64 %2643) #11
  br label %4788

2644:                                             ; preds = %384
  %2645 = load i64, i64* %386, align 8
  %2646 = load i64, i64* %53, align 8
  %2647 = icmp ult i64 %2645, %2646
  br i1 %2647, label %2652, label %2648

2648:                                             ; preds = %2644
  %2649 = load i8, i8* %140, align 1
  %2650 = icmp eq i8 %2649, 0
  br i1 %2650, label %2655, label %2651

2651:                                             ; preds = %2648
  store i32 134, i32* %145, align 8
  br label %4878

2652:                                             ; preds = %2644
  %2653 = load i64 (%struct.TT_ExecContextRec_*, i64)*, i64 (%struct.TT_ExecContextRec_*, i64)** %105, align 8
  %2654 = call i64 %2653(%struct.TT_ExecContextRec_* %0, i64 %2645) #11
  br label %2655

2655:                                             ; preds = %2652, %2648
  %2656 = phi i64 [ %2654, %2652 ], [ 0, %2648 ]
  store i64 %2656, i64* %386, align 8
  br label %4788

2657:                                             ; preds = %384, %384
  %2658 = load i64, i64* %386, align 8
  %2659 = load i16, i16* %164, align 4
  %2660 = zext i16 %2659 to i64
  %2661 = icmp ult i64 %2658, %2660
  br i1 %2661, label %2666, label %2662

2662:                                             ; preds = %2657
  %2663 = load i8, i8* %140, align 1
  %2664 = icmp eq i8 %2663, 0
  br i1 %2664, label %2685, label %2665

2665:                                             ; preds = %2662
  store i32 134, i32* %145, align 8
  br label %2685

2666:                                             ; preds = %2657
  %2667 = and i8 %358, 1
  %2668 = icmp eq i8 %2667, 0
  br i1 %2668, label %2677, label %2669

2669:                                             ; preds = %2666
  %2670 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %201, align 8
  %2671 = load %struct.FT_Vector_*, %struct.FT_Vector_** %166, align 8
  %2672 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2671, i64 %2658, i32 0
  %2673 = load i64, i64* %2672, align 8
  %2674 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2671, i64 %2658, i32 1
  %2675 = load i64, i64* %2674, align 8
  %2676 = call i64 %2670(%struct.TT_ExecContextRec_* %0, i64 %2673, i64 %2675) #11
  br label %2685

2677:                                             ; preds = %2666
  %2678 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %193, align 8
  %2679 = load %struct.FT_Vector_*, %struct.FT_Vector_** %173, align 8
  %2680 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2679, i64 %2658, i32 0
  %2681 = load i64, i64* %2680, align 8
  %2682 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2679, i64 %2658, i32 1
  %2683 = load i64, i64* %2682, align 8
  %2684 = call i64 %2678(%struct.TT_ExecContextRec_* %0, i64 %2681, i64 %2683) #11
  br label %2685

2685:                                             ; preds = %2662, %2665, %2669, %2677
  %2686 = phi i64 [ %2676, %2669 ], [ %2684, %2677 ], [ 0, %2662 ], [ 0, %2665 ]
  store i64 %2686, i64* %386, align 8
  br label %4788

2687:                                             ; preds = %384
  %2688 = load i64, i64* %386, align 8
  %2689 = trunc i64 %2688 to i32
  %2690 = and i32 %2689, 65535
  %2691 = load i16, i16* %164, align 4
  %2692 = zext i16 %2691 to i32
  %2693 = icmp ult i32 %2690, %2692
  br i1 %2693, label %2698, label %2694

2694:                                             ; preds = %2687
  %2695 = load i8, i8* %140, align 1
  %2696 = icmp eq i8 %2695, 0
  br i1 %2696, label %4788, label %2697

2697:                                             ; preds = %2694
  store i32 134, i32* %145, align 8
  br label %4878

2698:                                             ; preds = %2687
  %2699 = trunc i64 %2688 to i16
  %2700 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %193, align 8
  %2701 = load %struct.FT_Vector_*, %struct.FT_Vector_** %173, align 8
  %2702 = and i64 %2688, 65535
  %2703 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2701, i64 %2702, i32 0
  %2704 = load i64, i64* %2703, align 8
  %2705 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2701, i64 %2702, i32 1
  %2706 = load i64, i64* %2705, align 8
  %2707 = call i64 %2700(%struct.TT_ExecContextRec_* %0, i64 %2704, i64 %2706) #11
  %2708 = load void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*, void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)** %204, align 8
  %2709 = getelementptr inbounds i64, i64* %386, i64 1
  %2710 = load i64, i64* %2709, align 8
  %2711 = sub i64 %2710, %2707
  call void %2708(%struct.TT_ExecContextRec_* %0, %struct.TT_GlyphZoneRec_* %203, i16 zeroext %2699, i64 %2711) #11
  %2712 = load i16, i16* %205, align 8
  %2713 = icmp eq i16 %2712, 0
  br i1 %2713, label %2714, label %4788

2714:                                             ; preds = %2698
  %2715 = load %struct.FT_Vector_*, %struct.FT_Vector_** %166, align 8
  %2716 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2715, i64 %2702
  %2717 = load %struct.FT_Vector_*, %struct.FT_Vector_** %173, align 8
  %2718 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2717, i64 %2702
  %2719 = bitcast %struct.FT_Vector_* %2716 to i8*
  %2720 = bitcast %struct.FT_Vector_* %2718 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2719, i8* align 8 %2720, i64 16, i1 false) #11
  br label %4788

2721:                                             ; preds = %384, %384
  %2722 = load i64, i64* %386, align 8
  %2723 = trunc i64 %2722 to i32
  %2724 = and i32 %2723, 65535
  %2725 = load i16, i16* %192, align 4
  %2726 = zext i16 %2725 to i32
  %2727 = icmp ult i32 %2724, %2726
  br i1 %2727, label %2728, label %2736

2728:                                             ; preds = %2721
  %2729 = getelementptr inbounds i64, i64* %386, i64 1
  %2730 = load i64, i64* %2729, align 8
  %2731 = trunc i64 %2730 to i32
  %2732 = and i32 %2731, 65535
  %2733 = load i16, i16* %163, align 4
  %2734 = zext i16 %2733 to i32
  %2735 = icmp ult i32 %2732, %2734
  br i1 %2735, label %2740, label %2736

2736:                                             ; preds = %2728, %2721
  %2737 = load i8, i8* %140, align 1
  %2738 = icmp eq i8 %2737, 0
  br i1 %2738, label %2850, label %2739

2739:                                             ; preds = %2736
  store i32 134, i32* %145, align 8
  br label %2850

2740:                                             ; preds = %2728
  %2741 = and i8 %358, 1
  %2742 = icmp eq i8 %2741, 0
  br i1 %2742, label %2760, label %2743

2743:                                             ; preds = %2740
  %2744 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %193, align 8
  %2745 = load %struct.FT_Vector_*, %struct.FT_Vector_** %194, align 8
  %2746 = zext i32 %2724 to i64
  %2747 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2745, i64 %2746, i32 0
  %2748 = load i64, i64* %2747, align 8
  %2749 = load %struct.FT_Vector_*, %struct.FT_Vector_** %172, align 8
  %2750 = zext i32 %2732 to i64
  %2751 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2749, i64 %2750, i32 0
  %2752 = load i64, i64* %2751, align 8
  %2753 = sub i64 %2748, %2752
  %2754 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2745, i64 %2746, i32 1
  %2755 = load i64, i64* %2754, align 8
  %2756 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2749, i64 %2750, i32 1
  %2757 = load i64, i64* %2756, align 8
  %2758 = sub i64 %2755, %2757
  %2759 = call i64 %2744(%struct.TT_ExecContextRec_* %0, i64 %2753, i64 %2758) #11
  br label %2850

2760:                                             ; preds = %2740
  %2761 = load i16, i16* %195, align 4
  %2762 = icmp eq i16 %2761, 0
  br i1 %2762, label %2766, label %2763

2763:                                             ; preds = %2760
  %2764 = load i16, i16* %196, align 2
  %2765 = icmp eq i16 %2764, 0
  br i1 %2765, label %2766, label %2783

2766:                                             ; preds = %2763, %2760
  %2767 = load %struct.FT_Vector_*, %struct.FT_Vector_** %202, align 8
  %2768 = zext i32 %2724 to i64
  %2769 = load %struct.FT_Vector_*, %struct.FT_Vector_** %165, align 8
  %2770 = zext i32 %2732 to i64
  %2771 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %201, align 8
  %2772 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2767, i64 %2768, i32 0
  %2773 = load i64, i64* %2772, align 8
  %2774 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2769, i64 %2770, i32 0
  %2775 = load i64, i64* %2774, align 8
  %2776 = sub i64 %2773, %2775
  %2777 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2767, i64 %2768, i32 1
  %2778 = load i64, i64* %2777, align 8
  %2779 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2769, i64 %2770, i32 1
  %2780 = load i64, i64* %2779, align 8
  %2781 = sub i64 %2778, %2780
  %2782 = call i64 %2771(%struct.TT_ExecContextRec_* %0, i64 %2776, i64 %2781) #11
  br label %2850

2783:                                             ; preds = %2763
  %2784 = load %struct.FT_Vector_*, %struct.FT_Vector_** %197, align 8
  %2785 = zext i32 %2724 to i64
  %2786 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2784, i64 %2785
  %2787 = load %struct.FT_Vector_*, %struct.FT_Vector_** %198, align 8
  %2788 = zext i32 %2732 to i64
  %2789 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2787, i64 %2788
  %2790 = load i64, i64* %199, align 8
  %2791 = load i64, i64* %200, align 8
  %2792 = icmp eq i64 %2790, %2791
  br i1 %2792, label %2793, label %2817

2793:                                             ; preds = %2783
  %2794 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %201, align 8
  %2795 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2786, i64 0, i32 0
  %2796 = load i64, i64* %2795, align 8
  %2797 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2789, i64 0, i32 0
  %2798 = load i64, i64* %2797, align 8
  %2799 = sub i64 %2796, %2798
  %2800 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2784, i64 %2785, i32 1
  %2801 = load i64, i64* %2800, align 8
  %2802 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2787, i64 %2788, i32 1
  %2803 = load i64, i64* %2802, align 8
  %2804 = sub i64 %2801, %2803
  %2805 = call i64 %2794(%struct.TT_ExecContextRec_* %0, i64 %2799, i64 %2804) #11
  %2806 = load i64, i64* %199, align 8
  %2807 = shl i64 %2805, 32
  %2808 = ashr exact i64 %2807, 32
  %2809 = shl i64 %2806, 32
  %2810 = ashr exact i64 %2809, 32
  %2811 = mul nsw i64 %2810, %2808
  %2812 = ashr i64 %2811, 63
  %2813 = add nsw i64 %2811, 32768
  %2814 = add nsw i64 %2813, %2812
  %2815 = shl i64 %2814, 16
  %2816 = ashr i64 %2815, 32
  br label %2850

2817:                                             ; preds = %2783
  %2818 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2786, i64 0, i32 0
  %2819 = load i64, i64* %2818, align 8
  %2820 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2789, i64 0, i32 0
  %2821 = load i64, i64* %2820, align 8
  %2822 = sub nsw i64 %2819, %2821
  %2823 = shl i64 %2822, 32
  %2824 = ashr exact i64 %2823, 32
  %2825 = shl i64 %2790, 32
  %2826 = ashr exact i64 %2825, 32
  %2827 = mul nsw i64 %2824, %2826
  %2828 = ashr i64 %2827, 63
  %2829 = add nsw i64 %2827, 32768
  %2830 = add nsw i64 %2829, %2828
  %2831 = shl i64 %2830, 16
  %2832 = ashr i64 %2831, 32
  %2833 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2784, i64 %2785, i32 1
  %2834 = load i64, i64* %2833, align 8
  %2835 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2787, i64 %2788, i32 1
  %2836 = load i64, i64* %2835, align 8
  %2837 = sub nsw i64 %2834, %2836
  %2838 = shl i64 %2837, 32
  %2839 = ashr exact i64 %2838, 32
  %2840 = shl i64 %2791, 32
  %2841 = ashr exact i64 %2840, 32
  %2842 = mul nsw i64 %2839, %2841
  %2843 = ashr i64 %2842, 63
  %2844 = add nsw i64 %2842, 32768
  %2845 = add nsw i64 %2844, %2843
  %2846 = shl i64 %2845, 16
  %2847 = ashr i64 %2846, 32
  %2848 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %201, align 8
  %2849 = call i64 %2848(%struct.TT_ExecContextRec_* %0, i64 %2832, i64 %2847) #11
  br label %2850

2850:                                             ; preds = %2736, %2739, %2743, %2766, %2793, %2817
  %2851 = phi i64 [ %2759, %2743 ], [ %2782, %2766 ], [ 0, %2736 ], [ 0, %2739 ], [ %2816, %2793 ], [ %2849, %2817 ]
  store i64 %2851, i64* %386, align 8
  br label %4788

2852:                                             ; preds = %384
  %2853 = load i64 (%struct.TT_ExecContextRec_*)*, i64 (%struct.TT_ExecContextRec_*)** %100, align 8
  %2854 = call i64 %2853(%struct.TT_ExecContextRec_* %0) #11
  store i64 %2854, i64* %386, align 8
  br label %4788

2855:                                             ; preds = %384
  %2856 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %152, align 8
  %2857 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %2856, i64 0, i32 24
  %2858 = bitcast %struct.FT_DriverRec_** %2857 to %struct.TT_DriverRec_**
  %2859 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %2858, align 8
  %2860 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %2859, i64 0, i32 2
  %2861 = load i32, i32* %2860, align 8
  %2862 = icmp eq i32 %2861, 35
  br i1 %2862, label %2863, label %2866

2863:                                             ; preds = %2855
  %2864 = load i64 (%struct.TT_ExecContextRec_*)*, i64 (%struct.TT_ExecContextRec_*)** %100, align 8
  %2865 = call i64 %2864(%struct.TT_ExecContextRec_* %0) #11
  br label %2868

2866:                                             ; preds = %2855
  %2867 = load i64, i64* %191, align 8
  br label %2868

2868:                                             ; preds = %2863, %2866
  %2869 = phi i64 [ %2867, %2866 ], [ %2865, %2863 ]
  store i64 %2869, i64* %386, align 8
  br label %4788

2870:                                             ; preds = %384
  store i8 1, i8* %190, align 4
  br label %4788

2871:                                             ; preds = %384
  store i8 0, i8* %190, align 4
  br label %4788

2872:                                             ; preds = %384
  store i32 135, i32* %145, align 8
  br label %4878

2873:                                             ; preds = %384
  %2874 = load i64, i64* %386, align 8
  %2875 = getelementptr inbounds i64, i64* %386, i64 1
  %2876 = load i64, i64* %2875, align 8
  %2877 = icmp slt i64 %2874, %2876
  %2878 = zext i1 %2877 to i64
  store i64 %2878, i64* %386, align 8
  br label %4788

2879:                                             ; preds = %384
  %2880 = load i64, i64* %386, align 8
  %2881 = getelementptr inbounds i64, i64* %386, i64 1
  %2882 = load i64, i64* %2881, align 8
  %2883 = icmp sle i64 %2880, %2882
  %2884 = zext i1 %2883 to i64
  store i64 %2884, i64* %386, align 8
  br label %4788

2885:                                             ; preds = %384
  %2886 = load i64, i64* %386, align 8
  %2887 = getelementptr inbounds i64, i64* %386, i64 1
  %2888 = load i64, i64* %2887, align 8
  %2889 = icmp sgt i64 %2886, %2888
  %2890 = zext i1 %2889 to i64
  store i64 %2890, i64* %386, align 8
  br label %4788

2891:                                             ; preds = %384
  %2892 = load i64, i64* %386, align 8
  %2893 = getelementptr inbounds i64, i64* %386, i64 1
  %2894 = load i64, i64* %2893, align 8
  %2895 = icmp sge i64 %2892, %2894
  %2896 = zext i1 %2895 to i64
  store i64 %2896, i64* %386, align 8
  br label %4788

2897:                                             ; preds = %384
  %2898 = load i64, i64* %386, align 8
  %2899 = getelementptr inbounds i64, i64* %386, i64 1
  %2900 = load i64, i64* %2899, align 8
  %2901 = icmp eq i64 %2898, %2900
  %2902 = zext i1 %2901 to i64
  store i64 %2902, i64* %386, align 8
  br label %4788

2903:                                             ; preds = %384
  %2904 = load i64, i64* %386, align 8
  %2905 = getelementptr inbounds i64, i64* %386, i64 1
  %2906 = load i64, i64* %2905, align 8
  %2907 = icmp ne i64 %2904, %2906
  %2908 = zext i1 %2907 to i64
  store i64 %2908, i64* %386, align 8
  br label %4788

2909:                                             ; preds = %384
  %2910 = load i64 (%struct.TT_ExecContextRec_*, i64, i32)*, i64 (%struct.TT_ExecContextRec_*, i64, i32)** %183, align 8
  %2911 = load i64, i64* %386, align 8
  %2912 = call i64 %2910(%struct.TT_ExecContextRec_* %0, i64 %2911, i32 3) #11
  %2913 = and i64 %2912, 127
  %2914 = icmp eq i64 %2913, 64
  %2915 = zext i1 %2914 to i64
  store i64 %2915, i64* %386, align 8
  br label %4788

2916:                                             ; preds = %384
  %2917 = load i64 (%struct.TT_ExecContextRec_*, i64, i32)*, i64 (%struct.TT_ExecContextRec_*, i64, i32)** %183, align 8
  %2918 = load i64, i64* %386, align 8
  %2919 = call i64 %2917(%struct.TT_ExecContextRec_* %0, i64 %2918, i32 3) #11
  %2920 = and i64 %2919, 127
  %2921 = icmp eq i64 %2920, 0
  %2922 = zext i1 %2921 to i64
  store i64 %2922, i64* %386, align 8
  br label %4788

2923:                                             ; preds = %384
  %2924 = load i64, i64* %386, align 8
  %2925 = icmp eq i64 %2924, 0
  br i1 %2925, label %2926, label %4788

2926:                                             ; preds = %2923
  %2927 = load i32, i32* %136, align 4
  %2928 = load i64, i64* %134, align 8
  %2929 = load i64, i64* %137, align 8
  br label %2930

2930:                                             ; preds = %2976, %2926
  %2931 = phi i64 [ %2928, %2926 ], [ %2942, %2976 ]
  %2932 = phi i32 [ %2927, %2926 ], [ %2964, %2976 ]
  %2933 = phi i32 [ 1, %2926 ], [ %2977, %2976 ]
  %2934 = icmp eq i32 %2933, 1
  br label %2935

2935:                                             ; preds = %2969, %2930
  %2936 = phi i64 [ %2931, %2930 ], [ %2942, %2969 ]
  %2937 = phi i32 [ %2932, %2930 ], [ %2964, %2969 ]
  br label %2938

2938:                                             ; preds = %2972, %2935
  %2939 = phi i64 [ %2942, %2972 ], [ %2936, %2935 ]
  %2940 = phi i32 [ %2964, %2972 ], [ %2937, %2935 ]
  %2941 = sext i32 %2940 to i64
  %2942 = add nsw i64 %2939, %2941
  store i64 %2942, i64* %134, align 8
  %2943 = icmp slt i64 %2942, %2929
  br i1 %2943, label %2944, label %2968

2944:                                             ; preds = %2938
  %2945 = load i8*, i8** %133, align 8
  %2946 = getelementptr inbounds i8, i8* %2945, i64 %2942
  %2947 = load i8, i8* %2946, align 1
  store i8 %2947, i8* %135, align 8
  %2948 = zext i8 %2947 to i64
  %2949 = getelementptr inbounds [256 x i8], [256 x i8]* @opcode_length, i64 0, i64 %2948
  %2950 = load i8, i8* %2949, align 1
  %2951 = sext i8 %2950 to i32
  store i32 %2951, i32* %136, align 4
  %2952 = or i64 %2948, 1
  %2953 = icmp eq i64 %2952, 65
  br i1 %2953, label %2954, label %2963

2954:                                             ; preds = %2944
  %2955 = add nsw i64 %2942, 1
  %2956 = icmp slt i64 %2955, %2929
  br i1 %2956, label %2957, label %2968

2957:                                             ; preds = %2954
  %2958 = getelementptr inbounds i8, i8* %2945, i64 %2955
  %2959 = load i8, i8* %2958, align 1
  %2960 = zext i8 %2959 to i32
  %2961 = mul nsw i32 %2960, %2951
  %2962 = sub nsw i32 2, %2961
  store i32 %2962, i32* %136, align 4
  br label %2963

2963:                                             ; preds = %2957, %2944
  %2964 = phi i32 [ %2962, %2957 ], [ %2951, %2944 ]
  %2965 = sext i32 %2964 to i64
  %2966 = add nsw i64 %2942, %2965
  %2967 = icmp sgt i64 %2966, %2929
  br i1 %2967, label %2968, label %2969

2968:                                             ; preds = %2963, %2954, %2938
  store i32 131, i32* %145, align 8
  br label %4878

2969:                                             ; preds = %2963
  switch i8 %2947, label %2935 [
    i8 88, label %2970
    i8 27, label %2972
    i8 89, label %2973
  ]

2970:                                             ; preds = %2969
  %2971 = add nsw i32 %2933, 1
  br label %2976

2972:                                             ; preds = %2969
  br i1 %2934, label %4788, label %2938

2973:                                             ; preds = %2969
  %2974 = add nsw i32 %2933, -1
  %2975 = icmp eq i32 %2974, 0
  br i1 %2975, label %4788, label %2976

2976:                                             ; preds = %2973, %2970
  %2977 = phi i32 [ %2971, %2970 ], [ %2974, %2973 ]
  br label %2930

2978:                                             ; preds = %384
  %2979 = load i64, i64* %386, align 8
  %2980 = icmp eq i64 %2979, 0
  br i1 %2980, label %2986, label %2981

2981:                                             ; preds = %2978
  %2982 = getelementptr inbounds i64, i64* %386, i64 1
  %2983 = load i64, i64* %2982, align 8
  %2984 = icmp ne i64 %2983, 0
  %2985 = zext i1 %2984 to i64
  br label %2986

2986:                                             ; preds = %2978, %2981
  %2987 = phi i64 [ 0, %2978 ], [ %2985, %2981 ]
  store i64 %2987, i64* %386, align 8
  br label %4788

2988:                                             ; preds = %384
  %2989 = load i64, i64* %386, align 8
  %2990 = icmp eq i64 %2989, 0
  br i1 %2990, label %2991, label %2996

2991:                                             ; preds = %2988
  %2992 = getelementptr inbounds i64, i64* %386, i64 1
  %2993 = load i64, i64* %2992, align 8
  %2994 = icmp ne i64 %2993, 0
  %2995 = zext i1 %2994 to i64
  br label %2996

2996:                                             ; preds = %2988, %2991
  %2997 = phi i64 [ 1, %2988 ], [ %2995, %2991 ]
  store i64 %2997, i64* %386, align 8
  br label %4788

2998:                                             ; preds = %384
  %2999 = load i64, i64* %386, align 8
  %3000 = icmp eq i64 %2999, 0
  %3001 = zext i1 %3000 to i64
  store i64 %3001, i64* %386, align 8
  br label %4788

3002:                                             ; preds = %384
  call fastcc void @Ins_DELTAP(%struct.TT_ExecContextRec_* %0, i64* %386)
  br label %4788

3003:                                             ; preds = %384
  %3004 = load i64, i64* %386, align 8
  %3005 = trunc i64 %3004 to i16
  store i16 %3005, i16* %187, align 8
  br label %4788

3006:                                             ; preds = %384
  %3007 = load i64, i64* %386, align 8
  %3008 = icmp ugt i64 %3007, 6
  br i1 %3008, label %3009, label %3010

3009:                                             ; preds = %3006
  store i32 132, i32* %145, align 8
  br label %4878

3010:                                             ; preds = %3006
  %3011 = trunc i64 %3007 to i16
  store i16 %3011, i16* %188, align 2
  br label %4788

3012:                                             ; preds = %384
  %3013 = load i64, i64* %386, align 8
  %3014 = getelementptr inbounds i64, i64* %386, i64 1
  %3015 = load i64, i64* %3014, align 8
  %3016 = add i64 %3015, %3013
  store i64 %3016, i64* %386, align 8
  br label %4788

3017:                                             ; preds = %384
  %3018 = load i64, i64* %386, align 8
  %3019 = getelementptr inbounds i64, i64* %386, i64 1
  %3020 = load i64, i64* %3019, align 8
  %3021 = sub i64 %3018, %3020
  store i64 %3021, i64* %386, align 8
  br label %4788

3022:                                             ; preds = %384
  %3023 = getelementptr inbounds i64, i64* %386, i64 1
  %3024 = load i64, i64* %3023, align 8
  %3025 = icmp eq i64 %3024, 0
  br i1 %3025, label %3026, label %3027

3026:                                             ; preds = %3022
  store i32 133, i32* %145, align 8
  br label %4878

3027:                                             ; preds = %3022
  %3028 = load i64, i64* %386, align 8
  %3029 = call i64 @FT_MulDiv_No_Round(i64 %3028, i64 64, i64 %3024) #11
  store i64 %3029, i64* %386, align 8
  br label %4788

3030:                                             ; preds = %384
  %3031 = load i64, i64* %386, align 8
  %3032 = getelementptr inbounds i64, i64* %386, i64 1
  %3033 = load i64, i64* %3032, align 8
  %3034 = call i64 @FT_MulDiv(i64 %3031, i64 %3033, i64 64) #11
  store i64 %3034, i64* %386, align 8
  br label %4788

3035:                                             ; preds = %384
  %3036 = load i64, i64* %386, align 8
  %3037 = icmp slt i64 %3036, 0
  br i1 %3037, label %3038, label %4788

3038:                                             ; preds = %3035
  %3039 = sub i64 0, %3036
  store i64 %3039, i64* %386, align 8
  br label %4788

3040:                                             ; preds = %384
  %3041 = load i64, i64* %386, align 8
  %3042 = sub i64 0, %3041
  store i64 %3042, i64* %386, align 8
  br label %4788

3043:                                             ; preds = %384
  %3044 = load i64, i64* %386, align 8
  %3045 = and i64 %3044, -64
  store i64 %3045, i64* %386, align 8
  br label %4788

3046:                                             ; preds = %384
  %3047 = load i64, i64* %386, align 8
  %3048 = add i64 %3047, 63
  %3049 = and i64 %3048, -64
  store i64 %3049, i64* %386, align 8
  br label %4788

3050:                                             ; preds = %384, %384, %384, %384
  %3051 = load i64 (%struct.TT_ExecContextRec_*, i64, i32)*, i64 (%struct.TT_ExecContextRec_*, i64, i32)** %183, align 8
  %3052 = load i64, i64* %386, align 8
  %3053 = and i8 %358, 3
  %3054 = zext i8 %3053 to i32
  %3055 = call i64 %3051(%struct.TT_ExecContextRec_* %0, i64 %3052, i32 %3054) #11
  store i64 %3055, i64* %386, align 8
  br label %4788

3056:                                             ; preds = %384, %384, %384, %384
  %3057 = load i64, i64* %386, align 8
  %3058 = and i8 %358, 3
  %3059 = zext i8 %3058 to i64
  %3060 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 5, i64 %3059
  %3061 = load i64, i64* %3060, align 8
  %3062 = icmp sgt i64 %3057, -1
  br i1 %3062, label %3063, label %3067

3063:                                             ; preds = %3056
  %3064 = add i64 %3061, %3057
  %3065 = icmp sgt i64 %3064, 0
  %3066 = select i1 %3065, i64 %3064, i64 0
  br label %3071

3067:                                             ; preds = %3056
  %3068 = sub i64 %3057, %3061
  %3069 = icmp slt i64 %3068, 0
  %3070 = select i1 %3069, i64 %3068, i64 0
  br label %3071

3071:                                             ; preds = %3063, %3067
  %3072 = phi i64 [ %3066, %3063 ], [ %3070, %3067 ]
  store i64 %3072, i64* %386, align 8
  br label %4788

3073:                                             ; preds = %384
  %3074 = load i64, i64* %386, align 8
  %3075 = load i64, i64* %53, align 8
  %3076 = icmp ult i64 %3074, %3075
  br i1 %3076, label %3081, label %3077

3077:                                             ; preds = %3073
  %3078 = load i8, i8* %140, align 1
  %3079 = icmp eq i8 %3078, 0
  br i1 %3079, label %4788, label %3080

3080:                                             ; preds = %3077
  store i32 134, i32* %145, align 8
  br label %4878

3081:                                             ; preds = %3073
  %3082 = getelementptr inbounds i64, i64* %386, i64 1
  %3083 = load i64, i64* %3082, align 8
  %3084 = load i64, i64* %189, align 8
  %3085 = shl i64 %3083, 32
  %3086 = ashr exact i64 %3085, 32
  %3087 = shl i64 %3084, 32
  %3088 = ashr exact i64 %3087, 32
  %3089 = mul nsw i64 %3088, %3086
  %3090 = ashr i64 %3089, 63
  %3091 = add nsw i64 %3089, 32768
  %3092 = add nsw i64 %3091, %3090
  %3093 = shl i64 %3092, 16
  %3094 = ashr i64 %3093, 32
  %3095 = load i64*, i64** %108, align 8
  %3096 = getelementptr inbounds i64, i64* %3095, i64 %3074
  store i64 %3094, i64* %3096, align 8
  br label %4788

3097:                                             ; preds = %384, %384
  call fastcc void @Ins_DELTAP(%struct.TT_ExecContextRec_* %0, i64* %386)
  br label %4788

3098:                                             ; preds = %384, %384, %384
  %3099 = load i64 (%struct.TT_ExecContextRec_*)*, i64 (%struct.TT_ExecContextRec_*)** %100, align 8
  %3100 = call i64 %3099(%struct.TT_ExecContextRec_* %0) #11
  %3101 = load i64, i64* %386, align 8
  %3102 = icmp eq i64 %3101, 0
  br i1 %3102, label %3155, label %3103

3103:                                             ; preds = %3098, %3152
  %3104 = phi i64 [ %3153, %3152 ], [ 1, %3098 ]
  %3105 = load i64, i64* %139, align 8
  %3106 = icmp slt i64 %3105, 2
  br i1 %3106, label %3107, label %3112

3107:                                             ; preds = %3103
  %3108 = load i8, i8* %140, align 1
  %3109 = icmp eq i8 %3108, 0
  br i1 %3109, label %3111, label %3110

3110:                                             ; preds = %3107
  store i32 129, i32* %145, align 8
  br label %3111

3111:                                             ; preds = %3110, %3107
  store i64 0, i64* %139, align 8
  br label %3155

3112:                                             ; preds = %3103
  %3113 = add nsw i64 %3105, -2
  store i64 %3113, i64* %139, align 8
  %3114 = load i64*, i64** %141, align 8
  %3115 = add nsw i64 %3105, -1
  %3116 = getelementptr inbounds i64, i64* %3114, i64 %3115
  %3117 = load i64, i64* %3116, align 8
  %3118 = getelementptr inbounds i64, i64* %3114, i64 %3113
  %3119 = load i64, i64* %3118, align 8
  %3120 = load i64, i64* %53, align 8
  %3121 = icmp ult i64 %3117, %3120
  br i1 %3121, label %3126, label %3122

3122:                                             ; preds = %3112
  %3123 = load i8, i8* %140, align 1
  %3124 = icmp eq i8 %3123, 0
  br i1 %3124, label %3152, label %3125

3125:                                             ; preds = %3122
  store i32 134, i32* %145, align 8
  br label %4878

3126:                                             ; preds = %3112
  %3127 = lshr i64 %3119, 4
  %3128 = and i64 %3127, 15
  %3129 = load i8, i8* %135, align 8
  switch i8 %3129, label %3134 [
    i8 117, label %3132
    i8 116, label %3130
  ]

3130:                                             ; preds = %3126
  %3131 = or i64 %3128, 16
  br label %3134

3132:                                             ; preds = %3126
  %3133 = or i64 %3128, 32
  br label %3134

3134:                                             ; preds = %3132, %3130, %3126
  %3135 = phi i64 [ %3128, %3126 ], [ %3131, %3130 ], [ %3133, %3132 ]
  %3136 = load i16, i16* %187, align 8
  %3137 = zext i16 %3136 to i64
  %3138 = add nsw i64 %3135, %3137
  %3139 = icmp eq i64 %3100, %3138
  br i1 %3139, label %3140, label %3152

3140:                                             ; preds = %3134
  %3141 = and i64 %3119, 15
  %3142 = add nsw i64 %3141, -8
  %3143 = icmp sgt i64 %3142, -1
  %3144 = add nsw i64 %3141, -7
  %3145 = select i1 %3143, i64 %3144, i64 %3142
  %3146 = load i16, i16* %188, align 2
  %3147 = zext i16 %3146 to i64
  %3148 = sub nsw i64 6, %3147
  %3149 = and i64 %3148, 4294967295
  %3150 = shl i64 %3145, %3149
  %3151 = load void (%struct.TT_ExecContextRec_*, i64, i64)*, void (%struct.TT_ExecContextRec_*, i64, i64)** %107, align 8
  call void %3151(%struct.TT_ExecContextRec_* %0, i64 %3117, i64 %3150) #11
  br label %3152

3152:                                             ; preds = %3140, %3134, %3122
  %3153 = add i64 %3104, 1
  %3154 = icmp ugt i64 %3153, %3101
  br i1 %3154, label %3155, label %3103

3155:                                             ; preds = %3152, %3111, %3098
  %3156 = load i64, i64* %139, align 8
  store i64 %3156, i64* %142, align 8
  br label %4788

3157:                                             ; preds = %384
  %3158 = load i64, i64* %386, align 8
  %3159 = trunc i64 %3158 to i32
  %3160 = lshr i32 %3159, 6
  %3161 = and i32 %3160, 3
  %3162 = zext i32 %3161 to i64
  %3163 = getelementptr inbounds [4 x i64], [4 x i64]* @switch.table.TT_RunIns.16, i64 0, i64 %3162
  %3164 = load i64, i64* %3163, align 8
  %3165 = zext i32 %3161 to i64
  %3166 = getelementptr inbounds [4 x i64], [4 x i64]* @switch.table.TT_RunIns.16, i64 0, i64 %3165
  %3167 = load i64, i64* %3166, align 8
  store i64 %3164, i64* %184, align 8
  %3168 = lshr i32 %3159, 4
  %3169 = and i32 %3168, 3
  switch i32 %3169, label %3177 [
    i32 0, label %3178
    i32 1, label %3170
    i32 2, label %3172
    i32 3, label %3174
  ]

3170:                                             ; preds = %3157
  %3171 = lshr exact i64 %3167, 2
  br label %3178

3172:                                             ; preds = %3157
  %3173 = lshr exact i64 %3167, 1
  br label %3178

3174:                                             ; preds = %3157
  %3175 = mul nuw nsw i64 %3167, 3
  %3176 = lshr exact i64 %3175, 2
  br label %3178

3177:                                             ; preds = %3157
  unreachable

3178:                                             ; preds = %3157, %3174, %3172, %3170
  %3179 = phi i64 [ %3176, %3174 ], [ %3173, %3172 ], [ %3171, %3170 ], [ 0, %3157 ]
  store i64 %3179, i64* %185, align 8
  %3180 = and i64 %3158, 15
  %3181 = icmp eq i64 %3180, 0
  br i1 %3181, label %3182, label %3184

3182:                                             ; preds = %3178
  %3183 = add nsw i64 %3167, -1
  br label %3188

3184:                                             ; preds = %3178
  %3185 = add nsw i64 %3180, -4
  %3186 = mul nsw i64 %3167, %3185
  %3187 = sdiv i64 %3186, 8
  br label %3188

3188:                                             ; preds = %3182, %3184
  %3189 = phi i64 [ %3187, %3184 ], [ %3183, %3182 ]
  %3190 = lshr exact i64 %3167, 8
  store i64 %3190, i64* %184, align 8
  %3191 = lshr i64 %3179, 8
  store i64 %3191, i64* %185, align 8
  %3192 = ashr i64 %3189, 8
  store i64 %3192, i64* %186, align 8
  store i32 6, i32* %121, align 8
  store i64 (%struct.TT_ExecContextRec_*, i64, i32)* @Round_Super, i64 (%struct.TT_ExecContextRec_*, i64, i32)** %183, align 8
  br label %4788

3193:                                             ; preds = %384
  %3194 = load i64, i64* %386, align 8
  %3195 = trunc i64 %3194 to i32
  %3196 = lshr i32 %3195, 6
  %3197 = and i32 %3196, 3
  %3198 = zext i32 %3197 to i64
  %3199 = getelementptr inbounds [4 x i64], [4 x i64]* @switch.table.TT_RunIns.18, i64 0, i64 %3198
  %3200 = load i64, i64* %3199, align 8
  %3201 = zext i32 %3197 to i64
  %3202 = getelementptr inbounds [4 x i64], [4 x i64]* @switch.table.TT_RunIns.18, i64 0, i64 %3201
  %3203 = load i64, i64* %3202, align 8
  store i64 %3200, i64* %184, align 8
  %3204 = lshr i32 %3195, 4
  %3205 = and i32 %3204, 3
  switch i32 %3205, label %3213 [
    i32 0, label %3214
    i32 1, label %3206
    i32 2, label %3208
    i32 3, label %3210
  ]

3206:                                             ; preds = %3193
  %3207 = lshr i64 %3203, 2
  br label %3214

3208:                                             ; preds = %3193
  %3209 = lshr i64 %3203, 1
  br label %3214

3210:                                             ; preds = %3193
  %3211 = mul nuw nsw i64 %3203, 3
  %3212 = lshr i64 %3211, 2
  br label %3214

3213:                                             ; preds = %3193
  unreachable

3214:                                             ; preds = %3193, %3210, %3208, %3206
  %3215 = phi i64 [ %3212, %3210 ], [ %3209, %3208 ], [ %3207, %3206 ], [ 0, %3193 ]
  store i64 %3215, i64* %185, align 8
  %3216 = and i64 %3194, 15
  %3217 = icmp eq i64 %3216, 0
  br i1 %3217, label %3218, label %3220

3218:                                             ; preds = %3214
  %3219 = add nsw i64 %3203, -1
  br label %3224

3220:                                             ; preds = %3214
  %3221 = add nsw i64 %3216, -4
  %3222 = mul nsw i64 %3203, %3221
  %3223 = sdiv i64 %3222, 8
  br label %3224

3224:                                             ; preds = %3218, %3220
  %3225 = phi i64 [ %3223, %3220 ], [ %3219, %3218 ]
  %3226 = lshr i64 %3203, 8
  store i64 %3226, i64* %184, align 8
  %3227 = lshr i64 %3215, 8
  store i64 %3227, i64* %185, align 8
  %3228 = ashr i64 %3225, 8
  store i64 %3228, i64* %186, align 8
  store i32 7, i32* %121, align 8
  store i64 (%struct.TT_ExecContextRec_*, i64, i32)* @Round_Super_45, i64 (%struct.TT_ExecContextRec_*, i64, i32)** %183, align 8
  br label %4788

3229:                                             ; preds = %384
  %3230 = getelementptr inbounds i64, i64* %386, i64 1
  %3231 = load i64, i64* %3230, align 8
  %3232 = icmp eq i64 %3231, 0
  br i1 %3232, label %4788, label %3233

3233:                                             ; preds = %3229
  %3234 = load i64, i64* %386, align 8
  %3235 = or i64 %3234, %357
  %3236 = icmp eq i64 %3235, 0
  br i1 %3236, label %3237, label %3238

3237:                                             ; preds = %3233
  store i32 132, i32* %145, align 8
  br label %4878

3238:                                             ; preds = %3233
  %3239 = load i64, i64* %134, align 8
  %3240 = add nsw i64 %3239, %3234
  store i64 %3240, i64* %134, align 8
  %3241 = icmp slt i64 %3240, 0
  br i1 %3241, label %3254, label %3242

3242:                                             ; preds = %3238
  %3243 = load i32, i32* %148, align 8
  %3244 = icmp sgt i32 %3243, 0
  br i1 %3244, label %3245, label %3255

3245:                                             ; preds = %3242
  %3246 = load %struct.TT_CallRec_*, %struct.TT_CallRec_** %150, align 8
  %3247 = add nsw i32 %3243, -1
  %3248 = sext i32 %3247 to i64
  %3249 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %3246, i64 %3248, i32 3
  %3250 = load %struct.TT_DefRecord_*, %struct.TT_DefRecord_** %3249, align 8
  %3251 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3250, i64 0, i32 2
  %3252 = load i64, i64* %3251, align 8
  %3253 = icmp sgt i64 %3240, %3252
  br i1 %3253, label %3254, label %3255

3254:                                             ; preds = %3245, %3238
  store i32 132, i32* %145, align 8
  br label %4878

3255:                                             ; preds = %3245, %3242
  store i8 0, i8* %144, align 8
  %3256 = load i64, i64* %386, align 8
  %3257 = icmp slt i64 %3256, 0
  br i1 %3257, label %3258, label %4788

3258:                                             ; preds = %3255
  %3259 = load i64, i64* %69, align 8
  %3260 = add i64 %3259, 1
  store i64 %3260, i64* %69, align 8
  %3261 = load i64, i64* %93, align 8
  %3262 = icmp ugt i64 %3260, %3261
  br i1 %3262, label %3263, label %4788

3263:                                             ; preds = %3258
  store i32 139, i32* %145, align 8
  br label %4878

3264:                                             ; preds = %384
  %3265 = getelementptr inbounds i64, i64* %386, i64 1
  %3266 = load i64, i64* %3265, align 8
  %3267 = icmp eq i64 %3266, 0
  br i1 %3267, label %3268, label %4788

3268:                                             ; preds = %3264
  %3269 = load i64, i64* %386, align 8
  %3270 = or i64 %3269, %357
  %3271 = icmp eq i64 %3270, 0
  br i1 %3271, label %3272, label %3273

3272:                                             ; preds = %3268
  store i32 132, i32* %145, align 8
  br label %4878

3273:                                             ; preds = %3268
  %3274 = load i64, i64* %134, align 8
  %3275 = add nsw i64 %3274, %3269
  store i64 %3275, i64* %134, align 8
  %3276 = icmp slt i64 %3275, 0
  br i1 %3276, label %3289, label %3277

3277:                                             ; preds = %3273
  %3278 = load i32, i32* %148, align 8
  %3279 = icmp sgt i32 %3278, 0
  br i1 %3279, label %3280, label %3290

3280:                                             ; preds = %3277
  %3281 = load %struct.TT_CallRec_*, %struct.TT_CallRec_** %150, align 8
  %3282 = add nsw i32 %3278, -1
  %3283 = sext i32 %3282 to i64
  %3284 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %3281, i64 %3283, i32 3
  %3285 = load %struct.TT_DefRecord_*, %struct.TT_DefRecord_** %3284, align 8
  %3286 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3285, i64 0, i32 2
  %3287 = load i64, i64* %3286, align 8
  %3288 = icmp sgt i64 %3275, %3287
  br i1 %3288, label %3289, label %3290

3289:                                             ; preds = %3280, %3273
  store i32 132, i32* %145, align 8
  br label %4878

3290:                                             ; preds = %3280, %3277
  store i8 0, i8* %144, align 8
  %3291 = load i64, i64* %386, align 8
  %3292 = icmp slt i64 %3291, 0
  br i1 %3292, label %3293, label %4788

3293:                                             ; preds = %3290
  %3294 = load i64, i64* %69, align 8
  %3295 = add i64 %3294, 1
  store i64 %3295, i64* %69, align 8
  %3296 = load i64, i64* %93, align 8
  %3297 = icmp ugt i64 %3295, %3296
  br i1 %3297, label %3298, label %4788

3298:                                             ; preds = %3293
  store i32 139, i32* %145, align 8
  br label %4878

3299:                                             ; preds = %384
  store i32 5, i32* %121, align 8
  store i64 (%struct.TT_ExecContextRec_*, i64, i32)* @Round_None, i64 (%struct.TT_ExecContextRec_*, i64, i32)** %183, align 8
  br label %4788

3300:                                             ; preds = %384
  %3301 = load %struct.TT_DefRecord_*, %struct.TT_DefRecord_** %146, align 8
  %3302 = icmp eq %struct.TT_DefRecord_* %3301, null
  br i1 %3302, label %4792, label %3303

3303:                                             ; preds = %3300
  %3304 = load i32, i32* %147, align 8
  %3305 = zext i32 %3304 to i64
  %3306 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3301, i64 %3305
  %3307 = icmp eq i32 %3304, 0
  br i1 %3307, label %4792, label %3308

3308:                                             ; preds = %3303, %3354
  %3309 = phi %struct.TT_DefRecord_* [ %3355, %3354 ], [ %3301, %3303 ]
  %3310 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3309, i64 0, i32 3
  %3311 = load i32, i32* %3310, align 8
  %3312 = trunc i32 %3311 to i8
  %3313 = icmp eq i8 %3312, 123
  br i1 %3313, label %3314, label %3354

3314:                                             ; preds = %3308
  %3315 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3309, i64 0, i32 4
  %3316 = load i8, i8* %3315, align 4
  %3317 = icmp eq i8 %3316, 0
  br i1 %3317, label %3354, label %3318

3318:                                             ; preds = %3314
  %3319 = load i32, i32* %148, align 8
  %3320 = load i32, i32* %149, align 4
  %3321 = icmp slt i32 %3319, %3320
  br i1 %3321, label %3323, label %3322

3322:                                             ; preds = %3318
  store i32 130, i32* %145, align 8
  br label %4878

3323:                                             ; preds = %3318
  %3324 = load %struct.TT_CallRec_*, %struct.TT_CallRec_** %150, align 8
  %3325 = add nsw i32 %3319, 1
  store i32 %3325, i32* %148, align 8
  %3326 = sext i32 %3319 to i64
  %3327 = load i32, i32* %118, align 4
  %3328 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %3324, i64 %3326, i32 0
  store i32 %3327, i32* %3328, align 8
  %3329 = load i64, i64* %134, align 8
  %3330 = add nsw i64 %3329, 1
  %3331 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %3324, i64 %3326, i32 1
  store i64 %3330, i64* %3331, align 8
  %3332 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %3324, i64 %3326, i32 2
  store i64 1, i64* %3332, align 8
  %3333 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %3324, i64 %3326, i32 3
  store %struct.TT_DefRecord_* %3309, %struct.TT_DefRecord_** %3333, align 8
  %3334 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3309, i64 0, i32 0
  %3335 = load i32, i32* %3334, align 8
  %3336 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3309, i64 0, i32 1
  %3337 = load i64, i64* %3336, align 8
  %3338 = add i32 %3335, -1
  %3339 = icmp ugt i32 %3338, 2
  br i1 %3339, label %3340, label %3341

3340:                                             ; preds = %3323
  store i32 132, i32* %145, align 8
  br label %3353

3341:                                             ; preds = %3323
  %3342 = sext i32 %3338 to i64
  %3343 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %3342, i32 0
  %3344 = load i8*, i8** %3343, align 8
  %3345 = icmp eq i8* %3344, null
  br i1 %3345, label %3346, label %3347

3346:                                             ; preds = %3341
  store i32 138, i32* %145, align 8
  br label %3353

3347:                                             ; preds = %3341
  %3348 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %3342, i32 1
  %3349 = load i64, i64* %3348, align 8
  %3350 = icmp slt i64 %3349, %3337
  br i1 %3350, label %3351, label %3352

3351:                                             ; preds = %3347
  store i32 131, i32* %145, align 8
  br label %3353

3352:                                             ; preds = %3347
  store i8* %3344, i8** %133, align 8
  store i64 %3349, i64* %137, align 8
  store i64 %3337, i64* %134, align 8
  store i32 %3335, i32* %118, align 4
  br label %3353

3353:                                             ; preds = %3340, %3346, %3351, %3352
  store i8 0, i8* %144, align 8
  br label %4788

3354:                                             ; preds = %3314, %3308
  %3355 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3309, i64 1
  %3356 = icmp ult %struct.TT_DefRecord_* %3355, %3306
  br i1 %3356, label %3308, label %4792

3357:                                             ; preds = %384
  store i32 4, i32* %121, align 8
  store i64 (%struct.TT_ExecContextRec_*, i64, i32)* @Round_Up_To_Grid, i64 (%struct.TT_ExecContextRec_*, i64, i32)** %183, align 8
  br label %4788

3358:                                             ; preds = %384
  store i32 3, i32* %121, align 8
  store i64 (%struct.TT_ExecContextRec_*, i64, i32)* @Round_Down_To_Grid, i64 (%struct.TT_ExecContextRec_*, i64, i32)** %183, align 8
  br label %4788

3359:                                             ; preds = %384
  %3360 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %152, align 8
  %3361 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3360, i64 0, i32 24
  %3362 = bitcast %struct.FT_DriverRec_** %3361 to %struct.TT_DriverRec_**
  %3363 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %3362, align 8
  %3364 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %3363, i64 0, i32 2
  %3365 = load i32, i32* %3364, align 8
  %3366 = icmp eq i32 %3365, 40
  br i1 %3366, label %3367, label %3376

3367:                                             ; preds = %3359
  %3368 = load i8, i8* %153, align 1
  %3369 = icmp eq i8 %3368, 0
  br i1 %3369, label %3376, label %3370

3370:                                             ; preds = %3367
  %3371 = load i8, i8* %48, align 4
  %3372 = icmp eq i8 %3371, 0
  br i1 %3372, label %3376, label %3373

3373:                                             ; preds = %3370
  %3374 = load i8, i8* %49, align 1
  %3375 = icmp eq i8 %3374, 0
  br i1 %3375, label %3376, label %3416

3376:                                             ; preds = %3373, %3370, %3367, %3359
  %3377 = load i64, i64* %138, align 8
  %3378 = load i64, i64* %182, align 8
  %3379 = icmp slt i64 %3377, %3378
  br i1 %3379, label %3382, label %3380

3380:                                             ; preds = %3376
  %3381 = icmp sgt i64 %3378, 0
  br i1 %3381, label %3386, label %3416

3382:                                             ; preds = %3376
  %3383 = load i8, i8* %140, align 1
  %3384 = icmp eq i8 %3383, 0
  br i1 %3384, label %3416, label %3385

3385:                                             ; preds = %3382
  store i32 129, i32* %145, align 8
  br label %3416

3386:                                             ; preds = %3380, %3414
  %3387 = phi i64* [ %3415, %3414 ], [ %385, %3380 ]
  %3388 = phi i64 [ %3413, %3414 ], [ %357, %3380 ]
  %3389 = phi i64 [ %3411, %3414 ], [ %3378, %3380 ]
  %3390 = add nsw i64 %3388, -1
  store i64 %3390, i64* %139, align 8
  %3391 = getelementptr inbounds i64, i64* %3387, i64 %3390
  %3392 = load i64, i64* %3391, align 8
  %3393 = trunc i64 %3392 to i32
  %3394 = and i32 %3393, 65535
  %3395 = load i16, i16* %50, align 4
  %3396 = zext i16 %3395 to i32
  %3397 = icmp ult i32 %3394, %3396
  br i1 %3397, label %3402, label %3398

3398:                                             ; preds = %3386
  %3399 = load i8, i8* %140, align 1
  %3400 = icmp eq i8 %3399, 0
  br i1 %3400, label %3409, label %3401

3401:                                             ; preds = %3398
  store i32 134, i32* %145, align 8
  br label %4878

3402:                                             ; preds = %3386
  %3403 = load i8*, i8** %181, align 8
  %3404 = and i64 %3392, 65535
  %3405 = getelementptr inbounds i8, i8* %3403, i64 %3404
  %3406 = load i8, i8* %3405, align 1
  %3407 = xor i8 %3406, 1
  store i8 %3407, i8* %3405, align 1
  %3408 = load i64, i64* %182, align 8
  br label %3409

3409:                                             ; preds = %3402, %3398
  %3410 = phi i64 [ %3389, %3398 ], [ %3408, %3402 ]
  %3411 = add nsw i64 %3410, -1
  store i64 %3411, i64* %182, align 8
  %3412 = icmp sgt i64 %3411, 0
  %3413 = load i64, i64* %139, align 8
  br i1 %3412, label %3414, label %3416

3414:                                             ; preds = %3409
  %3415 = load i64*, i64** %141, align 8
  br label %3386

3416:                                             ; preds = %3409, %3385, %3382, %3380, %3373
  %3417 = phi i64 [ %357, %3385 ], [ %357, %3382 ], [ %357, %3380 ], [ %357, %3373 ], [ %3413, %3409 ]
  store i64 1, i64* %182, align 8
  store i64 %3417, i64* %142, align 8
  br label %4788

3418:                                             ; preds = %384
  %3419 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %152, align 8
  %3420 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3419, i64 0, i32 24
  %3421 = bitcast %struct.FT_DriverRec_** %3420 to %struct.TT_DriverRec_**
  %3422 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %3421, align 8
  %3423 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %3422, i64 0, i32 2
  %3424 = load i32, i32* %3423, align 8
  %3425 = icmp eq i32 %3424, 40
  br i1 %3425, label %3426, label %3435

3426:                                             ; preds = %3418
  %3427 = load i8, i8* %153, align 1
  %3428 = icmp eq i8 %3427, 0
  br i1 %3428, label %3435, label %3429

3429:                                             ; preds = %3426
  %3430 = load i8, i8* %48, align 4
  %3431 = icmp eq i8 %3430, 0
  br i1 %3431, label %3435, label %3432

3432:                                             ; preds = %3429
  %3433 = load i8, i8* %49, align 1
  %3434 = icmp eq i8 %3433, 0
  br i1 %3434, label %3435, label %4788

3435:                                             ; preds = %3432, %3429, %3426, %3418
  %3436 = getelementptr inbounds i64, i64* %386, i64 1
  %3437 = load i64, i64* %3436, align 8
  %3438 = trunc i64 %3437 to i32
  %3439 = load i64, i64* %386, align 8
  %3440 = and i32 %3438, 65535
  %3441 = load i16, i16* %50, align 4
  %3442 = zext i16 %3441 to i32
  %3443 = icmp ult i32 %3440, %3442
  br i1 %3443, label %3444, label %3452

3444:                                             ; preds = %3435
  %3445 = trunc i64 %3439 to i32
  %3446 = and i32 %3445, 65535
  %3447 = icmp ult i32 %3446, %3442
  br i1 %3447, label %3448, label %3452

3448:                                             ; preds = %3444
  %3449 = icmp ult i32 %3440, %3446
  br i1 %3449, label %4788, label %3450

3450:                                             ; preds = %3448
  %3451 = trunc i64 %3439 to i16
  br label %3456

3452:                                             ; preds = %3444, %3435
  %3453 = load i8, i8* %140, align 1
  %3454 = icmp eq i8 %3453, 0
  br i1 %3454, label %4788, label %3455

3455:                                             ; preds = %3452
  store i32 134, i32* %145, align 8
  br label %4878

3456:                                             ; preds = %3450, %3456
  %3457 = phi i16 [ %3463, %3456 ], [ %3451, %3450 ]
  %3458 = load i8*, i8** %181, align 8
  %3459 = zext i16 %3457 to i64
  %3460 = getelementptr inbounds i8, i8* %3458, i64 %3459
  %3461 = load i8, i8* %3460, align 1
  %3462 = or i8 %3461, 1
  store i8 %3462, i8* %3460, align 1
  %3463 = add i16 %3457, 1
  %3464 = zext i16 %3463 to i32
  %3465 = icmp ult i32 %3440, %3464
  br i1 %3465, label %4788, label %3456

3466:                                             ; preds = %384
  %3467 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %152, align 8
  %3468 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3467, i64 0, i32 24
  %3469 = bitcast %struct.FT_DriverRec_** %3468 to %struct.TT_DriverRec_**
  %3470 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %3469, align 8
  %3471 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %3470, i64 0, i32 2
  %3472 = load i32, i32* %3471, align 8
  %3473 = icmp eq i32 %3472, 40
  br i1 %3473, label %3474, label %3483

3474:                                             ; preds = %3466
  %3475 = load i8, i8* %153, align 1
  %3476 = icmp eq i8 %3475, 0
  br i1 %3476, label %3483, label %3477

3477:                                             ; preds = %3474
  %3478 = load i8, i8* %48, align 4
  %3479 = icmp eq i8 %3478, 0
  br i1 %3479, label %3483, label %3480

3480:                                             ; preds = %3477
  %3481 = load i8, i8* %49, align 1
  %3482 = icmp eq i8 %3481, 0
  br i1 %3482, label %3483, label %4788

3483:                                             ; preds = %3480, %3477, %3474, %3466
  %3484 = getelementptr inbounds i64, i64* %386, i64 1
  %3485 = load i64, i64* %3484, align 8
  %3486 = trunc i64 %3485 to i32
  %3487 = load i64, i64* %386, align 8
  %3488 = and i32 %3486, 65535
  %3489 = load i16, i16* %50, align 4
  %3490 = zext i16 %3489 to i32
  %3491 = icmp ult i32 %3488, %3490
  br i1 %3491, label %3492, label %3500

3492:                                             ; preds = %3483
  %3493 = trunc i64 %3487 to i32
  %3494 = and i32 %3493, 65535
  %3495 = icmp ult i32 %3494, %3490
  br i1 %3495, label %3496, label %3500

3496:                                             ; preds = %3492
  %3497 = icmp ult i32 %3488, %3494
  br i1 %3497, label %4788, label %3498

3498:                                             ; preds = %3496
  %3499 = trunc i64 %3487 to i16
  br label %3504

3500:                                             ; preds = %3492, %3483
  %3501 = load i8, i8* %140, align 1
  %3502 = icmp eq i8 %3501, 0
  br i1 %3502, label %4788, label %3503

3503:                                             ; preds = %3500
  store i32 134, i32* %145, align 8
  br label %4878

3504:                                             ; preds = %3498, %3504
  %3505 = phi i16 [ %3511, %3504 ], [ %3499, %3498 ]
  %3506 = load i8*, i8** %181, align 8
  %3507 = zext i16 %3505 to i64
  %3508 = getelementptr inbounds i8, i8* %3506, i64 %3507
  %3509 = load i8, i8* %3508, align 1
  %3510 = and i8 %3509, -2
  store i8 %3510, i8* %3508, align 1
  %3511 = add i16 %3505, 1
  %3512 = zext i16 %3511 to i32
  %3513 = icmp ult i32 %3488, %3512
  br i1 %3513, label %4788, label %3504

3514:                                             ; preds = %384, %384
  %3515 = load %struct.TT_DefRecord_*, %struct.TT_DefRecord_** %146, align 8
  %3516 = icmp eq %struct.TT_DefRecord_* %3515, null
  br i1 %3516, label %4792, label %3517

3517:                                             ; preds = %3514
  %3518 = load i32, i32* %147, align 8
  %3519 = zext i32 %3518 to i64
  %3520 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3515, i64 %3519
  %3521 = icmp eq i32 %3518, 0
  br i1 %3521, label %4792, label %3522

3522:                                             ; preds = %3517, %3568
  %3523 = phi %struct.TT_DefRecord_* [ %3569, %3568 ], [ %3515, %3517 ]
  %3524 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3523, i64 0, i32 3
  %3525 = load i32, i32* %3524, align 8
  %3526 = trunc i32 %3525 to i8
  %3527 = icmp eq i8 %358, %3526
  br i1 %3527, label %3528, label %3568

3528:                                             ; preds = %3522
  %3529 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3523, i64 0, i32 4
  %3530 = load i8, i8* %3529, align 4
  %3531 = icmp eq i8 %3530, 0
  br i1 %3531, label %3568, label %3532

3532:                                             ; preds = %3528
  %3533 = load i32, i32* %148, align 8
  %3534 = load i32, i32* %149, align 4
  %3535 = icmp slt i32 %3533, %3534
  br i1 %3535, label %3537, label %3536

3536:                                             ; preds = %3532
  store i32 130, i32* %145, align 8
  br label %4878

3537:                                             ; preds = %3532
  %3538 = load %struct.TT_CallRec_*, %struct.TT_CallRec_** %150, align 8
  %3539 = add nsw i32 %3533, 1
  store i32 %3539, i32* %148, align 8
  %3540 = sext i32 %3533 to i64
  %3541 = load i32, i32* %118, align 4
  %3542 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %3538, i64 %3540, i32 0
  store i32 %3541, i32* %3542, align 8
  %3543 = load i64, i64* %134, align 8
  %3544 = add nsw i64 %3543, 1
  %3545 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %3538, i64 %3540, i32 1
  store i64 %3544, i64* %3545, align 8
  %3546 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %3538, i64 %3540, i32 2
  store i64 1, i64* %3546, align 8
  %3547 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %3538, i64 %3540, i32 3
  store %struct.TT_DefRecord_* %3523, %struct.TT_DefRecord_** %3547, align 8
  %3548 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3523, i64 0, i32 0
  %3549 = load i32, i32* %3548, align 8
  %3550 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3523, i64 0, i32 1
  %3551 = load i64, i64* %3550, align 8
  %3552 = add i32 %3549, -1
  %3553 = icmp ugt i32 %3552, 2
  br i1 %3553, label %3554, label %3555

3554:                                             ; preds = %3537
  store i32 132, i32* %145, align 8
  br label %3567

3555:                                             ; preds = %3537
  %3556 = sext i32 %3552 to i64
  %3557 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %3556, i32 0
  %3558 = load i8*, i8** %3557, align 8
  %3559 = icmp eq i8* %3558, null
  br i1 %3559, label %3560, label %3561

3560:                                             ; preds = %3555
  store i32 138, i32* %145, align 8
  br label %3567

3561:                                             ; preds = %3555
  %3562 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %3556, i32 1
  %3563 = load i64, i64* %3562, align 8
  %3564 = icmp slt i64 %3563, %3551
  br i1 %3564, label %3565, label %3566

3565:                                             ; preds = %3561
  store i32 131, i32* %145, align 8
  br label %3567

3566:                                             ; preds = %3561
  store i8* %3558, i8** %133, align 8
  store i64 %3563, i64* %137, align 8
  store i64 %3551, i64* %134, align 8
  store i32 %3549, i32* %118, align 4
  br label %3567

3567:                                             ; preds = %3554, %3560, %3565, %3566
  store i8 0, i8* %144, align 8
  br label %4788

3568:                                             ; preds = %3528, %3522
  %3569 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3523, i64 1
  %3570 = icmp ult %struct.TT_DefRecord_* %3569, %3520
  br i1 %3570, label %3522, label %4792

3571:                                             ; preds = %384
  %3572 = load i64, i64* %386, align 8
  %3573 = trunc i64 %3572 to i32
  %3574 = and i32 %3573, 255
  %3575 = trunc i64 %3572 to i8
  switch i8 %3575, label %3578 [
    i8 -1, label %3576
    i8 0, label %3577
  ]

3576:                                             ; preds = %3571
  store i8 1, i8* %179, align 1
  br label %4788

3577:                                             ; preds = %3571
  store i8 0, i8* %179, align 1
  br label %4788

3578:                                             ; preds = %3571
  %3579 = and i64 %3572, 256
  %3580 = icmp eq i64 %3579, 0
  br i1 %3580, label %3587, label %3581

3581:                                             ; preds = %3578
  %3582 = load i16, i16* %180, align 8
  %3583 = zext i16 %3582 to i32
  %3584 = icmp ult i32 %3574, %3583
  br i1 %3584, label %3587, label %3585

3585:                                             ; preds = %3581
  store i8 1, i8* %179, align 1
  %3586 = load i64, i64* %386, align 8
  br label %3587

3587:                                             ; preds = %3585, %3581, %3578
  %3588 = phi i64 [ %3572, %3581 ], [ %3572, %3578 ], [ %3586, %3585 ]
  %3589 = and i64 %3588, 512
  %3590 = icmp eq i64 %3589, 0
  br i1 %3590, label %3596, label %3591

3591:                                             ; preds = %3587
  %3592 = load i8, i8* %157, align 1
  %3593 = icmp eq i8 %3592, 0
  br i1 %3593, label %3596, label %3594

3594:                                             ; preds = %3591
  store i8 1, i8* %179, align 1
  %3595 = load i64, i64* %386, align 8
  br label %3596

3596:                                             ; preds = %3594, %3591, %3587
  %3597 = phi i64 [ %3588, %3591 ], [ %3588, %3587 ], [ %3595, %3594 ]
  %3598 = and i64 %3597, 1024
  %3599 = icmp eq i64 %3598, 0
  br i1 %3599, label %3605, label %3600

3600:                                             ; preds = %3596
  %3601 = load i8, i8* %158, align 2
  %3602 = icmp eq i8 %3601, 0
  br i1 %3602, label %3605, label %3603

3603:                                             ; preds = %3600
  store i8 1, i8* %179, align 1
  %3604 = load i64, i64* %386, align 8
  br label %3605

3605:                                             ; preds = %3603, %3600, %3596
  %3606 = phi i64 [ %3597, %3600 ], [ %3597, %3596 ], [ %3604, %3603 ]
  %3607 = and i64 %3606, 2048
  %3608 = icmp eq i64 %3607, 0
  br i1 %3608, label %3615, label %3609

3609:                                             ; preds = %3605
  %3610 = load i16, i16* %180, align 8
  %3611 = zext i16 %3610 to i32
  %3612 = icmp ult i32 %3574, %3611
  br i1 %3612, label %3613, label %3615

3613:                                             ; preds = %3609
  store i8 0, i8* %179, align 1
  %3614 = load i64, i64* %386, align 8
  br label %3615

3615:                                             ; preds = %3613, %3609, %3605
  %3616 = phi i64 [ %3606, %3605 ], [ %3614, %3613 ], [ %3606, %3609 ]
  %3617 = and i64 %3616, 4096
  %3618 = icmp eq i64 %3617, 0
  br i1 %3618, label %3624, label %3619

3619:                                             ; preds = %3615
  %3620 = load i8, i8* %157, align 1
  %3621 = icmp eq i8 %3620, 0
  br i1 %3621, label %3624, label %3622

3622:                                             ; preds = %3619
  store i8 0, i8* %179, align 1
  %3623 = load i64, i64* %386, align 8
  br label %3624

3624:                                             ; preds = %3622, %3619, %3615
  %3625 = phi i64 [ %3616, %3619 ], [ %3616, %3615 ], [ %3623, %3622 ]
  %3626 = and i64 %3625, 8192
  %3627 = icmp eq i64 %3626, 0
  br i1 %3627, label %4788, label %3628

3628:                                             ; preds = %3624
  %3629 = load i8, i8* %158, align 2
  %3630 = icmp eq i8 %3629, 0
  br i1 %3630, label %4788, label %3631

3631:                                             ; preds = %3628
  store i8 0, i8* %179, align 1
  br label %4788

3632:                                             ; preds = %384, %384
  %3633 = load i64, i64* %386, align 8
  %3634 = trunc i64 %3633 to i32
  %3635 = and i32 %3634, 65535
  %3636 = load i16, i16* %163, align 4
  %3637 = zext i16 %3636 to i32
  %3638 = icmp ult i32 %3635, %3637
  br i1 %3638, label %3639, label %3647

3639:                                             ; preds = %3632
  %3640 = getelementptr inbounds i64, i64* %386, i64 1
  %3641 = load i64, i64* %3640, align 8
  %3642 = trunc i64 %3641 to i32
  %3643 = and i32 %3642, 65535
  %3644 = load i16, i16* %164, align 4
  %3645 = zext i16 %3644 to i32
  %3646 = icmp ult i32 %3643, %3645
  br i1 %3646, label %3651, label %3647

3647:                                             ; preds = %3639, %3632
  %3648 = load i8, i8* %140, align 1
  %3649 = icmp eq i8 %3648, 0
  br i1 %3649, label %4788, label %3650

3650:                                             ; preds = %3647
  store i32 134, i32* %145, align 8
  br label %4878

3651:                                             ; preds = %3639
  %3652 = load %struct.FT_Vector_*, %struct.FT_Vector_** %165, align 8
  %3653 = zext i32 %3635 to i64
  %3654 = load %struct.FT_Vector_*, %struct.FT_Vector_** %166, align 8
  %3655 = zext i32 %3643 to i64
  %3656 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3652, i64 %3653, i32 0
  %3657 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3654, i64 %3655, i32 0
  %3658 = bitcast i64* %3656 to <2 x i64>*
  %3659 = load <2 x i64>, <2 x i64>* %3658, align 8
  %3660 = bitcast i64* %3657 to <2 x i64>*
  %3661 = load <2 x i64>, <2 x i64>* %3660, align 8
  %3662 = sub <2 x i64> %3659, %3661
  %3663 = extractelement <2 x i64> %3662, i32 0
  %3664 = extractelement <2 x i64> %3662, i32 1
  %3665 = or i64 %3664, %3663
  %3666 = icmp eq i64 %3665, 0
  %3667 = select i1 %3666, i64 16384, i64 %3663
  %3668 = and i8 %358, 1
  %3669 = icmp eq i8 %3668, 0
  %3670 = or i1 %3669, %3666
  %3671 = sub i64 0, %3664
  %3672 = select i1 %3670, i64 %3664, i64 %3667
  %3673 = select i1 %3670, i64 %3667, i64 %3671
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %167) #11
  %3674 = or i64 %3672, %3673
  %3675 = icmp eq i64 %3674, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %167, i8 -86, i64 16, i1 false) #11
  br i1 %3675, label %3684, label %3676

3676:                                             ; preds = %3651
  store i64 %3673, i64* %168, align 8
  store i64 %3672, i64* %169, align 8
  %3677 = call i32 @FT_Vector_NormLen(%struct.FT_Vector_* nonnull %17) #11
  %3678 = load i64, i64* %168, align 8
  %3679 = sdiv i64 %3678, 4
  %3680 = trunc i64 %3679 to i16
  store i16 %3680, i16* %170, align 2
  %3681 = load i64, i64* %169, align 8
  %3682 = sdiv i64 %3681, 4
  %3683 = trunc i64 %3682 to i16
  store i16 %3683, i16* %171, align 2
  br label %3684

3684:                                             ; preds = %3676, %3651
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %167) #11
  %3685 = load %struct.FT_Vector_*, %struct.FT_Vector_** %172, align 8
  %3686 = load %struct.FT_Vector_*, %struct.FT_Vector_** %173, align 8
  %3687 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3685, i64 %3653, i32 0
  %3688 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3686, i64 %3655, i32 0
  %3689 = bitcast i64* %3687 to <2 x i64>*
  %3690 = load <2 x i64>, <2 x i64>* %3689, align 8
  %3691 = bitcast i64* %3688 to <2 x i64>*
  %3692 = load <2 x i64>, <2 x i64>* %3691, align 8
  %3693 = sub <2 x i64> %3690, %3692
  %3694 = extractelement <2 x i64> %3693, i32 0
  %3695 = extractelement <2 x i64> %3693, i32 1
  %3696 = or i64 %3695, %3694
  %3697 = icmp eq i64 %3696, 0
  %3698 = select i1 %3697, i64 16384, i64 %3694
  %3699 = or i1 %3670, %3697
  %3700 = sub i64 0, %3695
  %3701 = select i1 %3699, i64 %3695, i64 %3698
  %3702 = select i1 %3699, i64 %3698, i64 %3700
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #11
  %3703 = or i64 %3701, %3702
  %3704 = icmp eq i64 %3703, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 -86, i64 16, i1 false) #11
  br i1 %3704, label %3713, label %3705

3705:                                             ; preds = %3684
  store i64 %3702, i64* %175, align 8
  store i64 %3701, i64* %176, align 8
  %3706 = call i32 @FT_Vector_NormLen(%struct.FT_Vector_* nonnull %16) #11
  %3707 = load i64, i64* %175, align 8
  %3708 = sdiv i64 %3707, 4
  %3709 = trunc i64 %3708 to i16
  store i16 %3709, i16* %177, align 2
  %3710 = load i64, i64* %176, align 8
  %3711 = sdiv i64 %3710, 4
  %3712 = trunc i64 %3711 to i16
  store i16 %3712, i16* %178, align 2
  br label %3713

3713:                                             ; preds = %3705, %3684
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #11
  call fastcc void @Compute_Funcs(%struct.TT_ExecContextRec_* %0) #11
  br label %4788

3714:                                             ; preds = %384
  %3715 = load i64, i64* %386, align 8
  %3716 = and i64 %3715, 1
  %3717 = icmp eq i64 %3716, 0
  br i1 %3717, label %3726, label %3718

3718:                                             ; preds = %3714
  %3719 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %152, align 8
  %3720 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3719, i64 0, i32 24
  %3721 = bitcast %struct.FT_DriverRec_** %3720 to %struct.TT_DriverRec_**
  %3722 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %3721, align 8
  %3723 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %3722, i64 0, i32 2
  %3724 = load i32, i32* %3723, align 8
  %3725 = zext i32 %3724 to i64
  br label %3726

3726:                                             ; preds = %3718, %3714
  %3727 = phi i64 [ %3725, %3718 ], [ 0, %3714 ]
  %3728 = and i64 %3715, 2
  %3729 = icmp eq i64 %3728, 0
  br i1 %3729, label %3735, label %3730

3730:                                             ; preds = %3726
  %3731 = load i8, i8* %157, align 1
  %3732 = icmp eq i8 %3731, 0
  %3733 = or i64 %3727, 256
  %3734 = select i1 %3732, i64 %3727, i64 %3733
  br label %3735

3735:                                             ; preds = %3730, %3726
  %3736 = phi i64 [ %3727, %3726 ], [ %3734, %3730 ]
  %3737 = and i64 %3715, 4
  %3738 = icmp eq i64 %3737, 0
  br i1 %3738, label %3744, label %3739

3739:                                             ; preds = %3735
  %3740 = load i8, i8* %158, align 2
  %3741 = icmp eq i8 %3740, 0
  %3742 = or i64 %3736, 512
  %3743 = select i1 %3741, i64 %3736, i64 %3742
  br label %3744

3744:                                             ; preds = %3739, %3735
  %3745 = phi i64 [ %3736, %3735 ], [ %3743, %3739 ]
  %3746 = and i64 %3715, 8
  %3747 = icmp eq i64 %3746, 0
  br i1 %3747, label %3755, label %3748

3748:                                             ; preds = %3744
  %3749 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %22, align 8
  %3750 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %3749, i64 0, i32 50
  %3751 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %3750, align 8
  %3752 = icmp eq %struct.GX_BlendRec_* %3751, null
  %3753 = or i64 %3745, 1024
  %3754 = select i1 %3752, i64 %3745, i64 %3753
  br label %3755

3755:                                             ; preds = %3748, %3744
  %3756 = phi i64 [ %3745, %3744 ], [ %3754, %3748 ]
  %3757 = and i64 %3715, 32
  %3758 = icmp eq i64 %3757, 0
  br i1 %3758, label %3764, label %3759

3759:                                             ; preds = %3755
  %3760 = load i8, i8* %159, align 8
  %3761 = icmp eq i8 %3760, 0
  %3762 = or i64 %3756, 4096
  %3763 = select i1 %3761, i64 %3756, i64 %3762
  br label %3764

3764:                                             ; preds = %3759, %3755
  %3765 = phi i64 [ %3756, %3755 ], [ %3763, %3759 ]
  %3766 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %152, align 8
  %3767 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3766, i64 0, i32 24
  %3768 = bitcast %struct.FT_DriverRec_** %3767 to %struct.TT_DriverRec_**
  %3769 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %3768, align 8
  %3770 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %3769, i64 0, i32 2
  %3771 = load i32, i32* %3770, align 8
  %3772 = icmp eq i32 %3771, 40
  br i1 %3772, label %3773, label %3798

3773:                                             ; preds = %3764
  %3774 = load i8, i8* %160, align 1
  %3775 = icmp eq i8 %3774, 0
  br i1 %3775, label %3798, label %3776

3776:                                             ; preds = %3773
  %3777 = shl i64 %3715, 7
  %3778 = and i64 %3777, 8192
  %3779 = or i64 %3765, %3778
  %3780 = and i64 %3715, 256
  %3781 = icmp eq i64 %3780, 0
  br i1 %3781, label %3787, label %3782

3782:                                             ; preds = %3776
  %3783 = load i8, i8* %161, align 2
  %3784 = icmp eq i8 %3783, 0
  %3785 = or i64 %3779, 32768
  %3786 = select i1 %3784, i64 %3779, i64 %3785
  br label %3787

3787:                                             ; preds = %3782, %3776
  %3788 = phi i64 [ %3779, %3776 ], [ %3786, %3782 ]
  %3789 = and i64 %3777, 393216
  %3790 = or i64 %3788, %3789
  %3791 = and i64 %3715, 4096
  %3792 = icmp eq i64 %3791, 0
  br i1 %3792, label %3798, label %3793

3793:                                             ; preds = %3787
  %3794 = load i8, i8* %162, align 2
  %3795 = icmp eq i8 %3794, 0
  %3796 = or i64 %3790, 524288
  %3797 = select i1 %3795, i64 %3790, i64 %3796
  br label %3798

3798:                                             ; preds = %3764, %3773, %3787, %3793
  %3799 = phi i64 [ %3790, %3787 ], [ %3765, %3773 ], [ %3765, %3764 ], [ %3797, %3793 ]
  store i64 %3799, i64* %386, align 8
  br label %4788

3800:                                             ; preds = %384
  %3801 = load i32, i32* %120, align 8
  %3802 = icmp eq i32 %3801, 3
  br i1 %3802, label %3803, label %3804

3803:                                             ; preds = %3800
  store i32 156, i32* %145, align 8
  br label %4878

3804:                                             ; preds = %3800
  %3805 = load %struct.TT_DefRecord_*, %struct.TT_DefRecord_** %146, align 8
  %3806 = icmp eq %struct.TT_DefRecord_* %3805, null
  br i1 %3806, label %3826, label %3807

3807:                                             ; preds = %3804
  %3808 = load i32, i32* %147, align 8
  %3809 = zext i32 %3808 to i64
  %3810 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3805, i64 %3809
  %3811 = icmp eq i32 %3808, 0
  br i1 %3811, label %3823, label %3812

3812:                                             ; preds = %3807
  %3813 = load i64, i64* %386, align 8
  br label %3814

3814:                                             ; preds = %3820, %3812
  %3815 = phi %struct.TT_DefRecord_* [ %3805, %3812 ], [ %3821, %3820 ]
  %3816 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3815, i64 0, i32 3
  %3817 = load i32, i32* %3816, align 8
  %3818 = zext i32 %3817 to i64
  %3819 = icmp eq i64 %3813, %3818
  br i1 %3819, label %3823, label %3820

3820:                                             ; preds = %3814
  %3821 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3815, i64 1
  %3822 = icmp ult %struct.TT_DefRecord_* %3821, %3810
  br i1 %3822, label %3814, label %3823

3823:                                             ; preds = %3820, %3814, %3807
  %3824 = phi %struct.TT_DefRecord_* [ %3805, %3807 ], [ %3821, %3820 ], [ %3815, %3814 ]
  %3825 = icmp eq %struct.TT_DefRecord_* %3824, %3810
  br i1 %3825, label %3826, label %3834

3826:                                             ; preds = %3823, %3804
  %3827 = phi %struct.TT_DefRecord_* [ %3810, %3823 ], [ null, %3804 ]
  %3828 = load i32, i32* %147, align 8
  %3829 = load i32, i32* %155, align 4
  %3830 = icmp ult i32 %3828, %3829
  br i1 %3830, label %3832, label %3831

3831:                                             ; preds = %3826
  store i32 141, i32* %145, align 8
  br label %4878

3832:                                             ; preds = %3826
  %3833 = add nuw i32 %3828, 1
  store i32 %3833, i32* %147, align 8
  br label %3834

3834:                                             ; preds = %3832, %3823
  %3835 = phi %struct.TT_DefRecord_* [ %3827, %3832 ], [ %3824, %3823 ]
  %3836 = load i64, i64* %386, align 8
  %3837 = icmp ugt i64 %3836, 255
  br i1 %3837, label %3838, label %3839

3838:                                             ; preds = %3834
  store i32 141, i32* %145, align 8
  br label %4878

3839:                                             ; preds = %3834
  %3840 = trunc i64 %3836 to i32
  %3841 = and i32 %3840, 255
  %3842 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3835, i64 0, i32 3
  store i32 %3841, i32* %3842, align 8
  %3843 = load i64, i64* %134, align 8
  %3844 = add nsw i64 %3843, 1
  %3845 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3835, i64 0, i32 1
  store i64 %3844, i64* %3845, align 8
  %3846 = load i32, i32* %118, align 4
  %3847 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3835, i64 0, i32 0
  store i32 %3846, i32* %3847, align 8
  %3848 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3835, i64 0, i32 4
  store i8 1, i8* %3848, align 4
  %3849 = load i64, i64* %386, align 8
  %3850 = load i32, i32* %156, align 4
  %3851 = zext i32 %3850 to i64
  %3852 = icmp ugt i64 %3849, %3851
  br i1 %3852, label %3853, label %3856

3853:                                             ; preds = %3839
  %3854 = trunc i64 %3849 to i32
  %3855 = and i32 %3854, 255
  store i32 %3855, i32* %156, align 4
  br label %3856

3856:                                             ; preds = %3853, %3839
  %3857 = load i32, i32* %136, align 4
  %3858 = load i64, i64* %134, align 8
  %3859 = load i64, i64* %137, align 8
  br label %3860

3860:                                             ; preds = %3891, %3856
  %3861 = phi i64 [ %3864, %3891 ], [ %3858, %3856 ]
  %3862 = phi i32 [ %3886, %3891 ], [ %3857, %3856 ]
  %3863 = sext i32 %3862 to i64
  %3864 = add nsw i64 %3861, %3863
  store i64 %3864, i64* %134, align 8
  %3865 = icmp slt i64 %3864, %3859
  br i1 %3865, label %3866, label %3890

3866:                                             ; preds = %3860
  %3867 = load i8*, i8** %133, align 8
  %3868 = getelementptr inbounds i8, i8* %3867, i64 %3864
  %3869 = load i8, i8* %3868, align 1
  store i8 %3869, i8* %135, align 8
  %3870 = zext i8 %3869 to i64
  %3871 = getelementptr inbounds [256 x i8], [256 x i8]* @opcode_length, i64 0, i64 %3870
  %3872 = load i8, i8* %3871, align 1
  %3873 = sext i8 %3872 to i32
  store i32 %3873, i32* %136, align 4
  %3874 = or i64 %3870, 1
  %3875 = icmp eq i64 %3874, 65
  br i1 %3875, label %3876, label %3885

3876:                                             ; preds = %3866
  %3877 = add nsw i64 %3864, 1
  %3878 = icmp slt i64 %3877, %3859
  br i1 %3878, label %3879, label %3890

3879:                                             ; preds = %3876
  %3880 = getelementptr inbounds i8, i8* %3867, i64 %3877
  %3881 = load i8, i8* %3880, align 1
  %3882 = zext i8 %3881 to i32
  %3883 = mul nsw i32 %3882, %3873
  %3884 = sub nsw i32 2, %3883
  store i32 %3884, i32* %136, align 4
  br label %3885

3885:                                             ; preds = %3879, %3866
  %3886 = phi i32 [ %3884, %3879 ], [ %3873, %3866 ]
  %3887 = sext i32 %3886 to i64
  %3888 = add nsw i64 %3864, %3887
  %3889 = icmp sgt i64 %3888, %3859
  br i1 %3889, label %3890, label %3891

3890:                                             ; preds = %3885, %3876, %3860
  store i32 131, i32* %145, align 8
  br label %4878

3891:                                             ; preds = %3885
  switch i8 %3869, label %3860 [
    i8 -119, label %3892
    i8 44, label %3892
    i8 45, label %3893
  ]

3892:                                             ; preds = %3891, %3891
  store i32 137, i32* %145, align 8
  br label %4878

3893:                                             ; preds = %3891
  %3894 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3835, i64 0, i32 2
  store i64 %3864, i64* %3894, align 8
  br label %4788

3895:                                             ; preds = %384
  %3896 = getelementptr inbounds i64, i64* %386, i64 2
  %3897 = getelementptr inbounds i64, i64* %386, i64 1
  %3898 = bitcast i64* %3897 to <2 x i64>*
  %3899 = load <2 x i64>, <2 x i64>* %3898, align 8
  %3900 = load i64, i64* %386, align 8
  store i64 %3900, i64* %3896, align 8
  %3901 = bitcast i64* %386 to <2 x i64>*
  store <2 x i64> %3899, <2 x i64>* %3901, align 8
  br label %4788

3902:                                             ; preds = %384
  %3903 = getelementptr inbounds i64, i64* %386, i64 1
  %3904 = load i64, i64* %3903, align 8
  %3905 = load i64, i64* %386, align 8
  %3906 = icmp sgt i64 %3904, %3905
  br i1 %3906, label %3907, label %4788

3907:                                             ; preds = %3902
  store i64 %3904, i64* %386, align 8
  br label %4788

3908:                                             ; preds = %384
  %3909 = getelementptr inbounds i64, i64* %386, i64 1
  %3910 = load i64, i64* %3909, align 8
  %3911 = load i64, i64* %386, align 8
  %3912 = icmp slt i64 %3910, %3911
  br i1 %3912, label %3913, label %4788

3913:                                             ; preds = %3908
  store i64 %3910, i64* %386, align 8
  br label %4788

3914:                                             ; preds = %384
  %3915 = load i64, i64* %386, align 8
  %3916 = icmp sgt i64 %3915, -1
  br i1 %3916, label %3917, label %4788

3917:                                             ; preds = %3914
  %3918 = trunc i64 %3915 to i32
  %3919 = and i32 %3918, 65535
  store i32 %3919, i32* %154, align 8
  br label %4788

3920:                                             ; preds = %384
  %3921 = getelementptr inbounds i64, i64* %386, i64 1
  %3922 = load i64, i64* %3921, align 8
  %3923 = load i64, i64* %386, align 8
  %3924 = add i64 %3922, -1
  %3925 = icmp ugt i64 %3924, 2
  br i1 %3925, label %3926, label %3930

3926:                                             ; preds = %3920
  %3927 = load i8, i8* %140, align 1
  %3928 = icmp eq i8 %3927, 0
  br i1 %3928, label %4788, label %3929

3929:                                             ; preds = %3926
  store i32 134, i32* %145, align 8
  br label %4878

3930:                                             ; preds = %3920
  %3931 = trunc i64 %3922 to i32
  %3932 = add nsw i32 %3931, -1
  %3933 = shl i32 1, %3932
  %3934 = icmp eq i64 %3923, 0
  %3935 = sext i32 %3933 to i64
  %3936 = icmp eq i64 %3923, %3935
  %3937 = or i1 %3934, %3936
  br i1 %3937, label %3942, label %3938

3938:                                             ; preds = %3930
  %3939 = load i8, i8* %140, align 1
  %3940 = icmp eq i8 %3939, 0
  br i1 %3940, label %4788, label %3941

3941:                                             ; preds = %3938
  store i32 134, i32* %145, align 8
  br label %4878

3942:                                             ; preds = %3930
  %3943 = load i8, i8* %151, align 4
  %3944 = trunc i32 %3933 to i8
  %3945 = xor i8 %3944, -1
  %3946 = and i8 %3943, %3945
  %3947 = trunc i64 %3923 to i8
  %3948 = or i8 %3946, %3947
  store i8 %3948, i8* %151, align 4
  %3949 = icmp eq i64 %3922, 3
  br i1 %3949, label %3950, label %4788

3950:                                             ; preds = %3942
  %3951 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %152, align 8
  %3952 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3951, i64 0, i32 24
  %3953 = bitcast %struct.FT_DriverRec_** %3952 to %struct.TT_DriverRec_**
  %3954 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %3953, align 8
  %3955 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %3954, i64 0, i32 2
  %3956 = load i32, i32* %3955, align 8
  %3957 = icmp eq i32 %3956, 40
  br i1 %3957, label %3958, label %4788

3958:                                             ; preds = %3950
  %3959 = icmp ne i64 %3923, 4
  %3960 = zext i1 %3959 to i8
  store i8 %3960, i8* %153, align 1
  br label %4788

3961:                                             ; preds = %384, %384
  %3962 = load %struct.TT_DefRecord_*, %struct.TT_DefRecord_** %146, align 8
  %3963 = icmp eq %struct.TT_DefRecord_* %3962, null
  br i1 %3963, label %4792, label %3964

3964:                                             ; preds = %3961
  %3965 = load i32, i32* %147, align 8
  %3966 = zext i32 %3965 to i64
  %3967 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3962, i64 %3966
  %3968 = icmp eq i32 %3965, 0
  br i1 %3968, label %4792, label %3969

3969:                                             ; preds = %3964, %4015
  %3970 = phi %struct.TT_DefRecord_* [ %4016, %4015 ], [ %3962, %3964 ]
  %3971 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3970, i64 0, i32 3
  %3972 = load i32, i32* %3971, align 8
  %3973 = trunc i32 %3972 to i8
  %3974 = icmp eq i8 %358, %3973
  br i1 %3974, label %3975, label %4015

3975:                                             ; preds = %3969
  %3976 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3970, i64 0, i32 4
  %3977 = load i8, i8* %3976, align 4
  %3978 = icmp eq i8 %3977, 0
  br i1 %3978, label %4015, label %3979

3979:                                             ; preds = %3975
  %3980 = load i32, i32* %148, align 8
  %3981 = load i32, i32* %149, align 4
  %3982 = icmp slt i32 %3980, %3981
  br i1 %3982, label %3984, label %3983

3983:                                             ; preds = %3979
  store i32 130, i32* %145, align 8
  br label %4878

3984:                                             ; preds = %3979
  %3985 = load %struct.TT_CallRec_*, %struct.TT_CallRec_** %150, align 8
  %3986 = add nsw i32 %3980, 1
  store i32 %3986, i32* %148, align 8
  %3987 = sext i32 %3980 to i64
  %3988 = load i32, i32* %118, align 4
  %3989 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %3985, i64 %3987, i32 0
  store i32 %3988, i32* %3989, align 8
  %3990 = load i64, i64* %134, align 8
  %3991 = add nsw i64 %3990, 1
  %3992 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %3985, i64 %3987, i32 1
  store i64 %3991, i64* %3992, align 8
  %3993 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %3985, i64 %3987, i32 2
  store i64 1, i64* %3993, align 8
  %3994 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %3985, i64 %3987, i32 3
  store %struct.TT_DefRecord_* %3970, %struct.TT_DefRecord_** %3994, align 8
  %3995 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3970, i64 0, i32 0
  %3996 = load i32, i32* %3995, align 8
  %3997 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3970, i64 0, i32 1
  %3998 = load i64, i64* %3997, align 8
  %3999 = add i32 %3996, -1
  %4000 = icmp ugt i32 %3999, 2
  br i1 %4000, label %4001, label %4002

4001:                                             ; preds = %3984
  store i32 132, i32* %145, align 8
  br label %4014

4002:                                             ; preds = %3984
  %4003 = sext i32 %3999 to i64
  %4004 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %4003, i32 0
  %4005 = load i8*, i8** %4004, align 8
  %4006 = icmp eq i8* %4005, null
  br i1 %4006, label %4007, label %4008

4007:                                             ; preds = %4002
  store i32 138, i32* %145, align 8
  br label %4014

4008:                                             ; preds = %4002
  %4009 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %4003, i32 1
  %4010 = load i64, i64* %4009, align 8
  %4011 = icmp slt i64 %4010, %3998
  br i1 %4011, label %4012, label %4013

4012:                                             ; preds = %4008
  store i32 131, i32* %145, align 8
  br label %4014

4013:                                             ; preds = %4008
  store i8* %4005, i8** %133, align 8
  store i64 %4010, i64* %137, align 8
  store i64 %3998, i64* %134, align 8
  store i32 %3996, i32* %118, align 4
  br label %4014

4014:                                             ; preds = %4001, %4007, %4012, %4013
  store i8 0, i8* %144, align 8
  br label %4788

4015:                                             ; preds = %3975, %3969
  %4016 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %3970, i64 1
  %4017 = icmp ult %struct.TT_DefRecord_* %4016, %3967
  br i1 %4017, label %3969, label %4792

4018:                                             ; preds = %384
  %4019 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %22, align 8
  %4020 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4019, i64 0, i32 50
  %4021 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %4020, align 8
  %4022 = icmp eq %struct.GX_BlendRec_* %4021, null
  br i1 %4022, label %4152, label %4023

4023:                                             ; preds = %4018
  %4024 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %4021, i64 0, i32 0
  %4025 = load i32, i32* %4024, align 8
  %4026 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %4021, i64 0, i32 2
  %4027 = load i64*, i64** %4026, align 8
  %4028 = add nsw i64 %381, 1
  %4029 = load i64, i64* %138, align 8
  %4030 = sub i64 %4028, %4029
  %4031 = trunc i64 %4030 to i32
  %4032 = icmp ult i32 %4025, %4031
  br i1 %4032, label %4034, label %4033

4033:                                             ; preds = %4023
  store i32 130, i32* %145, align 8
  br label %4878

4034:                                             ; preds = %4023
  %4035 = icmp eq i64* %4027, null
  %4036 = icmp ne i32 %4025, 0
  br i1 %4035, label %4125, label %4037

4037:                                             ; preds = %4034
  br i1 %4036, label %4038, label %4788

4038:                                             ; preds = %4037
  %4039 = zext i32 %4025 to i64
  %4040 = icmp ult i32 %4025, 4
  br i1 %4040, label %4041, label %4060

4041:                                             ; preds = %4123, %4060, %4038
  %4042 = phi i64 [ 0, %4060 ], [ 0, %4038 ], [ %4068, %4123 ]
  %4043 = xor i64 %4042, -1
  %4044 = add nsw i64 %4043, %4039
  %4045 = and i64 %4039, 3
  %4046 = icmp eq i64 %4045, 0
  br i1 %4046, label %4057, label %4047

4047:                                             ; preds = %4041, %4047
  %4048 = phi i64 [ %4054, %4047 ], [ %4042, %4041 ]
  %4049 = phi i64 [ %4055, %4047 ], [ %4045, %4041 ]
  %4050 = getelementptr inbounds i64, i64* %4027, i64 %4048
  %4051 = load i64, i64* %4050, align 8
  %4052 = ashr i64 %4051, 2
  %4053 = getelementptr inbounds i64, i64* %386, i64 %4048
  store i64 %4052, i64* %4053, align 8
  %4054 = add nuw nsw i64 %4048, 1
  %4055 = add i64 %4049, -1
  %4056 = icmp eq i64 %4055, 0
  br i1 %4056, label %4057, label %4047, !llvm.loop !4

4057:                                             ; preds = %4047, %4041
  %4058 = phi i64 [ %4042, %4041 ], [ %4054, %4047 ]
  %4059 = icmp ult i64 %4044, 3
  br i1 %4059, label %4788, label %4129

4060:                                             ; preds = %4038
  %4061 = add i64 %357, %4039
  %4062 = getelementptr i64, i64* %385, i64 %4061
  %4063 = getelementptr i64, i64* %4027, i64 %4039
  %4064 = icmp ult i64* %386, %4063
  %4065 = icmp ult i64* %4027, %4062
  %4066 = and i1 %4064, %4065
  br i1 %4066, label %4041, label %4067

4067:                                             ; preds = %4060
  %4068 = and i64 %4039, 4294967292
  %4069 = add nsw i64 %4068, -4
  %4070 = lshr exact i64 %4069, 2
  %4071 = add nuw nsw i64 %4070, 1
  %4072 = and i64 %4071, 1
  %4073 = icmp eq i64 %4069, 0
  br i1 %4073, label %4107, label %4074

4074:                                             ; preds = %4067
  %4075 = sub nuw nsw i64 %4071, %4072
  br label %4076

4076:                                             ; preds = %4076, %4074
  %4077 = phi i64 [ 0, %4074 ], [ %4104, %4076 ]
  %4078 = phi i64 [ %4075, %4074 ], [ %4105, %4076 ]
  %4079 = getelementptr inbounds i64, i64* %4027, i64 %4077
  %4080 = bitcast i64* %4079 to <2 x i64>*
  %4081 = load <2 x i64>, <2 x i64>* %4080, align 8, !alias.scope !5
  %4082 = getelementptr inbounds i64, i64* %4079, i64 2
  %4083 = bitcast i64* %4082 to <2 x i64>*
  %4084 = load <2 x i64>, <2 x i64>* %4083, align 8, !alias.scope !5
  %4085 = ashr <2 x i64> %4081, <i64 2, i64 2>
  %4086 = ashr <2 x i64> %4084, <i64 2, i64 2>
  %4087 = getelementptr inbounds i64, i64* %386, i64 %4077
  %4088 = bitcast i64* %4087 to <2 x i64>*
  store <2 x i64> %4085, <2 x i64>* %4088, align 8, !alias.scope !8, !noalias !5
  %4089 = getelementptr inbounds i64, i64* %4087, i64 2
  %4090 = bitcast i64* %4089 to <2 x i64>*
  store <2 x i64> %4086, <2 x i64>* %4090, align 8, !alias.scope !8, !noalias !5
  %4091 = or i64 %4077, 4
  %4092 = getelementptr inbounds i64, i64* %4027, i64 %4091
  %4093 = bitcast i64* %4092 to <2 x i64>*
  %4094 = load <2 x i64>, <2 x i64>* %4093, align 8, !alias.scope !5
  %4095 = getelementptr inbounds i64, i64* %4092, i64 2
  %4096 = bitcast i64* %4095 to <2 x i64>*
  %4097 = load <2 x i64>, <2 x i64>* %4096, align 8, !alias.scope !5
  %4098 = ashr <2 x i64> %4094, <i64 2, i64 2>
  %4099 = ashr <2 x i64> %4097, <i64 2, i64 2>
  %4100 = getelementptr inbounds i64, i64* %386, i64 %4091
  %4101 = bitcast i64* %4100 to <2 x i64>*
  store <2 x i64> %4098, <2 x i64>* %4101, align 8, !alias.scope !8, !noalias !5
  %4102 = getelementptr inbounds i64, i64* %4100, i64 2
  %4103 = bitcast i64* %4102 to <2 x i64>*
  store <2 x i64> %4099, <2 x i64>* %4103, align 8, !alias.scope !8, !noalias !5
  %4104 = add i64 %4077, 8
  %4105 = add i64 %4078, -2
  %4106 = icmp eq i64 %4105, 0
  br i1 %4106, label %4107, label %4076, !llvm.loop !10

4107:                                             ; preds = %4076, %4067
  %4108 = phi i64 [ 0, %4067 ], [ %4104, %4076 ]
  %4109 = icmp eq i64 %4072, 0
  br i1 %4109, label %4123, label %4110

4110:                                             ; preds = %4107
  %4111 = getelementptr inbounds i64, i64* %4027, i64 %4108
  %4112 = bitcast i64* %4111 to <2 x i64>*
  %4113 = load <2 x i64>, <2 x i64>* %4112, align 8, !alias.scope !5
  %4114 = getelementptr inbounds i64, i64* %4111, i64 2
  %4115 = bitcast i64* %4114 to <2 x i64>*
  %4116 = load <2 x i64>, <2 x i64>* %4115, align 8, !alias.scope !5
  %4117 = ashr <2 x i64> %4113, <i64 2, i64 2>
  %4118 = ashr <2 x i64> %4116, <i64 2, i64 2>
  %4119 = getelementptr inbounds i64, i64* %386, i64 %4108
  %4120 = bitcast i64* %4119 to <2 x i64>*
  store <2 x i64> %4117, <2 x i64>* %4120, align 8, !alias.scope !8, !noalias !5
  %4121 = getelementptr inbounds i64, i64* %4119, i64 2
  %4122 = bitcast i64* %4121 to <2 x i64>*
  store <2 x i64> %4118, <2 x i64>* %4122, align 8, !alias.scope !8, !noalias !5
  br label %4123

4123:                                             ; preds = %4107, %4110
  %4124 = icmp eq i64 %4068, %4039
  br i1 %4124, label %4788, label %4041

4125:                                             ; preds = %4034
  br i1 %4036, label %4126, label %4788

4126:                                             ; preds = %4125
  %4127 = zext i32 %4025 to i64
  %4128 = shl nuw nsw i64 %4127, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %387, i8 0, i64 %4128, i1 false) #11
  br label %4788

4129:                                             ; preds = %4057, %4129
  %4130 = phi i64 [ %4150, %4129 ], [ %4058, %4057 ]
  %4131 = getelementptr inbounds i64, i64* %4027, i64 %4130
  %4132 = load i64, i64* %4131, align 8
  %4133 = ashr i64 %4132, 2
  %4134 = getelementptr inbounds i64, i64* %386, i64 %4130
  store i64 %4133, i64* %4134, align 8
  %4135 = add nuw nsw i64 %4130, 1
  %4136 = getelementptr inbounds i64, i64* %4027, i64 %4135
  %4137 = load i64, i64* %4136, align 8
  %4138 = ashr i64 %4137, 2
  %4139 = getelementptr inbounds i64, i64* %386, i64 %4135
  store i64 %4138, i64* %4139, align 8
  %4140 = add nuw nsw i64 %4130, 2
  %4141 = getelementptr inbounds i64, i64* %4027, i64 %4140
  %4142 = load i64, i64* %4141, align 8
  %4143 = ashr i64 %4142, 2
  %4144 = getelementptr inbounds i64, i64* %386, i64 %4140
  store i64 %4143, i64* %4144, align 8
  %4145 = add nuw nsw i64 %4130, 3
  %4146 = getelementptr inbounds i64, i64* %4027, i64 %4145
  %4147 = load i64, i64* %4146, align 8
  %4148 = ashr i64 %4147, 2
  %4149 = getelementptr inbounds i64, i64* %386, i64 %4145
  store i64 %4148, i64* %4149, align 8
  %4150 = add nuw nsw i64 %4130, 4
  %4151 = icmp eq i64 %4150, %4039
  br i1 %4151, label %4788, label %4129, !llvm.loop !12

4152:                                             ; preds = %4018
  %4153 = load %struct.TT_DefRecord_*, %struct.TT_DefRecord_** %146, align 8
  %4154 = icmp eq %struct.TT_DefRecord_* %4153, null
  br i1 %4154, label %4792, label %4155

4155:                                             ; preds = %4152
  %4156 = load i32, i32* %147, align 8
  %4157 = zext i32 %4156 to i64
  %4158 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4153, i64 %4157
  %4159 = icmp eq i32 %4156, 0
  br i1 %4159, label %4792, label %4160

4160:                                             ; preds = %4155, %4206
  %4161 = phi %struct.TT_DefRecord_* [ %4207, %4206 ], [ %4153, %4155 ]
  %4162 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4161, i64 0, i32 3
  %4163 = load i32, i32* %4162, align 8
  %4164 = trunc i32 %4163 to i8
  %4165 = icmp eq i8 %4164, -111
  br i1 %4165, label %4166, label %4206

4166:                                             ; preds = %4160
  %4167 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4161, i64 0, i32 4
  %4168 = load i8, i8* %4167, align 4
  %4169 = icmp eq i8 %4168, 0
  br i1 %4169, label %4206, label %4170

4170:                                             ; preds = %4166
  %4171 = load i32, i32* %148, align 8
  %4172 = load i32, i32* %149, align 4
  %4173 = icmp slt i32 %4171, %4172
  br i1 %4173, label %4175, label %4174

4174:                                             ; preds = %4170
  store i32 130, i32* %145, align 8
  br label %4878

4175:                                             ; preds = %4170
  %4176 = load %struct.TT_CallRec_*, %struct.TT_CallRec_** %150, align 8
  %4177 = add nsw i32 %4171, 1
  store i32 %4177, i32* %148, align 8
  %4178 = sext i32 %4171 to i64
  %4179 = load i32, i32* %118, align 4
  %4180 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %4176, i64 %4178, i32 0
  store i32 %4179, i32* %4180, align 8
  %4181 = load i64, i64* %134, align 8
  %4182 = add nsw i64 %4181, 1
  %4183 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %4176, i64 %4178, i32 1
  store i64 %4182, i64* %4183, align 8
  %4184 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %4176, i64 %4178, i32 2
  store i64 1, i64* %4184, align 8
  %4185 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %4176, i64 %4178, i32 3
  store %struct.TT_DefRecord_* %4161, %struct.TT_DefRecord_** %4185, align 8
  %4186 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4161, i64 0, i32 0
  %4187 = load i32, i32* %4186, align 8
  %4188 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4161, i64 0, i32 1
  %4189 = load i64, i64* %4188, align 8
  %4190 = add i32 %4187, -1
  %4191 = icmp ugt i32 %4190, 2
  br i1 %4191, label %4192, label %4193

4192:                                             ; preds = %4175
  store i32 132, i32* %145, align 8
  br label %4205

4193:                                             ; preds = %4175
  %4194 = sext i32 %4190 to i64
  %4195 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %4194, i32 0
  %4196 = load i8*, i8** %4195, align 8
  %4197 = icmp eq i8* %4196, null
  br i1 %4197, label %4198, label %4199

4198:                                             ; preds = %4193
  store i32 138, i32* %145, align 8
  br label %4205

4199:                                             ; preds = %4193
  %4200 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %4194, i32 1
  %4201 = load i64, i64* %4200, align 8
  %4202 = icmp slt i64 %4201, %4189
  br i1 %4202, label %4203, label %4204

4203:                                             ; preds = %4199
  store i32 131, i32* %145, align 8
  br label %4205

4204:                                             ; preds = %4199
  store i8* %4196, i8** %133, align 8
  store i64 %4201, i64* %137, align 8
  store i64 %4189, i64* %134, align 8
  store i32 %4187, i32* %118, align 4
  br label %4205

4205:                                             ; preds = %4192, %4198, %4203, %4204
  store i8 0, i8* %144, align 8
  br label %4788

4206:                                             ; preds = %4166, %4160
  %4207 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4161, i64 1
  %4208 = icmp ult %struct.TT_DefRecord_* %4207, %4158
  br i1 %4208, label %4160, label %4792

4209:                                             ; preds = %384
  %4210 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %22, align 8
  %4211 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4210, i64 0, i32 50
  %4212 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %4211, align 8
  %4213 = icmp eq %struct.GX_BlendRec_* %4212, null
  br i1 %4213, label %4215, label %4214

4214:                                             ; preds = %4209
  store i64 17, i64* %386, align 8
  br label %4788

4215:                                             ; preds = %4209
  %4216 = load %struct.TT_DefRecord_*, %struct.TT_DefRecord_** %146, align 8
  %4217 = icmp eq %struct.TT_DefRecord_* %4216, null
  br i1 %4217, label %4792, label %4218

4218:                                             ; preds = %4215
  %4219 = load i32, i32* %147, align 8
  %4220 = zext i32 %4219 to i64
  %4221 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4216, i64 %4220
  %4222 = icmp eq i32 %4219, 0
  br i1 %4222, label %4792, label %4223

4223:                                             ; preds = %4218, %4269
  %4224 = phi %struct.TT_DefRecord_* [ %4270, %4269 ], [ %4216, %4218 ]
  %4225 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4224, i64 0, i32 3
  %4226 = load i32, i32* %4225, align 8
  %4227 = trunc i32 %4226 to i8
  %4228 = icmp eq i8 %4227, -110
  br i1 %4228, label %4229, label %4269

4229:                                             ; preds = %4223
  %4230 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4224, i64 0, i32 4
  %4231 = load i8, i8* %4230, align 4
  %4232 = icmp eq i8 %4231, 0
  br i1 %4232, label %4269, label %4233

4233:                                             ; preds = %4229
  %4234 = load i32, i32* %148, align 8
  %4235 = load i32, i32* %149, align 4
  %4236 = icmp slt i32 %4234, %4235
  br i1 %4236, label %4238, label %4237

4237:                                             ; preds = %4233
  store i32 130, i32* %145, align 8
  br label %4878

4238:                                             ; preds = %4233
  %4239 = load %struct.TT_CallRec_*, %struct.TT_CallRec_** %150, align 8
  %4240 = add nsw i32 %4234, 1
  store i32 %4240, i32* %148, align 8
  %4241 = sext i32 %4234 to i64
  %4242 = load i32, i32* %118, align 4
  %4243 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %4239, i64 %4241, i32 0
  store i32 %4242, i32* %4243, align 8
  %4244 = load i64, i64* %134, align 8
  %4245 = add nsw i64 %4244, 1
  %4246 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %4239, i64 %4241, i32 1
  store i64 %4245, i64* %4246, align 8
  %4247 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %4239, i64 %4241, i32 2
  store i64 1, i64* %4247, align 8
  %4248 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %4239, i64 %4241, i32 3
  store %struct.TT_DefRecord_* %4224, %struct.TT_DefRecord_** %4248, align 8
  %4249 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4224, i64 0, i32 0
  %4250 = load i32, i32* %4249, align 8
  %4251 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4224, i64 0, i32 1
  %4252 = load i64, i64* %4251, align 8
  %4253 = add i32 %4250, -1
  %4254 = icmp ugt i32 %4253, 2
  br i1 %4254, label %4255, label %4256

4255:                                             ; preds = %4238
  store i32 132, i32* %145, align 8
  br label %4268

4256:                                             ; preds = %4238
  %4257 = sext i32 %4253 to i64
  %4258 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %4257, i32 0
  %4259 = load i8*, i8** %4258, align 8
  %4260 = icmp eq i8* %4259, null
  br i1 %4260, label %4261, label %4262

4261:                                             ; preds = %4256
  store i32 138, i32* %145, align 8
  br label %4268

4262:                                             ; preds = %4256
  %4263 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %4257, i32 1
  %4264 = load i64, i64* %4263, align 8
  %4265 = icmp slt i64 %4264, %4252
  br i1 %4265, label %4266, label %4267

4266:                                             ; preds = %4262
  store i32 131, i32* %145, align 8
  br label %4268

4267:                                             ; preds = %4262
  store i8* %4259, i8** %133, align 8
  store i64 %4264, i64* %137, align 8
  store i64 %4252, i64* %134, align 8
  store i32 %4250, i32* %118, align 4
  br label %4268

4268:                                             ; preds = %4255, %4261, %4266, %4267
  store i8 0, i8* %144, align 8
  br label %4788

4269:                                             ; preds = %4229, %4223
  %4270 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4224, i64 1
  %4271 = icmp ult %struct.TT_DefRecord_* %4270, %4221
  br i1 %4271, label %4223, label %4792

4272:                                             ; preds = %384
  %4273 = icmp ugt i8 %358, -33
  br i1 %4273, label %4274, label %4459

4274:                                             ; preds = %4272
  %4275 = load i64, i64* %386, align 8
  %4276 = trunc i64 %4275 to i16
  %4277 = getelementptr inbounds i64, i64* %386, i64 1
  %4278 = load i64, i64* %4277, align 8
  %4279 = add i64 %4278, 1
  %4280 = trunc i64 %4275 to i32
  %4281 = and i32 %4280, 65535
  %4282 = load i16, i16* %163, align 4
  %4283 = zext i16 %4282 to i32
  %4284 = icmp ult i32 %4281, %4283
  br i1 %4284, label %4285, label %4293

4285:                                             ; preds = %4274
  %4286 = load i64, i64* %53, align 8
  %4287 = add i64 %4286, 1
  %4288 = icmp ult i64 %4279, %4287
  br i1 %4288, label %4289, label %4293

4289:                                             ; preds = %4285
  %4290 = load i16, i16* %218, align 8
  %4291 = load i16, i16* %192, align 4
  %4292 = icmp ult i16 %4290, %4291
  br i1 %4292, label %4297, label %4293

4293:                                             ; preds = %4289, %4285, %4274
  %4294 = load i8, i8* %140, align 1
  %4295 = icmp eq i8 %4294, 0
  br i1 %4295, label %4452, label %4296

4296:                                             ; preds = %4293
  store i32 134, i32* %145, align 8
  br label %4452

4297:                                             ; preds = %4289
  %4298 = icmp eq i64 %4279, 0
  br i1 %4298, label %4302, label %4299

4299:                                             ; preds = %4297
  %4300 = load i64 (%struct.TT_ExecContextRec_*, i64)*, i64 (%struct.TT_ExecContextRec_*, i64)** %105, align 8
  %4301 = call i64 %4300(%struct.TT_ExecContextRec_* %0, i64 %4278) #11
  br label %4302

4302:                                             ; preds = %4299, %4297
  %4303 = phi i64 [ %4301, %4299 ], [ 0, %4297 ]
  %4304 = load i64, i64* %261, align 8
  %4305 = sub i64 %4303, %4304
  %4306 = icmp slt i64 %4305, 0
  %4307 = sub i64 0, %4305
  %4308 = select i1 %4306, i64 %4307, i64 %4305
  %4309 = load i64, i64* %262, align 8
  %4310 = icmp slt i64 %4308, %4309
  br i1 %4310, label %4311, label %4315

4311:                                             ; preds = %4302
  %4312 = icmp sgt i64 %4303, -1
  %4313 = sub nsw i64 0, %4304
  %4314 = select i1 %4312, i64 %4304, i64 %4313
  br label %4315

4315:                                             ; preds = %4311, %4302
  %4316 = phi i64 [ %4303, %4302 ], [ %4314, %4311 ]
  %4317 = load i16, i16* %196, align 2
  %4318 = icmp eq i16 %4317, 0
  br i1 %4318, label %4321, label %4319

4319:                                             ; preds = %4315
  %4320 = and i64 %4275, 65535
  br label %4354

4321:                                             ; preds = %4315
  %4322 = load %struct.FT_Vector_*, %struct.FT_Vector_** %202, align 8
  %4323 = load i16, i16* %218, align 8
  %4324 = zext i16 %4323 to i64
  %4325 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4322, i64 %4324, i32 0
  %4326 = load i64, i64* %4325, align 8
  %4327 = trunc i64 %4316 to i32
  %4328 = load i16, i16* %215, align 2
  %4329 = sext i16 %4328 to i32
  %4330 = call fastcc i32 @TT_MulFix14_long_long(i32 %4327, i32 %4329) #12
  %4331 = sext i32 %4330 to i64
  %4332 = add i64 %4326, %4331
  %4333 = load %struct.FT_Vector_*, %struct.FT_Vector_** %165, align 8
  %4334 = and i64 %4275, 65535
  %4335 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4333, i64 %4334, i32 0
  store i64 %4332, i64* %4335, align 8
  %4336 = load %struct.FT_Vector_*, %struct.FT_Vector_** %202, align 8
  %4337 = load i16, i16* %218, align 8
  %4338 = zext i16 %4337 to i64
  %4339 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4336, i64 %4338, i32 1
  %4340 = load i64, i64* %4339, align 8
  %4341 = load i16, i16* %216, align 2
  %4342 = sext i16 %4341 to i32
  %4343 = call fastcc i32 @TT_MulFix14_long_long(i32 %4327, i32 %4342) #12
  %4344 = sext i32 %4343 to i64
  %4345 = add i64 %4340, %4344
  %4346 = load %struct.FT_Vector_*, %struct.FT_Vector_** %165, align 8
  %4347 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4346, i64 %4334, i32 1
  store i64 %4345, i64* %4347, align 8
  %4348 = load %struct.FT_Vector_*, %struct.FT_Vector_** %172, align 8
  %4349 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4348, i64 %4334
  %4350 = load %struct.FT_Vector_*, %struct.FT_Vector_** %165, align 8
  %4351 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4350, i64 %4334
  %4352 = bitcast %struct.FT_Vector_* %4349 to i8*
  %4353 = bitcast %struct.FT_Vector_* %4351 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4352, i8* align 8 %4353, i64 16, i1 false) #11
  br label %4354

4354:                                             ; preds = %4321, %4319
  %4355 = phi i64 [ %4320, %4319 ], [ %4334, %4321 ]
  %4356 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %201, align 8
  %4357 = load %struct.FT_Vector_*, %struct.FT_Vector_** %165, align 8
  %4358 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4357, i64 %4355, i32 0
  %4359 = load i64, i64* %4358, align 8
  %4360 = load %struct.FT_Vector_*, %struct.FT_Vector_** %202, align 8
  %4361 = load i16, i16* %218, align 8
  %4362 = zext i16 %4361 to i64
  %4363 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4360, i64 %4362, i32 0
  %4364 = load i64, i64* %4363, align 8
  %4365 = sub i64 %4359, %4364
  %4366 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4357, i64 %4355, i32 1
  %4367 = load i64, i64* %4366, align 8
  %4368 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4360, i64 %4362, i32 1
  %4369 = load i64, i64* %4368, align 8
  %4370 = sub i64 %4367, %4369
  %4371 = call i64 %4356(%struct.TT_ExecContextRec_* %0, i64 %4365, i64 %4370) #11
  %4372 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %193, align 8
  %4373 = load %struct.FT_Vector_*, %struct.FT_Vector_** %172, align 8
  %4374 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4373, i64 %4355, i32 0
  %4375 = load i64, i64* %4374, align 8
  %4376 = load %struct.FT_Vector_*, %struct.FT_Vector_** %194, align 8
  %4377 = load i16, i16* %218, align 8
  %4378 = zext i16 %4377 to i64
  %4379 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4376, i64 %4378, i32 0
  %4380 = load i64, i64* %4379, align 8
  %4381 = sub i64 %4375, %4380
  %4382 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4373, i64 %4355, i32 1
  %4383 = load i64, i64* %4382, align 8
  %4384 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4376, i64 %4378, i32 1
  %4385 = load i64, i64* %4384, align 8
  %4386 = sub i64 %4383, %4385
  %4387 = call i64 %4372(%struct.TT_ExecContextRec_* %0, i64 %4381, i64 %4386) #11
  %4388 = load i8, i8* %190, align 4
  %4389 = icmp ne i8 %4388, 0
  %4390 = xor i64 %4371, %4316
  %4391 = icmp slt i64 %4390, 0
  %4392 = and i1 %4391, %4389
  %4393 = sub i64 0, %4316
  %4394 = select i1 %4392, i64 %4393, i64 %4316
  %4395 = load i8, i8* %135, align 8
  %4396 = zext i8 %4395 to i32
  %4397 = and i32 %4396, 4
  %4398 = icmp eq i32 %4397, 0
  br i1 %4398, label %4418, label %4399

4399:                                             ; preds = %4354
  %4400 = load i16, i16* %195, align 4
  %4401 = load i16, i16* %196, align 2
  %4402 = icmp eq i16 %4400, %4401
  br i1 %4402, label %4403, label %4411

4403:                                             ; preds = %4399
  %4404 = load i64, i64* %217, align 8
  %4405 = sub i64 %4394, %4371
  %4406 = icmp slt i64 %4405, 0
  %4407 = sub i64 0, %4405
  %4408 = select i1 %4406, i64 %4407, i64 %4405
  %4409 = icmp sgt i64 %4408, %4404
  %4410 = select i1 %4409, i64 %4371, i64 %4394
  br label %4411

4411:                                             ; preds = %4403, %4399
  %4412 = phi i64 [ %4394, %4399 ], [ %4410, %4403 ]
  %4413 = load i64 (%struct.TT_ExecContextRec_*, i64, i32)*, i64 (%struct.TT_ExecContextRec_*, i64, i32)** %183, align 8
  %4414 = and i8 %4395, 3
  %4415 = zext i8 %4414 to i32
  %4416 = call i64 %4413(%struct.TT_ExecContextRec_* %0, i64 %4412, i32 %4415) #11
  %4417 = load i8, i8* %135, align 8
  br label %4432

4418:                                             ; preds = %4354
  %4419 = and i32 %4396, 3
  %4420 = zext i32 %4419 to i64
  %4421 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 5, i64 %4420
  %4422 = load i64, i64* %4421, align 8
  %4423 = icmp sgt i64 %4394, -1
  br i1 %4423, label %4424, label %4428

4424:                                             ; preds = %4418
  %4425 = add i64 %4422, %4394
  %4426 = icmp sgt i64 %4425, 0
  %4427 = select i1 %4426, i64 %4425, i64 0
  br label %4432

4428:                                             ; preds = %4418
  %4429 = sub i64 %4394, %4422
  %4430 = icmp slt i64 %4429, 0
  %4431 = select i1 %4430, i64 %4429, i64 0
  br label %4432

4432:                                             ; preds = %4428, %4424, %4411
  %4433 = phi i8 [ %4417, %4411 ], [ %4395, %4424 ], [ %4395, %4428 ]
  %4434 = phi i64 [ %4416, %4411 ], [ %4427, %4424 ], [ %4431, %4428 ]
  %4435 = and i8 %4433, 8
  %4436 = icmp eq i8 %4435, 0
  br i1 %4436, label %4447, label %4437

4437:                                             ; preds = %4432
  %4438 = load i64, i64* %263, align 8
  %4439 = icmp sgt i64 %4371, -1
  br i1 %4439, label %4440, label %4443

4440:                                             ; preds = %4437
  %4441 = icmp slt i64 %4434, %4438
  %4442 = select i1 %4441, i64 %4438, i64 %4434
  br label %4447

4443:                                             ; preds = %4437
  %4444 = sub i64 0, %4438
  %4445 = icmp sgt i64 %4434, %4444
  %4446 = select i1 %4445, i64 %4444, i64 %4434
  br label %4447

4447:                                             ; preds = %4443, %4440, %4432
  %4448 = phi i64 [ %4434, %4432 ], [ %4442, %4440 ], [ %4446, %4443 ]
  %4449 = load void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*, void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)** %204, align 8
  %4450 = sub i64 %4448, %4387
  call void %4449(%struct.TT_ExecContextRec_* %0, %struct.TT_GlyphZoneRec_* %220, i16 zeroext %4276, i64 %4450) #11
  %4451 = load i8, i8* %135, align 8
  br label %4452

4452:                                             ; preds = %4447, %4296, %4293
  %4453 = phi i8 [ %4451, %4447 ], [ %358, %4296 ], [ %358, %4293 ]
  %4454 = load i16, i16* %218, align 8
  store i16 %4454, i16* %219, align 2
  %4455 = and i8 %4453, 16
  %4456 = icmp eq i8 %4455, 0
  br i1 %4456, label %4458, label %4457

4457:                                             ; preds = %4452
  store i16 %4276, i16* %218, align 8
  br label %4458

4458:                                             ; preds = %4452, %4457
  store i16 %4276, i16* %222, align 4
  br label %4788

4459:                                             ; preds = %4272
  %4460 = icmp ugt i8 %358, -65
  br i1 %4460, label %4461, label %4650

4461:                                             ; preds = %4459
  %4462 = load i64, i64* %386, align 8
  %4463 = trunc i64 %4462 to i16
  %4464 = trunc i64 %4462 to i32
  %4465 = and i32 %4464, 65535
  %4466 = load i16, i16* %163, align 4
  %4467 = zext i16 %4466 to i32
  %4468 = icmp ult i32 %4465, %4467
  br i1 %4468, label %4469, label %4473

4469:                                             ; preds = %4461
  %4470 = load i16, i16* %218, align 8
  %4471 = load i16, i16* %192, align 4
  %4472 = icmp ult i16 %4470, %4471
  br i1 %4472, label %4477, label %4473

4473:                                             ; preds = %4469, %4461
  %4474 = load i8, i8* %140, align 1
  %4475 = icmp eq i8 %4474, 0
  br i1 %4475, label %4644, label %4476

4476:                                             ; preds = %4473
  store i32 134, i32* %145, align 8
  br label %4644

4477:                                             ; preds = %4469
  %4478 = load i16, i16* %195, align 4
  %4479 = icmp eq i16 %4478, 0
  br i1 %4479, label %4483, label %4480

4480:                                             ; preds = %4477
  %4481 = load i16, i16* %196, align 2
  %4482 = icmp eq i16 %4481, 0
  br i1 %4482, label %4483, label %4500

4483:                                             ; preds = %4480, %4477
  %4484 = load %struct.FT_Vector_*, %struct.FT_Vector_** %165, align 8
  %4485 = and i64 %4462, 65535
  %4486 = load %struct.FT_Vector_*, %struct.FT_Vector_** %202, align 8
  %4487 = zext i16 %4470 to i64
  %4488 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %201, align 8
  %4489 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4484, i64 %4485, i32 0
  %4490 = load i64, i64* %4489, align 8
  %4491 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4486, i64 %4487, i32 0
  %4492 = load i64, i64* %4491, align 8
  %4493 = sub i64 %4490, %4492
  %4494 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4484, i64 %4485, i32 1
  %4495 = load i64, i64* %4494, align 8
  %4496 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4486, i64 %4487, i32 1
  %4497 = load i64, i64* %4496, align 8
  %4498 = sub i64 %4495, %4497
  %4499 = call i64 %4488(%struct.TT_ExecContextRec_* %0, i64 %4493, i64 %4498) #11
  br label %4567

4500:                                             ; preds = %4480
  %4501 = load %struct.FT_Vector_*, %struct.FT_Vector_** %198, align 8
  %4502 = and i64 %4462, 65535
  %4503 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4501, i64 %4502
  %4504 = load %struct.FT_Vector_*, %struct.FT_Vector_** %197, align 8
  %4505 = zext i16 %4470 to i64
  %4506 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4504, i64 %4505
  %4507 = load i64, i64* %199, align 8
  %4508 = load i64, i64* %200, align 8
  %4509 = icmp eq i64 %4507, %4508
  br i1 %4509, label %4510, label %4534

4510:                                             ; preds = %4500
  %4511 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %201, align 8
  %4512 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4503, i64 0, i32 0
  %4513 = load i64, i64* %4512, align 8
  %4514 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4506, i64 0, i32 0
  %4515 = load i64, i64* %4514, align 8
  %4516 = sub i64 %4513, %4515
  %4517 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4501, i64 %4502, i32 1
  %4518 = load i64, i64* %4517, align 8
  %4519 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4504, i64 %4505, i32 1
  %4520 = load i64, i64* %4519, align 8
  %4521 = sub i64 %4518, %4520
  %4522 = call i64 %4511(%struct.TT_ExecContextRec_* %0, i64 %4516, i64 %4521) #11
  %4523 = load i64, i64* %199, align 8
  %4524 = shl i64 %4522, 32
  %4525 = ashr exact i64 %4524, 32
  %4526 = shl i64 %4523, 32
  %4527 = ashr exact i64 %4526, 32
  %4528 = mul nsw i64 %4527, %4525
  %4529 = ashr i64 %4528, 63
  %4530 = add nsw i64 %4528, 32768
  %4531 = add nsw i64 %4530, %4529
  %4532 = shl i64 %4531, 16
  %4533 = ashr i64 %4532, 32
  br label %4567

4534:                                             ; preds = %4500
  %4535 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4503, i64 0, i32 0
  %4536 = load i64, i64* %4535, align 8
  %4537 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4506, i64 0, i32 0
  %4538 = load i64, i64* %4537, align 8
  %4539 = sub i64 %4536, %4538
  %4540 = shl i64 %4539, 32
  %4541 = ashr exact i64 %4540, 32
  %4542 = shl i64 %4507, 32
  %4543 = ashr exact i64 %4542, 32
  %4544 = mul nsw i64 %4541, %4543
  %4545 = ashr i64 %4544, 63
  %4546 = add nsw i64 %4544, 32768
  %4547 = add nsw i64 %4546, %4545
  %4548 = shl i64 %4547, 16
  %4549 = ashr i64 %4548, 32
  %4550 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4501, i64 %4502, i32 1
  %4551 = load i64, i64* %4550, align 8
  %4552 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4504, i64 %4505, i32 1
  %4553 = load i64, i64* %4552, align 8
  %4554 = sub i64 %4551, %4553
  %4555 = shl i64 %4554, 32
  %4556 = ashr exact i64 %4555, 32
  %4557 = shl i64 %4508, 32
  %4558 = ashr exact i64 %4557, 32
  %4559 = mul nsw i64 %4556, %4558
  %4560 = ashr i64 %4559, 63
  %4561 = add nsw i64 %4559, 32768
  %4562 = add nsw i64 %4561, %4560
  %4563 = shl i64 %4562, 16
  %4564 = ashr i64 %4563, 32
  %4565 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %201, align 8
  %4566 = call i64 %4565(%struct.TT_ExecContextRec_* %0, i64 %4549, i64 %4564) #11
  br label %4567

4567:                                             ; preds = %4534, %4510, %4483
  %4568 = phi i64 [ %4499, %4483 ], [ %4533, %4510 ], [ %4566, %4534 ]
  %4569 = load i64, i64* %262, align 8
  %4570 = icmp sgt i64 %4569, 0
  br i1 %4570, label %4571, label %4582

4571:                                             ; preds = %4567
  %4572 = load i64, i64* %261, align 8
  %4573 = add nsw i64 %4572, %4569
  %4574 = icmp slt i64 %4568, %4573
  %4575 = sub nsw i64 %4572, %4569
  %4576 = icmp sgt i64 %4568, %4575
  %4577 = and i1 %4574, %4576
  br i1 %4577, label %4578, label %4582

4578:                                             ; preds = %4571
  %4579 = icmp sgt i64 %4568, -1
  %4580 = sub nsw i64 0, %4572
  %4581 = select i1 %4579, i64 %4572, i64 %4580
  br label %4582

4582:                                             ; preds = %4578, %4571, %4567
  %4583 = phi i64 [ %4568, %4571 ], [ %4568, %4567 ], [ %4581, %4578 ]
  %4584 = load i8, i8* %135, align 8
  %4585 = zext i8 %4584 to i32
  %4586 = and i32 %4585, 4
  %4587 = icmp eq i32 %4586, 0
  br i1 %4587, label %4593, label %4588

4588:                                             ; preds = %4582
  %4589 = load i64 (%struct.TT_ExecContextRec_*, i64, i32)*, i64 (%struct.TT_ExecContextRec_*, i64, i32)** %183, align 8
  %4590 = and i32 %4585, 3
  %4591 = call i64 %4589(%struct.TT_ExecContextRec_* %0, i64 %4583, i32 %4590) #11
  %4592 = load i8, i8* %135, align 8
  br label %4607

4593:                                             ; preds = %4582
  %4594 = and i32 %4585, 3
  %4595 = zext i32 %4594 to i64
  %4596 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 5, i64 %4595
  %4597 = load i64, i64* %4596, align 8
  %4598 = icmp sgt i64 %4583, -1
  br i1 %4598, label %4599, label %4603

4599:                                             ; preds = %4593
  %4600 = add i64 %4597, %4583
  %4601 = icmp sgt i64 %4600, 0
  %4602 = select i1 %4601, i64 %4600, i64 0
  br label %4607

4603:                                             ; preds = %4593
  %4604 = sub i64 %4583, %4597
  %4605 = icmp slt i64 %4604, 0
  %4606 = select i1 %4605, i64 %4604, i64 0
  br label %4607

4607:                                             ; preds = %4603, %4599, %4588
  %4608 = phi i8 [ %4592, %4588 ], [ %4584, %4599 ], [ %4584, %4603 ]
  %4609 = phi i64 [ %4591, %4588 ], [ %4602, %4599 ], [ %4606, %4603 ]
  %4610 = and i8 %4608, 8
  %4611 = icmp eq i8 %4610, 0
  br i1 %4611, label %4622, label %4612

4612:                                             ; preds = %4607
  %4613 = load i64, i64* %263, align 8
  %4614 = icmp sgt i64 %4583, -1
  br i1 %4614, label %4615, label %4618

4615:                                             ; preds = %4612
  %4616 = icmp slt i64 %4609, %4613
  %4617 = select i1 %4616, i64 %4613, i64 %4609
  br label %4622

4618:                                             ; preds = %4612
  %4619 = sub i64 0, %4613
  %4620 = icmp sgt i64 %4609, %4619
  %4621 = select i1 %4620, i64 %4619, i64 %4609
  br label %4622

4622:                                             ; preds = %4618, %4615, %4607
  %4623 = phi i64 [ %4609, %4607 ], [ %4617, %4615 ], [ %4621, %4618 ]
  %4624 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %193, align 8
  %4625 = load %struct.FT_Vector_*, %struct.FT_Vector_** %172, align 8
  %4626 = zext i32 %4465 to i64
  %4627 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4625, i64 %4626, i32 0
  %4628 = load i64, i64* %4627, align 8
  %4629 = load %struct.FT_Vector_*, %struct.FT_Vector_** %194, align 8
  %4630 = load i16, i16* %218, align 8
  %4631 = zext i16 %4630 to i64
  %4632 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4629, i64 %4631, i32 0
  %4633 = load i64, i64* %4632, align 8
  %4634 = sub i64 %4628, %4633
  %4635 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4625, i64 %4626, i32 1
  %4636 = load i64, i64* %4635, align 8
  %4637 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4629, i64 %4631, i32 1
  %4638 = load i64, i64* %4637, align 8
  %4639 = sub i64 %4636, %4638
  %4640 = call i64 %4624(%struct.TT_ExecContextRec_* %0, i64 %4634, i64 %4639) #11
  %4641 = load void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*, void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)** %204, align 8
  %4642 = sub i64 %4623, %4640
  call void %4641(%struct.TT_ExecContextRec_* %0, %struct.TT_GlyphZoneRec_* %220, i16 zeroext %4463, i64 %4642) #11
  %4643 = load i8, i8* %135, align 8
  br label %4644

4644:                                             ; preds = %4622, %4476, %4473
  %4645 = phi i8 [ %4643, %4622 ], [ %358, %4476 ], [ %358, %4473 ]
  %4646 = load i16, i16* %218, align 8
  store i16 %4646, i16* %219, align 2
  store i16 %4463, i16* %222, align 4
  %4647 = and i8 %4645, 16
  %4648 = icmp eq i8 %4647, 0
  br i1 %4648, label %4788, label %4649

4649:                                             ; preds = %4644
  store i16 %4463, i16* %218, align 8
  br label %4788

4650:                                             ; preds = %4459
  %4651 = icmp ugt i8 %358, -73
  br i1 %4651, label %4652, label %4701

4652:                                             ; preds = %4650
  %4653 = zext i8 %358 to i32
  %4654 = add nuw nsw i32 %4653, 65353
  %4655 = and i32 %4654, 65535
  %4656 = add nsw i64 %381, 1
  %4657 = load i64, i64* %138, align 8
  %4658 = sub i64 %4656, %4657
  %4659 = trunc i64 %4658 to i32
  %4660 = icmp ult i32 %4655, %4659
  br i1 %4660, label %4662, label %4661

4661:                                             ; preds = %4652
  store i32 130, i32* %145, align 8
  br label %4878

4662:                                             ; preds = %4652
  %4663 = load i64, i64* %134, align 8
  %4664 = add nsw i64 %4663, 1
  store i64 %4664, i64* %134, align 8
  %4665 = icmp eq i32 %4655, 0
  br i1 %4665, label %4700, label %4666

4666:                                             ; preds = %4662
  %4667 = add nsw i64 %4663, 3
  store i64 %4667, i64* %134, align 8
  %4668 = load i8*, i8** %133, align 8
  %4669 = getelementptr inbounds i8, i8* %4668, i64 %4664
  %4670 = load i8, i8* %4669, align 1
  %4671 = zext i8 %4670 to i16
  %4672 = shl nuw i16 %4671, 8
  %4673 = add nsw i64 %4663, 2
  %4674 = getelementptr inbounds i8, i8* %4668, i64 %4673
  %4675 = load i8, i8* %4674, align 1
  %4676 = zext i8 %4675 to i16
  %4677 = or i16 %4672, %4676
  %4678 = sext i16 %4677 to i64
  store i64 %4678, i64* %386, align 8
  %4679 = icmp eq i32 %4655, 1
  br i1 %4679, label %4700, label %4680

4680:                                             ; preds = %4666, %4680
  %4681 = phi i16 [ %4697, %4680 ], [ 1, %4666 ]
  %4682 = load i64, i64* %134, align 8
  %4683 = add nsw i64 %4682, 2
  store i64 %4683, i64* %134, align 8
  %4684 = load i8*, i8** %133, align 8
  %4685 = getelementptr inbounds i8, i8* %4684, i64 %4682
  %4686 = load i8, i8* %4685, align 1
  %4687 = zext i8 %4686 to i16
  %4688 = shl nuw i16 %4687, 8
  %4689 = add nsw i64 %4682, 1
  %4690 = getelementptr inbounds i8, i8* %4684, i64 %4689
  %4691 = load i8, i8* %4690, align 1
  %4692 = zext i8 %4691 to i16
  %4693 = or i16 %4688, %4692
  %4694 = sext i16 %4693 to i64
  %4695 = zext i16 %4681 to i64
  %4696 = getelementptr inbounds i64, i64* %386, i64 %4695
  store i64 %4694, i64* %4696, align 8
  %4697 = add i16 %4681, 1
  %4698 = zext i16 %4697 to i32
  %4699 = icmp ugt i32 %4655, %4698
  br i1 %4699, label %4680, label %4700

4700:                                             ; preds = %4680, %4666, %4662
  store i8 0, i8* %144, align 8
  br label %4788

4701:                                             ; preds = %4650
  %4702 = icmp ugt i8 %358, -81
  br i1 %4702, label %4703, label %4731

4703:                                             ; preds = %4701
  %4704 = zext i8 %358 to i32
  %4705 = add nuw nsw i32 %4704, 65361
  %4706 = and i32 %4705, 65535
  %4707 = add nsw i64 %381, 1
  %4708 = load i64, i64* %138, align 8
  %4709 = sub i64 %4707, %4708
  %4710 = trunc i64 %4709 to i32
  %4711 = icmp ult i32 %4706, %4710
  br i1 %4711, label %4712, label %4714

4712:                                             ; preds = %4703
  %4713 = icmp eq i32 %4706, 0
  br i1 %4713, label %4788, label %4715

4714:                                             ; preds = %4703
  store i32 130, i32* %145, align 8
  br label %4878

4715:                                             ; preds = %4712, %4715
  %4716 = phi i32 [ %4729, %4715 ], [ 1, %4712 ]
  %4717 = phi i16 [ %4728, %4715 ], [ 1, %4712 ]
  %4718 = load i8*, i8** %133, align 8
  %4719 = load i64, i64* %134, align 8
  %4720 = zext i16 %4717 to i64
  %4721 = add nsw i64 %4719, %4720
  %4722 = getelementptr inbounds i8, i8* %4718, i64 %4721
  %4723 = load i8, i8* %4722, align 1
  %4724 = zext i8 %4723 to i64
  %4725 = add nsw i32 %4716, -1
  %4726 = sext i32 %4725 to i64
  %4727 = getelementptr inbounds i64, i64* %386, i64 %4726
  store i64 %4724, i64* %4727, align 8
  %4728 = add i16 %4717, 1
  %4729 = zext i16 %4728 to i32
  %4730 = icmp ult i32 %4706, %4729
  br i1 %4730, label %4788, label %4715

4731:                                             ; preds = %4701
  %4732 = load %struct.TT_DefRecord_*, %struct.TT_DefRecord_** %146, align 8
  %4733 = icmp eq %struct.TT_DefRecord_* %4732, null
  br i1 %4733, label %4792, label %4734

4734:                                             ; preds = %4731
  %4735 = load i32, i32* %147, align 8
  %4736 = zext i32 %4735 to i64
  %4737 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4732, i64 %4736
  %4738 = icmp eq i32 %4735, 0
  br i1 %4738, label %4792, label %4739

4739:                                             ; preds = %4734, %4785
  %4740 = phi %struct.TT_DefRecord_* [ %4786, %4785 ], [ %4732, %4734 ]
  %4741 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4740, i64 0, i32 3
  %4742 = load i32, i32* %4741, align 8
  %4743 = trunc i32 %4742 to i8
  %4744 = icmp eq i8 %358, %4743
  br i1 %4744, label %4745, label %4785

4745:                                             ; preds = %4739
  %4746 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4740, i64 0, i32 4
  %4747 = load i8, i8* %4746, align 4
  %4748 = icmp eq i8 %4747, 0
  br i1 %4748, label %4785, label %4749

4749:                                             ; preds = %4745
  %4750 = load i32, i32* %148, align 8
  %4751 = load i32, i32* %149, align 4
  %4752 = icmp slt i32 %4750, %4751
  br i1 %4752, label %4754, label %4753

4753:                                             ; preds = %4749
  store i32 130, i32* %145, align 8
  br label %4878

4754:                                             ; preds = %4749
  %4755 = load %struct.TT_CallRec_*, %struct.TT_CallRec_** %150, align 8
  %4756 = add nsw i32 %4750, 1
  store i32 %4756, i32* %148, align 8
  %4757 = sext i32 %4750 to i64
  %4758 = load i32, i32* %118, align 4
  %4759 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %4755, i64 %4757, i32 0
  store i32 %4758, i32* %4759, align 8
  %4760 = load i64, i64* %134, align 8
  %4761 = add nsw i64 %4760, 1
  %4762 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %4755, i64 %4757, i32 1
  store i64 %4761, i64* %4762, align 8
  %4763 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %4755, i64 %4757, i32 2
  store i64 1, i64* %4763, align 8
  %4764 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %4755, i64 %4757, i32 3
  store %struct.TT_DefRecord_* %4740, %struct.TT_DefRecord_** %4764, align 8
  %4765 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4740, i64 0, i32 0
  %4766 = load i32, i32* %4765, align 8
  %4767 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4740, i64 0, i32 1
  %4768 = load i64, i64* %4767, align 8
  %4769 = add i32 %4766, -1
  %4770 = icmp ugt i32 %4769, 2
  br i1 %4770, label %4771, label %4772

4771:                                             ; preds = %4754
  store i32 132, i32* %145, align 8
  br label %4784

4772:                                             ; preds = %4754
  %4773 = sext i32 %4769 to i64
  %4774 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %4773, i32 0
  %4775 = load i8*, i8** %4774, align 8
  %4776 = icmp eq i8* %4775, null
  br i1 %4776, label %4777, label %4778

4777:                                             ; preds = %4772
  store i32 138, i32* %145, align 8
  br label %4784

4778:                                             ; preds = %4772
  %4779 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %4773, i32 1
  %4780 = load i64, i64* %4779, align 8
  %4781 = icmp slt i64 %4780, %4768
  br i1 %4781, label %4782, label %4783

4782:                                             ; preds = %4778
  store i32 131, i32* %145, align 8
  br label %4784

4783:                                             ; preds = %4778
  store i8* %4775, i8** %133, align 8
  store i64 %4780, i64* %137, align 8
  store i64 %4768, i64* %134, align 8
  store i32 %4766, i32* %118, align 4
  br label %4784

4784:                                             ; preds = %4771, %4777, %4782, %4783
  store i8 0, i8* %144, align 8
  br label %4788

4785:                                             ; preds = %4745, %4739
  %4786 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4740, i64 1
  %4787 = icmp ult %struct.TT_DefRecord_* %4786, %4737
  br i1 %4787, label %4739, label %4792

4788:                                             ; preds = %4057, %4129, %3504, %3456, %2973, %806, %4715, %2972, %4123, %399, %517, %537, %538, %544, %550, %693, %696, %699, %761, %762, %763, %840, %842, %844, %857, %860, %861, %866, %881, %1532, %1633, %1752, %1840, %2404, %2476, %2685, %2850, %2852, %2868, %2870, %2871, %2873, %2879, %2885, %2891, %2897, %2903, %2909, %2916, %2986, %2996, %2998, %3002, %3003, %3012, %3017, %3030, %3040, %3043, %3046, %3050, %3071, %3097, %3188, %3224, %3299, %3357, %3358, %3798, %3895, %4214, %4458, %411, %448, %461, %498, %587, %684, %706, %710, %718, %722, %730, %734, %742, %746, %758, %831, %834, %888, %892, %923, %927, %1001, %1012, %1016, %1075, %1112, %1195, %1291, %1306, %1332, %1341, %1360, %2025, %2276, %2290, %2316, %2342, %2402, %2515, %2568, %2577, %2612, %2630, %2636, %2640, %2655, %2694, %2698, %2714, %2923, %3010, %3027, %3035, %3038, %3077, %3081, %3155, %3229, %3255, %3258, %3264, %3290, %3293, %3353, %3416, %3432, %3448, %3452, %3480, %3496, %3500, %3567, %3576, %3577, %3624, %3628, %3631, %3647, %3713, %3893, %3902, %3907, %3908, %3913, %3914, %3917, %3926, %3938, %3942, %3950, %3958, %4014, %4037, %4125, %4126, %4205, %4268, %4644, %4649, %4700, %4712, %4784
  %4789 = load i32, i32* %145, align 8
  br label %4790

4790:                                             ; preds = %4788, %2595
  %4791 = phi i32 [ %4789, %4788 ], [ %2600, %2595 ]
  switch i32 %4791, label %4878 [
    i32 0, label %4852
    i32 128, label %4793
  ]

4792:                                             ; preds = %4269, %4206, %4015, %3568, %3354, %1002, %4785, %4731, %4734, %4215, %4218, %4152, %4155, %3961, %3964, %3514, %3517, %3300, %3303, %948, %951
  store i32 128, i32* %145, align 8
  br label %4793

4793:                                             ; preds = %4792, %4790
  %4794 = load %struct.TT_DefRecord_*, %struct.TT_DefRecord_** %146, align 8
  %4795 = icmp eq %struct.TT_DefRecord_* %4794, null
  br i1 %4795, label %4849, label %4796

4796:                                             ; preds = %4793
  %4797 = load i32, i32* %147, align 8
  %4798 = zext i32 %4797 to i64
  %4799 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4794, i64 %4798
  %4800 = icmp eq i32 %4797, 0
  br i1 %4800, label %4849, label %4801

4801:                                             ; preds = %4796, %4845
  %4802 = phi %struct.TT_DefRecord_* [ %4846, %4845 ], [ %4794, %4796 ]
  %4803 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4802, i64 0, i32 4
  %4804 = load i8, i8* %4803, align 4
  %4805 = icmp eq i8 %4804, 0
  br i1 %4805, label %4845, label %4806

4806:                                             ; preds = %4801
  %4807 = load i8, i8* %135, align 8
  %4808 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4802, i64 0, i32 3
  %4809 = load i32, i32* %4808, align 8
  %4810 = trunc i32 %4809 to i8
  %4811 = icmp eq i8 %4807, %4810
  br i1 %4811, label %4812, label %4845

4812:                                             ; preds = %4806
  %4813 = load i32, i32* %148, align 8
  %4814 = load i32, i32* %149, align 4
  %4815 = icmp slt i32 %4813, %4814
  br i1 %4815, label %4817, label %4816

4816:                                             ; preds = %4812
  store i32 134, i32* %145, align 8
  br label %4878

4817:                                             ; preds = %4812
  %4818 = load %struct.TT_CallRec_*, %struct.TT_CallRec_** %150, align 8
  %4819 = sext i32 %4813 to i64
  %4820 = load i32, i32* %118, align 4
  %4821 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %4818, i64 %4819, i32 0
  store i32 %4820, i32* %4821, align 8
  %4822 = load i64, i64* %134, align 8
  %4823 = add nsw i64 %4822, 1
  %4824 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %4818, i64 %4819, i32 1
  store i64 %4823, i64* %4824, align 8
  %4825 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %4818, i64 %4819, i32 2
  store i64 1, i64* %4825, align 8
  %4826 = getelementptr inbounds %struct.TT_CallRec_, %struct.TT_CallRec_* %4818, i64 %4819, i32 3
  store %struct.TT_DefRecord_* %4802, %struct.TT_DefRecord_** %4826, align 8
  %4827 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4802, i64 0, i32 0
  %4828 = load i32, i32* %4827, align 8
  %4829 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4802, i64 0, i32 1
  %4830 = load i64, i64* %4829, align 8
  %4831 = add i32 %4828, -1
  %4832 = icmp ugt i32 %4831, 2
  br i1 %4832, label %4833, label %4834

4833:                                             ; preds = %4817
  store i32 132, i32* %145, align 8
  br label %4878

4834:                                             ; preds = %4817
  %4835 = sext i32 %4831 to i64
  %4836 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %4835, i32 0
  %4837 = load i8*, i8** %4836, align 8
  %4838 = icmp eq i8* %4837, null
  br i1 %4838, label %4839, label %4840

4839:                                             ; preds = %4834
  store i32 138, i32* %145, align 8
  br label %4878

4840:                                             ; preds = %4834
  %4841 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 %4835, i32 1
  %4842 = load i64, i64* %4841, align 8
  %4843 = icmp slt i64 %4842, %4830
  br i1 %4843, label %4844, label %4848

4844:                                             ; preds = %4840
  store i32 131, i32* %145, align 8
  br label %4878

4845:                                             ; preds = %4801, %4806
  %4846 = getelementptr inbounds %struct.TT_DefRecord_, %struct.TT_DefRecord_* %4802, i64 1
  %4847 = icmp ult %struct.TT_DefRecord_* %4846, %4799
  br i1 %4847, label %4801, label %4849

4848:                                             ; preds = %4840
  store i8* %4837, i8** %133, align 8
  store i64 %4842, i64* %137, align 8
  store i64 %4830, i64* %134, align 8
  store i32 %4828, i32* %118, align 4
  br label %4865

4849:                                             ; preds = %4796, %4793, %4845
  store i32 128, i32* %145, align 8
  br label %4878

4850:                                             ; preds = %384, %384, %384, %384
  %4851 = load i64, i64* %142, align 8
  store i64 %4851, i64* %138, align 8
  br label %4856

4852:                                             ; preds = %4790
  %4853 = load i8, i8* %144, align 8
  %4854 = load i64, i64* %142, align 8
  store i64 %4854, i64* %138, align 8
  %4855 = icmp eq i8 %4853, 0
  br i1 %4855, label %4861, label %4856

4856:                                             ; preds = %4850, %4852
  %4857 = load i32, i32* %136, align 4
  %4858 = sext i32 %4857 to i64
  %4859 = load i64, i64* %134, align 8
  %4860 = add nsw i64 %4859, %4858
  store i64 %4860, i64* %134, align 8
  br label %4861

4861:                                             ; preds = %4852, %4856
  %4862 = add i64 %298, 1
  %4863 = icmp ugt i64 %4862, 1000000
  br i1 %4863, label %4864, label %4865

4864:                                             ; preds = %4861
  store i32 139, i32* %145, align 8
  br label %4878

4865:                                             ; preds = %4848, %4861
  %4866 = phi i64 [ %298, %4848 ], [ %4862, %4861 ]
  %4867 = load i64, i64* %134, align 8
  %4868 = load i64, i64* %137, align 8
  %4869 = icmp slt i64 %4867, %4868
  br i1 %4869, label %4874, label %4870

4870:                                             ; preds = %4865
  %4871 = load i32, i32* %148, align 8
  %4872 = icmp sgt i32 %4871, 0
  br i1 %4872, label %4873, label %4878

4873:                                             ; preds = %4870
  store i32 131, i32* %145, align 8
  br label %4878

4874:                                             ; preds = %4865
  %4875 = load i8, i8* %290, align 8
  %4876 = icmp eq i8 %4875, 0
  br i1 %4876, label %296, label %4878

4877:                                             ; preds = %310, %320
  store i32 131, i32* %145, align 8
  br label %4878

4878:                                             ; preds = %4790, %4874, %339, %383, %4849, %4864, %4873, %4877, %4753, %4714, %4661, %4237, %4174, %4033, %3983, %3941, %3929, %3892, %3890, %3838, %3831, %3803, %3650, %3536, %3503, %3455, %3401, %3322, %3298, %3289, %3272, %3263, %3254, %3237, %3125, %3080, %3026, %3009, %2968, %2697, %2651, %2639, %2625, %2580, %2531, %2497, %2372, %2293, %2271, %1888, %1344, %1331, %1326, %1320, %1296, %1290, %1288, %1237, %1230, %1200, %1196, %1163, %1119, %1118, %1074, %1015, %970, %926, %891, %839, %830, %813, %800, %757, %745, %733, %721, %709, %590, %464, %414, %2872, %4816, %4833, %4844, %4839, %4870
  %4879 = phi i32 [ 0, %4870 ], [ 138, %4839 ], [ 131, %4844 ], [ 132, %4833 ], [ 134, %4816 ], [ 135, %2872 ], [ 134, %414 ], [ 134, %464 ], [ 134, %590 ], [ 134, %709 ], [ 134, %721 ], [ 134, %733 ], [ 134, %745 ], [ 132, %757 ], [ 131, %800 ], [ 132, %813 ], [ 132, %830 ], [ 139, %839 ], [ 134, %891 ], [ 134, %926 ], [ 130, %970 ], [ 134, %1015 ], [ 130, %1074 ], [ 139, %1118 ], [ 134, %1119 ], [ 130, %1163 ], [ 134, %1196 ], [ 156, %1200 ], [ 140, %1230 ], [ 140, %1237 ], [ 131, %1288 ], [ 137, %1290 ], [ 136, %1296 ], [ 132, %1320 ], [ 138, %1326 ], [ 131, %1331 ], [ 134, %1344 ], [ 134, %1888 ], [ 134, %2271 ], [ 134, %2293 ], [ 134, %2372 ], [ 130, %2497 ], [ 130, %2531 ], [ 134, %2580 ], [ 134, %2625 ], [ 134, %2639 ], [ 134, %2651 ], [ 134, %2697 ], [ 131, %2968 ], [ 132, %3009 ], [ 133, %3026 ], [ 134, %3080 ], [ 134, %3125 ], [ 132, %3237 ], [ 132, %3254 ], [ 139, %3263 ], [ 132, %3272 ], [ 132, %3289 ], [ 139, %3298 ], [ 130, %3322 ], [ 134, %3401 ], [ 134, %3455 ], [ 134, %3503 ], [ 130, %3536 ], [ 134, %3650 ], [ 156, %3803 ], [ 141, %3831 ], [ 141, %3838 ], [ 131, %3890 ], [ 137, %3892 ], [ 134, %3929 ], [ 134, %3941 ], [ 130, %3983 ], [ 130, %4033 ], [ 130, %4174 ], [ 130, %4237 ], [ 130, %4661 ], [ 130, %4714 ], [ 130, %4753 ], [ 131, %4877 ], [ 131, %4873 ], [ 139, %4864 ], [ 128, %4849 ], [ 130, %383 ], [ 129, %339 ], [ %4791, %4790 ], [ 0, %4874 ]
  %4880 = load i64, i64* %112, align 8
  store i64 %4880, i64* %109, align 8
  %4881 = load i64, i64* %117, align 8
  store i64 %4881, i64* %114, align 8
  ret i32 %4879
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @Current_Ppem_Stretched(%struct.TT_ExecContextRec_* nocapture) #2 {
  %2 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 2
  %3 = load i16, i16* %2, align 8
  %4 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16
  %5 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %38

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 4, i32 1
  %10 = load i16, i16* %9, align 2
  %11 = sext i16 %10 to i32
  %12 = icmp eq i16 %10, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.TT_Size_Metrics_, %struct.TT_Size_Metrics_* %4, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  br label %36

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 4, i32 0
  %18 = load i16, i16* %17, align 2
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 1
  %22 = load i64, i64* %21, align 8
  br label %36

23:                                               ; preds = %16
  %24 = sext i16 %18 to i32
  %25 = getelementptr inbounds %struct.TT_Size_Metrics_, %struct.TT_Size_Metrics_* %4, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = tail call fastcc i32 @TT_MulFix14_long_long(i32 %27, i32 %24) #12
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %31 to i32
  %33 = tail call fastcc i32 @TT_MulFix14_long_long(i32 %32, i32 %11) #12
  %34 = sext i32 %33 to i64
  %35 = tail call i64 @FT_Hypot(i64 %29, i64 %34) #11
  br label %36

36:                                               ; preds = %23, %20, %13
  %37 = phi i64 [ %15, %13 ], [ %22, %20 ], [ %35, %23 ]
  store i64 %37, i64* %5, align 8
  br label %38

38:                                               ; preds = %36, %1
  %39 = phi i64 [ %6, %1 ], [ %37, %36 ]
  %40 = zext i16 %3 to i64
  %41 = shl i64 %39, 32
  %42 = ashr exact i64 %41, 32
  %43 = mul nsw i64 %42, %40
  %44 = ashr i64 %43, 63
  %45 = add nsw i64 %43, 32768
  %46 = add nsw i64 %45, %44
  %47 = shl i64 %46, 16
  %48 = ashr i64 %47, 32
  ret i64 %48
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @Read_CVT_Stretched(%struct.TT_ExecContextRec_* nocapture, i64) #2 {
  %3 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 27
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 %1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16
  %8 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %41

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 4, i32 1
  %13 = load i16, i16* %12, align 2
  %14 = sext i16 %13 to i32
  %15 = icmp eq i16 %13, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.TT_Size_Metrics_, %struct.TT_Size_Metrics_* %7, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  br label %39

19:                                               ; preds = %11
  %20 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 4, i32 0
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 1
  %25 = load i64, i64* %24, align 8
  br label %39

26:                                               ; preds = %19
  %27 = sext i16 %21 to i32
  %28 = getelementptr inbounds %struct.TT_Size_Metrics_, %struct.TT_Size_Metrics_* %7, i64 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %29 to i32
  %31 = tail call fastcc i32 @TT_MulFix14_long_long(i32 %30, i32 %27) #12
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i32
  %36 = tail call fastcc i32 @TT_MulFix14_long_long(i32 %35, i32 %14) #12
  %37 = sext i32 %36 to i64
  %38 = tail call i64 @FT_Hypot(i64 %32, i64 %37) #11
  br label %39

39:                                               ; preds = %26, %23, %16
  %40 = phi i64 [ %18, %16 ], [ %25, %23 ], [ %38, %26 ]
  store i64 %40, i64* %8, align 8
  br label %41

41:                                               ; preds = %39, %2
  %42 = phi i64 [ %9, %2 ], [ %40, %39 ]
  %43 = shl i64 %6, 32
  %44 = ashr exact i64 %43, 32
  %45 = shl i64 %42, 32
  %46 = ashr exact i64 %45, 32
  %47 = mul nsw i64 %46, %44
  %48 = ashr i64 %47, 63
  %49 = add nsw i64 %47, 32768
  %50 = add nsw i64 %49, %48
  %51 = shl i64 %50, 16
  %52 = ashr i64 %51, 32
  ret i64 %52
}

; Function Attrs: nounwind ssp uwtable
define internal void @Write_CVT_Stretched(%struct.TT_ExecContextRec_* nocapture, i64, i64) #2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 18
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 3
  br i1 %7, label %8, label %49

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 27
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 30
  %12 = load i64*, i64** %11, align 8
  %13 = icmp eq i64* %10, %12
  %14 = bitcast i64* %10 to i8*
  br i1 %13, label %15, label %49

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 2
  %17 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %16, align 8
  %18 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 28
  %19 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 29
  %20 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 26
  %21 = load i64, i64* %20, align 8
  %22 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #11
  store i32 -1431655766, i32* %4, align 4
  %23 = bitcast i64** %19 to i8**
  %24 = load i64, i64* %18, align 8
  %25 = icmp ult i64 %24, %21
  br i1 %25, label %29, label %26

26:                                               ; preds = %15
  %27 = load i8*, i8** %23, align 8
  %28 = shl i64 %24, 3
  br label %41

29:                                               ; preds = %15
  %30 = shl i64 %24, 3
  %31 = shl i64 %21, 3
  %32 = load i8*, i8** %23, align 8
  %33 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %17, i64 1, i64 %30, i64 %31, i8* %32, i32* nonnull %4) #11
  store i8* %33, i8** %23, align 8
  %34 = load i32, i32* %4, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %29
  store i64 %21, i64* %18, align 8
  %37 = bitcast i64** %9 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %41

39:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #11
  %40 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 3
  store i32 %34, i32* %40, align 8
  br label %49

41:                                               ; preds = %36, %26
  %42 = phi i64 [ %28, %26 ], [ %31, %36 ]
  %43 = phi i8* [ %14, %26 ], [ %38, %36 ]
  %44 = phi i8* [ %27, %26 ], [ %33, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #11
  %45 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 3
  store i32 0, i32* %45, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %43, i64 %42, i1 false) #11
  %46 = bitcast i64** %19 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast i64** %9 to i64*
  store i64 %47, i64* %48, align 8
  br label %49

49:                                               ; preds = %3, %8, %39, %41
  %50 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %94

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16
  %55 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 3
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %88

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 4, i32 1
  %60 = load i16, i16* %59, align 2
  %61 = sext i16 %60 to i32
  %62 = icmp eq i16 %60, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.TT_Size_Metrics_, %struct.TT_Size_Metrics_* %54, i64 0, i32 0
  %65 = load i64, i64* %64, align 8
  br label %86

66:                                               ; preds = %58
  %67 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 4, i32 0
  %68 = load i16, i16* %67, align 2
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 1
  %72 = load i64, i64* %71, align 8
  br label %86

73:                                               ; preds = %66
  %74 = sext i16 %68 to i32
  %75 = getelementptr inbounds %struct.TT_Size_Metrics_, %struct.TT_Size_Metrics_* %54, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = trunc i64 %76 to i32
  %78 = call fastcc i32 @TT_MulFix14_long_long(i32 %77, i32 %74) #12
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = trunc i64 %81 to i32
  %83 = call fastcc i32 @TT_MulFix14_long_long(i32 %82, i32 %61) #12
  %84 = sext i32 %83 to i64
  %85 = call i64 @FT_Hypot(i64 %79, i64 %84) #11
  br label %86

86:                                               ; preds = %73, %70, %63
  %87 = phi i64 [ %65, %63 ], [ %72, %70 ], [ %85, %73 ]
  store i64 %87, i64* %55, align 8
  br label %88

88:                                               ; preds = %86, %53
  %89 = phi i64 [ %56, %53 ], [ %87, %86 ]
  %90 = call i64 @FT_DivFix(i64 %2, i64 %89) #11
  %91 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 27
  %92 = load i64*, i64** %91, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 %1
  store i64 %90, i64* %93, align 8
  br label %94

94:                                               ; preds = %49, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @Move_CVT_Stretched(%struct.TT_ExecContextRec_* nocapture, i64, i64) #2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 18
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 3
  br i1 %7, label %8, label %49

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 27
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 30
  %12 = load i64*, i64** %11, align 8
  %13 = icmp eq i64* %10, %12
  %14 = bitcast i64* %10 to i8*
  br i1 %13, label %15, label %49

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 2
  %17 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %16, align 8
  %18 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 28
  %19 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 29
  %20 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 26
  %21 = load i64, i64* %20, align 8
  %22 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #11
  store i32 -1431655766, i32* %4, align 4
  %23 = bitcast i64** %19 to i8**
  %24 = load i64, i64* %18, align 8
  %25 = icmp ult i64 %24, %21
  br i1 %25, label %29, label %26

26:                                               ; preds = %15
  %27 = load i8*, i8** %23, align 8
  %28 = shl i64 %24, 3
  br label %41

29:                                               ; preds = %15
  %30 = shl i64 %24, 3
  %31 = shl i64 %21, 3
  %32 = load i8*, i8** %23, align 8
  %33 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %17, i64 1, i64 %30, i64 %31, i8* %32, i32* nonnull %4) #11
  store i8* %33, i8** %23, align 8
  %34 = load i32, i32* %4, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %29
  store i64 %21, i64* %18, align 8
  %37 = bitcast i64** %9 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %41

39:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #11
  %40 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 3
  store i32 %34, i32* %40, align 8
  br label %49

41:                                               ; preds = %36, %26
  %42 = phi i64 [ %28, %26 ], [ %31, %36 ]
  %43 = phi i8* [ %14, %26 ], [ %38, %36 ]
  %44 = phi i8* [ %27, %26 ], [ %33, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #11
  %45 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 3
  store i32 0, i32* %45, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %43, i64 %42, i1 false) #11
  %46 = bitcast i64** %19 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast i64** %9 to i64*
  store i64 %47, i64* %48, align 8
  br label %49

49:                                               ; preds = %3, %8, %39, %41
  %50 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %98

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 27
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 %1
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16
  %59 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 3
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %92

62:                                               ; preds = %53
  %63 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 4, i32 1
  %64 = load i16, i16* %63, align 2
  %65 = sext i16 %64 to i32
  %66 = icmp eq i16 %64, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = getelementptr inbounds %struct.TT_Size_Metrics_, %struct.TT_Size_Metrics_* %58, i64 0, i32 0
  %69 = load i64, i64* %68, align 8
  br label %90

70:                                               ; preds = %62
  %71 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 4, i32 0
  %72 = load i16, i16* %71, align 2
  %73 = icmp eq i16 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 1
  %76 = load i64, i64* %75, align 8
  br label %90

77:                                               ; preds = %70
  %78 = sext i16 %72 to i32
  %79 = getelementptr inbounds %struct.TT_Size_Metrics_, %struct.TT_Size_Metrics_* %58, i64 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = trunc i64 %80 to i32
  %82 = call fastcc i32 @TT_MulFix14_long_long(i32 %81, i32 %78) #12
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = trunc i64 %85 to i32
  %87 = call fastcc i32 @TT_MulFix14_long_long(i32 %86, i32 %65) #12
  %88 = sext i32 %87 to i64
  %89 = call i64 @FT_Hypot(i64 %83, i64 %88) #11
  br label %90

90:                                               ; preds = %77, %74, %67
  %91 = phi i64 [ %69, %67 ], [ %76, %74 ], [ %89, %77 ]
  store i64 %91, i64* %59, align 8
  br label %92

92:                                               ; preds = %90, %53
  %93 = phi i64 [ %60, %53 ], [ %91, %90 ]
  %94 = call i64 @FT_DivFix(i64 %2, i64 %93) #11
  %95 = add i64 %94, %57
  %96 = load i64*, i64** %54, align 8
  %97 = getelementptr inbounds i64, i64* %96, i64 %1
  store i64 %95, i64* %97, align 8
  br label %98

98:                                               ; preds = %49, %92
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @Current_Ppem(%struct.TT_ExecContextRec_* nocapture readonly) #5 {
  %2 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 2
  %3 = load i16, i16* %2, align 8
  %4 = zext i16 %3 to i64
  ret i64 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @Read_CVT(%struct.TT_ExecContextRec_* nocapture readonly, i64) #5 {
  %3 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 27
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 %1
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Write_CVT(%struct.TT_ExecContextRec_* nocapture, i64, i64) #2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 18
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 3
  br i1 %7, label %8, label %49

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 27
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 30
  %12 = load i64*, i64** %11, align 8
  %13 = icmp eq i64* %10, %12
  %14 = bitcast i64* %10 to i8*
  br i1 %13, label %15, label %49

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 2
  %17 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %16, align 8
  %18 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 28
  %19 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 29
  %20 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 26
  %21 = load i64, i64* %20, align 8
  %22 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #11
  store i32 -1431655766, i32* %4, align 4
  %23 = bitcast i64** %19 to i8**
  %24 = load i64, i64* %18, align 8
  %25 = icmp ult i64 %24, %21
  br i1 %25, label %29, label %26

26:                                               ; preds = %15
  %27 = load i8*, i8** %23, align 8
  %28 = shl i64 %24, 3
  br label %41

29:                                               ; preds = %15
  %30 = shl i64 %24, 3
  %31 = shl i64 %21, 3
  %32 = load i8*, i8** %23, align 8
  %33 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %17, i64 1, i64 %30, i64 %31, i8* %32, i32* nonnull %4) #11
  store i8* %33, i8** %23, align 8
  %34 = load i32, i32* %4, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %29
  store i64 %21, i64* %18, align 8
  %37 = bitcast i64** %9 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %41

39:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #11
  %40 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 3
  store i32 %34, i32* %40, align 8
  br label %49

41:                                               ; preds = %36, %26
  %42 = phi i64 [ %28, %26 ], [ %31, %36 ]
  %43 = phi i8* [ %14, %26 ], [ %38, %36 ]
  %44 = phi i8* [ %27, %26 ], [ %33, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #11
  %45 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 3
  store i32 0, i32* %45, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %43, i64 %42, i1 false) #11
  %46 = bitcast i64** %19 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast i64** %9 to i64*
  store i64 %47, i64* %48, align 8
  br label %49

49:                                               ; preds = %3, %8, %39, %41
  %50 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 27
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 %1
  store i64 %2, i64* %56, align 8
  br label %57

57:                                               ; preds = %49, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @Move_CVT(%struct.TT_ExecContextRec_* nocapture, i64, i64) #2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 18
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 3
  br i1 %7, label %8, label %49

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 27
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 30
  %12 = load i64*, i64** %11, align 8
  %13 = icmp eq i64* %10, %12
  %14 = bitcast i64* %10 to i8*
  br i1 %13, label %15, label %49

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 2
  %17 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %16, align 8
  %18 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 28
  %19 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 29
  %20 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 26
  %21 = load i64, i64* %20, align 8
  %22 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #11
  store i32 -1431655766, i32* %4, align 4
  %23 = bitcast i64** %19 to i8**
  %24 = load i64, i64* %18, align 8
  %25 = icmp ult i64 %24, %21
  br i1 %25, label %29, label %26

26:                                               ; preds = %15
  %27 = load i8*, i8** %23, align 8
  %28 = shl i64 %24, 3
  br label %41

29:                                               ; preds = %15
  %30 = shl i64 %24, 3
  %31 = shl i64 %21, 3
  %32 = load i8*, i8** %23, align 8
  %33 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %17, i64 1, i64 %30, i64 %31, i8* %32, i32* nonnull %4) #11
  store i8* %33, i8** %23, align 8
  %34 = load i32, i32* %4, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %29
  store i64 %21, i64* %18, align 8
  %37 = bitcast i64** %9 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %41

39:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #11
  %40 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 3
  store i32 %34, i32* %40, align 8
  br label %49

41:                                               ; preds = %36, %26
  %42 = phi i64 [ %28, %26 ], [ %31, %36 ]
  %43 = phi i8* [ %14, %26 ], [ %38, %36 ]
  %44 = phi i8* [ %27, %26 ], [ %33, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #11
  %45 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 3
  store i32 0, i32* %45, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %43, i64 %42, i1 false) #11
  %46 = bitcast i64** %19 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast i64** %9 to i64*
  store i64 %47, i64* %48, align 8
  br label %49

49:                                               ; preds = %3, %8, %39, %41
  %50 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 27
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 %1
  %57 = load i64, i64* %56, align 8
  %58 = add i64 %57, %2
  store i64 %58, i64* %56, align 8
  br label %59

59:                                               ; preds = %49, %53
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @Compute_Funcs(%struct.TT_ExecContextRec_*) unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 5, i32 0
  %3 = load i16, i16* %2, align 2
  %4 = icmp eq i16 %3, 16384
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 4, i32 0
  %7 = load i16, i16* %6, align 2
  %8 = sext i16 %7 to i64
  %9 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 59
  store i64 %8, i64* %9, align 8
  br label %35

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 5, i32 1
  %12 = load i16, i16* %11, align 2
  %13 = icmp eq i16 %12, 16384
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 4, i32 1
  %16 = load i16, i16* %15, align 2
  %17 = sext i16 %16 to i64
  %18 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 59
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 4, i32 0
  %20 = load i16, i16* %19, align 2
  br label %35

21:                                               ; preds = %10
  %22 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 4, i32 0
  %23 = load i16, i16* %22, align 2
  %24 = sext i16 %23 to i64
  %25 = sext i16 %3 to i64
  %26 = mul nsw i64 %24, %25
  %27 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 4, i32 1
  %28 = load i16, i16* %27, align 2
  %29 = sext i16 %28 to i64
  %30 = sext i16 %12 to i64
  %31 = mul nsw i64 %29, %30
  %32 = add nsw i64 %31, %26
  %33 = ashr i64 %32, 14
  %34 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 59
  store i64 %33, i64* %34, align 8
  br label %35

35:                                               ; preds = %14, %21, %5
  %36 = phi i64 [ %17, %14 ], [ %33, %21 ], [ %8, %5 ]
  %37 = phi i16 [ %20, %14 ], [ %23, %21 ], [ %7, %5 ]
  %38 = icmp eq i16 %37, 16384
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 61
  store i64 (%struct.TT_ExecContextRec_*, i64, i64)* @Project_x, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %40, align 8
  br label %48

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 4, i32 1
  %43 = load i16, i16* %42, align 2
  %44 = icmp eq i16 %43, 16384
  %45 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 61
  br i1 %44, label %46, label %47

46:                                               ; preds = %41
  store i64 (%struct.TT_ExecContextRec_*, i64, i64)* @Project_y, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %45, align 8
  br label %48

47:                                               ; preds = %41
  store i64 (%struct.TT_ExecContextRec_*, i64, i64)* @Project, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %45, align 8
  br label %48

48:                                               ; preds = %46, %47, %39
  %49 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 3, i32 0
  %50 = load i16, i16* %49, align 2
  %51 = icmp eq i16 %50, 16384
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 62
  store i64 (%struct.TT_ExecContextRec_*, i64, i64)* @Project_x, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %53, align 8
  br label %61

54:                                               ; preds = %48
  %55 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 3, i32 1
  %56 = load i16, i16* %55, align 2
  %57 = icmp eq i16 %56, 16384
  %58 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 62
  br i1 %57, label %59, label %60

59:                                               ; preds = %54
  store i64 (%struct.TT_ExecContextRec_*, i64, i64)* @Project_y, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %58, align 8
  br label %61

60:                                               ; preds = %54
  store i64 (%struct.TT_ExecContextRec_*, i64, i64)* @Dual_Project, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %58, align 8
  br label %61

61:                                               ; preds = %59, %60, %52
  %62 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 64
  %63 = bitcast void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)** %62 to <2 x void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*>*
  store <2 x void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*> <void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)* @Direct_Move, void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)* @Direct_Move_Orig>, <2 x void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*>* %63, align 8
  %64 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 59
  %65 = icmp eq i64 %36, 16384
  br i1 %65, label %66, label %75

66:                                               ; preds = %61
  br i1 %4, label %67, label %69

67:                                               ; preds = %66
  %68 = bitcast void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)** %62 to <2 x void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*>*
  store <2 x void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*> <void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)* @Direct_Move_X, void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)* @Direct_Move_Orig_X>, <2 x void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*>* %68, align 8
  br label %75

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 5, i32 1
  %71 = load i16, i16* %70, align 2
  %72 = icmp eq i16 %71, 16384
  br i1 %72, label %73, label %75

73:                                               ; preds = %69
  %74 = bitcast void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)** %62 to <2 x void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*>*
  store <2 x void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*> <void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)* @Direct_Move_Y, void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)* @Direct_Move_Orig_Y>, <2 x void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*>* %74, align 8
  br label %75

75:                                               ; preds = %67, %73, %69, %61
  %76 = icmp slt i64 %36, 0
  %77 = sub nsw i64 0, %36
  %78 = select i1 %76, i64 %77, i64 %36
  %79 = icmp slt i64 %78, 1024
  br i1 %79, label %80, label %81

80:                                               ; preds = %75
  store i64 16384, i64* %64, align 8
  br label %81

81:                                               ; preds = %80, %75
  %82 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 3
  store i64 0, i64* %82, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @Ins_DELTAP(%struct.TT_ExecContextRec_*, i64* nocapture readonly) unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 66
  %4 = load i64 (%struct.TT_ExecContextRec_*)*, i64 (%struct.TT_ExecContextRec_*)** %3, align 8
  %5 = tail call i64 %4(%struct.TT_ExecContextRec_* %0) #11
  %6 = load i64, i64* %1, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %114, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 7
  %10 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 6
  %11 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 9
  %12 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 9, i32 3
  %13 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 58
  %14 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 3
  %15 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 23
  %16 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 13
  %17 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 14
  %18 = bitcast %struct.TT_ExecContextRec_* %0 to %struct.FT_FaceRec_**
  %19 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 73
  %20 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 74
  %21 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 75
  %22 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 57
  %23 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 5, i32 1
  %24 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 9, i32 8
  %25 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 64
  br label %26

26:                                               ; preds = %8, %111
  %27 = phi i64 [ 1, %8 ], [ %112, %111 ]
  %28 = load i64, i64* %9, align 8
  %29 = icmp slt i64 %28, 2
  br i1 %29, label %30, label %35

30:                                               ; preds = %26
  %31 = load i8, i8* %13, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %30
  store i32 129, i32* %14, align 8
  br label %34

34:                                               ; preds = %30, %33
  store i64 0, i64* %9, align 8
  br label %114

35:                                               ; preds = %26
  %36 = add nsw i64 %28, -2
  store i64 %36, i64* %9, align 8
  %37 = load i64*, i64** %10, align 8
  %38 = add nsw i64 %28, -1
  %39 = getelementptr inbounds i64, i64* %37, i64 %38
  %40 = load i64, i64* %39, align 8
  %41 = trunc i64 %40 to i16
  %42 = getelementptr inbounds i64, i64* %37, i64 %36
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %40 to i32
  %45 = and i32 %44, 65535
  %46 = load i16, i16* %12, align 4
  %47 = zext i16 %46 to i32
  %48 = icmp ult i32 %45, %47
  br i1 %48, label %49, label %107

49:                                               ; preds = %35
  %50 = lshr i64 %43, 4
  %51 = and i64 %50, 15
  %52 = load i8, i8* %15, align 8
  switch i8 %52, label %57 [
    i8 114, label %55
    i8 113, label %53
  ]

53:                                               ; preds = %49
  %54 = or i64 %51, 16
  br label %57

55:                                               ; preds = %49
  %56 = or i64 %51, 32
  br label %57

57:                                               ; preds = %49, %55, %53
  %58 = phi i64 [ %51, %49 ], [ %54, %53 ], [ %56, %55 ]
  %59 = load i16, i16* %16, align 8
  %60 = zext i16 %59 to i64
  %61 = add nsw i64 %58, %60
  %62 = icmp eq i64 %5, %61
  br i1 %62, label %63, label %111

63:                                               ; preds = %57
  %64 = and i64 %43, 15
  %65 = add nsw i64 %64, -8
  %66 = icmp sgt i64 %65, -1
  %67 = add nsw i64 %64, -7
  %68 = select i1 %66, i64 %67, i64 %65
  %69 = load i16, i16* %17, align 2
  %70 = zext i16 %69 to i64
  %71 = sub nsw i64 6, %70
  %72 = and i64 %71, 4294967295
  %73 = shl i64 %68, %72
  %74 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %18, align 8
  %75 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %74, i64 0, i32 24
  %76 = bitcast %struct.FT_DriverRec_** %75 to %struct.TT_DriverRec_**
  %77 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %76, align 8
  %78 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %77, i64 0, i32 2
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 40
  br i1 %80, label %81, label %105

81:                                               ; preds = %63
  %82 = load i8, i8* %19, align 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %105, label %84

84:                                               ; preds = %81
  %85 = load i8, i8* %20, align 4
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %84
  %88 = load i8, i8* %21, align 1
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %111

90:                                               ; preds = %87, %84
  %91 = load i8, i8* %22, align 8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %90
  %94 = load i16, i16* %23, align 2
  %95 = icmp eq i16 %94, 0
  br i1 %95, label %96, label %103

96:                                               ; preds = %93, %90
  %97 = load i8*, i8** %24, align 8
  %98 = and i64 %40, 65535
  %99 = getelementptr inbounds i8, i8* %97, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = and i8 %100, 16
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %111, label %103

103:                                              ; preds = %93, %96
  %104 = load void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*, void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)** %25, align 8
  tail call void %104(%struct.TT_ExecContextRec_* %0, %struct.TT_GlyphZoneRec_* %11, i16 zeroext %41, i64 %73) #11
  br label %111

105:                                              ; preds = %81, %63
  %106 = load void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)*, void (%struct.TT_ExecContextRec_*, %struct.TT_GlyphZoneRec_*, i16, i64)** %25, align 8
  tail call void %106(%struct.TT_ExecContextRec_* %0, %struct.TT_GlyphZoneRec_* %11, i16 zeroext %41, i64 %73) #11
  br label %111

107:                                              ; preds = %35
  %108 = load i8, i8* %13, align 1
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %111, label %110

110:                                              ; preds = %107
  store i32 134, i32* %14, align 8
  br label %111

111:                                              ; preds = %107, %87, %96, %105, %103, %57, %110
  %112 = add i64 %27, 1
  %113 = icmp ugt i64 %112, %6
  br i1 %113, label %114, label %26

114:                                              ; preds = %111, %2, %34
  %115 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 7
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 8
  store i64 %116, i64* %117, align 8
  ret void
}

declare hidden i8* @ft_service_list_lookup(%struct.FT_ServiceDescRec_*, i8*) local_unnamed_addr #4

declare %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal i32 @TT_Set_MM_Blend(%struct.TT_FaceRec_*, i32, i64* nocapture readonly) #2 {
  %4 = tail call fastcc i32 @tt_set_mm_blend(%struct.TT_FaceRec_* %0, i32 %1, i64* %2, i8 zeroext 1)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %3
  %7 = icmp eq i32 %1, 0
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, -32769
  %11 = or i64 %9, 32768
  %12 = select i1 %7, i64 %10, i64 %11
  store i64 %12, i64* %8, align 8
  br label %13

13:                                               ; preds = %3, %6
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @TT_Get_MM_Blend(%struct.TT_FaceRec_*, i32, i64* nocapture) #2 {
  %4 = bitcast i64* %2 to i8*
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 50
  %6 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %5, align 8
  %7 = icmp eq %struct.GX_BlendRec_* %6, null
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  %9 = tail call i32 @TT_Get_MM_Var(%struct.TT_FaceRec_* %0, %struct.FT_MM_Var_** null)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %121

11:                                               ; preds = %8
  %12 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %5, align 8
  br label %13

13:                                               ; preds = %11, %3
  %14 = phi %struct.GX_BlendRec_* [ %12, %11 ], [ %6, %3 ]
  %15 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %14, i64 0, i32 1
  %16 = load i64*, i64** %15, align 8
  %17 = icmp eq i64* %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @tt_set_mm_blend(%struct.TT_FaceRec_* %0, i32 0, i64* null, i8 zeroext 1)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %121

21:                                               ; preds = %18, %13
  %22 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp ult i32 %23, %1
  %25 = select i1 %24, i32 %23, i32 %1
  %26 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 49
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne i32 %25, 0
  br i1 %28, label %39, label %30

30:                                               ; preds = %21
  br i1 %29, label %31, label %109

31:                                               ; preds = %30
  %32 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %14, i64 0, i32 2
  %33 = zext i32 %25 to i64
  %34 = add nsw i64 %33, -1
  %35 = and i64 %33, 3
  %36 = icmp ult i64 %34, 3
  br i1 %36, label %92, label %37

37:                                               ; preds = %31
  %38 = sub nsw i64 %33, %35
  br label %48

39:                                               ; preds = %21
  br i1 %29, label %40, label %109

40:                                               ; preds = %39
  %41 = zext i32 %25 to i64
  %42 = shl nuw nsw i64 %41, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 %42, i1 false)
  %43 = add nsw i64 %41, -1
  %44 = and i64 %41, 7
  %45 = icmp ult i64 %43, 7
  br i1 %45, label %79, label %46

46:                                               ; preds = %40
  %47 = sub nsw i64 %41, %44
  br label %73

48:                                               ; preds = %48, %37
  %49 = phi i64 [ 0, %37 ], [ %70, %48 ]
  %50 = phi i64 [ %38, %37 ], [ %71, %48 ]
  %51 = load i64*, i64** %32, align 8
  %52 = getelementptr inbounds i64, i64* %51, i64 %49
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds i64, i64* %2, i64 %49
  store i64 %53, i64* %54, align 8
  %55 = or i64 %49, 1
  %56 = load i64*, i64** %32, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 %55
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds i64, i64* %2, i64 %55
  store i64 %58, i64* %59, align 8
  %60 = or i64 %49, 2
  %61 = load i64*, i64** %32, align 8
  %62 = getelementptr inbounds i64, i64* %61, i64 %60
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds i64, i64* %2, i64 %60
  store i64 %63, i64* %64, align 8
  %65 = or i64 %49, 3
  %66 = load i64*, i64** %32, align 8
  %67 = getelementptr inbounds i64, i64* %66, i64 %65
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds i64, i64* %2, i64 %65
  store i64 %68, i64* %69, align 8
  %70 = add nuw nsw i64 %49, 4
  %71 = add i64 %50, -4
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %92, label %48

73:                                               ; preds = %73, %46
  %74 = phi i64 [ 0, %46 ], [ %76, %73 ]
  %75 = phi i64 [ %47, %46 ], [ %77, %73 ]
  %76 = add nuw nsw i64 %74, 8
  %77 = add i64 %75, -8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %73

79:                                               ; preds = %73, %40
  %80 = phi i64 [ undef, %40 ], [ %76, %73 ]
  %81 = phi i64 [ 0, %40 ], [ %76, %73 ]
  %82 = icmp eq i64 %44, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %79, %83
  %84 = phi i64 [ %86, %83 ], [ %81, %79 ]
  %85 = phi i64 [ %87, %83 ], [ %44, %79 ]
  %86 = add nuw nsw i64 %84, 1
  %87 = add i64 %85, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %83, !llvm.loop !13

89:                                               ; preds = %83, %79
  %90 = phi i64 [ %80, %79 ], [ %86, %83 ]
  %91 = trunc i64 %90 to i32
  br label %109

92:                                               ; preds = %48, %31
  %93 = phi i64 [ undef, %31 ], [ %70, %48 ]
  %94 = phi i64 [ 0, %31 ], [ %70, %48 ]
  %95 = icmp eq i64 %35, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %92, %96
  %97 = phi i64 [ %103, %96 ], [ %94, %92 ]
  %98 = phi i64 [ %104, %96 ], [ %35, %92 ]
  %99 = load i64*, i64** %32, align 8
  %100 = getelementptr inbounds i64, i64* %99, i64 %97
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds i64, i64* %2, i64 %97
  store i64 %101, i64* %102, align 8
  %103 = add nuw nsw i64 %97, 1
  %104 = add i64 %98, -1
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %96, !llvm.loop !14

106:                                              ; preds = %96, %92
  %107 = phi i64 [ %93, %92 ], [ %103, %96 ]
  %108 = trunc i64 %107 to i32
  br label %109

109:                                              ; preds = %106, %89, %30, %39
  %110 = phi i32 [ 0, %39 ], [ 0, %30 ], [ %91, %89 ], [ %108, %106 ]
  %111 = icmp ult i32 %110, %1
  br i1 %111, label %112, label %121

112:                                              ; preds = %109
  %113 = zext i32 %110 to i64
  %114 = getelementptr i64, i64* %2, i64 %113
  %115 = bitcast i64* %114 to i8*
  %116 = xor i32 %110, -1
  %117 = add i32 %116, %1
  %118 = zext i32 %117 to i64
  %119 = shl nuw nsw i64 %118, 3
  %120 = add nuw nsw i64 %119, 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 %120, i1 false)
  br label %121

121:                                              ; preds = %112, %109, %18, %8
  %122 = phi i32 [ %9, %8 ], [ %19, %18 ], [ 0, %109 ], [ 0, %112 ]
  ret i32 %122
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @TT_Get_MM_Var(%struct.TT_FaceRec_*, %struct.FT_MM_Var_**) #2 {
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.GX_FVar_Head_, align 8
  %8 = alloca %struct.fvar_axis_, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 26
  %12 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %11, align 8
  %13 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 25
  %14 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %13, align 8
  %15 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  store i64 -6148914691236517206, i64* %5, align 8
  %16 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #11
  store i32 0, i32* %6, align 4
  %17 = bitcast %struct.GX_FVar_Head_* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false)
  %18 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 50
  %19 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %18, align 8
  %20 = icmp eq %struct.GX_BlendRec_* %19, null
  br i1 %20, label %21, label %57

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %23 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %22, align 8
  %24 = call i32 %23(%struct.TT_FaceRec_* %0, i64 1735811442, %struct.FT_StreamRec_* %12, i64* nonnull %5) #11
  store i32 %24, i32* %6, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %21
  %27 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %22, align 8
  %28 = call i32 %27(%struct.TT_FaceRec_* %0, i64 1128678962, %struct.FT_StreamRec_* %12, i64* nonnull %5) #11
  store i32 %28, i32* %6, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %711

30:                                               ; preds = %26, %21
  %31 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %22, align 8
  %32 = call i32 %31(%struct.TT_FaceRec_* %0, i64 1719034226, %struct.FT_StreamRec_* %12, i64* nonnull %5) #11
  store i32 %32, i32* %6, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %711

34:                                               ; preds = %30
  %35 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %12) #11
  %36 = call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %12, %struct.FT_Frame_Field_* getelementptr inbounds ([9 x %struct.FT_Frame_Field_], [9 x %struct.FT_Frame_Field_]* @TT_Get_MM_Var.fvar_fields, i64 0, i64 0), i8* nonnull %17) #11
  store i32 %36, i32* %6, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %711

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.GX_FVar_Head_, %struct.GX_FVar_Head_* %7, i64 0, i32 5
  %40 = load i16, i16* %39, align 8
  %41 = getelementptr inbounds %struct.GX_FVar_Head_, %struct.GX_FVar_Head_* %7, i64 0, i32 2
  %42 = load i16, i16* %41, align 2
  %43 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %14, i64 144, i32* nonnull %6) #11
  %44 = bitcast %struct.GX_BlendRec_** %18 to i8**
  store i8* %43, i8** %44, align 8
  %45 = load i32, i32* %6, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %711

47:                                               ; preds = %38
  %48 = zext i16 %42 to i32
  %49 = shl nuw nsw i32 %48, 2
  %50 = add nuw nsw i32 %49, 6
  %51 = zext i16 %40 to i32
  %52 = icmp eq i32 %50, %51
  %53 = zext i1 %52 to i8
  %54 = load i16, i16* %41, align 2
  %55 = zext i16 %54 to i32
  %56 = bitcast i8* %43 to i32*
  store i32 %55, i32* %56, align 8
  br label %60

57:                                               ; preds = %2
  %58 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %19, i64 0, i32 0
  %59 = load i32, i32* %58, align 8
  br label %60

60:                                               ; preds = %57, %47
  %61 = phi i64 [ %35, %47 ], [ 0, %57 ]
  %62 = phi i8 [ %53, %47 ], [ 0, %57 ]
  %63 = phi i32 [ %55, %47 ], [ %59, %57 ]
  %64 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = trunc i64 %65 to i32
  %67 = lshr i32 %66, 16
  %68 = zext i32 %63 to i64
  %69 = shl nuw nsw i64 %68, 1
  %70 = add nuw nsw i64 %69, 7
  %71 = and i64 %70, 17179869176
  %72 = mul nuw nsw i64 %68, 48
  %73 = or i64 %72, 8
  %74 = add nuw nsw i64 %73, 274877906943
  %75 = and i64 %74, 274877906928
  %76 = shl nuw nsw i32 %67, 4
  %77 = or i32 %76, 8
  %78 = add nuw nsw i32 %77, 1048575
  %79 = and i32 %78, 1048560
  %80 = zext i32 %79 to i64
  %81 = mul i32 %67, %63
  %82 = zext i32 %81 to i64
  %83 = shl nuw nsw i64 %82, 3
  br i1 %20, label %84, label %618

84:                                               ; preds = %60
  %85 = mul i32 %63, 5
  %86 = zext i32 %85 to i64
  %87 = add nuw nsw i64 %86, 32
  %88 = add nuw nsw i64 %87, %71
  %89 = add nuw nsw i64 %88, %75
  %90 = add nuw nsw i64 %89, %83
  %91 = add nuw nsw i64 %90, %80
  %92 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %18, align 8
  %93 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %92, i64 0, i32 4
  store i64 %91, i64* %93, align 8
  %94 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %18, align 8
  %95 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %94, i64 0, i32 4
  %96 = load i64, i64* %95, align 8
  %97 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %14, i64 %96, i32* nonnull %6) #11
  %98 = load i32, i32* %6, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %711

100:                                              ; preds = %84
  %101 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %18, align 8
  %102 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %101, i64 0, i32 3
  %103 = bitcast %struct.FT_MM_Var_** %102 to i8**
  store i8* %97, i8** %103, align 8
  %104 = bitcast i8* %97 to i32*
  store i32 %63, i32* %104, align 8
  %105 = getelementptr inbounds i8, i8* %97, i64 4
  %106 = bitcast i8* %105 to i32*
  store i32 -1, i32* %106, align 4
  %107 = getelementptr inbounds i8, i8* %97, i64 8
  %108 = bitcast i8* %107 to i32*
  store i32 %67, i32* %108, align 8
  %109 = getelementptr inbounds i8, i8* %97, i64 32
  %110 = bitcast i8* %109 to i16*
  %111 = getelementptr inbounds i8, i8* %109, i64 %71
  %112 = getelementptr inbounds i8, i8* %97, i64 16
  %113 = bitcast i8* %112 to %struct.FT_Var_Axis_**
  %114 = bitcast i8* %112 to i8**
  store i8* %111, i8** %114, align 8
  %115 = getelementptr inbounds i8, i8* %111, i64 %75
  %116 = getelementptr inbounds i8, i8* %97, i64 24
  %117 = bitcast i8* %116 to %struct.FT_Var_Named_Style_**
  %118 = bitcast i8* %116 to i8**
  store i8* %115, i8** %118, align 8
  %119 = icmp eq i32 %67, 0
  br i1 %119, label %171, label %120

120:                                              ; preds = %100
  %121 = getelementptr inbounds i8, i8* %115, i64 %80
  %122 = zext i32 %67 to i64
  %123 = bitcast i8* %115 to i8**
  store i8* %121, i8** %123, align 8
  %124 = icmp eq i32 %67, 1
  br i1 %124, label %169, label %125

125:                                              ; preds = %120
  %126 = bitcast i8* %121 to i64*
  %127 = add nsw i64 %122, -1
  %128 = add nsw i64 %122, -2
  %129 = and i64 %127, 3
  %130 = icmp ult i64 %128, 3
  br i1 %130, label %155, label %131

131:                                              ; preds = %125
  %132 = sub nsw i64 %127, %129
  br label %133

133:                                              ; preds = %133, %131
  %134 = phi i64 [ 1, %131 ], [ %152, %133 ]
  %135 = phi i64* [ %126, %131 ], [ %149, %133 ]
  %136 = phi i64 [ %132, %131 ], [ %153, %133 ]
  %137 = getelementptr inbounds i64, i64* %135, i64 %68
  %138 = load %struct.FT_Var_Named_Style_*, %struct.FT_Var_Named_Style_** %117, align 8
  %139 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %138, i64 %134, i32 0
  store i64* %137, i64** %139, align 8
  %140 = add nuw nsw i64 %134, 1
  %141 = getelementptr inbounds i64, i64* %137, i64 %68
  %142 = load %struct.FT_Var_Named_Style_*, %struct.FT_Var_Named_Style_** %117, align 8
  %143 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %142, i64 %140, i32 0
  store i64* %141, i64** %143, align 8
  %144 = add nuw nsw i64 %134, 2
  %145 = getelementptr inbounds i64, i64* %141, i64 %68
  %146 = load %struct.FT_Var_Named_Style_*, %struct.FT_Var_Named_Style_** %117, align 8
  %147 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %146, i64 %144, i32 0
  store i64* %145, i64** %147, align 8
  %148 = add nuw nsw i64 %134, 3
  %149 = getelementptr inbounds i64, i64* %145, i64 %68
  %150 = load %struct.FT_Var_Named_Style_*, %struct.FT_Var_Named_Style_** %117, align 8
  %151 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %150, i64 %148, i32 0
  store i64* %149, i64** %151, align 8
  %152 = add nuw nsw i64 %134, 4
  %153 = add i64 %136, -4
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %133

155:                                              ; preds = %133, %125
  %156 = phi i64 [ 1, %125 ], [ %152, %133 ]
  %157 = phi i64* [ %126, %125 ], [ %149, %133 ]
  %158 = icmp eq i64 %129, 0
  br i1 %158, label %169, label %159

159:                                              ; preds = %155, %159
  %160 = phi i64 [ %166, %159 ], [ %156, %155 ]
  %161 = phi i64* [ %163, %159 ], [ %157, %155 ]
  %162 = phi i64 [ %167, %159 ], [ %129, %155 ]
  %163 = getelementptr inbounds i64, i64* %161, i64 %68
  %164 = load %struct.FT_Var_Named_Style_*, %struct.FT_Var_Named_Style_** %117, align 8
  %165 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %164, i64 %160, i32 0
  store i64* %163, i64** %165, align 8
  %166 = add nuw nsw i64 %160, 1
  %167 = add i64 %162, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %159, !llvm.loop !15

169:                                              ; preds = %155, %159, %120
  %170 = load i8*, i8** %118, align 8
  br label %171

171:                                              ; preds = %169, %100
  %172 = phi i8* [ %170, %169 ], [ %115, %100 ]
  %173 = icmp eq i32 %63, 0
  br i1 %173, label %218, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds i8, i8* %172, i64 %80
  %176 = getelementptr inbounds i8, i8* %175, i64 %83
  %177 = add nsw i64 %68, -1
  %178 = and i64 %68, 3
  %179 = icmp ult i64 %177, 3
  br i1 %179, label %204, label %180

180:                                              ; preds = %174
  %181 = sub nsw i64 %68, %178
  br label %182

182:                                              ; preds = %182, %180
  %183 = phi i64 [ 0, %180 ], [ %201, %182 ]
  %184 = phi i8* [ %176, %180 ], [ %200, %182 ]
  %185 = phi i64 [ %181, %180 ], [ %202, %182 ]
  %186 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %113, align 8
  %187 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %186, i64 %183, i32 0
  store i8* %184, i8** %187, align 8
  %188 = getelementptr inbounds i8, i8* %184, i64 5
  %189 = or i64 %183, 1
  %190 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %113, align 8
  %191 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %190, i64 %189, i32 0
  store i8* %188, i8** %191, align 8
  %192 = getelementptr inbounds i8, i8* %184, i64 10
  %193 = or i64 %183, 2
  %194 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %113, align 8
  %195 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %194, i64 %193, i32 0
  store i8* %192, i8** %195, align 8
  %196 = getelementptr inbounds i8, i8* %184, i64 15
  %197 = or i64 %183, 3
  %198 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %113, align 8
  %199 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %198, i64 %197, i32 0
  store i8* %196, i8** %199, align 8
  %200 = getelementptr inbounds i8, i8* %184, i64 20
  %201 = add nuw nsw i64 %183, 4
  %202 = add i64 %185, -4
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %182

204:                                              ; preds = %182, %174
  %205 = phi i64 [ 0, %174 ], [ %201, %182 ]
  %206 = phi i8* [ %176, %174 ], [ %200, %182 ]
  %207 = icmp eq i64 %178, 0
  br i1 %207, label %218, label %208

208:                                              ; preds = %204, %208
  %209 = phi i64 [ %215, %208 ], [ %205, %204 ]
  %210 = phi i8* [ %214, %208 ], [ %206, %204 ]
  %211 = phi i64 [ %216, %208 ], [ %178, %204 ]
  %212 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %113, align 8
  %213 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %212, i64 %209, i32 0
  store i8* %210, i8** %213, align 8
  %214 = getelementptr inbounds i8, i8* %210, i64 5
  %215 = add nuw nsw i64 %209, 1
  %216 = add i64 %211, -1
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %218, label %208, !llvm.loop !16

218:                                              ; preds = %204, %208, %171
  %219 = getelementptr inbounds %struct.GX_FVar_Head_, %struct.GX_FVar_Head_* %7, i64 0, i32 1
  %220 = load i16, i16* %219, align 8
  %221 = zext i16 %220 to i64
  %222 = add i64 %61, %221
  %223 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %12, i64 %222) #11
  store i32 %223, i32* %6, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %711

225:                                              ; preds = %218
  br i1 %173, label %287, label %226

226:                                              ; preds = %225
  %227 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %113, align 8
  %228 = bitcast %struct.fvar_axis_* %8 to i8*
  %229 = getelementptr inbounds %struct.fvar_axis_, %struct.fvar_axis_* %8, i64 0, i32 0
  %230 = getelementptr inbounds %struct.fvar_axis_, %struct.fvar_axis_* %8, i64 0, i32 1
  %231 = getelementptr inbounds %struct.fvar_axis_, %struct.fvar_axis_* %8, i64 0, i32 2
  %232 = getelementptr inbounds %struct.fvar_axis_, %struct.fvar_axis_* %8, i64 0, i32 3
  %233 = getelementptr inbounds %struct.fvar_axis_, %struct.fvar_axis_* %8, i64 0, i32 5
  %234 = getelementptr inbounds %struct.fvar_axis_, %struct.fvar_axis_* %8, i64 0, i32 4
  br label %235

235:                                              ; preds = %282, %226
  %236 = phi i16* [ %110, %226 ], [ %284, %282 ]
  %237 = phi %struct.FT_Var_Axis_* [ %227, %226 ], [ %283, %282 ]
  %238 = phi i32 [ 0, %226 ], [ %285, %282 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %228) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %228, i8 -86, i64 40, i1 false)
  %239 = call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %12, %struct.FT_Frame_Field_* getelementptr inbounds ([8 x %struct.FT_Frame_Field_], [8 x %struct.FT_Frame_Field_]* @TT_Get_MM_Var.fvaraxis_fields, i64 0, i64 0), i8* nonnull %228) #11
  store i32 %239, i32* %6, align 4
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %281

241:                                              ; preds = %235
  %242 = load i64, i64* %229, align 8
  %243 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %237, i64 0, i32 4
  store i64 %242, i64* %243, align 8
  %244 = load i64, i64* %230, align 8
  %245 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %237, i64 0, i32 1
  store i64 %244, i64* %245, align 8
  %246 = load i64, i64* %231, align 8
  %247 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %237, i64 0, i32 2
  store i64 %246, i64* %247, align 8
  %248 = load i64, i64* %232, align 8
  %249 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %237, i64 0, i32 3
  store i64 %248, i64* %249, align 8
  %250 = load i16, i16* %233, align 2
  %251 = zext i16 %250 to i32
  %252 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %237, i64 0, i32 5
  store i32 %251, i32* %252, align 8
  %253 = lshr i64 %242, 24
  %254 = trunc i64 %253 to i8
  %255 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %237, i64 0, i32 0
  %256 = load i8*, i8** %255, align 8
  store i8 %254, i8* %256, align 1
  %257 = load i64, i64* %243, align 8
  %258 = lshr i64 %257, 16
  %259 = trunc i64 %258 to i8
  %260 = load i8*, i8** %255, align 8
  %261 = getelementptr inbounds i8, i8* %260, i64 1
  store i8 %259, i8* %261, align 1
  %262 = load i64, i64* %243, align 8
  %263 = lshr i64 %262, 8
  %264 = trunc i64 %263 to i8
  %265 = load i8*, i8** %255, align 8
  %266 = getelementptr inbounds i8, i8* %265, i64 2
  store i8 %264, i8* %266, align 1
  %267 = load i64, i64* %243, align 8
  %268 = trunc i64 %267 to i8
  %269 = load i8*, i8** %255, align 8
  %270 = getelementptr inbounds i8, i8* %269, i64 3
  store i8 %268, i8* %270, align 1
  %271 = load i8*, i8** %255, align 8
  %272 = getelementptr inbounds i8, i8* %271, i64 4
  store i8 0, i8* %272, align 1
  %273 = load i16, i16* %234, align 8
  store i16 %273, i16* %236, align 2
  %274 = load i64, i64* %245, align 8
  %275 = load i64, i64* %247, align 8
  %276 = icmp sgt i64 %274, %275
  br i1 %276, label %280, label %277

277:                                              ; preds = %241
  %278 = load i64, i64* %249, align 8
  %279 = icmp sgt i64 %275, %278
  br i1 %279, label %280, label %282

280:                                              ; preds = %277, %241
  store i64 %275, i64* %245, align 8
  store i64 %275, i64* %249, align 8
  br label %282

281:                                              ; preds = %235
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %228) #11
  br label %711

282:                                              ; preds = %277, %280
  %283 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %237, i64 1
  %284 = getelementptr inbounds i16, i16* %236, i64 1
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %228) #11
  %285 = add nuw i32 %238, 1
  %286 = icmp eq i32 %285, %63
  br i1 %286, label %287, label %235

287:                                              ; preds = %282, %225
  %288 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %14, i64 8, i64 0, i64 %82, i8* null, i32* nonnull %6) #11
  %289 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %18, align 8
  %290 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %289, i64 0, i32 5
  %291 = bitcast i64** %290 to i8**
  store i8* %288, i8** %291, align 8
  %292 = load i32, i32* %6, align 4
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %711

294:                                              ; preds = %287
  %295 = getelementptr inbounds %struct.GX_FVar_Head_, %struct.GX_FVar_Head_* %7, i64 0, i32 4
  %296 = load i16, i16* %295, align 2
  %297 = icmp eq i16 %296, 0
  br i1 %297, label %354, label %298

298:                                              ; preds = %294
  %299 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %18, align 8
  %300 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %299, i64 0, i32 6
  %301 = load i8, i8* %300, align 8
  %302 = icmp eq i8 %301, 0
  br i1 %302, label %303, label %310

303:                                              ; preds = %298
  %304 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %12) #11
  call fastcc void @ft_var_load_avar(%struct.TT_FaceRec_* %0)
  %305 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %12, i64 %304) #11
  store i32 %305, i32* %6, align 4
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %711

307:                                              ; preds = %303
  %308 = load i16, i16* %295, align 2
  %309 = icmp eq i16 %308, 0
  br i1 %309, label %354, label %310

310:                                              ; preds = %298, %307
  %311 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %18, align 8
  %312 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %311, i64 0, i32 5
  %313 = load i64*, i64** %312, align 8
  %314 = load %struct.FT_Var_Named_Style_*, %struct.FT_Var_Named_Style_** %117, align 8
  %315 = icmp eq i8 %62, 0
  %316 = select i1 %315, i64 4, i64 6
  %317 = shl nuw nsw i64 %68, 2
  %318 = add nuw nsw i64 %317, %316
  br label %319

319:                                              ; preds = %310, %344
  %320 = phi %struct.FT_Var_Named_Style_* [ %314, %310 ], [ %350, %344 ]
  %321 = phi i64* [ %313, %310 ], [ %348, %344 ]
  %322 = phi i32 [ 0, %310 ], [ %349, %344 ]
  %323 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %12, i64 %318) #11
  store i32 %323, i32* %6, align 4
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %711

325:                                              ; preds = %319
  %326 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %12) #11
  %327 = zext i16 %326 to i32
  %328 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %320, i64 0, i32 1
  store i32 %327, i32* %328, align 8
  %329 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %12) #11
  %330 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %320, i64 0, i32 0
  br i1 %173, label %340, label %331

331:                                              ; preds = %325
  %332 = load i64*, i64** %330, align 8
  br label %333

333:                                              ; preds = %333, %331
  %334 = phi i64* [ %338, %333 ], [ %332, %331 ]
  %335 = phi i32 [ %337, %333 ], [ 0, %331 ]
  %336 = call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %12) #11
  store i64 %336, i64* %334, align 8
  %337 = add nuw i32 %335, 1
  %338 = getelementptr inbounds i64, i64* %334, i64 1
  %339 = icmp eq i32 %337, %63
  br i1 %339, label %340, label %333

340:                                              ; preds = %333, %325
  br i1 %315, label %344, label %341

341:                                              ; preds = %340
  %342 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %12) #11
  %343 = zext i16 %342 to i32
  br label %344

344:                                              ; preds = %340, %341
  %345 = phi i32 [ %343, %341 ], [ 65535, %340 ]
  %346 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %320, i64 0, i32 2
  store i32 %345, i32* %346, align 4
  %347 = load i64*, i64** %330, align 8
  call fastcc void @ft_var_to_normalized(%struct.TT_FaceRec_* %0, i32 %63, i64* %347, i64* %321)
  %348 = getelementptr inbounds i64, i64* %321, i64 %68
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %12) #11
  %349 = add nuw nsw i32 %322, 1
  %350 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %320, i64 1
  %351 = load i16, i16* %295, align 2
  %352 = zext i16 %351 to i32
  %353 = icmp ult i32 %349, %352
  br i1 %353, label %319, label %354

354:                                              ; preds = %344, %294, %307
  %355 = phi i16 [ 0, %307 ], [ 0, %294 ], [ %351, %344 ]
  %356 = zext i16 %355 to i32
  %357 = icmp eq i32 %67, %356
  br i1 %357, label %484, label %358

358:                                              ; preds = %354
  %359 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 22
  %360 = bitcast i8** %359 to %struct.SFNT_Interface_**
  %361 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %360, align 8
  %362 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %362) #11
  store i32 -1431655766, i32* %9, align 4
  %363 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %363) #11
  store i32 -1431655766, i32* %10, align 4
  %364 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %361, i64 0, i32 41
  %365 = load i8 (%struct.TT_FaceRec_*, i16, i32*, i32*)*, i8 (%struct.TT_FaceRec_*, i16, i32*, i32*)** %364, align 8
  %366 = call zeroext i8 %365(%struct.TT_FaceRec_* %0, i16 zeroext 17, i32* nonnull %9, i32* nonnull %10) #11
  %367 = icmp eq i8 %366, 0
  br i1 %367, label %368, label %372

368:                                              ; preds = %358
  %369 = load i8 (%struct.TT_FaceRec_*, i16, i32*, i32*)*, i8 (%struct.TT_FaceRec_*, i16, i32*, i32*)** %364, align 8
  %370 = call zeroext i8 %369(%struct.TT_FaceRec_* %0, i16 zeroext 2, i32* nonnull %9, i32* nonnull %10) #11
  %371 = icmp eq i8 %370, 0
  br i1 %371, label %483, label %372

372:                                              ; preds = %358, %368
  %373 = phi i32 [ 2, %368 ], [ 17, %358 ]
  %374 = load i8 (%struct.TT_FaceRec_*, i16, i32*, i32*)*, i8 (%struct.TT_FaceRec_*, i16, i32*, i32*)** %364, align 8
  %375 = call zeroext i8 %374(%struct.TT_FaceRec_* %0, i16 zeroext 6, i32* nonnull %9, i32* nonnull %10) #11
  %376 = icmp eq i8 %375, 0
  br i1 %376, label %483, label %377

377:                                              ; preds = %372
  %378 = load %struct.FT_Var_Named_Style_*, %struct.FT_Var_Named_Style_** %117, align 8
  %379 = load i16, i16* %295, align 2
  %380 = zext i16 %379 to i64
  %381 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %378, i64 %380, i32 1
  store i32 %373, i32* %381, align 8
  %382 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %378, i64 %380, i32 2
  store i32 6, i32* %382, align 4
  br i1 %173, label %483, label %383

383:                                              ; preds = %377
  %384 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %378, i64 %380, i32 0
  %385 = load i64*, i64** %384, align 8
  %386 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %113, align 8
  %387 = add i32 %63, -1
  %388 = zext i32 %387 to i64
  %389 = add nuw nsw i64 %388, 1
  %390 = icmp ult i64 %389, 5
  br i1 %390, label %426, label %391

391:                                              ; preds = %383
  %392 = add i32 %63, -1
  %393 = zext i32 %392 to i64
  %394 = add nuw nsw i64 %393, 1
  %395 = getelementptr i64, i64* %385, i64 %394
  %396 = getelementptr %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %386, i64 0, i32 2
  %397 = getelementptr %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %386, i64 %393, i32 3
  %398 = icmp ult i64* %385, %397
  %399 = icmp ult i64* %396, %395
  %400 = and i1 %398, %399
  br i1 %400, label %426, label %401

401:                                              ; preds = %391
  %402 = and i64 %389, 3
  %403 = icmp eq i64 %402, 0
  %404 = select i1 %403, i64 4, i64 %402
  %405 = sub nsw i64 %389, %404
  %406 = getelementptr i64, i64* %385, i64 %405
  %407 = getelementptr %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %386, i64 %405
  %408 = trunc i64 %405 to i32
  br label %409

409:                                              ; preds = %409, %401
  %410 = phi i64 [ 0, %401 ], [ %424, %409 ]
  %411 = getelementptr i64, i64* %385, i64 %410
  %412 = or i64 %410, 2
  %413 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %386, i64 %410, i32 2
  %414 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %386, i64 %412, i32 2
  %415 = bitcast i64* %413 to <12 x i64>*
  %416 = bitcast i64* %414 to <12 x i64>*
  %417 = load <12 x i64>, <12 x i64>* %415, align 8
  %418 = load <12 x i64>, <12 x i64>* %416, align 8
  %419 = shufflevector <12 x i64> %417, <12 x i64> undef, <2 x i32> <i32 0, i32 6>
  %420 = shufflevector <12 x i64> %418, <12 x i64> undef, <2 x i32> <i32 0, i32 6>
  %421 = bitcast i64* %411 to <2 x i64>*
  store <2 x i64> %419, <2 x i64>* %421, align 8, !alias.scope !17, !noalias !20
  %422 = getelementptr i64, i64* %411, i64 2
  %423 = bitcast i64* %422 to <2 x i64>*
  store <2 x i64> %420, <2 x i64>* %423, align 8, !alias.scope !17, !noalias !20
  %424 = add i64 %410, 4
  %425 = icmp eq i64 %424, %405
  br i1 %425, label %426, label %409, !llvm.loop !22

426:                                              ; preds = %409, %391, %383
  %427 = phi i64* [ %385, %391 ], [ %385, %383 ], [ %406, %409 ]
  %428 = phi %struct.FT_Var_Axis_* [ %386, %391 ], [ %386, %383 ], [ %407, %409 ]
  %429 = phi i32 [ 0, %391 ], [ 0, %383 ], [ %408, %409 ]
  %430 = sub i32 %63, %429
  %431 = xor i32 %429, -1
  %432 = add i32 %63, %431
  %433 = and i32 %430, 7
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %447, label %435

435:                                              ; preds = %426, %435
  %436 = phi i64* [ %444, %435 ], [ %427, %426 ]
  %437 = phi %struct.FT_Var_Axis_* [ %443, %435 ], [ %428, %426 ]
  %438 = phi i32 [ %442, %435 ], [ %429, %426 ]
  %439 = phi i32 [ %445, %435 ], [ %433, %426 ]
  %440 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %437, i64 0, i32 2
  %441 = load i64, i64* %440, align 8
  store i64 %441, i64* %436, align 8
  %442 = add nuw i32 %438, 1
  %443 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %437, i64 1
  %444 = getelementptr inbounds i64, i64* %436, i64 1
  %445 = add i32 %439, -1
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %447, label %435, !llvm.loop !23

447:                                              ; preds = %435, %426
  %448 = phi i64* [ %427, %426 ], [ %444, %435 ]
  %449 = phi %struct.FT_Var_Axis_* [ %428, %426 ], [ %443, %435 ]
  %450 = phi i32 [ %429, %426 ], [ %442, %435 ]
  %451 = icmp ult i32 %432, 7
  br i1 %451, label %483, label %452

452:                                              ; preds = %447, %452
  %453 = phi i64* [ %481, %452 ], [ %448, %447 ]
  %454 = phi %struct.FT_Var_Axis_* [ %480, %452 ], [ %449, %447 ]
  %455 = phi i32 [ %479, %452 ], [ %450, %447 ]
  %456 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %454, i64 0, i32 2
  %457 = load i64, i64* %456, align 8
  store i64 %457, i64* %453, align 8
  %458 = getelementptr inbounds i64, i64* %453, i64 1
  %459 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %454, i64 1, i32 2
  %460 = load i64, i64* %459, align 8
  store i64 %460, i64* %458, align 8
  %461 = getelementptr inbounds i64, i64* %453, i64 2
  %462 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %454, i64 2, i32 2
  %463 = load i64, i64* %462, align 8
  store i64 %463, i64* %461, align 8
  %464 = getelementptr inbounds i64, i64* %453, i64 3
  %465 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %454, i64 3, i32 2
  %466 = load i64, i64* %465, align 8
  store i64 %466, i64* %464, align 8
  %467 = getelementptr inbounds i64, i64* %453, i64 4
  %468 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %454, i64 4, i32 2
  %469 = load i64, i64* %468, align 8
  store i64 %469, i64* %467, align 8
  %470 = getelementptr inbounds i64, i64* %453, i64 5
  %471 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %454, i64 5, i32 2
  %472 = load i64, i64* %471, align 8
  store i64 %472, i64* %470, align 8
  %473 = getelementptr inbounds i64, i64* %453, i64 6
  %474 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %454, i64 6, i32 2
  %475 = load i64, i64* %474, align 8
  store i64 %475, i64* %473, align 8
  %476 = getelementptr inbounds i64, i64* %453, i64 7
  %477 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %454, i64 7, i32 2
  %478 = load i64, i64* %477, align 8
  store i64 %478, i64* %476, align 8
  %479 = add nuw i32 %455, 8
  %480 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %454, i64 8
  %481 = getelementptr inbounds i64, i64* %453, i64 8
  %482 = icmp eq i32 %479, %63
  br i1 %482, label %483, label %452, !llvm.loop !24

483:                                              ; preds = %447, %452, %377, %372, %368
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %363) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %362) #11
  br label %484

484:                                              ; preds = %354, %483
  %485 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %11, align 8
  %486 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %485, i64 0, i32 7
  %487 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %486, align 8
  %488 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %18, align 8
  %489 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %489) #11
  %490 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %490) #11
  store i64 -6148914691236517206, i64* %4, align 8
  %491 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %492 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %491, align 8
  %493 = call i32 %492(%struct.TT_FaceRec_* %0, i64 1297498450, %struct.FT_StreamRec_* %485, i64* nonnull %4) #11
  store i32 %493, i32* %3, align 4
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %495, label %617

495:                                              ; preds = %484
  %496 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %485) #11
  %497 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %485, i32* nonnull %3) #11
  %498 = load i32, i32* %3, align 4
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %617

500:                                              ; preds = %495
  %501 = call i32 @FT_Stream_Skip(%struct.FT_StreamRec_* %485, i64 2) #11
  store i32 %501, i32* %3, align 4
  %502 = icmp eq i32 %501, 0
  %503 = icmp eq i16 %497, 1
  %504 = and i1 %503, %502
  br i1 %504, label %505, label %617

505:                                              ; preds = %500
  %506 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %487, i64 48, i32* nonnull %3) #11
  %507 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %488, i64 0, i32 16
  %508 = bitcast %struct.GX_MVarTableRec_** %507 to i8**
  store i8* %506, i8** %508, align 8
  %509 = load i32, i32* %3, align 4
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %511, label %617

511:                                              ; preds = %505
  %512 = call i32 @FT_Stream_Skip(%struct.FT_StreamRec_* %485, i64 4) #11
  store i32 %512, i32* %3, align 4
  %513 = icmp eq i32 %512, 0
  br i1 %513, label %514, label %617

514:                                              ; preds = %511
  %515 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %485, i32* nonnull %3) #11
  %516 = load %struct.GX_MVarTableRec_*, %struct.GX_MVarTableRec_** %507, align 8
  %517 = getelementptr inbounds %struct.GX_MVarTableRec_, %struct.GX_MVarTableRec_* %516, i64 0, i32 0
  store i16 %515, i16* %517, align 8
  %518 = load i32, i32* %3, align 4
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %520, label %617

520:                                              ; preds = %514
  %521 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %485, i32* nonnull %3) #11
  %522 = load i32, i32* %3, align 4
  %523 = icmp eq i32 %522, 0
  br i1 %523, label %524, label %617

524:                                              ; preds = %520
  %525 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %485) #11
  %526 = zext i16 %521 to i64
  %527 = add i64 %496, %526
  %528 = load %struct.GX_MVarTableRec_*, %struct.GX_MVarTableRec_** %507, align 8
  %529 = getelementptr inbounds %struct.GX_MVarTableRec_, %struct.GX_MVarTableRec_* %528, i64 0, i32 1
  %530 = call fastcc i32 @ft_var_load_item_variation_store(%struct.TT_FaceRec_* %0, i64 %527, %struct.GX_ItemVarStoreRec_* %529) #11
  store i32 %530, i32* %3, align 4
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %532, label %617

532:                                              ; preds = %524
  %533 = load %struct.GX_MVarTableRec_*, %struct.GX_MVarTableRec_** %507, align 8
  %534 = getelementptr inbounds %struct.GX_MVarTableRec_, %struct.GX_MVarTableRec_* %533, i64 0, i32 0
  %535 = load i16, i16* %534, align 8
  %536 = zext i16 %535 to i64
  %537 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %487, i64 16, i64 0, i64 %536, i8* null, i32* nonnull %3) #11
  %538 = load %struct.GX_MVarTableRec_*, %struct.GX_MVarTableRec_** %507, align 8
  %539 = getelementptr inbounds %struct.GX_MVarTableRec_, %struct.GX_MVarTableRec_* %538, i64 0, i32 2
  %540 = bitcast %struct.GX_ValueRec_** %539 to i8**
  store i8* %537, i8** %540, align 8
  %541 = load i32, i32* %3, align 4
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %543, label %617

543:                                              ; preds = %532
  %544 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %485, i64 %525) #11
  store i32 %544, i32* %3, align 4
  %545 = icmp eq i32 %544, 0
  br i1 %545, label %546, label %617

546:                                              ; preds = %543
  %547 = load %struct.GX_MVarTableRec_*, %struct.GX_MVarTableRec_** %507, align 8
  %548 = getelementptr inbounds %struct.GX_MVarTableRec_, %struct.GX_MVarTableRec_* %547, i64 0, i32 0
  %549 = load i16, i16* %548, align 8
  %550 = zext i16 %549 to i64
  %551 = shl nuw nsw i64 %550, 3
  %552 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %485, i64 %551) #11
  store i32 %552, i32* %3, align 4
  %553 = icmp eq i32 %552, 0
  br i1 %553, label %554, label %617

554:                                              ; preds = %546
  %555 = load %struct.GX_MVarTableRec_*, %struct.GX_MVarTableRec_** %507, align 8
  %556 = getelementptr inbounds %struct.GX_MVarTableRec_, %struct.GX_MVarTableRec_* %555, i64 0, i32 2
  %557 = load %struct.GX_ValueRec_*, %struct.GX_ValueRec_** %556, align 8
  %558 = getelementptr inbounds %struct.GX_MVarTableRec_, %struct.GX_MVarTableRec_* %555, i64 0, i32 0
  %559 = load i16, i16* %558, align 8
  %560 = zext i16 %559 to i64
  %561 = getelementptr inbounds %struct.GX_ValueRec_, %struct.GX_ValueRec_* %557, i64 %560
  %562 = icmp eq i16 %559, 0
  br i1 %562, label %589, label %563

563:                                              ; preds = %554
  %564 = getelementptr inbounds %struct.GX_MVarTableRec_, %struct.GX_MVarTableRec_* %555, i64 0, i32 1, i32 0
  %565 = getelementptr inbounds %struct.GX_MVarTableRec_, %struct.GX_MVarTableRec_* %555, i64 0, i32 1, i32 1
  br label %568

566:                                              ; preds = %580
  %567 = icmp ult %struct.GX_ValueRec_* %587, %561
  br i1 %567, label %568, label %589

568:                                              ; preds = %566, %563
  %569 = phi %struct.GX_ValueRec_* [ %557, %563 ], [ %587, %566 ]
  %570 = call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %485) #11
  %571 = getelementptr inbounds %struct.GX_ValueRec_, %struct.GX_ValueRec_* %569, i64 0, i32 0
  store i64 %570, i64* %571, align 8
  %572 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %485) #11
  %573 = getelementptr inbounds %struct.GX_ValueRec_, %struct.GX_ValueRec_* %569, i64 0, i32 1
  store i16 %572, i16* %573, align 8
  %574 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %485) #11
  %575 = getelementptr inbounds %struct.GX_ValueRec_, %struct.GX_ValueRec_* %569, i64 0, i32 2
  store i16 %574, i16* %575, align 2
  %576 = load i16, i16* %573, align 8
  %577 = zext i16 %576 to i32
  %578 = load i32, i32* %564, align 8
  %579 = icmp ugt i32 %578, %577
  br i1 %579, label %580, label %588

580:                                              ; preds = %568
  %581 = zext i16 %574 to i32
  %582 = load %struct.GX_ItemVarDataRec_*, %struct.GX_ItemVarDataRec_** %565, align 8
  %583 = zext i16 %576 to i64
  %584 = getelementptr inbounds %struct.GX_ItemVarDataRec_, %struct.GX_ItemVarDataRec_* %582, i64 %583, i32 0
  %585 = load i32, i32* %584, align 8
  %586 = icmp ugt i32 %585, %581
  %587 = getelementptr inbounds %struct.GX_ValueRec_, %struct.GX_ValueRec_* %569, i64 1
  br i1 %586, label %566, label %588

588:                                              ; preds = %580, %568
  store i32 8, i32* %3, align 4
  br label %589

589:                                              ; preds = %566, %588, %554
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %485) #11
  %590 = load i32, i32* %3, align 4
  %591 = icmp eq i32 %590, 0
  br i1 %591, label %592, label %617

592:                                              ; preds = %589
  %593 = load %struct.GX_MVarTableRec_*, %struct.GX_MVarTableRec_** %507, align 8
  %594 = getelementptr inbounds %struct.GX_MVarTableRec_, %struct.GX_MVarTableRec_* %593, i64 0, i32 2
  %595 = load %struct.GX_ValueRec_*, %struct.GX_ValueRec_** %594, align 8
  %596 = getelementptr inbounds %struct.GX_MVarTableRec_, %struct.GX_MVarTableRec_* %593, i64 0, i32 0
  %597 = load i16, i16* %596, align 8
  %598 = zext i16 %597 to i64
  %599 = getelementptr inbounds %struct.GX_ValueRec_, %struct.GX_ValueRec_* %595, i64 %598
  %600 = icmp eq i16 %597, 0
  br i1 %600, label %613, label %601

601:                                              ; preds = %592, %610
  %602 = phi %struct.GX_ValueRec_* [ %611, %610 ], [ %595, %592 ]
  %603 = getelementptr inbounds %struct.GX_ValueRec_, %struct.GX_ValueRec_* %602, i64 0, i32 0
  %604 = load i64, i64* %603, align 8
  %605 = call fastcc i16* @ft_var_get_value_pointer(%struct.TT_FaceRec_* %0, i64 %604) #11
  %606 = icmp eq i16* %605, null
  br i1 %606, label %610, label %607

607:                                              ; preds = %601
  %608 = load i16, i16* %605, align 2
  %609 = getelementptr inbounds %struct.GX_ValueRec_, %struct.GX_ValueRec_* %602, i64 0, i32 3
  store i16 %608, i16* %609, align 4
  br label %610

610:                                              ; preds = %607, %601
  %611 = getelementptr inbounds %struct.GX_ValueRec_, %struct.GX_ValueRec_* %602, i64 1
  %612 = icmp ult %struct.GX_ValueRec_* %611, %599
  br i1 %612, label %601, label %613

613:                                              ; preds = %610, %592
  %614 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 51
  %615 = load i32, i32* %614, align 8
  %616 = or i32 %615, 256
  store i32 %616, i32* %614, align 8
  br label %617

617:                                              ; preds = %484, %495, %500, %505, %511, %514, %520, %524, %532, %543, %546, %589, %613
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %490) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %489) #11
  br label %618

618:                                              ; preds = %617, %60
  %619 = icmp eq %struct.FT_MM_Var_** %1, null
  br i1 %619, label %711, label %620

620:                                              ; preds = %618
  %621 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %18, align 8
  %622 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %621, i64 0, i32 4
  %623 = load i64, i64* %622, align 8
  %624 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %14, i64 %623, i32* nonnull %6) #11
  %625 = load i32, i32* %6, align 4
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %627, label %711

627:                                              ; preds = %620
  %628 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %18, align 8
  %629 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %628, i64 0, i32 3
  %630 = bitcast %struct.FT_MM_Var_** %629 to i8**
  %631 = load i8*, i8** %630, align 8
  %632 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %628, i64 0, i32 4
  %633 = load i64, i64* %632, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %624, i8* align 8 %631, i64 %633, i1 false)
  %634 = getelementptr inbounds i8, i8* %624, i64 32
  %635 = getelementptr inbounds i8, i8* %634, i64 %71
  %636 = getelementptr inbounds i8, i8* %624, i64 16
  %637 = bitcast i8* %636 to %struct.FT_Var_Axis_**
  %638 = bitcast i8* %636 to i8**
  store i8* %635, i8** %638, align 8
  %639 = getelementptr inbounds i8, i8* %635, i64 %75
  %640 = getelementptr inbounds i8, i8* %624, i64 24
  %641 = bitcast i8* %640 to %struct.FT_Var_Named_Style_**
  %642 = bitcast i8* %640 to i8**
  store i8* %639, i8** %642, align 8
  %643 = getelementptr inbounds i8, i8* %624, i64 8
  %644 = bitcast i8* %643 to i32*
  %645 = load i32, i32* %644, align 8
  %646 = icmp eq i32 %645, 0
  %647 = bitcast i8* %635 to %struct.FT_Var_Axis_*
  br i1 %646, label %668, label %648

648:                                              ; preds = %627
  %649 = getelementptr inbounds i8, i8* %639, i64 %80
  %650 = bitcast i8* %639 to i8**
  store i8* %649, i8** %650, align 8
  %651 = load i32, i32* %644, align 8
  %652 = icmp ugt i32 %651, 1
  br i1 %652, label %653, label %665

653:                                              ; preds = %648
  %654 = bitcast i8* %649 to i64*
  br label %655

655:                                              ; preds = %653, %655
  %656 = phi i64 [ 1, %653 ], [ %661, %655 ]
  %657 = phi i64* [ %654, %653 ], [ %658, %655 ]
  %658 = getelementptr inbounds i64, i64* %657, i64 %68
  %659 = load %struct.FT_Var_Named_Style_*, %struct.FT_Var_Named_Style_** %641, align 8
  %660 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %659, i64 %656, i32 0
  store i64* %658, i64** %660, align 8
  %661 = add nuw nsw i64 %656, 1
  %662 = load i32, i32* %644, align 8
  %663 = zext i32 %662 to i64
  %664 = icmp ult i64 %661, %663
  br i1 %664, label %655, label %665

665:                                              ; preds = %655, %648
  %666 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %637, align 8
  %667 = load i8*, i8** %642, align 8
  br label %668

668:                                              ; preds = %665, %627
  %669 = phi i8* [ %667, %665 ], [ %639, %627 ]
  %670 = phi %struct.FT_Var_Axis_* [ %666, %665 ], [ %647, %627 ]
  %671 = icmp eq i32 %63, 0
  br i1 %671, label %709, label %672

672:                                              ; preds = %668
  %673 = getelementptr inbounds i8, i8* %669, i64 %80
  %674 = getelementptr inbounds i8, i8* %673, i64 %83
  %675 = and i32 %63, 1
  %676 = icmp eq i32 %63, 1
  br i1 %676, label %696, label %677

677:                                              ; preds = %672
  %678 = sub i32 %63, %675
  br label %679

679:                                              ; preds = %718, %677
  %680 = phi %struct.FT_Var_Axis_* [ %670, %677 ], [ %720, %718 ]
  %681 = phi i8* [ %674, %677 ], [ %719, %718 ]
  %682 = phi i32 [ %678, %677 ], [ %721, %718 ]
  %683 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %680, i64 0, i32 0
  store i8* %681, i8** %683, align 8
  %684 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %680, i64 0, i32 4
  %685 = load i64, i64* %684, align 8
  switch i64 %685, label %691 [
    i64 2003265652, label %689
    i64 2003072104, label %686
    i64 1869640570, label %687
    i64 1936486004, label %688
  ]

686:                                              ; preds = %679
  br label %689

687:                                              ; preds = %679
  br label %689

688:                                              ; preds = %679
  br label %689

689:                                              ; preds = %679, %687, %688, %686
  %690 = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), %686 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), %688 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), %687 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), %679 ]
  store i8* %690, i8** %683, align 8
  br label %691

691:                                              ; preds = %689, %679
  %692 = getelementptr inbounds i8, i8* %681, i64 5
  %693 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %680, i64 1, i32 0
  store i8* %692, i8** %693, align 8
  %694 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %680, i64 1, i32 4
  %695 = load i64, i64* %694, align 8
  switch i64 %695, label %718 [
    i64 2003265652, label %716
    i64 2003072104, label %715
    i64 1869640570, label %714
    i64 1936486004, label %713
  ]

696:                                              ; preds = %718, %672
  %697 = phi %struct.FT_Var_Axis_* [ %670, %672 ], [ %720, %718 ]
  %698 = phi i8* [ %674, %672 ], [ %719, %718 ]
  %699 = icmp eq i32 %675, 0
  br i1 %699, label %709, label %700

700:                                              ; preds = %696
  %701 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %697, i64 0, i32 0
  store i8* %698, i8** %701, align 8
  %702 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %697, i64 0, i32 4
  %703 = load i64, i64* %702, align 8
  switch i64 %703, label %709 [
    i64 2003265652, label %707
    i64 2003072104, label %706
    i64 1869640570, label %705
    i64 1936486004, label %704
  ]

704:                                              ; preds = %700
  br label %707

705:                                              ; preds = %700
  br label %707

706:                                              ; preds = %700
  br label %707

707:                                              ; preds = %706, %705, %704, %700
  %708 = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), %706 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), %704 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), %705 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), %700 ]
  store i8* %708, i8** %701, align 8
  br label %709

709:                                              ; preds = %696, %700, %707, %668
  %710 = bitcast %struct.FT_MM_Var_** %1 to i8**
  store i8* %624, i8** %710, align 8
  br label %711

711:                                              ; preds = %319, %281, %303, %709, %620, %26, %38, %34, %30, %287, %218, %84, %618
  %712 = load i32, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  ret i32 %712

713:                                              ; preds = %691
  br label %716

714:                                              ; preds = %691
  br label %716

715:                                              ; preds = %691
  br label %716

716:                                              ; preds = %715, %714, %713, %691
  %717 = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), %715 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), %713 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), %714 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), %691 ]
  store i8* %717, i8** %693, align 8
  br label %718

718:                                              ; preds = %716, %691
  %719 = getelementptr inbounds i8, i8* %681, i64 10
  %720 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %680, i64 2
  %721 = add i32 %682, -2
  %722 = icmp eq i32 %721, 0
  br i1 %722, label %696, label %679
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @TT_Set_Var_Design(%struct.TT_FaceRec_*, i32, i64* nocapture readonly) #2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #11
  store i32 0, i32* %4, align 4
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 25
  %7 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %6, align 8
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 50
  %9 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %8, align 8
  %10 = icmp eq %struct.GX_BlendRec_* %9, null
  br i1 %10, label %11, label %16

11:                                               ; preds = %3
  %12 = tail call i32 @TT_Get_MM_Var(%struct.TT_FaceRec_* %0, %struct.FT_MM_Var_** null)
  store i32 %12, i32* %4, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %169

14:                                               ; preds = %11
  %15 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %8, align 8
  br label %16

16:                                               ; preds = %14, %3
  %17 = phi %struct.GX_BlendRec_* [ %15, %14 ], [ %9, %3 ]
  %18 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %17, i64 0, i32 3
  %19 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %18, align 8
  %20 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp ult i32 %21, %1
  %23 = select i1 %22, i32 %21, i32 %1
  %24 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %17, i64 0, i32 1
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %25, null
  br i1 %26, label %27, label %34

27:                                               ; preds = %16
  %28 = zext i32 %21 to i64
  %29 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %7, i64 8, i64 0, i64 %28, i8* null, i32* nonnull %4) #11
  %30 = bitcast i64** %24 to i8**
  store i8* %29, i8** %30, align 8
  %31 = load i32, i32* %4, align 4
  %32 = icmp eq i32 %31, 0
  %33 = bitcast i8* %29 to i64*
  br i1 %32, label %34, label %169

34:                                               ; preds = %27, %16
  %35 = phi i64* [ %33, %27 ], [ %25, %16 ]
  %36 = icmp eq i32 %23, 0
  br i1 %36, label %73, label %37

37:                                               ; preds = %34
  %38 = and i32 %23, 1
  %39 = icmp eq i32 %23, 1
  br i1 %39, label %58, label %40

40:                                               ; preds = %37
  %41 = sub i32 %23, %38
  br label %42

42:                                               ; preds = %175, %40
  %43 = phi i8 [ 0, %40 ], [ %176, %175 ]
  %44 = phi i64* [ %2, %40 ], [ %177, %175 ]
  %45 = phi i64* [ %35, %40 ], [ %178, %175 ]
  %46 = phi i32 [ %41, %40 ], [ %179, %175 ]
  %47 = load i64, i64* %45, align 8
  %48 = load i64, i64* %44, align 8
  %49 = icmp eq i64 %47, %48
  br i1 %49, label %51, label %50

50:                                               ; preds = %42
  store i64 %48, i64* %45, align 8
  br label %51

51:                                               ; preds = %42, %50
  %52 = phi i8 [ 1, %50 ], [ %43, %42 ]
  %53 = getelementptr inbounds i64, i64* %44, i64 1
  %54 = getelementptr inbounds i64, i64* %45, i64 1
  %55 = load i64, i64* %54, align 8
  %56 = load i64, i64* %53, align 8
  %57 = icmp eq i64 %55, %56
  br i1 %57, label %175, label %174

58:                                               ; preds = %175, %37
  %59 = phi i8 [ undef, %37 ], [ %176, %175 ]
  %60 = phi i64* [ undef, %37 ], [ %178, %175 ]
  %61 = phi i8 [ 0, %37 ], [ %176, %175 ]
  %62 = phi i64* [ %2, %37 ], [ %177, %175 ]
  %63 = phi i64* [ %35, %37 ], [ %178, %175 ]
  %64 = icmp eq i32 %38, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %58
  %66 = load i64, i64* %63, align 8
  %67 = load i64, i64* %62, align 8
  %68 = icmp eq i64 %66, %67
  br i1 %68, label %70, label %69

69:                                               ; preds = %65
  store i64 %67, i64* %63, align 8
  br label %70

70:                                               ; preds = %65, %69
  %71 = phi i8 [ 1, %69 ], [ %61, %65 ]
  %72 = getelementptr inbounds i64, i64* %63, i64 1
  br label %73

73:                                               ; preds = %70, %58, %34
  %74 = phi i64* [ %35, %34 ], [ %60, %58 ], [ %72, %70 ]
  %75 = phi i8 [ 0, %34 ], [ %59, %58 ], [ %71, %70 ]
  %76 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = and i64 %77, 2147418112
  %79 = icmp eq i64 %78, 0
  %80 = load i32, i32* %20, align 8
  %81 = icmp ult i32 %23, %80
  br i1 %79, label %112, label %82

82:                                               ; preds = %73
  br i1 %81, label %83, label %137

83:                                               ; preds = %82
  %84 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %19, i64 0, i32 4
  %85 = load %struct.FT_Var_Named_Style_*, %struct.FT_Var_Named_Style_** %84, align 8
  %86 = lshr i64 %77, 16
  %87 = and i64 %86, 65535
  %88 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %85, i64 %87
  %89 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %88, i64 -1
  %90 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %89, i64 0, i32 0
  %91 = load i64*, i64** %90, align 8
  %92 = zext i32 %23 to i64
  %93 = getelementptr inbounds i64, i64* %91, i64 %92
  br label %94

94:                                               ; preds = %83, %105
  %95 = phi i32 [ %106, %105 ], [ %80, %83 ]
  %96 = phi i8 [ %107, %105 ], [ %75, %83 ]
  %97 = phi i64* [ %109, %105 ], [ %93, %83 ]
  %98 = phi i64* [ %110, %105 ], [ %74, %83 ]
  %99 = phi i32 [ %108, %105 ], [ %23, %83 ]
  %100 = load i64, i64* %98, align 8
  %101 = load i64, i64* %97, align 8
  %102 = icmp eq i64 %100, %101
  br i1 %102, label %105, label %103

103:                                              ; preds = %94
  store i64 %101, i64* %98, align 8
  %104 = load i32, i32* %20, align 8
  br label %105

105:                                              ; preds = %94, %103
  %106 = phi i32 [ %104, %103 ], [ %95, %94 ]
  %107 = phi i8 [ 1, %103 ], [ %96, %94 ]
  %108 = add nuw i32 %99, 1
  %109 = getelementptr inbounds i64, i64* %97, i64 1
  %110 = getelementptr inbounds i64, i64* %98, i64 1
  %111 = icmp ult i32 %108, %106
  br i1 %111, label %94, label %137

112:                                              ; preds = %73
  br i1 %81, label %113, label %137

113:                                              ; preds = %112
  %114 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %19, i64 0, i32 3
  %115 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %114, align 8
  %116 = zext i32 %23 to i64
  %117 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %115, i64 %116
  br label %118

118:                                              ; preds = %113, %130
  %119 = phi i32 [ %131, %130 ], [ %80, %113 ]
  %120 = phi %struct.FT_Var_Axis_* [ %134, %130 ], [ %117, %113 ]
  %121 = phi i8 [ %132, %130 ], [ %75, %113 ]
  %122 = phi i64* [ %135, %130 ], [ %74, %113 ]
  %123 = phi i32 [ %133, %130 ], [ %23, %113 ]
  %124 = load i64, i64* %122, align 8
  %125 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %120, i64 0, i32 2
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %124, %126
  br i1 %127, label %130, label %128

128:                                              ; preds = %118
  store i64 %126, i64* %122, align 8
  %129 = load i32, i32* %20, align 8
  br label %130

130:                                              ; preds = %118, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %118 ]
  %132 = phi i8 [ 1, %128 ], [ %121, %118 ]
  %133 = add nuw i32 %123, 1
  %134 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %120, i64 1
  %135 = getelementptr inbounds i64, i64* %122, i64 1
  %136 = icmp ult i32 %133, %131
  br i1 %136, label %118, label %137

137:                                              ; preds = %105, %130, %82, %112
  %138 = phi i32 [ %80, %112 ], [ %80, %82 ], [ %131, %130 ], [ %106, %105 ]
  %139 = phi i8 [ %75, %112 ], [ %75, %82 ], [ %132, %130 ], [ %107, %105 ]
  %140 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %17, i64 0, i32 2
  %141 = load i64*, i64** %140, align 8
  %142 = icmp eq i64* %141, null
  %143 = icmp ne i8 %139, 0
  %144 = or i1 %143, %142
  br i1 %144, label %145, label %172

145:                                              ; preds = %137
  %146 = zext i32 %138 to i64
  %147 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %7, i64 8, i64 0, i64 %146, i8* null, i32* nonnull %4) #11
  %148 = bitcast i8* %147 to i64*
  %149 = load i32, i32* %4, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %169

151:                                              ; preds = %145
  %152 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %8, align 8
  %153 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %152, i64 0, i32 6
  %154 = load i8, i8* %153, align 8
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %151
  call fastcc void @ft_var_load_avar(%struct.TT_FaceRec_* %0)
  br label %157

157:                                              ; preds = %151, %156
  %158 = load i64*, i64** %24, align 8
  call fastcc void @ft_var_to_normalized(%struct.TT_FaceRec_* %0, i32 %23, i64* %158, i64* %148)
  %159 = load i32, i32* %20, align 8
  %160 = call fastcc i32 @tt_set_mm_blend(%struct.TT_FaceRec_* %0, i32 %159, i64* %148, i8 zeroext 0)
  store i32 %160, i32* %4, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %169

162:                                              ; preds = %157
  %163 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 2
  %164 = load i64, i64* %163, align 8
  br i1 %36, label %167, label %165

165:                                              ; preds = %162
  %166 = or i64 %164, 32768
  store i64 %166, i64* %163, align 8
  br label %169

167:                                              ; preds = %162
  %168 = and i64 %164, -32769
  store i64 %168, i64* %163, align 8
  br label %169

169:                                              ; preds = %157, %145, %27, %11, %167, %165
  %170 = phi i8* [ %147, %145 ], [ %147, %157 ], [ %147, %165 ], [ %147, %167 ], [ null, %27 ], [ null, %11 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %170) #11
  %171 = load i32, i32* %4, align 4
  br label %172

172:                                              ; preds = %137, %169
  %173 = phi i32 [ %171, %169 ], [ -1, %137 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #11
  ret i32 %173

174:                                              ; preds = %51
  store i64 %56, i64* %54, align 8
  br label %175

175:                                              ; preds = %174, %51
  %176 = phi i8 [ 1, %174 ], [ %52, %51 ]
  %177 = getelementptr inbounds i64, i64* %44, i64 2
  %178 = getelementptr inbounds i64, i64* %45, i64 2
  %179 = add i32 %46, -2
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %58, label %42
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @TT_Get_Var_Design(%struct.TT_FaceRec_*, i32, i64* nocapture) #2 {
  %4 = bitcast i64* %2 to i8*
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 50
  %6 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %5, align 8
  %7 = icmp eq %struct.GX_BlendRec_* %6, null
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  %9 = tail call i32 @TT_Get_MM_Var(%struct.TT_FaceRec_* %0, %struct.FT_MM_Var_** null)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %120

11:                                               ; preds = %8
  %12 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %5, align 8
  br label %13

13:                                               ; preds = %11, %3
  %14 = phi %struct.GX_BlendRec_* [ %12, %11 ], [ %6, %3 ]
  %15 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %14, i64 0, i32 1
  %16 = load i64*, i64** %15, align 8
  %17 = icmp eq i64* %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @tt_set_mm_blend(%struct.TT_FaceRec_* %0, i32 0, i64* null, i8 zeroext 1)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %120

21:                                               ; preds = %18, %13
  %22 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp ult i32 %23, %1
  %25 = select i1 %24, i32 %23, i32 %1
  %26 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 49
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne i32 %25, 0
  br i1 %28, label %38, label %30

30:                                               ; preds = %21
  br i1 %29, label %31, label %108

31:                                               ; preds = %30
  %32 = zext i32 %25 to i64
  %33 = add nsw i64 %32, -1
  %34 = and i64 %32, 3
  %35 = icmp ult i64 %33, 3
  br i1 %35, label %91, label %36

36:                                               ; preds = %31
  %37 = sub nsw i64 %32, %34
  br label %47

38:                                               ; preds = %21
  br i1 %29, label %39, label %108

39:                                               ; preds = %38
  %40 = zext i32 %25 to i64
  %41 = shl nuw nsw i64 %40, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 %41, i1 false)
  %42 = add nsw i64 %40, -1
  %43 = and i64 %40, 7
  %44 = icmp ult i64 %42, 7
  br i1 %44, label %78, label %45

45:                                               ; preds = %39
  %46 = sub nsw i64 %40, %43
  br label %72

47:                                               ; preds = %47, %36
  %48 = phi i64 [ 0, %36 ], [ %69, %47 ]
  %49 = phi i64 [ %37, %36 ], [ %70, %47 ]
  %50 = load i64*, i64** %15, align 8
  %51 = getelementptr inbounds i64, i64* %50, i64 %48
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds i64, i64* %2, i64 %48
  store i64 %52, i64* %53, align 8
  %54 = or i64 %48, 1
  %55 = load i64*, i64** %15, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 %54
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds i64, i64* %2, i64 %54
  store i64 %57, i64* %58, align 8
  %59 = or i64 %48, 2
  %60 = load i64*, i64** %15, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 %59
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds i64, i64* %2, i64 %59
  store i64 %62, i64* %63, align 8
  %64 = or i64 %48, 3
  %65 = load i64*, i64** %15, align 8
  %66 = getelementptr inbounds i64, i64* %65, i64 %64
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds i64, i64* %2, i64 %64
  store i64 %67, i64* %68, align 8
  %69 = add nuw nsw i64 %48, 4
  %70 = add i64 %49, -4
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %91, label %47

72:                                               ; preds = %72, %45
  %73 = phi i64 [ 0, %45 ], [ %75, %72 ]
  %74 = phi i64 [ %46, %45 ], [ %76, %72 ]
  %75 = add nuw nsw i64 %73, 8
  %76 = add i64 %74, -8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %72

78:                                               ; preds = %72, %39
  %79 = phi i64 [ undef, %39 ], [ %75, %72 ]
  %80 = phi i64 [ 0, %39 ], [ %75, %72 ]
  %81 = icmp eq i64 %43, 0
  br i1 %81, label %88, label %82

82:                                               ; preds = %78, %82
  %83 = phi i64 [ %85, %82 ], [ %80, %78 ]
  %84 = phi i64 [ %86, %82 ], [ %43, %78 ]
  %85 = add nuw nsw i64 %83, 1
  %86 = add i64 %84, -1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %82, !llvm.loop !25

88:                                               ; preds = %82, %78
  %89 = phi i64 [ %79, %78 ], [ %85, %82 ]
  %90 = trunc i64 %89 to i32
  br label %108

91:                                               ; preds = %47, %31
  %92 = phi i64 [ undef, %31 ], [ %69, %47 ]
  %93 = phi i64 [ 0, %31 ], [ %69, %47 ]
  %94 = icmp eq i64 %34, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %91, %95
  %96 = phi i64 [ %102, %95 ], [ %93, %91 ]
  %97 = phi i64 [ %103, %95 ], [ %34, %91 ]
  %98 = load i64*, i64** %15, align 8
  %99 = getelementptr inbounds i64, i64* %98, i64 %96
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds i64, i64* %2, i64 %96
  store i64 %100, i64* %101, align 8
  %102 = add nuw nsw i64 %96, 1
  %103 = add i64 %97, -1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %95, !llvm.loop !26

105:                                              ; preds = %95, %91
  %106 = phi i64 [ %92, %91 ], [ %102, %95 ]
  %107 = trunc i64 %106 to i32
  br label %108

108:                                              ; preds = %105, %88, %30, %38
  %109 = phi i32 [ 0, %38 ], [ 0, %30 ], [ %90, %88 ], [ %107, %105 ]
  %110 = icmp ult i32 %109, %1
  br i1 %110, label %111, label %120

111:                                              ; preds = %108
  %112 = zext i32 %109 to i64
  %113 = getelementptr i64, i64* %2, i64 %112
  %114 = bitcast i64* %113 to i8*
  %115 = xor i32 %109, -1
  %116 = add i32 %115, %1
  %117 = zext i32 %116 to i64
  %118 = shl nuw nsw i64 %117, 3
  %119 = add nuw nsw i64 %118, 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 %119, i1 false)
  br label %120

120:                                              ; preds = %111, %108, %18, %8
  %121 = phi i32 [ %9, %8 ], [ %19, %18 ], [ 0, %108 ], [ 0, %111 ]
  ret i32 %121
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @TT_Set_Named_Instance(%struct.TT_FaceRec_*, i32) #2 {
  %3 = alloca i8*, align 8
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 50
  %5 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %4, align 8
  %6 = icmp eq %struct.GX_BlendRec_* %5, null
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = tail call i32 @TT_Get_MM_Var(%struct.TT_FaceRec_* %0, %struct.FT_MM_Var_** null)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %70

10:                                               ; preds = %7
  %11 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %4, align 8
  br label %12

12:                                               ; preds = %10, %2
  %13 = phi %struct.GX_BlendRec_* [ %11, %10 ], [ %5, %2 ]
  %14 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %13, i64 0, i32 3
  %15 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %14, align 8
  %16 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = trunc i64 %17 to i32
  %19 = lshr i32 %18, 16
  %20 = icmp ult i32 %19, %1
  br i1 %20, label %70, label %21

21:                                               ; preds = %12
  %22 = icmp eq i32 %1, 0
  br i1 %22, label %57, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 25
  %25 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %24, align 8
  %26 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 22
  %27 = bitcast i8** %26 to %struct.SFNT_Interface_**
  %28 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %27, align 8
  %29 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %30 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %15, i64 0, i32 4
  %31 = load %struct.FT_Var_Named_Style_*, %struct.FT_Var_Named_Style_** %30, align 8
  %32 = zext i32 %1 to i64
  %33 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %31, i64 %32
  %34 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %33, i64 -1
  %35 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %28, i64 0, i32 40
  %36 = load i32 (%struct.TT_FaceRec_*, i16, i8**)*, i32 (%struct.TT_FaceRec_*, i16, i8**)** %35, align 8
  %37 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %34, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = trunc i32 %38 to i16
  %40 = call i32 %36(%struct.TT_FaceRec_* %0, i16 zeroext %39, i8** nonnull %3) #11
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %23
  %43 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 6
  %44 = load i8*, i8** %43, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %25, i8* %44) #11
  %45 = bitcast i8** %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast i8** %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %15, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %34, i64 0, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = call i32 @TT_Set_Var_Design(%struct.TT_FaceRec_* %0, i32 %49, i64* %51)
  switch i32 %52, label %54 [
    i32 0, label %56
    i32 -1, label %53
  ]

53:                                               ; preds = %42
  br label %54

54:                                               ; preds = %23, %42, %53
  %55 = phi i32 [ %52, %42 ], [ 0, %53 ], [ %40, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %70

56:                                               ; preds = %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %59

57:                                               ; preds = %21
  %58 = tail call i32 @TT_Set_Var_Design(%struct.TT_FaceRec_* %0, i32 0, i64* null)
  br label %59

59:                                               ; preds = %56, %57
  %60 = phi i32 [ 0, %56 ], [ %58, %57 ]
  %61 = shl i32 %1, 16
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = and i64 %64, 65535
  %66 = or i64 %65, %62
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 2
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, -32769
  store i64 %69, i64* %67, align 8
  br label %70

70:                                               ; preds = %54, %59, %7, %12
  %71 = phi i32 [ %60, %59 ], [ %8, %7 ], [ 6, %12 ], [ %55, %54 ]
  ret i32 %71
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_get_var_blend(%struct.TT_FaceRec_* nocapture readonly, i32*, i64**, i64**, %struct.FT_MM_Var_**) #6 {
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 50
  %7 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %6, align 8
  %8 = icmp eq %struct.GX_BlendRec_* %7, null
  %9 = icmp ne i32* %1, null
  br i1 %8, label %38, label %10

10:                                               ; preds = %5
  br i1 %9, label %11, label %14

11:                                               ; preds = %10
  %12 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %7, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %1, align 4
  br label %14

14:                                               ; preds = %11, %10
  %15 = icmp eq i64** %2, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %14
  %17 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %6, align 8
  %18 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %17, i64 0, i32 1
  %19 = bitcast i64** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast i64** %2 to i64*
  store i64 %20, i64* %21, align 8
  br label %22

22:                                               ; preds = %14, %16
  %23 = icmp eq i64** %3, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %22
  %25 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %6, align 8
  %26 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %25, i64 0, i32 2
  %27 = bitcast i64** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast i64** %3 to i64*
  store i64 %28, i64* %29, align 8
  br label %30

30:                                               ; preds = %22, %24
  %31 = icmp eq %struct.FT_MM_Var_** %4, null
  br i1 %31, label %46, label %32

32:                                               ; preds = %30
  %33 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %6, align 8
  %34 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %33, i64 0, i32 3
  %35 = bitcast %struct.FT_MM_Var_** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %struct.FT_MM_Var_** %4 to i64*
  store i64 %36, i64* %37, align 8
  br label %46

38:                                               ; preds = %5
  br i1 %9, label %39, label %40

39:                                               ; preds = %38
  store i32 0, i32* %1, align 4
  br label %40

40:                                               ; preds = %39, %38
  %41 = icmp eq i64** %2, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %40
  store i64* null, i64** %2, align 8
  br label %43

43:                                               ; preds = %40, %42
  %44 = icmp eq %struct.FT_MM_Var_** %4, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %43
  store %struct.FT_MM_Var_* null, %struct.FT_MM_Var_** %4, align 8
  br label %46

46:                                               ; preds = %30, %43, %45, %32
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal void @tt_done_blend(%struct.TT_FaceRec_* nocapture readonly) #2 {
  %2 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 25
  %3 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %2, align 8
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 50
  %5 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %4, align 8
  %6 = icmp eq %struct.GX_BlendRec_* %5, null
  br i1 %6, label %106, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %5, i64 0, i32 3
  %9 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %5, i64 0, i32 1
  %13 = bitcast i64** %12 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %14) #11
  store i64* null, i64** %12, align 8
  %15 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %5, i64 0, i32 2
  %16 = bitcast i64** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %17) #11
  store i64* null, i64** %15, align 8
  %18 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %5, i64 0, i32 5
  %19 = bitcast i64** %18 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %20) #11
  store i64* null, i64** %18, align 8
  %21 = bitcast %struct.FT_MM_Var_** %8 to i8**
  %22 = load i8*, i8** %21, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %22) #11
  store %struct.FT_MM_Var_* null, %struct.FT_MM_Var_** %8, align 8
  %23 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %5, i64 0, i32 7
  %24 = load %struct.GX_AVarSegmentRec_*, %struct.GX_AVarSegmentRec_** %23, align 8
  %25 = icmp eq %struct.GX_AVarSegmentRec_* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %7
  %27 = icmp eq i32 %11, 0
  br i1 %27, label %41, label %28

28:                                               ; preds = %26
  %29 = zext i32 %11 to i64
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %38, %30 ]
  %32 = phi %struct.GX_AVarSegmentRec_* [ %24, %28 ], [ %39, %30 ]
  %33 = getelementptr inbounds %struct.GX_AVarSegmentRec_, %struct.GX_AVarSegmentRec_* %32, i64 %31, i32 1
  %34 = bitcast %struct.GX_AVarCorrespondenceRec_** %33 to i8**
  %35 = load i8*, i8** %34, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %35) #11
  %36 = load %struct.GX_AVarSegmentRec_*, %struct.GX_AVarSegmentRec_** %23, align 8
  %37 = getelementptr inbounds %struct.GX_AVarSegmentRec_, %struct.GX_AVarSegmentRec_* %36, i64 %31, i32 1
  store %struct.GX_AVarCorrespondenceRec_* null, %struct.GX_AVarCorrespondenceRec_** %37, align 8
  %38 = add nuw nsw i64 %31, 1
  %39 = load %struct.GX_AVarSegmentRec_*, %struct.GX_AVarSegmentRec_** %23, align 8
  %40 = icmp eq i64 %38, %29
  br i1 %40, label %41, label %30

41:                                               ; preds = %30, %26
  %42 = phi %struct.GX_AVarSegmentRec_* [ %24, %26 ], [ %39, %30 ]
  %43 = bitcast %struct.GX_AVarSegmentRec_* %42 to i8*
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %43) #11
  store %struct.GX_AVarSegmentRec_* null, %struct.GX_AVarSegmentRec_** %23, align 8
  br label %44

44:                                               ; preds = %7, %41
  %45 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %5, i64 0, i32 11
  %46 = load %struct.GX_HVVarTableRec_*, %struct.GX_HVVarTableRec_** %45, align 8
  %47 = icmp eq %struct.GX_HVVarTableRec_* %46, null
  br i1 %47, label %64, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %46, i64 0, i32 0
  tail call fastcc void @ft_var_done_item_variation_store(%struct.TT_FaceRec_* %0, %struct.GX_ItemVarStoreRec_* %49)
  %50 = load %struct.GX_HVVarTableRec_*, %struct.GX_HVVarTableRec_** %45, align 8
  %51 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %50, i64 0, i32 1, i32 2
  %52 = bitcast i32** %51 to i8**
  %53 = load i8*, i8** %52, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %53) #11
  %54 = load %struct.GX_HVVarTableRec_*, %struct.GX_HVVarTableRec_** %45, align 8
  %55 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %54, i64 0, i32 1, i32 2
  store i32* null, i32** %55, align 8
  %56 = load %struct.GX_HVVarTableRec_*, %struct.GX_HVVarTableRec_** %45, align 8
  %57 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %56, i64 0, i32 1, i32 1
  %58 = bitcast i32** %57 to i8**
  %59 = load i8*, i8** %58, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %59) #11
  %60 = load %struct.GX_HVVarTableRec_*, %struct.GX_HVVarTableRec_** %45, align 8
  %61 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %60, i64 0, i32 1, i32 1
  store i32* null, i32** %61, align 8
  %62 = bitcast %struct.GX_HVVarTableRec_** %45 to i8**
  %63 = load i8*, i8** %62, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %63) #11
  store %struct.GX_HVVarTableRec_* null, %struct.GX_HVVarTableRec_** %45, align 8
  br label %64

64:                                               ; preds = %44, %48
  %65 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %5, i64 0, i32 15
  %66 = load %struct.GX_HVVarTableRec_*, %struct.GX_HVVarTableRec_** %65, align 8
  %67 = icmp eq %struct.GX_HVVarTableRec_* %66, null
  br i1 %67, label %84, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %66, i64 0, i32 0
  tail call fastcc void @ft_var_done_item_variation_store(%struct.TT_FaceRec_* %0, %struct.GX_ItemVarStoreRec_* %69)
  %70 = load %struct.GX_HVVarTableRec_*, %struct.GX_HVVarTableRec_** %65, align 8
  %71 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %70, i64 0, i32 1, i32 2
  %72 = bitcast i32** %71 to i8**
  %73 = load i8*, i8** %72, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %73) #11
  %74 = load %struct.GX_HVVarTableRec_*, %struct.GX_HVVarTableRec_** %65, align 8
  %75 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %74, i64 0, i32 1, i32 2
  store i32* null, i32** %75, align 8
  %76 = load %struct.GX_HVVarTableRec_*, %struct.GX_HVVarTableRec_** %65, align 8
  %77 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %76, i64 0, i32 1, i32 1
  %78 = bitcast i32** %77 to i8**
  %79 = load i8*, i8** %78, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %79) #11
  %80 = load %struct.GX_HVVarTableRec_*, %struct.GX_HVVarTableRec_** %65, align 8
  %81 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %80, i64 0, i32 1, i32 1
  store i32* null, i32** %81, align 8
  %82 = bitcast %struct.GX_HVVarTableRec_** %65 to i8**
  %83 = load i8*, i8** %82, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %83) #11
  store %struct.GX_HVVarTableRec_* null, %struct.GX_HVVarTableRec_** %65, align 8
  br label %84

84:                                               ; preds = %64, %68
  %85 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %5, i64 0, i32 16
  %86 = load %struct.GX_MVarTableRec_*, %struct.GX_MVarTableRec_** %85, align 8
  %87 = icmp eq %struct.GX_MVarTableRec_* %86, null
  br i1 %87, label %98, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.GX_MVarTableRec_, %struct.GX_MVarTableRec_* %86, i64 0, i32 1
  tail call fastcc void @ft_var_done_item_variation_store(%struct.TT_FaceRec_* %0, %struct.GX_ItemVarStoreRec_* %89)
  %90 = load %struct.GX_MVarTableRec_*, %struct.GX_MVarTableRec_** %85, align 8
  %91 = getelementptr inbounds %struct.GX_MVarTableRec_, %struct.GX_MVarTableRec_* %90, i64 0, i32 2
  %92 = bitcast %struct.GX_ValueRec_** %91 to i8**
  %93 = load i8*, i8** %92, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %93) #11
  %94 = load %struct.GX_MVarTableRec_*, %struct.GX_MVarTableRec_** %85, align 8
  %95 = getelementptr inbounds %struct.GX_MVarTableRec_, %struct.GX_MVarTableRec_* %94, i64 0, i32 2
  store %struct.GX_ValueRec_* null, %struct.GX_ValueRec_** %95, align 8
  %96 = bitcast %struct.GX_MVarTableRec_** %85 to i8**
  %97 = load i8*, i8** %96, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %97) #11
  store %struct.GX_MVarTableRec_* null, %struct.GX_MVarTableRec_** %85, align 8
  br label %98

98:                                               ; preds = %84, %88
  %99 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %5, i64 0, i32 18
  %100 = bitcast i64** %99 to i8**
  %101 = load i8*, i8** %100, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %101) #11
  store i64* null, i64** %99, align 8
  %102 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %5, i64 0, i32 20
  %103 = bitcast i64** %102 to i8**
  %104 = load i8*, i8** %103, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %104) #11
  store i64* null, i64** %102, align 8
  %105 = bitcast %struct.GX_BlendRec_* %5 to i8*
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* nonnull %105) #11
  br label %106

106:                                              ; preds = %1, %98
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @tt_set_mm_blend(%struct.TT_FaceRec_*, i32, i64* nocapture readonly, i8 zeroext) unnamed_addr #2 {
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca %struct.GX_GVar_Head_, align 8
  %8 = alloca i32, align 4
  %9 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  store i32 0, i32* %8, align 4
  %10 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 25
  %11 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %10, align 8
  %12 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 49
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 50
  %14 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %13, align 8
  %15 = icmp eq %struct.GX_BlendRec_* %14, null
  br i1 %15, label %16, label %21

16:                                               ; preds = %4
  %17 = tail call i32 @TT_Get_MM_Var(%struct.TT_FaceRec_* %0, %struct.FT_MM_Var_** null)
  store i32 %17, i32* %8, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %706

19:                                               ; preds = %16
  %20 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %13, align 8
  br label %21

21:                                               ; preds = %19, %4
  %22 = phi %struct.GX_BlendRec_* [ %20, %19 ], [ %14, %4 ]
  %23 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %22, i64 0, i32 3
  %24 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %23, align 8
  %25 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp ult i32 %26, %1
  %28 = select i1 %27, i32 %26, i32 %1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %42, label %30

30:                                               ; preds = %21
  %31 = zext i32 %28 to i64
  br label %34

32:                                               ; preds = %34
  %33 = icmp ult i64 %40, %31
  br i1 %33, label %34, label %42

34:                                               ; preds = %30, %32
  %35 = phi i64 [ 0, %30 ], [ %40, %32 ]
  %36 = getelementptr inbounds i64, i64* %2, i64 %35
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, 65536
  %39 = icmp ugt i64 %38, 131072
  %40 = add nuw nsw i64 %35, 1
  br i1 %39, label %41, label %32

41:                                               ; preds = %34
  store i32 6, i32* %8, align 4
  br label %706

42:                                               ; preds = %32, %21
  %43 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 48
  %44 = load i8, i8* %43, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %259

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %22, i64 0, i32 20
  %48 = load i64*, i64** %47, align 8
  %49 = icmp eq i64* %48, null
  br i1 %49, label %50, label %259

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 26
  %52 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %51, align 8
  %53 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %52, i64 0, i32 7
  %54 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %53, align 8
  %55 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #11
  %56 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  store i64 -6148914691236517206, i64* %6, align 8
  %57 = bitcast %struct.GX_GVar_Head_* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %57) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 40, i1 false) #11
  %58 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %59 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %58, align 8
  %60 = call i32 %59(%struct.TT_FaceRec_* %0, i64 1735811442, %struct.FT_StreamRec_* %52, i64* nonnull %6) #11
  store i32 %60, i32* %5, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %256

62:                                               ; preds = %50
  %63 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %52) #11
  %64 = call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %52, %struct.FT_Frame_Field_* getelementptr inbounds ([9 x %struct.FT_Frame_Field_], [9 x %struct.FT_Frame_Field_]* @ft_var_load_gvar.gvar_fields, i64 0, i64 0), i8* nonnull %57) #11
  store i32 %64, i32* %5, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %256

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.GX_GVar_Head_, %struct.GX_GVar_Head_* %7, i64 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, 65536
  br i1 %69, label %71, label %70

70:                                               ; preds = %66
  store i32 8, i32* %5, align 4
  br label %256

71:                                               ; preds = %66
  %72 = getelementptr inbounds %struct.GX_GVar_Head_, %struct.GX_GVar_Head_* %7, i64 0, i32 1
  %73 = load i16, i16* %72, align 8
  %74 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %23, align 8
  %75 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %74, i64 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = trunc i32 %76 to i16
  %78 = icmp eq i16 %73, %77
  br i1 %78, label %80, label %79

79:                                               ; preds = %71
  store i32 8, i32* %5, align 4
  br label %256

80:                                               ; preds = %71
  %81 = getelementptr inbounds %struct.GX_GVar_Head_, %struct.GX_GVar_Head_* %7, i64 0, i32 2
  %82 = load i16, i16* %81, align 2
  %83 = zext i16 %82 to i64
  %84 = zext i16 %73 to i64
  %85 = mul nuw nsw i64 %83, %84
  %86 = load i64, i64* %6, align 8
  %87 = lshr i64 %86, 1
  %88 = icmp ugt i64 %85, %87
  br i1 %88, label %89, label %90

89:                                               ; preds = %80
  store i32 8, i32* %5, align 4
  br label %256

90:                                               ; preds = %80
  %91 = getelementptr inbounds %struct.GX_GVar_Head_, %struct.GX_GVar_Head_* %7, i64 0, i32 4
  %92 = load i16, i16* %91, align 8
  %93 = zext i16 %92 to i64
  %94 = add nuw nsw i64 %93, 1
  %95 = getelementptr inbounds %struct.GX_GVar_Head_, %struct.GX_GVar_Head_* %7, i64 0, i32 5
  %96 = load i16, i16* %95, align 2
  %97 = and i16 %96, 1
  %98 = icmp eq i16 %97, 0
  %99 = select i1 %98, i64 2, i64 4
  %100 = mul nuw nsw i64 %99, %94
  %101 = icmp ugt i64 %100, %86
  br i1 %101, label %102, label %103

102:                                              ; preds = %90
  store i32 8, i32* %5, align 4
  br label %256

103:                                              ; preds = %90
  %104 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %22, i64 0, i32 21
  store i64 %86, i64* %104, align 8
  %105 = getelementptr inbounds %struct.GX_GVar_Head_, %struct.GX_GVar_Head_* %7, i64 0, i32 6
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, %63
  %108 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %52, i64 %100) #11
  store i32 %108, i32* %5, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %256

110:                                              ; preds = %103
  %111 = load i16, i16* %91, align 8
  %112 = zext i16 %111 to i64
  %113 = add nuw nsw i64 %112, 1
  %114 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %54, i64 8, i64 0, i64 %113, i8* null, i32* nonnull %5) #11
  %115 = bitcast i64** %47 to i8**
  store i8* %114, i8** %115, align 8
  %116 = load i32, i32* %5, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %250

118:                                              ; preds = %110
  %119 = load i16, i16* %95, align 2
  %120 = and i16 %119, 1
  %121 = icmp eq i16 %120, 0
  %122 = load i64, i64* %6, align 8
  %123 = add i64 %122, %63
  br i1 %121, label %151, label %124

124:                                              ; preds = %118, %146
  %125 = phi i64 [ %147, %146 ], [ 0, %118 ]
  %126 = phi i64 [ %142, %146 ], [ 0, %118 ]
  %127 = call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %52) #11
  %128 = add i64 %127, %107
  %129 = load i64*, i64** %47, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 %125
  store i64 %128, i64* %130, align 8
  %131 = load i64*, i64** %47, align 8
  %132 = getelementptr inbounds i64, i64* %131, i64 %125
  %133 = load i64, i64* %132, align 8
  %134 = icmp ugt i64 %126, %133
  br i1 %134, label %135, label %139

135:                                              ; preds = %124
  store i64 %126, i64* %132, align 8
  %136 = load i64*, i64** %47, align 8
  %137 = getelementptr inbounds i64, i64* %136, i64 %125
  %138 = load i64, i64* %137, align 8
  br label %139

139:                                              ; preds = %135, %124
  %140 = phi i64 [ %138, %135 ], [ %133, %124 ]
  %141 = phi i64* [ %136, %135 ], [ %131, %124 ]
  %142 = phi i64 [ %126, %135 ], [ %133, %124 ]
  %143 = icmp ult i64 %123, %140
  br i1 %143, label %144, label %146

144:                                              ; preds = %139
  %145 = getelementptr inbounds i64, i64* %141, i64 %125
  store i64 %123, i64* %145, align 8
  br label %146

146:                                              ; preds = %144, %139
  %147 = add nuw nsw i64 %125, 1
  %148 = load i16, i16* %91, align 8
  %149 = zext i16 %148 to i64
  %150 = icmp ult i64 %125, %149
  br i1 %150, label %124, label %180

151:                                              ; preds = %118, %175
  %152 = phi i64 [ %176, %175 ], [ 0, %118 ]
  %153 = phi i64 [ %171, %175 ], [ 0, %118 ]
  %154 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %52) #11
  %155 = zext i16 %154 to i64
  %156 = shl nuw nsw i64 %155, 1
  %157 = add i64 %156, %107
  %158 = load i64*, i64** %47, align 8
  %159 = getelementptr inbounds i64, i64* %158, i64 %152
  store i64 %157, i64* %159, align 8
  %160 = load i64*, i64** %47, align 8
  %161 = getelementptr inbounds i64, i64* %160, i64 %152
  %162 = load i64, i64* %161, align 8
  %163 = icmp ugt i64 %153, %162
  br i1 %163, label %164, label %168

164:                                              ; preds = %151
  store i64 %153, i64* %161, align 8
  %165 = load i64*, i64** %47, align 8
  %166 = getelementptr inbounds i64, i64* %165, i64 %152
  %167 = load i64, i64* %166, align 8
  br label %168

168:                                              ; preds = %164, %151
  %169 = phi i64 [ %167, %164 ], [ %162, %151 ]
  %170 = phi i64* [ %165, %164 ], [ %160, %151 ]
  %171 = phi i64 [ %153, %164 ], [ %162, %151 ]
  %172 = icmp ult i64 %123, %169
  br i1 %172, label %173, label %175

173:                                              ; preds = %168
  %174 = getelementptr inbounds i64, i64* %170, i64 %152
  store i64 %123, i64* %174, align 8
  br label %175

175:                                              ; preds = %173, %168
  %176 = add nuw nsw i64 %152, 1
  %177 = load i16, i16* %91, align 8
  %178 = zext i16 %177 to i64
  %179 = icmp ult i64 %152, %178
  br i1 %179, label %151, label %180

180:                                              ; preds = %146, %175
  %181 = phi i16 [ %177, %175 ], [ %148, %146 ]
  %182 = zext i16 %181 to i32
  %183 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %22, i64 0, i32 19
  store i32 %182, i32* %183, align 8
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %52) #11
  %184 = load i16, i16* %81, align 2
  %185 = icmp eq i16 %184, 0
  br i1 %185, label %254, label %186

186:                                              ; preds = %180
  %187 = getelementptr inbounds %struct.GX_GVar_Head_, %struct.GX_GVar_Head_* %7, i64 0, i32 3
  %188 = load i64, i64* %187, align 8
  %189 = add i64 %188, %63
  %190 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %52, i64 %189) #11
  store i32 %190, i32* %5, align 4
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %251

192:                                              ; preds = %186
  %193 = load i16, i16* %81, align 2
  %194 = zext i16 %193 to i64
  %195 = load i16, i16* %72, align 8
  %196 = zext i16 %195 to i64
  %197 = shl nuw nsw i64 %194, 1
  %198 = mul nuw nsw i64 %197, %196
  %199 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %52, i64 %198) #11
  store i32 %199, i32* %5, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %251

201:                                              ; preds = %192
  %202 = load i16, i16* %72, align 8
  %203 = zext i16 %202 to i64
  %204 = load i16, i16* %81, align 2
  %205 = zext i16 %204 to i64
  %206 = mul nuw nsw i64 %205, %203
  %207 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %54, i64 8, i64 0, i64 %206, i8* null, i32* nonnull %5) #11
  %208 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %22, i64 0, i32 18
  %209 = bitcast i64** %208 to i8**
  store i8* %207, i8** %209, align 8
  %210 = load i32, i32* %5, align 4
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %250

212:                                              ; preds = %201
  %213 = load i16, i16* %81, align 2
  %214 = icmp eq i16 %213, 0
  br i1 %214, label %246, label %215

215:                                              ; preds = %212
  %216 = load i16, i16* %72, align 8
  br label %217

217:                                              ; preds = %240, %215
  %218 = phi i16 [ %241, %240 ], [ %213, %215 ]
  %219 = phi i16 [ %242, %240 ], [ %216, %215 ]
  %220 = phi i32 [ %243, %240 ], [ 0, %215 ]
  %221 = icmp eq i16 %219, 0
  br i1 %221, label %240, label %222

222:                                              ; preds = %217, %222
  %223 = phi i32 [ %234, %222 ], [ 0, %217 ]
  %224 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %52) #11
  %225 = sext i16 %224 to i64
  %226 = shl nsw i64 %225, 2
  %227 = load i64*, i64** %208, align 8
  %228 = load i16, i16* %72, align 8
  %229 = zext i16 %228 to i32
  %230 = mul i32 %220, %229
  %231 = add i32 %230, %223
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds i64, i64* %227, i64 %232
  store i64 %226, i64* %233, align 8
  %234 = add nuw nsw i32 %223, 1
  %235 = load i16, i16* %72, align 8
  %236 = zext i16 %235 to i32
  %237 = icmp ult i32 %234, %236
  br i1 %237, label %222, label %238

238:                                              ; preds = %222
  %239 = load i16, i16* %81, align 2
  br label %240

240:                                              ; preds = %238, %217
  %241 = phi i16 [ %239, %238 ], [ %218, %217 ]
  %242 = phi i16 [ %235, %238 ], [ 0, %217 ]
  %243 = add nuw nsw i32 %220, 1
  %244 = zext i16 %241 to i32
  %245 = icmp ult i32 %243, %244
  br i1 %245, label %217, label %246

246:                                              ; preds = %240, %212
  %247 = phi i16 [ 0, %212 ], [ %241, %240 ]
  %248 = zext i16 %247 to i32
  %249 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %22, i64 0, i32 17
  store i32 %248, i32* %249, align 8
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %52) #11
  br label %254

250:                                              ; preds = %201, %110
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %52) #11
  br label %251

251:                                              ; preds = %250, %192, %186
  %252 = load i8*, i8** %115, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %54, i8* %252) #11
  store i64* null, i64** %47, align 8
  %253 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %22, i64 0, i32 19
  store i32 0, i32* %253, align 8
  br label %254

254:                                              ; preds = %251, %246, %180
  %255 = load i32, i32* %5, align 4
  br label %256

256:                                              ; preds = %254, %50, %62, %70, %79, %89, %102, %103
  %257 = phi i32 [ %255, %254 ], [ %60, %50 ], [ %64, %62 ], [ 8, %70 ], [ 8, %79 ], [ 8, %89 ], [ 8, %102 ], [ %108, %103 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %57) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #11
  store i32 %257, i32* %8, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %706

259:                                              ; preds = %256, %46, %42
  %260 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %22, i64 0, i32 1
  %261 = load i64*, i64** %260, align 8
  %262 = icmp eq i64* %261, null
  br i1 %262, label %263, label %270

263:                                              ; preds = %259
  %264 = load i32, i32* %25, align 8
  %265 = zext i32 %264 to i64
  %266 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %11, i64 8, i64 0, i64 %265, i8* null, i32* nonnull %8) #11
  %267 = bitcast i64** %260 to i8**
  store i8* %266, i8** %267, align 8
  %268 = load i32, i32* %8, align 4
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %706

270:                                              ; preds = %263, %259
  %271 = phi i32 [ 0, %259 ], [ 1, %263 ]
  %272 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %22, i64 0, i32 2
  %273 = load i64*, i64** %272, align 8
  %274 = icmp eq i64* %273, null
  %275 = bitcast i64* %273 to i8*
  br i1 %274, label %279, label %276

276:                                              ; preds = %270
  br i1 %29, label %302, label %277

277:                                              ; preds = %276
  %278 = zext i32 %28 to i64
  br label %288

279:                                              ; preds = %270
  %280 = load i32, i32* %25, align 8
  %281 = zext i32 %280 to i64
  %282 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %11, i64 8, i64 0, i64 %281, i8* null, i32* nonnull %8) #11
  %283 = bitcast i64** %272 to i8**
  store i8* %282, i8** %283, align 8
  %284 = load i32, i32* %8, align 4
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %706

286:                                              ; preds = %279
  %287 = load i32, i32* %25, align 8
  br label %449

288:                                              ; preds = %277, %296
  %289 = phi i64 [ 0, %277 ], [ %297, %296 ]
  %290 = phi i32 [ 0, %277 ], [ %298, %296 ]
  %291 = getelementptr inbounds i64, i64* %273, i64 %289
  %292 = load i64, i64* %291, align 8
  %293 = getelementptr inbounds i64, i64* %2, i64 %289
  %294 = load i64, i64* %293, align 8
  %295 = icmp eq i64 %292, %294
  br i1 %295, label %296, label %300

296:                                              ; preds = %288
  %297 = add nuw nsw i64 %289, 1
  %298 = add nuw i32 %290, 1
  %299 = icmp ult i64 %297, %278
  br i1 %299, label %288, label %302

300:                                              ; preds = %288
  %301 = trunc i64 %289 to i32
  br label %302

302:                                              ; preds = %296, %300, %276
  %303 = phi i32 [ 0, %276 ], [ %301, %300 ], [ %298, %296 ]
  %304 = phi i32 [ 0, %276 ], [ 2, %300 ], [ 0, %296 ]
  %305 = phi i8 [ 0, %276 ], [ 1, %300 ], [ 0, %296 ]
  %306 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 1
  %307 = load i64, i64* %306, align 8
  %308 = and i64 %307, 2147418112
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %383, label %310

310:                                              ; preds = %302
  %311 = zext i32 %303 to i64
  %312 = load i32, i32* %25, align 8
  %313 = icmp ugt i32 %312, %303
  br i1 %313, label %314, label %431

314:                                              ; preds = %310
  %315 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %22, i64 0, i32 5
  %316 = load i64*, i64** %315, align 8
  %317 = trunc i64 %307 to i32
  %318 = lshr i32 %317, 16
  %319 = add nsw i32 %318, -1
  %320 = mul i32 %312, %319
  %321 = zext i32 %320 to i64
  %322 = getelementptr inbounds i64, i64* %316, i64 %321
  %323 = getelementptr inbounds i64, i64* %322, i64 %311
  %324 = getelementptr inbounds i64, i64* %273, i64 %311
  %325 = sub i32 %312, %303
  %326 = xor i32 %303, -1
  %327 = add i32 %312, %326
  %328 = and i32 %325, 3
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %345, label %330

330:                                              ; preds = %314, %330
  %331 = phi i64* [ %341, %330 ], [ %323, %314 ]
  %332 = phi i64* [ %342, %330 ], [ %324, %314 ]
  %333 = phi i32 [ %340, %330 ], [ %303, %314 ]
  %334 = phi i8 [ %339, %330 ], [ %305, %314 ]
  %335 = phi i32 [ %343, %330 ], [ %328, %314 ]
  %336 = load i64, i64* %332, align 8
  %337 = load i64, i64* %331, align 8
  %338 = icmp eq i64 %336, %337
  %339 = select i1 %338, i8 %334, i8 1
  %340 = add nuw i32 %333, 1
  %341 = getelementptr inbounds i64, i64* %331, i64 1
  %342 = getelementptr inbounds i64, i64* %332, i64 1
  %343 = add i32 %335, -1
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %330, !llvm.loop !27

345:                                              ; preds = %330, %314
  %346 = phi i8 [ undef, %314 ], [ %339, %330 ]
  %347 = phi i64* [ %323, %314 ], [ %341, %330 ]
  %348 = phi i64* [ %324, %314 ], [ %342, %330 ]
  %349 = phi i32 [ %303, %314 ], [ %340, %330 ]
  %350 = phi i8 [ %305, %314 ], [ %339, %330 ]
  %351 = icmp ult i32 %327, 3
  br i1 %351, label %431, label %352

352:                                              ; preds = %345, %352
  %353 = phi i64* [ %380, %352 ], [ %347, %345 ]
  %354 = phi i64* [ %381, %352 ], [ %348, %345 ]
  %355 = phi i32 [ %379, %352 ], [ %349, %345 ]
  %356 = phi i8 [ %378, %352 ], [ %350, %345 ]
  %357 = load i64, i64* %354, align 8
  %358 = load i64, i64* %353, align 8
  %359 = icmp eq i64 %357, %358
  %360 = getelementptr inbounds i64, i64* %353, i64 1
  %361 = getelementptr inbounds i64, i64* %354, i64 1
  %362 = load i64, i64* %361, align 8
  %363 = load i64, i64* %360, align 8
  %364 = icmp eq i64 %362, %363
  %365 = and i1 %364, %359
  %366 = getelementptr inbounds i64, i64* %353, i64 2
  %367 = getelementptr inbounds i64, i64* %354, i64 2
  %368 = load i64, i64* %367, align 8
  %369 = load i64, i64* %366, align 8
  %370 = icmp eq i64 %368, %369
  %371 = and i1 %370, %365
  %372 = getelementptr inbounds i64, i64* %353, i64 3
  %373 = getelementptr inbounds i64, i64* %354, i64 3
  %374 = load i64, i64* %373, align 8
  %375 = load i64, i64* %372, align 8
  %376 = icmp eq i64 %374, %375
  %377 = and i1 %376, %371
  %378 = select i1 %377, i8 %356, i8 1
  %379 = add nuw i32 %355, 4
  %380 = getelementptr inbounds i64, i64* %353, i64 4
  %381 = getelementptr inbounds i64, i64* %354, i64 4
  %382 = icmp eq i32 %379, %312
  br i1 %382, label %431, label %352

383:                                              ; preds = %302
  %384 = load i32, i32* %25, align 8
  %385 = icmp ugt i32 %384, %303
  br i1 %385, label %386, label %431

386:                                              ; preds = %383
  %387 = zext i32 %303 to i64
  %388 = getelementptr inbounds i64, i64* %273, i64 %387
  %389 = sub i32 %384, %303
  %390 = xor i32 %303, -1
  %391 = add i32 %384, %390
  %392 = and i32 %389, 3
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %406, label %394

394:                                              ; preds = %386, %394
  %395 = phi i64* [ %403, %394 ], [ %388, %386 ]
  %396 = phi i32 [ %402, %394 ], [ %303, %386 ]
  %397 = phi i8 [ %401, %394 ], [ %305, %386 ]
  %398 = phi i32 [ %404, %394 ], [ %392, %386 ]
  %399 = load i64, i64* %395, align 8
  %400 = icmp eq i64 %399, 0
  %401 = select i1 %400, i8 %397, i8 1
  %402 = add nuw i32 %396, 1
  %403 = getelementptr inbounds i64, i64* %395, i64 1
  %404 = add i32 %398, -1
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %406, label %394, !llvm.loop !28

406:                                              ; preds = %394, %386
  %407 = phi i64* [ %388, %386 ], [ %403, %394 ]
  %408 = phi i32 [ %303, %386 ], [ %402, %394 ]
  %409 = phi i8 [ %305, %386 ], [ %401, %394 ]
  %410 = phi i8 [ undef, %386 ], [ %401, %394 ]
  %411 = icmp ult i32 %391, 3
  br i1 %411, label %431, label %412

412:                                              ; preds = %406, %412
  %413 = phi i64* [ %429, %412 ], [ %407, %406 ]
  %414 = phi i32 [ %428, %412 ], [ %408, %406 ]
  %415 = phi i8 [ %427, %412 ], [ %409, %406 ]
  %416 = load i64, i64* %413, align 8
  %417 = getelementptr inbounds i64, i64* %413, i64 1
  %418 = load i64, i64* %417, align 8
  %419 = or i64 %418, %416
  %420 = getelementptr inbounds i64, i64* %413, i64 2
  %421 = load i64, i64* %420, align 8
  %422 = or i64 %421, %419
  %423 = getelementptr inbounds i64, i64* %413, i64 3
  %424 = load i64, i64* %423, align 8
  %425 = or i64 %424, %422
  %426 = icmp eq i64 %425, 0
  %427 = select i1 %426, i8 %415, i8 1
  %428 = add nuw i32 %414, 4
  %429 = getelementptr inbounds i64, i64* %413, i64 4
  %430 = icmp ult i32 %428, %384
  br i1 %430, label %412, label %431

431:                                              ; preds = %345, %352, %406, %412, %310, %383
  %432 = phi i32 [ %384, %383 ], [ %312, %310 ], [ %384, %412 ], [ %384, %406 ], [ %312, %352 ], [ %312, %345 ]
  %433 = phi i8 [ %305, %383 ], [ %305, %310 ], [ %410, %406 ], [ %427, %412 ], [ %346, %345 ], [ %378, %352 ]
  %434 = icmp eq i8 %433, 0
  br i1 %434, label %448, label %435

435:                                              ; preds = %431
  %436 = icmp ult i32 %303, %432
  br i1 %436, label %437, label %449

437:                                              ; preds = %435
  %438 = zext i32 %303 to i64
  %439 = zext i32 %432 to i64
  br label %442

440:                                              ; preds = %442
  %441 = icmp ult i64 %447, %439
  br i1 %441, label %442, label %449

442:                                              ; preds = %437, %440
  %443 = phi i64 [ %438, %437 ], [ %447, %440 ]
  %444 = getelementptr inbounds i64, i64* %273, i64 %443
  %445 = load i64, i64* %444, align 8
  %446 = icmp eq i64 %445, 0
  %447 = add nuw nsw i64 %443, 1
  br i1 %446, label %440, label %449

448:                                              ; preds = %431
  store i8 1, i8* %12, align 1
  br label %706

449:                                              ; preds = %442, %440, %286, %435
  %450 = phi i8* [ %282, %286 ], [ %275, %435 ], [ %275, %440 ], [ %275, %442 ]
  %451 = phi i32 [ %287, %286 ], [ %432, %435 ], [ %432, %440 ], [ %432, %442 ]
  %452 = phi i32 [ 1, %286 ], [ %304, %435 ], [ 2, %442 ], [ %304, %440 ]
  %453 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %22, i64 0, i32 0
  store i32 %451, i32* %453, align 8
  %454 = bitcast i64* %2 to i8*
  %455 = zext i32 %28 to i64
  %456 = shl nuw nsw i64 %455, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %450, i8* align 8 %454, i64 %456, i1 false)
  %457 = icmp eq i8 %3, 0
  br i1 %457, label %688, label %458

458:                                              ; preds = %449
  %459 = icmp eq i32 %271, 0
  br i1 %459, label %462, label %460

460:                                              ; preds = %458
  %461 = load i32, i32* %453, align 8
  br label %462

462:                                              ; preds = %458, %460
  %463 = phi i32 [ %461, %460 ], [ %28, %458 ]
  %464 = load i64*, i64** %272, align 8
  %465 = load i64*, i64** %260, align 8
  %466 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %13, align 8
  %467 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %466, i64 0, i32 0
  %468 = load i32, i32* %467, align 8
  %469 = icmp ult i32 %468, %463
  %470 = select i1 %469, i32 %468, i32 %463
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %565, label %472

472:                                              ; preds = %462
  %473 = zext i32 %470 to i64
  %474 = icmp ult i32 %470, 4
  br i1 %474, label %475, label %477

475:                                              ; preds = %560, %477, %472
  %476 = phi i64 [ 0, %477 ], [ 0, %472 ], [ %484, %560 ]
  br label %577

477:                                              ; preds = %472
  %478 = getelementptr i64, i64* %465, i64 %473
  %479 = getelementptr i64, i64* %464, i64 %473
  %480 = icmp ult i64* %465, %479
  %481 = icmp ult i64* %464, %478
  %482 = and i1 %480, %481
  br i1 %482, label %475, label %483

483:                                              ; preds = %477
  %484 = and i64 %473, 4294967292
  %485 = add nsw i64 %484, -4
  %486 = lshr exact i64 %485, 2
  %487 = add nuw nsw i64 %486, 1
  %488 = and i64 %487, 3
  %489 = icmp ult i64 %485, 12
  br i1 %489, label %541, label %490

490:                                              ; preds = %483
  %491 = sub nsw i64 %487, %488
  br label %492

492:                                              ; preds = %492, %490
  %493 = phi i64 [ 0, %490 ], [ %538, %492 ]
  %494 = phi i64 [ %491, %490 ], [ %539, %492 ]
  %495 = getelementptr inbounds i64, i64* %464, i64 %493
  %496 = bitcast i64* %495 to <2 x i64>*
  %497 = load <2 x i64>, <2 x i64>* %496, align 8, !alias.scope !29
  %498 = getelementptr inbounds i64, i64* %495, i64 2
  %499 = bitcast i64* %498 to <2 x i64>*
  %500 = load <2 x i64>, <2 x i64>* %499, align 8, !alias.scope !29
  %501 = getelementptr inbounds i64, i64* %465, i64 %493
  %502 = bitcast i64* %501 to <2 x i64>*
  store <2 x i64> %497, <2 x i64>* %502, align 8, !alias.scope !32, !noalias !29
  %503 = getelementptr inbounds i64, i64* %501, i64 2
  %504 = bitcast i64* %503 to <2 x i64>*
  store <2 x i64> %500, <2 x i64>* %504, align 8, !alias.scope !32, !noalias !29
  %505 = or i64 %493, 4
  %506 = getelementptr inbounds i64, i64* %464, i64 %505
  %507 = bitcast i64* %506 to <2 x i64>*
  %508 = load <2 x i64>, <2 x i64>* %507, align 8, !alias.scope !29
  %509 = getelementptr inbounds i64, i64* %506, i64 2
  %510 = bitcast i64* %509 to <2 x i64>*
  %511 = load <2 x i64>, <2 x i64>* %510, align 8, !alias.scope !29
  %512 = getelementptr inbounds i64, i64* %465, i64 %505
  %513 = bitcast i64* %512 to <2 x i64>*
  store <2 x i64> %508, <2 x i64>* %513, align 8, !alias.scope !32, !noalias !29
  %514 = getelementptr inbounds i64, i64* %512, i64 2
  %515 = bitcast i64* %514 to <2 x i64>*
  store <2 x i64> %511, <2 x i64>* %515, align 8, !alias.scope !32, !noalias !29
  %516 = or i64 %493, 8
  %517 = getelementptr inbounds i64, i64* %464, i64 %516
  %518 = bitcast i64* %517 to <2 x i64>*
  %519 = load <2 x i64>, <2 x i64>* %518, align 8, !alias.scope !29
  %520 = getelementptr inbounds i64, i64* %517, i64 2
  %521 = bitcast i64* %520 to <2 x i64>*
  %522 = load <2 x i64>, <2 x i64>* %521, align 8, !alias.scope !29
  %523 = getelementptr inbounds i64, i64* %465, i64 %516
  %524 = bitcast i64* %523 to <2 x i64>*
  store <2 x i64> %519, <2 x i64>* %524, align 8, !alias.scope !32, !noalias !29
  %525 = getelementptr inbounds i64, i64* %523, i64 2
  %526 = bitcast i64* %525 to <2 x i64>*
  store <2 x i64> %522, <2 x i64>* %526, align 8, !alias.scope !32, !noalias !29
  %527 = or i64 %493, 12
  %528 = getelementptr inbounds i64, i64* %464, i64 %527
  %529 = bitcast i64* %528 to <2 x i64>*
  %530 = load <2 x i64>, <2 x i64>* %529, align 8, !alias.scope !29
  %531 = getelementptr inbounds i64, i64* %528, i64 2
  %532 = bitcast i64* %531 to <2 x i64>*
  %533 = load <2 x i64>, <2 x i64>* %532, align 8, !alias.scope !29
  %534 = getelementptr inbounds i64, i64* %465, i64 %527
  %535 = bitcast i64* %534 to <2 x i64>*
  store <2 x i64> %530, <2 x i64>* %535, align 8, !alias.scope !32, !noalias !29
  %536 = getelementptr inbounds i64, i64* %534, i64 2
  %537 = bitcast i64* %536 to <2 x i64>*
  store <2 x i64> %533, <2 x i64>* %537, align 8, !alias.scope !32, !noalias !29
  %538 = add i64 %493, 16
  %539 = add i64 %494, -4
  %540 = icmp eq i64 %539, 0
  br i1 %540, label %541, label %492, !llvm.loop !34

541:                                              ; preds = %492, %483
  %542 = phi i64 [ 0, %483 ], [ %538, %492 ]
  %543 = icmp eq i64 %488, 0
  br i1 %543, label %560, label %544

544:                                              ; preds = %541, %544
  %545 = phi i64 [ %557, %544 ], [ %542, %541 ]
  %546 = phi i64 [ %558, %544 ], [ %488, %541 ]
  %547 = getelementptr inbounds i64, i64* %464, i64 %545
  %548 = bitcast i64* %547 to <2 x i64>*
  %549 = load <2 x i64>, <2 x i64>* %548, align 8, !alias.scope !29
  %550 = getelementptr inbounds i64, i64* %547, i64 2
  %551 = bitcast i64* %550 to <2 x i64>*
  %552 = load <2 x i64>, <2 x i64>* %551, align 8, !alias.scope !29
  %553 = getelementptr inbounds i64, i64* %465, i64 %545
  %554 = bitcast i64* %553 to <2 x i64>*
  store <2 x i64> %549, <2 x i64>* %554, align 8, !alias.scope !32, !noalias !29
  %555 = getelementptr inbounds i64, i64* %553, i64 2
  %556 = bitcast i64* %555 to <2 x i64>*
  store <2 x i64> %552, <2 x i64>* %556, align 8, !alias.scope !32, !noalias !29
  %557 = add i64 %545, 4
  %558 = add i64 %546, -1
  %559 = icmp eq i64 %558, 0
  br i1 %559, label %560, label %544, !llvm.loop !35

560:                                              ; preds = %544, %541
  %561 = icmp eq i64 %484, %473
  br i1 %561, label %562, label %475

562:                                              ; preds = %577, %560
  %563 = phi i64 [ %484, %560 ], [ %582, %577 ]
  %564 = trunc i64 %563 to i32
  br label %565

565:                                              ; preds = %562, %462
  %566 = phi i32 [ 0, %462 ], [ %564, %562 ]
  %567 = icmp ult i32 %566, %463
  br i1 %567, label %568, label %584

568:                                              ; preds = %565
  %569 = zext i32 %566 to i64
  %570 = getelementptr i64, i64* %465, i64 %569
  %571 = bitcast i64* %570 to i8*
  %572 = xor i32 %566, -1
  %573 = add i32 %463, %572
  %574 = zext i32 %573 to i64
  %575 = shl nuw nsw i64 %574, 3
  %576 = add nuw nsw i64 %575, 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %571, i8 0, i64 %576, i1 false) #11
  br label %584

577:                                              ; preds = %475, %577
  %578 = phi i64 [ %582, %577 ], [ %476, %475 ]
  %579 = getelementptr inbounds i64, i64* %464, i64 %578
  %580 = load i64, i64* %579, align 8
  %581 = getelementptr inbounds i64, i64* %465, i64 %578
  store i64 %580, i64* %581, align 8
  %582 = add nuw nsw i64 %578, 1
  %583 = icmp ult i64 %582, %473
  br i1 %583, label %577, label %562, !llvm.loop !36

584:                                              ; preds = %568, %565
  %585 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %466, i64 0, i32 7
  %586 = load %struct.GX_AVarSegmentRec_*, %struct.GX_AVarSegmentRec_** %585, align 8
  %587 = icmp ne %struct.GX_AVarSegmentRec_* %586, null
  %588 = icmp ne i32 %470, 0
  %589 = and i1 %588, %587
  br i1 %589, label %590, label %634

590:                                              ; preds = %584
  %591 = zext i32 %470 to i64
  br label %592

592:                                              ; preds = %630, %590
  %593 = phi i64 [ 0, %590 ], [ %631, %630 ]
  %594 = phi %struct.GX_AVarSegmentRec_* [ %586, %590 ], [ %632, %630 ]
  %595 = getelementptr inbounds %struct.GX_AVarSegmentRec_, %struct.GX_AVarSegmentRec_* %594, i64 0, i32 0
  %596 = load i16, i16* %595, align 8
  %597 = icmp ugt i16 %596, 1
  br i1 %597, label %598, label %630

598:                                              ; preds = %592
  %599 = getelementptr inbounds i64, i64* %465, i64 %593
  %600 = load i64, i64* %599, align 8
  %601 = getelementptr inbounds %struct.GX_AVarSegmentRec_, %struct.GX_AVarSegmentRec_* %594, i64 0, i32 1
  %602 = load %struct.GX_AVarCorrespondenceRec_*, %struct.GX_AVarCorrespondenceRec_** %601, align 8
  %603 = zext i16 %596 to i64
  br label %604

604:                                              ; preds = %627, %598
  %605 = phi i64 [ 1, %598 ], [ %628, %627 ]
  %606 = getelementptr inbounds %struct.GX_AVarCorrespondenceRec_, %struct.GX_AVarCorrespondenceRec_* %602, i64 %605, i32 1
  %607 = load i64, i64* %606, align 8
  %608 = icmp slt i64 %600, %607
  br i1 %608, label %609, label %627

609:                                              ; preds = %604
  %610 = and i64 %605, 4294967295
  %611 = add nuw i64 %605, 4294967295
  %612 = and i64 %611, 4294967295
  %613 = getelementptr inbounds %struct.GX_AVarCorrespondenceRec_, %struct.GX_AVarCorrespondenceRec_* %602, i64 %612, i32 1
  %614 = load i64, i64* %613, align 8
  %615 = sub nsw i64 %600, %614
  %616 = getelementptr inbounds %struct.GX_AVarCorrespondenceRec_, %struct.GX_AVarCorrespondenceRec_* %602, i64 %610, i32 0
  %617 = load i64, i64* %616, align 8
  %618 = getelementptr inbounds %struct.GX_AVarCorrespondenceRec_, %struct.GX_AVarCorrespondenceRec_* %602, i64 %612, i32 0
  %619 = load i64, i64* %618, align 8
  %620 = sub nsw i64 %617, %619
  %621 = sub nsw i64 %607, %614
  %622 = call i64 @FT_MulDiv(i64 %615, i64 %620, i64 %621) #11
  %623 = load %struct.GX_AVarCorrespondenceRec_*, %struct.GX_AVarCorrespondenceRec_** %601, align 8
  %624 = getelementptr inbounds %struct.GX_AVarCorrespondenceRec_, %struct.GX_AVarCorrespondenceRec_* %623, i64 %612, i32 0
  %625 = load i64, i64* %624, align 8
  %626 = add nsw i64 %625, %622
  store i64 %626, i64* %599, align 8
  br label %630

627:                                              ; preds = %604
  %628 = add nuw nsw i64 %605, 1
  %629 = icmp eq i64 %628, %603
  br i1 %629, label %630, label %604

630:                                              ; preds = %627, %609, %592
  %631 = add nuw nsw i64 %593, 1
  %632 = getelementptr inbounds %struct.GX_AVarSegmentRec_, %struct.GX_AVarSegmentRec_* %594, i64 1
  %633 = icmp ult i64 %631, %591
  br i1 %633, label %592, label %634

634:                                              ; preds = %630, %584
  br i1 %471, label %688, label %635

635:                                              ; preds = %634
  %636 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %466, i64 0, i32 3
  %637 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %636, align 8
  %638 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %637, i64 0, i32 3
  %639 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %638, align 8
  %640 = zext i32 %470 to i64
  br label %641

641:                                              ; preds = %683, %635
  %642 = phi i64 [ 0, %635 ], [ %685, %683 ]
  %643 = phi %struct.FT_Var_Axis_* [ %639, %635 ], [ %686, %683 ]
  %644 = getelementptr inbounds i64, i64* %465, i64 %642
  %645 = load i64, i64* %644, align 8
  %646 = icmp slt i64 %645, 0
  br i1 %646, label %647, label %664

647:                                              ; preds = %641
  %648 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %643, i64 0, i32 2
  %649 = load i64, i64* %648, align 8
  %650 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %643, i64 0, i32 1
  %651 = load i64, i64* %650, align 8
  %652 = sub nsw i64 %649, %651
  %653 = shl i64 %645, 32
  %654 = ashr exact i64 %653, 32
  %655 = shl i64 %652, 32
  %656 = ashr exact i64 %655, 32
  %657 = mul nsw i64 %656, %654
  %658 = ashr i64 %657, 63
  %659 = add nsw i64 %657, 32768
  %660 = add nsw i64 %659, %658
  %661 = shl i64 %660, 16
  %662 = ashr i64 %661, 32
  %663 = add nsw i64 %662, %649
  br label %683

664:                                              ; preds = %641
  %665 = icmp eq i64 %645, 0
  %666 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %643, i64 0, i32 2
  %667 = load i64, i64* %666, align 8
  br i1 %665, label %683, label %668

668:                                              ; preds = %664
  %669 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %643, i64 0, i32 3
  %670 = load i64, i64* %669, align 8
  %671 = sub nsw i64 %670, %667
  %672 = shl i64 %645, 32
  %673 = ashr exact i64 %672, 32
  %674 = shl i64 %671, 32
  %675 = ashr exact i64 %674, 32
  %676 = mul nsw i64 %675, %673
  %677 = ashr i64 %676, 63
  %678 = add nsw i64 %676, 32768
  %679 = add nsw i64 %678, %677
  %680 = shl i64 %679, 16
  %681 = ashr i64 %680, 32
  %682 = add nsw i64 %681, %667
  br label %683

683:                                              ; preds = %664, %668, %647
  %684 = phi i64 [ %682, %668 ], [ %663, %647 ], [ %667, %664 ]
  store i64 %684, i64* %644, align 8
  %685 = add nuw nsw i64 %642, 1
  %686 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %643, i64 1
  %687 = icmp ult i64 %685, %640
  br i1 %687, label %641, label %688

688:                                              ; preds = %683, %634, %449
  store i8 1, i8* %12, align 1
  %689 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 42
  %690 = load i32*, i32** %689, align 8
  %691 = icmp eq i32* %690, null
  br i1 %691, label %702, label %692

692:                                              ; preds = %688
  switch i32 %452, label %702 [
    i32 2, label %693
    i32 1, label %698
  ]

693:                                              ; preds = %692
  %694 = bitcast i32* %690 to i8*
  call void @ft_mem_free(%struct.FT_MemoryRec_* %11, i8* nonnull %694) #11
  store i32* null, i32** %689, align 8
  %695 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 26
  %696 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %695, align 8
  %697 = call fastcc i32 @tt_face_load_cvt(%struct.TT_FaceRec_* %0, %struct.FT_StreamRec_* %696)
  store i32 %697, i32* %8, align 4
  br label %702

698:                                              ; preds = %692
  %699 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 26
  %700 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %699, align 8
  %701 = call fastcc i32 @tt_face_vary_cvt(%struct.TT_FaceRec_* %0, %struct.FT_StreamRec_* %700)
  store i32 %701, i32* %8, align 4
  br label %702

702:                                              ; preds = %688, %692, %698, %693
  %703 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 45
  %704 = load i8*, i8** %703, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %11, i8* %704) #11
  store i8* null, i8** %703, align 8
  %705 = load i32, i32* %8, align 4
  br label %706

706:                                              ; preds = %41, %702, %16, %256, %263, %279, %448
  %707 = phi i32 [ -1, %448 ], [ %284, %279 ], [ %268, %263 ], [ %257, %256 ], [ %17, %16 ], [ %705, %702 ], [ 6, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  ret i32 %707
}

declare hidden i8* @ft_mem_realloc(%struct.FT_MemoryRec_*, i64, i64, i64, i8*, i32*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare hidden void @ft_mem_free(%struct.FT_MemoryRec_*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @tt_face_load_cvt(%struct.TT_FaceRec_*, %struct.FT_StreamRec_*) unnamed_addr #2 {
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #11
  %6 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 7
  %7 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %6, align 8
  %8 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  store i64 -6148914691236517206, i64* %4, align 8
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %10 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %9, align 8
  %11 = call i32 %10(%struct.TT_FaceRec_* %0, i64 1668707360, %struct.FT_StreamRec_* %1, i64* nonnull %4) #11
  store i32 %11, i32* %3, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 41
  %15 = bitcast i64* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false)
  store i32 0, i32* %3, align 4
  br label %50

16:                                               ; preds = %2
  %17 = load i64, i64* %4, align 8
  %18 = lshr i64 %17, 1
  %19 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 41
  store i64 %18, i64* %19, align 8
  %20 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %7, i64 4, i64 0, i64 %18, i8* null, i32* nonnull %3) #11
  %21 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 42
  %22 = bitcast i32** %21 to i8**
  store i8* %20, i8** %22, align 8
  %23 = load i32, i32* %3, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %50

25:                                               ; preds = %16
  %26 = load i64, i64* %19, align 8
  %27 = shl i64 %26, 1
  %28 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %1, i64 %27) #11
  store i32 %28, i32* %3, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %50

30:                                               ; preds = %25
  %31 = load i32*, i32** %21, align 8
  %32 = load i64, i64* %19, align 8
  %33 = getelementptr inbounds i32, i32* %31, i64 %32
  %34 = icmp sgt i64 %32, 0
  br i1 %34, label %35, label %42

35:                                               ; preds = %30, %35
  %36 = phi i32* [ %40, %35 ], [ %31, %30 ]
  %37 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %1) #11
  %38 = sext i16 %37 to i32
  %39 = shl nsw i32 %38, 6
  store i32 %39, i32* %36, align 4
  %40 = getelementptr inbounds i32, i32* %36, i64 1
  %41 = icmp ult i32* %40, %33
  br i1 %41, label %35, label %42

42:                                               ; preds = %35, %30
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %1) #11
  %43 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 49
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = load i32, i32* %3, align 4
  br label %50

48:                                               ; preds = %42
  %49 = call fastcc i32 @tt_face_vary_cvt(%struct.TT_FaceRec_* %0, %struct.FT_StreamRec_* %1)
  store i32 %49, i32* %3, align 4
  br label %50

50:                                               ; preds = %46, %25, %16, %48, %13
  %51 = phi i32 [ %47, %46 ], [ %28, %25 ], [ %23, %16 ], [ %49, %48 ], [ 0, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #11
  ret i32 %51
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @tt_face_vary_cvt(%struct.TT_FaceRec_*, %struct.FT_StreamRec_*) unnamed_addr #2 {
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  store i32 -1431655766, i32* %3, align 4
  %8 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 7
  %9 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %8, align 8
  %10 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  store i64 -6148914691236517206, i64* %4, align 8
  %11 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 50
  %12 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %11, align 8
  %13 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #11
  store i32 -1431655766, i32* %5, align 4
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #11
  store i32 0, i32* %6, align 4
  %15 = icmp eq %struct.GX_BlendRec_* %12, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %330

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 42
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  store i32 0, i32* %3, align 4
  br label %330

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %24 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %23, align 8
  %25 = call i32 %24(%struct.TT_FaceRec_* %0, i64 1668702578, %struct.FT_StreamRec_* %1, i64* nonnull %4) #11
  store i32 %25, i32* %3, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %22
  store i32 0, i32* %3, align 4
  br label %330

28:                                               ; preds = %22
  %29 = load i64, i64* %4, align 8
  %30 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %1, i64 %29) #11
  store i32 %30, i32* %3, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %28
  store i32 0, i32* %3, align 4
  br label %330

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 8
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 0
  %38 = bitcast %struct.FT_StreamRec_* %1 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %36, %39
  %41 = call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %1) #11
  %42 = icmp eq i64 %41, 65536
  br i1 %42, label %44, label %43

43:                                               ; preds = %33
  store i32 0, i32* %3, align 4
  br label %324

44:                                               ; preds = %33
  %45 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %12, i64 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = zext i32 %46 to i64
  %48 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %9, i64 8, i64 0, i64 %47, i8* null, i32* nonnull %3) #11
  %49 = bitcast i8* %48 to i64*
  %50 = load i32, i32* %3, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %324

52:                                               ; preds = %44
  %53 = load i32, i32* %45, align 8
  %54 = zext i32 %53 to i64
  %55 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %9, i64 8, i64 0, i64 %54, i8* null, i32* nonnull %3) #11
  %56 = bitcast i8* %55 to i64*
  %57 = load i32, i32* %3, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %324

59:                                               ; preds = %52
  %60 = load i32, i32* %45, align 8
  %61 = zext i32 %60 to i64
  %62 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %9, i64 8, i64 0, i64 %61, i8* null, i32* nonnull %3) #11
  %63 = bitcast i8* %62 to i64*
  %64 = load i32, i32* %3, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %324

66:                                               ; preds = %59
  %67 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %1) #11
  %68 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %1) #11
  %69 = zext i16 %68 to i64
  %70 = and i16 %67, 4095
  %71 = zext i16 %70 to i32
  %72 = shl nuw nsw i16 %70, 2
  %73 = zext i16 %72 to i64
  %74 = add nuw nsw i64 %73, %69
  %75 = load i64, i64* %4, align 8
  %76 = icmp ugt i64 %74, %75
  br i1 %76, label %77, label %78

77:                                               ; preds = %66
  store i32 8, i32* %3, align 4
  br label %324

78:                                               ; preds = %66
  %79 = add i64 %40, %69
  %80 = icmp slt i16 %67, 0
  br i1 %80, label %81, label %104

81:                                               ; preds = %78
  %82 = load i64, i64* %35, align 8
  %83 = load i8*, i8** %37, align 8
  %84 = ptrtoint i8* %83 to i64
  %85 = sub i64 %82, %84
  %86 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 9
  %87 = load i8*, i8** %86, align 8
  %88 = ptrtoint i8* %87 to i64
  %89 = sub i64 %88, %84
  %90 = icmp ult i64 %79, %89
  %91 = getelementptr inbounds i8, i8* %83, i64 %79
  %92 = select i1 %90, i8* %91, i8* %87
  store i8* %92, i8** %34, align 8
  %93 = call fastcc i16* @ft_var_readpackedpoints(%struct.FT_StreamRec_* %1, i64 %75, i32* nonnull %6)
  %94 = load i64, i64* %35, align 8
  %95 = load i8*, i8** %37, align 8
  %96 = ptrtoint i8* %95 to i64
  %97 = sub i64 %94, %96
  %98 = load i8*, i8** %86, align 8
  %99 = ptrtoint i8* %98 to i64
  %100 = sub i64 %99, %96
  %101 = icmp ult i64 %85, %100
  %102 = getelementptr inbounds i8, i8* %95, i64 %85
  %103 = select i1 %101, i8* %102, i8* %98
  store i8* %103, i8** %34, align 8
  br label %104

104:                                              ; preds = %78, %81
  %105 = phi i64 [ %97, %81 ], [ %79, %78 ]
  %106 = phi i16* [ %93, %81 ], [ null, %78 ]
  %107 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 41
  %108 = load i64, i64* %107, align 8
  %109 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %9, i64 8, i64 0, i64 %108, i8* null, i32* nonnull %3) #11
  %110 = bitcast i8* %109 to i64*
  %111 = load i32, i32* %3, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %328

113:                                              ; preds = %104
  %114 = icmp eq i16 %70, 0
  br i1 %114, label %119, label %115

115:                                              ; preds = %113
  %116 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %12, i64 0, i32 17
  %117 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %12, i64 0, i32 18
  %118 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 9
  br label %122

119:                                              ; preds = %302, %113
  %120 = load i64, i64* %107, align 8
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %328, label %308

122:                                              ; preds = %302, %115
  %123 = phi i16* [ null, %115 ], [ %303, %302 ]
  %124 = phi i32 [ 0, %115 ], [ %306, %302 ]
  %125 = phi i64 [ %105, %115 ], [ %305, %302 ]
  %126 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %1) #11
  %127 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %1) #11
  %128 = zext i16 %127 to i32
  %129 = icmp slt i16 %127, 0
  br i1 %129, label %130, label %143

130:                                              ; preds = %122
  %131 = load i32, i32* %45, align 8
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %160, label %133

133:                                              ; preds = %130, %133
  %134 = phi i64 [ %139, %133 ], [ 0, %130 ]
  %135 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %1) #11
  %136 = sext i16 %135 to i64
  %137 = shl nsw i64 %136, 2
  %138 = getelementptr inbounds i64, i64* %49, i64 %134
  store i64 %137, i64* %138, align 8
  %139 = add nuw nsw i64 %134, 1
  %140 = load i32, i32* %45, align 8
  %141 = zext i32 %140 to i64
  %142 = icmp ult i64 %139, %141
  br i1 %142, label %133, label %160

143:                                              ; preds = %122
  %144 = and i32 %128, 4095
  %145 = load i32, i32* %116, align 8
  %146 = icmp ult i32 %144, %145
  br i1 %146, label %148, label %147

147:                                              ; preds = %143
  store i32 8, i32* %3, align 4
  br label %328

148:                                              ; preds = %143
  %149 = load i64*, i64** %117, align 8
  %150 = icmp eq i64* %149, null
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  store i32 8, i32* %3, align 4
  br label %328

152:                                              ; preds = %148
  %153 = load i32, i32* %45, align 8
  %154 = mul i32 %153, %144
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds i64, i64* %149, i64 %155
  %157 = bitcast i64* %156 to i8*
  %158 = zext i32 %153 to i64
  %159 = shl nuw nsw i64 %158, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %157, i64 %159, i1 false)
  br label %160

160:                                              ; preds = %133, %130, %152
  %161 = and i32 %128, 16384
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %188, label %163

163:                                              ; preds = %160
  %164 = load i32, i32* %45, align 8
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %188, label %168

166:                                              ; preds = %168
  %167 = icmp eq i32 %175, 0
  br i1 %167, label %188, label %178

168:                                              ; preds = %163, %168
  %169 = phi i64 [ %174, %168 ], [ 0, %163 ]
  %170 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %1) #11
  %171 = sext i16 %170 to i64
  %172 = shl nsw i64 %171, 2
  %173 = getelementptr inbounds i64, i64* %56, i64 %169
  store i64 %172, i64* %173, align 8
  %174 = add nuw nsw i64 %169, 1
  %175 = load i32, i32* %45, align 8
  %176 = zext i32 %175 to i64
  %177 = icmp ult i64 %174, %176
  br i1 %177, label %168, label %166

178:                                              ; preds = %166, %178
  %179 = phi i64 [ %184, %178 ], [ 0, %166 ]
  %180 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %1) #11
  %181 = sext i16 %180 to i64
  %182 = shl nsw i64 %181, 2
  %183 = getelementptr inbounds i64, i64* %63, i64 %179
  store i64 %182, i64* %183, align 8
  %184 = add nuw nsw i64 %179, 1
  %185 = load i32, i32* %45, align 8
  %186 = zext i32 %185 to i64
  %187 = icmp ult i64 %184, %186
  br i1 %187, label %178, label %188

188:                                              ; preds = %178, %163, %166, %160
  %189 = call fastcc i64 @ft_var_apply_tuple(%struct.GX_BlendRec_* nonnull %12, i16 zeroext %127, i64* %49, i64* %56, i64* %63)
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %302, label %191

191:                                              ; preds = %188
  %192 = load i64, i64* %35, align 8
  %193 = load i8*, i8** %37, align 8
  %194 = ptrtoint i8* %193 to i64
  %195 = sub i64 %192, %194
  %196 = load i8*, i8** %118, align 8
  %197 = ptrtoint i8* %196 to i64
  %198 = sub i64 %197, %194
  %199 = icmp ult i64 %125, %198
  %200 = getelementptr inbounds i8, i8* %193, i64 %125
  %201 = select i1 %199, i8* %200, i8* %196
  store i8* %201, i8** %34, align 8
  %202 = and i32 %128, 8192
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %208, label %204

204:                                              ; preds = %191
  %205 = load i64, i64* %4, align 8
  %206 = call fastcc i16* @ft_var_readpackedpoints(%struct.FT_StreamRec_* %1, i64 %205, i32* nonnull %5)
  %207 = load i32, i32* %5, align 4
  br label %210

208:                                              ; preds = %191
  %209 = load i32, i32* %6, align 4
  store i32 %209, i32* %5, align 4
  br label %210

210:                                              ; preds = %208, %204
  %211 = phi i32 [ %209, %208 ], [ %207, %204 ]
  %212 = phi i16* [ %123, %208 ], [ %206, %204 ]
  %213 = phi i16* [ %106, %208 ], [ %206, %204 ]
  %214 = load i64, i64* %4, align 8
  %215 = icmp eq i32 %211, 0
  br i1 %215, label %216, label %218

216:                                              ; preds = %210
  %217 = load i64, i64* %107, align 8
  br label %220

218:                                              ; preds = %210
  %219 = zext i32 %211 to i64
  br label %220

220:                                              ; preds = %218, %216
  %221 = phi i64 [ %217, %216 ], [ %219, %218 ]
  %222 = trunc i64 %221 to i32
  %223 = call fastcc i64* @ft_var_readpackeddeltas(%struct.FT_StreamRec_* %1, i64 %214, i32 %222)
  %224 = icmp ne i16* %213, null
  %225 = icmp ne i64* %223, null
  %226 = and i1 %224, %225
  br i1 %226, label %227, label %287

227:                                              ; preds = %220
  %228 = icmp eq i16* %212, inttoptr (i64 -1 to i16*)
  br i1 %228, label %234, label %229

229:                                              ; preds = %227
  br i1 %215, label %289, label %230

230:                                              ; preds = %229
  %231 = shl i64 %189, 32
  %232 = ashr exact i64 %231, 32
  %233 = zext i32 %211 to i64
  br label %263

234:                                              ; preds = %227
  %235 = zext i32 %211 to i64
  %236 = load i64, i64* %107, align 8
  %237 = icmp ne i64 %236, %235
  %238 = icmp eq i32 %211, 0
  %239 = or i1 %237, %238
  br i1 %239, label %291, label %240

240:                                              ; preds = %234
  %241 = shl i64 %189, 32
  %242 = ashr exact i64 %241, 32
  br label %243

243:                                              ; preds = %240, %243
  %244 = phi i64 [ 0, %240 ], [ %260, %243 ]
  %245 = phi i32 [ 0, %240 ], [ %259, %243 ]
  %246 = getelementptr inbounds i64, i64* %110, i64 %244
  %247 = load i64, i64* %246, align 8
  %248 = getelementptr inbounds i64, i64* %223, i64 %244
  %249 = load i64, i64* %248, align 8
  %250 = shl i64 %249, 32
  %251 = ashr exact i64 %250, 32
  %252 = mul nsw i64 %251, %242
  %253 = ashr i64 %252, 63
  %254 = add nsw i64 %252, 32768
  %255 = add nsw i64 %254, %253
  %256 = shl i64 %255, 16
  %257 = ashr i64 %256, 32
  %258 = add nsw i64 %257, %247
  store i64 %258, i64* %246, align 8
  %259 = add i32 %245, 1
  %260 = zext i32 %259 to i64
  %261 = load i64, i64* %107, align 8
  %262 = icmp ugt i64 %261, %260
  br i1 %262, label %243, label %287

263:                                              ; preds = %284, %230
  %264 = phi i64 [ 0, %230 ], [ %285, %284 ]
  %265 = getelementptr inbounds i16, i16* %213, i64 %264
  %266 = load i16, i16* %265, align 2
  %267 = zext i16 %266 to i64
  %268 = load i64, i64* %107, align 8
  %269 = icmp ugt i64 %268, %267
  br i1 %269, label %270, label %284

270:                                              ; preds = %263
  %271 = getelementptr inbounds i64, i64* %110, i64 %267
  %272 = load i64, i64* %271, align 8
  %273 = getelementptr inbounds i64, i64* %223, i64 %264
  %274 = load i64, i64* %273, align 8
  %275 = shl i64 %274, 32
  %276 = ashr exact i64 %275, 32
  %277 = mul nsw i64 %276, %232
  %278 = ashr i64 %277, 63
  %279 = add nsw i64 %277, 32768
  %280 = add nsw i64 %279, %278
  %281 = shl i64 %280, 16
  %282 = ashr i64 %281, 32
  %283 = add nsw i64 %282, %272
  store i64 %283, i64* %271, align 8
  br label %284

284:                                              ; preds = %263, %270
  %285 = add nuw nsw i64 %264, 1
  %286 = icmp eq i64 %285, %233
  br i1 %286, label %287, label %263

287:                                              ; preds = %284, %243, %220
  %288 = icmp eq i16* %212, inttoptr (i64 -1 to i16*)
  br i1 %288, label %291, label %289

289:                                              ; preds = %229, %287
  %290 = bitcast i16* %212 to i8*
  call void @ft_mem_free(%struct.FT_MemoryRec_* %9, i8* %290) #11
  br label %291

291:                                              ; preds = %234, %287, %289
  %292 = phi i16* [ null, %289 ], [ inttoptr (i64 -1 to i16*), %287 ], [ inttoptr (i64 -1 to i16*), %234 ]
  %293 = bitcast i64* %223 to i8*
  call void @ft_mem_free(%struct.FT_MemoryRec_* %9, i8* %293) #11
  %294 = load i8*, i8** %118, align 8
  %295 = load i8*, i8** %37, align 8
  %296 = ptrtoint i8* %294 to i64
  %297 = ptrtoint i8* %295 to i64
  %298 = sub i64 %296, %297
  %299 = icmp ult i64 %195, %298
  %300 = getelementptr inbounds i8, i8* %295, i64 %195
  %301 = select i1 %299, i8* %300, i8* %294
  store i8* %301, i8** %34, align 8
  br label %302

302:                                              ; preds = %188, %291
  %303 = phi i16* [ %292, %291 ], [ %123, %188 ]
  %304 = zext i16 %126 to i64
  %305 = add i64 %125, %304
  %306 = add nuw nsw i32 %124, 1
  %307 = icmp eq i32 %306, %71
  br i1 %307, label %119, label %122

308:                                              ; preds = %119, %308
  %309 = phi i64 [ %321, %308 ], [ 0, %119 ]
  %310 = phi i32 [ %320, %308 ], [ 0, %119 ]
  %311 = getelementptr inbounds i64, i64* %110, i64 %309
  %312 = load i64, i64* %311, align 8
  %313 = add nsw i64 %312, 512
  %314 = lshr i64 %313, 10
  %315 = load i32*, i32** %18, align 8
  %316 = getelementptr inbounds i32, i32* %315, i64 %309
  %317 = load i32, i32* %316, align 4
  %318 = trunc i64 %314 to i32
  %319 = add i32 %317, %318
  store i32 %319, i32* %316, align 4
  %320 = add i32 %310, 1
  %321 = zext i32 %320 to i64
  %322 = load i64, i64* %107, align 8
  %323 = icmp ugt i64 %322, %321
  br i1 %323, label %308, label %328

324:                                              ; preds = %43, %44, %52, %59, %77
  %325 = phi i8* [ %48, %77 ], [ %48, %59 ], [ %48, %52 ], [ %48, %44 ], [ null, %43 ]
  %326 = phi i8* [ %55, %77 ], [ %55, %59 ], [ %55, %52 ], [ null, %44 ], [ null, %43 ]
  %327 = phi i8* [ %62, %77 ], [ %62, %59 ], [ null, %52 ], [ null, %44 ], [ null, %43 ]
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %1) #11
  br label %330

328:                                              ; preds = %308, %119, %104, %151, %147
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %1) #11
  %329 = icmp eq i16* %106, inttoptr (i64 -1 to i16*)
  br i1 %329, label %337, label %330

330:                                              ; preds = %16, %21, %32, %27, %324, %328
  %331 = phi i8* [ %109, %328 ], [ null, %324 ], [ null, %27 ], [ null, %32 ], [ null, %21 ], [ null, %16 ]
  %332 = phi i16* [ %106, %328 ], [ null, %324 ], [ null, %27 ], [ null, %32 ], [ null, %21 ], [ null, %16 ]
  %333 = phi i8* [ %62, %328 ], [ %327, %324 ], [ null, %27 ], [ null, %32 ], [ null, %21 ], [ null, %16 ]
  %334 = phi i8* [ %55, %328 ], [ %326, %324 ], [ null, %27 ], [ null, %32 ], [ null, %21 ], [ null, %16 ]
  %335 = phi i8* [ %48, %328 ], [ %325, %324 ], [ null, %27 ], [ null, %32 ], [ null, %21 ], [ null, %16 ]
  %336 = bitcast i16* %332 to i8*
  call void @ft_mem_free(%struct.FT_MemoryRec_* %9, i8* %336) #11
  br label %337

337:                                              ; preds = %330, %328
  %338 = phi i8* [ %109, %328 ], [ %331, %330 ]
  %339 = phi i8* [ %62, %328 ], [ %333, %330 ]
  %340 = phi i8* [ %55, %328 ], [ %334, %330 ]
  %341 = phi i8* [ %48, %328 ], [ %335, %330 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %9, i8* %341) #11
  call void @ft_mem_free(%struct.FT_MemoryRec_* %9, i8* %340) #11
  call void @ft_mem_free(%struct.FT_MemoryRec_* %9, i8* %339) #11
  call void @ft_mem_free(%struct.FT_MemoryRec_* %9, i8* %338) #11
  %342 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 27
  %343 = call i32 @FT_List_Iterate(%struct.FT_ListRec_* %342, i32 (%struct.FT_ListNodeRec_*, i8*)* nonnull @tt_cvt_ready_iterator, i8* null) #11
  %344 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  ret i32 %344
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare hidden i64 @FT_Stream_Pos(%struct.FT_StreamRec_*) local_unnamed_addr #4

declare hidden i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_*, %struct.FT_Frame_Field_*, i8*) local_unnamed_addr #4

declare hidden i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_*, i64) local_unnamed_addr #4

declare hidden i64 @FT_Stream_GetULong(%struct.FT_StreamRec_*) local_unnamed_addr #4

declare hidden zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_*) local_unnamed_addr #4

declare hidden void @FT_Stream_ExitFrame(%struct.FT_StreamRec_*) local_unnamed_addr #4

declare hidden i32 @FT_Stream_Seek(%struct.FT_StreamRec_*, i64) local_unnamed_addr #4

declare i64 @FT_MulDiv(i64, i64, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i16* @ft_var_readpackedpoints(%struct.FT_StreamRec_*, i64, i32* nocapture) unnamed_addr #2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 7
  %6 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %5, align 8
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  store i32 0, i32* %4, align 4
  store i32 0, i32* %2, align 4
  %8 = tail call signext i8 @FT_Stream_GetChar(%struct.FT_StreamRec_* %0) #11
  %9 = zext i8 %8 to i32
  %10 = icmp eq i8 %8, 0
  br i1 %10, label %85, label %11

11:                                               ; preds = %3
  %12 = icmp slt i8 %8, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %11
  %14 = shl nuw nsw i32 %9, 8
  %15 = and i32 %14, 32512
  %16 = tail call signext i8 @FT_Stream_GetChar(%struct.FT_StreamRec_* %0) #11
  %17 = zext i8 %16 to i32
  %18 = or i32 %15, %17
  br label %19

19:                                               ; preds = %13, %11
  %20 = phi i32 [ %18, %13 ], [ %9, %11 ]
  %21 = zext i32 %20 to i64
  %22 = icmp ugt i64 %21, %1
  br i1 %22, label %85, label %23

23:                                               ; preds = %19
  %24 = add nsw i32 %20, 1
  %25 = zext i32 %24 to i64
  %26 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %6, i64 2, i64 0, i64 %25, i8* null, i32* nonnull %4) #11
  %27 = bitcast i8* %26 to i16*
  %28 = load i32, i32* %4, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %85

30:                                               ; preds = %23
  store i32 %20, i32* %2, align 4
  %31 = icmp eq i32 %20, 0
  br i1 %31, label %85, label %32

32:                                               ; preds = %30, %81
  %33 = phi i16 [ %83, %81 ], [ 0, %30 ]
  %34 = phi i32 [ %82, %81 ], [ 0, %30 ]
  %35 = call signext i8 @FT_Stream_GetChar(%struct.FT_StreamRec_* %0) #11
  %36 = zext i8 %35 to i32
  %37 = icmp slt i8 %35, 0
  br i1 %37, label %38, label %59

38:                                               ; preds = %32
  %39 = and i32 %36, 127
  %40 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %0) #11
  %41 = add i16 %40, %33
  %42 = add nuw i32 %34, 1
  %43 = zext i32 %34 to i64
  %44 = getelementptr inbounds i16, i16* %27, i64 %43
  store i16 %41, i16* %44, align 2
  %45 = icmp eq i32 %39, 0
  br i1 %45, label %81, label %46

46:                                               ; preds = %38, %46
  %47 = phi i16 [ %51, %46 ], [ %41, %38 ]
  %48 = phi i32 [ %56, %46 ], [ 0, %38 ]
  %49 = phi i32 [ %52, %46 ], [ %42, %38 ]
  %50 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %0) #11
  %51 = add i16 %50, %47
  %52 = add i32 %49, 1
  %53 = zext i32 %49 to i64
  %54 = getelementptr inbounds i16, i16* %27, i64 %53
  store i16 %51, i16* %54, align 2
  %55 = icmp ult i32 %52, %20
  %56 = add nuw nsw i32 %48, 1
  %57 = icmp ult i32 %56, %39
  %58 = and i1 %55, %57
  br i1 %58, label %46, label %81

59:                                               ; preds = %32
  %60 = call signext i8 @FT_Stream_GetChar(%struct.FT_StreamRec_* %0) #11
  %61 = zext i8 %60 to i16
  %62 = add i16 %33, %61
  %63 = add nuw i32 %34, 1
  %64 = zext i32 %34 to i64
  %65 = getelementptr inbounds i16, i16* %27, i64 %64
  store i16 %62, i16* %65, align 2
  %66 = icmp eq i8 %35, 0
  br i1 %66, label %81, label %67

67:                                               ; preds = %59, %67
  %68 = phi i16 [ %73, %67 ], [ %62, %59 ]
  %69 = phi i32 [ %78, %67 ], [ 0, %59 ]
  %70 = phi i32 [ %74, %67 ], [ %63, %59 ]
  %71 = call signext i8 @FT_Stream_GetChar(%struct.FT_StreamRec_* %0) #11
  %72 = zext i8 %71 to i16
  %73 = add i16 %68, %72
  %74 = add i32 %70, 1
  %75 = zext i32 %70 to i64
  %76 = getelementptr inbounds i16, i16* %27, i64 %75
  store i16 %73, i16* %76, align 2
  %77 = icmp ult i32 %74, %20
  %78 = add nuw nsw i32 %69, 1
  %79 = icmp ult i32 %78, %36
  %80 = and i1 %77, %79
  br i1 %80, label %67, label %81

81:                                               ; preds = %67, %46, %38, %59
  %82 = phi i32 [ %42, %38 ], [ %63, %59 ], [ %52, %46 ], [ %74, %67 ]
  %83 = phi i16 [ %41, %38 ], [ %62, %59 ], [ %51, %46 ], [ %73, %67 ]
  %84 = icmp ult i32 %82, %20
  br i1 %84, label %32, label %85

85:                                               ; preds = %81, %30, %23, %19, %3
  %86 = phi i16* [ inttoptr (i64 -1 to i16*), %3 ], [ null, %19 ], [ null, %23 ], [ %27, %30 ], [ %27, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  ret i16* %86
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @ft_var_apply_tuple(%struct.GX_BlendRec_* nocapture readonly, i16 zeroext, i64* nocapture readonly, i64* nocapture readonly, i64* nocapture readonly) unnamed_addr #2 {
  %6 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %61, label %10

10:                                               ; preds = %5
  %11 = and i16 %1, 16384
  %12 = icmp eq i16 %11, 0
  br label %13

13:                                               ; preds = %10, %55
  %14 = phi i64 [ 0, %10 ], [ %57, %55 ]
  %15 = phi i64 [ 65536, %10 ], [ %56, %55 ]
  %16 = getelementptr inbounds i64, i64* %2, i64 %14
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %55, label %19

19:                                               ; preds = %13
  %20 = load i64*, i64** %6, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 %14
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %61, label %24

24:                                               ; preds = %19
  %25 = icmp eq i64 %22, %17
  br i1 %25, label %55, label %26

26:                                               ; preds = %24
  br i1 %12, label %27, label %37

27:                                               ; preds = %26
  %28 = icmp slt i64 %17, 0
  %29 = select i1 %28, i64 %17, i64 0
  %30 = icmp slt i64 %22, %29
  br i1 %30, label %61, label %31

31:                                               ; preds = %27
  %32 = icmp sgt i64 %17, 0
  %33 = select i1 %32, i64 %17, i64 0
  %34 = icmp sgt i64 %22, %33
  br i1 %34, label %61, label %35

35:                                               ; preds = %31
  %36 = tail call i64 @FT_MulDiv(i64 %15, i64 %22, i64 %17) #11
  br label %55

37:                                               ; preds = %26
  %38 = getelementptr inbounds i64, i64* %3, i64 %14
  %39 = load i64, i64* %38, align 8
  %40 = icmp sgt i64 %22, %39
  br i1 %40, label %41, label %61

41:                                               ; preds = %37
  %42 = getelementptr inbounds i64, i64* %4, i64 %14
  %43 = load i64, i64* %42, align 8
  %44 = icmp sgt i64 %43, %22
  br i1 %44, label %45, label %61

45:                                               ; preds = %41
  %46 = icmp slt i64 %22, %17
  br i1 %46, label %47, label %51

47:                                               ; preds = %45
  %48 = sub nsw i64 %22, %39
  %49 = sub nsw i64 %17, %39
  %50 = tail call i64 @FT_MulDiv(i64 %15, i64 %48, i64 %49) #11
  br label %55

51:                                               ; preds = %45
  %52 = sub nsw i64 %43, %22
  %53 = sub nsw i64 %43, %17
  %54 = tail call i64 @FT_MulDiv(i64 %15, i64 %52, i64 %53) #11
  br label %55

55:                                               ; preds = %35, %51, %47, %24, %13
  %56 = phi i64 [ %15, %13 ], [ %15, %24 ], [ %50, %47 ], [ %54, %51 ], [ %36, %35 ]
  %57 = add nuw nsw i64 %14, 1
  %58 = load i32, i32* %7, align 8
  %59 = zext i32 %58 to i64
  %60 = icmp ult i64 %57, %59
  br i1 %60, label %13, label %61

61:                                               ; preds = %55, %19, %27, %31, %41, %37, %5
  %62 = phi i64 [ 65536, %5 ], [ 0, %37 ], [ 0, %41 ], [ 0, %31 ], [ 0, %27 ], [ 0, %19 ], [ %56, %55 ]
  ret i64 %62
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @ft_var_readpackeddeltas(%struct.FT_StreamRec_*, i64, i32) unnamed_addr #2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 7
  %6 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %5, align 8
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  store i32 0, i32* %4, align 4
  %8 = zext i32 %2 to i64
  %9 = icmp ugt i64 %8, %1
  br i1 %9, label %77, label %10

10:                                               ; preds = %3
  %11 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %6, i64 8, i64 0, i64 %8, i8* null, i32* nonnull %4) #11
  %12 = bitcast i8* %11 to i64*
  %13 = load i32, i32* %4, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %77

15:                                               ; preds = %10, %71
  %16 = phi i32 [ %74, %71 ], [ 0, %10 ]
  %17 = icmp ult i32 %16, %2
  br i1 %17, label %18, label %77

18:                                               ; preds = %15
  %19 = call signext i8 @FT_Stream_GetChar(%struct.FT_StreamRec_* %0) #11
  %20 = zext i8 %19 to i32
  %21 = and i32 %20, 63
  %22 = icmp slt i8 %19, 0
  br i1 %22, label %23, label %43

23:                                               ; preds = %18
  %24 = zext i32 %16 to i64
  %25 = shl nuw nsw i64 %24, 3
  %26 = getelementptr i8, i8* %11, i64 %25
  %27 = xor i64 %24, -1
  %28 = add nsw i64 %27, %8
  %29 = and i8 %19, 63
  %30 = zext i8 %29 to i64
  %31 = icmp ult i64 %28, %30
  %32 = select i1 %31, i64 %28, i64 %30
  %33 = shl nuw nsw i64 %32, 3
  %34 = add nuw nsw i64 %33, 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 %34, i1 false)
  br label %35

35:                                               ; preds = %23, %35
  %36 = phi i64 [ %24, %23 ], [ %38, %35 ]
  %37 = phi i32 [ 0, %23 ], [ %39, %35 ]
  %38 = add nuw nsw i64 %36, 1
  %39 = add nuw nsw i32 %37, 1
  %40 = icmp ult i32 %37, %21
  %41 = icmp ult i64 %38, %8
  %42 = and i1 %41, %40
  br i1 %42, label %35, label %71

43:                                               ; preds = %18
  %44 = and i32 %20, 64
  %45 = icmp eq i32 %44, 0
  %46 = zext i32 %16 to i64
  br i1 %45, label %59, label %47

47:                                               ; preds = %43, %47
  %48 = phi i64 [ %53, %47 ], [ %46, %43 ]
  %49 = phi i32 [ %55, %47 ], [ 0, %43 ]
  %50 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %0) #11
  %51 = sext i16 %50 to i64
  %52 = shl nsw i64 %51, 16
  %53 = add nuw nsw i64 %48, 1
  %54 = getelementptr inbounds i64, i64* %12, i64 %48
  store i64 %52, i64* %54, align 8
  %55 = add nuw nsw i32 %49, 1
  %56 = icmp ult i32 %49, %21
  %57 = icmp ult i64 %53, %8
  %58 = and i1 %57, %56
  br i1 %58, label %47, label %71

59:                                               ; preds = %43, %59
  %60 = phi i64 [ %65, %59 ], [ %46, %43 ]
  %61 = phi i32 [ %67, %59 ], [ 0, %43 ]
  %62 = call signext i8 @FT_Stream_GetChar(%struct.FT_StreamRec_* %0) #11
  %63 = sext i8 %62 to i64
  %64 = shl nsw i64 %63, 16
  %65 = add nuw nsw i64 %60, 1
  %66 = getelementptr inbounds i64, i64* %12, i64 %60
  store i64 %64, i64* %66, align 8
  %67 = add nuw nsw i32 %61, 1
  %68 = icmp ult i32 %61, %21
  %69 = icmp ult i64 %65, %8
  %70 = and i1 %69, %68
  br i1 %70, label %59, label %71

71:                                               ; preds = %47, %59, %35
  %72 = phi i64 [ %38, %35 ], [ %65, %59 ], [ %53, %47 ]
  %73 = phi i32 [ %39, %35 ], [ %67, %59 ], [ %55, %47 ]
  %74 = trunc i64 %72 to i32
  %75 = icmp ugt i32 %73, %21
  br i1 %75, label %15, label %76

76:                                               ; preds = %71
  call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %11) #11
  br label %77

77:                                               ; preds = %15, %10, %3, %76
  %78 = phi i64* [ null, %76 ], [ null, %3 ], [ null, %10 ], [ %12, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  ret i64* %78
}

declare i32 @FT_List_Iterate(%struct.FT_ListRec_*, i32 (%struct.FT_ListNodeRec_*, i8*)*, i8*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cvt_ready_iterator(%struct.FT_ListNodeRec_* nocapture readonly, i8* nocapture readnone) #6 {
  %3 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %0, i64 0, i32 2
  %4 = bitcast i8** %3 to %struct.TT_SizeRec_**
  %5 = load %struct.TT_SizeRec_*, %struct.TT_SizeRec_** %4, align 8
  %6 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %5, i64 0, i32 23
  store i32 -1, i32* %6, align 4
  ret i32 0
}

declare hidden signext i8 @FT_Stream_GetChar(%struct.FT_StreamRec_*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @ft_var_load_avar(%struct.TT_FaceRec_*) unnamed_addr #2 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 26
  %5 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %4, align 8
  %6 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %5, i64 0, i32 7
  %7 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %6, align 8
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 50
  %9 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %8, align 8
  %10 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #11
  %11 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  store i64 -6148914691236517206, i64* %3, align 8
  %12 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %9, i64 0, i32 6
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %14 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %13, align 8
  %15 = call i32 %14(%struct.TT_FaceRec_* %0, i64 1635148146, %struct.FT_StreamRec_* %5, i64* nonnull %3) #11
  store i32 %15, i32* %2, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %101

17:                                               ; preds = %1
  %18 = load i64, i64* %3, align 8
  %19 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %5, i64 %18) #11
  store i32 %19, i32* %2, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %101

21:                                               ; preds = %17
  %22 = call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %5) #11
  %23 = call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %5) #11
  %24 = icmp eq i64 %22, 65536
  br i1 %24, label %25, label %100

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %9, i64 0, i32 3
  %27 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %26, align 8
  %28 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = zext i32 %29 to i64
  %31 = icmp eq i64 %23, %30
  br i1 %31, label %32, label %100

32:                                               ; preds = %25
  %33 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %7, i64 16, i64 0, i64 %23, i8* null, i32* nonnull %2) #11
  %34 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %9, i64 0, i32 7
  %35 = bitcast %struct.GX_AVarSegmentRec_** %34 to i8**
  store i8* %33, i8** %35, align 8
  %36 = load i32, i32* %2, align 4
  %37 = icmp eq i32 %36, 0
  %38 = icmp sgt i64 %23, 0
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %100

40:                                               ; preds = %32
  %41 = bitcast i8* %33 to %struct.GX_AVarSegmentRec_*
  br label %42

42:                                               ; preds = %96, %40
  %43 = phi i64 [ 0, %40 ], [ %97, %96 ]
  %44 = phi %struct.GX_AVarSegmentRec_* [ %41, %40 ], [ %98, %96 ]
  %45 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %5) #11
  %46 = getelementptr inbounds %struct.GX_AVarSegmentRec_, %struct.GX_AVarSegmentRec_* %44, i64 0, i32 0
  store i16 %45, i16* %46, align 8
  %47 = zext i16 %45 to i64
  %48 = shl nuw nsw i64 %47, 2
  %49 = load i64, i64* %3, align 8
  %50 = icmp ugt i64 %48, %49
  br i1 %50, label %60, label %51

51:                                               ; preds = %42
  %52 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %7, i64 16, i64 0, i64 %47, i8* null, i32* nonnull %2) #11
  %53 = getelementptr inbounds %struct.GX_AVarSegmentRec_, %struct.GX_AVarSegmentRec_* %44, i64 0, i32 1
  %54 = bitcast %struct.GX_AVarCorrespondenceRec_** %53 to i8**
  store i8* %52, i8** %54, align 8
  %55 = load i32, i32* %2, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %51
  %58 = load i16, i16* %46, align 8
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %96, label %80

60:                                               ; preds = %51, %42
  %61 = trunc i64 %43 to i32
  %62 = icmp eq i32 %61, 0
  %63 = load %struct.GX_AVarSegmentRec_*, %struct.GX_AVarSegmentRec_** %34, align 8
  br i1 %62, label %77, label %64

64:                                               ; preds = %60
  %65 = and i64 %43, 4294967295
  br label %66

66:                                               ; preds = %64, %66
  %67 = phi i64 [ %65, %64 ], [ %69, %66 ]
  %68 = phi %struct.GX_AVarSegmentRec_* [ %63, %64 ], [ %76, %66 ]
  %69 = add nsw i64 %67, -1
  %70 = getelementptr inbounds %struct.GX_AVarSegmentRec_, %struct.GX_AVarSegmentRec_* %68, i64 %69, i32 1
  %71 = bitcast %struct.GX_AVarCorrespondenceRec_** %70 to i8**
  %72 = load i8*, i8** %71, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %72) #11
  %73 = load %struct.GX_AVarSegmentRec_*, %struct.GX_AVarSegmentRec_** %34, align 8
  %74 = getelementptr inbounds %struct.GX_AVarSegmentRec_, %struct.GX_AVarSegmentRec_* %73, i64 %69, i32 1
  store %struct.GX_AVarCorrespondenceRec_* null, %struct.GX_AVarCorrespondenceRec_** %74, align 8
  %75 = icmp sgt i64 %69, 0
  %76 = load %struct.GX_AVarSegmentRec_*, %struct.GX_AVarSegmentRec_** %34, align 8
  br i1 %75, label %66, label %77

77:                                               ; preds = %66, %60
  %78 = phi %struct.GX_AVarSegmentRec_* [ %63, %60 ], [ %76, %66 ]
  %79 = bitcast %struct.GX_AVarSegmentRec_* %78 to i8*
  call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %79) #11
  store %struct.GX_AVarSegmentRec_* null, %struct.GX_AVarSegmentRec_** %34, align 8
  br label %100

80:                                               ; preds = %57, %80
  %81 = phi i64 [ %92, %80 ], [ 0, %57 ]
  %82 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %5) #11
  %83 = sext i16 %82 to i64
  %84 = shl nsw i64 %83, 2
  %85 = load %struct.GX_AVarCorrespondenceRec_*, %struct.GX_AVarCorrespondenceRec_** %53, align 8
  %86 = getelementptr inbounds %struct.GX_AVarCorrespondenceRec_, %struct.GX_AVarCorrespondenceRec_* %85, i64 %81, i32 0
  store i64 %84, i64* %86, align 8
  %87 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %5) #11
  %88 = sext i16 %87 to i64
  %89 = shl nsw i64 %88, 2
  %90 = load %struct.GX_AVarCorrespondenceRec_*, %struct.GX_AVarCorrespondenceRec_** %53, align 8
  %91 = getelementptr inbounds %struct.GX_AVarCorrespondenceRec_, %struct.GX_AVarCorrespondenceRec_* %90, i64 %81, i32 1
  store i64 %89, i64* %91, align 8
  %92 = add nuw nsw i64 %81, 1
  %93 = load i16, i16* %46, align 8
  %94 = zext i16 %93 to i64
  %95 = icmp ult i64 %92, %94
  br i1 %95, label %80, label %96

96:                                               ; preds = %80, %57
  %97 = add nuw nsw i64 %43, 1
  %98 = getelementptr inbounds %struct.GX_AVarSegmentRec_, %struct.GX_AVarSegmentRec_* %44, i64 1
  %99 = icmp eq i64 %97, %23
  br i1 %99, label %100, label %42

100:                                              ; preds = %96, %32, %25, %21, %77
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %5) #11
  br label %101

101:                                              ; preds = %17, %1, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @ft_var_to_normalized(%struct.TT_FaceRec_* nocapture readonly, i32, i64* nocapture readonly, i64* nocapture) unnamed_addr #2 {
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 50
  %6 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %5, align 8
  %7 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %6, i64 0, i32 3
  %8 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp ult i32 %10, %1
  %12 = select i1 %11, i32 %10, i32 %1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %8, i64 0, i32 3
  %16 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %15, align 8
  %17 = zext i32 %12 to i64
  br label %27

18:                                               ; preds = %58
  %19 = trunc i64 %61 to i32
  %20 = load i32, i32* %9, align 8
  br label %21

21:                                               ; preds = %18, %4
  %22 = phi i32 [ %10, %4 ], [ %20, %18 ]
  %23 = phi i32 [ 0, %4 ], [ %19, %18 ]
  %24 = icmp ult i32 %23, %22
  br i1 %24, label %25, label %71

25:                                               ; preds = %21
  %26 = zext i32 %23 to i64
  br label %64

27:                                               ; preds = %14, %58
  %28 = phi i64 [ 0, %14 ], [ %61, %58 ]
  %29 = phi %struct.FT_Var_Axis_* [ %16, %14 ], [ %62, %58 ]
  %30 = getelementptr inbounds i64, i64* %2, i64 %28
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %29, i64 0, i32 3
  %33 = load i64, i64* %32, align 8
  %34 = icmp sgt i64 %31, %33
  br i1 %34, label %40, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %29, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = icmp slt i64 %31, %37
  %39 = select i1 %38, i64 %37, i64 %31
  br label %40

40:                                               ; preds = %35, %27
  %41 = phi i64 [ %33, %27 ], [ %39, %35 ]
  %42 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %29, i64 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = icmp slt i64 %41, %43
  br i1 %44, label %45, label %52

45:                                               ; preds = %40
  %46 = sub i64 %41, %43
  %47 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %29, i64 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %48, %43
  %50 = tail call i64 @FT_DivFix(i64 %46, i64 %49) #11
  %51 = sub nsw i64 0, %50
  br label %58

52:                                               ; preds = %40
  %53 = icmp sgt i64 %41, %43
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = sub i64 %41, %43
  %56 = sub i64 %33, %43
  %57 = tail call i64 @FT_DivFix(i64 %55, i64 %56) #11
  br label %58

58:                                               ; preds = %52, %54, %45
  %59 = phi i64 [ %57, %54 ], [ %51, %45 ], [ 0, %52 ]
  %60 = getelementptr inbounds i64, i64* %3, i64 %28
  store i64 %59, i64* %60, align 8
  %61 = add nuw nsw i64 %28, 1
  %62 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %29, i64 1
  %63 = icmp ult i64 %61, %17
  br i1 %63, label %27, label %18

64:                                               ; preds = %25, %64
  %65 = phi i64 [ %26, %25 ], [ %67, %64 ]
  %66 = getelementptr inbounds i64, i64* %3, i64 %65
  store i64 0, i64* %66, align 8
  %67 = add nuw nsw i64 %65, 1
  %68 = load i32, i32* %9, align 8
  %69 = zext i32 %68 to i64
  %70 = icmp ult i64 %67, %69
  br i1 %70, label %64, label %71

71:                                               ; preds = %64, %21
  %72 = phi i32 [ %22, %21 ], [ %68, %64 ]
  %73 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %6, i64 0, i32 7
  %74 = load %struct.GX_AVarSegmentRec_*, %struct.GX_AVarSegmentRec_** %73, align 8
  %75 = icmp eq %struct.GX_AVarSegmentRec_* %74, null
  %76 = icmp eq i32 %72, 0
  %77 = or i1 %75, %76
  br i1 %77, label %124, label %78

78:                                               ; preds = %71, %118
  %79 = phi i32 [ %119, %118 ], [ %72, %71 ]
  %80 = phi i64 [ %120, %118 ], [ 0, %71 ]
  %81 = phi %struct.GX_AVarSegmentRec_* [ %121, %118 ], [ %74, %71 ]
  %82 = getelementptr inbounds %struct.GX_AVarSegmentRec_, %struct.GX_AVarSegmentRec_* %81, i64 0, i32 0
  %83 = load i16, i16* %82, align 8
  %84 = icmp ugt i16 %83, 1
  br i1 %84, label %85, label %118

85:                                               ; preds = %78
  %86 = getelementptr inbounds i64, i64* %3, i64 %80
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %struct.GX_AVarSegmentRec_, %struct.GX_AVarSegmentRec_* %81, i64 0, i32 1
  %89 = load %struct.GX_AVarCorrespondenceRec_*, %struct.GX_AVarCorrespondenceRec_** %88, align 8
  %90 = zext i16 %83 to i64
  br label %91

91:                                               ; preds = %85, %115
  %92 = phi i64 [ 1, %85 ], [ %116, %115 ]
  %93 = getelementptr inbounds %struct.GX_AVarCorrespondenceRec_, %struct.GX_AVarCorrespondenceRec_* %89, i64 %92, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = icmp slt i64 %87, %94
  br i1 %95, label %96, label %115

96:                                               ; preds = %91
  %97 = and i64 %92, 4294967295
  %98 = add nuw i64 %92, 4294967295
  %99 = and i64 %98, 4294967295
  %100 = getelementptr inbounds %struct.GX_AVarCorrespondenceRec_, %struct.GX_AVarCorrespondenceRec_* %89, i64 %99, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = sub nsw i64 %87, %101
  %103 = getelementptr inbounds %struct.GX_AVarCorrespondenceRec_, %struct.GX_AVarCorrespondenceRec_* %89, i64 %97, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %struct.GX_AVarCorrespondenceRec_, %struct.GX_AVarCorrespondenceRec_* %89, i64 %99, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = sub nsw i64 %104, %106
  %108 = sub nsw i64 %94, %101
  %109 = tail call i64 @FT_MulDiv(i64 %102, i64 %107, i64 %108) #11
  %110 = load %struct.GX_AVarCorrespondenceRec_*, %struct.GX_AVarCorrespondenceRec_** %88, align 8
  %111 = getelementptr inbounds %struct.GX_AVarCorrespondenceRec_, %struct.GX_AVarCorrespondenceRec_* %110, i64 %99, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = add nsw i64 %112, %109
  store i64 %113, i64* %86, align 8
  %114 = load i32, i32* %9, align 8
  br label %118

115:                                              ; preds = %91
  %116 = add nuw nsw i64 %92, 1
  %117 = icmp ult i64 %116, %90
  br i1 %117, label %91, label %118

118:                                              ; preds = %115, %78, %96
  %119 = phi i32 [ %79, %78 ], [ %114, %96 ], [ %79, %115 ]
  %120 = add nuw nsw i64 %80, 1
  %121 = getelementptr inbounds %struct.GX_AVarSegmentRec_, %struct.GX_AVarSegmentRec_* %81, i64 1
  %122 = zext i32 %119 to i64
  %123 = icmp ult i64 %120, %122
  br i1 %123, label %78, label %124

124:                                              ; preds = %118, %71
  ret void
}

declare i64 @FT_DivFix(i64, i64) local_unnamed_addr #4

declare hidden zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_*, i32*) local_unnamed_addr #4

declare hidden i32 @FT_Stream_Skip(%struct.FT_StreamRec_*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ft_var_load_item_variation_store(%struct.TT_FaceRec_* nocapture readonly, i64, %struct.GX_ItemVarStoreRec_* nocapture) unnamed_addr #2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 26
  %6 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %6, i64 0, i32 7
  %8 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %7, align 8
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  %10 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 50
  %11 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %10, align 8
  %12 = tail call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %6, i64 %1) #11
  store i32 %12, i32* %4, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %289

14:                                               ; preds = %3
  %15 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %6, i32* nonnull %4) #11
  %16 = load i32, i32* %4, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %289

18:                                               ; preds = %14
  %19 = icmp eq i16 %15, 1
  br i1 %19, label %21, label %20

20:                                               ; preds = %18
  store i32 8, i32* %4, align 4
  br label %289

21:                                               ; preds = %18
  %22 = call i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_* %6, i32* nonnull %4) #11
  %23 = load i32, i32* %4, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %289

25:                                               ; preds = %21
  %26 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %6, i32* nonnull %4) #11
  %27 = zext i16 %26 to i32
  %28 = getelementptr inbounds %struct.GX_ItemVarStoreRec_, %struct.GX_ItemVarStoreRec_* %2, i64 0, i32 0
  store i32 %27, i32* %28, align 8
  %29 = load i32, i32* %4, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %289

31:                                               ; preds = %25
  %32 = icmp eq i16 %26, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %31
  store i32 8, i32* %4, align 4
  br label %289

34:                                               ; preds = %31
  %35 = zext i16 %26 to i64
  %36 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %8, i64 8, i64 0, i64 %35, i8* null, i32* nonnull %4) #11
  %37 = bitcast i8* %36 to i64*
  %38 = load i32, i32* %4, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %289

40:                                               ; preds = %34
  %41 = load i32, i32* %28, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %54, label %47

43:                                               ; preds = %47
  %44 = load i32, i32* %28, align 8
  %45 = zext i32 %44 to i64
  %46 = icmp ult i64 %53, %45
  br i1 %46, label %47, label %54

47:                                               ; preds = %40, %43
  %48 = phi i64 [ %53, %43 ], [ 0, %40 ]
  %49 = call i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_* %6, i32* nonnull %4) #11
  %50 = getelementptr inbounds i64, i64* %37, i64 %48
  store i64 %49, i64* %50, align 8
  %51 = load i32, i32* %4, align 4
  %52 = icmp eq i32 %51, 0
  %53 = add nuw nsw i64 %48, 1
  br i1 %52, label %43, label %289

54:                                               ; preds = %43, %40
  %55 = add i64 %22, %1
  %56 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %6, i64 %55) #11
  store i32 %56, i32* %4, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %289

58:                                               ; preds = %54
  %59 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %6, i32* nonnull %4) #11
  %60 = getelementptr inbounds %struct.GX_ItemVarStoreRec_, %struct.GX_ItemVarStoreRec_* %2, i64 0, i32 2
  store i16 %59, i16* %60, align 8
  %61 = load i32, i32* %4, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %289

63:                                               ; preds = %58
  %64 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %6, i32* nonnull %4) #11
  %65 = zext i16 %64 to i32
  %66 = getelementptr inbounds %struct.GX_ItemVarStoreRec_, %struct.GX_ItemVarStoreRec_* %2, i64 0, i32 3
  store i32 %65, i32* %66, align 4
  %67 = load i32, i32* %4, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %289

69:                                               ; preds = %63
  %70 = load i16, i16* %60, align 8
  %71 = zext i16 %70 to i64
  %72 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %11, i64 0, i32 3
  %73 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %72, align 8
  %74 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = zext i32 %75 to i64
  %77 = icmp eq i64 %71, %76
  br i1 %77, label %79, label %78

78:                                               ; preds = %69
  store i32 8, i32* %4, align 4
  br label %289

79:                                               ; preds = %69
  %80 = icmp slt i16 %64, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %79
  store i32 8, i32* %4, align 4
  br label %289

82:                                               ; preds = %79
  %83 = zext i16 %64 to i64
  %84 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %8, i64 8, i64 0, i64 %83, i8* null, i32* nonnull %4) #11
  %85 = getelementptr inbounds %struct.GX_ItemVarStoreRec_, %struct.GX_ItemVarStoreRec_* %2, i64 0, i32 4
  %86 = bitcast %struct.GX_VarRegionRec_** %85 to i8**
  store i8* %84, i8** %86, align 8
  %87 = load i32, i32* %4, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %289

89:                                               ; preds = %82
  %90 = load i32, i32* %66, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %143, label %92

92:                                               ; preds = %89
  %93 = load i16, i16* %60, align 8
  br label %94

94:                                               ; preds = %92, %137
  %95 = phi i16 [ %93, %92 ], [ %138, %137 ]
  %96 = phi i64 [ 0, %92 ], [ %139, %137 ]
  %97 = zext i16 %95 to i64
  %98 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %8, i64 24, i64 0, i64 %97, i8* null, i32* nonnull %4) #11
  %99 = load %struct.GX_VarRegionRec_*, %struct.GX_VarRegionRec_** %85, align 8
  %100 = getelementptr inbounds %struct.GX_VarRegionRec_, %struct.GX_VarRegionRec_* %99, i64 %96, i32 0
  %101 = bitcast %struct.GX_AxisCoordsRec_** %100 to i8**
  store i8* %98, i8** %101, align 8
  %102 = load i32, i32* %4, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %289

104:                                              ; preds = %94
  %105 = load %struct.GX_VarRegionRec_*, %struct.GX_VarRegionRec_** %85, align 8
  %106 = getelementptr inbounds %struct.GX_VarRegionRec_, %struct.GX_VarRegionRec_* %105, i64 %96, i32 0
  %107 = load %struct.GX_AxisCoordsRec_*, %struct.GX_AxisCoordsRec_** %106, align 8
  %108 = load i16, i16* %60, align 8
  %109 = icmp eq i16 %108, 0
  br i1 %109, label %137, label %110

110:                                              ; preds = %104, %123
  %111 = phi i64 [ %133, %123 ], [ 0, %104 ]
  %112 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %6, i32* nonnull %4) #11
  %113 = load i32, i32* %4, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %289

115:                                              ; preds = %110
  %116 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %6, i32* nonnull %4) #11
  %117 = load i32, i32* %4, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %289

119:                                              ; preds = %115
  %120 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %6, i32* nonnull %4) #11
  %121 = load i32, i32* %4, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %289

123:                                              ; preds = %119
  %124 = sext i16 %112 to i64
  %125 = shl nsw i64 %124, 2
  %126 = getelementptr inbounds %struct.GX_AxisCoordsRec_, %struct.GX_AxisCoordsRec_* %107, i64 %111, i32 0
  store i64 %125, i64* %126, align 8
  %127 = sext i16 %116 to i64
  %128 = shl nsw i64 %127, 2
  %129 = getelementptr inbounds %struct.GX_AxisCoordsRec_, %struct.GX_AxisCoordsRec_* %107, i64 %111, i32 1
  store i64 %128, i64* %129, align 8
  %130 = sext i16 %120 to i64
  %131 = shl nsw i64 %130, 2
  %132 = getelementptr inbounds %struct.GX_AxisCoordsRec_, %struct.GX_AxisCoordsRec_* %107, i64 %111, i32 2
  store i64 %131, i64* %132, align 8
  %133 = add nuw nsw i64 %111, 1
  %134 = load i16, i16* %60, align 8
  %135 = zext i16 %134 to i64
  %136 = icmp ult i64 %133, %135
  br i1 %136, label %110, label %137

137:                                              ; preds = %123, %104
  %138 = phi i16 [ 0, %104 ], [ %134, %123 ]
  %139 = add nuw nsw i64 %96, 1
  %140 = load i32, i32* %66, align 4
  %141 = zext i32 %140 to i64
  %142 = icmp ult i64 %139, %141
  br i1 %142, label %94, label %143

143:                                              ; preds = %137, %89
  %144 = load i32, i32* %28, align 8
  %145 = zext i32 %144 to i64
  %146 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %8, i64 24, i64 0, i64 %145, i8* null, i32* nonnull %4) #11
  %147 = getelementptr inbounds %struct.GX_ItemVarStoreRec_, %struct.GX_ItemVarStoreRec_* %2, i64 0, i32 1
  %148 = bitcast %struct.GX_ItemVarDataRec_** %147 to i8**
  store i8* %146, i8** %148, align 8
  %149 = load i32, i32* %4, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %289

151:                                              ; preds = %143
  %152 = load i32, i32* %28, align 8
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %289, label %154

154:                                              ; preds = %151
  %155 = load i64, i64* %37, align 8
  %156 = add i64 %155, %1
  %157 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %6, i64 %156) #11
  store i32 %157, i32* %4, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %289

159:                                              ; preds = %154
  %160 = bitcast i8* %146 to %struct.GX_ItemVarDataRec_*
  br label %161

161:                                              ; preds = %159, %282
  %162 = phi i64 [ %278, %282 ], [ 0, %159 ]
  %163 = phi %struct.GX_ItemVarDataRec_* [ %283, %282 ], [ %160, %159 ]
  %164 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %6, i32* nonnull %4) #11
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds %struct.GX_ItemVarDataRec_, %struct.GX_ItemVarDataRec_* %163, i64 %162, i32 0
  store i32 %165, i32* %166, align 8
  %167 = load i32, i32* %4, align 4
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %289

169:                                              ; preds = %161
  %170 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %6, i32* nonnull %4) #11
  %171 = zext i16 %170 to i32
  %172 = load i32, i32* %4, align 4
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %289

174:                                              ; preds = %169
  %175 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %6, i32* nonnull %4) #11
  %176 = zext i16 %175 to i32
  %177 = getelementptr inbounds %struct.GX_ItemVarDataRec_, %struct.GX_ItemVarDataRec_* %163, i64 %162, i32 1
  store i32 %176, i32* %177, align 4
  %178 = load i32, i32* %4, align 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %289

180:                                              ; preds = %174
  %181 = icmp ugt i16 %170, %175
  br i1 %181, label %182, label %183

182:                                              ; preds = %180
  store i32 8, i32* %4, align 4
  br label %289

183:                                              ; preds = %180
  %184 = load i32, i32* %66, align 4
  %185 = icmp ult i32 %184, %176
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  store i32 8, i32* %4, align 4
  br label %289

187:                                              ; preds = %183
  %188 = zext i16 %175 to i64
  %189 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %8, i64 4, i64 0, i64 %188, i8* null, i32* nonnull %4) #11
  %190 = getelementptr inbounds %struct.GX_ItemVarDataRec_, %struct.GX_ItemVarDataRec_* %163, i64 %162, i32 2
  %191 = bitcast i32** %190 to i8**
  store i8* %189, i8** %191, align 8
  %192 = load i32, i32* %4, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %289

194:                                              ; preds = %187
  %195 = load i32, i32* %177, align 4
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %217, label %201

197:                                              ; preds = %209
  %198 = load i32, i32* %177, align 4
  %199 = zext i32 %198 to i64
  %200 = icmp ult i64 %215, %199
  br i1 %200, label %201, label %217

201:                                              ; preds = %194, %197
  %202 = phi i64 [ %215, %197 ], [ 0, %194 ]
  %203 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %6, i32* nonnull %4) #11
  %204 = zext i16 %203 to i32
  %205 = load i32*, i32** %190, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 %202
  store i32 %204, i32* %206, align 4
  %207 = load i32, i32* %4, align 4
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %289

209:                                              ; preds = %201
  %210 = load i32*, i32** %190, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 %202
  %212 = load i32, i32* %211, align 4
  %213 = load i32, i32* %66, align 4
  %214 = icmp ult i32 %212, %213
  %215 = add nuw nsw i64 %202, 1
  br i1 %214, label %197, label %216

216:                                              ; preds = %209
  store i32 8, i32* %4, align 4
  br label %289

217:                                              ; preds = %197, %194
  %218 = phi i32 [ 0, %194 ], [ %198, %197 ]
  %219 = load i32, i32* %166, align 8
  %220 = mul i32 %219, %218
  %221 = zext i32 %220 to i64
  %222 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %8, i64 2, i64 0, i64 %221, i8* null, i32* nonnull %4) #11
  %223 = getelementptr inbounds %struct.GX_ItemVarDataRec_, %struct.GX_ItemVarDataRec_* %163, i64 %162, i32 3
  %224 = bitcast i16** %223 to i8**
  store i8* %222, i8** %224, align 8
  %225 = load i32, i32* %4, align 4
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %289

227:                                              ; preds = %217
  %228 = load i32, i32* %166, align 8
  %229 = load i32, i32* %177, align 4
  %230 = mul i32 %229, %228
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %277, label %232

232:                                              ; preds = %227
  %233 = icmp eq i16 %170, 0
  br label %240

234:                                              ; preds = %268, %245
  %235 = phi i32 [ %246, %245 ], [ %275, %268 ]
  %236 = phi i32 [ %247, %245 ], [ %274, %268 ]
  %237 = load i32, i32* %166, align 8
  %238 = mul i32 %235, %237
  %239 = icmp ult i32 %236, %238
  br i1 %239, label %240, label %277

240:                                              ; preds = %232, %234
  %241 = phi i32 [ %229, %232 ], [ %235, %234 ]
  %242 = phi i32 [ 0, %232 ], [ %236, %234 ]
  br i1 %233, label %245, label %249

243:                                              ; preds = %255
  %244 = load i32, i32* %177, align 4
  br label %245

245:                                              ; preds = %243, %240
  %246 = phi i32 [ %241, %240 ], [ %244, %243 ]
  %247 = phi i32 [ %242, %240 ], [ %260, %243 ]
  %248 = icmp ugt i32 %246, %171
  br i1 %248, label %262, label %234

249:                                              ; preds = %240, %255
  %250 = phi i32 [ %259, %255 ], [ 0, %240 ]
  %251 = phi i32 [ %260, %255 ], [ %242, %240 ]
  %252 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %6, i32* nonnull %4) #11
  %253 = load i32, i32* %4, align 4
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %289

255:                                              ; preds = %249
  %256 = load i16*, i16** %223, align 8
  %257 = zext i32 %251 to i64
  %258 = getelementptr inbounds i16, i16* %256, i64 %257
  store i16 %252, i16* %258, align 2
  %259 = add nuw nsw i32 %250, 1
  %260 = add i32 %251, 1
  %261 = icmp eq i32 %259, %171
  br i1 %261, label %243, label %249

262:                                              ; preds = %245, %268
  %263 = phi i32 [ %273, %268 ], [ %171, %245 ]
  %264 = phi i32 [ %274, %268 ], [ %247, %245 ]
  %265 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %6, i32* nonnull %4) #11
  %266 = load i32, i32* %4, align 4
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %289

268:                                              ; preds = %262
  %269 = sext i8 %265 to i16
  %270 = load i16*, i16** %223, align 8
  %271 = zext i32 %264 to i64
  %272 = getelementptr inbounds i16, i16* %270, i64 %271
  store i16 %269, i16* %272, align 2
  %273 = add nuw i32 %263, 1
  %274 = add i32 %264, 1
  %275 = load i32, i32* %177, align 4
  %276 = icmp ult i32 %273, %275
  br i1 %276, label %262, label %234

277:                                              ; preds = %234, %227
  %278 = add nuw nsw i64 %162, 1
  %279 = load i32, i32* %28, align 8
  %280 = zext i32 %279 to i64
  %281 = icmp ult i64 %278, %280
  br i1 %281, label %282, label %289

282:                                              ; preds = %277
  %283 = load %struct.GX_ItemVarDataRec_*, %struct.GX_ItemVarDataRec_** %147, align 8
  %284 = getelementptr inbounds i64, i64* %37, i64 %278
  %285 = load i64, i64* %284, align 8
  %286 = add i64 %285, %1
  %287 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %6, i64 %286) #11
  store i32 %287, i32* %4, align 4
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %161, label %289

289:                                              ; preds = %47, %94, %110, %115, %119, %277, %282, %161, %169, %174, %187, %217, %201, %249, %262, %154, %151, %216, %186, %182, %81, %78, %33, %20, %3, %14, %21, %25, %34, %54, %58, %63, %82, %143
  %290 = phi i8* [ null, %3 ], [ null, %14 ], [ null, %20 ], [ null, %21 ], [ null, %25 ], [ %36, %34 ], [ %36, %54 ], [ %36, %58 ], [ %36, %63 ], [ %36, %78 ], [ %36, %81 ], [ %36, %82 ], [ %36, %143 ], [ %36, %182 ], [ %36, %186 ], [ %36, %216 ], [ null, %33 ], [ %36, %151 ], [ %36, %154 ], [ %36, %262 ], [ %36, %249 ], [ %36, %201 ], [ %36, %217 ], [ %36, %187 ], [ %36, %174 ], [ %36, %169 ], [ %36, %161 ], [ %36, %282 ], [ %36, %277 ], [ %36, %119 ], [ %36, %115 ], [ %36, %110 ], [ %36, %94 ], [ %36, %47 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %8, i8* %290) #11
  %291 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  ret i32 %291
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal fastcc i16* @ft_var_get_value_pointer(%struct.TT_FaceRec_* readonly, i64) unnamed_addr #5 {
  switch i64 %1, label %139 [
    i64 1735618608, label %3
    i64 1735618609, label %11
    i64 1735618610, label %19
    i64 1735618611, label %27
    i64 1735618612, label %35
    i64 1735618613, label %43
    i64 1735618614, label %51
    i64 1735618615, label %59
    i64 1735618616, label %67
    i64 1735618617, label %75
    i64 1668311156, label %83
    i64 1751216995, label %85
    i64 1751346273, label %87
    i64 1751346276, label %89
    i64 1751347046, label %91
    i64 1751347822, label %93
    i64 1751347827, label %95
    i64 1751413603, label %97
    i64 1751934832, label %99
    i64 1935833199, label %101
    i64 1935833203, label %103
    i64 1935833455, label %105
    i64 1935833459, label %107
    i64 1936750703, label %109
    i64 1936750707, label %111
    i64 1936750959, label %113
    i64 1936750963, label %115
    i64 1937011311, label %117
    i64 1937011315, label %119
    i64 1970168943, label %121
    i64 1970168947, label %123
    i64 1986098019, label %125
    i64 1986228070, label %127
    i64 1986228846, label %129
    i64 1986228851, label %131
    i64 1986294627, label %133
    i64 1986815856, label %135
    i64 2020108148, label %137
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 1
  %5 = load i16, i16* %4, align 2
  %6 = icmp ugt i16 %5, 1
  br i1 %6, label %7, label %139

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 2
  %9 = load %struct.TT_GaspRangeRec_*, %struct.TT_GaspRangeRec_** %8, align 8
  %10 = getelementptr inbounds %struct.TT_GaspRangeRec_, %struct.TT_GaspRangeRec_* %9, i64 0, i32 0
  br label %139

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 1
  %13 = load i16, i16* %12, align 2
  %14 = icmp ugt i16 %13, 2
  br i1 %14, label %15, label %139

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 2
  %17 = load %struct.TT_GaspRangeRec_*, %struct.TT_GaspRangeRec_** %16, align 8
  %18 = getelementptr inbounds %struct.TT_GaspRangeRec_, %struct.TT_GaspRangeRec_* %17, i64 1, i32 0
  br label %139

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 1
  %21 = load i16, i16* %20, align 2
  %22 = icmp ugt i16 %21, 3
  br i1 %22, label %23, label %139

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 2
  %25 = load %struct.TT_GaspRangeRec_*, %struct.TT_GaspRangeRec_** %24, align 8
  %26 = getelementptr inbounds %struct.TT_GaspRangeRec_, %struct.TT_GaspRangeRec_* %25, i64 2, i32 0
  br label %139

27:                                               ; preds = %2
  %28 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 1
  %29 = load i16, i16* %28, align 2
  %30 = icmp ugt i16 %29, 4
  br i1 %30, label %31, label %139

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 2
  %33 = load %struct.TT_GaspRangeRec_*, %struct.TT_GaspRangeRec_** %32, align 8
  %34 = getelementptr inbounds %struct.TT_GaspRangeRec_, %struct.TT_GaspRangeRec_* %33, i64 3, i32 0
  br label %139

35:                                               ; preds = %2
  %36 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 1
  %37 = load i16, i16* %36, align 2
  %38 = icmp ugt i16 %37, 5
  br i1 %38, label %39, label %139

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 2
  %41 = load %struct.TT_GaspRangeRec_*, %struct.TT_GaspRangeRec_** %40, align 8
  %42 = getelementptr inbounds %struct.TT_GaspRangeRec_, %struct.TT_GaspRangeRec_* %41, i64 4, i32 0
  br label %139

43:                                               ; preds = %2
  %44 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 1
  %45 = load i16, i16* %44, align 2
  %46 = icmp ugt i16 %45, 6
  br i1 %46, label %47, label %139

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 2
  %49 = load %struct.TT_GaspRangeRec_*, %struct.TT_GaspRangeRec_** %48, align 8
  %50 = getelementptr inbounds %struct.TT_GaspRangeRec_, %struct.TT_GaspRangeRec_* %49, i64 5, i32 0
  br label %139

51:                                               ; preds = %2
  %52 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 1
  %53 = load i16, i16* %52, align 2
  %54 = icmp ugt i16 %53, 7
  br i1 %54, label %55, label %139

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 2
  %57 = load %struct.TT_GaspRangeRec_*, %struct.TT_GaspRangeRec_** %56, align 8
  %58 = getelementptr inbounds %struct.TT_GaspRangeRec_, %struct.TT_GaspRangeRec_* %57, i64 6, i32 0
  br label %139

59:                                               ; preds = %2
  %60 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 1
  %61 = load i16, i16* %60, align 2
  %62 = icmp ugt i16 %61, 8
  br i1 %62, label %63, label %139

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 2
  %65 = load %struct.TT_GaspRangeRec_*, %struct.TT_GaspRangeRec_** %64, align 8
  %66 = getelementptr inbounds %struct.TT_GaspRangeRec_, %struct.TT_GaspRangeRec_* %65, i64 7, i32 0
  br label %139

67:                                               ; preds = %2
  %68 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 1
  %69 = load i16, i16* %68, align 2
  %70 = icmp ugt i16 %69, 9
  br i1 %70, label %71, label %139

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 2
  %73 = load %struct.TT_GaspRangeRec_*, %struct.TT_GaspRangeRec_** %72, align 8
  %74 = getelementptr inbounds %struct.TT_GaspRangeRec_, %struct.TT_GaspRangeRec_* %73, i64 8, i32 0
  br label %139

75:                                               ; preds = %2
  %76 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 1
  %77 = load i16, i16* %76, align 2
  %78 = icmp ugt i16 %77, 10
  br i1 %78, label %79, label %139

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 2
  %81 = load %struct.TT_GaspRangeRec_*, %struct.TT_GaspRangeRec_** %80, align 8
  %82 = getelementptr inbounds %struct.TT_GaspRangeRec_, %struct.TT_GaspRangeRec_* %81, i64 9, i32 0
  br label %139

83:                                               ; preds = %2
  %84 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12, i32 33
  br label %139

85:                                               ; preds = %2
  %86 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12, i32 25
  br label %139

87:                                               ; preds = %2
  %88 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12, i32 28
  br label %139

89:                                               ; preds = %2
  %90 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12, i32 29
  br label %139

91:                                               ; preds = %2
  %92 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 6, i32 10
  br label %139

93:                                               ; preds = %2
  %94 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 6, i32 9
  br label %139

95:                                               ; preds = %2
  %96 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 6, i32 8
  br label %139

97:                                               ; preds = %2
  %98 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12, i32 26
  br label %139

99:                                               ; preds = %2
  %100 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12, i32 27
  br label %139

101:                                              ; preds = %2
  %102 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12, i32 7
  br label %139

103:                                              ; preds = %2
  %104 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12, i32 5
  br label %139

105:                                              ; preds = %2
  %106 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12, i32 8
  br label %139

107:                                              ; preds = %2
  %108 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12, i32 6
  br label %139

109:                                              ; preds = %2
  %110 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12, i32 11
  br label %139

111:                                              ; preds = %2
  %112 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12, i32 9
  br label %139

113:                                              ; preds = %2
  %114 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12, i32 12
  br label %139

115:                                              ; preds = %2
  %116 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12, i32 10
  br label %139

117:                                              ; preds = %2
  %118 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12, i32 14
  br label %139

119:                                              ; preds = %2
  %120 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12, i32 13
  br label %139

121:                                              ; preds = %2
  %122 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 13, i32 2
  br label %139

123:                                              ; preds = %2
  %124 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 13, i32 3
  br label %139

125:                                              ; preds = %2
  %126 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 9, i32 1
  br label %139

127:                                              ; preds = %2
  %128 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 9, i32 10
  br label %139

129:                                              ; preds = %2
  %130 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 9, i32 9
  br label %139

131:                                              ; preds = %2
  %132 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 9, i32 8
  br label %139

133:                                              ; preds = %2
  %134 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 9, i32 2
  br label %139

135:                                              ; preds = %2
  %136 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 9, i32 3
  br label %139

137:                                              ; preds = %2
  %138 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12, i32 32
  br label %139

139:                                              ; preds = %2, %75, %67, %59, %51, %43, %35, %27, %19, %11, %3, %79, %71, %63, %55, %47, %39, %31, %23, %15, %7, %137, %135, %133, %131, %129, %127, %125, %123, %121, %119, %117, %115, %113, %111, %109, %107, %105, %103, %101, %99, %97, %95, %93, %91, %89, %87, %85, %83
  %140 = phi i16* [ %138, %137 ], [ %136, %135 ], [ %134, %133 ], [ %132, %131 ], [ %130, %129 ], [ %128, %127 ], [ %126, %125 ], [ %124, %123 ], [ %122, %121 ], [ %120, %119 ], [ %118, %117 ], [ %116, %115 ], [ %114, %113 ], [ %112, %111 ], [ %110, %109 ], [ %108, %107 ], [ %106, %105 ], [ %104, %103 ], [ %102, %101 ], [ %100, %99 ], [ %98, %97 ], [ %96, %95 ], [ %94, %93 ], [ %92, %91 ], [ %90, %89 ], [ %88, %87 ], [ %86, %85 ], [ %84, %83 ], [ %82, %79 ], [ %74, %71 ], [ %66, %63 ], [ %58, %55 ], [ %50, %47 ], [ %42, %39 ], [ %34, %31 ], [ %26, %23 ], [ %18, %15 ], [ %10, %7 ], [ null, %3 ], [ null, %11 ], [ null, %19 ], [ null, %27 ], [ null, %35 ], [ null, %43 ], [ null, %51 ], [ null, %59 ], [ null, %67 ], [ null, %75 ], [ null, %2 ]
  ret i16* %140
}

declare hidden i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_*, i32*) local_unnamed_addr #4

declare hidden signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @ft_var_done_item_variation_store(%struct.TT_FaceRec_* nocapture readonly, %struct.GX_ItemVarStoreRec_* nocapture) unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 25
  %4 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %3, align 8
  %5 = getelementptr inbounds %struct.GX_ItemVarStoreRec_, %struct.GX_ItemVarStoreRec_* %1, i64 0, i32 1
  %6 = load %struct.GX_ItemVarDataRec_*, %struct.GX_ItemVarDataRec_** %5, align 8
  %7 = icmp eq %struct.GX_ItemVarDataRec_* %6, null
  br i1 %7, label %34, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.GX_ItemVarStoreRec_, %struct.GX_ItemVarStoreRec_* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %8, %12
  %13 = phi i64 [ %26, %12 ], [ 0, %8 ]
  %14 = phi %struct.GX_ItemVarDataRec_* [ %30, %12 ], [ %6, %8 ]
  %15 = getelementptr inbounds %struct.GX_ItemVarDataRec_, %struct.GX_ItemVarDataRec_* %14, i64 %13, i32 2
  %16 = bitcast i32** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %4, i8* %17) #11
  %18 = load %struct.GX_ItemVarDataRec_*, %struct.GX_ItemVarDataRec_** %5, align 8
  %19 = getelementptr inbounds %struct.GX_ItemVarDataRec_, %struct.GX_ItemVarDataRec_* %18, i64 %13, i32 2
  store i32* null, i32** %19, align 8
  %20 = load %struct.GX_ItemVarDataRec_*, %struct.GX_ItemVarDataRec_** %5, align 8
  %21 = getelementptr inbounds %struct.GX_ItemVarDataRec_, %struct.GX_ItemVarDataRec_* %20, i64 %13, i32 3
  %22 = bitcast i16** %21 to i8**
  %23 = load i8*, i8** %22, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %4, i8* %23) #11
  %24 = load %struct.GX_ItemVarDataRec_*, %struct.GX_ItemVarDataRec_** %5, align 8
  %25 = getelementptr inbounds %struct.GX_ItemVarDataRec_, %struct.GX_ItemVarDataRec_* %24, i64 %13, i32 3
  store i16* null, i16** %25, align 8
  %26 = add nuw nsw i64 %13, 1
  %27 = load i32, i32* %9, align 8
  %28 = zext i32 %27 to i64
  %29 = icmp ult i64 %26, %28
  %30 = load %struct.GX_ItemVarDataRec_*, %struct.GX_ItemVarDataRec_** %5, align 8
  br i1 %29, label %12, label %31

31:                                               ; preds = %12, %8
  %32 = phi %struct.GX_ItemVarDataRec_* [ %6, %8 ], [ %30, %12 ]
  %33 = bitcast %struct.GX_ItemVarDataRec_* %32 to i8*
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %4, i8* %33) #11
  store %struct.GX_ItemVarDataRec_* null, %struct.GX_ItemVarDataRec_** %5, align 8
  br label %34

34:                                               ; preds = %2, %31
  %35 = getelementptr inbounds %struct.GX_ItemVarStoreRec_, %struct.GX_ItemVarStoreRec_* %1, i64 0, i32 4
  %36 = load %struct.GX_VarRegionRec_*, %struct.GX_VarRegionRec_** %35, align 8
  %37 = icmp eq %struct.GX_VarRegionRec_* %36, null
  br i1 %37, label %58, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.GX_ItemVarStoreRec_, %struct.GX_ItemVarStoreRec_* %1, i64 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %55, label %42

42:                                               ; preds = %38, %42
  %43 = phi i64 [ %50, %42 ], [ 0, %38 ]
  %44 = phi %struct.GX_VarRegionRec_* [ %54, %42 ], [ %36, %38 ]
  %45 = getelementptr inbounds %struct.GX_VarRegionRec_, %struct.GX_VarRegionRec_* %44, i64 %43, i32 0
  %46 = bitcast %struct.GX_AxisCoordsRec_** %45 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %4, i8* %47) #11
  %48 = load %struct.GX_VarRegionRec_*, %struct.GX_VarRegionRec_** %35, align 8
  %49 = getelementptr inbounds %struct.GX_VarRegionRec_, %struct.GX_VarRegionRec_* %48, i64 %43, i32 0
  store %struct.GX_AxisCoordsRec_* null, %struct.GX_AxisCoordsRec_** %49, align 8
  %50 = add nuw nsw i64 %43, 1
  %51 = load i32, i32* %39, align 4
  %52 = zext i32 %51 to i64
  %53 = icmp ult i64 %50, %52
  %54 = load %struct.GX_VarRegionRec_*, %struct.GX_VarRegionRec_** %35, align 8
  br i1 %53, label %42, label %55

55:                                               ; preds = %42, %38
  %56 = phi %struct.GX_VarRegionRec_* [ %36, %38 ], [ %54, %42 ]
  %57 = bitcast %struct.GX_VarRegionRec_* %56 to i8*
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %4, i8* %57) #11
  store %struct.GX_VarRegionRec_* null, %struct.GX_VarRegionRec_** %35, align 8
  br label %58

58:                                               ; preds = %34, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_hadvance_adjust(%struct.TT_FaceRec_*, i32, i32* nocapture) #2 {
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 49
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %60, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 50
  %9 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %8, align 8
  %10 = icmp eq %struct.GX_BlendRec_* %9, null
  br i1 %10, label %60, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %9, i64 0, i32 8
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %11
  %16 = tail call fastcc i32 @ft_var_load_hvvar(%struct.TT_FaceRec_* %0, i8 zeroext 0) #11
  %17 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %8, align 8
  %18 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %17, i64 0, i32 10
  store i32 %16, i32* %18, align 4
  %19 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %8, align 8
  br label %20

20:                                               ; preds = %15, %11
  %21 = phi %struct.GX_BlendRec_* [ %9, %11 ], [ %19, %15 ]
  %22 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %21, i64 0, i32 9
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %21, i64 0, i32 10
  %27 = load i32, i32* %26, align 4
  br label %60

28:                                               ; preds = %20
  %29 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %21, i64 0, i32 11
  %30 = load %struct.GX_HVVarTableRec_*, %struct.GX_HVVarTableRec_** %29, align 8
  %31 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %30, i64 0, i32 1, i32 2
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %30, i64 0, i32 1, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp ugt i32 %36, %1
  %38 = add i32 %36, -1
  %39 = select i1 %37, i32 %1, i32 %38
  %40 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %30, i64 0, i32 1, i32 1
  %41 = load i32*, i32** %40, align 8
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds i32, i32* %41, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds i32, i32* %32, i64 %42
  %46 = load i32, i32* %45, align 4
  br label %53

47:                                               ; preds = %28
  %48 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %30, i64 0, i32 0, i32 1
  %49 = load %struct.GX_ItemVarDataRec_*, %struct.GX_ItemVarDataRec_** %48, align 8
  %50 = getelementptr inbounds %struct.GX_ItemVarDataRec_, %struct.GX_ItemVarDataRec_* %49, i64 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = icmp ugt i32 %51, %1
  br i1 %52, label %53, label %60

53:                                               ; preds = %47, %34
  %54 = phi i32 [ %46, %34 ], [ %1, %47 ]
  %55 = phi i32 [ %44, %34 ], [ 0, %47 ]
  %56 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %30, i64 0, i32 0
  %57 = tail call fastcc i32 @ft_var_get_item_delta(%struct.TT_FaceRec_* %0, %struct.GX_ItemVarStoreRec_* %56, i32 %55, i32 %54) #11
  %58 = load i32, i32* %2, align 4
  %59 = add nsw i32 %58, %57
  store i32 %59, i32* %2, align 4
  br label %60

60:                                               ; preds = %3, %7, %25, %47, %53
  %61 = phi i32 [ 0, %53 ], [ 6, %47 ], [ %27, %25 ], [ 0, %7 ], [ 0, %3 ]
  ret i32 %61
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_vadvance_adjust(%struct.TT_FaceRec_*, i32, i32* nocapture) #2 {
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 49
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %60, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 50
  %9 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %8, align 8
  %10 = icmp eq %struct.GX_BlendRec_* %9, null
  br i1 %10, label %60, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %9, i64 0, i32 12
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %11
  %16 = tail call fastcc i32 @ft_var_load_hvvar(%struct.TT_FaceRec_* %0, i8 zeroext 1) #11
  %17 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %8, align 8
  %18 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %17, i64 0, i32 14
  store i32 %16, i32* %18, align 4
  %19 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %8, align 8
  br label %20

20:                                               ; preds = %15, %11
  %21 = phi %struct.GX_BlendRec_* [ %9, %11 ], [ %19, %15 ]
  %22 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %21, i64 0, i32 13
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %21, i64 0, i32 14
  %27 = load i32, i32* %26, align 4
  br label %60

28:                                               ; preds = %20
  %29 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %21, i64 0, i32 15
  %30 = load %struct.GX_HVVarTableRec_*, %struct.GX_HVVarTableRec_** %29, align 8
  %31 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %30, i64 0, i32 1, i32 2
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %30, i64 0, i32 1, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp ugt i32 %36, %1
  %38 = add i32 %36, -1
  %39 = select i1 %37, i32 %1, i32 %38
  %40 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %30, i64 0, i32 1, i32 1
  %41 = load i32*, i32** %40, align 8
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds i32, i32* %41, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds i32, i32* %32, i64 %42
  %46 = load i32, i32* %45, align 4
  br label %53

47:                                               ; preds = %28
  %48 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %30, i64 0, i32 0, i32 1
  %49 = load %struct.GX_ItemVarDataRec_*, %struct.GX_ItemVarDataRec_** %48, align 8
  %50 = getelementptr inbounds %struct.GX_ItemVarDataRec_, %struct.GX_ItemVarDataRec_* %49, i64 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = icmp ugt i32 %51, %1
  br i1 %52, label %53, label %60

53:                                               ; preds = %47, %34
  %54 = phi i32 [ %46, %34 ], [ %1, %47 ]
  %55 = phi i32 [ %44, %34 ], [ 0, %47 ]
  %56 = getelementptr inbounds %struct.GX_HVVarTableRec_, %struct.GX_HVVarTableRec_* %30, i64 0, i32 0
  %57 = tail call fastcc i32 @ft_var_get_item_delta(%struct.TT_FaceRec_* %0, %struct.GX_ItemVarStoreRec_* %56, i32 %55, i32 %54) #11
  %58 = load i32, i32* %2, align 4
  %59 = add nsw i32 %58, %57
  store i32 %59, i32* %2, align 4
  br label %60

60:                                               ; preds = %3, %7, %25, %47, %53
  %61 = phi i32 [ 0, %53 ], [ 6, %47 ], [ %27, %25 ], [ 0, %7 ], [ 0, %3 ]
  ret i32 %61
}

; Function Attrs: nounwind ssp uwtable
define internal void @tt_apply_mvar(%struct.TT_FaceRec_*) #2 {
  %2 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 51
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 256
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %80, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 50
  %8 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %7, align 8
  %9 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %8, i64 0, i32 16
  %10 = load %struct.GX_MVarTableRec_*, %struct.GX_MVarTableRec_** %9, align 8
  %11 = getelementptr inbounds %struct.GX_MVarTableRec_, %struct.GX_MVarTableRec_* %10, i64 0, i32 2
  %12 = load %struct.GX_ValueRec_*, %struct.GX_ValueRec_** %11, align 8
  %13 = getelementptr inbounds %struct.GX_MVarTableRec_, %struct.GX_MVarTableRec_* %10, i64 0, i32 0
  %14 = load i16, i16* %13, align 8
  %15 = zext i16 %14 to i64
  %16 = getelementptr inbounds %struct.GX_ValueRec_, %struct.GX_ValueRec_* %12, i64 %15
  %17 = icmp eq i16 %14, 0
  br i1 %17, label %53, label %18

18:                                               ; preds = %6, %51
  %19 = phi %struct.GX_MVarTableRec_* [ %52, %51 ], [ %10, %6 ]
  %20 = phi %struct.GX_ValueRec_* [ %49, %51 ], [ %12, %6 ]
  %21 = phi i16 [ %48, %51 ], [ 0, %6 ]
  %22 = phi i16 [ %47, %51 ], [ 0, %6 ]
  %23 = phi i16 [ %46, %51 ], [ 0, %6 ]
  %24 = getelementptr inbounds %struct.GX_ValueRec_, %struct.GX_ValueRec_* %20, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = tail call fastcc i16* @ft_var_get_value_pointer(%struct.TT_FaceRec_* %0, i64 %25)
  %27 = getelementptr inbounds %struct.GX_MVarTableRec_, %struct.GX_MVarTableRec_* %19, i64 0, i32 1
  %28 = getelementptr inbounds %struct.GX_ValueRec_, %struct.GX_ValueRec_* %20, i64 0, i32 1
  %29 = load i16, i16* %28, align 8
  %30 = zext i16 %29 to i32
  %31 = getelementptr inbounds %struct.GX_ValueRec_, %struct.GX_ValueRec_* %20, i64 0, i32 2
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %32 to i32
  %34 = tail call fastcc i32 @ft_var_get_item_delta(%struct.TT_FaceRec_* %0, %struct.GX_ItemVarStoreRec_* %27, i32 %30, i32 %33)
  %35 = icmp eq i16* %26, null
  br i1 %35, label %45, label %36

36:                                               ; preds = %18
  %37 = getelementptr inbounds %struct.GX_ValueRec_, %struct.GX_ValueRec_* %20, i64 0, i32 3
  %38 = load i16, i16* %37, align 4
  %39 = trunc i32 %34 to i16
  %40 = add i16 %38, %39
  store i16 %40, i16* %26, align 2
  %41 = load i64, i64* %24, align 8
  switch i64 %41, label %44 [
    i64 1751216995, label %45
    i64 1751413603, label %42
    i64 1751934832, label %43
  ]

42:                                               ; preds = %36
  br label %45

43:                                               ; preds = %36
  br label %45

44:                                               ; preds = %36
  br label %45

45:                                               ; preds = %36, %44, %18, %43, %42
  %46 = phi i16 [ %23, %42 ], [ %23, %43 ], [ %23, %18 ], [ %39, %36 ], [ %23, %44 ]
  %47 = phi i16 [ %39, %42 ], [ %22, %43 ], [ %22, %18 ], [ %22, %36 ], [ %22, %44 ]
  %48 = phi i16 [ %21, %42 ], [ %39, %43 ], [ %21, %18 ], [ %21, %36 ], [ %21, %44 ]
  %49 = getelementptr inbounds %struct.GX_ValueRec_, %struct.GX_ValueRec_* %20, i64 1
  %50 = icmp ult %struct.GX_ValueRec_* %49, %16
  br i1 %50, label %51, label %53

51:                                               ; preds = %45
  %52 = load %struct.GX_MVarTableRec_*, %struct.GX_MVarTableRec_** %9, align 8
  br label %18

53:                                               ; preds = %45, %6
  %54 = phi i16 [ 0, %6 ], [ %46, %45 ]
  %55 = phi i16 [ 0, %6 ], [ %47, %45 ]
  %56 = phi i16 [ 0, %6 ], [ %48, %45 ]
  %57 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 16
  %58 = load i16, i16* %57, align 2
  %59 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 14
  %60 = load i16, i16* %59, align 2
  %61 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 15
  %62 = load i16, i16* %61, align 4
  %63 = add i16 %60, %54
  store i16 %63, i16* %59, align 2
  %64 = add i16 %62, %55
  store i16 %64, i16* %61, align 4
  %65 = add i16 %58, %56
  %66 = sub i16 %65, %60
  %67 = add i16 %66, %62
  %68 = add i16 %67, %63
  %69 = sub i16 %68, %64
  store i16 %69, i16* %57, align 2
  %70 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 13, i32 2
  %71 = load i16, i16* %70, align 8
  %72 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 13, i32 3
  %73 = load i16, i16* %72, align 2
  %74 = sdiv i16 %73, 2
  %75 = sub i16 %71, %74
  %76 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 19
  store i16 %75, i16* %76, align 4
  %77 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 20
  store i16 %73, i16* %77, align 2
  %78 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 27
  %79 = tail call i32 @FT_List_Iterate(%struct.FT_ListRec_* %78, i32 (%struct.FT_ListNodeRec_*, i8*)* nonnull @tt_size_reset_iterator, i8* null) #11
  br label %80

80:                                               ; preds = %1, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ft_var_load_hvvar(%struct.TT_FaceRec_*, i8 zeroext) unnamed_addr #2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 26
  %7 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %7, i64 0, i32 7
  %9 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %8, align 8
  %10 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 50
  %11 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %10, align 8
  %12 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #11
  store i32 -1431655766, i32* %4, align 4
  %13 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  store i64 -6148914691236517206, i64* %5, align 8
  %14 = icmp ne i8 %1, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %11, i64 0, i32 12
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %18 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %17, align 8
  %19 = call i32 %18(%struct.TT_FaceRec_* %0, i64 1448493394, %struct.FT_StreamRec_* %7, i64* nonnull %5) #11
  br label %25

20:                                               ; preds = %2
  %21 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %11, i64 0, i32 8
  store i8 1, i8* %21, align 8
  %22 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %23 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %22, align 8
  %24 = call i32 %23(%struct.TT_FaceRec_* %0, i64 1213612370, %struct.FT_StreamRec_* %7, i64* nonnull %5) #11
  br label %25

25:                                               ; preds = %20, %15
  %26 = phi i32 [ %24, %20 ], [ %19, %15 ]
  store i32 %26, i32* %4, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %173

28:                                               ; preds = %25
  %29 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %7) #11
  %30 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %7, i32* nonnull %4) #11
  %31 = load i32, i32* %4, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %173

33:                                               ; preds = %28
  %34 = call i32 @FT_Stream_Skip(%struct.FT_StreamRec_* %7, i64 2) #11
  store i32 %34, i32* %4, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %173

36:                                               ; preds = %33
  %37 = icmp eq i16 %30, 1
  br i1 %37, label %39, label %38

38:                                               ; preds = %36
  store i32 8, i32* %4, align 4
  br label %173

39:                                               ; preds = %36
  %40 = call i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_* %7, i32* nonnull %4) #11
  %41 = load i32, i32* %4, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %173

43:                                               ; preds = %39
  %44 = call i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_* %7, i32* nonnull %4) #11
  %45 = load i32, i32* %4, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %173

47:                                               ; preds = %43
  %48 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %9, i64 56, i32* nonnull %4) #11
  br i1 %14, label %49, label %54

49:                                               ; preds = %47
  %50 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %11, i64 0, i32 15
  %51 = bitcast %struct.GX_HVVarTableRec_** %50 to i8**
  store i8* %48, i8** %51, align 8
  %52 = load i32, i32* %4, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %59, label %173

54:                                               ; preds = %47
  %55 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %11, i64 0, i32 11
  %56 = bitcast %struct.GX_HVVarTableRec_** %55 to i8**
  store i8* %48, i8** %56, align 8
  %57 = load i32, i32* %4, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %173

59:                                               ; preds = %54, %49
  %60 = add i64 %40, %29
  %61 = bitcast i8* %48 to %struct.GX_ItemVarStoreRec_*
  %62 = call fastcc i32 @ft_var_load_item_variation_store(%struct.TT_FaceRec_* %0, i64 %60, %struct.GX_ItemVarStoreRec_* %61)
  store i32 %62, i32* %4, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %173

64:                                               ; preds = %59
  %65 = icmp eq i64 %44, 0
  br i1 %65, label %162, label %66

66:                                               ; preds = %64
  %67 = add i64 %44, %29
  %68 = getelementptr inbounds i8, i8* %48, i64 32
  %69 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %6, align 8
  %70 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %69, i64 0, i32 7
  %71 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %70, align 8
  %72 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #11
  %73 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %69, i64 %67) #11
  store i32 %73, i32* %3, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %157

75:                                               ; preds = %66
  %76 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %69, i32* nonnull %3) #11
  %77 = load i32, i32* %3, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %157

79:                                               ; preds = %75
  %80 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %69, i32* nonnull %3) #11
  %81 = zext i16 %80 to i32
  %82 = bitcast i8* %68 to i32*
  store i32 %81, i32* %82, align 8
  %83 = load i32, i32* %3, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %157

85:                                               ; preds = %79
  %86 = zext i16 %76 to i32
  %87 = and i32 %86, 65472
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  store i32 8, i32* %3, align 4
  br label %157

90:                                               ; preds = %85
  %91 = lshr i32 %86, 4
  %92 = and i32 %91, 3
  %93 = and i32 %86, 15
  %94 = add nuw nsw i32 %93, 1
  %95 = shl i32 2, %93
  %96 = add nsw i32 %95, -1
  %97 = zext i16 %80 to i64
  %98 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %71, i64 4, i64 0, i64 %97, i8* null, i32* nonnull %3) #11
  %99 = getelementptr inbounds i8, i8* %48, i64 48
  %100 = bitcast i8* %99 to i32**
  %101 = bitcast i8* %99 to i8**
  store i8* %98, i8** %101, align 8
  %102 = load i32, i32* %3, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %157

104:                                              ; preds = %90
  %105 = load i32, i32* %82, align 8
  %106 = zext i32 %105 to i64
  %107 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %71, i64 4, i64 0, i64 %106, i8* null, i32* nonnull %3) #11
  %108 = getelementptr inbounds i8, i8* %48, i64 40
  %109 = bitcast i8* %108 to i32**
  %110 = bitcast i8* %108 to i8**
  store i8* %107, i8** %110, align 8
  %111 = load i32, i32* %3, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %157

113:                                              ; preds = %104
  %114 = load i32, i32* %82, align 8
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #11
  store i32 0, i32* %4, align 4
  br label %162

117:                                              ; preds = %113
  %118 = bitcast i8* %48 to i32*
  %119 = getelementptr inbounds i8, i8* %48, i64 8
  %120 = bitcast i8* %119 to %struct.GX_ItemVarDataRec_**
  br label %121

121:                                              ; preds = %150, %117
  %122 = phi i64 [ 0, %117 ], [ %153, %150 ]
  br label %123

123:                                              ; preds = %129, %121
  %124 = phi i32 [ 0, %121 ], [ %132, %129 ]
  %125 = phi i32 [ 0, %121 ], [ %133, %129 ]
  %126 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %69, i32* nonnull %3) #11
  %127 = load i32, i32* %3, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %157

129:                                              ; preds = %123
  %130 = shl i32 %124, 8
  %131 = zext i8 %126 to i32
  %132 = or i32 %130, %131
  %133 = add nuw nsw i32 %125, 1
  %134 = icmp eq i32 %125, %92
  br i1 %134, label %135, label %123

135:                                              ; preds = %129
  %136 = lshr i32 %132, %94
  %137 = load i32, i32* %118, align 8
  %138 = icmp ult i32 %136, %137
  br i1 %138, label %140, label %139

139:                                              ; preds = %135
  store i32 8, i32* %3, align 4
  br label %157

140:                                              ; preds = %135
  %141 = load i32*, i32** %109, align 8
  %142 = getelementptr inbounds i32, i32* %141, i64 %122
  store i32 %136, i32* %142, align 4
  %143 = and i32 %132, %96
  %144 = load %struct.GX_ItemVarDataRec_*, %struct.GX_ItemVarDataRec_** %120, align 8
  %145 = zext i32 %136 to i64
  %146 = getelementptr inbounds %struct.GX_ItemVarDataRec_, %struct.GX_ItemVarDataRec_* %144, i64 %145, i32 0
  %147 = load i32, i32* %146, align 8
  %148 = icmp ult i32 %143, %147
  br i1 %148, label %150, label %149

149:                                              ; preds = %140
  store i32 8, i32* %3, align 4
  br label %157

150:                                              ; preds = %140
  %151 = load i32*, i32** %100, align 8
  %152 = getelementptr inbounds i32, i32* %151, i64 %122
  store i32 %143, i32* %152, align 4
  %153 = add nuw nsw i64 %122, 1
  %154 = load i32, i32* %82, align 8
  %155 = zext i32 %154 to i64
  %156 = icmp ult i64 %153, %155
  br i1 %156, label %121, label %159

157:                                              ; preds = %123, %149, %139, %89, %66, %75, %79, %90, %104
  %158 = phi i32 [ %111, %104 ], [ %102, %90 ], [ %83, %79 ], [ %77, %75 ], [ %73, %66 ], [ 8, %89 ], [ 8, %139 ], [ 8, %149 ], [ %127, %123 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #11
  store i32 %158, i32* %4, align 4
  br label %173

159:                                              ; preds = %150
  %160 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #11
  store i32 %160, i32* %4, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %173

162:                                              ; preds = %116, %159, %64
  store i32 0, i32* %4, align 4
  br i1 %14, label %163, label %168

163:                                              ; preds = %162
  %164 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %11, i64 0, i32 13
  store i8 1, i8* %164, align 1
  %165 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 51
  %166 = load i32, i32* %165, align 8
  %167 = or i32 %166, 16
  store i32 %167, i32* %165, align 8
  br label %173

168:                                              ; preds = %162
  %169 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %11, i64 0, i32 9
  store i8 1, i8* %169, align 1
  %170 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 51
  %171 = load i32, i32* %170, align 8
  %172 = or i32 %171, 2
  store i32 %172, i32* %170, align 8
  br label %173

173:                                              ; preds = %38, %25, %28, %33, %39, %43, %54, %59, %159, %49, %157, %163, %168
  %174 = phi i32 [ 0, %163 ], [ 0, %168 ], [ 8, %38 ], [ %26, %25 ], [ %31, %28 ], [ %34, %33 ], [ %41, %39 ], [ %45, %43 ], [ %57, %54 ], [ %62, %59 ], [ %160, %159 ], [ %52, %49 ], [ %158, %157 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #11
  ret i32 %174
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ft_var_get_item_delta(%struct.TT_FaceRec_* nocapture readonly, %struct.GX_ItemVarStoreRec_* nocapture readonly, i32, i32) unnamed_addr #2 {
  %5 = getelementptr inbounds %struct.GX_ItemVarStoreRec_, %struct.GX_ItemVarStoreRec_* %1, i64 0, i32 1
  %6 = load %struct.GX_ItemVarDataRec_*, %struct.GX_ItemVarDataRec_** %5, align 8
  %7 = zext i32 %2 to i64
  %8 = getelementptr inbounds %struct.GX_ItemVarDataRec_, %struct.GX_ItemVarDataRec_* %6, i64 %7, i32 3
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds %struct.GX_ItemVarDataRec_, %struct.GX_ItemVarDataRec_* %6, i64 %7, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, %3
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i16, i16* %9, i64 %13
  %15 = icmp eq i32 %11, 0
  br i1 %15, label %108, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.GX_ItemVarDataRec_, %struct.GX_ItemVarDataRec_* %6, i64 %7, i32 2
  %18 = getelementptr inbounds %struct.GX_ItemVarStoreRec_, %struct.GX_ItemVarStoreRec_* %1, i64 0, i32 4
  %19 = getelementptr inbounds %struct.GX_ItemVarStoreRec_, %struct.GX_ItemVarStoreRec_* %1, i64 0, i32 2
  %20 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 50
  %21 = load i16, i16* %19, align 8
  br label %22

22:                                               ; preds = %16, %83
  %23 = phi i16 [ %21, %16 ], [ %84, %83 ]
  %24 = phi i64 [ 0, %16 ], [ %100, %83 ]
  %25 = phi i64 [ 0, %16 ], [ %99, %83 ]
  %26 = icmp eq i16 %23, 0
  br i1 %26, label %83, label %27

27:                                               ; preds = %22
  %28 = load %struct.GX_VarRegionRec_*, %struct.GX_VarRegionRec_** %18, align 8
  %29 = load i32*, i32** %17, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 %24
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %struct.GX_VarRegionRec_, %struct.GX_VarRegionRec_* %28, i64 %32, i32 0
  %34 = load %struct.GX_AxisCoordsRec_*, %struct.GX_AxisCoordsRec_** %33, align 8
  br label %35

35:                                               ; preds = %27, %76
  %36 = phi i16 [ %23, %27 ], [ %80, %76 ]
  %37 = phi i64 [ 0, %27 ], [ %78, %76 ]
  %38 = phi %struct.GX_AxisCoordsRec_* [ %34, %27 ], [ %79, %76 ]
  %39 = phi i64 [ 65536, %27 ], [ %77, %76 ]
  %40 = getelementptr inbounds %struct.GX_AxisCoordsRec_, %struct.GX_AxisCoordsRec_* %38, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %struct.GX_AxisCoordsRec_, %struct.GX_AxisCoordsRec_* %38, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = icmp slt i64 %43, %41
  br i1 %44, label %76, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %struct.GX_AxisCoordsRec_, %struct.GX_AxisCoordsRec_* %38, i64 0, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = icmp slt i64 %47, %43
  br i1 %48, label %76, label %49

49:                                               ; preds = %45
  %50 = icmp slt i64 %41, 0
  %51 = icmp sgt i64 %47, 0
  %52 = icmp eq i64 %43, 0
  %53 = and i1 %50, %51
  %54 = or i1 %52, %53
  br i1 %54, label %76, label %55

55:                                               ; preds = %49
  %56 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %20, align 8
  %57 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %56, i64 0, i32 2
  %58 = load i64*, i64** %57, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 %37
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %43
  br i1 %61, label %76, label %62

62:                                               ; preds = %55
  %63 = icmp sgt i64 %60, %41
  %64 = icmp sgt i64 %47, %60
  %65 = and i1 %63, %64
  br i1 %65, label %66, label %83

66:                                               ; preds = %62
  %67 = icmp slt i64 %60, %43
  br i1 %67, label %68, label %72

68:                                               ; preds = %66
  %69 = sub nsw i64 %60, %41
  %70 = sub nsw i64 %43, %41
  %71 = tail call i64 @FT_MulDiv(i64 %39, i64 %69, i64 %70) #11
  br label %76

72:                                               ; preds = %66
  %73 = sub nsw i64 %47, %60
  %74 = sub nsw i64 %47, %43
  %75 = tail call i64 @FT_MulDiv(i64 %39, i64 %73, i64 %74) #11
  br label %76

76:                                               ; preds = %49, %72, %68, %55, %35, %45
  %77 = phi i64 [ %39, %35 ], [ %39, %45 ], [ %39, %55 ], [ %71, %68 ], [ %75, %72 ], [ %39, %49 ]
  %78 = add nuw nsw i64 %37, 1
  %79 = getelementptr inbounds %struct.GX_AxisCoordsRec_, %struct.GX_AxisCoordsRec_* %38, i64 1
  %80 = load i16, i16* %19, align 8
  %81 = zext i16 %80 to i64
  %82 = icmp ult i64 %78, %81
  br i1 %82, label %35, label %83

83:                                               ; preds = %76, %62, %22
  %84 = phi i16 [ 0, %22 ], [ %36, %62 ], [ %80, %76 ]
  %85 = phi i64 [ 65536, %22 ], [ 0, %62 ], [ %77, %76 ]
  %86 = getelementptr inbounds i16, i16* %14, i64 %24
  %87 = load i16, i16* %86, align 2
  %88 = zext i16 %87 to i32
  %89 = shl nuw i32 %88, 16
  %90 = shl i64 %85, 32
  %91 = ashr exact i64 %90, 32
  %92 = sext i32 %89 to i64
  %93 = mul nsw i64 %91, %92
  %94 = ashr i64 %93, 63
  %95 = or i64 %93, 32768
  %96 = add nsw i64 %95, %94
  %97 = shl i64 %96, 16
  %98 = ashr i64 %97, 32
  %99 = add nsw i64 %98, %25
  %100 = add nuw nsw i64 %24, 1
  %101 = load i32, i32* %10, align 4
  %102 = zext i32 %101 to i64
  %103 = icmp ult i64 %100, %102
  br i1 %103, label %22, label %104

104:                                              ; preds = %83
  %105 = trunc i64 %99 to i32
  %106 = add i32 %105, 32768
  %107 = ashr i32 %106, 16
  br label %108

108:                                              ; preds = %104, %4
  %109 = phi i32 [ 0, %4 ], [ %107, %104 ]
  ret i32 %109
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_size_reset_iterator(%struct.FT_ListNodeRec_* nocapture readonly, i8* nocapture readnone) #2 {
  %3 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %0, i64 0, i32 2
  %4 = bitcast i8** %3 to %struct.TT_SizeRec_**
  %5 = load %struct.TT_SizeRec_*, %struct.TT_SizeRec_** %4, align 8
  %6 = tail call fastcc i32 @tt_size_reset(%struct.TT_SizeRec_* %5, i8 zeroext 1)
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @tt_size_reset(%struct.TT_SizeRec_*, i8 zeroext) unnamed_addr #2 {
  %3 = bitcast %struct.TT_SizeRec_* %0 to %struct.TT_FaceRec_**
  %4 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 48
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %137

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 3
  %10 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 3, i32 6
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 2
  %12 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 0, i32 2
  %13 = bitcast %struct.FT_Size_Metrics_* %11 to i8*
  %14 = bitcast %struct.FT_Size_Metrics_* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 56, i1 false)
  %15 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %11, i64 0, i32 0
  %16 = load i16, i16* %15, align 8
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %137, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 2, i32 1
  %20 = load i16, i16* %19, align 2
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %137, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 5, i32 4
  %24 = load i16, i16* %23, align 8
  %25 = and i16 %24, 8
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %71, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 0, i32 14
  %29 = load i16, i16* %28, align 2
  %30 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 2, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = sext i16 %29 to i64
  %33 = shl i64 %31, 32
  %34 = ashr exact i64 %33, 32
  %35 = mul nsw i64 %34, %32
  %36 = ashr i64 %35, 63
  %37 = add nsw i64 %35, 32768
  %38 = add nsw i64 %37, %36
  %39 = lshr i64 %38, 16
  %40 = shl i64 %39, 32
  %41 = add i64 %40, 137438953472
  %42 = ashr exact i64 %41, 32
  %43 = and i64 %42, -64
  %44 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 2, i32 4
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 0, i32 15
  %46 = load i16, i16* %45, align 4
  %47 = sext i16 %46 to i64
  %48 = mul nsw i64 %34, %47
  %49 = ashr i64 %48, 63
  %50 = add nsw i64 %48, 32768
  %51 = add nsw i64 %50, %49
  %52 = lshr i64 %51, 16
  %53 = shl i64 %52, 32
  %54 = add i64 %53, 137438953472
  %55 = ashr exact i64 %54, 32
  %56 = and i64 %55, -64
  %57 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 2, i32 5
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 0, i32 16
  %59 = load i16, i16* %58, align 2
  %60 = sext i16 %59 to i64
  %61 = mul nsw i64 %34, %60
  %62 = ashr i64 %61, 63
  %63 = add nsw i64 %61, 32768
  %64 = add nsw i64 %63, %62
  %65 = lshr i64 %64, 16
  %66 = shl i64 %65, 32
  %67 = add i64 %66, 137438953472
  %68 = ashr exact i64 %67, 32
  %69 = and i64 %68, -64
  %70 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 2, i32 6
  store i64 %69, i64* %70, align 8
  br label %71

71:                                               ; preds = %22, %27
  store i8 1, i8* %10, align 8
  %72 = icmp eq i8 %1, 0
  br i1 %72, label %73, label %137

73:                                               ; preds = %71
  %74 = load i16, i16* %23, align 8
  %75 = and i16 %74, 8
  %76 = icmp eq i16 %75, 0
  br i1 %76, label %110, label %77

77:                                               ; preds = %73
  %78 = zext i16 %16 to i64
  %79 = shl nuw nsw i64 %78, 6
  %80 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 0, i32 13
  %81 = load i16, i16* %80, align 8
  %82 = zext i16 %81 to i64
  %83 = tail call i64 @FT_DivFix(i64 %79, i64 %82) #11
  %84 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 2, i32 2
  store i64 %83, i64* %84, align 8
  %85 = load i16, i16* %19, align 2
  %86 = zext i16 %85 to i64
  %87 = shl nuw nsw i64 %86, 6
  %88 = load i16, i16* %80, align 8
  %89 = zext i16 %88 to i64
  %90 = tail call i64 @FT_DivFix(i64 %87, i64 %89) #11
  %91 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 2, i32 3
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 0, i32 17
  %93 = load i16, i16* %92, align 8
  %94 = load i64, i64* %84, align 8
  %95 = sext i16 %93 to i64
  %96 = shl i64 %94, 32
  %97 = ashr exact i64 %96, 32
  %98 = mul nsw i64 %97, %95
  %99 = ashr i64 %98, 63
  %100 = add nsw i64 %98, 32768
  %101 = add nsw i64 %100, %99
  %102 = lshr i64 %101, 16
  %103 = shl i64 %102, 32
  %104 = add i64 %103, 137438953472
  %105 = ashr exact i64 %104, 32
  %106 = and i64 %105, -64
  %107 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 2, i32 7
  store i64 %106, i64* %107, align 8
  %108 = load i16, i16* %15, align 8
  %109 = load i16, i16* %19, align 2
  br label %110

110:                                              ; preds = %73, %77
  %111 = phi i16 [ %20, %73 ], [ %109, %77 ]
  %112 = phi i16 [ %16, %73 ], [ %108, %77 ]
  %113 = icmp ult i16 %112, %111
  br i1 %113, label %123, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 2, i32 2
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 3, i32 4
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 3, i32 2
  store i16 %112, i16* %118, align 8
  %119 = getelementptr inbounds %struct.TT_Size_Metrics_, %struct.TT_Size_Metrics_* %9, i64 0, i32 0
  store i64 65536, i64* %119, align 8
  %120 = zext i16 %111 to i64
  %121 = zext i16 %112 to i64
  %122 = tail call i64 @FT_DivFix(i64 %120, i64 %121) #11
  br label %132

123:                                              ; preds = %110
  %124 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 2, i32 3
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 3, i32 4
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 3, i32 2
  store i16 %111, i16* %127, align 8
  %128 = zext i16 %112 to i64
  %129 = zext i16 %111 to i64
  %130 = tail call i64 @FT_DivFix(i64 %128, i64 %129) #11
  %131 = getelementptr inbounds %struct.TT_Size_Metrics_, %struct.TT_Size_Metrics_* %9, i64 0, i32 0
  store i64 %130, i64* %131, align 8
  br label %132

132:                                              ; preds = %123, %114
  %133 = phi i64 [ 65536, %123 ], [ %122, %114 ]
  %134 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 3, i32 1
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 1
  store %struct.FT_Size_Metrics_* %11, %struct.FT_Size_Metrics_** %135, align 8
  %136 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 23
  store i32 -1, i32* %136, align 4
  br label %137

137:                                              ; preds = %71, %8, %18, %2, %132
  %138 = phi i32 [ 0, %132 ], [ 0, %2 ], [ 151, %18 ], [ 151, %8 ], [ 0, %71 ]
  ret i32 %138
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i64 @tt_face_get_location(%struct.TT_FaceRec_* nocapture readonly, i32, i32* nocapture) #6 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 56
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %8, label %105

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 5, i32 15
  %10 = load i16, i16* %9, align 2
  %11 = icmp eq i16 %10, 0
  %12 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 57
  %13 = load i8*, i8** %12, align 8
  br i1 %11, label %60, label %14

14:                                               ; preds = %8
  %15 = shl i32 %1, 2
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %13, i64 %16
  %18 = shl i64 %6, 2
  %19 = getelementptr inbounds i8, i8* %13, i64 %18
  %20 = getelementptr inbounds i8, i8* %17, i64 4
  %21 = getelementptr inbounds i8, i8* %20, i64 -4
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = shl nuw nsw i64 %23, 24
  %25 = getelementptr inbounds i8, i8* %21, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i64
  %28 = shl nuw nsw i64 %27, 16
  %29 = or i64 %28, %24
  %30 = getelementptr inbounds i8, i8* %21, i64 2
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i64
  %33 = shl nuw nsw i64 %32, 8
  %34 = or i64 %29, %33
  %35 = getelementptr inbounds i8, i8* %21, i64 3
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = or i64 %34, %37
  %39 = getelementptr inbounds i8, i8* %20, i64 4
  %40 = icmp ugt i8* %39, %19
  br i1 %40, label %90, label %41

41:                                               ; preds = %14
  %42 = getelementptr inbounds i8, i8* %39, i64 -4
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i64
  %45 = shl nuw nsw i64 %44, 24
  %46 = getelementptr inbounds i8, i8* %42, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl nuw nsw i64 %48, 16
  %50 = or i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %42, i64 2
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i64
  %54 = shl nuw nsw i64 %53, 8
  %55 = or i64 %50, %54
  %56 = getelementptr inbounds i8, i8* %42, i64 3
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = or i64 %55, %58
  br label %90

60:                                               ; preds = %8
  %61 = shl i32 %1, 1
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %13, i64 %62
  %64 = shl i64 %6, 1
  %65 = getelementptr inbounds i8, i8* %13, i64 %64
  %66 = getelementptr inbounds i8, i8* %63, i64 2
  %67 = getelementptr inbounds i8, i8* %66, i64 -2
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i64
  %70 = shl nuw nsw i64 %69, 8
  %71 = getelementptr inbounds i8, i8* %67, i64 1
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i64
  %74 = or i64 %70, %73
  %75 = getelementptr inbounds i8, i8* %66, i64 2
  %76 = icmp ugt i8* %75, %65
  br i1 %76, label %86, label %77

77:                                               ; preds = %60
  %78 = getelementptr inbounds i8, i8* %75, i64 -2
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i64
  %81 = shl nuw nsw i64 %80, 8
  %82 = getelementptr inbounds i8, i8* %78, i64 1
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i64
  %85 = or i64 %81, %84
  br label %86

86:                                               ; preds = %60, %77
  %87 = phi i64 [ %85, %77 ], [ %74, %60 ]
  %88 = shl nuw nsw i64 %74, 1
  %89 = shl nsw i64 %87, 1
  br label %90

90:                                               ; preds = %14, %86, %41
  %91 = phi i64 [ %38, %41 ], [ %38, %14 ], [ %88, %86 ]
  %92 = phi i64 [ %59, %41 ], [ %38, %14 ], [ %89, %86 ]
  %93 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 46
  %94 = load i64, i64* %93, align 8
  %95 = icmp ugt i64 %91, %94
  br i1 %95, label %110, label %96

96:                                               ; preds = %90
  %97 = icmp ugt i64 %92, %94
  br i1 %97, label %98, label %101

98:                                               ; preds = %96
  %99 = add i64 %6, -2
  %100 = icmp eq i64 %99, %4
  br i1 %100, label %101, label %110

101:                                              ; preds = %98, %96
  %102 = phi i64 [ %92, %96 ], [ %94, %98 ]
  %103 = icmp ult i64 %102, %91
  %104 = select i1 %103, i64 %94, i64 %102
  br label %105

105:                                              ; preds = %101, %3
  %106 = phi i64 [ 0, %3 ], [ %91, %101 ]
  %107 = phi i64 [ 0, %3 ], [ %104, %101 ]
  %108 = sub i64 %107, %106
  %109 = trunc i64 %108 to i32
  br label %110

110:                                              ; preds = %98, %90, %105
  %111 = phi i32 [ %109, %105 ], [ 0, %90 ], [ 0, %98 ]
  %112 = phi i64 [ %106, %105 ], [ 0, %90 ], [ 0, %98 ]
  store i32 %111, i32* %2, align 4
  ret i64 %112
}

; Function Attrs: nofree nounwind ssp uwtable
define internal i32 @tt_property_set(%struct.FT_ModuleRec_* nocapture, i8* nocapture readonly, i8* nocapture readonly, i8 zeroext) #7 {
  %5 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0)) #12
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %20

7:                                                ; preds = %4
  %8 = icmp eq i8 %3, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %7
  %10 = tail call i64 @strtol(i8* nocapture %2, i8** null, i32 10) #11
  %11 = trunc i64 %10 to i32
  br label %15

12:                                               ; preds = %7
  %13 = bitcast i8* %2 to i32*
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %12, %9
  %16 = phi i32 [ %11, %9 ], [ %14, %12 ]
  switch i32 %16, label %20 [
    i32 40, label %17
    i32 35, label %17
  ]

17:                                               ; preds = %15, %15
  %18 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 5
  %19 = bitcast %struct.FT_ModuleRec_* %18 to i32*
  store i32 %16, i32* %19, align 8
  br label %20

20:                                               ; preds = %4, %17, %15
  %21 = phi i32 [ 0, %17 ], [ 7, %15 ], [ 12, %4 ]
  ret i32 %21
}

; Function Attrs: nofree nounwind ssp uwtable
define internal i32 @tt_property_get(%struct.FT_ModuleRec_* nocapture readonly, i8* nocapture readonly, i8* nocapture) #7 {
  %4 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0)) #12
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 5
  %8 = bitcast %struct.FT_ModuleRec_* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %2 to i32*
  store i32 %9, i32* %10, align 4
  br label %11

11:                                               ; preds = %3, %6
  %12 = phi i32 [ 0, %6 ], [ 12, %3 ]
  ret i32 %12
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @load_truetype_glyph(%struct.TT_LoaderRec_*, i32, i32, i8 zeroext) unnamed_addr #2 {
  %5 = alloca %struct.FT_Outline_, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.FT_Incremental_MetricsRec_, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.FT_Incremental_MetricsRec_, align 8
  %11 = alloca i16, align 2
  %12 = alloca i16, align 2
  %13 = alloca i16, align 2
  %14 = alloca i16, align 2
  %15 = alloca i32, align 4
  %16 = alloca %struct.FT_StreamRec_, align 8
  %17 = alloca %struct.FT_Data_, align 8
  %18 = alloca [4 x %struct.FT_Vector_], align 16
  %19 = alloca i32, align 4
  %20 = alloca i64, align 8
  %21 = alloca %struct.FT_Outline_, align 8
  %22 = alloca [4 x %struct.FT_Vector_], align 16
  %23 = alloca %struct.FT_Outline_, align 8
  %24 = alloca [4 x %struct.FT_Vector_], align 16
  %25 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #11
  store i32 0, i32* %15, align 4
  %26 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 0
  %27 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %26, align 8
  %28 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 3
  %29 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %28, align 8
  %30 = bitcast %struct.FT_StreamRec_* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %30) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 80, i1 false)
  %31 = bitcast %struct.FT_Data_* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 16, i1 false)
  %32 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %27, i64 0, i32 7, i32 14
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = icmp ult i32 %34, %2
  br i1 %35, label %36, label %38

36:                                               ; preds = %4
  %37 = trunc i32 %2 to i16
  store i16 %37, i16* %32, align 2
  br label %38

38:                                               ; preds = %36, %4
  %39 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 5
  store i32 %1, i32* %39, align 8
  %40 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 4
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %57

44:                                               ; preds = %38
  %45 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 1
  %46 = load %struct.TT_SizeRec_*, %struct.TT_SizeRec_** %45, align 8
  %47 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %46, i64 0, i32 1
  %48 = load %struct.FT_Size_Metrics_*, %struct.FT_Size_Metrics_** %47, align 8
  %49 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %48, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %48, i64 0, i32 3
  %52 = load i64, i64* %51, align 8
  %53 = shl i64 %50, 32
  %54 = ashr exact i64 %53, 32
  %55 = shl i64 %52, 32
  %56 = ashr exact i64 %55, 32
  br label %57

57:                                               ; preds = %38, %44
  %58 = phi i64 [ %54, %44 ], [ 65536, %38 ]
  %59 = phi i64 [ %56, %44 ], [ 65536, %38 ]
  %60 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %27, i64 0, i32 0, i32 30
  %61 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %60, align 8
  %62 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %61, i64 0, i32 4
  %63 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %62, align 8
  %64 = icmp eq %struct.FT_Incremental_InterfaceRec_* %63, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %63, i64 0, i32 0
  %67 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %66, align 8
  %68 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %67, i64 0, i32 0
  %69 = load i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)** %68, align 8
  %70 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %63, i64 0, i32 1
  %71 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %70, align 8
  %72 = call i32 %69(%struct.FT_IncrementalRec_* %71, i32 %1, %struct.FT_Data_* nonnull %17) #11
  store i32 %72, i32* %15, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %1740

74:                                               ; preds = %65
  %75 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %17, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 7
  store i32 %76, i32* %77, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 80, i1 false)
  %78 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %17, i64 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = sext i32 %76 to i64
  call void @FT_Stream_OpenMemory(%struct.FT_StreamRec_* nonnull %16, i8* %79, i64 %80) #11
  %81 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 6
  store %struct.FT_StreamRec_* %16, %struct.FT_StreamRec_** %81, align 8
  br label %85

82:                                               ; preds = %57
  %83 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 7
  %84 = tail call i64 @tt_face_get_location(%struct.TT_FaceRec_* %27, i32 %1, i32* %83)
  br label %85

85:                                               ; preds = %82, %74
  %86 = phi i64 [ 0, %74 ], [ %84, %82 ]
  %87 = phi i8 [ 1, %74 ], [ 0, %82 ]
  %88 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 7
  %89 = load i32, i32* %88, align 8
  %90 = icmp sgt i32 %89, 0
  br i1 %90, label %91, label %117

91:                                               ; preds = %85
  %92 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %27, i64 0, i32 47
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %101

95:                                               ; preds = %91
  %96 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %60, align 8
  %97 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %96, i64 0, i32 4
  %98 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %97, align 8
  %99 = icmp eq %struct.FT_Incremental_InterfaceRec_* %98, null
  br i1 %99, label %100, label %101

100:                                              ; preds = %95
  store i32 8, i32* %15, align 4
  br label %1728

101:                                              ; preds = %95, %91
  %102 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %27, i64 0, i32 17
  %103 = load i32 (%struct.TT_LoaderRec_*, i32, i64, i32)*, i32 (%struct.TT_LoaderRec_*, i32, i64, i32)** %102, align 8
  %104 = add i64 %93, %86
  %105 = call i32 %103(%struct.TT_LoaderRec_* %0, i32 %1, i64 %104, i32 %89) #11
  store i32 %105, i32* %15, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %1728

107:                                              ; preds = %101
  %108 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %27, i64 0, i32 19
  %109 = load i32 (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)** %108, align 8
  %110 = call i32 %109(%struct.TT_LoaderRec_* %0) #11
  store i32 %110, i32* %15, align 4
  %111 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %27, i64 0, i32 18
  %112 = load void (%struct.TT_LoaderRec_*)*, void (%struct.TT_LoaderRec_*)** %111, align 8
  call void %112(%struct.TT_LoaderRec_* %0) #11
  %113 = load i32, i32* %15, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %1728

115:                                              ; preds = %107
  %116 = load i32, i32* %88, align 8
  br label %117

117:                                              ; preds = %115, %85
  %118 = phi i32 [ %116, %115 ], [ %89, %85 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %124, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 8
  %122 = load i16, i16* %121, align 4
  %123 = icmp eq i16 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %120, %117
  %125 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 9, i32 0
  %126 = bitcast i64* %125 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 32, i1 false)
  br label %127

127:                                              ; preds = %124, %120
  %128 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %26, align 8
  %129 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 6
  %130 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %129, align 8
  %131 = bitcast i16* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %131) #11
  store i16 0, i16* %11, align 2
  %132 = bitcast i16* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %132) #11
  store i16 0, i16* %12, align 2
  %133 = bitcast i16* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %133) #11
  store i16 0, i16* %13, align 2
  %134 = bitcast i16* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %134) #11
  store i16 0, i16* %14, align 2
  %135 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %130) #11
  %136 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %128, i64 0, i32 22
  %137 = bitcast i8** %136 to %struct.SFNT_Interface_**
  %138 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %137, align 8
  %139 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %138, i64 0, i32 39
  %140 = load void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)*, void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)** %139, align 8
  call void %140(%struct.TT_FaceRec_* %128, i8 zeroext 0, i32 %1, i16* nonnull %11, i16* nonnull %13) #11
  %141 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 9, i32 3
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %128, i64 0, i32 8
  %144 = load i8, i8* %143, align 8
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %150, label %146

146:                                              ; preds = %127
  %147 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %137, align 8
  %148 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %147, i64 0, i32 39
  %149 = load void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)*, void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)** %148, align 8
  call void %149(%struct.TT_FaceRec_* %128, i8 zeroext 1, i32 %1, i16* nonnull %12, i16* nonnull %14) #11
  br label %182

150:                                              ; preds = %127
  %151 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %128, i64 0, i32 12, i32 0
  %152 = load i16, i16* %151, align 8
  %153 = icmp eq i16 %152, -1
  br i1 %153, label %168, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %128, i64 0, i32 12, i32 25
  %156 = load i16, i16* %155, align 2
  %157 = trunc i64 %142 to i16
  %158 = sub i16 %156, %157
  store i16 %158, i16* %12, align 2
  %159 = sext i16 %156 to i32
  %160 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %128, i64 0, i32 12, i32 26
  %161 = load i16, i16* %160, align 4
  %162 = sext i16 %161 to i32
  %163 = sub nsw i32 %159, %162
  %164 = icmp slt i32 %163, 0
  %165 = sub nsw i32 0, %163
  %166 = select i1 %164, i32 %165, i32 %163
  %167 = trunc i32 %166 to i16
  store i16 %167, i16* %14, align 2
  br label %182

168:                                              ; preds = %150
  %169 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %128, i64 0, i32 6, i32 1
  %170 = load i16, i16* %169, align 8
  %171 = trunc i64 %142 to i16
  %172 = sub i16 %170, %171
  store i16 %172, i16* %12, align 2
  %173 = sext i16 %170 to i32
  %174 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %128, i64 0, i32 6, i32 2
  %175 = load i16, i16* %174, align 2
  %176 = sext i16 %175 to i32
  %177 = sub nsw i32 %173, %176
  %178 = icmp slt i32 %177, 0
  %179 = sub nsw i32 0, %177
  %180 = select i1 %178, i32 %179, i32 %177
  %181 = trunc i32 %180 to i16
  store i16 %181, i16* %14, align 2
  br label %182

182:                                              ; preds = %168, %154, %146
  %183 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %130, i64 %135) #11
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %209

185:                                              ; preds = %182
  %186 = load i16, i16* %11, align 2
  %187 = sext i16 %186 to i32
  %188 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 10
  store i32 %187, i32* %188, align 8
  %189 = load i16, i16* %13, align 2
  %190 = zext i16 %189 to i32
  %191 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 11
  store i32 %190, i32* %191, align 4
  %192 = load i16, i16* %12, align 2
  %193 = sext i16 %192 to i32
  %194 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 22
  store i32 %193, i32* %194, align 8
  %195 = load i16, i16* %14, align 2
  %196 = zext i16 %195 to i32
  %197 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 23
  store i32 %196, i32* %197, align 4
  %198 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %128, i64 0, i32 0, i32 30
  %199 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %198, align 8
  %200 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %199, i64 0, i32 4
  %201 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %200, align 8
  %202 = icmp eq %struct.FT_Incremental_InterfaceRec_* %201, null
  br i1 %202, label %203, label %209

203:                                              ; preds = %185
  %204 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 13
  %205 = load i8, i8* %204, align 4
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %203
  store i8 1, i8* %204, align 4
  %208 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 12
  store i32 %190, i32* %208, align 8
  br label %209

209:                                              ; preds = %182, %185, %203, %207
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %134) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %133) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %132) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %131) #11
  store i32 %183, i32* %15, align 4
  %210 = icmp ne i32 %183, 0
  %211 = icmp ne i8 %3, 0
  %212 = or i1 %211, %210
  br i1 %212, label %1728, label %213

213:                                              ; preds = %209
  %214 = load i32, i32* %88, align 8
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %220, label %216

216:                                              ; preds = %213
  %217 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 8
  %218 = load i16, i16* %217, align 4
  %219 = icmp eq i16 %218, 0
  br i1 %219, label %220, label %472

220:                                              ; preds = %216, %213
  %221 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %26, align 8
  %222 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %221, i64 0, i32 0, i32 30
  %223 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %222, align 8
  %224 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %223, i64 0, i32 4
  %225 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %224, align 8
  %226 = icmp eq %struct.FT_Incremental_InterfaceRec_* %225, null
  %227 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %221, i64 0, i32 0
  br i1 %226, label %272, label %228

228:                                              ; preds = %220
  %229 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %225, i64 0, i32 0
  %230 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %229, align 8
  %231 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %230, i64 0, i32 2
  %232 = load i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)** %231, align 8
  %233 = icmp eq i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* %232, null
  br i1 %233, label %272, label %234

234:                                              ; preds = %228
  %235 = bitcast %struct.FT_Incremental_MetricsRec_* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %235) #11
  %236 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %10, i64 0, i32 0
  %237 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %10, i64 0, i32 1
  %238 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %10, i64 0, i32 2
  %239 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %10, i64 0, i32 3
  %240 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 10
  %241 = load i32, i32* %240, align 8
  %242 = sext i32 %241 to i64
  store i64 %242, i64* %236, align 8
  store i64 0, i64* %237, align 8
  %243 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 11
  %244 = load i32, i32* %243, align 4
  %245 = sext i32 %244 to i64
  store i64 %245, i64* %238, align 8
  store i64 0, i64* %239, align 8
  %246 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %229, align 8
  %247 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %246, i64 0, i32 2
  %248 = load i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)** %247, align 8
  %249 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %225, i64 0, i32 1
  %250 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %249, align 8
  %251 = call i32 %248(%struct.FT_IncrementalRec_* %250, i32 %1, i8 zeroext 0, %struct.FT_Incremental_MetricsRec_* nonnull %10) #11
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %268

253:                                              ; preds = %234
  %254 = load i64, i64* %236, align 8
  %255 = trunc i64 %254 to i32
  %256 = load i64, i64* %238, align 8
  %257 = trunc i64 %256 to i32
  %258 = shl i32 %255, 16
  %259 = ashr exact i32 %258, 16
  store i32 %259, i32* %240, align 8
  %260 = and i32 %257, 65535
  store i32 %260, i32* %243, align 4
  %261 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 22
  store i32 0, i32* %261, align 8
  %262 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 23
  store i32 0, i32* %262, align 4
  %263 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 13
  %264 = load i8, i8* %263, align 4
  %265 = icmp eq i8 %264, 0
  br i1 %265, label %266, label %268

266:                                              ; preds = %253
  store i8 1, i8* %263, align 4
  %267 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 12
  store i32 %260, i32* %267, align 8
  br label %268

268:                                              ; preds = %266, %253, %234
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %235) #11
  %269 = bitcast %struct.TT_LoaderRec_* %0 to %struct.FT_FaceRec_**
  %270 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %269, align 8
  %271 = bitcast %struct.FT_FaceRec_* %270 to %struct.TT_FaceRec_*
  br label %272

272:                                              ; preds = %220, %228, %268
  %273 = phi %struct.TT_FaceRec_* [ %221, %220 ], [ %221, %228 ], [ %271, %268 ]
  %274 = phi %struct.FT_FaceRec_* [ %227, %220 ], [ %227, %228 ], [ %270, %268 ]
  %275 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %274, i64 0, i32 24
  %276 = bitcast %struct.FT_DriverRec_** %275 to %struct.TT_DriverRec_**
  %277 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %276, align 8
  %278 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %277, i64 0, i32 2
  %279 = load i32, i32* %278, align 8
  %280 = icmp eq i32 %279, 40
  br i1 %280, label %281, label %292

281:                                              ; preds = %272
  %282 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 18
  %283 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %282, align 8
  %284 = icmp eq %struct.TT_ExecContextRec_* %283, null
  br i1 %284, label %292, label %285

285:                                              ; preds = %281
  %286 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %283, i64 0, i32 71
  %287 = load i8, i8* %286, align 1
  %288 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %283, i64 0, i32 76
  %289 = load i8, i8* %288, align 2
  %290 = icmp ne i8 %287, 0
  %291 = icmp ne i8 %289, 0
  br label %292

292:                                              ; preds = %285, %281, %272
  %293 = phi i1 [ false, %272 ], [ %291, %285 ], [ false, %281 ]
  %294 = phi i1 [ false, %272 ], [ %290, %285 ], [ false, %281 ]
  %295 = and i1 %293, %294
  %296 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 9, i32 0
  %297 = load i64, i64* %296, align 8
  %298 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 10
  %299 = load i32, i32* %298, align 8
  %300 = sext i32 %299 to i64
  %301 = sub nsw i64 %297, %300
  %302 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 14, i32 0
  store i64 %301, i64* %302, align 8
  %303 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 14, i32 1
  store i64 0, i64* %303, align 8
  %304 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 11
  %305 = load i32, i32* %304, align 4
  %306 = sext i32 %305 to i64
  %307 = add nsw i64 %301, %306
  %308 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 15, i32 0
  store i64 %307, i64* %308, align 8
  %309 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 15, i32 1
  store i64 0, i64* %309, align 8
  br i1 %295, label %310, label %313

310:                                              ; preds = %292
  %311 = sdiv i32 %305, 2
  %312 = sext i32 %311 to i64
  br label %313

313:                                              ; preds = %310, %292
  %314 = phi i64 [ %312, %310 ], [ 0, %292 ]
  %315 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 24, i32 0
  store i64 %314, i64* %315, align 8
  %316 = load i64, i64* %141, align 8
  %317 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 22
  %318 = load i32, i32* %317, align 8
  %319 = sext i32 %318 to i64
  %320 = add nsw i64 %316, %319
  %321 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 24, i32 1
  store i64 %320, i64* %321, align 8
  br i1 %295, label %322, label %325

322:                                              ; preds = %313
  %323 = sdiv i32 %305, 2
  %324 = sext i32 %323 to i64
  br label %325

325:                                              ; preds = %313, %322
  %326 = phi i64 [ %324, %322 ], [ 0, %313 ]
  %327 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 25, i32 0
  store i64 %326, i64* %327, align 8
  %328 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 23
  %329 = load i32, i32* %328, align 4
  %330 = sext i32 %329 to i64
  %331 = sub nsw i64 %320, %330
  %332 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 25, i32 1
  store i64 %331, i64* %332, align 8
  %333 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %27, i64 0, i32 0, i32 1
  %334 = load i64, i64* %333, align 8
  %335 = and i64 %334, 2147418112
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %342

337:                                              ; preds = %325
  %338 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %27, i64 0, i32 0, i32 2
  %339 = load i64, i64* %338, align 8
  %340 = trunc i64 %339 to i16
  %341 = icmp slt i16 %340, 0
  br i1 %341, label %342, label %412

342:                                              ; preds = %325, %337
  %343 = bitcast [4 x %struct.FT_Vector_]* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %343) #11
  %344 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %344) #11
  store i32 16843009, i32* %19, align 4
  %345 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %345) #11
  store i64 844433520132096, i64* %20, align 8
  %346 = bitcast %struct.FT_Outline_* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %346) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %346, i8 -86, i64 40, i1 false)
  %347 = bitcast [4 x %struct.FT_Vector_]* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %347) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %347, i8 0, i64 64, i1 false)
  %348 = getelementptr inbounds [4 x %struct.FT_Vector_], [4 x %struct.FT_Vector_]* %18, i64 0, i64 0
  %349 = getelementptr inbounds [4 x %struct.FT_Vector_], [4 x %struct.FT_Vector_]* %18, i64 0, i64 0, i32 0
  store i64 %301, i64* %349, align 16
  %350 = getelementptr inbounds [4 x %struct.FT_Vector_], [4 x %struct.FT_Vector_]* %18, i64 0, i64 0, i32 1
  store i64 0, i64* %350, align 8
  %351 = getelementptr inbounds [4 x %struct.FT_Vector_], [4 x %struct.FT_Vector_]* %18, i64 0, i64 1, i32 0
  store i64 %307, i64* %351, align 16
  %352 = getelementptr inbounds [4 x %struct.FT_Vector_], [4 x %struct.FT_Vector_]* %18, i64 0, i64 1, i32 1
  store i64 0, i64* %352, align 8
  %353 = getelementptr inbounds [4 x %struct.FT_Vector_], [4 x %struct.FT_Vector_]* %18, i64 0, i64 2, i32 0
  store i64 %314, i64* %353, align 16
  %354 = getelementptr inbounds [4 x %struct.FT_Vector_], [4 x %struct.FT_Vector_]* %18, i64 0, i64 2, i32 1
  store i64 %320, i64* %354, align 8
  %355 = getelementptr inbounds [4 x %struct.FT_Vector_], [4 x %struct.FT_Vector_]* %18, i64 0, i64 3, i32 0
  store i64 %326, i64* %355, align 16
  %356 = getelementptr inbounds [4 x %struct.FT_Vector_], [4 x %struct.FT_Vector_]* %18, i64 0, i64 3, i32 1
  store i64 %331, i64* %356, align 8
  %357 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %21, i64 0, i32 1
  store i16 4, i16* %357, align 2
  %358 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %21, i64 0, i32 0
  store i16 4, i16* %358, align 8
  %359 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %21, i64 0, i32 2
  store %struct.FT_Vector_* %348, %struct.FT_Vector_** %359, align 8
  %360 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %21, i64 0, i32 3
  %361 = bitcast i8** %360 to i32**
  store i32* %19, i32** %361, align 8
  %362 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %21, i64 0, i32 4
  %363 = bitcast i16** %362 to i64**
  store i64* %20, i64** %363, align 8
  %364 = getelementptr inbounds [4 x %struct.FT_Vector_], [4 x %struct.FT_Vector_]* %22, i64 0, i64 0
  %365 = call fastcc i32 @TT_Vary_Apply_Glyph_Deltas(%struct.TT_FaceRec_* %273, i32 %1, %struct.FT_Outline_* nonnull %21, %struct.FT_Vector_* nonnull %364, i32 4)
  store i32 %365, i32* %15, align 4
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %1727

367:                                              ; preds = %342
  %368 = bitcast [4 x %struct.FT_Vector_]* %18 to <2 x i64>*
  %369 = load <2 x i64>, <2 x i64>* %368, align 16
  %370 = bitcast i64* %302 to <2 x i64>*
  store <2 x i64> %369, <2 x i64>* %370, align 8
  %371 = bitcast i64* %351 to <2 x i64>*
  %372 = load <2 x i64>, <2 x i64>* %371, align 16
  %373 = bitcast i64* %308 to <2 x i64>*
  store <2 x i64> %372, <2 x i64>* %373, align 8
  %374 = load i64, i64* %353, align 16
  store i64 %374, i64* %315, align 8
  %375 = load i64, i64* %354, align 8
  store i64 %375, i64* %321, align 8
  %376 = load i64, i64* %355, align 16
  store i64 %376, i64* %327, align 8
  %377 = load i64, i64* %356, align 8
  store i64 %377, i64* %332, align 8
  %378 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %26, align 8
  %379 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %378, i64 0, i32 51
  %380 = load i32, i32* %379, align 8
  %381 = and i32 %380, 2
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %395

383:                                              ; preds = %367
  %384 = getelementptr inbounds [4 x %struct.FT_Vector_], [4 x %struct.FT_Vector_]* %22, i64 0, i64 1, i32 0
  %385 = load i64, i64* %384, align 16
  %386 = getelementptr inbounds [4 x %struct.FT_Vector_], [4 x %struct.FT_Vector_]* %22, i64 0, i64 0, i32 0
  %387 = load i64, i64* %386, align 16
  %388 = add i64 %385, 32
  %389 = sub i64 %388, %387
  %390 = and i64 %389, -64
  %391 = sdiv i64 %390, 64
  %392 = trunc i64 %391 to i32
  %393 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 12
  store i32 %392, i32* %393, align 8
  %394 = load i32, i32* %379, align 8
  br label %395

395:                                              ; preds = %367, %383
  %396 = phi i32 [ %380, %367 ], [ %394, %383 ]
  %397 = and i32 %396, 16
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %399, label %409

399:                                              ; preds = %395
  %400 = getelementptr inbounds [4 x %struct.FT_Vector_], [4 x %struct.FT_Vector_]* %22, i64 0, i64 3, i32 0
  %401 = load i64, i64* %400, align 16
  %402 = getelementptr inbounds [4 x %struct.FT_Vector_], [4 x %struct.FT_Vector_]* %22, i64 0, i64 2, i32 0
  %403 = load i64, i64* %402, align 16
  %404 = add i64 %401, 32
  %405 = sub i64 %404, %403
  %406 = and i64 %405, -64
  %407 = sdiv i64 %406, 64
  %408 = trunc i64 %407 to i32
  store i32 %408, i32* %328, align 4
  br label %409

409:                                              ; preds = %399, %395
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %347) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %346) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %345) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %344) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %343) #11
  %410 = extractelement <2 x i64> %369, i32 0
  %411 = extractelement <2 x i64> %372, i32 0
  br label %412

412:                                              ; preds = %409, %337
  %413 = phi i64 [ %377, %409 ], [ %331, %337 ]
  %414 = phi i64 [ %376, %409 ], [ %326, %337 ]
  %415 = phi i64 [ %375, %409 ], [ %320, %337 ]
  %416 = phi i64 [ %374, %409 ], [ %314, %337 ]
  %417 = phi i64 [ %411, %409 ], [ %307, %337 ]
  %418 = phi i64 [ %410, %409 ], [ %301, %337 ]
  %419 = load i64, i64* %40, align 8
  %420 = and i64 %419, 1
  %421 = icmp eq i64 %420, 0
  br i1 %421, label %422, label %471

422:                                              ; preds = %412
  %423 = shl i64 %418, 32
  %424 = ashr exact i64 %423, 32
  %425 = mul nsw i64 %424, %58
  %426 = ashr i64 %425, 63
  %427 = add nsw i64 %425, 32768
  %428 = add nsw i64 %427, %426
  %429 = shl i64 %428, 16
  %430 = ashr i64 %429, 32
  store i64 %430, i64* %302, align 8
  %431 = shl i64 %417, 32
  %432 = ashr exact i64 %431, 32
  %433 = mul nsw i64 %432, %58
  %434 = ashr i64 %433, 63
  %435 = add nsw i64 %433, 32768
  %436 = add nsw i64 %435, %434
  %437 = shl i64 %436, 16
  %438 = ashr i64 %437, 32
  store i64 %438, i64* %308, align 8
  %439 = shl i64 %416, 32
  %440 = ashr exact i64 %439, 32
  %441 = mul nsw i64 %440, %58
  %442 = ashr i64 %441, 63
  %443 = add nsw i64 %441, 32768
  %444 = add nsw i64 %443, %442
  %445 = shl i64 %444, 16
  %446 = ashr i64 %445, 32
  store i64 %446, i64* %315, align 8
  %447 = shl i64 %415, 32
  %448 = ashr exact i64 %447, 32
  %449 = mul nsw i64 %448, %59
  %450 = ashr i64 %449, 63
  %451 = add nsw i64 %449, 32768
  %452 = add nsw i64 %451, %450
  %453 = shl i64 %452, 16
  %454 = ashr i64 %453, 32
  store i64 %454, i64* %321, align 8
  %455 = shl i64 %414, 32
  %456 = ashr exact i64 %455, 32
  %457 = mul nsw i64 %456, %58
  %458 = ashr i64 %457, 63
  %459 = add nsw i64 %457, 32768
  %460 = add nsw i64 %459, %458
  %461 = shl i64 %460, 16
  %462 = ashr i64 %461, 32
  store i64 %462, i64* %327, align 8
  %463 = shl i64 %413, 32
  %464 = ashr exact i64 %463, 32
  %465 = mul nsw i64 %464, %59
  %466 = ashr i64 %465, 63
  %467 = add nsw i64 %465, 32768
  %468 = add nsw i64 %467, %466
  %469 = shl i64 %468, 16
  %470 = ashr i64 %469, 32
  store i64 %470, i64* %332, align 8
  br label %471

471:                                              ; preds = %422, %412
  store i32 0, i32* %15, align 4
  br label %1728

472:                                              ; preds = %216
  %473 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %26, align 8
  %474 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %473, i64 0, i32 0, i32 30
  %475 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %474, align 8
  %476 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %475, i64 0, i32 4
  %477 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %476, align 8
  %478 = icmp eq %struct.FT_Incremental_InterfaceRec_* %477, null
  %479 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %473, i64 0, i32 0
  br i1 %478, label %523, label %480

480:                                              ; preds = %472
  %481 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %477, i64 0, i32 0
  %482 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %481, align 8
  %483 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %482, i64 0, i32 2
  %484 = load i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)** %483, align 8
  %485 = icmp eq i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* %484, null
  br i1 %485, label %523, label %486

486:                                              ; preds = %480
  %487 = bitcast %struct.FT_Incremental_MetricsRec_* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %487) #11
  %488 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %7, i64 0, i32 0
  %489 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %7, i64 0, i32 1
  %490 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %7, i64 0, i32 2
  %491 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %7, i64 0, i32 3
  %492 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 10
  %493 = load i32, i32* %492, align 8
  %494 = sext i32 %493 to i64
  store i64 %494, i64* %488, align 8
  store i64 0, i64* %489, align 8
  %495 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 11
  %496 = load i32, i32* %495, align 4
  %497 = sext i32 %496 to i64
  store i64 %497, i64* %490, align 8
  store i64 0, i64* %491, align 8
  %498 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %481, align 8
  %499 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %498, i64 0, i32 2
  %500 = load i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)** %499, align 8
  %501 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %477, i64 0, i32 1
  %502 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %501, align 8
  %503 = call i32 %500(%struct.FT_IncrementalRec_* %502, i32 %1, i8 zeroext 0, %struct.FT_Incremental_MetricsRec_* nonnull %7) #11
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %505, label %520

505:                                              ; preds = %486
  %506 = load i64, i64* %488, align 8
  %507 = trunc i64 %506 to i32
  %508 = load i64, i64* %490, align 8
  %509 = trunc i64 %508 to i32
  %510 = shl i32 %507, 16
  %511 = ashr exact i32 %510, 16
  store i32 %511, i32* %492, align 8
  %512 = and i32 %509, 65535
  store i32 %512, i32* %495, align 4
  %513 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 22
  store i32 0, i32* %513, align 8
  %514 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 23
  store i32 0, i32* %514, align 4
  %515 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 13
  %516 = load i8, i8* %515, align 4
  %517 = icmp eq i8 %516, 0
  br i1 %517, label %518, label %520

518:                                              ; preds = %505
  store i8 1, i8* %515, align 4
  %519 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 12
  store i32 %512, i32* %519, align 8
  br label %520

520:                                              ; preds = %518, %505, %486
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %487) #11
  %521 = bitcast %struct.TT_LoaderRec_* %0 to %struct.FT_FaceRec_**
  %522 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %521, align 8
  br label %523

523:                                              ; preds = %472, %480, %520
  %524 = phi %struct.FT_FaceRec_* [ %479, %472 ], [ %479, %480 ], [ %522, %520 ]
  %525 = bitcast %struct.TT_LoaderRec_* %0 to %struct.FT_FaceRec_**
  %526 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %524, i64 0, i32 24
  %527 = bitcast %struct.FT_DriverRec_** %526 to %struct.TT_DriverRec_**
  %528 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %527, align 8
  %529 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %528, i64 0, i32 2
  %530 = load i32, i32* %529, align 8
  %531 = icmp eq i32 %530, 40
  br i1 %531, label %532, label %543

532:                                              ; preds = %523
  %533 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 18
  %534 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %533, align 8
  %535 = icmp eq %struct.TT_ExecContextRec_* %534, null
  br i1 %535, label %543, label %536

536:                                              ; preds = %532
  %537 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %534, i64 0, i32 71
  %538 = load i8, i8* %537, align 1
  %539 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %534, i64 0, i32 76
  %540 = load i8, i8* %539, align 2
  %541 = icmp ne i8 %538, 0
  %542 = icmp ne i8 %540, 0
  br label %543

543:                                              ; preds = %536, %532, %523
  %544 = phi i1 [ false, %523 ], [ %542, %536 ], [ false, %532 ]
  %545 = phi i1 [ false, %523 ], [ %541, %536 ], [ false, %532 ]
  %546 = and i1 %544, %545
  %547 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 9, i32 0
  %548 = load i64, i64* %547, align 8
  %549 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 10
  %550 = load i32, i32* %549, align 8
  %551 = sext i32 %550 to i64
  %552 = sub nsw i64 %548, %551
  %553 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 14, i32 0
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 14, i32 1
  store i64 0, i64* %554, align 8
  %555 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 11
  %556 = load i32, i32* %555, align 4
  %557 = sext i32 %556 to i64
  %558 = add nsw i64 %552, %557
  %559 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 15, i32 0
  store i64 %558, i64* %559, align 8
  %560 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 15, i32 1
  store i64 0, i64* %560, align 8
  br i1 %546, label %561, label %564

561:                                              ; preds = %543
  %562 = sdiv i32 %556, 2
  %563 = sext i32 %562 to i64
  br label %564

564:                                              ; preds = %561, %543
  %565 = phi i64 [ %563, %561 ], [ 0, %543 ]
  %566 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 24, i32 0
  store i64 %565, i64* %566, align 8
  %567 = load i64, i64* %141, align 8
  %568 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 22
  %569 = load i32, i32* %568, align 8
  %570 = sext i32 %569 to i64
  %571 = add nsw i64 %567, %570
  %572 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 24, i32 1
  store i64 %571, i64* %572, align 8
  br i1 %546, label %573, label %576

573:                                              ; preds = %564
  %574 = sdiv i32 %556, 2
  %575 = sext i32 %574 to i64
  br label %576

576:                                              ; preds = %564, %573
  %577 = phi i64 [ %575, %573 ], [ 0, %564 ]
  %578 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 25, i32 0
  store i64 %577, i64* %578, align 8
  %579 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 23
  %580 = load i32, i32* %579, align 4
  %581 = sext i32 %580 to i64
  %582 = sub nsw i64 %571, %581
  %583 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 25, i32 1
  store i64 %582, i64* %583, align 8
  %584 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %27, i64 0, i32 17
  %585 = load i32 (%struct.TT_LoaderRec_*, i32, i64, i32)*, i32 (%struct.TT_LoaderRec_*, i32, i64, i32)** %584, align 8
  %586 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %27, i64 0, i32 47
  %587 = load i64, i64* %586, align 8
  %588 = add i64 %86, 10
  %589 = add i64 %588, %587
  %590 = load i32, i32* %88, align 8
  %591 = add i32 %590, -10
  %592 = call i32 %585(%struct.TT_LoaderRec_* %0, i32 %1, i64 %589, i32 %591) #11
  store i32 %592, i32* %15, align 4
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %594, label %1728

594:                                              ; preds = %576
  %595 = load i16, i16* %217, align 4
  %596 = icmp sgt i16 %595, 0
  br i1 %596, label %597, label %955

597:                                              ; preds = %594
  %598 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %27, i64 0, i32 20
  %599 = load i32 (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)** %598, align 8
  %600 = call i32 %599(%struct.TT_LoaderRec_* %0) #11
  store i32 %600, i32* %15, align 4
  %601 = icmp eq i32 %600, 0
  br i1 %601, label %602, label %1724

602:                                              ; preds = %597
  %603 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %27, i64 0, i32 18
  %604 = load void (%struct.TT_LoaderRec_*)*, void (%struct.TT_LoaderRec_*)** %603, align 8
  call void %604(%struct.TT_LoaderRec_* %0) #11
  %605 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %28, align 8
  %606 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %606) #11
  store i32 0, i32* %6, align 4
  %607 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %26, align 8
  %608 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %607, i64 0, i32 0, i32 25
  %609 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %608, align 8
  %610 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %605, i64 0, i32 6
  %611 = getelementptr inbounds %struct.FT_GlyphLoadRec_, %struct.FT_GlyphLoadRec_* %610, i64 0, i32 0
  %612 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %605, i64 0, i32 6, i32 0, i32 1
  %613 = load i16, i16* %612, align 2
  %614 = sext i16 %613 to i32
  %615 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %605, i64 0, i32 6, i32 0, i32 2
  %616 = load %struct.FT_Vector_*, %struct.FT_Vector_** %615, align 8
  %617 = sext i16 %613 to i64
  %618 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %616, i64 %617
  %619 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 14
  %620 = bitcast %struct.FT_Vector_* %618 to i8*
  %621 = bitcast %struct.FT_Vector_* %619 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %620, i8* align 8 %621, i64 16, i1 false) #11
  %622 = load %struct.FT_Vector_*, %struct.FT_Vector_** %615, align 8
  %623 = add nsw i32 %614, 1
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %622, i64 %624
  %626 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 15
  %627 = bitcast %struct.FT_Vector_* %625 to i8*
  %628 = bitcast %struct.FT_Vector_* %626 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %627, i8* align 8 %628, i64 16, i1 false) #11
  %629 = load %struct.FT_Vector_*, %struct.FT_Vector_** %615, align 8
  %630 = add nsw i32 %614, 2
  %631 = sext i32 %630 to i64
  %632 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %629, i64 %631
  %633 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 24
  %634 = bitcast %struct.FT_Vector_* %632 to i8*
  %635 = bitcast %struct.FT_Vector_* %633 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %634, i8* align 8 %635, i64 16, i1 false) #11
  %636 = load %struct.FT_Vector_*, %struct.FT_Vector_** %615, align 8
  %637 = add nsw i32 %614, 3
  %638 = sext i32 %637 to i64
  %639 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %636, i64 %638
  %640 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 25
  %641 = bitcast %struct.FT_Vector_* %639 to i8*
  %642 = bitcast %struct.FT_Vector_* %640 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %641, i8* align 8 %642, i64 16, i1 false) #11
  %643 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %605, i64 0, i32 6, i32 0, i32 3
  %644 = load i8*, i8** %643, align 8
  %645 = getelementptr inbounds i8, i8* %644, i64 %617
  store i8 0, i8* %645, align 1
  %646 = load i8*, i8** %643, align 8
  %647 = getelementptr inbounds i8, i8* %646, i64 %624
  store i8 0, i8* %647, align 1
  %648 = load i8*, i8** %643, align 8
  %649 = getelementptr inbounds i8, i8* %648, i64 %631
  store i8 0, i8* %649, align 1
  %650 = load i8*, i8** %643, align 8
  %651 = getelementptr inbounds i8, i8* %650, i64 %638
  store i8 0, i8* %651, align 1
  %652 = add nsw i32 %614, 4
  %653 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %525, align 8
  %654 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %653, i64 0, i32 1
  %655 = load i64, i64* %654, align 8
  %656 = and i64 %655, 2147418112
  %657 = icmp eq i64 %656, 0
  br i1 %657, label %658, label %663

658:                                              ; preds = %602
  %659 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %653, i64 0, i32 2
  %660 = load i64, i64* %659, align 8
  %661 = trunc i64 %660 to i16
  %662 = icmp slt i16 %661, 0
  br i1 %662, label %663, label %706

663:                                              ; preds = %658, %602
  %664 = sext i32 %652 to i64
  %665 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %609, i64 16, i64 0, i64 %664, i8* null, i32* nonnull %6) #11
  %666 = bitcast i8* %665 to %struct.FT_Vector_*
  %667 = load i32, i32* %6, align 4
  %668 = icmp eq i32 %667, 0
  br i1 %668, label %669, label %950

669:                                              ; preds = %663
  %670 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %26, align 8
  %671 = load i32, i32* %39, align 8
  %672 = call fastcc i32 @TT_Vary_Apply_Glyph_Deltas(%struct.TT_FaceRec_* %670, i32 %671, %struct.FT_Outline_* %611, %struct.FT_Vector_* %666, i32 %652) #11
  store i32 %672, i32* %6, align 4
  %673 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %26, align 8
  %674 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %673, i64 0, i32 51
  %675 = load i32, i32* %674, align 8
  %676 = and i32 %675, 2
  %677 = icmp eq i32 %676, 0
  br i1 %677, label %678, label %690

678:                                              ; preds = %669
  %679 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %666, i64 %624, i32 0
  %680 = load i64, i64* %679, align 8
  %681 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %666, i64 %617, i32 0
  %682 = load i64, i64* %681, align 8
  %683 = add i64 %680, 32
  %684 = sub i64 %683, %682
  %685 = and i64 %684, -64
  %686 = sdiv i64 %685, 64
  %687 = trunc i64 %686 to i32
  %688 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 12
  store i32 %687, i32* %688, align 8
  %689 = load i32, i32* %674, align 8
  br label %690

690:                                              ; preds = %678, %669
  %691 = phi i32 [ %675, %669 ], [ %689, %678 ]
  %692 = and i32 %691, 16
  %693 = icmp eq i32 %692, 0
  br i1 %693, label %694, label %704

694:                                              ; preds = %690
  %695 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %666, i64 %638, i32 0
  %696 = load i64, i64* %695, align 8
  %697 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %666, i64 %631, i32 0
  %698 = load i64, i64* %697, align 8
  %699 = add i64 %696, 32
  %700 = sub i64 %699, %698
  %701 = and i64 %700, -64
  %702 = sdiv i64 %701, 64
  %703 = trunc i64 %702 to i32
  store i32 %703, i32* %579, align 4
  br label %704

704:                                              ; preds = %694, %690
  %705 = icmp eq i32 %672, 0
  br i1 %705, label %706, label %950

706:                                              ; preds = %704, %658
  %707 = phi i8* [ %665, %704 ], [ null, %658 ]
  %708 = phi %struct.FT_Vector_* [ %666, %704 ], [ null, %658 ]
  %709 = load i64, i64* %40, align 8
  %710 = and i64 %709, 2
  %711 = icmp eq i64 %710, 0
  br i1 %711, label %712, label %748

712:                                              ; preds = %706
  %713 = load i16, i16* %612, align 2
  %714 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 3
  store i16 %713, i16* %714, align 4
  %715 = getelementptr inbounds %struct.FT_GlyphLoadRec_, %struct.FT_GlyphLoadRec_* %610, i64 0, i32 0, i32 0
  %716 = load i16, i16* %715, align 8
  %717 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 4
  store i16 %716, i16* %717, align 2
  %718 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %605, i64 0, i32 6, i32 1
  %719 = bitcast %struct.FT_Vector_** %718 to i64*
  %720 = load i64, i64* %719, align 8
  %721 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 5
  %722 = bitcast %struct.FT_Vector_** %721 to i64*
  store i64 %720, i64* %722, align 8
  %723 = bitcast %struct.FT_Vector_** %615 to i64*
  %724 = load i64, i64* %723, align 8
  %725 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 6
  %726 = bitcast %struct.FT_Vector_** %725 to i64*
  store i64 %724, i64* %726, align 8
  %727 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %605, i64 0, i32 6, i32 2
  %728 = bitcast %struct.FT_Vector_** %727 to i64*
  %729 = load i64, i64* %728, align 8
  %730 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 7
  %731 = bitcast %struct.FT_Vector_** %730 to i64*
  store i64 %729, i64* %731, align 8
  %732 = bitcast i8** %643 to i64*
  %733 = load i64, i64* %732, align 8
  %734 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 8
  %735 = bitcast i8** %734 to i64*
  store i64 %733, i64* %735, align 8
  %736 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %605, i64 0, i32 6, i32 0, i32 4
  %737 = bitcast i16** %736 to i64*
  %738 = load i64, i64* %737, align 8
  %739 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 9
  %740 = bitcast i16** %739 to i64*
  store i64 %738, i64* %740, align 8
  %741 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 10
  store i16 0, i16* %741, align 8
  %742 = inttoptr i64 %729 to i8*
  %743 = inttoptr i64 %724 to i8*
  %744 = zext i16 %713 to i64
  %745 = shl nuw nsw i64 %744, 4
  %746 = add nuw nsw i64 %745, 64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %742, i8* align 8 %743, i64 %746, i1 false) #11
  %747 = load i64, i64* %40, align 8
  br label %748

748:                                              ; preds = %712, %706
  %749 = phi i64 [ %747, %712 ], [ %709, %706 ]
  %750 = load %struct.FT_Vector_*, %struct.FT_Vector_** %615, align 8
  %751 = sext i32 %652 to i64
  %752 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %750, i64 %751
  %753 = and i64 %749, 1
  %754 = icmp eq i64 %753, 0
  br i1 %754, label %755, label %847

755:                                              ; preds = %748
  %756 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 1
  %757 = load %struct.TT_SizeRec_*, %struct.TT_SizeRec_** %756, align 8
  %758 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %757, i64 0, i32 1
  %759 = load %struct.FT_Size_Metrics_*, %struct.FT_Size_Metrics_** %758, align 8
  %760 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %759, i64 0, i32 2
  %761 = load i64, i64* %760, align 8
  %762 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %759, i64 0, i32 3
  %763 = load i64, i64* %762, align 8
  %764 = trunc i64 %761 to i32
  %765 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %525, align 8
  %766 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %765, i64 0, i32 1
  %767 = load i64, i64* %766, align 8
  %768 = and i64 %767, 2147418112
  %769 = icmp eq i64 %768, 0
  br i1 %769, label %770, label %782

770:                                              ; preds = %755
  %771 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %765, i64 0, i32 2
  %772 = load i64, i64* %771, align 8
  %773 = trunc i64 %772 to i16
  %774 = icmp slt i16 %773, 0
  br i1 %774, label %782, label %775

775:                                              ; preds = %770
  %776 = icmp sgt i32 %652, 0
  br i1 %776, label %777, label %847

777:                                              ; preds = %775
  %778 = shl i64 %761, 32
  %779 = ashr exact i64 %778, 32
  %780 = shl i64 %763, 32
  %781 = ashr exact i64 %780, 32
  br label %823

782:                                              ; preds = %770, %755
  %783 = icmp sgt i32 %652, 0
  br i1 %783, label %784, label %847

784:                                              ; preds = %782
  %785 = shl i64 %761, 32
  %786 = ashr exact i64 %785, 32
  %787 = shl i64 %763, 32
  %788 = ashr exact i64 %787, 32
  br label %789

789:                                              ; preds = %789, %784
  %790 = phi %struct.FT_Vector_* [ %708, %784 ], [ %821, %789 ]
  %791 = phi %struct.FT_Vector_* [ %750, %784 ], [ %820, %789 ]
  %792 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %790, i64 0, i32 0
  %793 = load i64, i64* %792, align 8
  %794 = shl i64 %793, 32
  %795 = ashr exact i64 %794, 32
  %796 = mul nsw i64 %795, %786
  %797 = ashr i64 %796, 63
  %798 = add nsw i64 %796, 32768
  %799 = add nsw i64 %798, %797
  %800 = lshr i64 %799, 16
  %801 = trunc i64 %800 to i32
  %802 = add nsw i32 %801, 32
  %803 = ashr i32 %802, 6
  %804 = sext i32 %803 to i64
  %805 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %791, i64 0, i32 0
  store i64 %804, i64* %805, align 8
  %806 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %790, i64 0, i32 1
  %807 = load i64, i64* %806, align 8
  %808 = shl i64 %807, 32
  %809 = ashr exact i64 %808, 32
  %810 = mul nsw i64 %809, %788
  %811 = ashr i64 %810, 63
  %812 = add nsw i64 %810, 32768
  %813 = add nsw i64 %812, %811
  %814 = lshr i64 %813, 16
  %815 = trunc i64 %814 to i32
  %816 = add nsw i32 %815, 32
  %817 = ashr i32 %816, 6
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %791, i64 0, i32 1
  store i64 %818, i64* %819, align 8
  %820 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %791, i64 1
  %821 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %790, i64 1
  %822 = icmp ult %struct.FT_Vector_* %820, %752
  br i1 %822, label %789, label %847

823:                                              ; preds = %823, %777
  %824 = phi %struct.FT_Vector_* [ %750, %777 ], [ %845, %823 ]
  %825 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %824, i64 0, i32 0
  %826 = load i64, i64* %825, align 8
  %827 = shl i64 %826, 32
  %828 = ashr exact i64 %827, 32
  %829 = mul nsw i64 %828, %779
  %830 = ashr i64 %829, 63
  %831 = add nsw i64 %829, 32768
  %832 = add nsw i64 %831, %830
  %833 = shl i64 %832, 16
  %834 = ashr i64 %833, 32
  store i64 %834, i64* %825, align 8
  %835 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %824, i64 0, i32 1
  %836 = load i64, i64* %835, align 8
  %837 = shl i64 %836, 32
  %838 = ashr exact i64 %837, 32
  %839 = mul nsw i64 %838, %781
  %840 = ashr i64 %839, 63
  %841 = add nsw i64 %839, 32768
  %842 = add nsw i64 %841, %840
  %843 = shl i64 %842, 16
  %844 = ashr i64 %843, 32
  store i64 %844, i64* %835, align 8
  %845 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %824, i64 1
  %846 = icmp ult %struct.FT_Vector_* %845, %752
  br i1 %846, label %823, label %847

847:                                              ; preds = %823, %789, %782, %775, %748
  %848 = phi i64 [ 0, %748 ], [ %763, %782 ], [ %763, %775 ], [ %763, %789 ], [ %763, %823 ]
  %849 = phi i32 [ 0, %748 ], [ %764, %782 ], [ %764, %775 ], [ %764, %789 ], [ %764, %823 ]
  %850 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %26, align 8
  %851 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %850, i64 0, i32 51
  %852 = load i32, i32* %851, align 8
  %853 = and i32 %852, 2
  %854 = icmp ne i32 %853, 0
  %855 = load i64, i64* %40, align 8
  %856 = and i64 %855, 2
  %857 = icmp eq i64 %856, 0
  %858 = and i1 %854, %857
  br i1 %858, label %859, label %881

859:                                              ; preds = %847
  %860 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %619, i64 0, i32 0
  %861 = load i64, i64* %860, align 8
  %862 = shl i64 %861, 32
  %863 = ashr exact i64 %862, 32
  %864 = sext i32 %849 to i64
  %865 = mul nsw i64 %863, %864
  %866 = ashr i64 %865, 63
  %867 = add nsw i64 %865, 32768
  %868 = add nsw i64 %867, %866
  %869 = shl i64 %868, 16
  %870 = ashr i64 %869, 32
  store i64 %870, i64* %860, align 8
  %871 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %626, i64 0, i32 0
  %872 = load i64, i64* %871, align 8
  %873 = shl i64 %872, 32
  %874 = ashr exact i64 %873, 32
  %875 = mul nsw i64 %874, %864
  %876 = ashr i64 %875, 63
  %877 = add nsw i64 %875, 32768
  %878 = add nsw i64 %877, %876
  %879 = shl i64 %878, 16
  %880 = ashr i64 %879, 32
  store i64 %880, i64* %871, align 8
  br label %888

881:                                              ; preds = %847
  %882 = load %struct.FT_Vector_*, %struct.FT_Vector_** %615, align 8
  %883 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %882, i64 %617
  %884 = bitcast %struct.FT_Vector_* %883 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %621, i8* align 8 %884, i64 16, i1 false) #11
  %885 = load %struct.FT_Vector_*, %struct.FT_Vector_** %615, align 8
  %886 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %885, i64 %624
  %887 = bitcast %struct.FT_Vector_* %886 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %628, i8* align 8 %887, i64 16, i1 false) #11
  br label %888

888:                                              ; preds = %881, %859
  %889 = load i32, i32* %851, align 8
  %890 = and i32 %889, 16
  %891 = icmp ne i32 %890, 0
  %892 = and i64 %855, 2
  %893 = icmp eq i64 %892, 0
  %894 = and i1 %891, %893
  br i1 %894, label %895, label %937

895:                                              ; preds = %888
  %896 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %633, i64 0, i32 0
  %897 = load i64, i64* %896, align 8
  %898 = shl i64 %897, 32
  %899 = ashr exact i64 %898, 32
  %900 = sext i32 %849 to i64
  %901 = mul nsw i64 %899, %900
  %902 = ashr i64 %901, 63
  %903 = add nsw i64 %901, 32768
  %904 = add nsw i64 %903, %902
  %905 = shl i64 %904, 16
  %906 = ashr i64 %905, 32
  store i64 %906, i64* %896, align 8
  %907 = load i64, i64* %572, align 8
  %908 = shl i64 %907, 32
  %909 = ashr exact i64 %908, 32
  %910 = shl i64 %848, 32
  %911 = ashr exact i64 %910, 32
  %912 = mul nsw i64 %909, %911
  %913 = ashr i64 %912, 63
  %914 = add nsw i64 %912, 32768
  %915 = add nsw i64 %914, %913
  %916 = shl i64 %915, 16
  %917 = ashr i64 %916, 32
  store i64 %917, i64* %572, align 8
  %918 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %640, i64 0, i32 0
  %919 = load i64, i64* %918, align 8
  %920 = shl i64 %919, 32
  %921 = ashr exact i64 %920, 32
  %922 = mul nsw i64 %921, %900
  %923 = ashr i64 %922, 63
  %924 = add nsw i64 %922, 32768
  %925 = add nsw i64 %924, %923
  %926 = shl i64 %925, 16
  %927 = ashr i64 %926, 32
  store i64 %927, i64* %918, align 8
  %928 = load i64, i64* %583, align 8
  %929 = shl i64 %928, 32
  %930 = ashr exact i64 %929, 32
  %931 = mul nsw i64 %930, %911
  %932 = ashr i64 %931, 63
  %933 = add nsw i64 %931, 32768
  %934 = add nsw i64 %933, %932
  %935 = shl i64 %934, 16
  %936 = ashr i64 %935, 32
  store i64 %936, i64* %583, align 8
  br label %944

937:                                              ; preds = %888
  %938 = load %struct.FT_Vector_*, %struct.FT_Vector_** %615, align 8
  %939 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %938, i64 %631
  %940 = bitcast %struct.FT_Vector_* %939 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %635, i8* align 8 %940, i64 16, i1 false) #11
  %941 = load %struct.FT_Vector_*, %struct.FT_Vector_** %615, align 8
  %942 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %941, i64 %638
  %943 = bitcast %struct.FT_Vector_* %942 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %642, i8* align 8 %943, i64 16, i1 false) #11
  br label %944

944:                                              ; preds = %937, %895
  br i1 %893, label %945, label %950

945:                                              ; preds = %944
  %946 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 3
  %947 = load i16, i16* %946, align 4
  %948 = add i16 %947, 4
  store i16 %948, i16* %946, align 4
  %949 = call fastcc i32 @TT_Hint_Glyph(%struct.TT_LoaderRec_* %0, i8 zeroext 0) #11
  store i32 %949, i32* %6, align 4
  br label %950

950:                                              ; preds = %663, %704, %944, %945
  %951 = phi i8* [ %665, %663 ], [ %665, %704 ], [ %707, %945 ], [ %707, %944 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %609, i8* %951) #11
  %952 = load i32, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %606) #11
  store i32 %952, i32* %15, align 4
  %953 = icmp eq i32 %952, 0
  br i1 %953, label %954, label %1728

954:                                              ; preds = %950
  call void @FT_GlyphLoader_Add(%struct.FT_GlyphLoaderRec_* %29) #11
  br label %1728

955:                                              ; preds = %594
  %956 = icmp slt i16 %595, 0
  br i1 %956, label %957, label %1724

957:                                              ; preds = %955
  %958 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %27, i64 0, i32 0, i32 25
  %959 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %958, align 8
  store i16 -1, i16* %217, align 4
  %960 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 28
  %961 = icmp eq %struct.FT_ListRec_* %960, null
  br i1 %961, label %981, label %962

962:                                              ; preds = %957
  %963 = getelementptr inbounds %struct.FT_ListRec_, %struct.FT_ListRec_* %960, i64 0, i32 0
  %964 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %963, align 8
  %965 = icmp eq %struct.FT_ListNodeRec_* %964, null
  br i1 %965, label %981, label %966

966:                                              ; preds = %962, %970
  %967 = phi %struct.FT_ListNodeRec_* [ %973, %970 ], [ %964, %962 ]
  %968 = phi i32 [ %971, %970 ], [ %2, %962 ]
  %969 = icmp eq i32 %968, 0
  br i1 %969, label %975, label %970

970:                                              ; preds = %966
  %971 = add i32 %968, -1
  %972 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %967, i64 0, i32 1
  %973 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %972, align 8
  %974 = icmp eq %struct.FT_ListNodeRec_* %973, null
  br i1 %974, label %981, label %966

975:                                              ; preds = %966, %975
  %976 = phi %struct.FT_ListNodeRec_* [ %979, %975 ], [ %967, %966 ]
  %977 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %976, i64 0, i32 2
  store i8* inttoptr (i64 -1 to i8*), i8** %977, align 8
  %978 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %976, i64 0, i32 1
  %979 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %978, align 8
  %980 = icmp eq %struct.FT_ListNodeRec_* %979, null
  br i1 %980, label %981, label %975

981:                                              ; preds = %970, %975, %962, %957
  %982 = phi i1 [ true, %957 ], [ true, %962 ], [ false, %975 ], [ true, %970 ]
  %983 = phi %struct.FT_ListNodeRec_* [ null, %957 ], [ null, %962 ], [ %967, %975 ], [ null, %970 ]
  %984 = zext i32 %1 to i64
  %985 = inttoptr i64 %984 to i8*
  %986 = call %struct.FT_ListNodeRec_* @FT_List_Find(%struct.FT_ListRec_* %960, i8* %985) #11
  %987 = icmp eq %struct.FT_ListNodeRec_* %986, null
  br i1 %987, label %989, label %988

988:                                              ; preds = %981
  store i32 21, i32* %15, align 4
  br label %1724

989:                                              ; preds = %981
  br i1 %982, label %992, label %990

990:                                              ; preds = %989
  %991 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %983, i64 0, i32 2
  store i8* %985, i8** %991, align 8
  br label %1000

992:                                              ; preds = %989
  %993 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %959, i64 24, i32* nonnull %15) #11
  %994 = load i32, i32* %15, align 4
  %995 = icmp eq i32 %994, 0
  br i1 %995, label %996, label %1724

996:                                              ; preds = %992
  %997 = bitcast i8* %993 to %struct.FT_ListNodeRec_*
  %998 = getelementptr inbounds i8, i8* %993, i64 16
  %999 = bitcast i8* %998 to i8**
  store i8* %985, i8** %999, align 8
  call void @FT_List_Add(%struct.FT_ListRec_* %960, %struct.FT_ListNodeRec_* %997) #11
  br label %1000

1000:                                             ; preds = %990, %996
  %1001 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %29, i64 0, i32 5, i32 0, i32 1
  %1002 = load i16, i16* %1001, align 2
  %1003 = sext i16 %1002 to i32
  %1004 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %29, i64 0, i32 5, i32 0, i32 0
  %1005 = load i16, i16* %1004, align 8
  %1006 = sext i16 %1005 to i64
  %1007 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %27, i64 0, i32 21
  %1008 = load i32 (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)** %1007, align 8
  %1009 = call i32 %1008(%struct.TT_LoaderRec_* %0) #11
  store i32 %1009, i32* %15, align 4
  %1010 = icmp eq i32 %1009, 0
  br i1 %1010, label %1011, label %1724

1011:                                             ; preds = %1000
  %1012 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 20
  %1013 = load i64, i64* %1012, align 8
  %1014 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %27, i64 0, i32 18
  %1015 = load void (%struct.TT_LoaderRec_*)*, void (%struct.TT_LoaderRec_*)** %1014, align 8
  call void %1015(%struct.TT_LoaderRec_* %0) #11
  %1016 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %27, i64 0, i32 0, i32 1
  %1017 = load i64, i64* %1016, align 8
  %1018 = and i64 %1017, 2147418112
  %1019 = icmp eq i64 %1018, 0
  br i1 %1019, label %1020, label %1025

1020:                                             ; preds = %1011
  %1021 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %27, i64 0, i32 0, i32 2
  %1022 = load i64, i64* %1021, align 8
  %1023 = trunc i64 %1022 to i16
  %1024 = icmp slt i16 %1023, 0
  br i1 %1024, label %1025, label %1221

1025:                                             ; preds = %1011, %1020
  %1026 = bitcast %struct.FT_Outline_* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1026) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1026, i8 -86, i64 40, i1 false)
  %1027 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %29, i64 0, i32 6, i32 3
  %1028 = load i32, i32* %1027, align 8
  %1029 = trunc i32 %1028 to i16
  %1030 = add i16 %1029, 4
  %1031 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %23, i64 0, i32 1
  store i16 %1030, i16* %1031, align 2
  %1032 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %23, i64 0, i32 0
  store i16 %1030, i16* %1032, align 8
  %1033 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %23, i64 0, i32 2
  %1034 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %23, i64 0, i32 3
  %1035 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %23, i64 0, i32 4
  %1036 = sext i16 %1030 to i64
  %1037 = bitcast %struct.FT_Vector_** %1033 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1037, i8 0, i64 24, i1 false)
  %1038 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %959, i64 16, i64 0, i64 %1036, i8* null, i32* nonnull %15) #11
  %1039 = bitcast i8* %1038 to %struct.FT_Vector_*
  %1040 = load i32, i32* %15, align 4
  %1041 = icmp eq i32 %1040, 0
  br i1 %1041, label %1042, label %1212

1042:                                             ; preds = %1025
  %1043 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %959, i64 1, i64 0, i64 %1036, i8* null, i32* nonnull %15) #11
  %1044 = load i32, i32* %15, align 4
  %1045 = icmp eq i32 %1044, 0
  br i1 %1045, label %1046, label %1212

1046:                                             ; preds = %1042
  %1047 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %959, i64 2, i64 0, i64 %1036, i8* null, i32* nonnull %15) #11
  %1048 = bitcast i8* %1047 to i16*
  %1049 = load i32, i32* %15, align 4
  %1050 = icmp eq i32 %1049, 0
  br i1 %1050, label %1051, label %1212

1051:                                             ; preds = %1046
  %1052 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %959, i64 16, i64 0, i64 %1036, i8* null, i32* nonnull %15) #11
  %1053 = bitcast i8* %1052 to %struct.FT_Vector_*
  %1054 = load i32, i32* %15, align 4
  %1055 = icmp eq i32 %1054, 0
  br i1 %1055, label %1056, label %1212

1056:                                             ; preds = %1051
  %1057 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %29, i64 0, i32 6, i32 4
  %1058 = shl i32 %1028, 16
  %1059 = ashr exact i32 %1058, 16
  %1060 = icmp sgt i32 %1058, 0
  br i1 %1060, label %1061, label %1081

1061:                                             ; preds = %1056
  %1062 = load %struct.FT_SubGlyphRec_*, %struct.FT_SubGlyphRec_** %1057, align 8
  br label %1063

1063:                                             ; preds = %1061, %1063
  %1064 = phi %struct.FT_SubGlyphRec_* [ %1078, %1063 ], [ %1062, %1061 ]
  %1065 = phi i16 [ %1077, %1063 ], [ 0, %1061 ]
  %1066 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1064, i64 0, i32 2
  %1067 = load i32, i32* %1066, align 8
  %1068 = sext i32 %1067 to i64
  %1069 = sext i16 %1065 to i64
  %1070 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1069, i32 0
  store i64 %1068, i64* %1070, align 8
  %1071 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1064, i64 0, i32 3
  %1072 = load i32, i32* %1071, align 4
  %1073 = sext i32 %1072 to i64
  %1074 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1069, i32 1
  store i64 %1073, i64* %1074, align 8
  %1075 = getelementptr inbounds i8, i8* %1043, i64 %1069
  store i8 1, i8* %1075, align 1
  %1076 = getelementptr inbounds i16, i16* %1048, i64 %1069
  store i16 %1065, i16* %1076, align 2
  %1077 = add i16 %1065, 1
  %1078 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1064, i64 1
  %1079 = sext i16 %1077 to i32
  %1080 = icmp sgt i32 %1059, %1079
  br i1 %1080, label %1063, label %1081

1081:                                             ; preds = %1063, %1056
  %1082 = phi i16 [ 0, %1056 ], [ %1077, %1063 ]
  %1083 = load i64, i64* %553, align 8
  %1084 = sext i16 %1082 to i64
  %1085 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1084, i32 0
  store i64 %1083, i64* %1085, align 8
  %1086 = load i64, i64* %554, align 8
  %1087 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1084, i32 1
  store i64 %1086, i64* %1087, align 8
  %1088 = getelementptr inbounds i8, i8* %1043, i64 %1084
  store i8 1, i8* %1088, align 1
  %1089 = getelementptr inbounds i16, i16* %1048, i64 %1084
  store i16 %1082, i16* %1089, align 2
  %1090 = add i16 %1082, 1
  %1091 = load i64, i64* %559, align 8
  %1092 = sext i16 %1090 to i64
  %1093 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1092, i32 0
  store i64 %1091, i64* %1093, align 8
  %1094 = load i64, i64* %560, align 8
  %1095 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1092, i32 1
  store i64 %1094, i64* %1095, align 8
  %1096 = getelementptr inbounds i8, i8* %1043, i64 %1092
  store i8 1, i8* %1096, align 1
  %1097 = getelementptr inbounds i16, i16* %1048, i64 %1092
  store i16 %1090, i16* %1097, align 2
  %1098 = add i16 %1082, 2
  %1099 = load i64, i64* %566, align 8
  %1100 = sext i16 %1098 to i64
  %1101 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1100, i32 0
  store i64 %1099, i64* %1101, align 8
  %1102 = load i64, i64* %572, align 8
  %1103 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1100, i32 1
  store i64 %1102, i64* %1103, align 8
  %1104 = getelementptr inbounds i8, i8* %1043, i64 %1100
  store i8 1, i8* %1104, align 1
  %1105 = getelementptr inbounds i16, i16* %1048, i64 %1100
  store i16 %1098, i16* %1105, align 2
  %1106 = add i16 %1082, 3
  %1107 = load i64, i64* %578, align 8
  %1108 = sext i16 %1106 to i64
  %1109 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1108, i32 0
  store i64 %1107, i64* %1109, align 8
  %1110 = load i64, i64* %583, align 8
  %1111 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1108, i32 1
  store i64 %1110, i64* %1111, align 8
  %1112 = getelementptr inbounds i8, i8* %1043, i64 %1108
  store i8 1, i8* %1112, align 1
  %1113 = getelementptr inbounds i16, i16* %1048, i64 %1108
  store i16 %1106, i16* %1113, align 2
  %1114 = bitcast %struct.FT_Vector_** %1033 to i8**
  store i8* %1038, i8** %1114, align 8
  store i8* %1043, i8** %1034, align 8
  %1115 = bitcast i16** %1035 to i8**
  store i8* %1047, i8** %1115, align 8
  %1116 = sext i16 %1030 to i32
  %1117 = call fastcc i32 @TT_Vary_Apply_Glyph_Deltas(%struct.TT_FaceRec_* %27, i32 %1, %struct.FT_Outline_* nonnull %23, %struct.FT_Vector_* %1053, i32 %1116)
  store i32 %1117, i32* %15, align 4
  %1118 = icmp eq i32 %1117, 0
  br i1 %1118, label %1119, label %1212

1119:                                             ; preds = %1081
  br i1 %1060, label %1120, label %1148

1120:                                             ; preds = %1119
  %1121 = load %struct.FT_SubGlyphRec_*, %struct.FT_SubGlyphRec_** %1057, align 8
  br label %1122

1122:                                             ; preds = %1120, %1143
  %1123 = phi %struct.FT_SubGlyphRec_* [ %1145, %1143 ], [ %1121, %1120 ]
  %1124 = phi i16 [ %1144, %1143 ], [ 0, %1120 ]
  %1125 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1123, i64 0, i32 1
  %1126 = load i16, i16* %1125, align 4
  %1127 = and i16 %1126, 2
  %1128 = icmp eq i16 %1127, 0
  br i1 %1128, label %1143, label %1129

1129:                                             ; preds = %1122
  %1130 = sext i16 %1124 to i64
  %1131 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1130, i32 0
  %1132 = load i64, i64* %1131, align 8
  %1133 = trunc i64 %1132 to i32
  %1134 = shl i32 %1133, 16
  %1135 = ashr exact i32 %1134, 16
  %1136 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1123, i64 0, i32 2
  store i32 %1135, i32* %1136, align 8
  %1137 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1130, i32 1
  %1138 = load i64, i64* %1137, align 8
  %1139 = trunc i64 %1138 to i32
  %1140 = shl i32 %1139, 16
  %1141 = ashr exact i32 %1140, 16
  %1142 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1123, i64 0, i32 3
  store i32 %1141, i32* %1142, align 4
  br label %1143

1143:                                             ; preds = %1122, %1129
  %1144 = add i16 %1124, 1
  %1145 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1123, i64 1
  %1146 = sext i16 %1144 to i32
  %1147 = icmp sgt i32 %1059, %1146
  br i1 %1147, label %1122, label %1148

1148:                                             ; preds = %1143, %1119
  %1149 = phi i16 [ 0, %1119 ], [ %1144, %1143 ]
  %1150 = phi i32 [ 0, %1119 ], [ %1146, %1143 ]
  %1151 = sext i16 %1149 to i64
  %1152 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1151, i32 0
  %1153 = load i64, i64* %1152, align 8
  store i64 %1153, i64* %553, align 8
  %1154 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1151, i32 1
  %1155 = load i64, i64* %1154, align 8
  store i64 %1155, i64* %554, align 8
  %1156 = add nsw i32 %1150, 1
  %1157 = sext i32 %1156 to i64
  %1158 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1157, i32 0
  %1159 = load i64, i64* %1158, align 8
  store i64 %1159, i64* %559, align 8
  %1160 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1157, i32 1
  %1161 = load i64, i64* %1160, align 8
  store i64 %1161, i64* %560, align 8
  %1162 = add nsw i32 %1150, 2
  %1163 = sext i32 %1162 to i64
  %1164 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1163, i32 0
  %1165 = load i64, i64* %1164, align 8
  store i64 %1165, i64* %566, align 8
  %1166 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1163, i32 1
  %1167 = load i64, i64* %1166, align 8
  store i64 %1167, i64* %572, align 8
  %1168 = add nsw i32 %1150, 3
  %1169 = sext i32 %1168 to i64
  %1170 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1169, i32 0
  %1171 = load i64, i64* %1170, align 8
  store i64 %1171, i64* %578, align 8
  %1172 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1039, i64 %1169, i32 1
  %1173 = load i64, i64* %1172, align 8
  store i64 %1173, i64* %583, align 8
  %1174 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %27, i64 0, i32 51
  %1175 = load i32, i32* %1174, align 8
  %1176 = and i32 %1175, 2
  %1177 = icmp eq i32 %1176, 0
  br i1 %1177, label %1178, label %1194

1178:                                             ; preds = %1148
  %1179 = add nsw i32 %1116, -3
  %1180 = sext i32 %1179 to i64
  %1181 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1053, i64 %1180, i32 0
  %1182 = load i64, i64* %1181, align 8
  %1183 = add nsw i32 %1116, -4
  %1184 = sext i32 %1183 to i64
  %1185 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1053, i64 %1184, i32 0
  %1186 = load i64, i64* %1185, align 8
  %1187 = add i64 %1182, 32
  %1188 = sub i64 %1187, %1186
  %1189 = and i64 %1188, -64
  %1190 = sdiv i64 %1189, 64
  %1191 = trunc i64 %1190 to i32
  %1192 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 12
  store i32 %1191, i32* %1192, align 8
  %1193 = load i32, i32* %1174, align 8
  br label %1194

1194:                                             ; preds = %1148, %1178
  %1195 = phi i32 [ %1175, %1148 ], [ %1193, %1178 ]
  %1196 = and i32 %1195, 16
  %1197 = icmp eq i32 %1196, 0
  br i1 %1197, label %1198, label %1212

1198:                                             ; preds = %1194
  %1199 = add nsw i32 %1116, -1
  %1200 = sext i32 %1199 to i64
  %1201 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1053, i64 %1200, i32 0
  %1202 = load i64, i64* %1201, align 8
  %1203 = add nsw i32 %1116, -2
  %1204 = sext i32 %1203 to i64
  %1205 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1053, i64 %1204, i32 0
  %1206 = load i64, i64* %1205, align 8
  %1207 = add i64 %1202, 32
  %1208 = sub i64 %1207, %1206
  %1209 = and i64 %1208, -64
  %1210 = sdiv i64 %1209, 64
  %1211 = trunc i64 %1210 to i32
  store i32 %1211, i32* %579, align 4
  br label %1212

1212:                                             ; preds = %1194, %1081, %1051, %1046, %1042, %1025, %1198
  %1213 = phi i8* [ null, %1025 ], [ null, %1042 ], [ null, %1046 ], [ %1052, %1051 ], [ %1052, %1081 ], [ %1052, %1194 ], [ %1052, %1198 ]
  %1214 = bitcast %struct.FT_Vector_** %1033 to i8**
  %1215 = load i8*, i8** %1214, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %959, i8* %1215) #11
  store %struct.FT_Vector_* null, %struct.FT_Vector_** %1033, align 8
  %1216 = load i8*, i8** %1034, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %959, i8* %1216) #11
  store i8* null, i8** %1034, align 8
  %1217 = bitcast i16** %1035 to i8**
  %1218 = load i8*, i8** %1217, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %959, i8* %1218) #11
  call void @ft_mem_free(%struct.FT_MemoryRec_* %959, i8* %1213) #11
  %1219 = load i32, i32* %15, align 4
  %1220 = icmp eq i32 %1219, 0
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1026) #11
  br i1 %1220, label %1221, label %1728

1221:                                             ; preds = %1212, %1020
  %1222 = load i64, i64* %40, align 8
  %1223 = and i64 %1222, 1
  %1224 = icmp eq i64 %1223, 0
  br i1 %1224, label %1225, label %1280

1225:                                             ; preds = %1221
  %1226 = load i64, i64* %553, align 8
  %1227 = shl i64 %1226, 32
  %1228 = ashr exact i64 %1227, 32
  %1229 = mul nsw i64 %1228, %58
  %1230 = ashr i64 %1229, 63
  %1231 = add nsw i64 %1229, 32768
  %1232 = add nsw i64 %1231, %1230
  %1233 = shl i64 %1232, 16
  %1234 = ashr i64 %1233, 32
  store i64 %1234, i64* %553, align 8
  %1235 = load i64, i64* %559, align 8
  %1236 = shl i64 %1235, 32
  %1237 = ashr exact i64 %1236, 32
  %1238 = mul nsw i64 %1237, %58
  %1239 = ashr i64 %1238, 63
  %1240 = add nsw i64 %1238, 32768
  %1241 = add nsw i64 %1240, %1239
  %1242 = shl i64 %1241, 16
  %1243 = ashr i64 %1242, 32
  store i64 %1243, i64* %559, align 8
  %1244 = load i64, i64* %566, align 8
  %1245 = shl i64 %1244, 32
  %1246 = ashr exact i64 %1245, 32
  %1247 = mul nsw i64 %1246, %58
  %1248 = ashr i64 %1247, 63
  %1249 = add nsw i64 %1247, 32768
  %1250 = add nsw i64 %1249, %1248
  %1251 = shl i64 %1250, 16
  %1252 = ashr i64 %1251, 32
  store i64 %1252, i64* %566, align 8
  %1253 = load i64, i64* %572, align 8
  %1254 = shl i64 %1253, 32
  %1255 = ashr exact i64 %1254, 32
  %1256 = mul nsw i64 %1255, %59
  %1257 = ashr i64 %1256, 63
  %1258 = add nsw i64 %1256, 32768
  %1259 = add nsw i64 %1258, %1257
  %1260 = shl i64 %1259, 16
  %1261 = ashr i64 %1260, 32
  store i64 %1261, i64* %572, align 8
  %1262 = load i64, i64* %578, align 8
  %1263 = shl i64 %1262, 32
  %1264 = ashr exact i64 %1263, 32
  %1265 = mul nsw i64 %1264, %58
  %1266 = ashr i64 %1265, 63
  %1267 = add nsw i64 %1265, 32768
  %1268 = add nsw i64 %1267, %1266
  %1269 = shl i64 %1268, 16
  %1270 = ashr i64 %1269, 32
  store i64 %1270, i64* %578, align 8
  %1271 = load i64, i64* %583, align 8
  %1272 = shl i64 %1271, 32
  %1273 = ashr exact i64 %1272, 32
  %1274 = mul nsw i64 %1273, %59
  %1275 = ashr i64 %1274, 63
  %1276 = add nsw i64 %1274, 32768
  %1277 = add nsw i64 %1276, %1275
  %1278 = shl i64 %1277, 16
  %1279 = ashr i64 %1278, 32
  store i64 %1279, i64* %583, align 8
  br label %1280

1280:                                             ; preds = %1225, %1221
  %1281 = and i64 %1222, 1024
  %1282 = icmp eq i64 %1281, 0
  br i1 %1282, label %1287, label %1283

1283:                                             ; preds = %1280
  call void @FT_GlyphLoader_Add(%struct.FT_GlyphLoaderRec_* %29) #11
  %1284 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 2
  %1285 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %1284, align 8
  %1286 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1285, i64 0, i32 9
  store i32 1668246896, i32* %1286, align 8
  br label %1728

1287:                                             ; preds = %1280
  %1288 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %29, i64 0, i32 6, i32 3
  %1289 = load i32, i32* %1288, align 8
  %1290 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %29, i64 0, i32 5, i32 3
  %1291 = load i32, i32* %1290, align 8
  %1292 = bitcast %struct.FT_StreamRec_** %129 to i64*
  %1293 = load i64, i64* %1292, align 8
  %1294 = load i32, i32* %88, align 8
  call void @FT_GlyphLoader_Add(%struct.FT_GlyphLoaderRec_* %29) #11
  %1295 = icmp eq i32 %1289, 0
  br i1 %1295, label %1494, label %1296

1296:                                             ; preds = %1287
  %1297 = bitcast [4 x %struct.FT_Vector_]* %24 to i8*
  %1298 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %29, i64 0, i32 5, i32 4
  %1299 = zext i32 %1291 to i64
  %1300 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 14
  %1301 = bitcast %struct.FT_Vector_* %1300 to i8*
  %1302 = getelementptr inbounds [4 x %struct.FT_Vector_], [4 x %struct.FT_Vector_]* %24, i64 0, i64 1
  %1303 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 15
  %1304 = bitcast %struct.FT_Vector_* %1302 to i8*
  %1305 = bitcast %struct.FT_Vector_* %1303 to i8*
  %1306 = getelementptr inbounds [4 x %struct.FT_Vector_], [4 x %struct.FT_Vector_]* %24, i64 0, i64 2
  %1307 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 24
  %1308 = bitcast %struct.FT_Vector_* %1306 to i8*
  %1309 = bitcast %struct.FT_Vector_* %1307 to i8*
  %1310 = getelementptr inbounds [4 x %struct.FT_Vector_], [4 x %struct.FT_Vector_]* %24, i64 0, i64 3
  %1311 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 25
  %1312 = bitcast %struct.FT_Vector_* %1310 to i8*
  %1313 = bitcast %struct.FT_Vector_* %1311 to i8*
  %1314 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 12
  %1315 = add i32 %2, 1
  %1316 = bitcast %struct.FT_Outline_* %5 to i8*
  %1317 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %5, i64 0, i32 2
  %1318 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %5, i64 0, i32 1
  %1319 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 1
  %1320 = zext i32 %1289 to i64
  br label %1321

1321:                                             ; preds = %1489, %1296
  %1322 = phi i64 [ 0, %1296 ], [ %1490, %1489 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %1297)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1297, i8 -86, i64 64, i1 false)
  %1323 = load %struct.FT_SubGlyphRec_*, %struct.FT_SubGlyphRec_** %1298, align 8
  %1324 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1323, i64 %1299
  %1325 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1324, i64 %1322
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %1297, i8* align 8 %1301, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %1304, i8* align 8 %1305, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %1308, i8* align 8 %1309, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %1312, i8* align 8 %1313, i64 16, i1 false)
  %1326 = load i32, i32* %1314, align 8
  %1327 = load i32, i32* %579, align 4
  %1328 = load i16, i16* %1001, align 2
  %1329 = sext i16 %1328 to i32
  %1330 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1325, i64 0, i32 0
  %1331 = load i32, i32* %1330, align 8
  %1332 = call fastcc i32 @load_truetype_glyph(%struct.TT_LoaderRec_* %0, i32 %1331, i32 %1315, i8 zeroext 0)
  store i32 %1332, i32* %15, align 4
  %1333 = icmp eq i32 %1332, 0
  br i1 %1333, label %1334, label %1488

1334:                                             ; preds = %1321
  %1335 = load %struct.FT_SubGlyphRec_*, %struct.FT_SubGlyphRec_** %1298, align 8
  %1336 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1335, i64 %1299
  %1337 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1336, i64 %1322
  %1338 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1337, i64 0, i32 1
  %1339 = load i16, i16* %1338, align 4
  %1340 = and i16 %1339, 512
  %1341 = icmp eq i16 %1340, 0
  br i1 %1341, label %1342, label %1343

1342:                                             ; preds = %1334
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1301, i8* nonnull align 16 %1297, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1305, i8* align 16 %1304, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1309, i8* align 16 %1308, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1313, i8* align 16 %1312, i64 16, i1 false)
  store i32 %1326, i32* %1314, align 8
  store i32 %1327, i32* %579, align 4
  br label %1343

1343:                                             ; preds = %1334, %1342
  %1344 = load i16, i16* %1001, align 2
  %1345 = icmp eq i16 %1344, %1328
  br i1 %1345, label %1489, label %1346

1346:                                             ; preds = %1343
  %1347 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1316) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1316, i8 -86, i64 40, i1 false) #11
  %1348 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %1347, i64 0, i32 5, i32 0, i32 2
  %1349 = load %struct.FT_Vector_*, %struct.FT_Vector_** %1348, align 8
  %1350 = zext i32 %1329 to i64
  %1351 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1349, i64 %1350
  store %struct.FT_Vector_* %1351, %struct.FT_Vector_** %1317, align 8
  %1352 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %1347, i64 0, i32 5, i32 0, i32 1
  %1353 = load i16, i16* %1352, align 2
  %1354 = sub i16 %1353, %1328
  store i16 %1354, i16* %1318, align 2
  %1355 = load i16, i16* %1338, align 4
  %1356 = and i16 %1355, 200
  %1357 = icmp ne i16 %1356, 0
  br i1 %1357, label %1358, label %1361

1358:                                             ; preds = %1346
  %1359 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1337, i64 0, i32 4
  call void @FT_Outline_Transform(%struct.FT_Outline_* nonnull %5, %struct.FT_Matrix_* %1359) #11
  %1360 = load i16, i16* %1338, align 4
  br label %1361

1361:                                             ; preds = %1358, %1346
  %1362 = phi i16 [ %1360, %1358 ], [ %1355, %1346 ]
  %1363 = zext i16 %1362 to i32
  %1364 = and i32 %1363, 2
  %1365 = icmp eq i32 %1364, 0
  %1366 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1337, i64 0, i32 2
  %1367 = load i32, i32* %1366, align 8
  br i1 %1365, label %1368, label %1392

1368:                                             ; preds = %1361
  %1369 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1337, i64 0, i32 3
  %1370 = load i32, i32* %1369, align 4
  %1371 = add i32 %1367, %1003
  %1372 = add i32 %1370, %1329
  %1373 = icmp ult i32 %1371, %1329
  br i1 %1373, label %1374, label %1486

1374:                                             ; preds = %1368
  %1375 = load i16, i16* %1352, align 2
  %1376 = sext i16 %1375 to i32
  %1377 = icmp ult i32 %1372, %1376
  br i1 %1377, label %1378, label %1486

1378:                                             ; preds = %1374
  %1379 = load %struct.FT_Vector_*, %struct.FT_Vector_** %1348, align 8
  %1380 = zext i32 %1371 to i64
  %1381 = zext i32 %1372 to i64
  %1382 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1379, i64 %1380, i32 0
  %1383 = load i64, i64* %1382, align 8
  %1384 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1379, i64 %1381, i32 0
  %1385 = load i64, i64* %1384, align 8
  %1386 = sub nsw i64 %1383, %1385
  %1387 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1379, i64 %1380, i32 1
  %1388 = load i64, i64* %1387, align 8
  %1389 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1379, i64 %1381, i32 1
  %1390 = load i64, i64* %1389, align 8
  %1391 = sub nsw i64 %1388, %1390
  br label %1480

1392:                                             ; preds = %1361
  %1393 = sext i32 %1367 to i64
  %1394 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1337, i64 0, i32 3
  %1395 = load i32, i32* %1394, align 4
  %1396 = sext i32 %1395 to i64
  %1397 = or i32 %1395, %1367
  %1398 = icmp eq i32 %1397, 0
  br i1 %1398, label %1487, label %1399

1399:                                             ; preds = %1392
  %1400 = xor i1 %1357, true
  %1401 = and i32 %1363, 2048
  %1402 = icmp eq i32 %1401, 0
  %1403 = or i1 %1402, %1400
  br i1 %1403, label %1431, label %1404

1404:                                             ; preds = %1399
  %1405 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1337, i64 0, i32 4, i32 0
  %1406 = load i64, i64* %1405, align 8
  %1407 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1337, i64 0, i32 4, i32 1
  %1408 = load i64, i64* %1407, align 8
  %1409 = call i64 @FT_Hypot(i64 %1406, i64 %1408) #11
  %1410 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1337, i64 0, i32 4, i32 3
  %1411 = load i64, i64* %1410, align 8
  %1412 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1337, i64 0, i32 4, i32 2
  %1413 = load i64, i64* %1412, align 8
  %1414 = call i64 @FT_Hypot(i64 %1411, i64 %1413) #11
  %1415 = shl i64 %1409, 32
  %1416 = ashr exact i64 %1415, 32
  %1417 = mul nsw i64 %1416, %1393
  %1418 = ashr i64 %1417, 63
  %1419 = add nsw i64 %1417, 32768
  %1420 = add nsw i64 %1419, %1418
  %1421 = shl i64 %1420, 16
  %1422 = ashr i64 %1421, 32
  %1423 = shl i64 %1414, 32
  %1424 = ashr exact i64 %1423, 32
  %1425 = mul nsw i64 %1424, %1396
  %1426 = ashr i64 %1425, 63
  %1427 = add nsw i64 %1425, 32768
  %1428 = add nsw i64 %1427, %1426
  %1429 = shl i64 %1428, 16
  %1430 = ashr i64 %1429, 32
  br label %1431

1431:                                             ; preds = %1404, %1399
  %1432 = phi i64 [ %1430, %1404 ], [ %1396, %1399 ]
  %1433 = phi i64 [ %1422, %1404 ], [ %1393, %1399 ]
  %1434 = load i64, i64* %40, align 8
  %1435 = and i64 %1434, 1
  %1436 = icmp eq i64 %1435, 0
  br i1 %1436, label %1437, label %1480

1437:                                             ; preds = %1431
  %1438 = load %struct.TT_SizeRec_*, %struct.TT_SizeRec_** %1319, align 8
  %1439 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %1438, i64 0, i32 1
  %1440 = load %struct.FT_Size_Metrics_*, %struct.FT_Size_Metrics_** %1439, align 8
  %1441 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %1440, i64 0, i32 2
  %1442 = load i64, i64* %1441, align 8
  %1443 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %1440, i64 0, i32 3
  %1444 = load i64, i64* %1443, align 8
  %1445 = shl i64 %1442, 32
  %1446 = ashr exact i64 %1445, 32
  %1447 = mul nsw i64 %1446, %1433
  %1448 = ashr i64 %1447, 63
  %1449 = add nsw i64 %1447, 32768
  %1450 = add nsw i64 %1449, %1448
  %1451 = shl i64 %1450, 16
  %1452 = ashr i64 %1451, 32
  %1453 = shl i64 %1444, 32
  %1454 = ashr exact i64 %1453, 32
  %1455 = mul nsw i64 %1454, %1432
  %1456 = ashr i64 %1455, 63
  %1457 = add nsw i64 %1455, 32768
  %1458 = add nsw i64 %1457, %1456
  %1459 = shl i64 %1458, 16
  %1460 = ashr i64 %1459, 32
  %1461 = load i16, i16* %1338, align 4
  %1462 = and i16 %1461, 4
  %1463 = icmp ne i16 %1462, 0
  %1464 = and i64 %1434, 2
  %1465 = icmp eq i64 %1464, 0
  %1466 = and i1 %1465, %1463
  br i1 %1466, label %1467, label %1480

1467:                                             ; preds = %1437
  %1468 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %525, align 8
  %1469 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1468, i64 0, i32 24
  %1470 = bitcast %struct.FT_DriverRec_** %1469 to %struct.TT_DriverRec_**
  %1471 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %1470, align 8
  %1472 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %1471, i64 0, i32 2
  %1473 = load i32, i32* %1472, align 8
  %1474 = icmp eq i32 %1473, 35
  %1475 = add nsw i64 %1452, 32
  %1476 = and i64 %1475, -64
  %1477 = select i1 %1474, i64 %1476, i64 %1452
  %1478 = add nsw i64 %1460, 32
  %1479 = and i64 %1478, -64
  br label %1480

1480:                                             ; preds = %1467, %1437, %1431, %1378
  %1481 = phi i64 [ %1432, %1431 ], [ %1391, %1378 ], [ %1460, %1437 ], [ %1479, %1467 ]
  %1482 = phi i64 [ %1433, %1431 ], [ %1386, %1378 ], [ %1452, %1437 ], [ %1477, %1467 ]
  %1483 = or i64 %1482, %1481
  %1484 = icmp eq i64 %1483, 0
  br i1 %1484, label %1487, label %1485

1485:                                             ; preds = %1480
  call void @FT_Outline_Translate(%struct.FT_Outline_* nonnull %5, i64 %1482, i64 %1481) #11
  br label %1487

1486:                                             ; preds = %1368, %1374
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1316) #11
  store i32 21, i32* %15, align 4
  br label %1488

1487:                                             ; preds = %1392, %1480, %1485
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1316) #11
  store i32 0, i32* %15, align 4
  br label %1489

1488:                                             ; preds = %1321, %1486
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1297)
  br label %1728

1489:                                             ; preds = %1343, %1487
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1297)
  %1490 = add nuw nsw i64 %1322, 1
  %1491 = icmp eq i64 %1490, %1320
  br i1 %1491, label %1492, label %1321

1492:                                             ; preds = %1489
  %1493 = sext i16 %1344 to i32
  br label %1494

1494:                                             ; preds = %1287, %1492
  %1495 = phi %struct.FT_SubGlyphRec_* [ %1337, %1492 ], [ null, %1287 ]
  %1496 = phi i32 [ %1493, %1492 ], [ %1003, %1287 ]
  store i64 %1293, i64* %1292, align 8
  store i32 %1294, i32* %88, align 8
  store i64 %1013, i64* %1012, align 8
  %1497 = load i64, i64* %40, align 8
  %1498 = and i64 %1497, 2
  %1499 = icmp eq i64 %1498, 0
  %1500 = icmp ne %struct.FT_SubGlyphRec_* %1495, null
  %1501 = and i1 %1500, %1499
  br i1 %1501, label %1502, label %1710

1502:                                             ; preds = %1494
  %1503 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1495, i64 0, i32 1
  %1504 = load i16, i16* %1503, align 4
  %1505 = and i16 %1504, 256
  %1506 = icmp ne i16 %1505, 0
  %1507 = icmp ugt i32 %1496, %1003
  %1508 = and i1 %1507, %1506
  br i1 %1508, label %1509, label %1710

1509:                                             ; preds = %1502
  %1510 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1510) #11
  store i32 -1431655766, i32* %9, align 4
  %1511 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %28, align 8
  %1512 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %1511, i64 0, i32 5, i32 0, i32 1
  %1513 = load i16, i16* %1512, align 2
  %1514 = sext i16 %1513 to i32
  %1515 = add nsw i32 %1514, 4
  %1516 = icmp eq i32 %1515, 0
  br i1 %1516, label %1526, label %1517

1517:                                             ; preds = %1509
  %1518 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %1511, i64 0, i32 6, i32 0, i32 1
  %1519 = load i16, i16* %1518, align 2
  %1520 = sext i16 %1519 to i32
  %1521 = add nsw i32 %1515, %1514
  %1522 = add nsw i32 %1521, %1520
  %1523 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %1511, i64 0, i32 1
  %1524 = load i32, i32* %1523, align 8
  %1525 = icmp ugt i32 %1522, %1524
  br i1 %1525, label %1527, label %1526

1526:                                             ; preds = %1517, %1509
  store i32 0, i32* %9, align 4
  br label %1532

1527:                                             ; preds = %1517
  %1528 = call i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_* %1511, i32 %1515, i32 0) #11
  store i32 %1528, i32* %9, align 4
  %1529 = icmp eq i32 %1528, 0
  br i1 %1529, label %1530, label %1704

1530:                                             ; preds = %1527
  %1531 = load i16, i16* %1512, align 2
  br label %1532

1532:                                             ; preds = %1530, %1526
  %1533 = phi i16 [ %1531, %1530 ], [ %1513, %1526 ]
  %1534 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %1511, i64 0, i32 5, i32 0, i32 2
  %1535 = load %struct.FT_Vector_*, %struct.FT_Vector_** %1534, align 8
  %1536 = sext i16 %1533 to i64
  %1537 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1535, i64 %1536
  %1538 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 14
  %1539 = bitcast %struct.FT_Vector_* %1537 to i8*
  %1540 = bitcast %struct.FT_Vector_* %1538 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1539, i8* align 8 %1540, i64 16, i1 false) #11
  %1541 = load %struct.FT_Vector_*, %struct.FT_Vector_** %1534, align 8
  %1542 = load i16, i16* %1512, align 2
  %1543 = sext i16 %1542 to i64
  %1544 = add nsw i64 %1543, 1
  %1545 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1541, i64 %1544
  %1546 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 15
  %1547 = bitcast %struct.FT_Vector_* %1545 to i8*
  %1548 = bitcast %struct.FT_Vector_* %1546 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1547, i8* align 8 %1548, i64 16, i1 false) #11
  %1549 = load %struct.FT_Vector_*, %struct.FT_Vector_** %1534, align 8
  %1550 = load i16, i16* %1512, align 2
  %1551 = sext i16 %1550 to i64
  %1552 = add nsw i64 %1551, 2
  %1553 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1549, i64 %1552
  %1554 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 24
  %1555 = bitcast %struct.FT_Vector_* %1553 to i8*
  %1556 = bitcast %struct.FT_Vector_* %1554 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1555, i8* align 8 %1556, i64 16, i1 false) #11
  %1557 = load %struct.FT_Vector_*, %struct.FT_Vector_** %1534, align 8
  %1558 = load i16, i16* %1512, align 2
  %1559 = sext i16 %1558 to i64
  %1560 = add nsw i64 %1559, 3
  %1561 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1557, i64 %1560
  %1562 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 25
  %1563 = bitcast %struct.FT_Vector_* %1561 to i8*
  %1564 = bitcast %struct.FT_Vector_* %1562 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1563, i8* align 8 %1564, i64 16, i1 false) #11
  %1565 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %1511, i64 0, i32 5, i32 0, i32 3
  %1566 = load i8*, i8** %1565, align 8
  %1567 = load i16, i16* %1512, align 2
  %1568 = sext i16 %1567 to i64
  %1569 = getelementptr inbounds i8, i8* %1566, i64 %1568
  store i8 0, i8* %1569, align 1
  %1570 = load i8*, i8** %1565, align 8
  %1571 = load i16, i16* %1512, align 2
  %1572 = sext i16 %1571 to i64
  %1573 = add nsw i64 %1572, 1
  %1574 = getelementptr inbounds i8, i8* %1570, i64 %1573
  store i8 0, i8* %1574, align 1
  %1575 = load i8*, i8** %1565, align 8
  %1576 = load i16, i16* %1512, align 2
  %1577 = sext i16 %1576 to i64
  %1578 = add nsw i64 %1577, 2
  %1579 = getelementptr inbounds i8, i8* %1575, i64 %1578
  store i8 0, i8* %1579, align 1
  %1580 = load i8*, i8** %1565, align 8
  %1581 = load i16, i16* %1512, align 2
  %1582 = sext i16 %1581 to i64
  %1583 = add nsw i64 %1582, 3
  %1584 = getelementptr inbounds i8, i8* %1580, i64 %1583
  store i8 0, i8* %1584, align 1
  %1585 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %129, align 8
  %1586 = load i64, i64* %1012, align 8
  %1587 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1585, i64 %1586) #11
  store i32 %1587, i32* %9, align 4
  %1588 = icmp eq i32 %1587, 0
  br i1 %1588, label %1589, label %1704

1589:                                             ; preds = %1532
  %1590 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %1585, i32* nonnull %9) #11
  %1591 = load i32, i32* %9, align 4
  %1592 = icmp eq i32 %1591, 0
  br i1 %1592, label %1593, label %1704

1593:                                             ; preds = %1589
  %1594 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %26, align 8
  %1595 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1594, i64 0, i32 7, i32 12
  %1596 = load i16, i16* %1595, align 2
  %1597 = icmp ugt i16 %1590, %1596
  br i1 %1597, label %1598, label %1629

1598:                                             ; preds = %1593
  %1599 = zext i16 %1590 to i32
  %1600 = load i32, i32* %88, align 8
  %1601 = icmp slt i32 %1600, %1599
  br i1 %1601, label %1704, label %1602

1602:                                             ; preds = %1598
  %1603 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 18
  %1604 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %1603, align 8
  %1605 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %1604, i64 0, i32 31
  %1606 = load i32, i32* %1605, align 8
  %1607 = zext i32 %1606 to i64
  %1608 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %1604, i64 0, i32 2
  %1609 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %1608, align 8
  %1610 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %1604, i64 0, i32 32
  %1611 = zext i16 %1590 to i64
  %1612 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1612) #11
  store i32 -1431655766, i32* %8, align 4
  %1613 = icmp ult i64 %1607, %1611
  br i1 %1613, label %1614, label %1621

1614:                                             ; preds = %1602
  %1615 = load i8*, i8** %1610, align 8
  %1616 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %1609, i64 1, i64 %1607, i64 %1611, i8* %1615, i32* nonnull %8) #11
  store i8* %1616, i8** %1610, align 8
  %1617 = load i32, i32* %8, align 4
  %1618 = icmp eq i32 %1617, 0
  %1619 = select i1 %1618, i64 %1611, i64 %1607
  %1620 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %1603, align 8
  br label %1621

1621:                                             ; preds = %1614, %1602
  %1622 = phi %struct.TT_ExecContextRec_* [ %1604, %1602 ], [ %1620, %1614 ]
  %1623 = phi i64 [ %1607, %1602 ], [ %1619, %1614 ]
  %1624 = phi i32 [ 0, %1602 ], [ %1617, %1614 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1612) #11
  store i32 %1624, i32* %9, align 4
  %1625 = trunc i64 %1623 to i32
  %1626 = and i32 %1625, 65535
  %1627 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %1622, i64 0, i32 31
  store i32 %1626, i32* %1627, align 8
  %1628 = icmp eq i32 %1624, 0
  br i1 %1628, label %1634, label %1704

1629:                                             ; preds = %1593
  %1630 = icmp eq i16 %1590, 0
  br i1 %1630, label %1631, label %1632

1631:                                             ; preds = %1629
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1510) #11
  store i32 0, i32* %15, align 4
  br label %1710

1632:                                             ; preds = %1629
  %1633 = zext i16 %1590 to i64
  br label %1634

1634:                                             ; preds = %1632, %1621
  %1635 = phi i64 [ %1633, %1632 ], [ %1611, %1621 ]
  %1636 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 18
  %1637 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %1636, align 8
  %1638 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %1637, i64 0, i32 32
  %1639 = load i8*, i8** %1638, align 8
  %1640 = call i32 @FT_Stream_Read(%struct.FT_StreamRec_* %1585, i8* %1639, i64 %1635) #11
  store i32 %1640, i32* %9, align 4
  %1641 = icmp eq i32 %1640, 0
  br i1 %1641, label %1642, label %1704

1642:                                             ; preds = %1634
  %1643 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %1636, align 8
  %1644 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %1643, i64 0, i32 32
  %1645 = bitcast i8** %1644 to i64*
  %1646 = load i64, i64* %1645, align 8
  %1647 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 2
  %1648 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %1647, align 8
  %1649 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1648, i64 0, i32 16
  %1650 = bitcast i8** %1649 to i64*
  store i64 %1646, i64* %1650, align 8
  %1651 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %1647, align 8
  %1652 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1651, i64 0, i32 17
  store i64 %1635, i64* %1652, align 8
  %1653 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %28, align 8
  %1654 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %1653, i64 0, i32 5, i32 0, i32 1
  %1655 = load i16, i16* %1654, align 2
  %1656 = sub i16 %1655, %1002
  %1657 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 3
  store i16 %1656, i16* %1657, align 4
  %1658 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %1653, i64 0, i32 5, i32 0, i32 0
  %1659 = load i16, i16* %1658, align 8
  %1660 = sub i16 %1659, %1005
  %1661 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 4
  store i16 %1660, i16* %1661, align 2
  %1662 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %1653, i64 0, i32 5, i32 1
  %1663 = load %struct.FT_Vector_*, %struct.FT_Vector_** %1662, align 8
  %1664 = zext i32 %1003 to i64
  %1665 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1663, i64 %1664
  %1666 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 5
  store %struct.FT_Vector_* %1665, %struct.FT_Vector_** %1666, align 8
  %1667 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %1653, i64 0, i32 5, i32 0, i32 2
  %1668 = load %struct.FT_Vector_*, %struct.FT_Vector_** %1667, align 8
  %1669 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1668, i64 %1664
  %1670 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 6
  store %struct.FT_Vector_* %1669, %struct.FT_Vector_** %1670, align 8
  %1671 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %1653, i64 0, i32 5, i32 2
  %1672 = load %struct.FT_Vector_*, %struct.FT_Vector_** %1671, align 8
  %1673 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1672, i64 %1664
  %1674 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 7
  store %struct.FT_Vector_* %1673, %struct.FT_Vector_** %1674, align 8
  %1675 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %1653, i64 0, i32 5, i32 0, i32 3
  %1676 = load i8*, i8** %1675, align 8
  %1677 = getelementptr inbounds i8, i8* %1676, i64 %1664
  %1678 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 8
  store i8* %1677, i8** %1678, align 8
  %1679 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %1653, i64 0, i32 5, i32 0, i32 4
  %1680 = load i16*, i16** %1679, align 8
  %1681 = and i64 %1006, 4294967295
  %1682 = getelementptr inbounds i16, i16* %1680, i64 %1681
  %1683 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 9
  store i16* %1682, i16** %1683, align 8
  %1684 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 10
  store i16 %1002, i16* %1684, align 8
  %1685 = icmp eq i16 %1656, 0
  br i1 %1685, label %1706, label %1686

1686:                                             ; preds = %1642
  %1687 = load i8, i8* %1677, align 1
  %1688 = and i8 %1687, -25
  store i8 %1688, i8* %1677, align 1
  %1689 = load i16, i16* %1657, align 4
  %1690 = icmp ugt i16 %1689, 1
  br i1 %1690, label %1691, label %1701

1691:                                             ; preds = %1686, %1691
  %1692 = phi i64 [ %1697, %1691 ], [ 1, %1686 ]
  %1693 = load i8*, i8** %1678, align 8
  %1694 = getelementptr inbounds i8, i8* %1693, i64 %1692
  %1695 = load i8, i8* %1694, align 1
  %1696 = and i8 %1695, -25
  store i8 %1696, i8* %1694, align 1
  %1697 = add nuw nsw i64 %1692, 1
  %1698 = load i16, i16* %1657, align 4
  %1699 = zext i16 %1698 to i64
  %1700 = icmp ult i64 %1697, %1699
  br i1 %1700, label %1691, label %1701

1701:                                             ; preds = %1691, %1686
  %1702 = phi i16 [ %1689, %1686 ], [ %1698, %1691 ]
  %1703 = add i16 %1702, 4
  br label %1706

1704:                                             ; preds = %1527, %1634, %1621, %1598, %1589, %1532
  %1705 = phi i32 [ %1587, %1532 ], [ %1591, %1589 ], [ 22, %1598 ], [ %1624, %1621 ], [ %1640, %1634 ], [ %1528, %1527 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1510) #11
  store i32 %1705, i32* %15, align 4
  br label %1728

1706:                                             ; preds = %1642, %1701
  %1707 = phi i16 [ 4, %1642 ], [ %1703, %1701 ]
  store i16 %1707, i16* %1657, align 4
  %1708 = call fastcc i32 @TT_Hint_Glyph(%struct.TT_LoaderRec_* %0, i8 zeroext 1) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1510) #11
  store i32 %1708, i32* %15, align 4
  %1709 = icmp eq i32 %1708, 0
  br i1 %1709, label %1710, label %1728

1710:                                             ; preds = %1631, %1502, %1706, %1494
  %1711 = load i32, i32* %1290, align 8
  %1712 = icmp eq i32 %1711, 0
  br i1 %1712, label %1728, label %1713

1713:                                             ; preds = %1710
  %1714 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %29, i64 0, i32 5, i32 4
  %1715 = load %struct.FT_SubGlyphRec_*, %struct.FT_SubGlyphRec_** %1714, align 8
  %1716 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %1715, i64 0, i32 1
  %1717 = load i16, i16* %1716, align 4
  %1718 = and i16 %1717, 1024
  %1719 = icmp eq i16 %1718, 0
  br i1 %1719, label %1728, label %1720

1720:                                             ; preds = %1713
  %1721 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %29, i64 0, i32 5, i32 0, i32 5
  %1722 = load i32, i32* %1721, align 8
  %1723 = or i32 %1722, 64
  store i32 %1723, i32* %1721, align 8
  br label %1728

1724:                                             ; preds = %955, %597, %1000, %992, %988
  %1725 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %27, i64 0, i32 18
  %1726 = load void (%struct.TT_LoaderRec_*)*, void (%struct.TT_LoaderRec_*)** %1725, align 8
  call void %1726(%struct.TT_LoaderRec_* %0) #11
  br label %1728

1727:                                             ; preds = %342
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %347) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %346) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %345) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %344) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %343) #11
  br label %1728

1728:                                             ; preds = %1727, %1212, %1704, %1488, %1706, %1283, %1713, %1710, %1720, %100, %954, %950, %576, %471, %209, %107, %101, %1724
  %1729 = icmp eq i8 %87, 0
  br i1 %1729, label %1740, label %1730

1730:                                             ; preds = %1728
  %1731 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %60, align 8
  %1732 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %1731, i64 0, i32 4
  %1733 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %1732, align 8
  %1734 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %1733, i64 0, i32 0
  %1735 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %1734, align 8
  %1736 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %1735, i64 0, i32 1
  %1737 = load void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)** %1736, align 8
  %1738 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %1733, i64 0, i32 1
  %1739 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %1738, align 8
  call void %1737(%struct.FT_IncrementalRec_* %1739, %struct.FT_Data_* nonnull %17) #11
  br label %1740

1740:                                             ; preds = %65, %1728, %1730
  %1741 = load i32, i32* %15, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #11
  ret i32 %1741
}

declare void @FT_Outline_Translate(%struct.FT_Outline_*, i64, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @TT_Load_Context(%struct.TT_ExecContextRec_*, %struct.TT_FaceRec_*, %struct.TT_SizeRec_*) unnamed_addr #2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 0
  store %struct.TT_FaceRec_* %1, %struct.TT_FaceRec_** %6, align 8
  %7 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 1
  store %struct.TT_SizeRec_* %2, %struct.TT_SizeRec_** %7, align 8
  %8 = icmp eq %struct.TT_SizeRec_* %2, null
  br i1 %8, label %88, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 6
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 33
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 7
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 34
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 9
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 36
  store i32 %17, i32* %18, align 8
  %19 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 10
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 37
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 8
  %23 = bitcast %struct.TT_DefRecord_** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 35
  %26 = bitcast %struct.TT_DefRecord_** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 11
  %28 = bitcast %struct.TT_DefRecord_** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 38
  %31 = bitcast %struct.TT_DefRecord_** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 5
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 14
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16
  %36 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 3
  %37 = bitcast %struct.TT_Size_Metrics_* %35 to i8*
  %38 = bitcast %struct.TT_Size_Metrics_* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 80, i1 false)
  %39 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 15
  %40 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 1
  %41 = bitcast %struct.FT_Size_Metrics_** %40 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %struct.FT_Size_Metrics_* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %42, i64 56, i1 false)
  %44 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 12
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 39
  store i32 %45, i32* %46, align 8
  %47 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 13
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 40
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 0
  %51 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 14, i64 0
  %52 = bitcast %struct.TT_CodeRange_* %50 to i8*
  %53 = bitcast %struct.TT_CodeRange_* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 16, i1 false)
  %54 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 1
  %55 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 14, i64 1
  %56 = bitcast %struct.TT_CodeRange_* %54 to i8*
  %57 = bitcast %struct.TT_CodeRange_* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false)
  %58 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 46, i64 2
  %59 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 14, i64 2
  %60 = bitcast %struct.TT_CodeRange_* %58 to i8*
  %61 = bitcast %struct.TT_CodeRange_* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 16, i1 false)
  %62 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17
  %63 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 15
  %64 = bitcast %struct.TT_GraphicsState_* %62 to i8*
  %65 = bitcast %struct.TT_GraphicsState_* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 96, i1 false)
  %66 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 16
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 26
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 17
  %70 = bitcast i64** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 27
  %73 = bitcast i64** %72 to i64*
  store i64 %71, i64* %73, align 8
  %74 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 18
  %75 = load i16, i16* %74, align 8
  %76 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 47
  store i16 %75, i16* %76, align 8
  %77 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 19
  %78 = bitcast i64** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 48
  %81 = bitcast i64** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 13
  %83 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 20
  %84 = bitcast %struct.TT_GlyphZoneRec_* %82 to i8*
  %85 = bitcast %struct.TT_GlyphZoneRec_* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 64, i1 false)
  %86 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 9
  %87 = bitcast %struct.TT_GlyphZoneRec_* %86 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 192, i1 false)
  br label %88

88:                                               ; preds = %3, %9
  %89 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 5
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 2
  %92 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %91, align 8
  %93 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 6
  %94 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 7, i32 11
  %95 = load i16, i16* %94, align 4
  %96 = zext i16 %95 to i64
  %97 = add nuw nsw i64 %96, 32
  %98 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %98) #11
  store i32 -1431655766, i32* %5, align 4
  %99 = bitcast i64** %93 to i8**
  %100 = icmp ult i64 %90, %97
  br i1 %100, label %101, label %111

101:                                              ; preds = %88
  %102 = shl i64 %90, 3
  %103 = shl nuw nsw i64 %97, 3
  %104 = load i8*, i8** %99, align 8
  %105 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %92, i64 1, i64 %102, i64 %103, i8* %104, i32* nonnull %5) #11
  store i8* %105, i8** %99, align 8
  %106 = load i32, i32* %5, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %101
  %109 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %91, align 8
  br label %111

110:                                              ; preds = %101
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #11
  store i64 %90, i64* %89, align 8
  br label %143

111:                                              ; preds = %108, %88
  %112 = phi %struct.FT_MemoryRec_* [ %92, %88 ], [ %109, %108 ]
  %113 = phi i64 [ %90, %88 ], [ %97, %108 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #11
  store i64 %113, i64* %89, align 8
  %114 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 31
  %115 = load i32, i32* %114, align 8
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 32
  %118 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 7, i32 12
  %119 = load i16, i16* %118, align 2
  %120 = zext i16 %119 to i64
  %121 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #11
  store i32 -1431655766, i32* %4, align 4
  %122 = icmp ult i64 %116, %120
  br i1 %122, label %123, label %129

123:                                              ; preds = %111
  %124 = load i8*, i8** %117, align 8
  %125 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %112, i64 1, i64 %116, i64 %120, i8* %124, i32* nonnull %4) #11
  store i8* %125, i8** %117, align 8
  %126 = load i32, i32* %4, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %129, label %128

128:                                              ; preds = %123
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #11
  store i32 %115, i32* %114, align 8
  br label %143

129:                                              ; preds = %123, %111
  %130 = phi i64 [ %116, %111 ], [ %120, %123 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #11
  %131 = trunc i64 %130 to i32
  store i32 %131, i32* %114, align 8
  %132 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 12
  %133 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 12, i32 3
  store i16 0, i16* %133, align 4
  %134 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 12, i32 4
  store i16 0, i16* %134, align 2
  %135 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 10
  %136 = bitcast %struct.TT_GlyphZoneRec_* %135 to i8*
  %137 = bitcast %struct.TT_GlyphZoneRec_* %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %137, i64 64, i1 false)
  %138 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 11
  %139 = bitcast %struct.TT_GlyphZoneRec_* %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %137, i64 64, i1 false)
  %140 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 9
  %141 = bitcast %struct.TT_GlyphZoneRec_* %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* align 8 %137, i64 64, i1 false)
  %142 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 55
  store i8 0, i8* %142, align 8
  br label %143

143:                                              ; preds = %128, %110, %129
  %144 = phi i32 [ 0, %129 ], [ %106, %110 ], [ %126, %128 ]
  ret i32 %144
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @tt_size_run_prep(%struct.TT_SizeRec_*, i8 zeroext) unnamed_addr #2 {
  %3 = bitcast %struct.TT_SizeRec_* %0 to %struct.TT_FaceRec_**
  %4 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 16
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %34, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 3, i32 4
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 42
  %12 = shl i64 %10, 26
  %13 = ashr i64 %12, 32
  %14 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 17
  br label %15

15:                                               ; preds = %8, %15
  %16 = phi i64 [ 0, %8 ], [ %31, %15 ]
  %17 = phi i32 [ 0, %8 ], [ %30, %15 ]
  %18 = load i32*, i32** %11, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 %16
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = mul nsw i64 %13, %21
  %23 = ashr i64 %22, 63
  %24 = add nsw i64 %22, 32768
  %25 = add nsw i64 %24, %23
  %26 = shl i64 %25, 16
  %27 = ashr i64 %26, 32
  %28 = load i64*, i64** %14, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 %16
  store i64 %27, i64* %29, align 8
  %30 = add i32 %17, 1
  %31 = zext i32 %30 to i64
  %32 = load i64, i64* %5, align 8
  %33 = icmp ugt i64 %32, %31
  br i1 %33, label %15, label %34

34:                                               ; preds = %15, %2
  %35 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 21
  %36 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %35, align 8
  %37 = tail call fastcc i32 @TT_Load_Context(%struct.TT_ExecContextRec_* %36, %struct.TT_FaceRec_* %4, %struct.TT_SizeRec_* %0)
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 41
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 4
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 55
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 58
  store i8 %1, i8* %43, align 1
  %44 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 40
  %45 = bitcast i8** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 39
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 46, i64 1, i32 0
  %50 = bitcast i8** %49 to i64*
  store i64 %46, i64* %50, align 8
  %51 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 46, i64 1, i32 1
  store i64 %48, i64* %51, align 8
  %52 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 46, i64 2, i32 0
  %53 = bitcast i8** %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #11
  %54 = load i64, i64* %47, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %66, label %56

56:                                               ; preds = %39
  %57 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 20
  %58 = bitcast i8** %57 to i64*
  store i64 %46, i64* %58, align 8
  %59 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 22
  store i64 %48, i64* %59, align 8
  %60 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 21
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 19
  store i32 2, i32* %61, align 4
  %62 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 43
  %63 = load i32 (i8*)*, i32 (i8*)** %62, align 8
  %64 = bitcast %struct.TT_ExecContextRec_* %36 to i8*
  %65 = tail call i32 %63(i8* %64) #11
  br label %66

66:                                               ; preds = %39, %56
  %67 = phi i32 [ %65, %56 ], [ 0, %39 ]
  %68 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 23
  store i32 %67, i32* %68, align 4
  %69 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 17
  %70 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 17, i32 5, i32 1
  store i16 0, i16* %70, align 2
  %71 = bitcast %struct.TT_GraphicsState_* %69 to <8 x i16>*
  store <8 x i16> <i16 0, i16 0, i16 0, i16 16384, i16 0, i16 16384, i16 0, i16 16384>, <8 x i16>* %71, align 8
  %72 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 17, i32 18
  store i16 1, i16* %72, align 4
  %73 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 17, i32 19
  store i16 1, i16* %73, align 2
  %74 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 17, i32 20
  store i16 1, i16* %74, align 8
  %75 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 17, i32 6
  store i64 1, i64* %75, align 8
  %76 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 15
  %77 = bitcast %struct.TT_GraphicsState_* %76 to i8*
  %78 = bitcast %struct.TT_GraphicsState_* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 96, i1 false)
  %79 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 33
  %80 = load i32, i32* %79, align 8
  %81 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 6
  store i32 %80, i32* %81, align 8
  %82 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 36
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 9
  store i32 %83, i32* %84, align 8
  %85 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 39
  %86 = load i32, i32* %85, align 8
  %87 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 12
  store i32 %86, i32* %87, align 8
  %88 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 40
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 13
  store i32 %89, i32* %90, align 4
  %91 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 14, i64 0
  %92 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 46, i64 0
  %93 = bitcast %struct.TT_CodeRange_* %91 to i8*
  %94 = bitcast %struct.TT_CodeRange_* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 16, i1 false) #11
  %95 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 14, i64 1
  %96 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 46, i64 1
  %97 = bitcast %struct.TT_CodeRange_* %95 to i8*
  %98 = bitcast %struct.TT_CodeRange_* %96 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 16, i1 false) #11
  %99 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %0, i64 0, i32 14, i64 2
  %100 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 46, i64 2
  %101 = bitcast %struct.TT_CodeRange_* %99 to i8*
  %102 = bitcast %struct.TT_CodeRange_* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 16, i1 false) #11
  br label %103

103:                                              ; preds = %34, %66
  %104 = phi i32 [ %67, %66 ], [ %37, %34 ]
  ret i32 %104
}

declare hidden void @FT_GlyphLoader_Rewind(%struct.FT_GlyphLoaderRec_*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @tt_glyphzone_done(%struct.TT_GlyphZoneRec_* nocapture) unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %0, i64 0, i32 0
  %3 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %2, align 8
  %4 = icmp eq %struct.FT_MemoryRec_* %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %0, i64 0, i32 9
  %7 = bitcast i16** %6 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* nonnull %3, i8* %8) #11
  store i16* null, i16** %6, align 8
  %9 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %0, i64 0, i32 8
  %10 = load i8*, i8** %9, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* nonnull %3, i8* %10) #11
  store i8* null, i8** %9, align 8
  %11 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %0, i64 0, i32 6
  %12 = bitcast %struct.FT_Vector_** %11 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* nonnull %3, i8* %13) #11
  store %struct.FT_Vector_* null, %struct.FT_Vector_** %11, align 8
  %14 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %0, i64 0, i32 5
  %15 = bitcast %struct.FT_Vector_** %14 to i8**
  %16 = load i8*, i8** %15, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* nonnull %3, i8* %16) #11
  store %struct.FT_Vector_* null, %struct.FT_Vector_** %14, align 8
  %17 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %0, i64 0, i32 7
  %18 = bitcast %struct.FT_Vector_** %17 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* nonnull %3, i8* %19) #11
  store %struct.FT_Vector_* null, %struct.FT_Vector_** %17, align 8
  %20 = bitcast %struct.TT_GlyphZoneRec_* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %21

21:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @tt_size_done_bytecode(%struct.FT_SizeRec_* nocapture) unnamed_addr #2 {
  %2 = bitcast %struct.FT_SizeRec_* %0 to %struct.TT_SizeRec_*
  %3 = bitcast %struct.FT_SizeRec_* %0 to %struct.TT_FaceRec_**
  %4 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 0, i32 25
  %6 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 6
  %8 = bitcast %struct.FT_SizeRec_* %7 to %struct.TT_ExecContextRec_**
  %9 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %8, align 8
  %10 = icmp eq %struct.TT_ExecContextRec_* %9, null
  br i1 %10, label %39, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %9, i64 0, i32 2
  %13 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %12, align 8
  %14 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %9, i64 0, i32 44
  store i16 0, i16* %14, align 8
  %15 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %9, i64 0, i32 45
  store i16 0, i16* %15, align 2
  %16 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %9, i64 0, i32 6
  %17 = bitcast i64** %16 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %13, i8* %18) #11
  %19 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %9, i64 0, i32 5
  %20 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %9, i64 0, i32 29
  %21 = bitcast i64** %20 to i8**
  %22 = bitcast i64* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #11
  %23 = load i8*, i8** %21, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %13, i8* %23) #11
  %24 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %9, i64 0, i32 28
  %25 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %9, i64 0, i32 50
  %26 = bitcast i64** %25 to i8**
  %27 = bitcast i64* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #11
  %28 = load i8*, i8** %26, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %13, i8* %28) #11
  store i64* null, i64** %25, align 8
  %29 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %9, i64 0, i32 49
  store i16 0, i16* %29, align 8
  %30 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %9, i64 0, i32 43
  %31 = bitcast %struct.TT_CallRec_** %30 to i8**
  %32 = load i8*, i8** %31, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %13, i8* %32) #11
  %33 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %9, i64 0, i32 41
  %34 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %9, i64 0, i32 32
  %35 = bitcast i32* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #11
  %36 = load i8*, i8** %34, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %13, i8* %36) #11
  store i8* null, i8** %34, align 8
  %37 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %9, i64 0, i32 31
  store i32 0, i32* %37, align 8
  %38 = bitcast %struct.TT_ExecContextRec_* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 16, i1 false) #11
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %13, i8* nonnull %38) #11
  store %struct.TT_ExecContextRec_* null, %struct.TT_ExecContextRec_** %8, align 8
  br label %39

39:                                               ; preds = %1, %11
  %40 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 5
  %41 = bitcast %struct.FT_SizeRec_* %40 to i8**
  %42 = load i8*, i8** %41, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %42) #11
  %43 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 4, i32 3
  %44 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 5, i32 1, i32 1
  %45 = bitcast void (i8*)** %44 to i64**
  %46 = bitcast void (i8*)** %44 to i8**
  %47 = bitcast %struct.FT_Size_InternalRec_** %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false)
  %48 = load i8*, i8** %46, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %48) #11
  store i64* null, i64** %45, align 8
  %49 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 5, i32 1
  %50 = bitcast %struct.FT_Generic_* %49 to i16*
  store i16 0, i16* %50, align 8
  %51 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 5, i32 2
  %52 = bitcast %struct.FT_Size_Metrics_* %51 to %struct.TT_GlyphZoneRec_*
  tail call fastcc void @tt_glyphzone_done(%struct.TT_GlyphZoneRec_* %52)
  %53 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 2, i32 3
  %54 = bitcast %struct.FT_Size_InternalRec_** %53 to %struct.TT_DefRecord_**
  %55 = bitcast %struct.FT_Size_InternalRec_** %53 to i8**
  %56 = load i8*, i8** %55, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %56) #11
  store %struct.TT_DefRecord_* null, %struct.TT_DefRecord_** %54, align 8
  %57 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 3, i32 1
  %58 = bitcast %struct.FT_Generic_* %57 to %struct.TT_DefRecord_**
  %59 = getelementptr inbounds %struct.FT_Generic_, %struct.FT_Generic_* %57, i64 0, i32 0
  %60 = load i8*, i8** %59, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %60) #11
  store %struct.TT_DefRecord_* null, %struct.TT_DefRecord_** %58, align 8
  %61 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 2, i32 2, i32 7
  %62 = bitcast i64* %61 to i32*
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 7
  store i32 0, i32* %63, align 4
  %64 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 3
  %65 = bitcast %struct.FT_SizeRec_* %64 to i32*
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 10
  store i32 0, i32* %66, align 4
  %67 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 3, i32 1, i32 1
  %68 = bitcast void (i8*)** %67 to i32*
  store i32 0, i32* %68, align 8
  %69 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 13
  store i32 0, i32* %69, align 4
  %70 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 6, i32 1
  %71 = bitcast %struct.FT_Generic_* %70 to i32*
  store i32 -1, i32* %71, align 8
  %72 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %2, i64 0, i32 23
  store i32 -1, i32* %72, align 4
  ret void
}

declare hidden void @FT_Stream_OpenMemory(%struct.FT_StreamRec_*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @TT_Vary_Apply_Glyph_Deltas(%struct.TT_FaceRec_* nocapture readonly, i32, %struct.FT_Outline_* nocapture readonly, %struct.FT_Vector_* nocapture, i32) unnamed_addr #2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  store i32 -1431655766, i32* %6, align 4
  %10 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 26
  %11 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %10, align 8
  %12 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %11, i64 0, i32 7
  %13 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %12, align 8
  %14 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 50
  %15 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %14, align 8
  %16 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #11
  store i32 -1431655766, i32* %7, align 4
  %17 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #11
  store i32 0, i32* %8, align 4
  %18 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 49
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = icmp ne %struct.GX_BlendRec_* %15, null
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %752

23:                                               ; preds = %5
  %24 = icmp eq i32 %4, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %2, i64 0, i32 2
  %27 = zext i32 %4 to i64
  br label %28

28:                                               ; preds = %28, %25
  %29 = phi i64 [ 0, %25 ], [ %40, %28 ]
  %30 = load %struct.FT_Vector_*, %struct.FT_Vector_** %26, align 8
  %31 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %30, i64 %29, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = shl nsw i64 %32, 6
  %34 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3, i64 %29, i32 0
  store i64 %33, i64* %34, align 8
  %35 = load %struct.FT_Vector_*, %struct.FT_Vector_** %26, align 8
  %36 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %35, i64 %29, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = shl nsw i64 %37, 6
  %39 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3, i64 %29, i32 1
  store i64 %38, i64* %39, align 8
  %40 = add nuw nsw i64 %29, 1
  %41 = icmp eq i64 %40, %27
  br i1 %41, label %42, label %28

42:                                               ; preds = %28, %23
  %43 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %15, i64 0, i32 19
  %44 = load i32, i32* %43, align 8
  %45 = icmp ugt i32 %44, %1
  br i1 %45, label %46, label %752

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %15, i64 0, i32 20
  %48 = load i64*, i64** %47, align 8
  %49 = zext i32 %1 to i64
  %50 = getelementptr inbounds i64, i64* %48, i64 %49
  %51 = load i64, i64* %50, align 8
  %52 = add nuw i32 %1, 1
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds i64, i64* %48, i64 %53
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %51, %55
  br i1 %56, label %752, label %57

57:                                               ; preds = %46
  %58 = zext i32 %4 to i64
  %59 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %13, i64 16, i64 0, i64 %58, i8* null, i32* nonnull %6) #11
  %60 = bitcast i8* %59 to %struct.FT_Vector_*
  %61 = load i32, i32* %6, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %748

63:                                               ; preds = %57
  %64 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %13, i64 16, i64 0, i64 %58, i8* null, i32* nonnull %6) #11
  %65 = bitcast i8* %64 to %struct.FT_Vector_*
  %66 = load i32, i32* %6, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %748

68:                                               ; preds = %63
  %69 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %13, i64 1, i64 0, i64 %58, i8* null, i32* nonnull %6) #11
  %70 = load i32, i32* %6, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %748

72:                                               ; preds = %68
  %73 = load i64*, i64** %47, align 8
  %74 = getelementptr inbounds i64, i64* %73, i64 %53
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds i64, i64* %73, i64 %49
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %75, %77
  %79 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %11, i64 %77) #11
  store i32 %79, i32* %6, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %748

81:                                               ; preds = %72
  %82 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %11, i64 %78) #11
  store i32 %82, i32* %6, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %748

84:                                               ; preds = %81
  %85 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %11, i64 0, i32 8
  %86 = bitcast i8** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %11, i64 0, i32 0
  %89 = bitcast %struct.FT_StreamRec_* %11 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %87, %90
  %92 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %15, i64 0, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = zext i32 %93 to i64
  %95 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %13, i64 8, i64 0, i64 %94, i8* null, i32* nonnull %6) #11
  %96 = bitcast i8* %95 to i64*
  %97 = load i32, i32* %6, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %740

99:                                               ; preds = %84
  %100 = load i32, i32* %92, align 8
  %101 = zext i32 %100 to i64
  %102 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %13, i64 8, i64 0, i64 %101, i8* null, i32* nonnull %6) #11
  %103 = bitcast i8* %102 to i64*
  %104 = load i32, i32* %6, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %740

106:                                              ; preds = %99
  %107 = load i32, i32* %92, align 8
  %108 = zext i32 %107 to i64
  %109 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %13, i64 8, i64 0, i64 %108, i8* null, i32* nonnull %6) #11
  %110 = bitcast i8* %109 to i64*
  %111 = load i32, i32* %6, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %740

113:                                              ; preds = %106
  %114 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %11) #11
  %115 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %11) #11
  %116 = zext i16 %115 to i64
  %117 = icmp ult i64 %78, %116
  br i1 %117, label %124, label %118

118:                                              ; preds = %113
  %119 = and i16 %114, 4095
  %120 = zext i16 %119 to i32
  %121 = shl nuw nsw i16 %119, 2
  %122 = zext i16 %121 to i64
  %123 = icmp ult i64 %78, %122
  br i1 %123, label %124, label %125

124:                                              ; preds = %113, %118
  store i32 8, i32* %6, align 4
  br label %740

125:                                              ; preds = %118
  %126 = add i64 %91, %116
  %127 = icmp slt i16 %114, 0
  br i1 %127, label %128, label %153

128:                                              ; preds = %125
  %129 = load i64, i64* %86, align 8
  %130 = load i8*, i8** %88, align 8
  %131 = ptrtoint i8* %130 to i64
  %132 = sub i64 %129, %131
  %133 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %11, i64 0, i32 9
  %134 = load i8*, i8** %133, align 8
  %135 = ptrtoint i8* %134 to i64
  %136 = sub i64 %135, %131
  %137 = icmp ult i64 %126, %136
  %138 = getelementptr inbounds i8, i8* %130, i64 %126
  %139 = select i1 %137, i8* %138, i8* %134
  store i8* %139, i8** %85, align 8
  %140 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %15, i64 0, i32 21
  %141 = load i64, i64* %140, align 8
  %142 = call fastcc i16* @ft_var_readpackedpoints(%struct.FT_StreamRec_* %11, i64 %141, i32* nonnull %8)
  %143 = load i64, i64* %86, align 8
  %144 = load i8*, i8** %88, align 8
  %145 = ptrtoint i8* %144 to i64
  %146 = sub i64 %143, %145
  %147 = load i8*, i8** %133, align 8
  %148 = ptrtoint i8* %147 to i64
  %149 = sub i64 %148, %145
  %150 = icmp ult i64 %132, %149
  %151 = getelementptr inbounds i8, i8* %144, i64 %132
  %152 = select i1 %150, i8* %151, i8* %147
  store i8* %152, i8** %85, align 8
  br label %153

153:                                              ; preds = %125, %128
  %154 = phi i64 [ %146, %128 ], [ %126, %125 ]
  %155 = phi i16* [ %142, %128 ], [ null, %125 ]
  %156 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %13, i64 8, i64 0, i64 %58, i8* null, i32* nonnull %6) #11
  %157 = bitcast i8* %156 to i64*
  %158 = load i32, i32* %6, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %737

160:                                              ; preds = %153
  %161 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %13, i64 8, i64 0, i64 %58, i8* null, i32* nonnull %6) #11
  %162 = bitcast i8* %161 to i64*
  %163 = load i32, i32* %6, align 4
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %737

165:                                              ; preds = %160
  br i1 %24, label %168, label %166

166:                                              ; preds = %165
  %167 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %2, i64 0, i32 2
  br label %190

168:                                              ; preds = %190, %165
  %169 = icmp eq i16 %119, 0
  br i1 %169, label %204, label %170

170:                                              ; preds = %168
  %171 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %15, i64 0, i32 17
  %172 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %15, i64 0, i32 18
  %173 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %11, i64 0, i32 9
  %174 = getelementptr inbounds %struct.GX_BlendRec_, %struct.GX_BlendRec_* %15, i64 0, i32 21
  %175 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %2, i64 0, i32 0
  %176 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %2, i64 0, i32 4
  %177 = add i32 %4, -4
  %178 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 51
  %179 = add i32 %4, -3
  %180 = add i32 %4, -2
  %181 = add i32 %4, -1
  %182 = zext i32 %177 to i64
  %183 = zext i32 %179 to i64
  %184 = zext i32 %180 to i64
  %185 = zext i32 %181 to i64
  %186 = and i64 %58, 1
  %187 = icmp eq i32 %4, 1
  %188 = sub nsw i64 %58, %186
  %189 = icmp eq i64 %186, 0
  br label %207

190:                                              ; preds = %190, %166
  %191 = phi i64 [ 0, %166 ], [ %202, %190 ]
  %192 = load %struct.FT_Vector_*, %struct.FT_Vector_** %167, align 8
  %193 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %192, i64 %191, i32 0
  %194 = load i64, i64* %193, align 8
  %195 = shl i64 %194, 16
  %196 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %60, i64 %191, i32 0
  store i64 %195, i64* %196, align 8
  %197 = load %struct.FT_Vector_*, %struct.FT_Vector_** %167, align 8
  %198 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %197, i64 %191, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = shl i64 %199, 16
  %201 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %60, i64 %191, i32 1
  store i64 %200, i64* %201, align 8
  %202 = add nuw nsw i64 %191, 1
  %203 = icmp eq i64 %202, %58
  br i1 %203, label %168, label %190

204:                                              ; preds = %697, %168
  br i1 %24, label %737, label %205

205:                                              ; preds = %204
  %206 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %2, i64 0, i32 2
  br label %703

207:                                              ; preds = %697, %170
  %208 = phi i16* [ null, %170 ], [ %698, %697 ]
  %209 = phi i32 [ 0, %170 ], [ %701, %697 ]
  %210 = phi i64 [ %154, %170 ], [ %700, %697 ]
  %211 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %11) #11
  %212 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %11) #11
  %213 = zext i16 %212 to i32
  %214 = icmp slt i16 %212, 0
  br i1 %214, label %215, label %228

215:                                              ; preds = %207
  %216 = load i32, i32* %92, align 8
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %241, label %218

218:                                              ; preds = %215, %218
  %219 = phi i64 [ %224, %218 ], [ 0, %215 ]
  %220 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %11) #11
  %221 = sext i16 %220 to i64
  %222 = shl nsw i64 %221, 2
  %223 = getelementptr inbounds i64, i64* %96, i64 %219
  store i64 %222, i64* %223, align 8
  %224 = add nuw nsw i64 %219, 1
  %225 = load i32, i32* %92, align 8
  %226 = zext i32 %225 to i64
  %227 = icmp ult i64 %224, %226
  br i1 %227, label %218, label %241

228:                                              ; preds = %207
  %229 = and i32 %213, 4095
  %230 = load i32, i32* %171, align 8
  %231 = icmp ult i32 %229, %230
  br i1 %231, label %232, label %696

232:                                              ; preds = %228
  %233 = load i64*, i64** %172, align 8
  %234 = load i32, i32* %92, align 8
  %235 = mul i32 %234, %229
  %236 = zext i32 %235 to i64
  %237 = getelementptr inbounds i64, i64* %233, i64 %236
  %238 = bitcast i64* %237 to i8*
  %239 = zext i32 %234 to i64
  %240 = shl nuw nsw i64 %239, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %238, i64 %240, i1 false)
  br label %241

241:                                              ; preds = %218, %215, %232
  %242 = and i32 %213, 16384
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %269, label %244

244:                                              ; preds = %241
  %245 = load i32, i32* %92, align 8
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %269, label %249

247:                                              ; preds = %249
  %248 = icmp eq i32 %256, 0
  br i1 %248, label %269, label %259

249:                                              ; preds = %244, %249
  %250 = phi i64 [ %255, %249 ], [ 0, %244 ]
  %251 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %11) #11
  %252 = sext i16 %251 to i64
  %253 = shl nsw i64 %252, 2
  %254 = getelementptr inbounds i64, i64* %103, i64 %250
  store i64 %253, i64* %254, align 8
  %255 = add nuw nsw i64 %250, 1
  %256 = load i32, i32* %92, align 8
  %257 = zext i32 %256 to i64
  %258 = icmp ult i64 %255, %257
  br i1 %258, label %249, label %247

259:                                              ; preds = %247, %259
  %260 = phi i64 [ %265, %259 ], [ 0, %247 ]
  %261 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %11) #11
  %262 = sext i16 %261 to i64
  %263 = shl nsw i64 %262, 2
  %264 = getelementptr inbounds i64, i64* %110, i64 %260
  store i64 %263, i64* %264, align 8
  %265 = add nuw nsw i64 %260, 1
  %266 = load i32, i32* %92, align 8
  %267 = zext i32 %266 to i64
  %268 = icmp ult i64 %265, %267
  br i1 %268, label %259, label %269

269:                                              ; preds = %259, %244, %247, %241
  %270 = call fastcc i64 @ft_var_apply_tuple(%struct.GX_BlendRec_* nonnull %15, i16 zeroext %212, i64* %96, i64* %103, i64* %110)
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %697, label %272

272:                                              ; preds = %269
  %273 = load i64, i64* %86, align 8
  %274 = load i8*, i8** %88, align 8
  %275 = ptrtoint i8* %274 to i64
  %276 = sub i64 %273, %275
  %277 = load i8*, i8** %173, align 8
  %278 = ptrtoint i8* %277 to i64
  %279 = sub i64 %278, %275
  %280 = icmp ult i64 %210, %279
  %281 = getelementptr inbounds i8, i8* %274, i64 %210
  %282 = select i1 %280, i8* %281, i8* %277
  store i8* %282, i8** %85, align 8
  %283 = and i32 %213, 8192
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %289, label %285

285:                                              ; preds = %272
  %286 = load i64, i64* %174, align 8
  %287 = call fastcc i16* @ft_var_readpackedpoints(%struct.FT_StreamRec_* %11, i64 %286, i32* nonnull %7)
  %288 = load i32, i32* %7, align 4
  br label %291

289:                                              ; preds = %272
  %290 = load i32, i32* %8, align 4
  store i32 %290, i32* %7, align 4
  br label %291

291:                                              ; preds = %289, %285
  %292 = phi i32 [ %288, %285 ], [ %290, %289 ]
  %293 = phi i16* [ %287, %285 ], [ %208, %289 ]
  %294 = phi i16* [ %287, %285 ], [ %155, %289 ]
  %295 = load i64, i64* %174, align 8
  %296 = icmp eq i32 %292, 0
  %297 = select i1 %296, i32 %4, i32 %292
  %298 = call fastcc i64* @ft_var_readpackeddeltas(%struct.FT_StreamRec_* %11, i64 %295, i32 %297)
  %299 = load i64, i64* %174, align 8
  %300 = call fastcc i64* @ft_var_readpackeddeltas(%struct.FT_StreamRec_* %11, i64 %299, i32 %297)
  %301 = icmp ne i16* %294, null
  %302 = icmp ne i64* %300, null
  %303 = and i1 %301, %302
  %304 = icmp ne i64* %298, null
  %305 = and i1 %304, %303
  br i1 %305, label %306, label %680

306:                                              ; preds = %291
  %307 = icmp eq i16* %294, inttoptr (i64 -1 to i16*)
  br i1 %307, label %310, label %308

308:                                              ; preds = %306
  br i1 %24, label %387, label %309

309:                                              ; preds = %308
  br i1 %187, label %379, label %392

310:                                              ; preds = %306
  br i1 %24, label %680, label %311

311:                                              ; preds = %310
  %312 = shl i64 %270, 32
  %313 = ashr exact i64 %312, 32
  br label %314

314:                                              ; preds = %376, %311
  %315 = phi i64 [ 0, %311 ], [ %377, %376 ]
  %316 = getelementptr inbounds i64, i64* %157, i64 %315
  %317 = load i64, i64* %316, align 8
  %318 = getelementptr inbounds i64, i64* %162, i64 %315
  %319 = load i64, i64* %318, align 8
  %320 = getelementptr inbounds i64, i64* %298, i64 %315
  %321 = load i64, i64* %320, align 8
  %322 = shl i64 %321, 32
  %323 = ashr exact i64 %322, 32
  %324 = mul nsw i64 %323, %313
  %325 = ashr i64 %324, 63
  %326 = add nsw i64 %324, 32768
  %327 = add nsw i64 %326, %325
  %328 = shl i64 %327, 16
  %329 = ashr i64 %328, 32
  %330 = getelementptr inbounds i64, i64* %300, i64 %315
  %331 = load i64, i64* %330, align 8
  %332 = shl i64 %331, 32
  %333 = ashr exact i64 %332, 32
  %334 = mul nsw i64 %333, %313
  %335 = ashr i64 %334, 63
  %336 = add nsw i64 %334, 32768
  %337 = add nsw i64 %336, %335
  %338 = shl i64 %337, 16
  %339 = ashr i64 %338, 32
  %340 = icmp ult i64 %315, %182
  br i1 %340, label %341, label %344

341:                                              ; preds = %314
  %342 = add nsw i64 %329, %317
  store i64 %342, i64* %316, align 8
  %343 = add nsw i64 %339, %319
  store i64 %343, i64* %318, align 8
  br label %376

344:                                              ; preds = %314
  %345 = icmp eq i64 %315, %182
  br i1 %345, label %346, label %352

346:                                              ; preds = %344
  %347 = load i32, i32* %178, align 8
  %348 = and i32 %347, 4
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %352

350:                                              ; preds = %346
  %351 = add nsw i64 %329, %317
  store i64 %351, i64* %316, align 8
  br label %376

352:                                              ; preds = %346, %344
  %353 = icmp eq i64 %315, %183
  br i1 %353, label %354, label %360

354:                                              ; preds = %352
  %355 = load i32, i32* %178, align 8
  %356 = and i32 %355, 2
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %358, label %360

358:                                              ; preds = %354
  %359 = add nsw i64 %329, %317
  store i64 %359, i64* %316, align 8
  br label %376

360:                                              ; preds = %354, %352
  %361 = icmp eq i64 %315, %184
  br i1 %361, label %362, label %368

362:                                              ; preds = %360
  %363 = load i32, i32* %178, align 8
  %364 = and i32 %363, 32
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %368

366:                                              ; preds = %362
  %367 = add nsw i64 %339, %319
  store i64 %367, i64* %318, align 8
  br label %376

368:                                              ; preds = %362, %360
  %369 = icmp eq i64 %315, %185
  br i1 %369, label %370, label %376

370:                                              ; preds = %368
  %371 = load i32, i32* %178, align 8
  %372 = and i32 %371, 16
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %376

374:                                              ; preds = %370
  %375 = add nsw i64 %339, %319
  store i64 %375, i64* %318, align 8
  br label %376

376:                                              ; preds = %370, %350, %366, %374, %368, %358, %341
  %377 = add nuw nsw i64 %315, 1
  %378 = icmp eq i64 %377, %58
  br i1 %378, label %680, label %314

379:                                              ; preds = %392, %309
  %380 = phi i64 [ 0, %309 ], [ %406, %392 ]
  br i1 %189, label %387, label %381

381:                                              ; preds = %379
  %382 = getelementptr inbounds i8, i8* %69, i64 %380
  store i8 0, i8* %382, align 1
  %383 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %65, i64 %380
  %384 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %60, i64 %380
  %385 = bitcast %struct.FT_Vector_* %383 to i8*
  %386 = bitcast %struct.FT_Vector_* %384 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %385, i8* align 8 %386, i64 16, i1 false)
  br label %387

387:                                              ; preds = %381, %379, %308
  br i1 %296, label %447, label %388

388:                                              ; preds = %387
  %389 = shl i64 %270, 32
  %390 = ashr exact i64 %389, 32
  %391 = zext i32 %292 to i64
  br label %409

392:                                              ; preds = %309, %392
  %393 = phi i64 [ %406, %392 ], [ 0, %309 ]
  %394 = phi i64 [ %407, %392 ], [ %188, %309 ]
  %395 = getelementptr inbounds i8, i8* %69, i64 %393
  store i8 0, i8* %395, align 1
  %396 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %65, i64 %393
  %397 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %60, i64 %393
  %398 = bitcast %struct.FT_Vector_* %396 to i8*
  %399 = bitcast %struct.FT_Vector_* %397 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %398, i8* align 8 %399, i64 16, i1 false)
  %400 = or i64 %393, 1
  %401 = getelementptr inbounds i8, i8* %69, i64 %400
  store i8 0, i8* %401, align 1
  %402 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %65, i64 %400
  %403 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %60, i64 %400
  %404 = bitcast %struct.FT_Vector_* %402 to i8*
  %405 = bitcast %struct.FT_Vector_* %403 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %404, i8* align 8 %405, i64 16, i1 false)
  %406 = add nuw nsw i64 %393, 2
  %407 = add i64 %394, -2
  %408 = icmp eq i64 %407, 0
  br i1 %408, label %379, label %392

409:                                              ; preds = %444, %388
  %410 = phi i64 [ 0, %388 ], [ %445, %444 ]
  %411 = getelementptr inbounds i16, i16* %294, i64 %410
  %412 = load i16, i16* %411, align 2
  %413 = zext i16 %412 to i32
  %414 = icmp ult i32 %413, %4
  br i1 %414, label %415, label %444

415:                                              ; preds = %409
  %416 = zext i16 %412 to i64
  %417 = getelementptr inbounds i8, i8* %69, i64 %416
  store i8 1, i8* %417, align 1
  %418 = getelementptr inbounds i64, i64* %298, i64 %410
  %419 = load i64, i64* %418, align 8
  %420 = shl i64 %419, 32
  %421 = ashr exact i64 %420, 32
  %422 = mul nsw i64 %421, %390
  %423 = ashr i64 %422, 63
  %424 = add nsw i64 %422, 32768
  %425 = add nsw i64 %424, %423
  %426 = shl i64 %425, 16
  %427 = ashr i64 %426, 32
  %428 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %65, i64 %416, i32 0
  %429 = load i64, i64* %428, align 8
  %430 = add nsw i64 %427, %429
  store i64 %430, i64* %428, align 8
  %431 = getelementptr inbounds i64, i64* %300, i64 %410
  %432 = load i64, i64* %431, align 8
  %433 = shl i64 %432, 32
  %434 = ashr exact i64 %433, 32
  %435 = mul nsw i64 %434, %390
  %436 = ashr i64 %435, 63
  %437 = add nsw i64 %435, 32768
  %438 = add nsw i64 %437, %436
  %439 = shl i64 %438, 16
  %440 = ashr i64 %439, 32
  %441 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %65, i64 %416, i32 1
  %442 = load i64, i64* %441, align 8
  %443 = add nsw i64 %440, %442
  store i64 %443, i64* %441, align 8
  br label %444

444:                                              ; preds = %409, %415
  %445 = add nuw nsw i64 %410, 1
  %446 = icmp eq i64 %445, %391
  br i1 %446, label %447, label %409

447:                                              ; preds = %444, %387
  %448 = load i16, i16* %175, align 8
  %449 = icmp eq i16 %448, 0
  br i1 %449, label %624, label %450

450:                                              ; preds = %447, %618
  %451 = phi i64 [ %620, %618 ], [ 0, %447 ]
  %452 = phi i32 [ %619, %618 ], [ 0, %447 ]
  %453 = load i16*, i16** %176, align 8
  %454 = getelementptr inbounds i16, i16* %453, i64 %451
  %455 = load i16, i16* %454, align 2
  %456 = sext i16 %455 to i32
  %457 = icmp sgt i32 %452, %456
  br i1 %457, label %618, label %458

458:                                              ; preds = %450
  %459 = sext i32 %452 to i64
  %460 = sext i16 %455 to i64
  br label %461

461:                                              ; preds = %475, %458
  %462 = phi i64 [ %459, %458 ], [ %476, %475 ]
  %463 = getelementptr inbounds i8, i8* %69, i64 %462
  %464 = load i8, i8* %463, align 1
  %465 = icmp eq i8 %464, 0
  br i1 %465, label %475, label %466

466:                                              ; preds = %461
  %467 = trunc i64 %462 to i32
  %468 = add nsw i32 %467, 1
  %469 = icmp slt i32 %467, %456
  %470 = shl i64 %462, 32
  %471 = ashr exact i64 %470, 32
  br i1 %469, label %472, label %497

472:                                              ; preds = %466
  %473 = add nsw i64 %471, 1
  %474 = add nsw i64 %460, 1
  br label %478

475:                                              ; preds = %461
  %476 = add nsw i64 %462, 1
  %477 = icmp slt i64 %462, %460
  br i1 %477, label %461, label %616

478:                                              ; preds = %489, %472
  %479 = phi i64 [ %473, %472 ], [ %491, %489 ]
  %480 = phi i32 [ %468, %472 ], [ %492, %489 ]
  %481 = phi i32 [ %467, %472 ], [ %480, %489 ]
  %482 = phi i32 [ %467, %472 ], [ %490, %489 ]
  %483 = getelementptr inbounds i8, i8* %69, i64 %479
  %484 = load i8, i8* %483, align 1
  %485 = icmp eq i8 %484, 0
  br i1 %485, label %489, label %486

486:                                              ; preds = %478
  %487 = add nsw i32 %482, 1
  %488 = trunc i64 %479 to i32
  call fastcc void @tt_delta_interpolate(i32 %487, i32 %481, i32 %482, i32 %488, %struct.FT_Vector_* %60, %struct.FT_Vector_* %65) #11
  br label %489

489:                                              ; preds = %486, %478
  %490 = phi i32 [ %488, %486 ], [ %482, %478 ]
  %491 = add i64 %479, 1
  %492 = add nsw i32 %480, 1
  %493 = icmp eq i64 %491, %474
  br i1 %493, label %494, label %478

494:                                              ; preds = %489
  %495 = trunc i64 %474 to i32
  %496 = icmp eq i32 %490, %467
  br i1 %496, label %497, label %611

497:                                              ; preds = %466, %494
  %498 = phi i32 [ %495, %494 ], [ %468, %466 ]
  %499 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %65, i64 %471, i32 0
  %500 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %60, i64 %471, i32 0
  %501 = bitcast i64* %499 to <2 x i64>*
  %502 = load <2 x i64>, <2 x i64>* %501, align 8
  %503 = bitcast i64* %500 to <2 x i64>*
  %504 = load <2 x i64>, <2 x i64>* %503, align 8
  %505 = sub nsw <2 x i64> %502, %504
  %506 = extractelement <2 x i64> %505, i32 0
  %507 = extractelement <2 x i64> %505, i32 1
  %508 = or i64 %507, %506
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %618, label %510

510:                                              ; preds = %497
  %511 = icmp slt i32 %452, %467
  br i1 %511, label %512, label %534

512:                                              ; preds = %510
  %513 = shl i64 %462, 32
  %514 = ashr exact i64 %513, 32
  %515 = sub nsw i64 %514, %459
  %516 = xor i64 %459, -1
  %517 = add nsw i64 %514, %516
  %518 = and i64 %515, 3
  %519 = icmp eq i64 %518, 0
  br i1 %519, label %531, label %520

520:                                              ; preds = %512, %520
  %521 = phi i64 [ %528, %520 ], [ %459, %512 ]
  %522 = phi i64 [ %529, %520 ], [ %518, %512 ]
  %523 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %65, i64 %521, i32 0
  %524 = bitcast i64* %523 to <2 x i64>*
  %525 = load <2 x i64>, <2 x i64>* %524, align 8
  %526 = add nsw <2 x i64> %525, %505
  %527 = bitcast i64* %523 to <2 x i64>*
  store <2 x i64> %526, <2 x i64>* %527, align 8
  %528 = add nsw i64 %521, 1
  %529 = add i64 %522, -1
  %530 = icmp eq i64 %529, 0
  br i1 %530, label %531, label %520, !llvm.loop !37

531:                                              ; preds = %520, %512
  %532 = phi i64 [ %459, %512 ], [ %528, %520 ]
  %533 = icmp ult i64 %517, 3
  br i1 %533, label %534, label %557

534:                                              ; preds = %531, %557, %510
  br i1 %469, label %535, label %618

535:                                              ; preds = %534
  %536 = shl i64 %462, 32
  %537 = ashr exact i64 %536, 32
  %538 = sub nsw i64 %460, %537
  %539 = xor i64 %537, -1
  %540 = add nsw i64 %539, %460
  %541 = and i64 %538, 3
  %542 = icmp eq i64 %541, 0
  br i1 %542, label %554, label %543

543:                                              ; preds = %535, %543
  %544 = phi i64 [ %546, %543 ], [ %471, %535 ]
  %545 = phi i64 [ %552, %543 ], [ %541, %535 ]
  %546 = add nsw i64 %544, 1
  %547 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %65, i64 %546, i32 0
  %548 = bitcast i64* %547 to <2 x i64>*
  %549 = load <2 x i64>, <2 x i64>* %548, align 8
  %550 = add nsw <2 x i64> %549, %505
  %551 = bitcast i64* %547 to <2 x i64>*
  store <2 x i64> %550, <2 x i64>* %551, align 8
  %552 = add i64 %545, -1
  %553 = icmp eq i64 %552, 0
  br i1 %553, label %554, label %543, !llvm.loop !38

554:                                              ; preds = %543, %535
  %555 = phi i64 [ %471, %535 ], [ %546, %543 ]
  %556 = icmp ult i64 %540, 3
  br i1 %556, label %618, label %584

557:                                              ; preds = %531, %557
  %558 = phi i64 [ %582, %557 ], [ %532, %531 ]
  %559 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %65, i64 %558, i32 0
  %560 = bitcast i64* %559 to <2 x i64>*
  %561 = load <2 x i64>, <2 x i64>* %560, align 8
  %562 = add nsw <2 x i64> %561, %505
  %563 = bitcast i64* %559 to <2 x i64>*
  store <2 x i64> %562, <2 x i64>* %563, align 8
  %564 = add nsw i64 %558, 1
  %565 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %65, i64 %564, i32 0
  %566 = bitcast i64* %565 to <2 x i64>*
  %567 = load <2 x i64>, <2 x i64>* %566, align 8
  %568 = add nsw <2 x i64> %567, %505
  %569 = bitcast i64* %565 to <2 x i64>*
  store <2 x i64> %568, <2 x i64>* %569, align 8
  %570 = add nsw i64 %558, 2
  %571 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %65, i64 %570, i32 0
  %572 = bitcast i64* %571 to <2 x i64>*
  %573 = load <2 x i64>, <2 x i64>* %572, align 8
  %574 = add nsw <2 x i64> %573, %505
  %575 = bitcast i64* %571 to <2 x i64>*
  store <2 x i64> %574, <2 x i64>* %575, align 8
  %576 = add nsw i64 %558, 3
  %577 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %65, i64 %576, i32 0
  %578 = bitcast i64* %577 to <2 x i64>*
  %579 = load <2 x i64>, <2 x i64>* %578, align 8
  %580 = add nsw <2 x i64> %579, %505
  %581 = bitcast i64* %577 to <2 x i64>*
  store <2 x i64> %580, <2 x i64>* %581, align 8
  %582 = add nsw i64 %558, 4
  %583 = icmp eq i64 %582, %471
  br i1 %583, label %534, label %557

584:                                              ; preds = %554, %584
  %585 = phi i64 [ %604, %584 ], [ %555, %554 ]
  %586 = add nsw i64 %585, 1
  %587 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %65, i64 %586, i32 0
  %588 = bitcast i64* %587 to <2 x i64>*
  %589 = load <2 x i64>, <2 x i64>* %588, align 8
  %590 = add nsw <2 x i64> %589, %505
  %591 = bitcast i64* %587 to <2 x i64>*
  store <2 x i64> %590, <2 x i64>* %591, align 8
  %592 = add nsw i64 %585, 2
  %593 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %65, i64 %592, i32 0
  %594 = bitcast i64* %593 to <2 x i64>*
  %595 = load <2 x i64>, <2 x i64>* %594, align 8
  %596 = add nsw <2 x i64> %595, %505
  %597 = bitcast i64* %593 to <2 x i64>*
  store <2 x i64> %596, <2 x i64>* %597, align 8
  %598 = add nsw i64 %585, 3
  %599 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %65, i64 %598, i32 0
  %600 = bitcast i64* %599 to <2 x i64>*
  %601 = load <2 x i64>, <2 x i64>* %600, align 8
  %602 = add nsw <2 x i64> %601, %505
  %603 = bitcast i64* %599 to <2 x i64>*
  store <2 x i64> %602, <2 x i64>* %603, align 8
  %604 = add nsw i64 %585, 4
  %605 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %65, i64 %604, i32 0
  %606 = bitcast i64* %605 to <2 x i64>*
  %607 = load <2 x i64>, <2 x i64>* %606, align 8
  %608 = add nsw <2 x i64> %607, %505
  %609 = bitcast i64* %605 to <2 x i64>*
  store <2 x i64> %608, <2 x i64>* %609, align 8
  %610 = icmp eq i64 %604, %460
  br i1 %610, label %618, label %584

611:                                              ; preds = %494
  %612 = add nsw i32 %490, 1
  call fastcc void @tt_delta_interpolate(i32 %612, i32 %456, i32 %490, i32 %467, %struct.FT_Vector_* %60, %struct.FT_Vector_* %65) #11
  %613 = icmp sgt i32 %467, 0
  br i1 %613, label %614, label %618

614:                                              ; preds = %611
  %615 = add nsw i32 %467, -1
  call fastcc void @tt_delta_interpolate(i32 %452, i32 %615, i32 %490, i32 %467, %struct.FT_Vector_* %60, %struct.FT_Vector_* %65) #11
  br label %618

616:                                              ; preds = %475
  %617 = trunc i64 %476 to i32
  br label %618

618:                                              ; preds = %554, %584, %616, %614, %611, %534, %497, %450
  %619 = phi i32 [ %495, %614 ], [ %495, %611 ], [ %498, %497 ], [ %498, %534 ], [ %452, %450 ], [ %617, %616 ], [ %498, %584 ], [ %498, %554 ]
  %620 = add nuw nsw i64 %451, 1
  %621 = load i16, i16* %175, align 8
  %622 = sext i16 %621 to i64
  %623 = icmp slt i64 %620, %622
  br i1 %623, label %450, label %624

624:                                              ; preds = %618, %447
  br i1 %24, label %680, label %625

625:                                              ; preds = %624, %677
  %626 = phi i64 [ %678, %677 ], [ 0, %624 ]
  %627 = getelementptr inbounds i64, i64* %157, i64 %626
  %628 = load i64, i64* %627, align 8
  %629 = getelementptr inbounds i64, i64* %162, i64 %626
  %630 = load i64, i64* %629, align 8
  %631 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %65, i64 %626, i32 0
  %632 = load i64, i64* %631, align 8
  %633 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %60, i64 %626, i32 0
  %634 = load i64, i64* %633, align 8
  %635 = sub nsw i64 %632, %634
  %636 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %65, i64 %626, i32 1
  %637 = load i64, i64* %636, align 8
  %638 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %60, i64 %626, i32 1
  %639 = load i64, i64* %638, align 8
  %640 = sub nsw i64 %637, %639
  %641 = icmp ult i64 %626, %182
  br i1 %641, label %642, label %645

642:                                              ; preds = %625
  %643 = add nsw i64 %635, %628
  store i64 %643, i64* %627, align 8
  %644 = add nsw i64 %640, %630
  store i64 %644, i64* %629, align 8
  br label %677

645:                                              ; preds = %625
  %646 = icmp eq i64 %626, %182
  br i1 %646, label %647, label %653

647:                                              ; preds = %645
  %648 = load i32, i32* %178, align 8
  %649 = and i32 %648, 4
  %650 = icmp eq i32 %649, 0
  br i1 %650, label %651, label %653

651:                                              ; preds = %647
  %652 = add nsw i64 %635, %628
  store i64 %652, i64* %627, align 8
  br label %677

653:                                              ; preds = %647, %645
  %654 = icmp eq i64 %626, %183
  br i1 %654, label %655, label %661

655:                                              ; preds = %653
  %656 = load i32, i32* %178, align 8
  %657 = and i32 %656, 2
  %658 = icmp eq i32 %657, 0
  br i1 %658, label %659, label %661

659:                                              ; preds = %655
  %660 = add nsw i64 %635, %628
  store i64 %660, i64* %627, align 8
  br label %677

661:                                              ; preds = %655, %653
  %662 = icmp eq i64 %626, %184
  br i1 %662, label %663, label %669

663:                                              ; preds = %661
  %664 = load i32, i32* %178, align 8
  %665 = and i32 %664, 32
  %666 = icmp eq i32 %665, 0
  br i1 %666, label %667, label %669

667:                                              ; preds = %663
  %668 = add nsw i64 %640, %630
  store i64 %668, i64* %629, align 8
  br label %677

669:                                              ; preds = %663, %661
  %670 = icmp eq i64 %626, %185
  br i1 %670, label %671, label %677

671:                                              ; preds = %669
  %672 = load i32, i32* %178, align 8
  %673 = and i32 %672, 16
  %674 = icmp eq i32 %673, 0
  br i1 %674, label %675, label %677

675:                                              ; preds = %671
  %676 = add nsw i64 %640, %630
  store i64 %676, i64* %629, align 8
  br label %677

677:                                              ; preds = %671, %651, %667, %675, %669, %659, %642
  %678 = add nuw nsw i64 %626, 1
  %679 = icmp eq i64 %678, %58
  br i1 %679, label %680, label %625

680:                                              ; preds = %677, %376, %310, %624, %291
  %681 = icmp eq i16* %293, inttoptr (i64 -1 to i16*)
  br i1 %681, label %684, label %682

682:                                              ; preds = %680
  %683 = bitcast i16* %293 to i8*
  call void @ft_mem_free(%struct.FT_MemoryRec_* %13, i8* %683) #11
  br label %684

684:                                              ; preds = %680, %682
  %685 = phi i16* [ null, %682 ], [ inttoptr (i64 -1 to i16*), %680 ]
  %686 = bitcast i64* %298 to i8*
  call void @ft_mem_free(%struct.FT_MemoryRec_* %13, i8* %686) #11
  %687 = bitcast i64* %300 to i8*
  call void @ft_mem_free(%struct.FT_MemoryRec_* %13, i8* %687) #11
  %688 = load i8*, i8** %173, align 8
  %689 = load i8*, i8** %88, align 8
  %690 = ptrtoint i8* %688 to i64
  %691 = ptrtoint i8* %689 to i64
  %692 = sub i64 %690, %691
  %693 = icmp ult i64 %276, %692
  %694 = getelementptr inbounds i8, i8* %689, i64 %276
  %695 = select i1 %693, i8* %694, i8* %688
  store i8* %695, i8** %85, align 8
  br label %697

696:                                              ; preds = %228
  store i32 8, i32* %6, align 4
  br label %737

697:                                              ; preds = %269, %684
  %698 = phi i16* [ %685, %684 ], [ %208, %269 ]
  %699 = zext i16 %211 to i64
  %700 = add i64 %210, %699
  %701 = add nuw nsw i32 %209, 1
  %702 = icmp eq i32 %701, %120
  br i1 %702, label %204, label %207

703:                                              ; preds = %703, %205
  %704 = phi i64 [ 0, %205 ], [ %735, %703 ]
  %705 = getelementptr inbounds i64, i64* %157, i64 %704
  %706 = load i64, i64* %705, align 8
  %707 = add nsw i64 %706, 512
  %708 = ashr i64 %707, 10
  %709 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3, i64 %704, i32 0
  %710 = load i64, i64* %709, align 8
  %711 = add nsw i64 %708, %710
  store i64 %711, i64* %709, align 8
  %712 = getelementptr inbounds i64, i64* %162, i64 %704
  %713 = load i64, i64* %712, align 8
  %714 = add nsw i64 %713, 512
  %715 = ashr i64 %714, 10
  %716 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3, i64 %704, i32 1
  %717 = load i64, i64* %716, align 8
  %718 = add nsw i64 %715, %717
  store i64 %718, i64* %716, align 8
  %719 = load i64, i64* %705, align 8
  %720 = shl i64 %719, 32
  %721 = add i64 %720, 140737488355328
  %722 = ashr i64 %721, 48
  %723 = load %struct.FT_Vector_*, %struct.FT_Vector_** %206, align 8
  %724 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %723, i64 %704, i32 0
  %725 = load i64, i64* %724, align 8
  %726 = add nsw i64 %722, %725
  store i64 %726, i64* %724, align 8
  %727 = load i64, i64* %712, align 8
  %728 = shl i64 %727, 32
  %729 = add i64 %728, 140737488355328
  %730 = ashr i64 %729, 48
  %731 = load %struct.FT_Vector_*, %struct.FT_Vector_** %206, align 8
  %732 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %731, i64 %704, i32 1
  %733 = load i64, i64* %732, align 8
  %734 = add nsw i64 %730, %733
  store i64 %734, i64* %732, align 8
  %735 = add nuw nsw i64 %704, 1
  %736 = icmp eq i64 %735, %58
  br i1 %736, label %737, label %703

737:                                              ; preds = %703, %204, %153, %160, %696
  %738 = phi i8* [ null, %153 ], [ %161, %160 ], [ %161, %696 ], [ %161, %204 ], [ %161, %703 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %13, i8* %156) #11
  call void @ft_mem_free(%struct.FT_MemoryRec_* %13, i8* %738) #11
  %739 = icmp eq i16* %155, inttoptr (i64 -1 to i16*)
  br i1 %739, label %745, label %740

740:                                              ; preds = %124, %106, %99, %84, %737
  %741 = phi i16* [ %155, %737 ], [ null, %84 ], [ null, %99 ], [ null, %106 ], [ null, %124 ]
  %742 = phi i8* [ %109, %737 ], [ null, %84 ], [ null, %99 ], [ %109, %106 ], [ %109, %124 ]
  %743 = phi i8* [ %102, %737 ], [ null, %84 ], [ %102, %99 ], [ %102, %106 ], [ %102, %124 ]
  %744 = bitcast i16* %741 to i8*
  call void @ft_mem_free(%struct.FT_MemoryRec_* %13, i8* %744) #11
  br label %745

745:                                              ; preds = %737, %740
  %746 = phi i8* [ %109, %737 ], [ %742, %740 ]
  %747 = phi i8* [ %102, %737 ], [ %743, %740 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %13, i8* %95) #11
  call void @ft_mem_free(%struct.FT_MemoryRec_* %13, i8* %747) #11
  call void @ft_mem_free(%struct.FT_MemoryRec_* %13, i8* %746) #11
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %11) #11
  br label %748

748:                                              ; preds = %81, %72, %68, %63, %57, %745
  %749 = phi i8* [ null, %57 ], [ %64, %63 ], [ %64, %68 ], [ %64, %72 ], [ %64, %81 ], [ %64, %745 ]
  %750 = phi i8* [ null, %57 ], [ null, %63 ], [ %69, %68 ], [ %69, %72 ], [ %69, %81 ], [ %69, %745 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %13, i8* %59) #11
  call void @ft_mem_free(%struct.FT_MemoryRec_* %13, i8* %749) #11
  call void @ft_mem_free(%struct.FT_MemoryRec_* %13, i8* %750) #11
  %751 = load i32, i32* %6, align 4
  br label %752

752:                                              ; preds = %46, %42, %5, %748
  %753 = phi i32 [ %751, %748 ], [ 6, %5 ], [ 0, %42 ], [ 0, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  ret i32 %753
}

declare hidden void @FT_GlyphLoader_Add(%struct.FT_GlyphLoaderRec_*) local_unnamed_addr #4

declare %struct.FT_ListNodeRec_* @FT_List_Find(%struct.FT_ListRec_*, i8*) local_unnamed_addr #4

declare void @FT_List_Add(%struct.FT_ListRec_*, %struct.FT_ListNodeRec_*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @tt_delta_interpolate(i32, i32, i32, i32, %struct.FT_Vector_* nocapture readonly, %struct.FT_Vector_* nocapture) unnamed_addr #2 {
  %7 = icmp sgt i32 %0, %1
  br i1 %7, label %100, label %8

8:                                                ; preds = %6
  %9 = sext i32 %0 to i64
  %10 = sext i32 %1 to i64
  %11 = sext i32 %2 to i64
  %12 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4, i64 %11, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = sext i32 %3 to i64
  %15 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4, i64 %14, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp sgt i64 %13, %16
  %18 = select i1 %17, i32 %3, i32 %2
  %19 = select i1 %17, i32 %2, i32 %3
  %20 = sext i32 %18 to i64
  %21 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4, i64 %20, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = sext i32 %19 to i64
  %24 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4, i64 %23, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %5, i64 %20, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %5, i64 %23, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %22
  %31 = sub i64 %29, %25
  %32 = icmp ne i64 %25, %22
  %33 = icmp eq i64 %29, %27
  %34 = or i1 %32, %33
  br i1 %34, label %35, label %71

35:                                               ; preds = %8
  br i1 %32, label %36, label %42

36:                                               ; preds = %35
  %37 = sub nsw i64 %29, %27
  %38 = sub nsw i64 %25, %22
  %39 = tail call i64 @FT_DivFix(i64 %37, i64 %38) #11
  %40 = shl i64 %39, 32
  %41 = ashr exact i64 %40, 32
  br label %42

42:                                               ; preds = %36, %35
  %43 = phi i64 [ %41, %36 ], [ 0, %35 ]
  br label %44

44:                                               ; preds = %66, %42
  %45 = phi i64 [ %69, %66 ], [ %9, %42 ]
  %46 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4, i64 %45, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = icmp sgt i64 %47, %22
  br i1 %48, label %51, label %49

49:                                               ; preds = %44
  %50 = add nsw i64 %30, %47
  br label %66

51:                                               ; preds = %44
  %52 = icmp slt i64 %47, %25
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = add nsw i64 %31, %47
  br label %66

55:                                               ; preds = %51
  %56 = sub nsw i64 %47, %22
  %57 = shl i64 %56, 32
  %58 = ashr exact i64 %57, 32
  %59 = mul nsw i64 %58, %43
  %60 = ashr i64 %59, 63
  %61 = add nsw i64 %59, 32768
  %62 = add nsw i64 %61, %60
  %63 = shl i64 %62, 16
  %64 = ashr i64 %63, 32
  %65 = add nsw i64 %64, %27
  br label %66

66:                                               ; preds = %53, %55, %49
  %67 = phi i64 [ %50, %49 ], [ %54, %53 ], [ %65, %55 ]
  %68 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %5, i64 %45, i32 0
  store i64 %67, i64* %68, align 8
  %69 = add nsw i64 %45, 1
  %70 = icmp slt i64 %45, %10
  br i1 %70, label %44, label %71

71:                                               ; preds = %66, %8
  %72 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4, i64 0, i32 0
  %73 = getelementptr inbounds i64, i64* %72, i64 1
  %74 = bitcast i64* %73 to %struct.FT_Vector_*
  %75 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %5, i64 0, i32 0
  %76 = getelementptr inbounds i64, i64* %75, i64 1
  %77 = bitcast i64* %76 to %struct.FT_Vector_*
  %78 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %74, i64 %20, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %74, i64 %23, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = icmp sgt i64 %79, %81
  %83 = select i1 %82, i32 %19, i32 %18
  %84 = select i1 %82, i32 %18, i32 %19
  %85 = sext i32 %83 to i64
  %86 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %74, i64 %85, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = sext i32 %84 to i64
  %89 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %74, i64 %88, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %77, i64 %85, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %77, i64 %88, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %87
  %96 = sub i64 %94, %90
  %97 = icmp ne i64 %90, %87
  %98 = icmp eq i64 %94, %92
  %99 = or i1 %97, %98
  br i1 %99, label %101, label %100

100:                                              ; preds = %132, %71, %6
  ret void

101:                                              ; preds = %71
  br i1 %97, label %102, label %108

102:                                              ; preds = %101
  %103 = sub nsw i64 %94, %92
  %104 = sub nsw i64 %90, %87
  %105 = tail call i64 @FT_DivFix(i64 %103, i64 %104) #11
  %106 = shl i64 %105, 32
  %107 = ashr exact i64 %106, 32
  br label %108

108:                                              ; preds = %101, %102
  %109 = phi i64 [ %107, %102 ], [ 0, %101 ]
  br label %110

110:                                              ; preds = %132, %108
  %111 = phi i64 [ %135, %132 ], [ %9, %108 ]
  %112 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %74, i64 %111, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = icmp sgt i64 %113, %87
  br i1 %114, label %117, label %115

115:                                              ; preds = %110
  %116 = add nsw i64 %95, %113
  br label %132

117:                                              ; preds = %110
  %118 = icmp slt i64 %113, %90
  br i1 %118, label %121, label %119

119:                                              ; preds = %117
  %120 = add nsw i64 %96, %113
  br label %132

121:                                              ; preds = %117
  %122 = sub nsw i64 %113, %87
  %123 = shl i64 %122, 32
  %124 = ashr exact i64 %123, 32
  %125 = mul nsw i64 %124, %109
  %126 = ashr i64 %125, 63
  %127 = add nsw i64 %125, 32768
  %128 = add nsw i64 %127, %126
  %129 = shl i64 %128, 16
  %130 = ashr i64 %129, 32
  %131 = add nsw i64 %130, %92
  br label %132

132:                                              ; preds = %121, %119, %115
  %133 = phi i64 [ %116, %115 ], [ %120, %119 ], [ %131, %121 ]
  %134 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %77, i64 %111, i32 0
  store i64 %133, i64* %134, align 8
  %135 = add nsw i64 %111, 1
  %136 = icmp slt i64 %111, %10
  br i1 %136, label %110, label %100
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @TT_Hint_Glyph(%struct.TT_LoaderRec_* nocapture, i8 zeroext) unnamed_addr #2 {
  %3 = bitcast %struct.TT_LoaderRec_* %0 to %struct.FT_FaceRec_**
  %4 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %4, i64 0, i32 24
  %6 = bitcast %struct.FT_DriverRec_** %5 to %struct.TT_DriverRec_**
  %7 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %6, align 8
  %8 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17
  %9 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 2
  %10 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %9, align 8
  %11 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %10, i64 0, i32 17
  %12 = load i64, i64* %11, align 8
  %13 = icmp sgt i64 %12, 0
  br i1 %13, label %14, label %25

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 5
  %16 = bitcast %struct.FT_Vector_** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 6
  %19 = bitcast %struct.FT_Vector_** %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 3
  %22 = load i16, i16* %21, align 4
  %23 = zext i16 %22 to i64
  %24 = shl nuw nsw i64 %23, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %20, i64 %24, i1 false)
  br label %25

25:                                               ; preds = %14, %2
  %26 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 18
  %27 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %26, align 8
  %28 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %27, i64 0, i32 17
  %29 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 1
  %30 = load %struct.TT_SizeRec_*, %struct.TT_SizeRec_** %29, align 8
  %31 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %30, i64 0, i32 15
  %32 = bitcast %struct.TT_GraphicsState_* %28 to i8*
  %33 = bitcast %struct.TT_GraphicsState_* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 96, i1 false)
  %34 = icmp eq i8 %1, 0
  br i1 %34, label %50, label %35

35:                                               ; preds = %25
  %36 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %26, align 8
  %37 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %36, i64 0, i32 15, i32 2
  store i64 65536, i64* %37, align 8
  %38 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %26, align 8
  %39 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %38, i64 0, i32 15, i32 3
  store i64 65536, i64* %39, align 8
  %40 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 7
  %41 = bitcast %struct.FT_Vector_** %40 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 6
  %44 = bitcast %struct.FT_Vector_** %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 3
  %47 = load i16, i16* %46, align 4
  %48 = zext i16 %47 to i64
  %49 = shl nuw nsw i64 %48, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %45, i64 %49, i1 false)
  br label %65

50:                                               ; preds = %25
  %51 = load %struct.TT_SizeRec_*, %struct.TT_SizeRec_** %29, align 8
  %52 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %51, i64 0, i32 1
  %53 = load %struct.FT_Size_Metrics_*, %struct.FT_Size_Metrics_** %52, align 8
  %54 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %53, i64 0, i32 2
  %55 = load i64, i64* %54, align 8
  %56 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %26, align 8
  %57 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %56, i64 0, i32 15, i32 2
  store i64 %55, i64* %57, align 8
  %58 = load %struct.TT_SizeRec_*, %struct.TT_SizeRec_** %29, align 8
  %59 = getelementptr inbounds %struct.TT_SizeRec_, %struct.TT_SizeRec_* %58, i64 0, i32 1
  %60 = load %struct.FT_Size_Metrics_*, %struct.FT_Size_Metrics_** %59, align 8
  %61 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %60, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %26, align 8
  %64 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %63, i64 0, i32 15, i32 3
  store i64 %62, i64* %64, align 8
  br label %65

65:                                               ; preds = %50, %35
  %66 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 6
  %67 = load %struct.FT_Vector_*, %struct.FT_Vector_** %66, align 8
  %68 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 17, i32 3
  %69 = load i16, i16* %68, align 4
  %70 = zext i16 %69 to i64
  %71 = add nsw i64 %70, -4
  %72 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %67, i64 %71, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = add nsw i64 %73, 32
  %75 = and i64 %74, -64
  store i64 %75, i64* %72, align 8
  %76 = load %struct.FT_Vector_*, %struct.FT_Vector_** %66, align 8
  %77 = load i16, i16* %68, align 4
  %78 = zext i16 %77 to i64
  %79 = add nsw i64 %78, -3
  %80 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 %79, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = add nsw i64 %81, 32
  %83 = and i64 %82, -64
  store i64 %83, i64* %80, align 8
  %84 = load %struct.FT_Vector_*, %struct.FT_Vector_** %66, align 8
  %85 = load i16, i16* %68, align 4
  %86 = zext i16 %85 to i64
  %87 = add nsw i64 %86, -2
  %88 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %84, i64 %87, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = add nsw i64 %89, 32
  %91 = and i64 %90, -64
  store i64 %91, i64* %88, align 8
  %92 = load %struct.FT_Vector_*, %struct.FT_Vector_** %66, align 8
  %93 = load i16, i16* %68, align 4
  %94 = zext i16 %93 to i64
  %95 = add nsw i64 %94, -1
  %96 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %92, i64 %95, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = add nsw i64 %97, 32
  %99 = and i64 %98, -64
  store i64 %99, i64* %96, align 8
  br i1 %13, label %100, label %173

100:                                              ; preds = %65
  %101 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 3
  %102 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %101, align 8
  %103 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %102, i64 0, i32 6, i32 0, i32 3
  %104 = load i8*, i8** %103, align 8
  %105 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %26, align 8
  %106 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %105, i64 0, i32 32
  %107 = bitcast i8** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %105, i64 0, i32 46, i64 2, i32 0
  %110 = bitcast i8** %109 to i64*
  store i64 %108, i64* %110, align 8
  %111 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %105, i64 0, i32 46, i64 2, i32 1
  store i64 %12, i64* %111, align 8
  %112 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %26, align 8
  %113 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %112, i64 0, i32 57
  store i8 %1, i8* %113, align 8
  %114 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %26, align 8
  %115 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %114, i64 0, i32 12
  %116 = bitcast %struct.TT_GlyphZoneRec_* %115 to i8*
  %117 = bitcast %struct.TT_GlyphZoneRec_* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %117, i64 64, i1 false)
  %118 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %26, align 8
  %119 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 46, i64 2
  %120 = bitcast %struct.TT_CodeRange_* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 20
  %123 = bitcast i8** %122 to i64*
  store i64 %121, i64* %123, align 8
  %124 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 46, i64 2, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 22
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 21
  store i64 0, i64* %127, align 8
  %128 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 19
  store i32 3, i32* %128, align 4
  %129 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 9
  %130 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 12
  %131 = bitcast %struct.TT_GlyphZoneRec_* %129 to i8*
  %132 = bitcast %struct.TT_GlyphZoneRec_* %130 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 64, i1 false) #11
  %133 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 10
  %134 = bitcast %struct.TT_GlyphZoneRec_* %133 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %132, i64 64, i1 false) #11
  %135 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 11
  %136 = bitcast %struct.TT_GlyphZoneRec_* %135 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %132, i64 64, i1 false) #11
  %137 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 17, i32 18
  store i16 1, i16* %137, align 4
  %138 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 17, i32 19
  store i16 1, i16* %138, align 2
  %139 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 17, i32 20
  store i16 1, i16* %139, align 8
  %140 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 17, i32 4
  %141 = getelementptr inbounds %struct.FT_UnitVector_, %struct.FT_UnitVector_* %140, i64 0, i32 0
  store i16 16384, i16* %141, align 2
  %142 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 17, i32 4, i32 1
  store i16 0, i16* %142, align 2
  %143 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 17, i32 5
  %144 = bitcast %struct.FT_UnitVector_* %140 to i32*
  %145 = bitcast %struct.FT_UnitVector_* %143 to i32*
  %146 = load i32, i32* %144, align 2
  store i32 %146, i32* %145, align 2
  %147 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 17, i32 3
  %148 = bitcast %struct.FT_UnitVector_* %147 to i32*
  store i32 %146, i32* %148, align 2
  %149 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 17, i32 8
  store i32 1, i32* %149, align 8
  %150 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 17, i32 6
  store i64 1, i64* %150, align 8
  %151 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 4
  store i64 0, i64* %151, align 8
  %152 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 41
  store i32 0, i32* %152, align 8
  %153 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %118, i64 0, i32 0
  %154 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %153, align 8
  %155 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %154, i64 0, i32 43
  %156 = load i32 (i8*)*, i32 (i8*)** %155, align 8
  %157 = bitcast %struct.TT_ExecContextRec_* %118 to i8*
  %158 = tail call i32 %156(i8* %157) #11
  %159 = icmp eq i32 %158, 0
  %160 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %26, align 8
  br i1 %159, label %165, label %161

161:                                              ; preds = %100
  %162 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %160, i64 0, i32 58
  %163 = load i8, i8* %162, align 1
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %165, label %206

165:                                              ; preds = %100, %161
  %166 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %160, i64 0, i32 17, i32 17
  %167 = load i32, i32* %166, align 8
  %168 = load i8, i8* %104, align 1
  %169 = trunc i32 %167 to i8
  %170 = shl i8 %169, 5
  %171 = or i8 %168, %170
  %172 = or i8 %171, 4
  store i8 %172, i8* %104, align 1
  br label %173

173:                                              ; preds = %165, %65
  %174 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %7, i64 0, i32 2
  %175 = load i32, i32* %174, align 8
  %176 = icmp eq i32 %175, 40
  br i1 %176, label %177, label %182

177:                                              ; preds = %173
  %178 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %26, align 8
  %179 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %178, i64 0, i32 73
  %180 = load i8, i8* %179, align 1
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %182, label %206

182:                                              ; preds = %177, %173
  %183 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 14
  %184 = load %struct.FT_Vector_*, %struct.FT_Vector_** %66, align 8
  %185 = load i16, i16* %68, align 4
  %186 = zext i16 %185 to i64
  %187 = add nsw i64 %186, -4
  %188 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %184, i64 %187
  %189 = bitcast %struct.FT_Vector_* %183 to i8*
  %190 = bitcast %struct.FT_Vector_* %188 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* align 8 %190, i64 16, i1 false)
  %191 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 15
  %192 = add nsw i64 %186, -3
  %193 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %184, i64 %192
  %194 = bitcast %struct.FT_Vector_* %191 to i8*
  %195 = bitcast %struct.FT_Vector_* %193 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %194, i8* align 8 %195, i64 16, i1 false)
  %196 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 24
  %197 = add nsw i64 %186, -2
  %198 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %184, i64 %197
  %199 = bitcast %struct.FT_Vector_* %196 to i8*
  %200 = bitcast %struct.FT_Vector_* %198 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %199, i8* align 8 %200, i64 16, i1 false)
  %201 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 25
  %202 = add nsw i64 %186, -1
  %203 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %184, i64 %202
  %204 = bitcast %struct.FT_Vector_* %201 to i8*
  %205 = bitcast %struct.FT_Vector_* %203 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %204, i8* align 8 %205, i64 16, i1 false)
  br label %206

206:                                              ; preds = %182, %177, %161
  %207 = phi i32 [ %158, %161 ], [ 0, %177 ], [ 0, %182 ]
  ret i32 %207
}

declare void @FT_Outline_Transform(%struct.FT_Outline_*, %struct.FT_Matrix_*) local_unnamed_addr #4

declare hidden i64 @FT_Hypot(i64, i64) local_unnamed_addr #4

declare hidden i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_*, i32, i32) local_unnamed_addr #4

declare hidden i32 @FT_Stream_Read(%struct.FT_StreamRec_*, i8*, i64) local_unnamed_addr #4

declare void @FT_List_Finalize(%struct.FT_ListRec_*, void (%struct.FT_MemoryRec_*, i8*, i8*)*, %struct.FT_MemoryRec_*, i8*) local_unnamed_addr #4

declare void @FT_Outline_Get_CBox(%struct.FT_Outline_*, %struct.FT_BBox_*) local_unnamed_addr #4

declare hidden void @FT_Request_Metrics(%struct.FT_FaceRec_*, %struct.FT_Size_RequestRec_*) local_unnamed_addr #4

declare hidden void @FT_Select_Metrics(%struct.FT_FaceRec_*, i64) local_unnamed_addr #4

; Function Attrs: noinline norecurse nounwind readnone ssp uwtable
define internal fastcc i32 @TT_MulFix14_long_long(i32, i32) unnamed_addr #10 {
  %3 = sext i32 %0 to i64
  %4 = sext i32 %1 to i64
  %5 = mul nsw i64 %4, %3
  %6 = ashr i64 %5, 63
  %7 = add nsw i64 %5, 8192
  %8 = add nsw i64 %7, %6
  %9 = lshr i64 %8, 14
  %10 = trunc i64 %9 to i32
  ret i32 %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @Project_x(%struct.TT_ExecContextRec_* nocapture readnone, i64 returned, i64) #1 {
  ret i64 %1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @Project_y(%struct.TT_ExecContextRec_* nocapture readnone, i64, i64 returned) #1 {
  ret i64 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @Project(%struct.TT_ExecContextRec_* nocapture readonly, i64, i64) #5 {
  %4 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 4, i32 0
  %5 = load i16, i16* %4, align 2
  %6 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 4, i32 1
  %7 = load i16, i16* %6, align 2
  %8 = shl i64 %1, 32
  %9 = ashr exact i64 %8, 32
  %10 = sext i16 %5 to i64
  %11 = mul nsw i64 %9, %10
  %12 = shl i64 %2, 32
  %13 = ashr exact i64 %12, 32
  %14 = sext i16 %7 to i64
  %15 = mul nsw i64 %13, %14
  %16 = add nsw i64 %15, %11
  %17 = ashr i64 %16, 63
  %18 = add nsw i64 %16, 8192
  %19 = add nsw i64 %18, %17
  %20 = shl i64 %19, 18
  %21 = ashr i64 %20, 32
  ret i64 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @Dual_Project(%struct.TT_ExecContextRec_* nocapture readonly, i64, i64) #5 {
  %4 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 3, i32 0
  %5 = load i16, i16* %4, align 2
  %6 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 3, i32 1
  %7 = load i16, i16* %6, align 2
  %8 = shl i64 %1, 32
  %9 = ashr exact i64 %8, 32
  %10 = sext i16 %5 to i64
  %11 = mul nsw i64 %9, %10
  %12 = shl i64 %2, 32
  %13 = ashr exact i64 %12, 32
  %14 = sext i16 %7 to i64
  %15 = mul nsw i64 %13, %14
  %16 = add nsw i64 %15, %11
  %17 = ashr i64 %16, 63
  %18 = add nsw i64 %16, 8192
  %19 = add nsw i64 %18, %17
  %20 = shl i64 %19, 18
  %21 = ashr i64 %20, 32
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define internal void @Direct_Move(%struct.TT_ExecContextRec_* nocapture readonly, %struct.TT_GlyphZoneRec_* nocapture readonly, i16 zeroext, i64) #2 {
  %5 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 5, i32 0
  %6 = load i16, i16* %5, align 2
  %7 = sext i16 %6 to i64
  %8 = icmp eq i16 %6, 0
  br i1 %8, label %52, label %9

9:                                                ; preds = %4
  %10 = bitcast %struct.TT_ExecContextRec_* %0 to %struct.FT_FaceRec_**
  %11 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %10, align 8
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %11, i64 0, i32 24
  %13 = bitcast %struct.FT_DriverRec_** %12 to %struct.TT_DriverRec_**
  %14 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %13, align 8
  %15 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %14, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  switch i32 %16, label %45 [
    i32 40, label %17
    i32 35, label %33
  ]

17:                                               ; preds = %9
  %18 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 73
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %45

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %1, i64 0, i32 6
  %23 = load %struct.FT_Vector_*, %struct.FT_Vector_** %22, align 8
  %24 = zext i16 %2 to i64
  %25 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %23, i64 %24, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 59
  %28 = load i64, i64* %27, align 8
  %29 = tail call i64 @FT_MulDiv(i64 %3, i64 %7, i64 %28) #11
  %30 = add i64 %29, %26
  %31 = load %struct.FT_Vector_*, %struct.FT_Vector_** %22, align 8
  %32 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %31, i64 %24, i32 0
  store i64 %30, i64* %32, align 8
  br label %45

33:                                               ; preds = %9
  %34 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %1, i64 0, i32 6
  %35 = load %struct.FT_Vector_*, %struct.FT_Vector_** %34, align 8
  %36 = zext i16 %2 to i64
  %37 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %35, i64 %36, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 59
  %40 = load i64, i64* %39, align 8
  %41 = tail call i64 @FT_MulDiv(i64 %3, i64 %7, i64 %40) #11
  %42 = add i64 %41, %38
  %43 = load %struct.FT_Vector_*, %struct.FT_Vector_** %34, align 8
  %44 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %43, i64 %36, i32 0
  store i64 %42, i64* %44, align 8
  br label %45

45:                                               ; preds = %9, %17, %33, %21
  %46 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %1, i64 0, i32 8
  %47 = load i8*, i8** %46, align 8
  %48 = zext i16 %2 to i64
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = or i8 %50, 8
  store i8 %51, i8* %49, align 1
  br label %52

52:                                               ; preds = %4, %45
  %53 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 5, i32 1
  %54 = load i16, i16* %53, align 2
  %55 = sext i16 %54 to i64
  %56 = icmp eq i16 %54, 0
  br i1 %56, label %99, label %57

57:                                               ; preds = %52
  %58 = bitcast %struct.TT_ExecContextRec_* %0 to %struct.FT_FaceRec_**
  %59 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %58, align 8
  %60 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %59, i64 0, i32 24
  %61 = bitcast %struct.FT_DriverRec_** %60 to %struct.TT_DriverRec_**
  %62 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %61, align 8
  %63 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %62, i64 0, i32 2
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 40
  br i1 %65, label %66, label %80

66:                                               ; preds = %57
  %67 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 73
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 74
  %72 = load i8, i8* %71, align 4
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 75
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %74
  %79 = zext i16 %2 to i64
  br label %92

80:                                               ; preds = %74, %70, %66, %57
  %81 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %1, i64 0, i32 6
  %82 = load %struct.FT_Vector_*, %struct.FT_Vector_** %81, align 8
  %83 = zext i16 %2 to i64
  %84 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %82, i64 %83, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 59
  %87 = load i64, i64* %86, align 8
  %88 = tail call i64 @FT_MulDiv(i64 %3, i64 %55, i64 %87) #11
  %89 = add i64 %88, %85
  %90 = load %struct.FT_Vector_*, %struct.FT_Vector_** %81, align 8
  %91 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %90, i64 %83, i32 1
  store i64 %89, i64* %91, align 8
  br label %92

92:                                               ; preds = %78, %80
  %93 = phi i64 [ %79, %78 ], [ %83, %80 ]
  %94 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %1, i64 0, i32 8
  %95 = load i8*, i8** %94, align 8
  %96 = getelementptr inbounds i8, i8* %95, i64 %93
  %97 = load i8, i8* %96, align 1
  %98 = or i8 %97, 16
  store i8 %98, i8* %96, align 1
  br label %99

99:                                               ; preds = %52, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @Direct_Move_Orig(%struct.TT_ExecContextRec_* nocapture readonly, %struct.TT_GlyphZoneRec_* nocapture readonly, i16 zeroext, i64) #2 {
  %5 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 5, i32 0
  %6 = load i16, i16* %5, align 2
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %21, label %8

8:                                                ; preds = %4
  %9 = sext i16 %6 to i64
  %10 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %1, i64 0, i32 5
  %11 = load %struct.FT_Vector_*, %struct.FT_Vector_** %10, align 8
  %12 = zext i16 %2 to i64
  %13 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %11, i64 %12, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 59
  %16 = load i64, i64* %15, align 8
  %17 = tail call i64 @FT_MulDiv(i64 %3, i64 %9, i64 %16) #11
  %18 = add i64 %17, %14
  %19 = load %struct.FT_Vector_*, %struct.FT_Vector_** %10, align 8
  %20 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %19, i64 %12, i32 0
  store i64 %18, i64* %20, align 8
  br label %21

21:                                               ; preds = %4, %8
  %22 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 5, i32 1
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = sext i16 %23 to i64
  %27 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %1, i64 0, i32 5
  %28 = load %struct.FT_Vector_*, %struct.FT_Vector_** %27, align 8
  %29 = zext i16 %2 to i64
  %30 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %28, i64 %29, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 59
  %33 = load i64, i64* %32, align 8
  %34 = tail call i64 @FT_MulDiv(i64 %3, i64 %26, i64 %33) #11
  %35 = add i64 %34, %31
  %36 = load %struct.FT_Vector_*, %struct.FT_Vector_** %27, align 8
  %37 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %36, i64 %29, i32 1
  store i64 %35, i64* %37, align 8
  br label %38

38:                                               ; preds = %21, %25
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @Direct_Move_X(%struct.TT_ExecContextRec_* nocapture readonly, %struct.TT_GlyphZoneRec_* nocapture readonly, i16 zeroext, i64) #6 {
  %5 = bitcast %struct.TT_ExecContextRec_* %0 to %struct.FT_FaceRec_**
  %6 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %6, i64 0, i32 24
  %8 = bitcast %struct.FT_DriverRec_** %7 to %struct.TT_DriverRec_**
  %9 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %8, align 8
  %10 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %9, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %30 [
    i32 40, label %12
    i32 35, label %23
  ]

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 73
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %30

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %1, i64 0, i32 6
  %18 = load %struct.FT_Vector_*, %struct.FT_Vector_** %17, align 8
  %19 = zext i16 %2 to i64
  %20 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %18, i64 %19, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %3
  store i64 %22, i64* %20, align 8
  br label %30

23:                                               ; preds = %4
  %24 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %1, i64 0, i32 6
  %25 = load %struct.FT_Vector_*, %struct.FT_Vector_** %24, align 8
  %26 = zext i16 %2 to i64
  %27 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %25, i64 %26, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, %3
  store i64 %29, i64* %27, align 8
  br label %30

30:                                               ; preds = %4, %12, %23, %16
  %31 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %1, i64 0, i32 8
  %32 = load i8*, i8** %31, align 8
  %33 = zext i16 %2 to i64
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = or i8 %35, 8
  store i8 %36, i8* %34, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @Direct_Move_Orig_X(%struct.TT_ExecContextRec_* nocapture readnone, %struct.TT_GlyphZoneRec_* nocapture readonly, i16 zeroext, i64) #6 {
  %5 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %1, i64 0, i32 5
  %6 = load %struct.FT_Vector_*, %struct.FT_Vector_** %5, align 8
  %7 = zext i16 %2 to i64
  %8 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %6, i64 %7, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, %3
  store i64 %10, i64* %8, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @Direct_Move_Y(%struct.TT_ExecContextRec_* nocapture readonly, %struct.TT_GlyphZoneRec_* nocapture readonly, i16 zeroext, i64) #6 {
  %5 = bitcast %struct.TT_ExecContextRec_* %0 to %struct.FT_FaceRec_**
  %6 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %6, i64 0, i32 24
  %8 = bitcast %struct.FT_DriverRec_** %7 to %struct.TT_DriverRec_**
  %9 = load %struct.TT_DriverRec_*, %struct.TT_DriverRec_** %8, align 8
  %10 = getelementptr inbounds %struct.TT_DriverRec_, %struct.TT_DriverRec_* %9, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 40
  br i1 %12, label %13, label %27

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 73
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 74
  %19 = load i8, i8* %18, align 4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 75
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = zext i16 %2 to i64
  br label %34

27:                                               ; preds = %21, %17, %13, %4
  %28 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %1, i64 0, i32 6
  %29 = load %struct.FT_Vector_*, %struct.FT_Vector_** %28, align 8
  %30 = zext i16 %2 to i64
  %31 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %29, i64 %30, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, %3
  store i64 %33, i64* %31, align 8
  br label %34

34:                                               ; preds = %25, %27
  %35 = phi i64 [ %26, %25 ], [ %30, %27 ]
  %36 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %1, i64 0, i32 8
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %35
  %39 = load i8, i8* %38, align 1
  %40 = or i8 %39, 16
  store i8 %40, i8* %38, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @Direct_Move_Orig_Y(%struct.TT_ExecContextRec_* nocapture readnone, %struct.TT_GlyphZoneRec_* nocapture readonly, i16 zeroext, i64) #6 {
  %5 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %1, i64 0, i32 5
  %6 = load %struct.FT_Vector_*, %struct.FT_Vector_** %5, align 8
  %7 = zext i16 %2 to i64
  %8 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %6, i64 %7, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, %3
  store i64 %10, i64* %8, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @Round_None(%struct.TT_ExecContextRec_* nocapture readonly, i64, i32) #5 {
  %4 = sext i32 %2 to i64
  %5 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 5, i64 %4
  %6 = load i64, i64* %5, align 8
  %7 = icmp sgt i64 %1, -1
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = add i64 %6, %1
  %10 = icmp sgt i64 %9, 0
  %11 = select i1 %10, i64 %9, i64 0
  br label %16

12:                                               ; preds = %3
  %13 = sub i64 %1, %6
  %14 = icmp slt i64 %13, 0
  %15 = select i1 %14, i64 %13, i64 0
  br label %16

16:                                               ; preds = %12, %8
  %17 = phi i64 [ %11, %8 ], [ %15, %12 ]
  ret i64 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @Round_To_Grid(%struct.TT_ExecContextRec_* nocapture readonly, i64, i32) #5 {
  %4 = sext i32 %2 to i64
  %5 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 5, i64 %4
  %6 = load i64, i64* %5, align 8
  %7 = icmp sgt i64 %1, -1
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = add nuw i64 %1, 32
  %10 = add i64 %9, %6
  %11 = and i64 %10, -64
  %12 = icmp sgt i64 %11, 0
  %13 = select i1 %12, i64 %11, i64 0
  br label %21

14:                                               ; preds = %3
  %15 = sub i64 32, %1
  %16 = add i64 %15, %6
  %17 = and i64 %16, -64
  %18 = sub i64 0, %17
  %19 = icmp slt i64 %18, 0
  %20 = select i1 %19, i64 %18, i64 0
  br label %21

21:                                               ; preds = %14, %8
  %22 = phi i64 [ %13, %8 ], [ %20, %14 ]
  ret i64 %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @Round_Up_To_Grid(%struct.TT_ExecContextRec_* nocapture readonly, i64, i32) #5 {
  %4 = sext i32 %2 to i64
  %5 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 5, i64 %4
  %6 = load i64, i64* %5, align 8
  %7 = icmp sgt i64 %1, -1
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = add nuw i64 %1, 63
  %10 = add i64 %9, %6
  %11 = and i64 %10, -64
  %12 = icmp sgt i64 %11, 0
  %13 = select i1 %12, i64 %11, i64 0
  br label %21

14:                                               ; preds = %3
  %15 = sub i64 63, %1
  %16 = add i64 %15, %6
  %17 = and i64 %16, -64
  %18 = sub i64 0, %17
  %19 = icmp slt i64 %18, 0
  %20 = select i1 %19, i64 %18, i64 0
  br label %21

21:                                               ; preds = %14, %8
  %22 = phi i64 [ %13, %8 ], [ %20, %14 ]
  ret i64 %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @Round_Down_To_Grid(%struct.TT_ExecContextRec_* nocapture readonly, i64, i32) #5 {
  %4 = sext i32 %2 to i64
  %5 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 5, i64 %4
  %6 = load i64, i64* %5, align 8
  %7 = icmp sgt i64 %1, -1
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  %9 = add i64 %6, %1
  %10 = and i64 %9, -64
  %11 = icmp sgt i64 %10, 0
  %12 = select i1 %11, i64 %10, i64 0
  br label %19

13:                                               ; preds = %3
  %14 = sub i64 %6, %1
  %15 = and i64 %14, -64
  %16 = sub i64 0, %15
  %17 = icmp slt i64 %16, 0
  %18 = select i1 %17, i64 %16, i64 0
  br label %19

19:                                               ; preds = %13, %8
  %20 = phi i64 [ %12, %8 ], [ %18, %13 ]
  ret i64 %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @Round_To_Half_Grid(%struct.TT_ExecContextRec_* nocapture readonly, i64, i32) #5 {
  %4 = sext i32 %2 to i64
  %5 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 5, i64 %4
  %6 = load i64, i64* %5, align 8
  %7 = icmp sgt i64 %1, -1
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = add i64 %6, %1
  %10 = and i64 %9, -64
  %11 = or i64 %10, 32
  %12 = icmp slt i64 %11, 0
  %13 = select i1 %12, i64 32, i64 %11
  br label %21

14:                                               ; preds = %3
  %15 = sub i64 %6, %1
  %16 = and i64 %15, -64
  %17 = or i64 %16, 32
  %18 = sub nsw i64 0, %17
  %19 = icmp slt i64 %17, 0
  %20 = select i1 %19, i64 -32, i64 %18
  br label %21

21:                                               ; preds = %14, %8
  %22 = phi i64 [ %13, %8 ], [ %20, %14 ]
  ret i64 %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @Round_To_Double_Grid(%struct.TT_ExecContextRec_* nocapture readonly, i64, i32) #5 {
  %4 = sext i32 %2 to i64
  %5 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 5, i64 %4
  %6 = load i64, i64* %5, align 8
  %7 = icmp sgt i64 %1, -1
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = add nuw i64 %1, 16
  %10 = add i64 %9, %6
  %11 = and i64 %10, -32
  %12 = icmp sgt i64 %11, 0
  %13 = select i1 %12, i64 %11, i64 0
  br label %21

14:                                               ; preds = %3
  %15 = sub i64 16, %1
  %16 = add i64 %15, %6
  %17 = and i64 %16, -32
  %18 = sub i64 0, %17
  %19 = icmp slt i64 %18, 0
  %20 = select i1 %19, i64 %18, i64 0
  br label %21

21:                                               ; preds = %14, %8
  %22 = phi i64 [ %13, %8 ], [ %20, %14 ]
  ret i64 %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @Round_Super(%struct.TT_ExecContextRec_* nocapture readonly, i64, i32) #5 {
  %4 = sext i32 %2 to i64
  %5 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 5, i64 %4
  %6 = load i64, i64* %5, align 8
  %7 = icmp sgt i64 %1, -1
  %8 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 54
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 53
  %11 = load i64, i64* %10, align 8
  %12 = sub nsw i64 %9, %11
  %13 = add nsw i64 %12, %6
  br i1 %7, label %14, label %23

14:                                               ; preds = %3
  %15 = add i64 %13, %1
  %16 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 52
  %17 = load i64, i64* %16, align 8
  %18 = sub nsw i64 0, %17
  %19 = and i64 %15, %18
  %20 = add i64 %19, %11
  %21 = icmp slt i64 %20, 0
  %22 = select i1 %21, i64 %11, i64 %20
  ret i64 %22

23:                                               ; preds = %3
  %24 = sub i64 0, %11
  %25 = sub i64 %13, %1
  %26 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 52
  %27 = load i64, i64* %26, align 8
  %28 = sub nsw i64 0, %27
  %29 = and i64 %25, %28
  %30 = add i64 %29, %11
  %31 = sub i64 0, %30
  %32 = icmp sgt i64 %31, 0
  %33 = select i1 %32, i64 %24, i64 %31
  ret i64 %33
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @Round_Super_45(%struct.TT_ExecContextRec_* nocapture readonly, i64, i32) #5 {
  %4 = sext i32 %2 to i64
  %5 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 16, i32 5, i64 %4
  %6 = load i64, i64* %5, align 8
  %7 = icmp sgt i64 %1, -1
  %8 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 54
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 53
  %11 = load i64, i64* %10, align 8
  %12 = sub nsw i64 %9, %11
  %13 = add nsw i64 %12, %6
  br i1 %7, label %14, label %23

14:                                               ; preds = %3
  %15 = add i64 %13, %1
  %16 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 52
  %17 = load i64, i64* %16, align 8
  %18 = srem i64 %15, %17
  %19 = sub i64 %15, %18
  %20 = add i64 %19, %11
  %21 = icmp slt i64 %20, 0
  %22 = select i1 %21, i64 %11, i64 %20
  ret i64 %22

23:                                               ; preds = %3
  %24 = sub i64 0, %11
  %25 = sub i64 %13, %1
  %26 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 52
  %27 = load i64, i64* %26, align 8
  %28 = srem i64 %25, %27
  %29 = sub i64 %28, %25
  %30 = sub i64 %29, %11
  %31 = icmp sgt i64 %30, 0
  %32 = select i1 %31, i64 %24, i64 %30
  ret i64 %32
}

declare hidden i32 @FT_Vector_NormLen(%struct.FT_Vector_*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_iup_worker_interpolate(%struct.IUP_WorkerRec_* nocapture readonly, i32, i32, i32, i32) unnamed_addr #2 {
  %6 = icmp ugt i32 %1, %2
  br i1 %6, label %117, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.IUP_WorkerRec_, %struct.IUP_WorkerRec_* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp ugt i32 %9, %3
  %11 = icmp ugt i32 %9, %4
  %12 = and i1 %10, %11
  br i1 %12, label %13, label %117

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.IUP_WorkerRec_, %struct.IUP_WorkerRec_* %0, i64 0, i32 2
  %15 = load %struct.FT_Vector_*, %struct.FT_Vector_** %14, align 8
  %16 = zext i32 %3 to i64
  %17 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %15, i64 %16, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = zext i32 %4 to i64
  %20 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %15, i64 %19, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp sgt i64 %18, %21
  %23 = select i1 %22, i64 %21, i64 %18
  %24 = select i1 %22, i64 %18, i64 %21
  %25 = select i1 %22, i32 %3, i32 %4
  %26 = select i1 %22, i32 %4, i32 %3
  %27 = getelementptr inbounds %struct.IUP_WorkerRec_, %struct.IUP_WorkerRec_* %0, i64 0, i32 0
  %28 = load %struct.FT_Vector_*, %struct.FT_Vector_** %27, align 8
  %29 = zext i32 %26 to i64
  %30 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %28, i64 %29, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = zext i32 %25 to i64
  %33 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %28, i64 %32, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %struct.IUP_WorkerRec_, %struct.IUP_WorkerRec_* %0, i64 0, i32 1
  %36 = load %struct.FT_Vector_*, %struct.FT_Vector_** %35, align 8
  %37 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %36, i64 %29, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %36, i64 %32, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %31
  %42 = sub i64 %40, %34
  %43 = icmp eq i64 %40, %38
  %44 = icmp eq i64 %24, %23
  %45 = or i1 %44, %43
  br i1 %45, label %49, label %46

46:                                               ; preds = %13
  %47 = sub i64 %40, %38
  %48 = sub i64 %24, %23
  br label %70

49:                                               ; preds = %13, %68
  %50 = phi %struct.FT_Vector_* [ %69, %68 ], [ %28, %13 ]
  %51 = phi i32 [ %66, %68 ], [ %1, %13 ]
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %50, i64 %52, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = icmp sgt i64 %54, %31
  br i1 %55, label %58, label %56

56:                                               ; preds = %49
  %57 = add i64 %54, %41
  br label %62

58:                                               ; preds = %49
  %59 = icmp slt i64 %54, %34
  %60 = add i64 %54, %42
  %61 = select i1 %59, i64 %38, i64 %60
  br label %62

62:                                               ; preds = %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %58 ]
  %64 = load %struct.FT_Vector_*, %struct.FT_Vector_** %35, align 8
  %65 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %64, i64 %52, i32 0
  store i64 %63, i64* %65, align 8
  %66 = add i32 %51, 1
  %67 = icmp ugt i32 %66, %2
  br i1 %67, label %117, label %68

68:                                               ; preds = %62
  %69 = load %struct.FT_Vector_*, %struct.FT_Vector_** %27, align 8
  br label %49

70:                                               ; preds = %115, %46
  %71 = phi %struct.FT_Vector_* [ %28, %46 ], [ %116, %115 ]
  %72 = phi i8 [ 0, %46 ], [ %109, %115 ]
  %73 = phi i64 [ 0, %46 ], [ %108, %115 ]
  %74 = phi i32 [ %1, %46 ], [ %113, %115 ]
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %71, i64 %75, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = icmp sgt i64 %77, %31
  br i1 %78, label %81, label %79

79:                                               ; preds = %70
  %80 = add i64 %77, %41
  br label %107

81:                                               ; preds = %70
  %82 = icmp slt i64 %77, %34
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = add i64 %77, %42
  br label %107

85:                                               ; preds = %81
  %86 = icmp eq i8 %72, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %85
  %88 = tail call i64 @FT_DivFix(i64 %47, i64 %48) #11
  br label %89

89:                                               ; preds = %85, %87
  %90 = phi i64 [ %73, %85 ], [ %88, %87 ]
  %91 = phi i8 [ %72, %85 ], [ 1, %87 ]
  %92 = load %struct.FT_Vector_*, %struct.FT_Vector_** %14, align 8
  %93 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %92, i64 %75, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %23
  %96 = shl i64 %95, 32
  %97 = ashr exact i64 %96, 32
  %98 = shl i64 %90, 32
  %99 = ashr exact i64 %98, 32
  %100 = mul nsw i64 %97, %99
  %101 = ashr i64 %100, 63
  %102 = add nsw i64 %100, 32768
  %103 = add nsw i64 %102, %101
  %104 = shl i64 %103, 16
  %105 = ashr i64 %104, 32
  %106 = add i64 %105, %38
  br label %107

107:                                              ; preds = %83, %89, %79
  %108 = phi i64 [ %73, %79 ], [ %73, %83 ], [ %90, %89 ]
  %109 = phi i8 [ %72, %79 ], [ %72, %83 ], [ %91, %89 ]
  %110 = phi i64 [ %80, %79 ], [ %84, %83 ], [ %106, %89 ]
  %111 = load %struct.FT_Vector_*, %struct.FT_Vector_** %35, align 8
  %112 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 %75, i32 0
  store i64 %110, i64* %112, align 8
  %113 = add i32 %74, 1
  %114 = icmp ugt i32 %113, %2
  br i1 %114, label %117, label %115

115:                                              ; preds = %107
  %116 = load %struct.FT_Vector_*, %struct.FT_Vector_** %27, align 8
  br label %70

117:                                              ; preds = %107, %62, %7, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i8 @Compute_Point_Displacement(%struct.TT_ExecContextRec_*, i64* nocapture, i64* nocapture, %struct.TT_GlyphZoneRec_* nocapture, i16* nocapture) unnamed_addr #2 {
  %6 = alloca [12 x i8], align 8
  %7 = alloca { %struct.FT_Vector_*, i8*, i16*, i16 }, align 8
  %8 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8)
  %9 = bitcast { %struct.FT_Vector_*, i8*, i16*, i16 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 12, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 23
  %11 = load i8, i8* %10, align 8
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %28, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 9
  %16 = bitcast %struct.TT_GlyphZoneRec_* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %16, i64 12, i1 false)
  %17 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 9, i32 3
  %18 = load i16, i16* %17, align 4
  %19 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 9, i32 4
  %20 = load i16, i16* %19, align 2
  %21 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 9, i32 5
  %22 = load %struct.FT_Vector_*, %struct.FT_Vector_** %21, align 8
  %23 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 9, i32 6
  %24 = load %struct.FT_Vector_*, %struct.FT_Vector_** %23, align 8
  %25 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 9, i32 7
  %26 = bitcast %struct.FT_Vector_** %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %26, i64 32, i1 false)
  %27 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 1
  br label %42

28:                                               ; preds = %5
  %29 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 10
  %30 = bitcast %struct.TT_GlyphZoneRec_* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %30, i64 12, i1 false)
  %31 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 10, i32 3
  %32 = load i16, i16* %31, align 4
  %33 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 10, i32 4
  %34 = load i16, i16* %33, align 2
  %35 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 10, i32 5
  %36 = load %struct.FT_Vector_*, %struct.FT_Vector_** %35, align 8
  %37 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 10, i32 6
  %38 = load %struct.FT_Vector_*, %struct.FT_Vector_** %37, align 8
  %39 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 10, i32 7
  %40 = bitcast %struct.FT_Vector_** %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %40, i64 32, i1 false)
  %41 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 2
  br label %42

42:                                               ; preds = %28, %14
  %43 = phi i16 [ %18, %14 ], [ %32, %28 ]
  %44 = phi i16 [ %20, %14 ], [ %34, %28 ]
  %45 = phi %struct.FT_Vector_* [ %22, %14 ], [ %36, %28 ]
  %46 = phi %struct.FT_Vector_* [ %24, %14 ], [ %38, %28 ]
  %47 = phi i16* [ %27, %14 ], [ %41, %28 ]
  %48 = load i16, i16* %47, align 2
  %49 = icmp ult i16 %48, %43
  br i1 %49, label %57, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 58
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 3
  store i32 134, i32* %55, align 8
  br label %56

56:                                               ; preds = %50, %54
  store i16 0, i16* %4, align 2
  br label %90

57:                                               ; preds = %42
  %58 = bitcast %struct.TT_GlyphZoneRec_* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* nonnull align 8 %8, i64 12, i1 false)
  %59 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %3, i64 0, i32 3
  store i16 %43, i16* %59, align 4
  %60 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %3, i64 0, i32 4
  store i16 %44, i16* %60, align 2
  %61 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %3, i64 0, i32 5
  store %struct.FT_Vector_* %45, %struct.FT_Vector_** %61, align 8
  %62 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %3, i64 0, i32 6
  store %struct.FT_Vector_* %46, %struct.FT_Vector_** %62, align 8
  %63 = getelementptr inbounds %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_* %3, i64 0, i32 7
  %64 = bitcast %struct.FT_Vector_** %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* nonnull align 8 %9, i64 32, i1 false)
  store i16 %48, i16* %4, align 2
  %65 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 61
  %66 = load i64 (%struct.TT_ExecContextRec_*, i64, i64)*, i64 (%struct.TT_ExecContextRec_*, i64, i64)** %65, align 8
  %67 = zext i16 %48 to i64
  %68 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %46, i64 %67, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %45, i64 %67, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %69, %71
  %73 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %46, i64 %67, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %45, i64 %67, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = tail call i64 %66(%struct.TT_ExecContextRec_* %0, i64 %72, i64 %77) #11
  %79 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 5, i32 0
  %80 = load i16, i16* %79, align 2
  %81 = sext i16 %80 to i64
  %82 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 59
  %83 = load i64, i64* %82, align 8
  %84 = tail call i64 @FT_MulDiv(i64 %78, i64 %81, i64 %83) #11
  store i64 %84, i64* %1, align 8
  %85 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %0, i64 0, i32 17, i32 5, i32 1
  %86 = load i16, i16* %85, align 2
  %87 = sext i16 %86 to i64
  %88 = load i64, i64* %82, align 8
  %89 = tail call i64 @FT_MulDiv(i64 %78, i64 %87, i64 %88) #11
  store i64 %89, i64* %2, align 8
  br label %90

90:                                               ; preds = %57, %56
  %91 = phi i8 [ 1, %56 ], [ 0, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9)
  ret i8 %91
}

declare hidden i64 @FT_MulDiv_No_Round(i64, i64, i64) local_unnamed_addr #4

declare hidden i8* @FT_Get_Module_Interface(%struct.FT_LibraryRec_*, i8*) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i8* @strstr(i8*, i8* nocapture) local_unnamed_addr #8

declare hidden i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_*, i64, i8**) local_unnamed_addr #4

declare hidden void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_*, i8**) local_unnamed_addr #4

declare i32 @FT_Get_Glyph_Name(%struct.FT_FaceRec_*, i32, i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal i32 @TT_Access_Glyph_Frame(%struct.TT_LoaderRec_* nocapture, i32, i64, i32) #2 {
  %5 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 6
  %6 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %5, align 8
  %7 = tail call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %6, i64 %2) #11
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %24

9:                                                ; preds = %4
  %10 = zext i32 %3 to i64
  %11 = tail call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %6, i64 %10) #11
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %24

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %6, i64 0, i32 8
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 26
  %18 = bitcast i8** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %6, i64 0, i32 9
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 27
  %23 = bitcast i8** %22 to i64*
  store i64 %21, i64* %23, align 8
  br label %24

24:                                               ; preds = %4, %9, %13
  %25 = phi i32 [ 0, %13 ], [ %7, %4 ], [ %11, %9 ]
  ret i32 %25
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @TT_Load_Glyph_Header(%struct.TT_LoaderRec_* nocapture) #6 {
  %2 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 26
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 27
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 10
  %7 = icmp ugt i8* %6, %5
  br i1 %7, label %57, label %8

8:                                                ; preds = %1
  %9 = load i8, i8* %3, align 1
  %10 = zext i8 %9 to i16
  %11 = shl nuw i16 %10, 8
  %12 = getelementptr inbounds i8, i8* %3, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i16
  %15 = or i16 %11, %14
  %16 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 8
  store i16 %15, i16* %16, align 4
  %17 = getelementptr inbounds i8, i8* %3, i64 2
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  %20 = shl nuw i16 %19, 8
  %21 = getelementptr inbounds i8, i8* %3, i64 3
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i16
  %24 = or i16 %20, %23
  %25 = sext i16 %24 to i64
  %26 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 9, i32 0
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %3, i64 4
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i16
  %30 = shl nuw i16 %29, 8
  %31 = getelementptr inbounds i8, i8* %3, i64 5
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i16
  %34 = or i16 %30, %33
  %35 = sext i16 %34 to i64
  %36 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 9, i32 1
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds i8, i8* %3, i64 6
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = shl nuw i16 %39, 8
  %41 = getelementptr inbounds i8, i8* %3, i64 7
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i16
  %44 = or i16 %40, %43
  %45 = sext i16 %44 to i64
  %46 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 9, i32 2
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds i8, i8* %3, i64 8
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  %50 = shl nuw i16 %49, 8
  %51 = getelementptr inbounds i8, i8* %3, i64 9
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i16
  %54 = or i16 %50, %53
  %55 = sext i16 %54 to i64
  %56 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 9, i32 3
  store i64 %55, i64* %56, align 8
  store i8* %6, i8** %2, align 8
  br label %57

57:                                               ; preds = %1, %8
  %58 = phi i32 [ 0, %8 ], [ 20, %1 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @TT_Load_Simple_Glyph(%struct.TT_LoaderRec_* nocapture) #2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 26
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 27
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 3
  %8 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %7, align 8
  %9 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 8
  %10 = load i16, i16* %9, align 4
  %11 = sext i16 %10 to i32
  %12 = icmp eq i16 %10, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %8, i64 0, i32 6, i32 0, i32 4
  %15 = load i16*, i16** %14, align 8
  br label %37

16:                                               ; preds = %1
  %17 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %8, i64 0, i32 5, i32 0, i32 0
  %18 = load i16, i16* %17, align 8
  %19 = sext i16 %18 to i32
  %20 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %8, i64 0, i32 6, i32 0, i32 0
  %21 = load i16, i16* %20, align 8
  %22 = sext i16 %21 to i32
  %23 = add nsw i32 %19, %11
  %24 = add nsw i32 %23, %22
  %25 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %8, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp ugt i32 %24, %26
  br i1 %27, label %28, label %31

28:                                               ; preds = %16
  %29 = tail call i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_* %8, i32 0, i32 %11) #11
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %334

31:                                               ; preds = %16, %28
  %32 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %8, i64 0, i32 6, i32 0, i32 4
  %33 = load i16*, i16** %32, align 8
  %34 = sext i16 %10 to i64
  %35 = getelementptr inbounds i16, i16* %33, i64 %34
  %36 = icmp sgt i16 %10, 4094
  br i1 %36, label %334, label %37

37:                                               ; preds = %13, %31
  %38 = phi i16* [ %15, %13 ], [ %35, %31 ]
  %39 = phi i16* [ %15, %13 ], [ %33, %31 ]
  %40 = shl nsw i32 %11, 1
  %41 = add nsw i32 %40, 2
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %4, i64 %42
  %44 = icmp ugt i8* %43, %6
  br i1 %44, label %334, label %45

45:                                               ; preds = %37
  %46 = load i8, i8* %4, align 1
  %47 = zext i8 %46 to i16
  %48 = shl nuw i16 %47, 8
  %49 = getelementptr inbounds i8, i8* %4, i64 1
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i16
  %52 = or i16 %48, %51
  %53 = icmp sgt i16 %10, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %45
  store i16 %52, i16* %39, align 2
  br label %55

55:                                               ; preds = %54, %45
  %56 = icmp slt i16 %48, 0
  br i1 %56, label %334, label %57

57:                                               ; preds = %55, %64
  %58 = phi i8* [ %62, %64 ], [ %4, %55 ]
  %59 = phi i16* [ %61, %64 ], [ %39, %55 ]
  %60 = phi i16 [ %71, %64 ], [ %52, %55 ]
  %61 = getelementptr inbounds i16, i16* %59, i64 1
  %62 = getelementptr inbounds i8, i8* %58, i64 2
  %63 = icmp ult i16* %61, %38
  br i1 %63, label %64, label %73

64:                                               ; preds = %57
  %65 = load i8, i8* %62, align 1
  %66 = zext i8 %65 to i16
  %67 = shl nuw i16 %66, 8
  %68 = getelementptr inbounds i8, i8* %58, i64 3
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i16
  %71 = or i16 %67, %70
  store i16 %71, i16* %61, align 2
  %72 = icmp sgt i16 %71, %60
  br i1 %72, label %57, label %334

73:                                               ; preds = %57
  br i1 %53, label %74, label %81

74:                                               ; preds = %73
  %75 = load i16, i16* %59, align 2
  %76 = sext i16 %75 to i32
  %77 = add nsw i32 %76, 1
  %78 = icmp slt i32 %77, 0
  br i1 %78, label %334, label %79

79:                                               ; preds = %74
  %80 = add nsw i32 %76, 5
  br label %81

81:                                               ; preds = %79, %73
  %82 = phi i32 [ %80, %79 ], [ 4, %73 ]
  %83 = phi i32 [ %77, %79 ], [ 0, %73 ]
  %84 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %8, i64 0, i32 5, i32 0, i32 1
  %85 = load i16, i16* %84, align 2
  %86 = sext i16 %85 to i32
  %87 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %8, i64 0, i32 6, i32 0, i32 1
  %88 = load i16, i16* %87, align 2
  %89 = sext i16 %88 to i32
  %90 = add nsw i32 %82, %86
  %91 = add nsw i32 %90, %89
  %92 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %8, i64 0, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = icmp ugt i32 %91, %93
  br i1 %94, label %95, label %98

95:                                               ; preds = %81
  %96 = tail call i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_* %8, i32 %82, i32 0) #11
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %334

98:                                               ; preds = %81, %95
  %99 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 2
  %100 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %99, align 8
  %101 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %100, i64 0, i32 17
  store i64 0, i64* %101, align 8
  %102 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %99, align 8
  %103 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %102, i64 0, i32 16
  store i8* null, i8** %103, align 8
  %104 = getelementptr inbounds i8, i8* %58, i64 4
  %105 = icmp ugt i8* %104, %6
  br i1 %105, label %334, label %106

106:                                              ; preds = %98
  %107 = load i8, i8* %62, align 1
  %108 = zext i8 %107 to i16
  %109 = shl nuw i16 %108, 8
  %110 = getelementptr inbounds i8, i8* %58, i64 3
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i16
  %113 = or i16 %109, %112
  %114 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 4
  %115 = load i64, i64* %114, align 8
  %116 = and i64 %115, 2
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %106
  %119 = zext i16 %113 to i64
  br label %164

120:                                              ; preds = %106
  %121 = ptrtoint i8* %6 to i64
  %122 = ptrtoint i8* %104 to i64
  %123 = sub i64 %121, %122
  %124 = zext i16 %113 to i64
  %125 = icmp slt i64 %123, %124
  br i1 %125, label %334, label %126

126:                                              ; preds = %120
  %127 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 18
  %128 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %127, align 8
  %129 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %128, i64 0, i32 31
  %130 = load i32, i32* %129, align 8
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %128, i64 0, i32 2
  %133 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %132, align 8
  %134 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %128, i64 0, i32 32
  %135 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %135) #11
  store i32 -1431655766, i32* %2, align 4
  %136 = icmp ult i64 %131, %124
  br i1 %136, label %139, label %137

137:                                              ; preds = %126
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %135) #11
  %138 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %128, i64 0, i32 31
  store i32 %130, i32* %138, align 8
  br label %149

139:                                              ; preds = %126
  %140 = load i8*, i8** %134, align 8
  %141 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %133, i64 1, i64 %131, i64 %124, i8* %140, i32* nonnull %2) #11
  store i8* %141, i8** %134, align 8
  %142 = load i32, i32* %2, align 4
  %143 = icmp eq i32 %142, 0
  %144 = select i1 %143, i64 %124, i64 %131
  %145 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %127, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %135) #11
  %146 = trunc i64 %144 to i32
  %147 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %145, i64 0, i32 31
  store i32 %146, i32* %147, align 8
  %148 = icmp eq i32 %142, 0
  br i1 %148, label %149, label %334

149:                                              ; preds = %137, %139
  %150 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %99, align 8
  %151 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %150, i64 0, i32 17
  store i64 %124, i64* %151, align 8
  %152 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %127, align 8
  %153 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %152, i64 0, i32 32
  %154 = bitcast i8** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %99, align 8
  %157 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %156, i64 0, i32 16
  %158 = bitcast i8** %157 to i64*
  store i64 %155, i64* %158, align 8
  %159 = icmp eq i16 %113, 0
  br i1 %159, label %164, label %160

160:                                              ; preds = %149
  %161 = load %struct.TT_ExecContextRec_*, %struct.TT_ExecContextRec_** %127, align 8
  %162 = getelementptr inbounds %struct.TT_ExecContextRec_, %struct.TT_ExecContextRec_* %161, i64 0, i32 32
  %163 = load i8*, i8** %162, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %163, i8* align 1 %104, i64 %124, i1 false)
  br label %164

164:                                              ; preds = %118, %160, %149
  %165 = phi i64 [ %119, %118 ], [ %124, %160 ], [ 0, %149 ]
  %166 = getelementptr inbounds i8, i8* %104, i64 %165
  %167 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %8, i64 0, i32 6, i32 0, i32 3
  %168 = load i8*, i8** %167, align 8
  %169 = sext i32 %83 to i64
  %170 = getelementptr inbounds i8, i8* %168, i64 %169
  %171 = icmp sgt i32 %83, 0
  br i1 %171, label %172, label %230

172:                                              ; preds = %164, %215
  %173 = phi i8* [ %217, %215 ], [ %168, %164 ]
  %174 = phi i8* [ %216, %215 ], [ %166, %164 ]
  %175 = getelementptr inbounds i8, i8* %174, i64 1
  %176 = icmp ugt i8* %175, %6
  br i1 %176, label %334, label %177

177:                                              ; preds = %172
  %178 = load i8, i8* %174, align 1
  %179 = getelementptr inbounds i8, i8* %173, i64 1
  store i8 %178, i8* %173, align 1
  %180 = and i8 %178, 8
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %215, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds i8, i8* %174, i64 2
  %184 = icmp ugt i8* %183, %6
  br i1 %184, label %334, label %185

185:                                              ; preds = %182
  %186 = load i8, i8* %175, align 1
  %187 = zext i8 %186 to i64
  %188 = getelementptr inbounds i8, i8* %179, i64 %187
  %189 = icmp ugt i8* %188, %170
  br i1 %189, label %334, label %190

190:                                              ; preds = %185
  %191 = icmp eq i8 %186, 0
  br i1 %191, label %215, label %192

192:                                              ; preds = %190
  call void @llvm.memset.p0i8.i64(i8* align 1 %179, i8 %178, i64 %187, i1 false)
  %193 = add i8 %186, -1
  %194 = and i8 %186, 7
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %204, label %196

196:                                              ; preds = %192, %196
  %197 = phi i8 [ %201, %196 ], [ %186, %192 ]
  %198 = phi i8* [ %200, %196 ], [ %179, %192 ]
  %199 = phi i8 [ %202, %196 ], [ %194, %192 ]
  %200 = getelementptr inbounds i8, i8* %198, i64 1
  %201 = add i8 %197, -1
  %202 = add i8 %199, -1
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %204, label %196, !llvm.loop !39

204:                                              ; preds = %196, %192
  %205 = phi i8* [ undef, %192 ], [ %200, %196 ]
  %206 = phi i8 [ %186, %192 ], [ %201, %196 ]
  %207 = phi i8* [ %179, %192 ], [ %200, %196 ]
  %208 = icmp ult i8 %193, 7
  br i1 %208, label %215, label %209

209:                                              ; preds = %204, %209
  %210 = phi i8 [ %213, %209 ], [ %206, %204 ]
  %211 = phi i8* [ %212, %209 ], [ %207, %204 ]
  %212 = getelementptr inbounds i8, i8* %211, i64 8
  %213 = add i8 %210, -8
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %215, label %209

215:                                              ; preds = %204, %209, %190, %177
  %216 = phi i8* [ %175, %177 ], [ %183, %190 ], [ %183, %209 ], [ %183, %204 ]
  %217 = phi i8* [ %179, %177 ], [ %179, %190 ], [ %205, %204 ], [ %212, %209 ]
  %218 = icmp ult i8* %217, %170
  br i1 %218, label %172, label %219

219:                                              ; preds = %215
  %220 = icmp eq i32 %83, 0
  br i1 %220, label %230, label %221

221:                                              ; preds = %219
  %222 = load i8*, i8** %167, align 8
  %223 = load i8, i8* %222, align 1
  %224 = and i8 %223, 64
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %230, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %8, i64 0, i32 5, i32 0, i32 5
  %228 = load i32, i32* %227, align 8
  %229 = or i32 %228, 64
  store i32 %229, i32* %227, align 8
  br label %230

230:                                              ; preds = %164, %221, %219, %226
  %231 = phi i8* [ %216, %221 ], [ %216, %219 ], [ %216, %226 ], [ %166, %164 ]
  %232 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %8, i64 0, i32 6, i32 0, i32 2
  %233 = load %struct.FT_Vector_*, %struct.FT_Vector_** %232, align 8
  %234 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %233, i64 %169
  %235 = icmp ugt i8* %231, %6
  br i1 %235, label %334, label %236

236:                                              ; preds = %230
  br i1 %171, label %237, label %329

237:                                              ; preds = %236
  %238 = load i8*, i8** %167, align 8
  br label %239

239:                                              ; preds = %237, %273
  %240 = phi i64 [ %276, %273 ], [ 0, %237 ]
  %241 = phi %struct.FT_Vector_* [ %278, %273 ], [ %233, %237 ]
  %242 = phi i8* [ %279, %273 ], [ %238, %237 ]
  %243 = phi i8* [ %274, %273 ], [ %231, %237 ]
  %244 = load i8, i8* %242, align 1
  %245 = zext i8 %244 to i32
  %246 = and i32 %245, 2
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %258, label %248

248:                                              ; preds = %239
  %249 = getelementptr inbounds i8, i8* %243, i64 1
  %250 = icmp ugt i8* %249, %6
  br i1 %250, label %334, label %251

251:                                              ; preds = %248
  %252 = load i8, i8* %243, align 1
  %253 = zext i8 %252 to i64
  %254 = and i32 %245, 16
  %255 = icmp eq i32 %254, 0
  %256 = sub nsw i64 0, %253
  %257 = select i1 %255, i64 %256, i64 %253
  br label %273

258:                                              ; preds = %239
  %259 = and i32 %245, 16
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %273

261:                                              ; preds = %258
  %262 = getelementptr inbounds i8, i8* %243, i64 2
  %263 = icmp ugt i8* %262, %6
  br i1 %263, label %334, label %264

264:                                              ; preds = %261
  %265 = load i8, i8* %243, align 1
  %266 = zext i8 %265 to i16
  %267 = shl nuw i16 %266, 8
  %268 = getelementptr inbounds i8, i8* %243, i64 1
  %269 = load i8, i8* %268, align 1
  %270 = zext i8 %269 to i16
  %271 = or i16 %267, %270
  %272 = sext i16 %271 to i64
  br label %273

273:                                              ; preds = %251, %258, %264
  %274 = phi i8* [ %243, %258 ], [ %262, %264 ], [ %249, %251 ]
  %275 = phi i64 [ 0, %258 ], [ %272, %264 ], [ %257, %251 ]
  %276 = add nsw i64 %275, %240
  %277 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %241, i64 0, i32 0
  store i64 %276, i64* %277, align 8
  %278 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %241, i64 1
  %279 = getelementptr inbounds i8, i8* %242, i64 1
  %280 = icmp ult %struct.FT_Vector_* %278, %234
  br i1 %280, label %239, label %281

281:                                              ; preds = %273
  %282 = load %struct.FT_Vector_*, %struct.FT_Vector_** %232, align 8
  %283 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %282, i64 %169
  br i1 %171, label %284, label %329

284:                                              ; preds = %281
  %285 = load i8*, i8** %167, align 8
  br label %286

286:                                              ; preds = %284, %320
  %287 = phi i64 [ %323, %320 ], [ 0, %284 ]
  %288 = phi %struct.FT_Vector_* [ %326, %320 ], [ %282, %284 ]
  %289 = phi i8* [ %327, %320 ], [ %285, %284 ]
  %290 = phi i8* [ %321, %320 ], [ %274, %284 ]
  %291 = load i8, i8* %289, align 1
  %292 = zext i8 %291 to i32
  %293 = and i32 %292, 4
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %305, label %295

295:                                              ; preds = %286
  %296 = getelementptr inbounds i8, i8* %290, i64 1
  %297 = icmp ugt i8* %296, %6
  br i1 %297, label %334, label %298

298:                                              ; preds = %295
  %299 = load i8, i8* %290, align 1
  %300 = zext i8 %299 to i64
  %301 = and i32 %292, 32
  %302 = icmp eq i32 %301, 0
  %303 = sub nsw i64 0, %300
  %304 = select i1 %302, i64 %303, i64 %300
  br label %320

305:                                              ; preds = %286
  %306 = and i32 %292, 32
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %320

308:                                              ; preds = %305
  %309 = getelementptr inbounds i8, i8* %290, i64 2
  %310 = icmp ugt i8* %309, %6
  br i1 %310, label %334, label %311

311:                                              ; preds = %308
  %312 = load i8, i8* %290, align 1
  %313 = zext i8 %312 to i16
  %314 = shl nuw i16 %313, 8
  %315 = getelementptr inbounds i8, i8* %290, i64 1
  %316 = load i8, i8* %315, align 1
  %317 = zext i8 %316 to i16
  %318 = or i16 %314, %317
  %319 = sext i16 %318 to i64
  br label %320

320:                                              ; preds = %298, %305, %311
  %321 = phi i8* [ %290, %305 ], [ %309, %311 ], [ %296, %298 ]
  %322 = phi i64 [ 0, %305 ], [ %319, %311 ], [ %304, %298 ]
  %323 = add nsw i64 %322, %287
  %324 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %288, i64 0, i32 1
  store i64 %323, i64* %324, align 8
  %325 = and i8 %291, 1
  store i8 %325, i8* %289, align 1
  %326 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %288, i64 1
  %327 = getelementptr inbounds i8, i8* %289, i64 1
  %328 = icmp ult %struct.FT_Vector_* %326, %283
  br i1 %328, label %286, label %329

329:                                              ; preds = %320, %236, %281
  %330 = phi i8* [ %274, %281 ], [ %231, %236 ], [ %321, %320 ]
  %331 = trunc i32 %83 to i16
  %332 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %8, i64 0, i32 6, i32 0, i32 1
  store i16 %331, i16* %332, align 2
  %333 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %8, i64 0, i32 6, i32 0, i32 0
  store i16 %10, i16* %333, align 8
  store i8* %330, i8** %3, align 8
  br label %334

334:                                              ; preds = %64, %185, %182, %172, %261, %248, %308, %295, %139, %329, %28, %95, %230, %98, %74, %55, %31, %37, %120
  %335 = phi i32 [ %29, %28 ], [ %96, %95 ], [ 0, %329 ], [ 20, %230 ], [ 20, %98 ], [ 20, %74 ], [ 20, %55 ], [ 20, %31 ], [ 20, %37 ], [ 22, %120 ], [ %142, %139 ], [ 20, %295 ], [ 20, %308 ], [ 20, %248 ], [ 20, %261 ], [ 20, %172 ], [ 20, %182 ], [ 20, %185 ], [ 20, %64 ]
  ret i32 %335
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @TT_Load_Composite_Glyph(%struct.TT_LoaderRec_* nocapture) #2 {
  %2 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 26
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 27
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 3
  %7 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %6, align 8
  %8 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 0
  %9 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %8, align 8
  %10 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %9, i64 0, i32 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %7, i64 0, i32 6, i32 4
  br label %13

13:                                               ; preds = %207, %1
  %14 = phi i8* [ %3, %1 ], [ %208, %207 ]
  %15 = phi i32 [ 0, %1 ], [ %16, %207 ]
  %16 = add i32 %15, 1
  %17 = tail call i32 @FT_GlyphLoader_CheckSubGlyphs(%struct.FT_GlyphLoaderRec_* %7, i32 %16) #11
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %229

19:                                               ; preds = %13
  %20 = getelementptr inbounds i8, i8* %14, i64 4
  %21 = icmp ugt i8* %20, %5
  br i1 %21, label %229, label %22

22:                                               ; preds = %19
  %23 = load %struct.FT_SubGlyphRec_*, %struct.FT_SubGlyphRec_** %12, align 8
  %24 = zext i32 %15 to i64
  %25 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %23, i64 %24, i32 3
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %23, i64 %24, i32 2
  store i32 0, i32* %26, align 8
  %27 = load i8, i8* %14, align 1
  %28 = zext i8 %27 to i16
  %29 = shl nuw i16 %28, 8
  %30 = getelementptr inbounds i8, i8* %14, i64 1
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i16
  %33 = or i16 %29, %32
  %34 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %23, i64 %24, i32 1
  store i16 %33, i16* %34, align 4
  %35 = getelementptr inbounds i8, i8* %14, i64 2
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = shl nuw nsw i32 %37, 8
  %39 = getelementptr inbounds i8, i8* %14, i64 3
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = or i32 %38, %41
  %43 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %23, i64 %24, i32 0
  store i32 %42, i32* %43, align 8
  %44 = zext i32 %42 to i64
  %45 = icmp sgt i64 %11, %44
  br i1 %45, label %46, label %229

46:                                               ; preds = %22
  %47 = and i16 %32, 1
  %48 = icmp eq i16 %47, 0
  %49 = select i1 %48, i32 2, i32 4
  %50 = zext i16 %33 to i32
  %51 = and i32 %50, 8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %46
  %54 = add nuw nsw i32 %49, 2
  br label %64

55:                                               ; preds = %46
  %56 = and i32 %50, 64
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %55
  %59 = add nuw nsw i32 %49, 4
  br label %64

60:                                               ; preds = %55
  %61 = icmp slt i8 %31, 0
  %62 = or i32 %49, 8
  %63 = select i1 %61, i32 %62, i32 %49
  br label %64

64:                                               ; preds = %60, %58, %53
  %65 = phi i32 [ %54, %53 ], [ %59, %58 ], [ %63, %60 ]
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %20, i64 %66
  %68 = icmp ugt i8* %67, %5
  br i1 %68, label %229, label %69

69:                                               ; preds = %64
  %70 = and i32 %50, 2
  %71 = icmp eq i32 %70, 0
  %72 = and i32 %50, 1
  %73 = icmp ne i32 %72, 0
  br i1 %71, label %101, label %74

74:                                               ; preds = %69
  br i1 %73, label %75, label %94

75:                                               ; preds = %74
  %76 = load i8, i8* %20, align 1
  %77 = zext i8 %76 to i16
  %78 = shl nuw i16 %77, 8
  %79 = getelementptr inbounds i8, i8* %14, i64 5
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i16
  %82 = or i16 %78, %81
  %83 = sext i16 %82 to i32
  store i32 %83, i32* %26, align 8
  %84 = getelementptr inbounds i8, i8* %14, i64 8
  %85 = getelementptr inbounds i8, i8* %14, i64 6
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i16
  %88 = shl nuw i16 %87, 8
  %89 = getelementptr inbounds i8, i8* %14, i64 7
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i16
  %92 = or i16 %88, %91
  %93 = sext i16 %92 to i32
  br label %126

94:                                               ; preds = %74
  %95 = getelementptr inbounds i8, i8* %14, i64 5
  %96 = load i8, i8* %20, align 1
  %97 = sext i8 %96 to i32
  store i32 %97, i32* %26, align 8
  %98 = getelementptr inbounds i8, i8* %14, i64 6
  %99 = load i8, i8* %95, align 1
  %100 = sext i8 %99 to i32
  br label %126

101:                                              ; preds = %69
  br i1 %73, label %102, label %119

102:                                              ; preds = %101
  %103 = load i8, i8* %20, align 1
  %104 = zext i8 %103 to i32
  %105 = shl nuw nsw i32 %104, 8
  %106 = getelementptr inbounds i8, i8* %14, i64 5
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = or i32 %105, %108
  store i32 %109, i32* %26, align 8
  %110 = getelementptr inbounds i8, i8* %14, i64 8
  %111 = getelementptr inbounds i8, i8* %14, i64 6
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = shl nuw nsw i32 %113, 8
  %115 = getelementptr inbounds i8, i8* %14, i64 7
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = or i32 %114, %117
  br label %126

119:                                              ; preds = %101
  %120 = getelementptr inbounds i8, i8* %14, i64 5
  %121 = load i8, i8* %20, align 1
  %122 = zext i8 %121 to i32
  store i32 %122, i32* %26, align 8
  %123 = getelementptr inbounds i8, i8* %14, i64 6
  %124 = load i8, i8* %120, align 1
  %125 = zext i8 %124 to i32
  br label %126

126:                                              ; preds = %102, %119, %75, %94
  %127 = phi i32 [ %118, %102 ], [ %125, %119 ], [ %93, %75 ], [ %100, %94 ]
  %128 = phi i8* [ %110, %102 ], [ %123, %119 ], [ %84, %75 ], [ %98, %94 ]
  store i32 %127, i32* %25, align 4
  br i1 %52, label %140, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds i8, i8* %128, i64 2
  %131 = load i8, i8* %128, align 1
  %132 = zext i8 %131 to i16
  %133 = shl nuw i16 %132, 8
  %134 = getelementptr inbounds i8, i8* %128, i64 1
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i16
  %137 = or i16 %133, %136
  %138 = sext i16 %137 to i64
  %139 = shl nsw i64 %138, 2
  br label %207

140:                                              ; preds = %126
  %141 = and i32 %50, 64
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %164, label %143

143:                                              ; preds = %140
  %144 = load i8, i8* %128, align 1
  %145 = zext i8 %144 to i16
  %146 = shl nuw i16 %145, 8
  %147 = getelementptr inbounds i8, i8* %128, i64 1
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i16
  %150 = or i16 %146, %149
  %151 = sext i16 %150 to i64
  %152 = shl nsw i64 %151, 2
  %153 = getelementptr inbounds i8, i8* %128, i64 4
  %154 = getelementptr inbounds i8, i8* %128, i64 2
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i16
  %157 = shl nuw i16 %156, 8
  %158 = getelementptr inbounds i8, i8* %128, i64 3
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i16
  %161 = or i16 %157, %160
  %162 = sext i16 %161 to i64
  %163 = shl nsw i64 %162, 2
  br label %207

164:                                              ; preds = %140
  %165 = icmp slt i8 %31, 0
  br i1 %165, label %166, label %207

166:                                              ; preds = %164
  %167 = load i8, i8* %128, align 1
  %168 = zext i8 %167 to i16
  %169 = shl nuw i16 %168, 8
  %170 = getelementptr inbounds i8, i8* %128, i64 1
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i16
  %173 = or i16 %169, %172
  %174 = sext i16 %173 to i64
  %175 = shl nsw i64 %174, 2
  %176 = getelementptr inbounds i8, i8* %128, i64 2
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i16
  %179 = shl nuw i16 %178, 8
  %180 = getelementptr inbounds i8, i8* %128, i64 3
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i16
  %183 = or i16 %179, %182
  %184 = sext i16 %183 to i64
  %185 = shl nsw i64 %184, 2
  %186 = getelementptr inbounds i8, i8* %128, i64 4
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i16
  %189 = shl nuw i16 %188, 8
  %190 = getelementptr inbounds i8, i8* %128, i64 5
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i16
  %193 = or i16 %189, %192
  %194 = sext i16 %193 to i64
  %195 = shl nsw i64 %194, 2
  %196 = getelementptr inbounds i8, i8* %128, i64 8
  %197 = getelementptr inbounds i8, i8* %128, i64 6
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i16
  %200 = shl nuw i16 %199, 8
  %201 = getelementptr inbounds i8, i8* %128, i64 7
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i16
  %204 = or i16 %200, %203
  %205 = sext i16 %204 to i64
  %206 = shl nsw i64 %205, 2
  br label %207

207:                                              ; preds = %143, %166, %164, %129
  %208 = phi i8* [ %130, %129 ], [ %153, %143 ], [ %196, %166 ], [ %128, %164 ]
  %209 = phi i64 [ %139, %129 ], [ %152, %143 ], [ %175, %166 ], [ 65536, %164 ]
  %210 = phi i64 [ 0, %129 ], [ 0, %143 ], [ %195, %166 ], [ 0, %164 ]
  %211 = phi i64 [ %139, %129 ], [ %163, %143 ], [ %206, %166 ], [ 65536, %164 ]
  %212 = phi i64 [ 0, %129 ], [ 0, %143 ], [ %185, %166 ], [ 0, %164 ]
  %213 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %23, i64 %24, i32 4, i32 0
  store i64 %209, i64* %213, align 8
  %214 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %23, i64 %24, i32 4, i32 1
  store i64 %210, i64* %214, align 8
  %215 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %23, i64 %24, i32 4, i32 2
  store i64 %212, i64* %215, align 8
  %216 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %23, i64 %24, i32 4, i32 3
  store i64 %211, i64* %216, align 8
  %217 = and i16 %32, 32
  %218 = icmp eq i16 %217, 0
  br i1 %218, label %219, label %13

219:                                              ; preds = %207
  %220 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %7, i64 0, i32 6, i32 3
  store i32 %16, i32* %220, align 8
  %221 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 6
  %222 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %221, align 8
  %223 = tail call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %222) #11
  %224 = getelementptr inbounds i8, i8* %208, i64 %223
  %225 = ptrtoint i8* %224 to i64
  %226 = ptrtoint i8* %5 to i64
  %227 = sub i64 %225, %226
  %228 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 20
  store i64 %227, i64* %228, align 8
  store i8* %208, i8** %2, align 8
  br label %229

229:                                              ; preds = %13, %64, %22, %19, %219
  %230 = phi i32 [ 0, %219 ], [ %17, %13 ], [ 21, %64 ], [ 21, %22 ], [ 21, %19 ]
  ret i32 %230
}

; Function Attrs: nounwind ssp uwtable
define internal void @TT_Forget_Glyph_Frame(%struct.TT_LoaderRec_* nocapture readonly) #2 {
  %2 = getelementptr inbounds %struct.TT_LoaderRec_, %struct.TT_LoaderRec_* %0, i64 0, i32 6
  %3 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %2, align 8
  tail call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %3) #11
  ret void
}

declare hidden i32 @FT_GlyphLoader_CheckSubGlyphs(%struct.FT_GlyphLoaderRec_*, i32) local_unnamed_addr #4

declare hidden i32 @FT_GlyphLoader_CreateExtra(%struct.FT_GlyphLoaderRec_*) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !3}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !3}
!16 = distinct !{!16, !3}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !11}
!23 = distinct !{!23, !3}
!24 = distinct !{!24, !11}
!25 = distinct !{!25, !3}
!26 = distinct !{!26, !3}
!27 = distinct !{!27, !3}
!28 = distinct !{!28, !3}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !11}
!35 = distinct !{!35, !3}
!36 = distinct !{!36, !11}
!37 = distinct !{!37, !3}
!38 = distinct !{!38, !3}
!39 = distinct !{!39, !3}
