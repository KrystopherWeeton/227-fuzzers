; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/logical.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/logical.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, {}*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"struct.tflite::ops::builtin::logical::(anonymous namespace)::OpData" = type { i8 }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"struct.tflite::NdArrayDesc" = type { [4 x i32], [4 x i32] }

$_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIbbbEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E = comdat any

$_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_ = comdat any

@_ZZN6tflite3ops7builtin19Register_LOGICAL_OREvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_14InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_14FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_113LogicalOrEvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin20Register_LOGICAL_ANDEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_14InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_14FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_114LogicalAndEvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.4 = private unnamed_addr constant [64 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/logical.cc\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"input1->type\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"input2->type\00", align 1
@.str.12 = private unnamed_addr constant [36 x i8] c"Logical ops only support bool type.\00", align 1
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin19Register_LOGICAL_OREv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin19Register_LOGICAL_OREvE1r
}

; Function Attrs: nofree nounwind ssp uwtable
define internal noalias nonnull i8* @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_14InitEP13TfLiteContextPKcm(%struct.TfLiteContext* nocapture readnone, i8* nocapture readnone, i64) #1 {
  %4 = tail call i8* @_Znwm(i64 1) #9
  store i8 0, i8* %4, align 1
  ret i8* %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_14FreeEP13TfLiteContextPv(%struct.TfLiteContext* nocapture readnone, i8*) #2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZdlPv(i8* nonnull %1) #9
  br label %5

5:                                                ; preds = %4, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #2 {
  %3 = alloca %struct.TfLiteIntArray*, align 8
  %4 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %5 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %11 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %10, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %11(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.4, i64 0, i64 0), i32 51, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i32 %7, i32 2) #10
  br label %96

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %20 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %19, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %20(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.4, i64 0, i64 0), i32 52, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 %16, i32 1) #10
  br label %96

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %23 = bitcast i8** %22 to %"struct.tflite::ops::builtin::logical::(anonymous namespace)::OpData"**
  %24 = load %"struct.tflite::ops::builtin::logical::(anonymous namespace)::OpData"*, %"struct.tflite::ops::builtin::logical::(anonymous namespace)::OpData"** %23, align 8
  %25 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %30 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %29, align 8
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 %31
  br label %33

33:                                               ; preds = %21, %28
  %34 = phi %struct.TfLiteTensor* [ %32, %28 ], [ null, %21 ]
  %35 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %40 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %39, align 8
  %41 = sext i32 %36 to i64
  %42 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 %41
  br label %43

43:                                               ; preds = %33, %38
  %44 = phi %struct.TfLiteTensor* [ %42, %38 ], [ null, %33 ]
  %45 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %50 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %49, align 8
  %51 = sext i32 %46 to i64
  %52 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 %51
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi %struct.TfLiteTensor* [ %52, %48 ], [ null, %43 ]
  %55 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %56, %58
  br i1 %59, label %66, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %62 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %61, align 8
  %63 = tail call i8* @TfLiteTypeGetName(i32 %56) #10
  %64 = load i32, i32* %57, align 8
  %65 = tail call i8* @TfLiteTypeGetName(i32 %64) #10
  tail call void (%struct.TfLiteContext*, i8*, ...) %62(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.4, i64 0, i64 0), i32 61, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8* %63, i8* %65) #10
  br label %96

66:                                               ; preds = %53
  %67 = icmp eq i32 %56, 6
  br i1 %67, label %71, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %70 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %69, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %70(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.12, i64 0, i64 0)) #10
  br label %96

71:                                               ; preds = %66
  %72 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 0, i32 0
  store i32 6, i32* %72, align 8
  %73 = tail call zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor* %34, %struct.TfLiteTensor* %44) #10
  %74 = xor i1 %73, true
  %75 = getelementptr inbounds %"struct.tflite::ops::builtin::logical::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::logical::(anonymous namespace)::OpData"* %24, i64 0, i32 0
  %76 = zext i1 %74 to i8
  store i8 %76, i8* %75, align 1
  %77 = bitcast %struct.TfLiteIntArray** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #10
  store %struct.TfLiteIntArray* null, %struct.TfLiteIntArray** %3, align 8
  %78 = load i8, i8* %75, align 1, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %71
  %81 = call i32 @_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %34, %struct.TfLiteTensor* %44, %struct.TfLiteIntArray** nonnull %3) #10
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %94

83:                                               ; preds = %80
  %84 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  br label %89

85:                                               ; preds = %71
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8
  %88 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %87) #10
  store %struct.TfLiteIntArray* %88, %struct.TfLiteIntArray** %3, align 8
  br label %89

89:                                               ; preds = %83, %85
  %90 = phi %struct.TfLiteIntArray* [ %84, %83 ], [ %88, %85 ]
  %91 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %92 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %91, align 8
  %93 = call i32 %92(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %54, %struct.TfLiteIntArray* %90) #10
  br label %94

94:                                               ; preds = %80, %89
  %95 = phi i32 [ %93, %89 ], [ %81, %80 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #10
  br label %96

96:                                               ; preds = %60, %94, %68, %18, %9
  %97 = phi i32 [ 1, %9 ], [ 1, %18 ], [ 1, %60 ], [ 1, %68 ], [ %95, %94 ]
  ret i32 %97
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_113LogicalOrEvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* nocapture readonly, %struct.TfLiteNode* nocapture readonly) #2 {
  tail call fastcc void @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_111LogicalImplEP13TfLiteContextP10TfLiteNodePFbbbE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, i1 (i1, i1)* nonnull @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_19LogicalOrEbb)
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin20Register_LOGICAL_ANDEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin20Register_LOGICAL_ANDEvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_114LogicalAndEvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* nocapture readonly, %struct.TfLiteNode* nocapture readonly) #2 {
  tail call fastcc void @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_111LogicalImplEP13TfLiteContextP10TfLiteNodePFbbbE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, i1 (i1, i1)* nonnull @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_110LogicalAndEbb)
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #6

declare zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #6

declare i32 @_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray(%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteIntArray**) local_unnamed_addr #6

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_111LogicalImplEP13TfLiteContextP10TfLiteNodePFbbbE(%struct.TfLiteContext* nocapture readonly, %struct.TfLiteNode* nocapture readonly, i1 (i1, i1)*) unnamed_addr #2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %11 = bitcast i8** %10 to %"struct.tflite::ops::builtin::logical::(anonymous namespace)::OpData"**
  %12 = load %"struct.tflite::ops::builtin::logical::(anonymous namespace)::OpData"*, %"struct.tflite::ops::builtin::logical::(anonymous namespace)::OpData"** %11, align 8
  %13 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %20 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %19, align 8
  %21 = sext i32 %16 to i64
  %22 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %20, i64 %21
  br label %23

23:                                               ; preds = %3, %18
  %24 = phi %struct.TfLiteTensor* [ %22, %18 ], [ null, %3 ]
  %25 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %30 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %29, align 8
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 %31
  br label %33

33:                                               ; preds = %23, %28
  %34 = phi %struct.TfLiteTensor* [ %32, %28 ], [ null, %23 ]
  %35 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %36 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %35, align 8
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %42 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %41, align 8
  %43 = sext i32 %38 to i64
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 %43
  br label %45

45:                                               ; preds = %33, %40
  %46 = phi %struct.TfLiteTensor* [ %44, %40 ], [ null, %33 ]
  %47 = getelementptr inbounds %"struct.tflite::ops::builtin::logical::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::logical::(anonymous namespace)::OpData"* %12, i64 0, i32 0
  %48 = load i8, i8* %47, align 1, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %182, label %50

50:                                               ; preds = %45
  %51 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #10
  %52 = icmp eq %struct.TfLiteTensor* %24, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %54, align 8, !alias.scope !3
  br label %83

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %24, i64 0, i32 2
  %57 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %56, align 8, !noalias !3
  %58 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %57, i64 0, i32 0
  %59 = load i32, i32* %58, align 4, !noalias !3
  %60 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %57, i64 0, i32 1, i64 0
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %59, i32* %61, align 8, !alias.scope !3
  %62 = icmp sgt i32 %59, 5
  br i1 %62, label %63, label %70

63:                                               ; preds = %55
  %64 = sext i32 %59 to i64
  %65 = shl nsw i64 %64, 2
  %66 = tail call i8* @_Znam(i64 %65) #9, !noalias !3
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %68 = bitcast i32** %67 to i8**
  store i8* %66, i8** %68, align 8, !alias.scope !3
  %69 = bitcast i8* %66 to i32*
  br label %75

70:                                               ; preds = %55
  %71 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %72 = bitcast %union.anon* %71 to i32*
  %73 = sext i32 %59 to i64
  %74 = shl nsw i64 %73, 2
  br label %75

75:                                               ; preds = %70, %63
  %76 = phi i64 [ %65, %63 ], [ %74, %70 ]
  %77 = phi i32* [ %69, %63 ], [ %72, %70 ]
  %78 = bitcast i32* %77 to i8*
  %79 = bitcast i32* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 %76, i1 false) #10
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %24, i64 0, i32 1
  %81 = bitcast %union.TfLitePtrUnion* %80 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %53, %75
  %84 = phi i8* [ %82, %75 ], [ null, %53 ]
  %85 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %85) #10
  %86 = icmp eq %struct.TfLiteTensor* %34, null
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %88, align 8, !alias.scope !6
  br label %117

89:                                               ; preds = %83
  %90 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 0, i32 2
  %91 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %90, align 8, !noalias !6
  %92 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 0, i32 0
  %93 = load i32, i32* %92, align 4, !noalias !6
  %94 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 0, i32 1, i64 0
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %93, i32* %95, align 8, !alias.scope !6
  %96 = icmp sgt i32 %93, 5
  br i1 %96, label %97, label %104

97:                                               ; preds = %89
  %98 = sext i32 %93 to i64
  %99 = shl nsw i64 %98, 2
  %100 = tail call i8* @_Znam(i64 %99) #9, !noalias !6
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %102 = bitcast i32** %101 to i8**
  store i8* %100, i8** %102, align 8, !alias.scope !6
  %103 = bitcast i8* %100 to i32*
  br label %109

104:                                              ; preds = %89
  %105 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %106 = bitcast %union.anon* %105 to i32*
  %107 = sext i32 %93 to i64
  %108 = shl nsw i64 %107, 2
  br label %109

109:                                              ; preds = %104, %97
  %110 = phi i64 [ %99, %97 ], [ %108, %104 ]
  %111 = phi i32* [ %103, %97 ], [ %106, %104 ]
  %112 = bitcast i32* %111 to i8*
  %113 = bitcast i32* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %112, i8* align 4 %113, i64 %110, i1 false) #10
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 0, i32 1
  %115 = bitcast %union.TfLitePtrUnion* %114 to i8**
  %116 = load i8*, i8** %115, align 8
  br label %117

117:                                              ; preds = %87, %109
  %118 = phi i8* [ %116, %109 ], [ null, %87 ]
  %119 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %119) #10
  %120 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %120, label %121, label %123

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %122, align 8, !alias.scope !9
  br label %151

123:                                              ; preds = %117
  %124 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 2
  %125 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %124, align 8, !noalias !9
  %126 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %125, i64 0, i32 0
  %127 = load i32, i32* %126, align 4, !noalias !9
  %128 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %125, i64 0, i32 1, i64 0
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %127, i32* %129, align 8, !alias.scope !9
  %130 = icmp sgt i32 %127, 5
  br i1 %130, label %131, label %138

131:                                              ; preds = %123
  %132 = sext i32 %127 to i64
  %133 = shl nsw i64 %132, 2
  %134 = tail call i8* @_Znam(i64 %133) #9, !noalias !9
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %136 = bitcast i32** %135 to i8**
  store i8* %134, i8** %136, align 8, !alias.scope !9
  %137 = bitcast i8* %134 to i32*
  br label %143

138:                                              ; preds = %123
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %140 = bitcast %union.anon* %139 to i32*
  %141 = sext i32 %127 to i64
  %142 = shl nsw i64 %141, 2
  br label %143

143:                                              ; preds = %138, %131
  %144 = phi i64 [ %133, %131 ], [ %142, %138 ]
  %145 = phi i32* [ %137, %131 ], [ %140, %138 ]
  %146 = bitcast i32* %145 to i8*
  %147 = bitcast i32* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %146, i8* align 4 %147, i64 %144, i1 false) #10
  %148 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %149 = bitcast %union.TfLitePtrUnion* %148 to i8**
  %150 = load i8*, i8** %149, align 8
  br label %151

151:                                              ; preds = %121, %143
  %152 = phi i8* [ %150, %143 ], [ null, %121 ]
  call void @_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIbbbEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i8* %84, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i8* %118, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i8* %152, i1 (i1, i1)* %2)
  %153 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %154 = load i32, i32* %153, align 8
  %155 = icmp sgt i32 %154, 5
  br i1 %155, label %156, label %162

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %158 = load i32*, i32** %157, align 8
  %159 = icmp eq i32* %158, null
  br i1 %159, label %162, label %160

160:                                              ; preds = %156
  %161 = bitcast i32* %158 to i8*
  call void @_ZdaPv(i8* %161) #9
  br label %162

162:                                              ; preds = %151, %156, %160
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %119) #10
  %163 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %164 = load i32, i32* %163, align 8
  %165 = icmp sgt i32 %164, 5
  br i1 %165, label %166, label %172

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %168 = load i32*, i32** %167, align 8
  %169 = icmp eq i32* %168, null
  br i1 %169, label %172, label %170

170:                                              ; preds = %166
  %171 = bitcast i32* %168 to i8*
  call void @_ZdaPv(i8* %171) #9
  br label %172

172:                                              ; preds = %162, %166, %170
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %85) #10
  %173 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %174 = load i32, i32* %173, align 8
  %175 = icmp sgt i32 %174, 5
  br i1 %175, label %176, label %438

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %178 = load i32*, i32** %177, align 8
  %179 = icmp eq i32* %178, null
  br i1 %179, label %438, label %180

180:                                              ; preds = %176
  %181 = bitcast i32* %178 to i8*
  call void @_ZdaPv(i8* %181) #9
  br label %438

182:                                              ; preds = %45
  %183 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %183) #10
  %184 = icmp eq %struct.TfLiteTensor* %24, null
  br i1 %184, label %185, label %187

185:                                              ; preds = %182
  %186 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %186, align 8, !alias.scope !12
  br label %215

187:                                              ; preds = %182
  %188 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %24, i64 0, i32 2
  %189 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %188, align 8, !noalias !12
  %190 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %189, i64 0, i32 0
  %191 = load i32, i32* %190, align 4, !noalias !12
  %192 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %189, i64 0, i32 1, i64 0
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %191, i32* %193, align 8, !alias.scope !12
  %194 = icmp sgt i32 %191, 5
  br i1 %194, label %195, label %202

195:                                              ; preds = %187
  %196 = sext i32 %191 to i64
  %197 = shl nsw i64 %196, 2
  %198 = tail call i8* @_Znam(i64 %197) #9, !noalias !12
  %199 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %200 = bitcast i32** %199 to i8**
  store i8* %198, i8** %200, align 8, !alias.scope !12
  %201 = bitcast i8* %198 to i32*
  br label %207

202:                                              ; preds = %187
  %203 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %204 = bitcast %union.anon* %203 to i32*
  %205 = sext i32 %191 to i64
  %206 = shl nsw i64 %205, 2
  br label %207

207:                                              ; preds = %202, %195
  %208 = phi i64 [ %197, %195 ], [ %206, %202 ]
  %209 = phi i32* [ %201, %195 ], [ %204, %202 ]
  %210 = bitcast i32* %209 to i8*
  %211 = bitcast i32* %192 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %210, i8* align 4 %211, i64 %208, i1 false) #10
  %212 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %24, i64 0, i32 1
  %213 = bitcast %union.TfLitePtrUnion* %212 to i8**
  %214 = load i8*, i8** %213, align 8
  br label %215

215:                                              ; preds = %185, %207
  %216 = phi i32 [ %191, %207 ], [ 0, %185 ]
  %217 = phi i8* [ %214, %207 ], [ null, %185 ]
  %218 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %218) #10
  %219 = icmp eq %struct.TfLiteTensor* %34, null
  br i1 %219, label %220, label %222

220:                                              ; preds = %215
  %221 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %221, align 8, !alias.scope !15
  br label %250

222:                                              ; preds = %215
  %223 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 0, i32 2
  %224 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %223, align 8, !noalias !15
  %225 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %224, i64 0, i32 0
  %226 = load i32, i32* %225, align 4, !noalias !15
  %227 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %224, i64 0, i32 1, i64 0
  %228 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %226, i32* %228, align 8, !alias.scope !15
  %229 = icmp sgt i32 %226, 5
  br i1 %229, label %230, label %237

230:                                              ; preds = %222
  %231 = sext i32 %226 to i64
  %232 = shl nsw i64 %231, 2
  %233 = tail call i8* @_Znam(i64 %232) #9, !noalias !15
  %234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %235 = bitcast i32** %234 to i8**
  store i8* %233, i8** %235, align 8, !alias.scope !15
  %236 = bitcast i8* %233 to i32*
  br label %242

237:                                              ; preds = %222
  %238 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %239 = bitcast %union.anon* %238 to i32*
  %240 = sext i32 %226 to i64
  %241 = shl nsw i64 %240, 2
  br label %242

242:                                              ; preds = %237, %230
  %243 = phi i64 [ %232, %230 ], [ %241, %237 ]
  %244 = phi i32* [ %236, %230 ], [ %239, %237 ]
  %245 = bitcast i32* %244 to i8*
  %246 = bitcast i32* %227 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %245, i8* align 4 %246, i64 %243, i1 false) #10
  %247 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 0, i32 1
  %248 = bitcast %union.TfLitePtrUnion* %247 to i8**
  %249 = load i8*, i8** %248, align 8
  br label %250

250:                                              ; preds = %220, %242
  %251 = phi i32 [ %226, %242 ], [ 0, %220 ]
  %252 = phi i8* [ %249, %242 ], [ null, %220 ]
  %253 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %253) #10
  %254 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %254, label %255, label %257

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %256, align 8, !alias.scope !18
  br label %285

257:                                              ; preds = %250
  %258 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 2
  %259 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %258, align 8, !noalias !18
  %260 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %259, i64 0, i32 0
  %261 = load i32, i32* %260, align 4, !noalias !18
  %262 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %259, i64 0, i32 1, i64 0
  %263 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %261, i32* %263, align 8, !alias.scope !18
  %264 = icmp sgt i32 %261, 5
  br i1 %264, label %265, label %272

265:                                              ; preds = %257
  %266 = sext i32 %261 to i64
  %267 = shl nsw i64 %266, 2
  %268 = tail call i8* @_Znam(i64 %267) #9, !noalias !18
  %269 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %270 = bitcast i32** %269 to i8**
  store i8* %268, i8** %270, align 8, !alias.scope !18
  %271 = bitcast i8* %268 to i32*
  br label %277

272:                                              ; preds = %257
  %273 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %274 = bitcast %union.anon* %273 to i32*
  %275 = sext i32 %261 to i64
  %276 = shl nsw i64 %275, 2
  br label %277

277:                                              ; preds = %272, %265
  %278 = phi i64 [ %267, %265 ], [ %276, %272 ]
  %279 = phi i32* [ %271, %265 ], [ %274, %272 ]
  %280 = bitcast i32* %279 to i8*
  %281 = bitcast i32* %262 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %280, i8* align 4 %281, i64 %278, i1 false) #10
  %282 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %283 = bitcast %union.TfLitePtrUnion* %282 to i8**
  %284 = load i8*, i8** %283, align 8
  br label %285

285:                                              ; preds = %255, %277
  %286 = phi i32 [ %261, %277 ], [ 0, %255 ]
  %287 = phi i8* [ %284, %277 ], [ null, %255 ]
  %288 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %289 = icmp sgt i32 %216, 5
  br i1 %289, label %290, label %293

290:                                              ; preds = %285
  %291 = getelementptr inbounds %union.anon, %union.anon* %288, i64 0, i32 0
  %292 = load i32*, i32** %291, align 8
  br label %296

293:                                              ; preds = %285
  %294 = bitcast %union.anon* %288 to i32*
  %295 = icmp sgt i32 %216, 0
  br i1 %295, label %296, label %399

296:                                              ; preds = %293, %290
  %297 = phi i32* [ %292, %290 ], [ %294, %293 ]
  %298 = zext i32 %216 to i64
  %299 = icmp ult i32 %216, 8
  br i1 %299, label %385, label %300

300:                                              ; preds = %296
  %301 = and i64 %298, 4294967288
  %302 = add nsw i64 %301, -8
  %303 = lshr exact i64 %302, 3
  %304 = add nuw nsw i64 %303, 1
  %305 = and i64 %304, 3
  %306 = icmp ult i64 %302, 24
  br i1 %306, label %352, label %307

307:                                              ; preds = %300
  %308 = sub nsw i64 %304, %305
  br label %309

309:                                              ; preds = %309, %307
  %310 = phi i64 [ 0, %307 ], [ %349, %309 ]
  %311 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %307 ], [ %347, %309 ]
  %312 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %307 ], [ %348, %309 ]
  %313 = phi i64 [ %308, %307 ], [ %350, %309 ]
  %314 = getelementptr inbounds i32, i32* %297, i64 %310
  %315 = bitcast i32* %314 to <4 x i32>*
  %316 = load <4 x i32>, <4 x i32>* %315, align 4
  %317 = getelementptr inbounds i32, i32* %314, i64 4
  %318 = bitcast i32* %317 to <4 x i32>*
  %319 = load <4 x i32>, <4 x i32>* %318, align 4
  %320 = mul nsw <4 x i32> %316, %311
  %321 = mul nsw <4 x i32> %319, %312
  %322 = or i64 %310, 8
  %323 = getelementptr inbounds i32, i32* %297, i64 %322
  %324 = bitcast i32* %323 to <4 x i32>*
  %325 = load <4 x i32>, <4 x i32>* %324, align 4
  %326 = getelementptr inbounds i32, i32* %323, i64 4
  %327 = bitcast i32* %326 to <4 x i32>*
  %328 = load <4 x i32>, <4 x i32>* %327, align 4
  %329 = mul nsw <4 x i32> %325, %320
  %330 = mul nsw <4 x i32> %328, %321
  %331 = or i64 %310, 16
  %332 = getelementptr inbounds i32, i32* %297, i64 %331
  %333 = bitcast i32* %332 to <4 x i32>*
  %334 = load <4 x i32>, <4 x i32>* %333, align 4
  %335 = getelementptr inbounds i32, i32* %332, i64 4
  %336 = bitcast i32* %335 to <4 x i32>*
  %337 = load <4 x i32>, <4 x i32>* %336, align 4
  %338 = mul nsw <4 x i32> %334, %329
  %339 = mul nsw <4 x i32> %337, %330
  %340 = or i64 %310, 24
  %341 = getelementptr inbounds i32, i32* %297, i64 %340
  %342 = bitcast i32* %341 to <4 x i32>*
  %343 = load <4 x i32>, <4 x i32>* %342, align 4
  %344 = getelementptr inbounds i32, i32* %341, i64 4
  %345 = bitcast i32* %344 to <4 x i32>*
  %346 = load <4 x i32>, <4 x i32>* %345, align 4
  %347 = mul nsw <4 x i32> %343, %338
  %348 = mul nsw <4 x i32> %346, %339
  %349 = add i64 %310, 32
  %350 = add i64 %313, -4
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %309, !llvm.loop !21

352:                                              ; preds = %309, %300
  %353 = phi <4 x i32> [ undef, %300 ], [ %347, %309 ]
  %354 = phi <4 x i32> [ undef, %300 ], [ %348, %309 ]
  %355 = phi i64 [ 0, %300 ], [ %349, %309 ]
  %356 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %300 ], [ %347, %309 ]
  %357 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %300 ], [ %348, %309 ]
  %358 = icmp eq i64 %305, 0
  br i1 %358, label %375, label %359

359:                                              ; preds = %352, %359
  %360 = phi i64 [ %372, %359 ], [ %355, %352 ]
  %361 = phi <4 x i32> [ %370, %359 ], [ %356, %352 ]
  %362 = phi <4 x i32> [ %371, %359 ], [ %357, %352 ]
  %363 = phi i64 [ %373, %359 ], [ %305, %352 ]
  %364 = getelementptr inbounds i32, i32* %297, i64 %360
  %365 = bitcast i32* %364 to <4 x i32>*
  %366 = load <4 x i32>, <4 x i32>* %365, align 4
  %367 = getelementptr inbounds i32, i32* %364, i64 4
  %368 = bitcast i32* %367 to <4 x i32>*
  %369 = load <4 x i32>, <4 x i32>* %368, align 4
  %370 = mul nsw <4 x i32> %366, %361
  %371 = mul nsw <4 x i32> %369, %362
  %372 = add i64 %360, 8
  %373 = add i64 %363, -1
  %374 = icmp eq i64 %373, 0
  br i1 %374, label %375, label %359, !llvm.loop !23

375:                                              ; preds = %359, %352
  %376 = phi <4 x i32> [ %353, %352 ], [ %370, %359 ]
  %377 = phi <4 x i32> [ %354, %352 ], [ %371, %359 ]
  %378 = mul <4 x i32> %377, %376
  %379 = shufflevector <4 x i32> %378, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %380 = mul <4 x i32> %378, %379
  %381 = shufflevector <4 x i32> %380, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %382 = mul <4 x i32> %380, %381
  %383 = extractelement <4 x i32> %382, i32 0
  %384 = icmp eq i64 %301, %298
  br i1 %384, label %396, label %385

385:                                              ; preds = %375, %296
  %386 = phi i64 [ 0, %296 ], [ %301, %375 ]
  %387 = phi i32 [ 1, %296 ], [ %383, %375 ]
  br label %388

388:                                              ; preds = %385, %388
  %389 = phi i64 [ %394, %388 ], [ %386, %385 ]
  %390 = phi i32 [ %393, %388 ], [ %387, %385 ]
  %391 = getelementptr inbounds i32, i32* %297, i64 %389
  %392 = load i32, i32* %391, align 4
  %393 = mul nsw i32 %392, %390
  %394 = add nuw nsw i64 %389, 1
  %395 = icmp eq i64 %394, %298
  br i1 %395, label %396, label %388, !llvm.loop !25

396:                                              ; preds = %388, %375
  %397 = phi i32 [ %383, %375 ], [ %393, %388 ]
  %398 = icmp sgt i32 %397, 0
  br i1 %398, label %399, label %415

399:                                              ; preds = %396, %293
  %400 = phi i32 [ %397, %396 ], [ 1, %293 ]
  %401 = zext i32 %400 to i64
  br label %402

402:                                              ; preds = %402, %399
  %403 = phi i64 [ 0, %399 ], [ %413, %402 ]
  %404 = getelementptr inbounds i8, i8* %217, i64 %403
  %405 = load i8, i8* %404, align 1, !range !2
  %406 = icmp ne i8 %405, 0
  %407 = getelementptr inbounds i8, i8* %252, i64 %403
  %408 = load i8, i8* %407, align 1, !range !2
  %409 = icmp ne i8 %408, 0
  %410 = tail call zeroext i1 %2(i1 zeroext %406, i1 zeroext %409) #10
  %411 = getelementptr inbounds i8, i8* %287, i64 %403
  %412 = zext i1 %410 to i8
  store i8 %412, i8* %411, align 1
  %413 = add nuw nsw i64 %403, 1
  %414 = icmp eq i64 %413, %401
  br i1 %414, label %415, label %402

415:                                              ; preds = %402, %396
  %416 = icmp sgt i32 %286, 5
  br i1 %416, label %417, label %423

417:                                              ; preds = %415
  %418 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %419 = load i32*, i32** %418, align 8
  %420 = icmp eq i32* %419, null
  br i1 %420, label %423, label %421

421:                                              ; preds = %417
  %422 = bitcast i32* %419 to i8*
  tail call void @_ZdaPv(i8* %422) #9
  br label %423

423:                                              ; preds = %415, %417, %421
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %253) #10
  %424 = icmp sgt i32 %251, 5
  br i1 %424, label %425, label %431

425:                                              ; preds = %423
  %426 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %427 = load i32*, i32** %426, align 8
  %428 = icmp eq i32* %427, null
  br i1 %428, label %431, label %429

429:                                              ; preds = %425
  %430 = bitcast i32* %427 to i8*
  tail call void @_ZdaPv(i8* %430) #9
  br label %431

431:                                              ; preds = %423, %425, %429
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %218) #10
  br i1 %289, label %432, label %438

432:                                              ; preds = %431
  %433 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %434 = load i32*, i32** %433, align 8
  %435 = icmp eq i32* %434, null
  br i1 %435, label %438, label %436

436:                                              ; preds = %432
  %437 = bitcast i32* %434 to i8*
  tail call void @_ZdaPv(i8* %437) #9
  br label %438

438:                                              ; preds = %436, %432, %431, %180, %176, %172
  %439 = phi i8* [ %51, %172 ], [ %51, %176 ], [ %51, %180 ], [ %183, %431 ], [ %183, %432 ], [ %183, %436 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %439) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_19LogicalOrEbb(i1 zeroext, i1 zeroext) #0 {
  %3 = or i1 %0, %1
  ret i1 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIbbbEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E(%"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i1 (i1, i1)*) local_unnamed_addr #7 comdat {
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::NdArrayDesc", align 4
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %12 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %13, align 8, !alias.scope !27
  %14 = load i32, i32* %11, align 8, !noalias !27
  %15 = icmp sgt i32 %14, 4
  br i1 %15, label %16, label %17

16:                                               ; preds = %7
  tail call void @abort() #11, !noalias !27
  unreachable

17:                                               ; preds = %7
  store i32 4, i32* %13, align 8, !alias.scope !27
  %18 = sub i32 4, %14
  %19 = icmp sgt i32 %18, 0
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %19, label %21, label %101

21:                                               ; preds = %17
  %22 = bitcast %union.anon* %20 to [5 x i32]*
  %23 = zext i32 %18 to i64
  %24 = icmp ult i32 %18, 8
  br i1 %24, label %94, label %25

25:                                               ; preds = %21
  %26 = and i64 %23, 4294967288
  %27 = add nsw i64 %26, -8
  %28 = lshr exact i64 %27, 3
  %29 = add nuw nsw i64 %28, 1
  %30 = and i64 %29, 7
  %31 = icmp ult i64 %27, 56
  br i1 %31, label %79, label %32

32:                                               ; preds = %25
  %33 = sub nsw i64 %29, %30
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi i64 [ 0, %32 ], [ %76, %34 ]
  %36 = phi i64 [ %33, %32 ], [ %77, %34 ]
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %35
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !27
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !27
  %41 = or i64 %35, 8
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !27
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !27
  %46 = or i64 %35, 16
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !27
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !27
  %51 = or i64 %35, 24
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !27
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !27
  %56 = or i64 %35, 32
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !27
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !27
  %61 = or i64 %35, 40
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !27
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !27
  %66 = or i64 %35, 48
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !27
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !27
  %71 = or i64 %35, 56
  %72 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %71
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !27
  %74 = getelementptr inbounds i32, i32* %72, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !27
  %76 = add i64 %35, 64
  %77 = add i64 %36, -8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %34, !llvm.loop !30

79:                                               ; preds = %34, %25
  %80 = phi i64 [ 0, %25 ], [ %76, %34 ]
  %81 = icmp eq i64 %30, 0
  br i1 %81, label %92, label %82

82:                                               ; preds = %79, %82
  %83 = phi i64 [ %89, %82 ], [ %80, %79 ]
  %84 = phi i64 [ %90, %82 ], [ %30, %79 ]
  %85 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %83
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !27
  %87 = getelementptr inbounds i32, i32* %85, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !27
  %89 = add i64 %83, 8
  %90 = add i64 %84, -1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %82, !llvm.loop !31

92:                                               ; preds = %82, %79
  %93 = icmp eq i64 %26, %23
  br i1 %93, label %101, label %94

94:                                               ; preds = %92, %21
  %95 = phi i64 [ 0, %21 ], [ %26, %92 ]
  br label %96

96:                                               ; preds = %94, %96
  %97 = phi i64 [ %99, %96 ], [ %95, %94 ]
  %98 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %97
  store i32 1, i32* %98, align 4, !alias.scope !27
  %99 = add nuw nsw i64 %97, 1
  %100 = icmp eq i64 %99, %23
  br i1 %100, label %101, label %96, !llvm.loop !32

101:                                              ; preds = %96, %92, %17
  %102 = getelementptr inbounds %union.anon, %union.anon* %20, i64 0, i32 0
  %103 = bitcast %union.anon* %20 to i32*
  %104 = sext i32 %18 to i64
  %105 = getelementptr inbounds i32, i32* %103, i64 %104
  %106 = bitcast i32* %105 to i8*
  %107 = icmp sgt i32 %14, 5
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %109 = getelementptr inbounds %union.anon, %union.anon* %108, i64 0, i32 0
  %110 = load i32*, i32** %109, align 8, !noalias !27
  %111 = bitcast %union.anon* %108 to i32*
  %112 = select i1 %107, i32* %110, i32* %111
  %113 = bitcast i32* %112 to i8*
  %114 = sext i32 %14 to i64
  %115 = shl nsw i64 %114, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %113, i64 %115, i1 false) #10
  %116 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %116) #10
  %117 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 0
  %118 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 1
  %119 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 2
  %120 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 3
  %121 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  %122 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %122, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %121) #10
  %123 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 0
  %124 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 1
  %125 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 2
  %126 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 3
  %127 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %127, i8 -86, i64 32, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %2, %"struct.tflite::NdArrayDesc"* nonnull %9, %"struct.tflite::NdArrayDesc"* nonnull %10)
  %128 = load i32, i32* %13, align 8
  %129 = icmp sgt i32 %128, 5
  %130 = load i32*, i32** %102, align 8
  %131 = select i1 %129, i32* %130, i32* %103
  %132 = load i32, i32* %131, align 4
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %134, label %153

134:                                              ; preds = %101
  %135 = bitcast %union.anon* %20 to [5 x i32]*
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %135, i64 0, i64 1
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %138 = bitcast [16 x i8]* %137 to i32*
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %140 = bitcast i8* %139 to i32*
  %141 = getelementptr inbounds i32, i32* %103, i64 1
  %142 = getelementptr inbounds i32, i32* %130, i64 1
  %143 = select i1 %129, i32* %142, i32* %136
  %144 = getelementptr inbounds i32, i32* %130, i64 2
  %145 = select i1 %129, i32* %144, i32* %138
  %146 = getelementptr inbounds i32, i32* %130, i64 3
  %147 = select i1 %129, i32* %146, i32* %140
  br label %148

148:                                              ; preds = %134, %172
  %149 = phi i32 [ %132, %134 ], [ %173, %172 ]
  %150 = phi i32 [ 0, %134 ], [ %174, %172 ]
  %151 = load i32, i32* %143, align 4
  %152 = icmp sgt i32 %151, 0
  br i1 %152, label %160, label %172

153:                                              ; preds = %172, %101
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %121) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %116) #10
  %154 = xor i1 %129, true
  %155 = icmp eq i32* %130, null
  %156 = or i1 %155, %154
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  %158 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %158) #9
  br label %159

159:                                              ; preds = %153, %157
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #10
  ret void

160:                                              ; preds = %148, %189
  %161 = phi i32 [ %190, %189 ], [ %151, %148 ]
  %162 = phi i32 [ %191, %189 ], [ 0, %148 ]
  %163 = load i32, i32* %145, align 4
  %164 = icmp sgt i32 %163, 0
  br i1 %164, label %165, label %189

165:                                              ; preds = %160
  %166 = load i32, i32* %141, align 4
  %167 = mul nsw i32 %166, %150
  %168 = add nsw i32 %167, %162
  %169 = load i32, i32* %147, align 4
  br label %176

170:                                              ; preds = %189
  %171 = load i32, i32* %131, align 4
  br label %172

172:                                              ; preds = %170, %148
  %173 = phi i32 [ %171, %170 ], [ %149, %148 ]
  %174 = add nuw nsw i32 %150, 1
  %175 = icmp slt i32 %174, %173
  br i1 %175, label %148, label %153

176:                                              ; preds = %165, %195
  %177 = phi i32 [ %163, %165 ], [ %196, %195 ]
  %178 = phi i32 [ %169, %165 ], [ %197, %195 ]
  %179 = phi i32 [ 0, %165 ], [ %198, %195 ]
  %180 = icmp sgt i32 %178, 0
  br i1 %180, label %181, label %195

181:                                              ; preds = %176
  %182 = load i32, i32* %138, align 8
  %183 = mul nsw i32 %168, %182
  %184 = add nsw i32 %183, %179
  %185 = load i32, i32* %140, align 4
  %186 = mul nsw i32 %184, %185
  br label %200

187:                                              ; preds = %195
  %188 = load i32, i32* %143, align 4
  br label %189

189:                                              ; preds = %187, %160
  %190 = phi i32 [ %188, %187 ], [ %161, %160 ]
  %191 = add nuw nsw i32 %162, 1
  %192 = icmp slt i32 %191, %190
  br i1 %192, label %160, label %170

193:                                              ; preds = %200
  %194 = load i32, i32* %145, align 4
  br label %195

195:                                              ; preds = %193, %176
  %196 = phi i32 [ %194, %193 ], [ %177, %176 ]
  %197 = phi i32 [ %238, %193 ], [ %178, %176 ]
  %198 = add nuw nsw i32 %179, 1
  %199 = icmp slt i32 %198, %196
  br i1 %199, label %176, label %187

200:                                              ; preds = %181, %200
  %201 = phi i32 [ 0, %181 ], [ %237, %200 ]
  %202 = add nsw i32 %186, %201
  %203 = load i32, i32* %117, align 4
  %204 = mul nsw i32 %203, %150
  %205 = load i32, i32* %118, align 4
  %206 = mul nsw i32 %205, %162
  %207 = add nsw i32 %206, %204
  %208 = load i32, i32* %119, align 4
  %209 = mul nsw i32 %208, %179
  %210 = add nsw i32 %207, %209
  %211 = load i32, i32* %120, align 4
  %212 = mul nsw i32 %211, %201
  %213 = add nsw i32 %210, %212
  %214 = load i32, i32* %123, align 4
  %215 = mul nsw i32 %214, %150
  %216 = load i32, i32* %124, align 4
  %217 = mul nsw i32 %216, %162
  %218 = add nsw i32 %217, %215
  %219 = load i32, i32* %125, align 4
  %220 = mul nsw i32 %219, %179
  %221 = add nsw i32 %218, %220
  %222 = load i32, i32* %126, align 4
  %223 = mul nsw i32 %222, %201
  %224 = add nsw i32 %221, %223
  %225 = sext i32 %213 to i64
  %226 = getelementptr inbounds i8, i8* %1, i64 %225
  %227 = load i8, i8* %226, align 1, !range !2
  %228 = icmp ne i8 %227, 0
  %229 = sext i32 %224 to i64
  %230 = getelementptr inbounds i8, i8* %3, i64 %229
  %231 = load i8, i8* %230, align 1, !range !2
  %232 = icmp ne i8 %231, 0
  %233 = call zeroext i1 %6(i1 zeroext %228, i1 zeroext %232) #10
  %234 = sext i32 %202 to i64
  %235 = getelementptr inbounds i8, i8* %5, i64 %234
  %236 = zext i1 %233 to i8
  store i8 %236, i8* %235, align 1
  %237 = add nuw nsw i32 %201, 1
  %238 = load i32, i32* %147, align 4
  %239 = icmp slt i32 %237, %238
  br i1 %239, label %200, label %193
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"*) local_unnamed_addr #7 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %8, align 8, !alias.scope !33
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8, !noalias !33
  %11 = icmp sgt i32 %10, 4
  br i1 %11, label %12, label %13

12:                                               ; preds = %4
  tail call void @abort() #11, !noalias !33
  unreachable

13:                                               ; preds = %4
  store i32 4, i32* %8, align 8, !alias.scope !33
  %14 = sub i32 4, %10
  %15 = icmp sgt i32 %14, 0
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %15, label %17, label %97

17:                                               ; preds = %13
  %18 = bitcast %union.anon* %16 to [5 x i32]*
  %19 = zext i32 %14 to i64
  %20 = icmp ult i32 %14, 8
  br i1 %20, label %90, label %21

21:                                               ; preds = %17
  %22 = and i64 %19, 4294967288
  %23 = add nsw i64 %22, -8
  %24 = lshr exact i64 %23, 3
  %25 = add nuw nsw i64 %24, 1
  %26 = and i64 %25, 7
  %27 = icmp ult i64 %23, 56
  br i1 %27, label %75, label %28

28:                                               ; preds = %21
  %29 = sub nsw i64 %25, %26
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %72, %30 ]
  %32 = phi i64 [ %29, %28 ], [ %73, %30 ]
  %33 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %31
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %34, align 8, !alias.scope !33
  %35 = getelementptr inbounds i32, i32* %33, i64 4
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !33
  %37 = or i64 %31, 8
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %37
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !33
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !33
  %42 = or i64 %31, 16
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !33
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !33
  %47 = or i64 %31, 24
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !33
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !33
  %52 = or i64 %31, 32
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !33
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !33
  %57 = or i64 %31, 40
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !33
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !33
  %62 = or i64 %31, 48
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !33
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !33
  %67 = or i64 %31, 56
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !33
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !33
  %72 = add i64 %31, 64
  %73 = add i64 %32, -8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %30, !llvm.loop !36

75:                                               ; preds = %30, %21
  %76 = phi i64 [ 0, %21 ], [ %72, %30 ]
  %77 = icmp eq i64 %26, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %75, %78
  %79 = phi i64 [ %85, %78 ], [ %76, %75 ]
  %80 = phi i64 [ %86, %78 ], [ %26, %75 ]
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %79
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !33
  %83 = getelementptr inbounds i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !33
  %85 = add i64 %79, 8
  %86 = add i64 %80, -1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %78, !llvm.loop !37

88:                                               ; preds = %78, %75
  %89 = icmp eq i64 %22, %19
  br i1 %89, label %97, label %90

90:                                               ; preds = %88, %17
  %91 = phi i64 [ 0, %17 ], [ %22, %88 ]
  br label %92

92:                                               ; preds = %90, %92
  %93 = phi i64 [ %95, %92 ], [ %91, %90 ]
  %94 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %93
  store i32 1, i32* %94, align 4, !alias.scope !33
  %95 = add nuw nsw i64 %93, 1
  %96 = icmp eq i64 %95, %19
  br i1 %96, label %97, label %92, !llvm.loop !38

97:                                               ; preds = %92, %88, %13
  %98 = getelementptr inbounds %union.anon, %union.anon* %16, i64 0, i32 0
  %99 = bitcast %union.anon* %16 to i32*
  %100 = sext i32 %14 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = icmp sgt i32 %10, 5
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %105 = getelementptr inbounds %union.anon, %union.anon* %104, i64 0, i32 0
  %106 = load i32*, i32** %105, align 8, !noalias !33
  %107 = bitcast %union.anon* %104 to i32*
  %108 = select i1 %103, i32* %106, i32* %107
  %109 = bitcast i32* %108 to i8*
  %110 = sext i32 %10 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 %111, i1 false) #10
  %112 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %112) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 32, i1 false)
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %113, align 8, !alias.scope !39
  %114 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %115 = load i32, i32* %114, align 8, !noalias !39
  %116 = icmp sgt i32 %115, 4
  br i1 %116, label %117, label %118

117:                                              ; preds = %97
  tail call void @abort() #11, !noalias !39
  unreachable

118:                                              ; preds = %97
  store i32 4, i32* %113, align 8, !alias.scope !39
  %119 = sub i32 4, %115
  %120 = icmp sgt i32 %119, 0
  %121 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %122 = bitcast %union.anon* %121 to [5 x i32]*
  br i1 %120, label %123, label %202

123:                                              ; preds = %118
  %124 = zext i32 %119 to i64
  %125 = icmp ult i32 %119, 8
  br i1 %125, label %195, label %126

126:                                              ; preds = %123
  %127 = and i64 %124, 4294967288
  %128 = add nsw i64 %127, -8
  %129 = lshr exact i64 %128, 3
  %130 = add nuw nsw i64 %129, 1
  %131 = and i64 %130, 7
  %132 = icmp ult i64 %128, 56
  br i1 %132, label %180, label %133

133:                                              ; preds = %126
  %134 = sub nsw i64 %130, %131
  br label %135

135:                                              ; preds = %135, %133
  %136 = phi i64 [ 0, %133 ], [ %177, %135 ]
  %137 = phi i64 [ %134, %133 ], [ %178, %135 ]
  %138 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %136
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %139, align 8, !alias.scope !39
  %140 = getelementptr inbounds i32, i32* %138, i64 4
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %141, align 8, !alias.scope !39
  %142 = or i64 %136, 8
  %143 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %142
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %144, align 8, !alias.scope !39
  %145 = getelementptr inbounds i32, i32* %143, i64 4
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !39
  %147 = or i64 %136, 16
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %147
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %149, align 8, !alias.scope !39
  %150 = getelementptr inbounds i32, i32* %148, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !39
  %152 = or i64 %136, 24
  %153 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %152
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %154, align 8, !alias.scope !39
  %155 = getelementptr inbounds i32, i32* %153, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !39
  %157 = or i64 %136, 32
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %157
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %159, align 8, !alias.scope !39
  %160 = getelementptr inbounds i32, i32* %158, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !39
  %162 = or i64 %136, 40
  %163 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %164, align 8, !alias.scope !39
  %165 = getelementptr inbounds i32, i32* %163, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !39
  %167 = or i64 %136, 48
  %168 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %167
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %169, align 8, !alias.scope !39
  %170 = getelementptr inbounds i32, i32* %168, i64 4
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !39
  %172 = or i64 %136, 56
  %173 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %172
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %174, align 8, !alias.scope !39
  %175 = getelementptr inbounds i32, i32* %173, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !39
  %177 = add i64 %136, 64
  %178 = add i64 %137, -8
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %135, !llvm.loop !42

180:                                              ; preds = %135, %126
  %181 = phi i64 [ 0, %126 ], [ %177, %135 ]
  %182 = icmp eq i64 %131, 0
  br i1 %182, label %193, label %183

183:                                              ; preds = %180, %183
  %184 = phi i64 [ %190, %183 ], [ %181, %180 ]
  %185 = phi i64 [ %191, %183 ], [ %131, %180 ]
  %186 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %184
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %187, align 8, !alias.scope !39
  %188 = getelementptr inbounds i32, i32* %186, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !39
  %190 = add i64 %184, 8
  %191 = add i64 %185, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %183, !llvm.loop !43

193:                                              ; preds = %183, %180
  %194 = icmp eq i64 %127, %124
  br i1 %194, label %202, label %195

195:                                              ; preds = %193, %123
  %196 = phi i64 [ 0, %123 ], [ %127, %193 ]
  br label %197

197:                                              ; preds = %195, %197
  %198 = phi i64 [ %200, %197 ], [ %196, %195 ]
  %199 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %198
  store i32 1, i32* %199, align 4, !alias.scope !39
  %200 = add nuw nsw i64 %198, 1
  %201 = icmp eq i64 %200, %124
  br i1 %201, label %202, label %197, !llvm.loop !44

202:                                              ; preds = %197, %193, %118
  %203 = getelementptr inbounds %union.anon, %union.anon* %121, i64 0, i32 0
  %204 = bitcast %union.anon* %121 to i32*
  %205 = sext i32 %119 to i64
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  %207 = bitcast i32* %206 to i8*
  %208 = icmp sgt i32 %115, 5
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %210 = getelementptr inbounds %union.anon, %union.anon* %209, i64 0, i32 0
  %211 = load i32*, i32** %210, align 8, !noalias !39
  %212 = bitcast %union.anon* %209 to i32*
  %213 = select i1 %208, i32* %211, i32* %212
  %214 = bitcast i32* %213 to i8*
  %215 = sext i32 %115 to i64
  %216 = shl nsw i64 %215, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %214, i64 %216, i1 false) #10
  %217 = bitcast %union.anon* %16 to [5 x i32]*
  %218 = load i32, i32* %8, align 8
  %219 = icmp sgt i32 %218, 5
  %220 = load i32*, i32** %98, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 3
  %222 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %223 = bitcast i8* %222 to i32*
  %224 = select i1 %219, i32* %221, i32* %223
  %225 = load i32, i32* %224, align 4
  %226 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 3
  store i32 %225, i32* %226, align 4
  %227 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 3
  store i32 1, i32* %227, align 4
  %228 = load i32, i32* %224, align 4
  %229 = getelementptr inbounds i32, i32* %220, i64 2
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %231 = bitcast [16 x i8]* %230 to i32*
  %232 = select i1 %219, i32* %229, i32* %231
  %233 = load i32, i32* %232, align 4
  %234 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 2
  store i32 %233, i32* %234, align 4
  %235 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 2
  store i32 %228, i32* %235, align 4
  %236 = load i32, i32* %232, align 4
  %237 = mul nsw i32 %236, %228
  %238 = getelementptr inbounds i32, i32* %220, i64 1
  %239 = getelementptr inbounds [5 x i32], [5 x i32]* %217, i64 0, i64 1
  %240 = select i1 %219, i32* %238, i32* %239
  %241 = load i32, i32* %240, align 4
  %242 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 1
  store i32 %241, i32* %242, align 4
  %243 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 1
  store i32 %237, i32* %243, align 4
  %244 = load i32, i32* %240, align 4
  %245 = mul nsw i32 %244, %237
  %246 = select i1 %219, i32* %220, i32* %99
  %247 = load i32, i32* %246, align 4
  %248 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 0
  store i32 %247, i32* %248, align 4
  %249 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 0
  store i32 %245, i32* %249, align 4
  %250 = load i32, i32* %113, align 8
  %251 = icmp sgt i32 %250, 5
  %252 = load i32*, i32** %203, align 8
  %253 = getelementptr inbounds i32, i32* %252, i64 3
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %255 = bitcast i8* %254 to i32*
  %256 = select i1 %251, i32* %253, i32* %255
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 3
  store i32 %257, i32* %258, align 4
  %259 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 3
  store i32 1, i32* %259, align 4
  %260 = load i32, i32* %256, align 4
  %261 = getelementptr inbounds i32, i32* %252, i64 2
  %262 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %263 = bitcast [16 x i8]* %262 to i32*
  %264 = select i1 %251, i32* %261, i32* %263
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 2
  store i32 %265, i32* %266, align 4
  %267 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 2
  store i32 %260, i32* %267, align 4
  %268 = load i32, i32* %264, align 4
  %269 = mul nsw i32 %268, %260
  %270 = getelementptr inbounds i32, i32* %252, i64 1
  %271 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 1
  %272 = select i1 %251, i32* %270, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 1
  store i32 %273, i32* %274, align 4
  %275 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 1
  store i32 %269, i32* %275, align 4
  %276 = load i32, i32* %272, align 4
  %277 = mul nsw i32 %276, %269
  %278 = select i1 %251, i32* %252, i32* %204
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 0
  store i32 %279, i32* %280, align 4
  %281 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 0
  store i32 %277, i32* %281, align 4
  %282 = bitcast %union.anon* %16 to i32*
  %283 = select i1 %219, i32* %220, i32* %282
  %284 = load i32, i32* %283, align 4
  %285 = bitcast %union.anon* %121 to i32*
  %286 = select i1 %251, i32* %252, i32* %285
  %287 = load i32, i32* %286, align 4
  %288 = icmp eq i32 %284, %287
  br i1 %288, label %302, label %298

289:                                              ; preds = %338
  %290 = bitcast i32* %252 to i8*
  tail call void @_ZdaPv(i8* %290) #9
  br label %291

291:                                              ; preds = %338, %289
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %112) #10
  %292 = xor i1 %219, true
  %293 = icmp eq i32* %220, null
  %294 = or i1 %293, %292
  br i1 %294, label %297, label %295

295:                                              ; preds = %291
  %296 = bitcast i32* %220 to i8*
  tail call void @_ZdaPv(i8* %296) #9
  br label %297

297:                                              ; preds = %291, %295
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #10
  ret void

298:                                              ; preds = %202
  %299 = icmp eq i32 %284, 1
  br i1 %299, label %300, label %301

300:                                              ; preds = %298
  store i32 0, i32* %249, align 4
  store i32 %287, i32* %248, align 4
  br label %302

301:                                              ; preds = %298
  store i32 0, i32* %281, align 4
  store i32 %284, i32* %280, align 4
  br label %302

302:                                              ; preds = %202, %300, %301
  %303 = load i32, i32* %240, align 4
  %304 = load i32, i32* %272, align 4
  %305 = icmp eq i32 %303, %304
  br i1 %305, label %310, label %306

306:                                              ; preds = %302
  %307 = icmp eq i32 %303, 1
  br i1 %307, label %309, label %308

308:                                              ; preds = %306
  store i32 0, i32* %275, align 4
  store i32 %303, i32* %274, align 4
  br label %310

309:                                              ; preds = %306
  store i32 0, i32* %243, align 4
  store i32 %304, i32* %242, align 4
  br label %310

310:                                              ; preds = %309, %308, %302
  %311 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %312 = bitcast [16 x i8]* %311 to i32*
  %313 = select i1 %219, i32* %229, i32* %312
  %314 = load i32, i32* %313, align 4
  %315 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %316 = bitcast [16 x i8]* %315 to i32*
  %317 = select i1 %251, i32* %261, i32* %316
  %318 = load i32, i32* %317, align 4
  %319 = icmp eq i32 %314, %318
  br i1 %319, label %324, label %320

320:                                              ; preds = %310
  %321 = icmp eq i32 %314, 1
  br i1 %321, label %323, label %322

322:                                              ; preds = %320
  store i32 0, i32* %267, align 4
  store i32 %314, i32* %266, align 4
  br label %324

323:                                              ; preds = %320
  store i32 0, i32* %235, align 4
  store i32 %318, i32* %234, align 4
  br label %324

324:                                              ; preds = %323, %322, %310
  %325 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %326 = bitcast i8* %325 to i32*
  %327 = select i1 %219, i32* %221, i32* %326
  %328 = load i32, i32* %327, align 4
  %329 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %330 = bitcast i8* %329 to i32*
  %331 = select i1 %251, i32* %253, i32* %330
  %332 = load i32, i32* %331, align 4
  %333 = icmp eq i32 %328, %332
  br i1 %333, label %338, label %334

334:                                              ; preds = %324
  %335 = icmp eq i32 %328, 1
  br i1 %335, label %337, label %336

336:                                              ; preds = %334
  store i32 0, i32* %259, align 4
  store i32 %328, i32* %258, align 4
  br label %338

337:                                              ; preds = %334
  store i32 0, i32* %227, align 4
  store i32 %332, i32* %226, align 4
  br label %338

338:                                              ; preds = %337, %336, %324
  %339 = xor i1 %251, true
  %340 = icmp eq i32* %252, null
  %341 = or i1 %340, %339
  br i1 %341, label %291, label %289
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN6tflite3ops7builtin7logical12_GLOBAL__N_110LogicalAndEbb(i1 zeroext, i1 zeroext) #0 {
  %3 = and i1 %0, %1
  ret i1 %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!5 = distinct !{!5, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!8 = distinct !{!8, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!11 = distinct !{!11, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!14 = distinct !{!14, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!17 = distinct !{!17, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!20 = distinct !{!20, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.isvectorized", i32 1}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.unroll.disable"}
!25 = distinct !{!25, !26, !22}
!26 = !{!"llvm.loop.unroll.runtime.disable"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!29 = distinct !{!29, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!30 = distinct !{!30, !22}
!31 = distinct !{!31, !24}
!32 = distinct !{!32, !26, !22}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!35 = distinct !{!35, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!36 = distinct !{!36, !22}
!37 = distinct !{!37, !24}
!38 = distinct !{!38, !26, !22}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!41 = distinct !{!41, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!42 = distinct !{!42, !22}
!43 = distinct !{!43, !24}
!44 = distinct !{!44, !26, !22}
