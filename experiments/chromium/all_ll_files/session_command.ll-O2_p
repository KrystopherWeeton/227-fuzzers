; ModuleID = '../../components/sessions/core/session_command.cc'
source_filename = "../../components/sessions/core/session_command.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sessions::SessionCommand" = type { i8, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

@_ZN8sessions14SessionCommandC1Eht = hidden unnamed_addr alias void (%"class.sessions::SessionCommand"*, i8, i16), void (%"class.sessions::SessionCommand"*, i8, i16)* @_ZN8sessions14SessionCommandC2Eht
@_ZN8sessions14SessionCommandC1EhRKN4base6PickleE = hidden unnamed_addr alias void (%"class.sessions::SessionCommand"*, i8, %"class.base::Pickle"*), void (%"class.sessions::SessionCommand"*, i8, %"class.base::Pickle"*)* @_ZN8sessions14SessionCommandC2EhRKN4base6PickleE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8sessions14SessionCommandC2Eht(%"class.sessions::SessionCommand"* nocapture, i8 zeroext, i16 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sessions::SessionCommand", %"class.sessions::SessionCommand"* %0, i64 0, i32 0
  store i8 %1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.sessions::SessionCommand", %"class.sessions::SessionCommand"* %0, i64 0, i32 1
  %6 = zext i16 %2 to i64
  %7 = icmp ult i16 %2, 23
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = add nuw nsw i64 %6, 16
  %10 = and i64 %9, 131056
  %11 = tail call i8* @_Znwm(i64 %10) #6
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %11, i8** %12, align 8
  %13 = or i64 %10, -9223372036854775808
  %14 = getelementptr inbounds %"class.sessions::SessionCommand", %"class.sessions::SessionCommand"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.sessions::SessionCommand", %"class.sessions::SessionCommand"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %15, align 8
  br label %22

16:                                               ; preds = %3
  %17 = trunc i16 %2 to i8
  %18 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  store i8 %17, i8* %19, align 1
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %21 = icmp eq i16 %2, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %16, %8
  %23 = phi i8* [ %11, %8 ], [ %20, %16 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %23, i8 0, i64 %6, i1 false) #7
  br label %24

24:                                               ; preds = %16, %22
  %25 = phi i8* [ %20, %16 ], [ %23, %22 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 %6
  store i8 0, i8* %26, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8sessions14SessionCommandC2EhRKN4base6PickleE(%"class.sessions::SessionCommand"*, i8 zeroext, %"class.base::Pickle"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sessions::SessionCommand", %"class.sessions::SessionCommand"* %0, i64 0, i32 0
  store i8 %1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.sessions::SessionCommand", %"class.sessions::SessionCommand"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::Pickle", %"class.base::Pickle"* %2, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::Pickle", %"class.base::Pickle"* %2, i64 0, i32 1
  %9 = load %"struct.base::Pickle::Header"*, %"struct.base::Pickle::Header"** %8, align 8
  %10 = getelementptr inbounds %"struct.base::Pickle::Header", %"struct.base::Pickle::Header"* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = add i64 %7, %12
  %14 = icmp ugt i64 %13, -17
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %16) #8
  unreachable

17:                                               ; preds = %3
  %18 = icmp ult i64 %13, 23
  br i1 %18, label %28, label %19

19:                                               ; preds = %17
  %20 = add nuw i64 %13, 16
  %21 = and i64 %20, -16
  %22 = tail call i8* @_Znwm(i64 %21) #6
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  %24 = or i64 %21, -9223372036854775808
  %25 = getelementptr inbounds %"class.sessions::SessionCommand", %"class.sessions::SessionCommand"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.sessions::SessionCommand", %"class.sessions::SessionCommand"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %13, i64* %26, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %34

28:                                               ; preds = %17
  %29 = trunc i64 %13 to i8
  %30 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 %29, i8* %31, align 1
  %32 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %33 = icmp eq i64 %13, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %28, %19
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %30, %28 ], [ %27, %19 ]
  %36 = phi i8* [ %32, %28 ], [ %22, %19 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %36, i8 0, i64 %13, i1 false) #7
  br label %37

37:                                               ; preds = %28, %34
  %38 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %30, %28 ], [ %35, %34 ]
  %39 = phi i8* [ %32, %28 ], [ %36, %34 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %13
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  br label %49

47:                                               ; preds = %37
  %48 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi i8* [ %46, %44 ], [ %48, %47 ]
  %51 = bitcast %"struct.base::Pickle::Header"** %8 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = load i64, i64* %6, align 8
  %54 = bitcast i8* %52 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i64
  %57 = add i64 %53, %56
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 1 %52, i64 %57, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZNK8sessions14SessionCommand17GetSerializedSizeEv(%"class.sessions::SessionCommand"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.sessions::SessionCommand", %"class.sessions::SessionCommand"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.sessions::SessionCommand", %"class.sessions::SessionCommand"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %1
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  %14 = trunc i64 %13 to i16
  %15 = icmp eq i16 %14, -1
  %16 = add i16 %14, 1
  %17 = select i1 %15, i16 -1, i16 %16
  ret i16 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8sessions14SessionCommand10GetPayloadEPvm(%"class.sessions::SessionCommand"* nocapture readonly, i8* nocapture, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sessions::SessionCommand", %"class.sessions::SessionCommand"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.sessions::SessionCommand", %"class.sessions::SessionCommand"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %3
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = and i64 %15, 65535
  %17 = icmp eq i64 %16, %2
  br i1 %17, label %18, label %26

18:                                               ; preds = %14
  br i1 %8, label %19, label %22

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  br label %24

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %24

24:                                               ; preds = %19, %22
  %25 = phi i8* [ %21, %19 ], [ %23, %22 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %25, i64 %2, i1 false)
  br label %26

26:                                               ; preds = %14, %24
  %27 = phi i1 [ true, %24 ], [ false, %14 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.base::Pickle"* @_ZNK8sessions14SessionCommand15PayloadAsPickleEv(%"class.sessions::SessionCommand"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sessions::SessionCommand", %"class.sessions::SessionCommand"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.sessions::SessionCommand", %"class.sessions::SessionCommand"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %15

12:                                               ; preds = %1
  %13 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %14 = zext i8 %5 to i64
  br label %15

15:                                               ; preds = %7, %12
  %16 = phi i8* [ %9, %7 ], [ %13, %12 ]
  %17 = phi i64 [ %11, %7 ], [ %14, %12 ]
  %18 = and i64 %17, 65535
  %19 = tail call i8* @_Znwm(i64 40) #6
  %20 = bitcast i8* %19 to %"class.base::Pickle"*
  tail call void @_ZN4base6PickleC1EPKcm(%"class.base::Pickle"* nonnull %20, i8* %16, i64 %18) #7
  ret %"class.base::Pickle"* %20
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base6PickleC1EPKcm(%"class.base::Pickle"*, i8*, i64) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
