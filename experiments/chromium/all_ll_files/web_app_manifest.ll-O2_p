; ModuleID = '../../components/payments/content/web_app_manifest.cc'
source_filename = "../../components/payments/content/web_app_manifest.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.payments::WebAppManifestSection" = type { %"class.std::__1::basic_string", i64, %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i8*, i8*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i8* }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::vector.1"* }
%"struct.payments::WebAppInstallationInfo" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8], %"class.std::__1::vector.24", %"struct.content::SupportedDelegations", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.SkBitmap* }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.22 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.15, i32, i32 }
%class.sk_sp.15 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.17" }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.22 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::basic_string"* }
%"struct.content::SupportedDelegations" = type { i8, i8, i8, i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS0_IhNS_9allocatorIhEEEENS1_IS3_EEEC2ERKS5_ = comdat any

@_ZN8payments21WebAppManifestSectionC1Ev = hidden unnamed_addr alias void (%"struct.payments::WebAppManifestSection"*), void (%"struct.payments::WebAppManifestSection"*)* @_ZN8payments21WebAppManifestSectionC2Ev
@_ZN8payments21WebAppManifestSectionC1ERKS0_ = hidden unnamed_addr alias void (%"struct.payments::WebAppManifestSection"*, %"struct.payments::WebAppManifestSection"*), void (%"struct.payments::WebAppManifestSection"*, %"struct.payments::WebAppManifestSection"*)* @_ZN8payments21WebAppManifestSectionC2ERKS0_
@_ZN8payments21WebAppManifestSectionD1Ev = hidden unnamed_addr alias void (%"struct.payments::WebAppManifestSection"*), void (%"struct.payments::WebAppManifestSection"*)* @_ZN8payments21WebAppManifestSectionD2Ev
@_ZN8payments22WebAppInstallationInfoC1Ev = hidden unnamed_addr alias void (%"struct.payments::WebAppInstallationInfo"*), void (%"struct.payments::WebAppInstallationInfo"*)* @_ZN8payments22WebAppInstallationInfoC2Ev
@_ZN8payments22WebAppInstallationInfoD1Ev = hidden unnamed_addr alias void (%"struct.payments::WebAppInstallationInfo"*), void (%"struct.payments::WebAppInstallationInfo"*)* @_ZN8payments22WebAppInstallationInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments21WebAppManifestSectionC2Ev(%"struct.payments::WebAppManifestSection"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.payments::WebAppManifestSection"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 56, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments21WebAppManifestSectionC2ERKS0_(%"struct.payments::WebAppManifestSection"*, %"struct.payments::WebAppManifestSection"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.payments::WebAppManifestSection"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.payments::WebAppManifestSection"* %0 to i8*
  %9 = bitcast %"struct.payments::WebAppManifestSection"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #7
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #7
  br label %16

16:                                               ; preds = %7, %10
  %17 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %1, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %17, align 8
  %20 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %0, i64 0, i32 2
  %21 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %1, i64 0, i32 2
  tail call void @_ZNSt3__16vectorINS0_IhNS_9allocatorIhEEEENS1_IS3_EEEC2ERKS5_(%"class.std::__1::vector"* %20, %"class.std::__1::vector"* dereferenceable(24) %21)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IhNS_9allocatorIhEEEENS1_IS3_EEEC2ERKS5_(%"class.std::__1::vector"*, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #7
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::vector.1"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %73, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 768614336404564650
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #8
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #9
  %18 = bitcast i8* %17 to %"class.std::__1::vector.1"*
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::vector.1"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::vector.1"* %22, %"class.std::__1::vector.1"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %25 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %24, align 8
  %26 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %4, align 8
  %27 = bitcast %"class.std::__1::vector.1"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"class.std::__1::vector.1"* %25, %26
  br i1 %29, label %71, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"class.std::__1::vector.1"*
  br label %32

32:                                               ; preds = %65, %30
  %33 = phi %"class.std::__1::vector.1"* [ %67, %65 ], [ %31, %30 ]
  %34 = phi %"class.std::__1::vector.1"* [ %66, %65 ], [ %25, %30 ]
  %35 = bitcast %"class.std::__1::vector.1"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #7
  %36 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %34, i64 0, i32 0, i32 1
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::vector.1"* %34 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %65, label %43

43:                                               ; preds = %32
  %44 = icmp slt i64 %41, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  %46 = bitcast %"class.std::__1::vector.1"* %33 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %46) #8
  unreachable

47:                                               ; preds = %43
  %48 = tail call i8* @_Znwm(i64 %41) #9
  %49 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %33, i64 0, i32 0, i32 1
  store i8* %48, i8** %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %33, i64 0, i32 0, i32 0
  store i8* %48, i8** %50, align 8
  %51 = getelementptr inbounds i8, i8* %48, i64 %41
  %52 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %33, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %51, i8** %52, align 8
  %53 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %34, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %37, align 8
  %56 = bitcast i8** %49 to i64*
  %57 = ptrtoint i8* %54 to i64
  %58 = sub i64 %55, %57
  %59 = icmp sgt i64 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %47
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %48, i8* align 1 %54, i64 %58, i1 false) #7
  %61 = getelementptr inbounds i8, i8* %48, i64 %58
  br label %62

62:                                               ; preds = %60, %47
  %63 = phi i8* [ %61, %60 ], [ %48, %47 ]
  %64 = ptrtoint i8* %63 to i64
  store i64 %64, i64* %56, align 8
  br label %65

65:                                               ; preds = %62, %32
  %66 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %34, i64 1
  %67 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %33, i64 1
  %68 = icmp eq %"class.std::__1::vector.1"* %66, %26
  br i1 %68, label %69, label %32

69:                                               ; preds = %65
  %70 = ptrtoint %"class.std::__1::vector.1"* %67 to i64
  br label %71

71:                                               ; preds = %16, %69
  %72 = phi i64 [ %28, %16 ], [ %70, %69 ]
  store i64 %72, i64* %27, align 8
  br label %73

73:                                               ; preds = %2, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments21WebAppManifestSectionD2Ev(%"struct.payments::WebAppManifestSection"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.1"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::vector.1"* %4 to i8*
  %8 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.1"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.std::__1::vector.1"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %13, i64 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %11
  %18 = ptrtoint i8* %15 to i64
  %19 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %12, i64 -1, i32 0, i32 1
  %20 = bitcast i8** %19 to i64*
  store i64 %18, i64* %20, align 8
  tail call void @_ZdlPv(i8* nonnull %15) #9
  br label %21

21:                                               ; preds = %17, %11
  %22 = icmp eq %"class.std::__1::vector.1"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.std::__1::vector.1"* %4, %"class.std::__1::vector.1"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #9
  br label %28

28:                                               ; preds = %1, %26
  %29 = bitcast %"struct.payments::WebAppManifestSection"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #9
  br label %36

36:                                               ; preds = %28, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments22WebAppInstallationInfoC2Ev(%"struct.payments::WebAppInstallationInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.payments::WebAppInstallationInfo", %"struct.payments::WebAppInstallationInfo"* %0, i64 0, i32 6
  %3 = bitcast %"class.std::__1::vector.24"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #7
  %4 = getelementptr inbounds %"struct.payments::WebAppInstallationInfo", %"struct.payments::WebAppInstallationInfo"* %0, i64 0, i32 7
  %5 = bitcast %"struct.payments::WebAppInstallationInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 81, i1 false)
  tail call void @_ZN7content20SupportedDelegationsC1Ev(%"struct.content::SupportedDelegations"* %4) #7
  ret void
}

declare void @_ZN7content20SupportedDelegationsC1Ev(%"struct.content::SupportedDelegations"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments22WebAppInstallationInfoD2Ev(%"struct.payments::WebAppInstallationInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.payments::WebAppInstallationInfo", %"struct.payments::WebAppInstallationInfo"* %0, i64 0, i32 7
  tail call void @_ZN7content20SupportedDelegationsD1Ev(%"struct.content::SupportedDelegations"* %2) #7
  %3 = getelementptr inbounds %"struct.payments::WebAppInstallationInfo", %"struct.payments::WebAppInstallationInfo"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %9 = getelementptr inbounds %"struct.payments::WebAppInstallationInfo", %"struct.payments::WebAppInstallationInfo"* %0, i64 0, i32 6, i32 0, i32 1
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"class.std::__1::basic_string"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 -1
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #9
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"class.std::__1::basic_string"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.24"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"struct.payments::WebAppInstallationInfo", %"struct.payments::WebAppInstallationInfo"* %0, i64 0, i32 3
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #9
  br label %38

38:                                               ; preds = %29, %35
  %39 = getelementptr inbounds %"struct.payments::WebAppInstallationInfo", %"struct.payments::WebAppInstallationInfo"* %0, i64 0, i32 2
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  tail call void @_ZdlPv(i8* %46) #9
  br label %47

47:                                               ; preds = %38, %44
  %48 = getelementptr inbounds %"struct.payments::WebAppInstallationInfo", %"struct.payments::WebAppInstallationInfo"* %0, i64 0, i32 1
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #9
  br label %56

56:                                               ; preds = %47, %53
  %57 = getelementptr inbounds %"struct.payments::WebAppInstallationInfo", %"struct.payments::WebAppInstallationInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %class.SkBitmap*, %class.SkBitmap** %57, align 8
  store %class.SkBitmap* null, %class.SkBitmap** %57, align 8
  %59 = icmp eq %class.SkBitmap* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %58) #7
  %61 = bitcast %class.SkBitmap* %58 to i8*
  tail call void @_ZdlPv(i8* %61) #9
  br label %62

62:                                               ; preds = %56, %60
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7content20SupportedDelegationsD1Ev(%"struct.content::SupportedDelegations"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
