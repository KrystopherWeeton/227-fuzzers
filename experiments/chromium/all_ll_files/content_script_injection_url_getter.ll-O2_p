; ModuleID = '../../extensions/common/content_script_injection_url_getter.cc'
source_filename = "../../extensions/common/content_script_injection_url_getter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter" = type { i32 (...)** }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::__split_buffer" = type { i64*, i64*, i64*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.12", %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::allocator.14"* }
%"class.std::__1::allocator.14" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK3url14SchemeHostPorteqERKS0_ = comdat any

$_ZNSt3__16vectorImNS_9allocatorImEEE7emplaceIJmEEENS_11__wrap_iterIPmEENS5_IPKmEEDpOT_ = comdat any

$_ZNSt3__114__split_bufferImRNS_9allocatorImEEE12emplace_backIJmEEEvDpOT_ = comdat any

@_ZN3url12kAboutSchemeE = external constant [0 x i8], align 1
@_ZTVN10extensions31ContentScriptInjectionUrlGetter12FrameAdapterE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)* @_ZN10extensions31ContentScriptInjectionUrlGetter12FrameAdapterD2Ev to i8*), i8* bitcast (void (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)* @_ZN10extensions31ContentScriptInjectionUrlGetter12FrameAdapterD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN3url11kDataSchemeE = external constant [0 x i8], align 1

@_ZN10extensions31ContentScriptInjectionUrlGetter12FrameAdapterD1Ev = hidden unnamed_addr alias void (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*), void (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)* @_ZN10extensions31ContentScriptInjectionUrlGetter12FrameAdapterD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions31ContentScriptInjectionUrlGetter12FrameAdapterD2Ev(%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN10extensions31ContentScriptInjectionUrlGetter12FrameAdapterD0Ev(%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions31ContentScriptInjectionUrlGetter3GetERKNS0_12FrameAdapterERK4GURLNS_29MatchOriginAsFallbackBehaviorEb(%class.GURL* noalias sret, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* dereferenceable(8), %class.GURL* dereferenceable(120), i32, i1 zeroext) local_unnamed_addr #3 align 2 {
  %6 = alloca %"class.url::Origin", align 8
  %7 = alloca %"class.url::Origin", align 8
  %8 = alloca %class.GURL, align 8
  %9 = alloca %class.GURL, align 8
  %10 = alloca %"class.base::internal::flat_tree", align 8
  %11 = alloca i64, align 8
  %12 = alloca %"class.url::SchemeHostPort", align 8
  %13 = alloca %"class.url::Origin", align 8
  %14 = alloca %class.GURL, align 8
  switch i32 %3, label %21 [
    i32 0, label %25
    i32 1, label %15
    i32 2, label %18
  ]

15:                                               ; preds = %5
  %16 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kAboutSchemeE, i64 0, i64 0)) #14
  %17 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kAboutSchemeE, i64 0, i64 0), i64 %16) #14
  br i1 %17, label %26, label %25

18:                                               ; preds = %5
  %19 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kAboutSchemeE, i64 0, i64 0)) #14
  %20 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kAboutSchemeE, i64 0, i64 0), i64 %19) #14
  br i1 %20, label %26, label %22

21:                                               ; preds = %5
  unreachable

22:                                               ; preds = %18
  %23 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kDataSchemeE, i64 0, i64 0)) #14
  %24 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kDataSchemeE, i64 0, i64 0), i64 %23) #14
  br i1 %24, label %26, label %25

25:                                               ; preds = %5, %15, %22
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %0, %class.GURL* dereferenceable(120) %2) #14
  br label %220

26:                                               ; preds = %18, %15, %22
  %27 = bitcast %"class.url::Origin"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %27) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 80, i1 false)
  %28 = bitcast %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %1 to void (%"class.url::Origin"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)***
  %29 = load void (%"class.url::Origin"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)**, void (%"class.url::Origin"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.url::Origin"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, void (%"class.url::Origin"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %29, i64 5
  %31 = load void (%"class.url::Origin"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, void (%"class.url::Origin"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %30, align 8
  call void %31(%"class.url::Origin"* nonnull sret %6, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %1) #14
  %32 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %6, i64 0, i32 0
  %33 = call zeroext i1 @_ZNK3url14SchemeHostPort7IsValidEv(%"class.url::SchemeHostPort"* nonnull %32) #14
  br i1 %33, label %35, label %34

34:                                               ; preds = %26
  call void @_ZN4GURLC1ERKS_(%class.GURL* %0, %class.GURL* dereferenceable(120) %2) #14
  br label %219

35:                                               ; preds = %26
  %36 = bitcast %"class.url::Origin"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %36) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 80, i1 false)
  %37 = bitcast %class.GURL* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %37) #14
  call void @_ZNK3url14SchemeHostPort6GetURLEv(%class.GURL* nonnull sret %8, %"class.url::SchemeHostPort"* nonnull %32) #14
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %7, %class.GURL* nonnull dereferenceable(120) %8) #14
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %37) #14
  br i1 %4, label %45, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %1 to i1 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*, %"class.url::Origin"*)***
  %40 = load i1 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*, %"class.url::Origin"*)**, i1 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*, %"class.url::Origin"*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*, %"class.url::Origin"*)*, i1 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*, %"class.url::Origin"*)** %40, i64 6
  %42 = load i1 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*, %"class.url::Origin"*)*, i1 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*, %"class.url::Origin"*)** %41, align 8
  %43 = call zeroext i1 %42(%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %1, %"class.url::Origin"* nonnull dereferenceable(80) %7) #14
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @_ZN4GURLC1ERKS_(%class.GURL* %0, %class.GURL* dereferenceable(120) %2) #14
  br label %218

45:                                               ; preds = %38, %35
  %46 = icmp eq i32 %3, 2
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* sret %0, %"class.url::Origin"* nonnull %7) #14
  br label %218

48:                                               ; preds = %45
  %49 = bitcast %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %1 to %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)***
  %50 = load %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)**, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %50, i64 2
  %52 = load %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %51, align 8
  %53 = call %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %52(%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %1) #14
  %54 = bitcast %class.GURL* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %54) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 120, i1 false)
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %9) #14
  %55 = bitcast %"class.base::internal::flat_tree"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #14
  %56 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %10, i64 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %10, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 24, i1 false) #14
  %58 = bitcast i64* %11 to i8*
  %59 = bitcast i64** %57 to i64*
  %60 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %10, i64 0, i32 0
  %61 = bitcast %"class.url::SchemeHostPort"* %12 to i8*
  %62 = bitcast %"class.url::Origin"* %13 to i8*
  %63 = bitcast %"class.url::Origin"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %12, i64 0, i32 0
  %66 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %12, i64 0, i32 1
  %69 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %13, i64 0, i32 0, i32 1
  %70 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = bitcast %"class.std::__1::basic_string"* %68 to i8*
  %73 = bitcast %"class.std::__1::basic_string"* %69 to i8*
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %12, i64 0, i32 2
  %77 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %13, i64 0, i32 0, i32 2
  %78 = bitcast %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %1 to i1 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)***
  %79 = bitcast %class.GURL* %14 to i8*
  br label %80

80:                                               ; preds = %196, %48
  %81 = phi %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* [ %53, %48 ], [ %121, %196 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #14
  %82 = bitcast %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %81 to i64 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)***
  %83 = load i64 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)**, i64 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*** %82, align 8
  %84 = getelementptr inbounds i64 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, i64 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %83, i64 8
  %85 = load i64 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, i64 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %84, align 8
  %86 = call i64 %85(%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %81) #14
  store i64 %86, i64* %11, align 8
  %87 = load i64*, i64** %56, align 8
  %88 = load i64, i64* %59, align 8
  %89 = ptrtoint i64* %87 to i64
  %90 = sub i64 %88, %89
  %91 = icmp eq i64 %90, 0
  %92 = inttoptr i64 %88 to i64*
  br i1 %91, label %108, label %93

93:                                               ; preds = %80
  %94 = ashr exact i64 %90, 3
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64* [ %87, %93 ], [ %106, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %105, %95 ]
  %98 = lshr i64 %97, 1
  %99 = getelementptr inbounds i64, i64* %96, i64 %98
  %100 = load i64, i64* %99, align 8
  %101 = icmp ult i64 %100, %86
  %102 = getelementptr inbounds i64, i64* %99, i64 1
  %103 = xor i64 %98, -1
  %104 = add i64 %97, %103
  %105 = select i1 %101, i64 %104, i64 %98
  %106 = select i1 %101, i64* %102, i64* %96
  %107 = icmp eq i64 %105, 0
  br i1 %107, label %108, label %95

108:                                              ; preds = %95, %80
  %109 = phi i64* [ %87, %80 ], [ %106, %95 ]
  %110 = icmp eq i64* %109, %92
  br i1 %110, label %114, label %111

111:                                              ; preds = %108
  %112 = load i64, i64* %109, align 8
  %113 = icmp ult i64 %86, %112
  br i1 %113, label %114, label %116

114:                                              ; preds = %111, %108
  %115 = call i64* @_ZNSt3__16vectorImNS_9allocatorImEEE7emplaceIJmEEENS_11__wrap_iterIPmEENS5_IPKmEEDpOT_(%"class.std::__1::vector"* nonnull %60, i64* %109, i64* nonnull dereferenceable(8) %11) #14
  br label %116

116:                                              ; preds = %111, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #14
  %117 = bitcast %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %81 to %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)***
  %118 = load %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)**, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*** %117, align 8
  %119 = getelementptr inbounds %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %118, i64 3
  %120 = load %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %119, align 8
  %121 = call %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %120(%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %81) #14
  %122 = icmp eq %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %81, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %116
  %124 = bitcast %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %81 to void (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)***
  %125 = load void (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)**, void (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, void (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %125, i64 1
  %127 = load void (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, void (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %126, align 8
  call void %127(%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* nonnull %81) #14
  br label %128

128:                                              ; preds = %123, %116
  %129 = icmp eq %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %121, null
  br i1 %129, label %130, label %131

130:                                              ; preds = %128
  call void @_ZN4GURLC1ERKS_(%class.GURL* %0, %class.GURL* dereferenceable(120) %2) #14
  br label %205

131:                                              ; preds = %128
  %132 = bitcast %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %121 to i64 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)***
  %133 = load i64 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)**, i64 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*** %132, align 8
  %134 = getelementptr inbounds i64 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, i64 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %133, i64 8
  %135 = load i64 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, i64 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %134, align 8
  %136 = call i64 %135(%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* nonnull %121) #14
  %137 = load i64*, i64** %56, align 8
  %138 = load i64, i64* %59, align 8
  %139 = ptrtoint i64* %137 to i64
  %140 = sub i64 %138, %139
  %141 = icmp eq i64 %140, 0
  %142 = inttoptr i64 %138 to i64*
  br i1 %141, label %158, label %143

143:                                              ; preds = %131
  %144 = ashr exact i64 %140, 3
  br label %145

145:                                              ; preds = %145, %143
  %146 = phi i64* [ %137, %143 ], [ %156, %145 ]
  %147 = phi i64 [ %144, %143 ], [ %155, %145 ]
  %148 = lshr i64 %147, 1
  %149 = getelementptr inbounds i64, i64* %146, i64 %148
  %150 = load i64, i64* %149, align 8
  %151 = icmp ult i64 %150, %136
  %152 = getelementptr inbounds i64, i64* %149, i64 1
  %153 = xor i64 %148, -1
  %154 = add i64 %147, %153
  %155 = select i1 %151, i64 %154, i64 %148
  %156 = select i1 %151, i64* %152, i64* %146
  %157 = icmp eq i64 %155, 0
  br i1 %157, label %158, label %145

158:                                              ; preds = %145, %131
  %159 = phi i64* [ %137, %131 ], [ %156, %145 ]
  %160 = icmp eq i64* %159, %142
  br i1 %160, label %165, label %161

161:                                              ; preds = %158
  %162 = load i64, i64* %159, align 8
  %163 = icmp ult i64 %136, %162
  br i1 %163, label %165, label %164

164:                                              ; preds = %161
  call void @_ZN4GURLC1ERKS_(%class.GURL* %0, %class.GURL* dereferenceable(120) %2) #14
  br label %205

165:                                              ; preds = %161, %158
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %61) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 56, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %62) #14
  %166 = bitcast %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %121 to void (%"class.url::Origin"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)***
  %167 = load void (%"class.url::Origin"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)**, void (%"class.url::Origin"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*** %166, align 8
  %168 = getelementptr inbounds void (%"class.url::Origin"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, void (%"class.url::Origin"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %167, i64 5
  %169 = load void (%"class.url::Origin"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, void (%"class.url::Origin"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %168, align 8
  call void %169(%"class.url::Origin"* nonnull sret %13, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* nonnull %121) #14
  %170 = load i8, i8* %64, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %173, label %172

172:                                              ; preds = %165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %61, i8* nonnull align 8 %62, i64 24, i1 false) #14
  br label %176

173:                                              ; preds = %165
  %174 = load i8*, i8** %66, align 8
  %175 = load i64, i64* %67, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %65, i8* %174, i64 %175) #14
  br label %176

176:                                              ; preds = %173, %172
  %177 = load i8, i8* %71, align 1
  %178 = icmp slt i8 %177, 0
  br i1 %178, label %180, label %179

179:                                              ; preds = %176
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 24, i1 false) #14
  br label %183

180:                                              ; preds = %176
  %181 = load i8*, i8** %74, align 8
  %182 = load i64, i64* %75, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %68, i8* %181, i64 %182) #14
  br label %183

183:                                              ; preds = %179, %180
  %184 = load i16, i16* %77, align 8
  store i16 %184, i16* %76, align 8
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %62) #14
  %185 = call zeroext i1 @_ZNK3url14SchemeHostPort7IsValidEv(%"class.url::SchemeHostPort"* nonnull %12) #14
  br i1 %185, label %186, label %188

186:                                              ; preds = %183
  %187 = call zeroext i1 @_ZNK3url14SchemeHostPorteqERKS0_(%"class.url::SchemeHostPort"* nonnull %12, %"class.url::SchemeHostPort"* nonnull dereferenceable(56) %32) #14
  br i1 %187, label %189, label %188

188:                                              ; preds = %186, %183
  call void @_ZN4GURLC1ERKS_(%class.GURL* %0, %class.GURL* dereferenceable(120) %2) #14
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %61) #14
  br label %205

189:                                              ; preds = %186
  br i1 %4, label %196, label %190

190:                                              ; preds = %189
  %191 = load i1 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)**, i1 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*** %78, align 8
  %192 = getelementptr inbounds i1 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, i1 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %191, i64 7
  %193 = load i1 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, i1 (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %192, align 8
  %194 = call zeroext i1 %193(%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %1, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* nonnull dereferenceable(8) %121) #14
  br i1 %194, label %196, label %195

195:                                              ; preds = %190
  call void @_ZN4GURLC1ERKS_(%class.GURL* %0, %class.GURL* dereferenceable(120) %2) #14
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %61) #14
  br label %205

196:                                              ; preds = %190, %189
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %79) #14
  %197 = bitcast %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %121 to void (%class.GURL*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)***
  %198 = load void (%class.GURL*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)**, void (%class.GURL*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*** %197, align 8
  %199 = getelementptr inbounds void (%class.GURL*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, void (%class.GURL*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %198, i64 4
  %200 = load void (%class.GURL*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, void (%class.GURL*, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %199, align 8
  call void %200(%class.GURL* nonnull sret %14, %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* nonnull %121) #14
  %201 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* nonnull %9, %class.GURL* nonnull dereferenceable(120) %14) #14
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %14) #14
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %79) #14
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %61) #14
  %202 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kAboutSchemeE, i64 0, i64 0)) #14
  %203 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %9, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kAboutSchemeE, i64 0, i64 0), i64 %202) #14
  br i1 %203, label %80, label %204

204:                                              ; preds = %196
  call void @_ZN4GURLC1EOS_(%class.GURL* %0, %class.GURL* nonnull dereferenceable(120) %9) #14
  br label %205

205:                                              ; preds = %195, %188, %204, %164, %130
  %206 = load i64*, i64** %56, align 8
  %207 = icmp eq i64* %206, null
  br i1 %207, label %211, label %208

208:                                              ; preds = %205
  %209 = ptrtoint i64* %206 to i64
  store i64 %209, i64* %59, align 8
  %210 = bitcast i64* %206 to i8*
  call void @_ZdlPv(i8* %210) #15
  br label %211

211:                                              ; preds = %205, %208
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #14
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %54) #14
  %212 = icmp eq %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %121, null
  br i1 %212, label %218, label %213

213:                                              ; preds = %211
  %214 = bitcast %"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* %121 to void (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)***
  %215 = load void (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)**, void (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*** %214, align 8
  %216 = getelementptr inbounds void (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, void (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %215, i64 1
  %217 = load void (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)*, void (%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"*)** %216, align 8
  call void %217(%"class.extensions::ContentScriptInjectionUrlGetter::FrameAdapter"* nonnull %121) #14
  br label %218

218:                                              ; preds = %213, %211, %47, %44
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %36) #14
  br label %219

219:                                              ; preds = %218, %34
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %27) #14
  br label %220

220:                                              ; preds = %219, %25
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare zeroext i1 @_ZNK3url14SchemeHostPort7IsValidEv(%"class.url::SchemeHostPort"*) local_unnamed_addr #5

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #5

declare void @_ZNK3url14SchemeHostPort6GetURLEv(%class.GURL* sret, %"class.url::SchemeHostPort"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZNK3url6Origin6GetURLEv(%class.GURL* sret, %"class.url::Origin"*) local_unnamed_addr #5

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #6

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"*) unnamed_addr #6

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #6

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3url14SchemeHostPorteqERKS0_(%"class.url::SchemeHostPort"*, %"class.url::SchemeHostPort"* dereferenceable(56)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %0, i64 0, i32 2
  %4 = load i16, i16* %3, align 8
  %5 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 2
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %4, %6
  br i1 %7, label %8, label %110

8:                                                ; preds = %2
  %9 = bitcast %"class.url::SchemeHostPort"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %11 to i64
  %16 = select i1 %12, i64 %14, i64 %15
  %17 = bitcast %"class.url::SchemeHostPort"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = icmp eq i64 %16, %24
  br i1 %25, label %26, label %110

26:                                               ; preds = %8
  %27 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %"class.url::SchemeHostPort"* %0 to i8*
  %30 = select i1 %12, i8* %28, i8* %29
  %31 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast %"class.url::SchemeHostPort"* %1 to i8*
  %34 = select i1 %20, i8* %32, i8* %33
  %35 = icmp eq i64 %16, 0
  br i1 %12, label %42, label %36

36:                                               ; preds = %26
  br i1 %35, label %58, label %37

37:                                               ; preds = %36
  %38 = ptrtoint i8* %28 to i64
  %39 = trunc i64 %38 to i8
  %40 = load i8, i8* %34, align 1
  %41 = icmp eq i8 %40, %39
  br i1 %41, label %43, label %110

42:                                               ; preds = %26
  br i1 %35, label %58, label %55

43:                                               ; preds = %37, %50
  %44 = phi i64 [ %47, %50 ], [ %15, %37 ]
  %45 = phi i8* [ %48, %50 ], [ %29, %37 ]
  %46 = phi i8* [ %51, %50 ], [ %34, %37 ]
  %47 = add i64 %44, -1
  %48 = getelementptr inbounds i8, i8* %45, i64 1
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds i8, i8* %46, i64 1
  %52 = load i8, i8* %48, align 1
  %53 = load i8, i8* %51, align 1
  %54 = icmp eq i8 %52, %53
  br i1 %54, label %43, label %110

55:                                               ; preds = %42
  %56 = tail call i32 @bcmp(i8* %30, i8* %34, i64 %16) #14
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %110

58:                                               ; preds = %43, %36, %42, %55
  %59 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %0, i64 0, i32 1
  %60 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 1
  %61 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = zext i8 %63 to i64
  %68 = select i1 %64, i64 %66, i64 %67
  %69 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  %73 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = zext i8 %71 to i64
  %76 = select i1 %72, i64 %74, i64 %75
  %77 = icmp eq i64 %68, %76
  br i1 %77, label %78, label %110

78:                                               ; preds = %58
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  %82 = select i1 %64, i8* %80, i8* %81
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  %86 = select i1 %72, i8* %84, i8* %85
  %87 = icmp eq i64 %68, 0
  br i1 %64, label %94, label %88

88:                                               ; preds = %78
  br i1 %87, label %110, label %89

89:                                               ; preds = %88
  %90 = ptrtoint i8* %80 to i64
  %91 = trunc i64 %90 to i8
  %92 = load i8, i8* %86, align 1
  %93 = icmp eq i8 %92, %91
  br i1 %93, label %98, label %110

94:                                               ; preds = %78
  br i1 %87, label %110, label %95

95:                                               ; preds = %94
  %96 = tail call i32 @bcmp(i8* %82, i8* %86, i64 %68) #14
  %97 = icmp eq i32 %96, 0
  br label %110

98:                                               ; preds = %89, %105
  %99 = phi i64 [ %102, %105 ], [ %67, %89 ]
  %100 = phi i8* [ %103, %105 ], [ %81, %89 ]
  %101 = phi i8* [ %106, %105 ], [ %86, %89 ]
  %102 = add i64 %99, -1
  %103 = getelementptr inbounds i8, i8* %100, i64 1
  %104 = icmp eq i64 %102, 0
  br i1 %104, label %110, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds i8, i8* %101, i64 1
  %107 = load i8, i8* %103, align 1
  %108 = load i8, i8* %106, align 1
  %109 = icmp eq i8 %107, %108
  br i1 %109, label %98, label %110

110:                                              ; preds = %50, %105, %98, %37, %89, %8, %95, %94, %88, %58, %55, %2
  %111 = phi i1 [ false, %55 ], [ false, %2 ], [ false, %58 ], [ %97, %95 ], [ true, %94 ], [ true, %88 ], [ false, %8 ], [ false, %89 ], [ false, %37 ], [ true, %98 ], [ false, %105 ], [ false, %50 ]
  ret i1 %111
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZNSt3__16vectorImNS_9allocatorImEEE7emplaceIJmEEENS_11__wrap_iterIPmEENS5_IPKmEEDpOT_(%"class.std::__1::vector"*, i64*, i64* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %4 = ptrtoint i64* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp ult i64* %8, %10
  %12 = ptrtoint i64* %8 to i64
  %13 = ptrtoint i64* %10 to i64
  br i1 %11, label %14, label %158

14:                                               ; preds = %3
  %15 = icmp eq i64* %8, %1
  %16 = load i64, i64* %2, align 8
  br i1 %15, label %17, label %21

17:                                               ; preds = %14
  store i64 %16, i64* %1, align 8
  %18 = getelementptr inbounds i64, i64* %1, i64 1
  %19 = ptrtoint i64* %18 to i64
  %20 = bitcast i64** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %301

21:                                               ; preds = %14
  %22 = getelementptr inbounds i64, i64* %1, i64 1
  %23 = ptrtoint i64* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 3
  %26 = getelementptr inbounds i64, i64* %1, i64 %25
  %27 = bitcast i64** %7 to i64*
  %28 = icmp ult i64* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i64, i64* %8, i64 %30
  %32 = bitcast i64* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 4
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i64* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i64* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %150

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i64, i64* %8, i64 %43
  %45 = bitcast i64* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 3
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i64, i64* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add nsw i64 %52, 1
  %54 = getelementptr i64, i64* %1, i64 %53
  %55 = icmp ult i64* %8, %54
  %56 = icmp ult i64* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 4611686018427387900
  %60 = getelementptr i64, i64* %8, i64 %59
  %61 = getelementptr i64, i64* %26, i64 %59
  %62 = add nsw i64 %59, -4
  %63 = lshr exact i64 %62, 2
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 12
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i64, i64* %8, i64 %70
  %73 = getelementptr i64, i64* %26, i64 %70
  %74 = bitcast i64* %73 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 8, !alias.scope !2
  %76 = getelementptr i64, i64* %73, i64 2
  %77 = bitcast i64* %76 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8, !alias.scope !2
  %79 = bitcast i64* %72 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %79, align 8, !alias.scope !5, !noalias !2
  %80 = getelementptr i64, i64* %72, i64 2
  %81 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> %78, <2 x i64>* %81, align 8, !alias.scope !5, !noalias !2
  %82 = or i64 %70, 4
  %83 = getelementptr i64, i64* %8, i64 %82
  %84 = getelementptr i64, i64* %26, i64 %82
  %85 = bitcast i64* %84 to <2 x i64>*
  %86 = load <2 x i64>, <2 x i64>* %85, align 8, !alias.scope !2
  %87 = getelementptr i64, i64* %84, i64 2
  %88 = bitcast i64* %87 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 8, !alias.scope !2
  %90 = bitcast i64* %83 to <2 x i64>*
  store <2 x i64> %86, <2 x i64>* %90, align 8, !alias.scope !5, !noalias !2
  %91 = getelementptr i64, i64* %83, i64 2
  %92 = bitcast i64* %91 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %92, align 8, !alias.scope !5, !noalias !2
  %93 = or i64 %70, 8
  %94 = getelementptr i64, i64* %8, i64 %93
  %95 = getelementptr i64, i64* %26, i64 %93
  %96 = bitcast i64* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8, !alias.scope !2
  %98 = getelementptr i64, i64* %95, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8, !alias.scope !2
  %101 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %101, align 8, !alias.scope !5, !noalias !2
  %102 = getelementptr i64, i64* %94, i64 2
  %103 = bitcast i64* %102 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !5, !noalias !2
  %104 = or i64 %70, 12
  %105 = getelementptr i64, i64* %8, i64 %104
  %106 = getelementptr i64, i64* %26, i64 %104
  %107 = bitcast i64* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8, !alias.scope !2
  %109 = getelementptr i64, i64* %106, i64 2
  %110 = bitcast i64* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !alias.scope !2
  %112 = bitcast i64* %105 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %112, align 8, !alias.scope !5, !noalias !2
  %113 = getelementptr i64, i64* %105, i64 2
  %114 = bitcast i64* %113 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %114, align 8, !alias.scope !5, !noalias !2
  %115 = add i64 %70, 16
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !7

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i64, i64* %8, i64 %122
  %125 = getelementptr i64, i64* %26, i64 %122
  %126 = bitcast i64* %125 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 8, !alias.scope !2
  %128 = getelementptr i64, i64* %125, i64 2
  %129 = bitcast i64* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !2
  %131 = bitcast i64* %124 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %131, align 8, !alias.scope !5, !noalias !2
  %132 = getelementptr i64, i64* %124, i64 2
  %133 = bitcast i64* %132 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %133, align 8, !alias.scope !5, !noalias !2
  %134 = add i64 %122, 4
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !9

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %150, %137
  %140 = phi i64* [ %60, %137 ], [ %155, %150 ]
  %141 = ptrtoint i64* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i64, i64* %8, i64 %146
  %148 = bitcast i64* %147 to i8*
  %149 = bitcast i64* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 %24, i1 false) #14
  br label %157

150:                                              ; preds = %39, %150
  %151 = phi i64* [ %155, %150 ], [ %40, %39 ]
  %152 = phi i64* [ %154, %150 ], [ %41, %39 ]
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %151, align 8
  %154 = getelementptr inbounds i64, i64* %152, i64 1
  %155 = getelementptr inbounds i64, i64* %151, i64 1
  %156 = icmp ult i64* %154, %8
  br i1 %156, label %150, label %139, !llvm.loop !11

157:                                              ; preds = %142, %145
  store i64 %16, i64* %1, align 8
  br label %301

158:                                              ; preds = %3
  %159 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %160 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %160) #14
  %161 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %166 = bitcast i64** %7 to i64*
  %167 = bitcast %"class.std::__1::vector"* %0 to i64*
  %168 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 40, i1 false)
  %169 = load i64, i64* %167, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 3
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 2305843009213693951
  br i1 %173, label %174, label %176

174:                                              ; preds = %158
  %175 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #13
  unreachable

176:                                              ; preds = %158
  %177 = bitcast i64** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 3
  %180 = icmp ult i64 %179, 1152921504606846975
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 3
  store i64* null, i64** %164, align 8
  %184 = bitcast %"class.std::__1::allocator.14"** %165 to %"class.std::__1::__compressed_pair.11"**
  store %"class.std::__1::__compressed_pair.11"* %159, %"class.std::__1::__compressed_pair.11"** %184, align 8
  br label %196

185:                                              ; preds = %176
  %186 = ashr exact i64 %178, 2
  %187 = icmp ult i64 %186, %172
  %188 = select i1 %187, i64 %172, i64 %186
  %189 = sub i64 %4, %169
  %190 = ashr exact i64 %189, 3
  store i64* null, i64** %164, align 8
  %191 = bitcast %"class.std::__1::allocator.14"** %165 to %"class.std::__1::__compressed_pair.11"**
  store %"class.std::__1::__compressed_pair.11"* %159, %"class.std::__1::__compressed_pair.11"** %191, align 8
  %192 = icmp eq i64 %188, 0
  br i1 %192, label %202, label %193

193:                                              ; preds = %185
  %194 = icmp ugt i64 %188, 2305843009213693951
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  tail call void @abort() #13
  unreachable

196:                                              ; preds = %181, %193
  %197 = phi i64 [ 2305843009213693951, %181 ], [ %188, %193 ]
  %198 = phi i64 [ %183, %181 ], [ %190, %193 ]
  %199 = shl i64 %197, 3
  %200 = tail call i8* @_Znwm(i64 %199) #15
  %201 = bitcast i8* %200 to i64*
  br label %202

202:                                              ; preds = %185, %196
  %203 = phi i64 [ %198, %196 ], [ %190, %185 ]
  %204 = phi i64 [ %197, %196 ], [ 0, %185 ]
  %205 = phi i64* [ %201, %196 ], [ null, %185 ]
  store i64* %205, i64** %161, align 8
  %206 = getelementptr inbounds i64, i64* %205, i64 %203
  store i64* %206, i64** %163, align 8
  store i64* %206, i64** %162, align 8
  %207 = getelementptr inbounds i64, i64* %205, i64 %204
  store i64* %207, i64** %164, align 8
  call void @_ZNSt3__114__split_bufferImRNS_9allocatorImEEE12emplace_backIJmEEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %5, i64* dereferenceable(8) %2)
  %208 = load i64*, i64** %162, align 8
  %209 = load i64*, i64** %6, align 8
  %210 = ptrtoint i64* %209 to i64
  %211 = sub i64 %4, %210
  %212 = ashr exact i64 %211, 3
  %213 = sub nsw i64 0, %212
  %214 = getelementptr inbounds i64, i64* %208, i64 %213
  store i64* %214, i64** %162, align 8
  %215 = icmp sgt i64 %211, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %202
  %217 = bitcast i64* %214 to i8*
  %218 = bitcast i64* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 %211, i1 false) #14
  br label %219

219:                                              ; preds = %216, %202
  %220 = load i64*, i64** %7, align 8
  %221 = icmp eq i64* %220, %1
  br i1 %221, label %222, label %226

222:                                              ; preds = %219
  %223 = ptrtoint i64* %220 to i64
  %224 = bitcast i64** %163 to i64*
  %225 = load i64, i64* %224, align 8
  br label %275

226:                                              ; preds = %219
  %227 = load i64*, i64** %163, align 8
  %228 = getelementptr i64, i64* %220, i64 -1
  %229 = ptrtoint i64* %228 to i64
  %230 = sub i64 %229, %4
  %231 = lshr i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 3
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %245, label %235

235:                                              ; preds = %226, %235
  %236 = phi i64* [ %242, %235 ], [ %227, %226 ]
  %237 = phi i64* [ %240, %235 ], [ %1, %226 ]
  %238 = phi i64 [ %243, %235 ], [ %233, %226 ]
  %239 = load i64, i64* %237, align 8
  store i64 %239, i64* %236, align 8
  %240 = getelementptr inbounds i64, i64* %237, i64 1
  %241 = load i64*, i64** %163, align 8
  %242 = getelementptr inbounds i64, i64* %241, i64 1
  store i64* %242, i64** %163, align 8
  %243 = add i64 %238, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %235, !llvm.loop !12

245:                                              ; preds = %235, %226
  %246 = phi i64* [ undef, %226 ], [ %242, %235 ]
  %247 = phi i64* [ %227, %226 ], [ %242, %235 ]
  %248 = phi i64* [ %1, %226 ], [ %240, %235 ]
  %249 = icmp ult i64 %230, 24
  br i1 %249, label %270, label %250

250:                                              ; preds = %245, %250
  %251 = phi i64* [ %268, %250 ], [ %247, %245 ]
  %252 = phi i64* [ %266, %250 ], [ %248, %245 ]
  %253 = load i64, i64* %252, align 8
  store i64 %253, i64* %251, align 8
  %254 = getelementptr inbounds i64, i64* %252, i64 1
  %255 = load i64*, i64** %163, align 8
  %256 = getelementptr inbounds i64, i64* %255, i64 1
  store i64* %256, i64** %163, align 8
  %257 = load i64, i64* %254, align 8
  store i64 %257, i64* %256, align 8
  %258 = getelementptr inbounds i64, i64* %252, i64 2
  %259 = load i64*, i64** %163, align 8
  %260 = getelementptr inbounds i64, i64* %259, i64 1
  store i64* %260, i64** %163, align 8
  %261 = load i64, i64* %258, align 8
  store i64 %261, i64* %260, align 8
  %262 = getelementptr inbounds i64, i64* %252, i64 3
  %263 = load i64*, i64** %163, align 8
  %264 = getelementptr inbounds i64, i64* %263, i64 1
  store i64* %264, i64** %163, align 8
  %265 = load i64, i64* %262, align 8
  store i64 %265, i64* %264, align 8
  %266 = getelementptr inbounds i64, i64* %252, i64 4
  %267 = load i64*, i64** %163, align 8
  %268 = getelementptr inbounds i64, i64* %267, i64 1
  store i64* %268, i64** %163, align 8
  %269 = icmp eq i64* %266, %220
  br i1 %269, label %270, label %250

270:                                              ; preds = %250, %245
  %271 = phi i64* [ %246, %245 ], [ %268, %250 ]
  %272 = ptrtoint i64* %271 to i64
  %273 = load i64, i64* %166, align 8
  %274 = bitcast i64** %163 to i64*
  br label %275

275:                                              ; preds = %222, %270
  %276 = phi i64* [ %224, %222 ], [ %274, %270 ]
  %277 = phi i64 [ %225, %222 ], [ %272, %270 ]
  %278 = phi i64 [ %223, %222 ], [ %273, %270 ]
  %279 = load i64, i64* %167, align 8
  %280 = bitcast i64** %162 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %167, align 8
  store i64 %279, i64* %280, align 8
  store i64 %277, i64* %166, align 8
  store i64 %278, i64* %276, align 8
  %282 = load i64, i64* %177, align 8
  %283 = bitcast i64** %164 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %177, align 8
  store i64 %282, i64* %283, align 8
  %285 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %279, i64* %285, align 8
  %286 = inttoptr i64 %279 to i64*
  %287 = inttoptr i64 %278 to i64*
  %288 = icmp eq i64* %287, %286
  br i1 %288, label %296, label %289

289:                                              ; preds = %275
  %290 = getelementptr i64, i64* %287, i64 -1
  %291 = ptrtoint i64* %290 to i64
  %292 = sub i64 %291, %279
  %293 = lshr i64 %292, 3
  %294 = xor i64 %293, -1
  %295 = getelementptr i64, i64* %287, i64 %294
  store i64* %295, i64** %163, align 8
  br label %296

296:                                              ; preds = %289, %275
  %297 = icmp eq i64 %279, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %279 to i8*
  call void @_ZdlPv(i8* %299) #15
  br label %300

300:                                              ; preds = %296, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %160) #14
  br label %301

301:                                              ; preds = %17, %157, %300
  %302 = phi i64* [ %1, %17 ], [ %1, %157 ], [ %208, %300 ]
  ret i64* %302
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferImRNS_9allocatorImEEE12emplace_backIJmEEEvDpOT_(%"struct.std::__1::__split_buffer"*, i64* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %4, %6
  %8 = ptrtoint i64* %6 to i64
  br i1 %7, label %9, label %229

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = bitcast i64* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = icmp ugt i64* %11, %14
  %16 = ptrtoint i64* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint i64* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i64, i64* %11, i64 %22
  %24 = ptrtoint i64* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast i64* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %12, i64 %25, i1 false) #14
  %30 = load i64*, i64** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi i64* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds i64, i64* %23, i64 %26
  store i64* %33, i64** %3, align 8
  %34 = getelementptr inbounds i64, i64* %32, i64 %22
  store i64* %34, i64** %10, align 8
  br label %229

35:                                               ; preds = %9
  %36 = bitcast i64** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 2
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #13
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 3
  %47 = tail call i8* @_Znwm(i64 %46) #15
  %48 = bitcast i8* %47 to i64*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds i64, i64* %48, i64 %45
  %51 = ptrtoint i64* %50 to i64
  %52 = getelementptr inbounds i64, i64* %48, i64 %41
  %53 = ptrtoint i64* %52 to i64
  %54 = ptrtoint i64* %11 to i64
  %55 = ptrtoint i64* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds i64, i64* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %219, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -8
  %62 = lshr i64 %61, 3
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 4
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = shl nuw nsw i64 %45, 3
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -8
  %69 = lshr i64 %68, 3
  %70 = and i64 %68, -8
  %71 = add i64 %66, %70
  %72 = add i64 %71, 8
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr i64, i64* %11, i64 %74
  %76 = bitcast i64* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 4611686018427387900
  %82 = getelementptr i64, i64* %50, i64 %81
  %83 = getelementptr i64, i64* %11, i64 %81
  %84 = add nsw i64 %81, -4
  %85 = lshr exact i64 %84, 2
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 12
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i64, i64* %50, i64 %92
  %95 = getelementptr i64, i64* %11, i64 %92
  %96 = bitcast i64* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8, !alias.scope !13
  %98 = getelementptr i64, i64* %95, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8, !alias.scope !13
  %101 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %101, align 8, !alias.scope !16, !noalias !13
  %102 = getelementptr i64, i64* %94, i64 2
  %103 = bitcast i64* %102 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !16, !noalias !13
  %104 = or i64 %92, 4
  %105 = getelementptr i64, i64* %50, i64 %104
  %106 = getelementptr i64, i64* %11, i64 %104
  %107 = bitcast i64* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8, !alias.scope !13
  %109 = getelementptr i64, i64* %106, i64 2
  %110 = bitcast i64* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !alias.scope !13
  %112 = bitcast i64* %105 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %112, align 8, !alias.scope !16, !noalias !13
  %113 = getelementptr i64, i64* %105, i64 2
  %114 = bitcast i64* %113 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %114, align 8, !alias.scope !16, !noalias !13
  %115 = or i64 %92, 8
  %116 = getelementptr i64, i64* %50, i64 %115
  %117 = getelementptr i64, i64* %11, i64 %115
  %118 = bitcast i64* %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !13
  %120 = getelementptr i64, i64* %117, i64 2
  %121 = bitcast i64* %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !13
  %123 = bitcast i64* %116 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %123, align 8, !alias.scope !16, !noalias !13
  %124 = getelementptr i64, i64* %116, i64 2
  %125 = bitcast i64* %124 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %125, align 8, !alias.scope !16, !noalias !13
  %126 = or i64 %92, 12
  %127 = getelementptr i64, i64* %50, i64 %126
  %128 = getelementptr i64, i64* %11, i64 %126
  %129 = bitcast i64* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !13
  %131 = getelementptr i64, i64* %128, i64 2
  %132 = bitcast i64* %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 8, !alias.scope !13
  %134 = bitcast i64* %127 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %134, align 8, !alias.scope !16, !noalias !13
  %135 = getelementptr i64, i64* %127, i64 2
  %136 = bitcast i64* %135 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %136, align 8, !alias.scope !16, !noalias !13
  %137 = add i64 %92, 16
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !18

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i64, i64* %50, i64 %144
  %147 = getelementptr i64, i64* %11, i64 %144
  %148 = bitcast i64* %147 to <2 x i64>*
  %149 = load <2 x i64>, <2 x i64>* %148, align 8, !alias.scope !13
  %150 = getelementptr i64, i64* %147, i64 2
  %151 = bitcast i64* %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8, !alias.scope !13
  %153 = bitcast i64* %146 to <2 x i64>*
  store <2 x i64> %149, <2 x i64>* %153, align 8, !alias.scope !16, !noalias !13
  %154 = getelementptr i64, i64* %146, i64 2
  %155 = bitcast i64* %154 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %155, align 8, !alias.scope !16, !noalias !13
  %156 = add i64 %144, 4
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !19

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %216, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi i64* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi i64* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint i64* %162 to i64
  %165 = shl nuw nsw i64 %45, 3
  %166 = add i64 %56, %165
  %167 = add i64 %166, -8
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 3
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %161, %175
  %176 = phi i64* [ %180, %175 ], [ %162, %161 ]
  %177 = phi i64* [ %181, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %182, %175 ], [ %173, %161 ]
  %179 = load i64, i64* %177, align 8
  store i64 %179, i64* %176, align 8
  %180 = getelementptr inbounds i64, i64* %176, i64 1
  %181 = getelementptr inbounds i64, i64* %177, i64 1
  %182 = add i64 %178, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !20

184:                                              ; preds = %175, %161
  %185 = phi i64* [ %162, %161 ], [ %180, %175 ]
  %186 = phi i64* [ %163, %161 ], [ %181, %175 ]
  %187 = icmp ult i8* %169, inttoptr (i64 56 to i8*)
  br i1 %187, label %216, label %188

188:                                              ; preds = %184, %188
  %189 = phi i64* [ %213, %188 ], [ %185, %184 ]
  %190 = phi i64* [ %214, %188 ], [ %186, %184 ]
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %189, align 8
  %192 = getelementptr inbounds i64, i64* %189, i64 1
  %193 = getelementptr inbounds i64, i64* %190, i64 1
  %194 = load i64, i64* %193, align 8
  store i64 %194, i64* %192, align 8
  %195 = getelementptr inbounds i64, i64* %189, i64 2
  %196 = getelementptr inbounds i64, i64* %190, i64 2
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %195, align 8
  %198 = getelementptr inbounds i64, i64* %189, i64 3
  %199 = getelementptr inbounds i64, i64* %190, i64 3
  %200 = load i64, i64* %199, align 8
  store i64 %200, i64* %198, align 8
  %201 = getelementptr inbounds i64, i64* %189, i64 4
  %202 = getelementptr inbounds i64, i64* %190, i64 4
  %203 = load i64, i64* %202, align 8
  store i64 %203, i64* %201, align 8
  %204 = getelementptr inbounds i64, i64* %189, i64 5
  %205 = getelementptr inbounds i64, i64* %190, i64 5
  %206 = load i64, i64* %205, align 8
  store i64 %206, i64* %204, align 8
  %207 = getelementptr inbounds i64, i64* %189, i64 6
  %208 = getelementptr inbounds i64, i64* %190, i64 6
  %209 = load i64, i64* %208, align 8
  store i64 %209, i64* %207, align 8
  %210 = getelementptr inbounds i64, i64* %189, i64 7
  %211 = getelementptr inbounds i64, i64* %190, i64 7
  %212 = load i64, i64* %211, align 8
  store i64 %212, i64* %210, align 8
  %213 = getelementptr inbounds i64, i64* %189, i64 8
  %214 = getelementptr inbounds i64, i64* %190, i64 8
  %215 = icmp eq i64* %58, %213
  br i1 %215, label %216, label %188, !llvm.loop !21

216:                                              ; preds = %184, %188, %159
  %217 = ptrtoint i64* %58 to i64
  %218 = load i64*, i64** %13, align 8
  br label %219

219:                                              ; preds = %44, %216
  %220 = phi i64* [ %218, %216 ], [ %14, %44 ]
  %221 = phi i64 [ %217, %216 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %222 = bitcast i64** %10 to i64*
  store i64 %51, i64* %222, align 8
  %223 = bitcast i64** %3 to i64*
  store i64 %221, i64* %223, align 8
  store i64 %53, i64* %36, align 8
  %224 = icmp eq i64* %220, null
  %225 = inttoptr i64 %221 to i64*
  br i1 %224, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast i64* %220 to i8*
  tail call void @_ZdlPv(i8* %227) #15
  %228 = load i64*, i64** %3, align 8
  br label %229

229:                                              ; preds = %226, %219, %31, %2
  %230 = phi i64* [ %228, %226 ], [ %225, %219 ], [ %33, %31 ], [ %4, %2 ]
  %231 = load i64, i64* %1, align 8
  store i64 %231, i64* %230, align 8
  %232 = load i64*, i64** %3, align 8
  %233 = getelementptr inbounds i64, i64* %232, i64 1
  store i64* %233, i64** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = distinct !{!12, !10}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
