; ModuleID = 'gen/ui/accessibility/mojom/ax_tree_update.mojom.cc'
source_filename = "gen/ui/accessibility/mojom/ax_tree_update.mojom.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ax::mojom::AXTreeUpdate" = type { i8, [7 x i8], %"struct.ui::AXTreeData", i32, i32, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.72" }
%"struct.ui::AXTreeData" = type <{ i32 (...)**, %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.std::__1::basic_string", i8, [3 x i8], float, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"*, %"class.std::__1::__compressed_pair.67" }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.2", %"class.std::__1::vector.9", %"class.std::__1::vector.17", %"class.std::__1::vector.25", %"class.std::__1::vector.33", %"class.std::__1::vector.41", %"class.std::__1::vector.49", %"class.std::__1::vector.57", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"*, %"class.std::__1::__compressed_pair.12" }
%"struct.std::__1::pair.11" = type opaque
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::pair.11"* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"*, %"class.std::__1::__compressed_pair.20" }
%"struct.std::__1::pair.19" = type opaque
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::pair.19"* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.std::__1::pair.27"*, %"struct.std::__1::pair.27"*, %"class.std::__1::__compressed_pair.28" }
%"struct.std::__1::pair.27" = type opaque
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::pair.27"* }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"*, %"class.std::__1::__compressed_pair.36" }
%"struct.std::__1::pair.35" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::pair.35"* }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.std::__1::pair.43"*, %"struct.std::__1::pair.43"*, %"class.std::__1::__compressed_pair.44" }
%"struct.std::__1::pair.43" = type opaque
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::pair.43"* }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"struct.std::__1::pair.51"*, %"struct.std::__1::pair.51"*, %"class.std::__1::__compressed_pair.52" }
%"struct.std::__1::pair.51" = type opaque
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::pair.51"* }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { i32*, i32*, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.ui::AXNodeData"* }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"*, %"class.std::__1::__compressed_pair.74" }
%"class.mojo::InlinedStructPtr" = type { %"class.ax::mojom::EventIntent", i32 }
%"class.ax::mojom::EventIntent" = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.mojo::InlinedStructPtr"* }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.79" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedArray" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector.84", %"class.std::__1::vector.92", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"class.mojo::ScopedHandleBase.86"*, %"class.mojo::ScopedHandleBase.86"*, %"class.std::__1::__compressed_pair.87" }
%"class.mojo::ScopedHandleBase.86" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.mojo::ScopedHandleBase.86"* }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.94" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.99 }
%class.scoped_refptr.99 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.103, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.105", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.101 }
%class.scoped_refptr.101 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.102", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.102" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.103 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.104" }>
%"class.base::RefCountedThreadSafe.104" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__atomic_base.107" }
%"struct.std::__1::__atomic_base.107" = type { %"struct.std::__1::__cxx_atomic_impl.108" }
%"struct.std::__1::__cxx_atomic_impl.108" = type { %"struct.std::__1::__cxx_atomic_base_impl.109" }
%"struct.std::__1::__cxx_atomic_base_impl.109" = type { i32 }
%"class.ax::mojom::internal::AXTreeUpdate_Data" = type { %"struct.mojo::internal::StructHeader", i8, [3 x i8], i32, %"struct.mojo::internal::Pointer", i32, i32, %"struct.mojo::internal::Pointer.110", i32, [4 x i8], %"struct.mojo::internal::Pointer.111" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.110" = type { i64 }
%"struct.mojo::internal::Pointer.111" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.112" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.ax::mojom::AXTreeUpdate"* }
%"class.ax::mojom::internal::AXTreeData_Data" = type { %"struct.mojo::internal::StructHeader", %"class.ax::mojom::internal::AXTreeID_Data", %"class.ax::mojom::internal::AXTreeID_Data", %"class.ax::mojom::internal::AXTreeID_Data", %"struct.mojo::internal::Pointer.123", i8, [3 x i8], float, %"struct.mojo::internal::Pointer.123", %"struct.mojo::internal::Pointer.123", %"struct.mojo::internal::Pointer.123", i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.ax::mojom::internal::AXTreeID_Data" = type { i32, i32, %"union.ax::mojom::internal::AXTreeID_Data::Union_" }
%"union.ax::mojom::internal::AXTreeID_Data::Union_" = type { %"struct.mojo::internal::Pointer.122" }
%"struct.mojo::internal::Pointer.122" = type { i64 }
%"struct.mojo::internal::Pointer.123" = type { i64 }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.mojo::internal::Array_Data.134" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.ax::mojom::internal::EventIntent_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, i32 }
%"class.ax::mojom::internal::AXNodeData_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, [4 x i8], i64, %"struct.mojo::internal::Pointer.124", %"struct.mojo::internal::Pointer.125", %"struct.mojo::internal::Pointer.126", %"struct.mojo::internal::Pointer.127", %"struct.mojo::internal::Pointer.128", %"struct.mojo::internal::Pointer.129", %"struct.mojo::internal::Pointer.130", %"struct.mojo::internal::Pointer.131", %"struct.mojo::internal::Pointer.132" }
%"struct.mojo::internal::Pointer.124" = type { i64 }
%"struct.mojo::internal::Pointer.125" = type { i64 }
%"struct.mojo::internal::Pointer.126" = type { i64 }
%"struct.mojo::internal::Pointer.127" = type { i64 }
%"struct.mojo::internal::Pointer.128" = type { i64 }
%"struct.mojo::internal::Pointer.129" = type { i64 }
%"struct.mojo::internal::Pointer.130" = type { i64 }
%"struct.mojo::internal::Pointer.131" = type { i64 }
%"struct.mojo::internal::Pointer.132" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN2ax5mojom18AXNodeDataDataViewEEENSt3__16vectorIN2ui10AXNodeDataENS7_9allocatorISA_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISD_EESD_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal15AXNodeData_DataEEEEEPSD_PNS_7MessageE = comdat any

$_ZN4mojo11ArrayTraitsINSt3__16vectorINS_16InlinedStructPtrIN2ax5mojom11EventIntentEEENS1_9allocatorIS7_EEEEE6ResizeERSA_m = comdat any

@.str = private unnamed_addr constant [14 x i8] c"has_tree_data\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"<value>\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"tree_data\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"node_id_to_clear\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"root_id\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"nodes\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"event_from\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"event_from_action\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"event_intents\00", align 1

@_ZN2ax5mojom12AXTreeUpdateC1Ev = hidden unnamed_addr alias void (%"class.ax::mojom::AXTreeUpdate"*), void (%"class.ax::mojom::AXTreeUpdate"*)* @_ZN2ax5mojom12AXTreeUpdateC2Ev
@_ZN2ax5mojom12AXTreeUpdateC1EbRKN2ui10AXTreeDataEiiNSt3__16vectorINS2_10AXNodeDataENS6_9allocatorIS8_EEEENS0_9EventFromENS0_6ActionENS7_IN4mojo16InlinedStructPtrINS0_11EventIntentEEENS9_ISH_EEEE = hidden unnamed_addr alias void (%"class.ax::mojom::AXTreeUpdate"*, i1, %"struct.ui::AXTreeData"*, i32, i32, %"class.std::__1::vector"*, i32, i32, %"class.std::__1::vector.72"*), void (%"class.ax::mojom::AXTreeUpdate"*, i1, %"struct.ui::AXTreeData"*, i32, i32, %"class.std::__1::vector"*, i32, i32, %"class.std::__1::vector.72"*)* @_ZN2ax5mojom12AXTreeUpdateC2EbRKN2ui10AXTreeDataEiiNSt3__16vectorINS2_10AXNodeDataENS6_9allocatorIS8_EEEENS0_9EventFromENS0_6ActionENS7_IN4mojo16InlinedStructPtrINS0_11EventIntentEEENS9_ISH_EEEE
@_ZN2ax5mojom12AXTreeUpdateD1Ev = hidden unnamed_addr alias void (%"class.ax::mojom::AXTreeUpdate"*), void (%"class.ax::mojom::AXTreeUpdate"*)* @_ZN2ax5mojom12AXTreeUpdateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ax5mojom12AXTreeUpdateC2Ev(%"class.ax::mojom::AXTreeUpdate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 2
  tail call void @_ZN2ui10AXTreeDataC1Ev(%"struct.ui::AXTreeData"* %3) #8
  %4 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 3
  %5 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 64, i1 false)
  ret void
}

declare void @_ZN2ui10AXTreeDataC1Ev(%"struct.ui::AXTreeData"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ax5mojom12AXTreeUpdateC2EbRKN2ui10AXTreeDataEiiNSt3__16vectorINS2_10AXNodeDataENS6_9allocatorIS8_EEEENS0_9EventFromENS0_6ActionENS7_IN4mojo16InlinedStructPtrINS0_11EventIntentEEENS9_ISH_EEEE(%"class.ax::mojom::AXTreeUpdate"*, i1 zeroext, %"struct.ui::AXTreeData"* dereferenceable(248), i32, i32, %"class.std::__1::vector"* nocapture, i32, i32, %"class.std::__1::vector.72"* nocapture) unnamed_addr #0 align 2 {
  %10 = zext i1 %1 to i8
  %11 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 0
  store i8 %10, i8* %11, align 8
  %12 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 2
  tail call void @_ZN2ui10AXTreeDataC1ERKS0_(%"struct.ui::AXTreeData"* %12, %"struct.ui::AXTreeData"* dereferenceable(248) %2) #8
  %13 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 3
  store i32 %3, i32* %13, align 8
  %14 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 4
  store i32 %4, i32* %14, align 4
  %15 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 5
  %16 = bitcast %"class.std::__1::vector"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #8
  %17 = bitcast %"class.std::__1::vector"* %5 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector"* %15 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %21 = bitcast %"struct.ui::AXNodeData"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 5, i32 0, i32 1
  %24 = bitcast %"struct.ui::AXNodeData"** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast %"struct.ui::AXNodeData"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast %"struct.ui::AXNodeData"** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #8
  %31 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 6
  store i32 %6, i32* %31, align 8
  %32 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 7
  store i32 %7, i32* %32, align 4
  %33 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 8
  %34 = bitcast %"class.std::__1::vector.72"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #8
  %35 = bitcast %"class.std::__1::vector.72"* %8 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector.72"* %33 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %8, i64 0, i32 0, i32 1
  %39 = bitcast %"class.mojo::InlinedStructPtr"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 8, i32 0, i32 1
  %42 = bitcast %"class.mojo::InlinedStructPtr"** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast %"class.mojo::InlinedStructPtr"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"class.mojo::InlinedStructPtr"** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = bitcast %"class.std::__1::vector.72"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #8
  ret void
}

declare void @_ZN2ui10AXTreeDataC1ERKS0_(%"struct.ui::AXTreeData"*, %"struct.ui::AXTreeData"* dereferenceable(248)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ax5mojom12AXTreeUpdateD2Ev(%"class.ax::mojom::AXTreeUpdate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 8
  %3 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %3, align 8
  %5 = icmp eq %"class.mojo::InlinedStructPtr"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.mojo::InlinedStructPtr"* %4 to i8*
  %8 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 8, i32 0, i32 1
  %9 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %8, align 8
  %10 = icmp eq %"class.mojo::InlinedStructPtr"* %9, %4
  br i1 %10, label %19, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"class.mojo::InlinedStructPtr"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %12, i64 -1
  %14 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %13, i64 0, i32 0
  tail call void @_ZN2ax5mojom11EventIntentD1Ev(%"class.ax::mojom::EventIntent"* %14) #8
  %15 = icmp eq %"class.mojo::InlinedStructPtr"* %13, %4
  br i1 %15, label %16, label %11

16:                                               ; preds = %11
  %17 = bitcast %"class.std::__1::vector.72"* %2 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %6
  %20 = phi i8* [ %18, %16 ], [ %7, %6 ]
  store %"class.mojo::InlinedStructPtr"* %4, %"class.mojo::InlinedStructPtr"** %8, align 8
  tail call void @_ZdlPv(i8* %20) #9
  br label %21

21:                                               ; preds = %1, %19
  %22 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 5
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %22, i64 0, i32 0, i32 0
  %24 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %23, align 8
  %25 = icmp eq %"struct.ui::AXNodeData"* %24, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %21
  %27 = bitcast %"struct.ui::AXNodeData"* %24 to i8*
  %28 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 5, i32 0, i32 1
  %29 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %28, align 8
  %30 = icmp eq %"struct.ui::AXNodeData"* %29, %24
  br i1 %30, label %41, label %31

31:                                               ; preds = %26, %31
  %32 = phi %"struct.ui::AXNodeData"* [ %33, %31 ], [ %29, %26 ]
  %33 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %32, i64 -1
  %34 = bitcast %"struct.ui::AXNodeData"* %33 to void (%"struct.ui::AXNodeData"*)***
  %35 = load void (%"struct.ui::AXNodeData"*)**, void (%"struct.ui::AXNodeData"*)*** %34, align 8
  %36 = load void (%"struct.ui::AXNodeData"*)*, void (%"struct.ui::AXNodeData"*)** %35, align 8
  tail call void %36(%"struct.ui::AXNodeData"* %33) #8
  %37 = icmp eq %"struct.ui::AXNodeData"* %33, %24
  br i1 %37, label %38, label %31

38:                                               ; preds = %31
  %39 = bitcast %"class.std::__1::vector"* %22 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %38, %26
  %42 = phi i8* [ %40, %38 ], [ %27, %26 ]
  store %"struct.ui::AXNodeData"* %24, %"struct.ui::AXNodeData"** %28, align 8
  tail call void @_ZdlPv(i8* %42) #9
  br label %43

43:                                               ; preds = %21, %41
  %44 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 2
  tail call void @_ZN2ui10AXTreeDataD1Ev(%"struct.ui::AXTreeData"* %44) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui10AXTreeDataD1Ev(%"struct.ui::AXTreeData"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ax5mojom12AXTreeUpdate14WriteIntoTraceEN8perfetto11TracedValueE(%"class.ax::mojom::AXTreeUpdate"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = alloca %"class.perfetto::TracedValue", align 8
  %11 = alloca %"class.perfetto::TracedArray", align 8
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedDictionary", align 8
  %14 = alloca %"class.perfetto::TracedValue", align 8
  %15 = alloca %"class.perfetto::TracedValue", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.perfetto::TracedValue", align 8
  %18 = alloca %"class.perfetto::TracedValue", align 8
  %19 = alloca %"class.perfetto::TracedValue", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.perfetto::TracedValue", align 8
  %22 = alloca %"class.perfetto::TracedValue", align 8
  %23 = alloca %"class.perfetto::TracedValue", align 8
  %24 = bitcast %"class.perfetto::TracedDictionary"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #8
  %25 = bitcast %"class.perfetto::TracedDictionary"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %13, %"class.perfetto::TracedValue"* %1) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %14, %"class.perfetto::TracedDictionary"* nonnull %13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #8
  %26 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 0
  %27 = bitcast %"class.perfetto::TracedValue"* %14 to i8*
  %28 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %27, i64 16, i1 false) #8
  %29 = load i8, i8* %26, align 1, !range !2
  %30 = icmp ne i8 %29, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %7, i1 zeroext %30) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %15, %"class.perfetto::TracedDictionary"* nonnull %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)) #8
  %31 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  store i8 7, i8* %33, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #8
  %34 = getelementptr inbounds i8, i8* %31, i64 7
  store i8 0, i8* %34, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %15, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %16) #8
  %35 = load i8, i8* %33, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #9
  br label %40

40:                                               ; preds = %2, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %17, %"class.perfetto::TracedDictionary"* nonnull %13, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #8
  %41 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 3
  %42 = bitcast %"class.perfetto::TracedValue"* %17 to i8*
  %43 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* nonnull align 8 %42, i64 16, i1 false) #8
  %44 = load i32, i32* %41, align 4
  %45 = sext i32 %44 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %6, i64 %45) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %18, %"class.perfetto::TracedDictionary"* nonnull %13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)) #8
  %46 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 4
  %47 = bitcast %"class.perfetto::TracedValue"* %18 to i8*
  %48 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* nonnull align 8 %47, i64 16, i1 false) #8
  %49 = load i32, i32* %46, align 4
  %50 = sext i32 %49 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %5, i64 %50) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %19, %"class.perfetto::TracedDictionary"* nonnull %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)) #8
  %51 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #8
  %52 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  store i8 7, i8* %53, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #8
  %54 = getelementptr inbounds i8, i8* %51, i64 7
  store i8 0, i8* %54, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %19, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %20) #8
  %55 = load i8, i8* %53, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %40
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #9
  br label %60

60:                                               ; preds = %40, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %21, %"class.perfetto::TracedDictionary"* nonnull %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0)) #8
  %61 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 6
  %62 = bitcast %"class.perfetto::TracedValue"* %21 to i8*
  %63 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %63, i8* nonnull align 8 %62, i64 16, i1 false) #8
  %64 = load i32, i32* %61, align 4
  call void @_ZN8perfetto17TraceFormatTraitsIN2ax5mojom9EventFromEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"* nonnull %4, i32 %64) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %22, %"class.perfetto::TracedDictionary"* nonnull %13, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0)) #8
  %65 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 7
  %66 = bitcast %"class.perfetto::TracedValue"* %22 to i8*
  %67 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* nonnull align 8 %66, i64 16, i1 false) #8
  %68 = load i32, i32* %65, align 4
  call void @_ZN8perfetto17TraceFormatTraitsIN2ax5mojom6ActionEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"* nonnull %3, i32 %68) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %23, %"class.perfetto::TracedDictionary"* nonnull %13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0)) #8
  %69 = bitcast %"class.perfetto::TracedValue"* %23 to i8*
  %70 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* nonnull align 8 %69, i64 16, i1 false) #8
  %71 = bitcast %"class.perfetto::TracedArray"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 16, i1 false) #8
  call void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* nonnull sret %11, %"class.perfetto::TracedValue"* nonnull %12) #8
  %72 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 8, i32 0, i32 0
  %73 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %72, align 8
  %74 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %0, i64 0, i32 8, i32 0, i32 1
  %75 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %74, align 8
  %76 = icmp eq %"class.mojo::InlinedStructPtr"* %73, %75
  br i1 %76, label %94, label %77

77:                                               ; preds = %60
  %78 = bitcast %"class.perfetto::TracedValue"* %10 to i8*
  %79 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  %80 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  br label %81

81:                                               ; preds = %91, %77
  %82 = phi %"class.mojo::InlinedStructPtr"* [ %73, %77 ], [ %92, %91 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #8
  call void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* nonnull sret %10, %"class.perfetto::TracedArray"* nonnull %11) #8
  %83 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %82, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %79, i8* nonnull align 8 %78, i64 16, i1 false) #8
  %86 = icmp eq %"class.mojo::InlinedStructPtr"* %82, null
  %87 = or i1 %86, %85
  br i1 %87, label %88, label %89

88:                                               ; preds = %81
  call void @_ZNO8perfetto11TracedValue12WritePointerEPKv(%"class.perfetto::TracedValue"* nonnull %9, i8* null) #8
  br label %91

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %82, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %80, i8* nonnull align 8 %79, i64 16, i1 false) #8
  call void @_ZNK2ax5mojom11EventIntent14WriteIntoTraceEN8perfetto11TracedValueE(%"class.ax::mojom::EventIntent"* nonnull %90, %"class.perfetto::TracedValue"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #8
  br label %91

91:                                               ; preds = %89, %88
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #8
  %92 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %82, i64 1
  %93 = icmp eq %"class.mojo::InlinedStructPtr"* %92, %75
  br i1 %93, label %94, label %81

94:                                               ; preds = %91, %60
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #1

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ax5mojom12AXTreeUpdate8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN2ax5mojom8internal17AXTreeUpdate_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #8
  ret i1 %3
}

declare zeroext i1 @_ZN2ax5mojom8internal17AXTreeUpdate_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN2ax5mojom20AXTreeUpdateDataViewENS_9StructPtrINS2_12AXTreeUpdateEEEE4ReadES3_PS6_(%"class.ax::mojom::internal::AXTreeUpdate_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 320) #9, !noalias !3
  store i8 0, i8* %4, align 8, !noalias !3
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to %"struct.ui::AXTreeData"*
  tail call void @_ZN2ui10AXTreeDataC1Ev(%"struct.ui::AXTreeData"* %6) #8, !noalias !3
  %7 = getelementptr inbounds i8, i8* %4, i64 256
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 64, i1 false) #8, !noalias !3
  %8 = ptrtoint i8* %4 to i64
  %9 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeUpdate_Data", %"class.ax::mojom::internal::AXTreeUpdate_Data"* %0, i64 0, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = and i8 %10, 1
  store i8 %11, i8* %4, align 8
  %12 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeUpdate_Data", %"class.ax::mojom::internal::AXTreeUpdate_Data"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %12, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %3
  %17 = bitcast %"struct.mojo::internal::Pointer"* %12 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %14
  %19 = bitcast i8* %18 to %"class.ax::mojom::internal::AXTreeData_Data"*
  %20 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN2ax5mojom18AXTreeDataDataViewEN2ui10AXTreeDataEE4ReadES3_PS5_(%"class.ax::mojom::internal::AXTreeData_Data"* nonnull %19, %"class.mojo::Message"* %1, %"struct.ui::AXTreeData"* %6) #8
  br i1 %20, label %21, label %123

21:                                               ; preds = %3, %16
  %22 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeUpdate_Data", %"class.ax::mojom::internal::AXTreeUpdate_Data"* %0, i64 0, i32 3
  %23 = load i32, i32* %22, align 1
  %24 = bitcast i8* %7 to i32*
  store i32 %23, i32* %24, align 8
  %25 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeUpdate_Data", %"class.ax::mojom::internal::AXTreeUpdate_Data"* %0, i64 0, i32 5
  %26 = load i32, i32* %25, align 1
  %27 = getelementptr inbounds i8, i8* %4, i64 260
  %28 = bitcast i8* %27 to i32*
  store i32 %26, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %4, i64 264
  %30 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeUpdate_Data", %"class.ax::mojom::internal::AXTreeUpdate_Data"* %0, i64 0, i32 7
  %31 = getelementptr inbounds %"struct.mojo::internal::Pointer.110", %"struct.mojo::internal::Pointer.110"* %30, i64 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %49

34:                                               ; preds = %21
  %35 = bitcast i8* %29 to %"struct.ui::AXNodeData"**
  %36 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %35, align 8
  %37 = getelementptr inbounds i8, i8* %4, i64 272
  %38 = bitcast i8* %37 to %"struct.ui::AXNodeData"**
  %39 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %38, align 8
  %40 = icmp eq %"struct.ui::AXNodeData"* %39, %36
  br i1 %40, label %48, label %41

41:                                               ; preds = %34, %41
  %42 = phi %"struct.ui::AXNodeData"* [ %43, %41 ], [ %39, %34 ]
  %43 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %42, i64 -1
  %44 = bitcast %"struct.ui::AXNodeData"* %43 to void (%"struct.ui::AXNodeData"*)***
  %45 = load void (%"struct.ui::AXNodeData"*)**, void (%"struct.ui::AXNodeData"*)*** %44, align 8
  %46 = load void (%"struct.ui::AXNodeData"*)*, void (%"struct.ui::AXNodeData"*)** %45, align 8
  tail call void %46(%"struct.ui::AXNodeData"* %43) #8
  %47 = icmp eq %"struct.ui::AXNodeData"* %43, %36
  br i1 %47, label %48, label %41

48:                                               ; preds = %41, %34
  store %"struct.ui::AXNodeData"* %36, %"struct.ui::AXNodeData"** %38, align 8
  br label %55

49:                                               ; preds = %21
  %50 = bitcast i8* %29 to %"class.std::__1::vector"*
  %51 = bitcast %"struct.mojo::internal::Pointer.110"* %30 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 %32
  %53 = bitcast i8* %52 to %"class.mojo::internal::Array_Data"*
  %54 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN2ax5mojom18AXNodeDataDataViewEEENSt3__16vectorIN2ui10AXNodeDataENS7_9allocatorISA_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISD_EESD_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal15AXNodeData_DataEEEEEPSD_PNS_7MessageE(%"class.mojo::internal::Array_Data"* nonnull %53, %"class.std::__1::vector"* %50, %"class.mojo::Message"* %1) #8
  br i1 %54, label %55, label %123

55:                                               ; preds = %48, %49
  %56 = getelementptr inbounds i8, i8* %4, i64 288
  %57 = bitcast i8* %56 to i32*
  %58 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeUpdate_Data", %"class.ax::mojom::internal::AXTreeUpdate_Data"* %0, i64 0, i32 6
  %59 = load i32, i32* %58, align 1
  %60 = icmp ult i32 %59, 4
  %61 = select i1 %60, i32 %59, i32 0
  store i32 %61, i32* %57, align 4
  %62 = getelementptr inbounds i8, i8* %4, i64 292
  %63 = bitcast i8* %62 to i32*
  %64 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeUpdate_Data", %"class.ax::mojom::internal::AXTreeUpdate_Data"* %0, i64 0, i32 8
  %65 = load i32, i32* %64, align 1
  %66 = icmp ult i32 %65, 38
  %67 = select i1 %66, i32 %65, i32 0
  store i32 %67, i32* %63, align 4
  %68 = getelementptr inbounds i8, i8* %4, i64 296
  %69 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeUpdate_Data", %"class.ax::mojom::internal::AXTreeUpdate_Data"* %0, i64 0, i32 10
  %70 = getelementptr inbounds %"struct.mojo::internal::Pointer.111", %"struct.mojo::internal::Pointer.111"* %69, i64 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %86

73:                                               ; preds = %55
  %74 = bitcast i8* %68 to %"class.mojo::InlinedStructPtr"**
  %75 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %74, align 8
  %76 = getelementptr inbounds i8, i8* %4, i64 304
  %77 = bitcast i8* %76 to %"class.mojo::InlinedStructPtr"**
  %78 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %77, align 8
  %79 = icmp eq %"class.mojo::InlinedStructPtr"* %78, %75
  br i1 %79, label %85, label %80

80:                                               ; preds = %73, %80
  %81 = phi %"class.mojo::InlinedStructPtr"* [ %82, %80 ], [ %78, %73 ]
  %82 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %81, i64 -1
  %83 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %82, i64 0, i32 0
  tail call void @_ZN2ax5mojom11EventIntentD1Ev(%"class.ax::mojom::EventIntent"* %83) #8
  %84 = icmp eq %"class.mojo::InlinedStructPtr"* %82, %75
  br i1 %84, label %85, label %80

85:                                               ; preds = %80, %73
  store %"class.mojo::InlinedStructPtr"* %75, %"class.mojo::InlinedStructPtr"** %77, align 8
  br label %123

86:                                               ; preds = %55
  %87 = bitcast i8* %68 to %"class.std::__1::vector.72"*
  %88 = bitcast %"struct.mojo::internal::Pointer.111"* %69 to i8*
  %89 = getelementptr inbounds i8, i8* %88, i64 %71
  %90 = getelementptr inbounds i8, i8* %89, i64 4
  %91 = bitcast i8* %90 to i32*
  %92 = load i32, i32* %91, align 1
  %93 = zext i32 %92 to i64
  %94 = tail call zeroext i1 @_ZN4mojo11ArrayTraitsINSt3__16vectorINS_16InlinedStructPtrIN2ax5mojom11EventIntentEEENS1_9allocatorIS7_EEEEE6ResizeERSA_m(%"class.std::__1::vector.72"* dereferenceable(24) %87, i64 %93) #8
  br i1 %94, label %95, label %123

95:                                               ; preds = %86
  %96 = load i32, i32* %91, align 1
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %123, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds i8, i8* %89, i64 8
  %100 = bitcast i8* %99 to %"class.mojo::internal::Array_Data.134"*
  %101 = bitcast i8* %68 to %"class.mojo::InlinedStructPtr"**
  br label %102

102:                                              ; preds = %119, %98
  %103 = phi i64 [ 0, %98 ], [ %108, %119 ]
  %104 = getelementptr inbounds %"class.mojo::internal::Array_Data.134", %"class.mojo::internal::Array_Data.134"* %100, i64 %103
  %105 = bitcast %"class.mojo::internal::Array_Data.134"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = icmp eq i64 %106, 0
  %108 = add nuw nsw i64 %103, 1
  %109 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %101, align 8
  %110 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %109, i64 %103
  br i1 %107, label %111, label %114

111:                                              ; preds = %102
  %112 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %109, i64 %103, i32 1
  store i32 0, i32* %112, align 4
  %113 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %110, i64 0, i32 0
  tail call void @_ZN2ax5mojom11EventIntentD1Ev(%"class.ax::mojom::EventIntent"* %113) #8
  tail call void @_ZN2ax5mojom11EventIntentC1Ev(%"class.ax::mojom::EventIntent"* %113) #8
  br label %119

114:                                              ; preds = %102
  %115 = bitcast %"class.mojo::internal::Array_Data.134"* %104 to i8*
  %116 = getelementptr inbounds i8, i8* %115, i64 %106
  %117 = bitcast i8* %116 to %"class.ax::mojom::internal::EventIntent_Data"*
  %118 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN2ax5mojom19EventIntentDataViewENS_16InlinedStructPtrINS2_11EventIntentEEEE4ReadES3_PS6_(%"class.ax::mojom::internal::EventIntent_Data"* nonnull %117, %"class.mojo::InlinedStructPtr"* %110) #8
  br i1 %118, label %119, label %123

119:                                              ; preds = %114, %111
  %120 = load i32, i32* %91, align 1
  %121 = zext i32 %120 to i64
  %122 = icmp ult i64 %108, %121
  br i1 %122, label %102, label %123

123:                                              ; preds = %114, %119, %49, %16, %86, %85, %95
  %124 = phi i8 [ 0, %86 ], [ 1, %85 ], [ 1, %95 ], [ 0, %16 ], [ 0, %49 ], [ 1, %119 ], [ 0, %114 ]
  %125 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = load %"class.ax::mojom::AXTreeUpdate"*, %"class.ax::mojom::AXTreeUpdate"** %125, align 8
  store %"class.ax::mojom::AXTreeUpdate"* null, %"class.ax::mojom::AXTreeUpdate"** %125, align 8
  %127 = icmp eq %"class.ax::mojom::AXTreeUpdate"* %126, null
  br i1 %127, label %128, label %131

128:                                              ; preds = %123
  %129 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %8, i64* %129, align 8
  %130 = icmp ne i8 %124, 0
  br label %139

131:                                              ; preds = %123
  tail call void @_ZN2ax5mojom12AXTreeUpdateD2Ev(%"class.ax::mojom::AXTreeUpdate"* nonnull %126) #8
  %132 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %126, i64 0, i32 0
  tail call void @_ZdlPv(i8* %132) #9
  %133 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %134 = load %"class.ax::mojom::AXTreeUpdate"*, %"class.ax::mojom::AXTreeUpdate"** %125, align 8
  store i64 %8, i64* %133, align 8
  %135 = icmp ne i8 %124, 0
  %136 = icmp eq %"class.ax::mojom::AXTreeUpdate"* %134, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %131
  tail call void @_ZN2ax5mojom12AXTreeUpdateD2Ev(%"class.ax::mojom::AXTreeUpdate"* nonnull %134) #8
  %138 = getelementptr inbounds %"class.ax::mojom::AXTreeUpdate", %"class.ax::mojom::AXTreeUpdate"* %134, i64 0, i32 0
  tail call void @_ZdlPv(i8* %138) #9
  br label %139

139:                                              ; preds = %128, %131, %137
  %140 = phi i1 [ %130, %128 ], [ %135, %131 ], [ %135, %137 ]
  ret i1 %140
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2ax5mojom11EventIntentD1Ev(%"class.ax::mojom::EventIntent"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"*, i64) local_unnamed_addr #1

declare void @_ZN8perfetto17TraceFormatTraitsIN2ax5mojom9EventFromEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"*, i32) local_unnamed_addr #1

declare void @_ZN8perfetto17TraceFormatTraitsIN2ax5mojom6ActionEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"*, i32) local_unnamed_addr #1

declare void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #1

declare void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedArray"*) local_unnamed_addr #1

declare void @_ZNO8perfetto11TracedValue12WritePointerEPKv(%"class.perfetto::TracedValue"*, i8*) local_unnamed_addr #1

declare void @_ZNK2ax5mojom11EventIntent14WriteIntoTraceEN8perfetto11TracedValueE(%"class.ax::mojom::EventIntent"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4mojo12StructTraitsIN2ax5mojom18AXTreeDataDataViewEN2ui10AXTreeDataEE4ReadES3_PS5_(%"class.ax::mojom::internal::AXTreeData_Data"*, %"class.mojo::Message"*, %"struct.ui::AXTreeData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN2ax5mojom18AXNodeDataDataViewEEENSt3__16vectorIN2ui10AXNodeDataENS7_9allocatorISA_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISD_EESD_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal15AXNodeData_DataEEEEEPSD_PNS_7MessageE(%"class.mojo::internal::Array_Data"*, %"class.std::__1::vector"*, %"class.mojo::Message"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.ui::AXNodeData"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 264
  %14 = icmp eq i64 %13, %6
  br i1 %14, label %52, label %15

15:                                               ; preds = %3
  %16 = icmp eq i32 %5, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = mul nuw nsw i64 %6, 264
  %19 = tail call i8* @_Znwm(i64 %18) #9
  %20 = bitcast i8* %19 to %"struct.ui::AXNodeData"*
  %21 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %20, i64 %6
  %22 = ptrtoint i8* %19 to i64
  br label %23

23:                                               ; preds = %23, %17
  %24 = phi %"struct.ui::AXNodeData"* [ %25, %23 ], [ %20, %17 ]
  tail call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* %24) #8
  %25 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %24, i64 1
  %26 = icmp eq %"struct.ui::AXNodeData"* %25, %21
  br i1 %26, label %27, label %23

27:                                               ; preds = %23
  %28 = ptrtoint %"struct.ui::AXNodeData"* %21 to i64
  %29 = load i64, i64* %10, align 8
  %30 = load i64, i64* %8, align 8
  br label %31

31:                                               ; preds = %15, %27
  %32 = phi i64 [ %28, %27 ], [ 0, %15 ]
  %33 = phi i64 [ %30, %27 ], [ %9, %15 ]
  %34 = phi i64 [ %22, %27 ], [ 0, %15 ]
  %35 = phi i64 [ %29, %27 ], [ %11, %15 ]
  store i64 %34, i64* %10, align 8
  store i64 %32, i64* %8, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"struct.ui::AXNodeData"** %36 to i64*
  store i64 %32, i64* %37, align 8
  %38 = inttoptr i64 %35 to %"struct.ui::AXNodeData"*
  %39 = icmp eq i64 %35, 0
  %40 = inttoptr i64 %33 to %"struct.ui::AXNodeData"*
  br i1 %39, label %52, label %41

41:                                               ; preds = %31
  %42 = icmp eq %"struct.ui::AXNodeData"* %40, %38
  br i1 %42, label %50, label %43

43:                                               ; preds = %41, %43
  %44 = phi %"struct.ui::AXNodeData"* [ %45, %43 ], [ %40, %41 ]
  %45 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %44, i64 -1
  %46 = bitcast %"struct.ui::AXNodeData"* %45 to void (%"struct.ui::AXNodeData"*)***
  %47 = load void (%"struct.ui::AXNodeData"*)**, void (%"struct.ui::AXNodeData"*)*** %46, align 8
  %48 = load void (%"struct.ui::AXNodeData"*)*, void (%"struct.ui::AXNodeData"*)** %47, align 8
  tail call void %48(%"struct.ui::AXNodeData"* %45) #8
  %49 = icmp eq %"struct.ui::AXNodeData"* %45, %38
  br i1 %49, label %50, label %43

50:                                               ; preds = %43, %41
  %51 = inttoptr i64 %35 to i8*
  tail call void @_ZdlPv(i8* %51) #9
  br label %52

52:                                               ; preds = %3, %50, %31
  %53 = load i32, i32* %4, align 1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %81, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 1
  %57 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  br label %58

58:                                               ; preds = %55, %77
  %59 = phi i32 [ %53, %55 ], [ %78, %77 ]
  %60 = phi i64 [ 0, %55 ], [ %67, %77 ]
  %61 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %56, i64 %60
  %62 = bitcast %"class.mojo::internal::Array_Data"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, 0
  %65 = bitcast %"class.mojo::internal::Array_Data"* %61 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 %63
  %67 = add nuw nsw i64 %60, 1
  %68 = icmp eq i8* %66, null
  %69 = or i1 %64, %68
  br i1 %69, label %77, label %70

70:                                               ; preds = %58
  %71 = bitcast i8* %66 to %"class.ax::mojom::internal::AXNodeData_Data"*
  %72 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %57, align 8
  %73 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %72, i64 %60
  %74 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN2ax5mojom18AXNodeDataDataViewEN2ui10AXNodeDataEE4ReadES3_PS5_(%"class.ax::mojom::internal::AXNodeData_Data"* nonnull %71, %"class.mojo::Message"* %2, %"struct.ui::AXNodeData"* %73) #8
  br i1 %74, label %75, label %81

75:                                               ; preds = %70
  %76 = load i32, i32* %4, align 1
  br label %77

77:                                               ; preds = %75, %58
  %78 = phi i32 [ %76, %75 ], [ %59, %58 ]
  %79 = zext i32 %78 to i64
  %80 = icmp ult i64 %67, %79
  br i1 %80, label %58, label %81

81:                                               ; preds = %77, %70, %52
  %82 = phi i1 [ true, %52 ], [ false, %70 ], [ true, %77 ]
  ret i1 %82
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

declare void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"*) unnamed_addr #1

declare zeroext i1 @_ZN4mojo12StructTraitsIN2ax5mojom18AXNodeDataDataViewEN2ui10AXNodeDataEE4ReadES3_PS5_(%"class.ax::mojom::internal::AXNodeData_Data"*, %"class.mojo::Message"*, %"struct.ui::AXNodeData"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo11ArrayTraitsINSt3__16vectorINS_16InlinedStructPtrIN2ax5mojom11EventIntentEEENS1_9allocatorIS7_EEEEE6ResizeERSA_m(%"class.std::__1::vector.72"* dereferenceable(24), i64) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.72", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.mojo::InlinedStructPtr"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.72"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 20
  %11 = icmp eq i64 %10, %1
  br i1 %11, label %71, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.72"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %3, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #8
  %16 = icmp eq i64 %1, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = bitcast %"class.mojo::InlinedStructPtr"** %14 to i64*
  %19 = bitcast %"class.mojo::InlinedStructPtr"** %15 to i64*
  br label %46

20:                                               ; preds = %12
  %21 = icmp ugt i64 %1, 922337203685477580
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector.72"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %23) #10
  unreachable

24:                                               ; preds = %20
  %25 = mul i64 %1, 20
  %26 = tail call i8* @_Znwm(i64 %25) #9
  %27 = bitcast i8* %26 to %"class.mojo::InlinedStructPtr"*
  %28 = bitcast %"class.mojo::InlinedStructPtr"** %14 to i8**
  store i8* %26, i8** %28, align 8
  %29 = bitcast %"class.std::__1::vector.72"* %3 to i8**
  store i8* %26, i8** %29, align 8
  %30 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %27, i64 %1
  store %"class.mojo::InlinedStructPtr"* %30, %"class.mojo::InlinedStructPtr"** %15, align 8
  %31 = ptrtoint i8* %26 to i64
  br label %32

32:                                               ; preds = %32, %24
  %33 = phi %"class.mojo::InlinedStructPtr"* [ %37, %32 ], [ %27, %24 ]
  %34 = bitcast %"class.mojo::InlinedStructPtr"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %34, i8 0, i64 20, i1 false) #8
  %35 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %33, i64 0, i32 0
  tail call void @_ZN2ax5mojom11EventIntentC1Ev(%"class.ax::mojom::EventIntent"* %35) #8
  %36 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %33, i64 0, i32 1
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %33, i64 1
  %38 = icmp eq %"class.mojo::InlinedStructPtr"* %37, %30
  br i1 %38, label %39, label %32

39:                                               ; preds = %32
  %40 = bitcast %"class.mojo::InlinedStructPtr"** %14 to i64*
  %41 = ptrtoint %"class.mojo::InlinedStructPtr"* %30 to i64
  store i64 %41, i64* %40, align 8
  %42 = load i64, i64* %7, align 8
  %43 = load i64, i64* %5, align 8
  %44 = bitcast %"class.mojo::InlinedStructPtr"** %15 to i64*
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %17, %39
  %47 = phi i64* [ %19, %17 ], [ %44, %39 ]
  %48 = phi i64* [ %18, %17 ], [ %40, %39 ]
  %49 = phi i64 [ 0, %17 ], [ %45, %39 ]
  %50 = phi i64 [ 0, %17 ], [ %41, %39 ]
  %51 = phi i64 [ %6, %17 ], [ %43, %39 ]
  %52 = phi i64 [ 0, %17 ], [ %31, %39 ]
  %53 = phi i64 [ %8, %17 ], [ %42, %39 ]
  %54 = bitcast %"class.std::__1::vector.72"* %3 to i64*
  store i64 %52, i64* %7, align 8
  store i64 %53, i64* %54, align 8
  store i64 %50, i64* %5, align 8
  store i64 %51, i64* %48, align 8
  %55 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast %"class.mojo::InlinedStructPtr"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  store i64 %49, i64* %56, align 8
  store i64 %57, i64* %47, align 8
  %58 = inttoptr i64 %53 to %"class.mojo::InlinedStructPtr"*
  %59 = icmp eq i64 %53, 0
  %60 = inttoptr i64 %51 to %"class.mojo::InlinedStructPtr"*
  br i1 %59, label %70, label %61

61:                                               ; preds = %46
  %62 = icmp eq %"class.mojo::InlinedStructPtr"* %60, %58
  br i1 %62, label %68, label %63

63:                                               ; preds = %61, %63
  %64 = phi %"class.mojo::InlinedStructPtr"* [ %65, %63 ], [ %60, %61 ]
  %65 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %64, i64 -1
  %66 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %65, i64 0, i32 0
  tail call void @_ZN2ax5mojom11EventIntentD1Ev(%"class.ax::mojom::EventIntent"* %66) #8
  %67 = icmp eq %"class.mojo::InlinedStructPtr"* %65, %58
  br i1 %67, label %68, label %63

68:                                               ; preds = %63, %61
  %69 = inttoptr i64 %53 to i8*
  store %"class.mojo::InlinedStructPtr"* %58, %"class.mojo::InlinedStructPtr"** %14, align 8
  tail call void @_ZdlPv(i8* %69) #9
  br label %70

70:                                               ; preds = %46, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8
  br label %71

71:                                               ; preds = %2, %70
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN2ax5mojom11EventIntentC1Ev(%"class.ax::mojom::EventIntent"*) unnamed_addr #1

declare zeroext i1 @_ZN4mojo12StructTraitsIN2ax5mojom19EventIntentDataViewENS_16InlinedStructPtrINS2_11EventIntentEEEE4ReadES3_PS6_(%"class.ax::mojom::internal::EventIntent_Data"*, %"class.mojo::InlinedStructPtr"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN2ax5mojom12AXTreeUpdate3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZN2ax5mojom12AXTreeUpdate3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
