; ModuleID = '../../chrome/browser/sharing/click_to_call/click_to_call_utils.cc'
source_filename = "../../chrome/browser/sharing/click_to_call/click_to_call_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.12" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.GURL* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.url::RawCanonOutputT" = type { %"class.url::CanonOutputT", [1024 x i16] }
%"class.url::CanonOutputT" = type { i32 (...)**, i16*, i32, i32 }
%"class.std::__1::basic_string.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.210 }
%union.anon.210 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.211 }
%struct.anon.211 = type { %"struct.std::__1::__padding.212", i8 }
%"struct.std::__1::__padding.212" = type { [1 x i8] }
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.22", i8, i8, i32, %"class.base::ObserverList", %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.34" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.29" }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i8 }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51", %class.scoped_refptr.77, %"class.base::RepeatingCallback.78", %class.scoped_refptr.79, %"class.std::__1::unordered_map" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback", %class.PrefNotifier*, %"class.std::__1::map.57", i8, %"class.std::__1::unique_ptr.68" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr.54, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr.54 = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.55 }
%class.scoped_refptr.55 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.56", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.56" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.PrefNotifier = type opaque
%"class.std::__1::map.57" = type { %"class.std::__1::__tree.58" }
%"class.std::__1::__tree.58" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.77 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RepeatingCallback.78" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.79 = type { %class.PrefRegistry* }
%class.PrefRegistry = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.80", %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.95", [4 x i8] }>
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82", %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { float }
%class.SharingService = type { %class.KeyedService, %"class.syncer::SyncServiceObserver", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.188", %"class.syncer::SyncService"*, %"class.net::BackoffEntry", i32, %"class.std::__1::map.194", %"class.base::WeakPtrFactory.203" }
%class.KeyedService = type { i32 (...)** }
%"class.syncer::SyncServiceObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %class.SharingSyncPreference* }
%class.SharingSyncPreference = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %class.VapidKeyManager* }
%class.VapidKeyManager = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %class.SharingDeviceRegistration* }
%class.SharingDeviceRegistration = type { i32 (...)**, %class.PrefService*, %class.SharingSyncPreference*, %class.VapidKeyManager*, %"class.instance_id::InstanceIDDriver"*, %"class.syncer::SyncService"*, %"class.absl::optional.113", %"class.base::WeakPtrFactory" }
%"class.instance_id::InstanceIDDriver" = type opaque
%"class.absl::optional.113" = type { %"class.absl::optional_internal::optional_data.114" }
%"class.absl::optional_internal::optional_data.114" = type { %"class.absl::optional_internal::optional_data_base.115" }
%"class.absl::optional_internal::optional_data_base.115" = type { %"class.absl::optional_internal::optional_data_dtor_base.116" }
%"class.absl::optional_internal::optional_data_dtor_base.116" = type { i8, %union.anon.117 }
%union.anon.117 = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.118" }
%"class.std::__1::__tree.118" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.127 }
%class.scoped_refptr.127 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %class.SharingMessageSender* }
%class.SharingMessageSender = type { i32 (...)**, %"class.syncer::LocalDeviceInfoProvider"*, %"class.std::__1::map.134", %"class.std::__1::map.143", %"class.std::__1::map.152", %"class.std::__1::map.161", %"class.base::WeakPtrFactory.172" }
%"class.syncer::LocalDeviceInfoProvider" = type opaque
%"class.std::__1::map.134" = type { %"class.std::__1::__tree.135" }
%"class.std::__1::__tree.135" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.143" = type { %"class.std::__1::__tree.144" }
%"class.std::__1::__tree.144" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.152" = type { %"class.std::__1::__tree.153" }
%"class.std::__1::__tree.153" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.154", %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.161" = type { %"class.std::__1::__tree.162" }
%"class.std::__1::__tree.162" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.163", %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory.172" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %class.SharingDeviceSource* }
%class.SharingDeviceSource = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %class.SharingHandlerRegistry* }
%class.SharingHandlerRegistry = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %class.SharingFCMHandler* }
%class.SharingFCMHandler = type opaque
%"class.syncer::SyncService" = type opaque
%"class.net::BackoffEntry" = type { i32 (...)**, %"class.base::TimeTicks", i32, %"struct.net::BackoffEntry::Policy"*, %"class.base::TickClock"* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.net::BackoffEntry::Policy" = type { i32, i32, double, double, i64, i64, i8 }
%"class.base::TickClock" = type opaque
%"class.std::__1::map.194" = type { %"class.std::__1::__tree.195" }
%"class.std::__1::__tree.195" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.196", %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory.203" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.18 }
%union.anon.18 = type { %"class.std::__1::basic_string" }
%"class.re2::StringPiece" = type { i8*, i64 }
%"class.re2::RE2::Arg" = type { i8*, i1 (i8*, i64, i8*)* }
%"class.re2::RE2" = type { %"class.std::__1::basic_string", %"class.re2::RE2::Options", %"class.re2::Regexp"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.re2::Regexp"*, %"class.re2::Prog"*, i32, i8, %"class.re2::Prog"*, %"class.std::__1::map.204"*, %"class.std::__1::map.205"*, %"struct.std::__1::once_flag", %"struct.std::__1::once_flag", %"struct.std::__1::once_flag" }
%"class.re2::RE2::Options" = type { i32, i8, i8, i8, i64, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.re2::Regexp" = type opaque
%"class.re2::Prog" = type opaque
%"class.std::__1::map.204" = type opaque
%"class.std::__1::map.205" = type opaque
%"struct.std::__1::once_flag" = type { i64 }

$_ZN3re23RE23Arg11DoParse3aryINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEbPKcmPv = comdat any

$_ZN3url15RawCanonOutputTIDsLi1024EED2Ev = comdat any

$_ZN3url15RawCanonOutputTIDsLi1024EED0Ev = comdat any

$_ZN3url15RawCanonOutputTIDsLi1024EE6ResizeEi = comdat any

$_ZTVN3url15RawCanonOutputTIDsLi1024EEE = comdat any

@_ZN3url10kTelSchemeE = external constant [0 x i8], align 1
@_ZN5prefs19kClickToCallEnabledE = external constant [0 x i8], align 1
@_ZTVN3url15RawCanonOutputTIDsLi1024EEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.url::RawCanonOutputT"*)* @_ZN3url15RawCanonOutputTIDsLi1024EED2Ev to i8*), i8* bitcast (void (%"class.url::RawCanonOutputT"*)* @_ZN3url15RawCanonOutputTIDsLi1024EED0Ev to i8*), i8* bitcast (void (%"class.url::RawCanonOutputT"*, i32)* @_ZN3url15RawCanonOutputTIDsLi1024EE6ResizeEi to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z28ShouldOfferClickToCallForURLPN7content14BrowserContextERK4GURL(%"class.content::BrowserContext"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %3 = bitcast %class.GURL* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url10kTelSchemeE, i64 0, i64 0)) #9
  %14 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url10kTelSchemeE, i64 0, i64 0), i64 %13) #9
  br i1 %14, label %15, label %19

15:                                               ; preds = %12
  %16 = tail call zeroext i1 @_Z23IsUrlSafeForClickToCallRK4GURL(%class.GURL* dereferenceable(120) %1)
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_120IsClickToCallEnabledEPN7content14BrowserContextE(%"class.content::BrowserContext"* %0)
  br label %19

19:                                               ; preds = %17, %15, %12, %2
  %20 = phi i1 [ false, %15 ], [ false, %12 ], [ false, %2 ], [ %18, %17 ]
  ret i1 %20
}

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z23IsUrlSafeForClickToCallRK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.url::RawCanonOutputT", align 8
  %4 = alloca %"class.std::__1::basic_string.207", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9, !noalias !2
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false) #9, !noalias !2
  call void @_ZNK4GURL10GetContentEv(%"class.std::__1::basic_string"* nonnull sret %2, %class.GURL* %0) #9, !noalias !2
  %13 = bitcast %"class.url::RawCanonOutputT"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2072, i8* nonnull %13) #9, !noalias !2
  %14 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %3, i64 0, i32 1
  %15 = bitcast [1024 x i16]* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 2048, i1 false) #9, !noalias !2
  %16 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %3, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %3, i64 0, i32 0, i32 1
  %18 = bitcast i16** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #9, !noalias !2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIDsLi1024EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8, !noalias !2
  %19 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %3, i64 0, i32 1, i64 0
  store i16* %19, i16** %17, align 8, !noalias !2
  %20 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %3, i64 0, i32 0, i32 2
  store i32 1024, i32* %20, align 8, !noalias !2
  %21 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1, !noalias !2
  %24 = icmp slt i8 %23, 0
  %25 = load i8*, i8** %11, align 8, !noalias !2
  %26 = load i64, i64* %12, align 8, !noalias !2
  %27 = zext i8 %23 to i64
  %28 = select i1 %24, i8* %25, i8* %9
  %29 = select i1 %24, i64 %26, i64 %27
  %30 = trunc i64 %29 to i32
  %31 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %3, i64 0, i32 0
  call void @_ZN3url24DecodeURLEscapeSequencesEPKciNS_13DecodeURLModeEPNS_12CanonOutputTIDsEE(i8* %28, i32 %30, i32 1, %"class.url::CanonOutputT"* nonnull %31) #9, !noalias !2
  %32 = bitcast %"class.std::__1::basic_string.207"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #9, !noalias !2
  %33 = load i16*, i16** %17, align 8, !noalias !2
  %34 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %3, i64 0, i32 0, i32 3
  %35 = load i32, i32* %34, align 4, !noalias !2
  %36 = sext i32 %35 to i64
  %37 = icmp slt i32 %35, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %1
  %39 = bitcast %"class.std::__1::basic_string.207"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %39) #10
  unreachable

40:                                               ; preds = %1
  %41 = icmp ult i32 %35, 11
  br i1 %41, label %55, label %42

42:                                               ; preds = %40
  %43 = add nuw nsw i64 %36, 8
  %44 = and i64 %43, -8
  %45 = icmp slt i64 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  call void @abort() #10
  unreachable

47:                                               ; preds = %42
  %48 = shl nsw i64 %44, 1
  %49 = call i8* @_Znwm(i64 %48) #11
  %50 = bitcast i8* %49 to i16*
  %51 = bitcast %"class.std::__1::basic_string.207"* %4 to i8**
  store i8* %49, i8** %51, align 8, !noalias !2
  %52 = or i64 %44, -9223372036854775808
  %53 = getelementptr inbounds %"class.std::__1::basic_string.207", %"class.std::__1::basic_string.207"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %52, i64* %53, align 8, !noalias !2
  %54 = getelementptr inbounds %"class.std::__1::basic_string.207", %"class.std::__1::basic_string.207"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %36, i64* %54, align 8, !noalias !2
  br label %61

55:                                               ; preds = %40
  %56 = trunc i32 %35 to i8
  %57 = bitcast %"class.std::__1::basic_string.207"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %57, i64 0, i32 1, i32 1
  store i8 %56, i8* %58, align 1, !noalias !2
  %59 = bitcast %"class.std::__1::basic_string.207"* %4 to i16*
  %60 = icmp eq i32 %35, 0
  br i1 %60, label %208, label %61

61:                                               ; preds = %55, %47
  %62 = phi i16* [ %50, %47 ], [ %59, %55 ]
  %63 = icmp ult i32 %35, 16
  br i1 %63, label %152, label %64

64:                                               ; preds = %61
  %65 = getelementptr i16, i16* %62, i64 %36
  %66 = getelementptr i16, i16* %33, i64 %36
  %67 = icmp ult i16* %62, %66
  %68 = icmp ult i16* %33, %65
  %69 = and i1 %67, %68
  br i1 %69, label %152, label %70

70:                                               ; preds = %64
  %71 = and i64 %36, -16
  %72 = sub nsw i64 %36, %71
  %73 = getelementptr i16, i16* %33, i64 %71
  %74 = getelementptr i16, i16* %62, i64 %71
  %75 = add nsw i64 %71, -16
  %76 = lshr exact i64 %75, 4
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 3
  %79 = icmp ult i64 %75, 48
  br i1 %79, label %131, label %80

80:                                               ; preds = %70
  %81 = sub nsw i64 %77, %78
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ 0, %80 ], [ %128, %82 ]
  %84 = phi i64 [ %81, %80 ], [ %129, %82 ]
  %85 = getelementptr i16, i16* %33, i64 %83
  %86 = getelementptr i16, i16* %62, i64 %83
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !5
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !5
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !8, !noalias !10
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !8, !noalias !10
  %95 = or i64 %83, 16
  %96 = getelementptr i16, i16* %33, i64 %95
  %97 = getelementptr i16, i16* %62, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !5
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !5
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !8, !noalias !10
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !8, !noalias !10
  %106 = or i64 %83, 32
  %107 = getelementptr i16, i16* %33, i64 %106
  %108 = getelementptr i16, i16* %62, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !5
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !5
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !8, !noalias !10
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !8, !noalias !10
  %117 = or i64 %83, 48
  %118 = getelementptr i16, i16* %33, i64 %117
  %119 = getelementptr i16, i16* %62, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !5
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !5
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !8, !noalias !10
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !8, !noalias !10
  %128 = add i64 %83, 64
  %129 = add i64 %84, -4
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %82, !llvm.loop !11

131:                                              ; preds = %82, %70
  %132 = phi i64 [ 0, %70 ], [ %128, %82 ]
  %133 = icmp eq i64 %78, 0
  br i1 %133, label %150, label %134

134:                                              ; preds = %131, %134
  %135 = phi i64 [ %147, %134 ], [ %132, %131 ]
  %136 = phi i64 [ %148, %134 ], [ %78, %131 ]
  %137 = getelementptr i16, i16* %33, i64 %135
  %138 = getelementptr i16, i16* %62, i64 %135
  %139 = bitcast i16* %137 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !5
  %141 = getelementptr i16, i16* %137, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !5
  %144 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %144, align 2, !alias.scope !8, !noalias !10
  %145 = getelementptr i16, i16* %138, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %146, align 2, !alias.scope !8, !noalias !10
  %147 = add i64 %135, 16
  %148 = add i64 %136, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %134, !llvm.loop !13

150:                                              ; preds = %134, %131
  %151 = icmp eq i64 %71, %36
  br i1 %151, label %205, label %152

152:                                              ; preds = %150, %64, %61
  %153 = phi i64 [ %36, %64 ], [ %36, %61 ], [ %72, %150 ]
  %154 = phi i16* [ %33, %64 ], [ %33, %61 ], [ %73, %150 ]
  %155 = phi i16* [ %62, %64 ], [ %62, %61 ], [ %74, %150 ]
  %156 = add nsw i64 %153, -1
  %157 = and i64 %153, 7
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %152, %159
  %160 = phi i64 [ %165, %159 ], [ %153, %152 ]
  %161 = phi i16* [ %167, %159 ], [ %154, %152 ]
  %162 = phi i16* [ %166, %159 ], [ %155, %152 ]
  %163 = phi i64 [ %168, %159 ], [ %157, %152 ]
  %164 = load i16, i16* %161, align 2
  store i16 %164, i16* %162, align 2, !noalias !2
  %165 = add i64 %160, -1
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = getelementptr inbounds i16, i16* %161, i64 1
  %168 = add i64 %163, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %159, !llvm.loop !15

170:                                              ; preds = %159, %152
  %171 = phi i64 [ %153, %152 ], [ %165, %159 ]
  %172 = phi i16* [ %154, %152 ], [ %167, %159 ]
  %173 = phi i16* [ %155, %152 ], [ %166, %159 ]
  %174 = icmp ult i64 %156, 7
  br i1 %174, label %205, label %175

175:                                              ; preds = %170, %175
  %176 = phi i64 [ %201, %175 ], [ %171, %170 ]
  %177 = phi i16* [ %203, %175 ], [ %172, %170 ]
  %178 = phi i16* [ %202, %175 ], [ %173, %170 ]
  %179 = load i16, i16* %177, align 2
  store i16 %179, i16* %178, align 2, !noalias !2
  %180 = getelementptr inbounds i16, i16* %178, i64 1
  %181 = getelementptr inbounds i16, i16* %177, i64 1
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2, !noalias !2
  %183 = getelementptr inbounds i16, i16* %178, i64 2
  %184 = getelementptr inbounds i16, i16* %177, i64 2
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2, !noalias !2
  %186 = getelementptr inbounds i16, i16* %178, i64 3
  %187 = getelementptr inbounds i16, i16* %177, i64 3
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2, !noalias !2
  %189 = getelementptr inbounds i16, i16* %178, i64 4
  %190 = getelementptr inbounds i16, i16* %177, i64 4
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2, !noalias !2
  %192 = getelementptr inbounds i16, i16* %178, i64 5
  %193 = getelementptr inbounds i16, i16* %177, i64 5
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2, !noalias !2
  %195 = getelementptr inbounds i16, i16* %178, i64 6
  %196 = getelementptr inbounds i16, i16* %177, i64 6
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2, !noalias !2
  %198 = getelementptr inbounds i16, i16* %178, i64 7
  %199 = getelementptr inbounds i16, i16* %177, i64 7
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2, !noalias !2
  %201 = add i64 %176, -8
  %202 = getelementptr inbounds i16, i16* %178, i64 8
  %203 = getelementptr inbounds i16, i16* %177, i64 8
  %204 = icmp eq i64 %201, 0
  br i1 %204, label %205, label %175, !llvm.loop !16

205:                                              ; preds = %170, %175, %150
  %206 = bitcast %"class.std::__1::basic_string.207"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %207 = bitcast %"class.std::__1::basic_string.207"* %4 to i16*
  br label %208

208:                                              ; preds = %205, %55
  %209 = phi i16* [ %207, %205 ], [ %59, %55 ]
  %210 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %206, %205 ], [ %57, %55 ]
  %211 = phi i16* [ %62, %205 ], [ %59, %55 ]
  %212 = getelementptr inbounds i16, i16* %211, i64 %36
  store i16 0, i16* %212, align 2, !noalias !2
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %210, i64 0, i32 1, i32 1
  %214 = load i8, i8* %213, align 1, !noalias !2
  %215 = icmp slt i8 %214, 0
  %216 = getelementptr inbounds %"class.std::__1::basic_string.207", %"class.std::__1::basic_string.207"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load i16*, i16** %216, align 8, !noalias !2
  %218 = select i1 %215, i16* %217, i16* %209
  %219 = getelementptr inbounds %"class.std::__1::basic_string.207", %"class.std::__1::basic_string.207"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %220 = load i64, i64* %219, align 8, !noalias !2
  %221 = zext i8 %214 to i64
  %222 = select i1 %215, i64 %220, i64 %221
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %5, i16* %218, i64 %222) #9
  %223 = load i8, i8* %213, align 1, !noalias !2
  %224 = icmp slt i8 %223, 0
  br i1 %224, label %225, label %228

225:                                              ; preds = %208
  %226 = bitcast %"class.std::__1::basic_string.207"* %4 to i8**
  %227 = load i8*, i8** %226, align 8, !noalias !2
  call void @_ZdlPv(i8* %227) #11
  br label %228

228:                                              ; preds = %225, %208
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #9, !noalias !2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIDsLi1024EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8, !noalias !2
  %229 = load i16*, i16** %17, align 8, !noalias !2
  %230 = icmp eq i16* %229, %19
  %231 = icmp eq i16* %229, null
  %232 = or i1 %230, %231
  br i1 %232, label %235, label %233

233:                                              ; preds = %228
  %234 = bitcast i16* %229 to i8*
  call void @_ZdaPv(i8* %234) #11
  br label %235

235:                                              ; preds = %233, %228
  call void @llvm.lifetime.end.p0i8(i64 2072, i8* nonnull %13) #9, !noalias !2
  %236 = load i8, i8* %22, align 1, !noalias !2
  %237 = icmp slt i8 %236, 0
  br i1 %237, label %238, label %240

238:                                              ; preds = %235
  %239 = load i8*, i8** %11, align 8, !noalias !2
  call void @_ZdlPv(i8* %239) #11
  br label %240

240:                                              ; preds = %235, %238
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9, !noalias !2
  %241 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %241, i64 0, i32 1, i32 0
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  %245 = load i64, i64* %8, align 8
  %246 = zext i8 %243 to i64
  %247 = select i1 %244, i64 %245, i64 %246
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %259, label %249

249:                                              ; preds = %240
  %250 = load i8*, i8** %7, align 8
  %251 = select i1 %244, i8* %250, i8* %6
  %252 = getelementptr inbounds i8, i8* %251, i64 %247
  br label %253

253:                                              ; preds = %249, %256
  %254 = phi i8* [ %257, %256 ], [ %251, %249 ]
  %255 = load i8, i8* %254, align 1
  switch i8 %255, label %256 [
    i8 35, label %259
    i8 42, label %259
    i8 37, label %259
  ]

256:                                              ; preds = %253
  %257 = getelementptr inbounds i8, i8* %254, i64 1
  %258 = icmp eq i8* %257, %252
  br i1 %258, label %259, label %253

259:                                              ; preds = %256, %253, %253, %253, %240
  %260 = phi i1 [ false, %240 ], [ false, %253 ], [ false, %253 ], [ false, %253 ], [ true, %256 ]
  br i1 %244, label %261, label %263

261:                                              ; preds = %259
  %262 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %262) #11
  br label %263

263:                                              ; preds = %259, %261
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret i1 %260
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_120IsClickToCallEnabledEPN7content14BrowserContextE(%"class.content::BrowserContext"*) unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = tail call %class.Profile* @_ZN7Profile18FromBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* %0) #9
  %4 = icmp eq %class.Profile* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.Profile* %3 to %class.PrefService* (%class.Profile*)***
  %7 = load %class.PrefService* (%class.Profile*)**, %class.PrefService* (%class.Profile*)*** %6, align 8
  %8 = getelementptr inbounds %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %7, i64 46
  %9 = load %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %8, align 8
  %10 = tail call %class.PrefService* %9(%class.Profile* nonnull %3) #9
  %11 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs19kClickToCallEnabledE, i64 0, i64 0)) #9
  %13 = icmp ugt i64 %12, -17
  br i1 %13, label %14, label %16

14:                                               ; preds = %5
  %15 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %15) #10
  unreachable

16:                                               ; preds = %5
  %17 = icmp ult i64 %12, 23
  br i1 %17, label %27, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %12, 16
  %20 = and i64 %19, -16
  %21 = tail call i8* @_Znwm(i64 %20) #11
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %21, i8** %22, align 8
  %23 = or i64 %20, -9223372036854775808
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %12, i64* %25, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %32

27:                                               ; preds = %16
  %28 = trunc i64 %12 to i8
  %29 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 %28, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %27, %18
  %33 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %29, %27 ], [ %26, %18 ]
  %34 = phi i8* [ %11, %27 ], [ %21, %18 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs19kClickToCallEnabledE, i64 0, i64 0), i64 %12, i1 false) #9
  br label %35

35:                                               ; preds = %32, %27
  %36 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %33, %32 ], [ %29, %27 ]
  %37 = phi i8* [ %34, %32 ], [ %11, %27 ]
  %38 = getelementptr inbounds i8, i8* %37, i64 %12
  store i8 0, i8* %38, align 1
  %39 = call zeroext i1 @_ZNK11PrefService10GetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #9
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #11
  br label %46

46:                                               ; preds = %43, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  br i1 %39, label %47, label %50

47:                                               ; preds = %46, %1
  %48 = call %class.SharingService* @_ZN21SharingServiceFactory20GetForBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* %0) #9
  %49 = icmp ne %class.SharingService* %48, null
  br label %50

50:                                               ; preds = %46, %47
  %51 = phi i1 [ %49, %47 ], [ false, %46 ]
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z32ExtractPhoneNumberForClickToCallPN7content14BrowserContextERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.absl::optional"* noalias nocapture sret, %"class.content::BrowserContext"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.re2::StringPiece", align 8
  %5 = alloca [1 x %"class.re2::RE2::Arg"*], align 8
  %6 = alloca %"class.re2::RE2::Arg", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string.207", align 8
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = icmp ugt i64 %17, 30
  br i1 %18, label %19, label %23

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast %union.anon.18* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #9
  br label %173

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %27 = select i1 %13, i8* %25, i8* %26
  %28 = icmp eq i64 %17, 0
  br i1 %28, label %95, label %29

29:                                               ; preds = %23
  %30 = add i64 %17, -1
  %31 = and i64 %17, 3
  %32 = icmp ult i64 %30, 3
  br i1 %32, label %69, label %33

33:                                               ; preds = %29
  %34 = sub i64 %17, %31
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ 0, %33 ], [ %65, %35 ]
  %37 = phi i8* [ %27, %33 ], [ %66, %35 ]
  %38 = phi i64 [ %34, %33 ], [ %67, %35 ]
  %39 = load i8, i8* %37, align 1
  %40 = sext i8 %39 to i32
  %41 = add nsw i32 %40, -48
  %42 = icmp ult i32 %41, 10
  %43 = zext i1 %42 to i64
  %44 = add nuw nsw i64 %36, %43
  %45 = getelementptr inbounds i8, i8* %37, i64 1
  %46 = load i8, i8* %45, align 1
  %47 = sext i8 %46 to i32
  %48 = add nsw i32 %47, -48
  %49 = icmp ult i32 %48, 10
  %50 = zext i1 %49 to i64
  %51 = add nuw nsw i64 %44, %50
  %52 = getelementptr inbounds i8, i8* %37, i64 2
  %53 = load i8, i8* %52, align 1
  %54 = sext i8 %53 to i32
  %55 = add nsw i32 %54, -48
  %56 = icmp ult i32 %55, 10
  %57 = zext i1 %56 to i64
  %58 = add nuw nsw i64 %51, %57
  %59 = getelementptr inbounds i8, i8* %37, i64 3
  %60 = load i8, i8* %59, align 1
  %61 = sext i8 %60 to i32
  %62 = add nsw i32 %61, -48
  %63 = icmp ult i32 %62, 10
  %64 = zext i1 %63 to i64
  %65 = add nuw nsw i64 %58, %64
  %66 = getelementptr inbounds i8, i8* %37, i64 4
  %67 = add i64 %38, -4
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %35

69:                                               ; preds = %35, %29
  %70 = phi i64 [ undef, %29 ], [ %65, %35 ]
  %71 = phi i64 [ 0, %29 ], [ %65, %35 ]
  %72 = phi i8* [ %27, %29 ], [ %66, %35 ]
  %73 = icmp eq i64 %31, 0
  br i1 %73, label %87, label %74

74:                                               ; preds = %69, %74
  %75 = phi i64 [ %83, %74 ], [ %71, %69 ]
  %76 = phi i8* [ %84, %74 ], [ %72, %69 ]
  %77 = phi i64 [ %85, %74 ], [ %31, %69 ]
  %78 = load i8, i8* %76, align 1
  %79 = sext i8 %78 to i32
  %80 = add nsw i32 %79, -48
  %81 = icmp ult i32 %80, 10
  %82 = zext i1 %81 to i64
  %83 = add nuw nsw i64 %75, %82
  %84 = getelementptr inbounds i8, i8* %76, i64 1
  %85 = add i64 %77, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %74, !llvm.loop !17

87:                                               ; preds = %74, %69
  %88 = phi i64 [ %70, %69 ], [ %83, %74 ]
  %89 = trunc i64 %88 to i32
  %90 = icmp sgt i32 %89, 15
  br i1 %90, label %91, label %95

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %92, align 8
  %93 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %94 = bitcast %union.anon.18* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #9
  br label %173

95:                                               ; preds = %23, %87
  %96 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_120IsClickToCallEnabledEPN7content14BrowserContextE(%"class.content::BrowserContext"* %1)
  br i1 %96, label %101, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %98, align 8
  %99 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %100 = bitcast %union.anon.18* %99 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 24, i1 false) #9
  br label %173

101:                                              ; preds = %95
  %102 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #9, !noalias !18
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 0, i64 24, i1 false) #9, !noalias !18
  %104 = tail call dereferenceable(200) %"class.re2::RE2"* @_Z19GetPhoneNumberRegexv() #9, !noalias !18
  %105 = load i8, i8* %11, align 1, !noalias !18
  %106 = icmp slt i8 %105, 0
  %107 = load i8*, i8** %24, align 8, !noalias !18
  %108 = select i1 %106, i8* %107, i8* %26
  %109 = ptrtoint i8* %108 to i64
  %110 = load i64, i64* %14, align 8, !noalias !18
  %111 = zext i8 %105 to i64
  %112 = select i1 %106, i64 %110, i64 %111
  %113 = ptrtoint %"class.std::__1::basic_string"* %7 to i64
  %114 = bitcast %"class.re2::RE2::Arg"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %114) #9, !noalias !18
  %115 = bitcast %"class.re2::RE2::Arg"* %6 to i64*
  store i64 %113, i64* %115, align 8, !noalias !18
  %116 = getelementptr inbounds %"class.re2::RE2::Arg", %"class.re2::RE2::Arg"* %6, i64 0, i32 1
  store i1 (i8*, i64, i8*)* @_ZN3re23RE23Arg11DoParse3aryINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEbPKcmPv, i1 (i8*, i64, i8*)** %116, align 8, !noalias !18
  %117 = bitcast %"class.re2::StringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #9, !noalias !18
  %118 = bitcast %"class.re2::StringPiece"* %4 to i64*
  store i64 %109, i64* %118, align 8, !noalias !18
  %119 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %4, i64 0, i32 1
  store i64 %112, i64* %119, align 8, !noalias !18
  %120 = bitcast [1 x %"class.re2::RE2::Arg"*]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #9, !noalias !18
  %121 = getelementptr inbounds [1 x %"class.re2::RE2::Arg"*], [1 x %"class.re2::RE2::Arg"*]* %5, i64 0, i64 0
  store %"class.re2::RE2::Arg"* %6, %"class.re2::RE2::Arg"** %121, align 8, !noalias !18
  %122 = call zeroext i1 @_ZN3re23RE213PartialMatchNERKNS_11StringPieceERKS0_PKPKNS0_3ArgEi(%"class.re2::StringPiece"* nonnull dereferenceable(16) %4, %"class.re2::RE2"* dereferenceable(200) %104, %"class.re2::RE2::Arg"** nonnull %121, i32 1) #9, !noalias !18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #9, !noalias !18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #9, !noalias !18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %114) #9, !noalias !18
  br i1 %122, label %128, label %123

123:                                              ; preds = %101
  %124 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %124, align 8, !alias.scope !18
  %125 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %126 = bitcast %union.anon.18* %125 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 24, i1 false) #9, !alias.scope !18
  %127 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %165

128:                                              ; preds = %101
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %130 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130) #9, !noalias !18
  %131 = bitcast %"class.std::__1::basic_string.207"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #9, !noalias !18
  %132 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  %134 = load i8, i8* %133, align 1, !noalias !18
  %135 = icmp slt i8 %134, 0
  %136 = load i8*, i8** %103, align 8, !noalias !18
  %137 = select i1 %135, i8* %136, i8* %102
  %138 = load i64, i64* %129, align 8, !noalias !18
  %139 = zext i8 %134 to i64
  %140 = select i1 %135, i64 %138, i64 %139
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.207"* nonnull sret %9, i8* %137, i64 %140) #9, !noalias !18
  %141 = bitcast %"class.std::__1::basic_string.207"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %141, i64 0, i32 1, i32 1
  %143 = load i8, i8* %142, align 1, !noalias !18
  %144 = icmp slt i8 %143, 0
  %145 = getelementptr inbounds %"class.std::__1::basic_string.207", %"class.std::__1::basic_string.207"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load i16*, i16** %145, align 8, !noalias !18
  %147 = bitcast %"class.std::__1::basic_string.207"* %9 to i16*
  %148 = select i1 %144, i16* %146, i16* %147
  %149 = getelementptr inbounds %"class.std::__1::basic_string.207", %"class.std::__1::basic_string.207"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %150 = load i64, i64* %149, align 8, !noalias !18
  %151 = zext i8 %143 to i64
  %152 = select i1 %144, i64 %150, i64 %151
  %153 = call { i16*, i64 } @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsE(i16* %148, i64 %152, i32 3) #9, !noalias !18
  %154 = extractvalue { i16*, i64 } %153, 0
  %155 = extractvalue { i16*, i64 } %153, 1
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %8, i16* %154, i64 %155) #9, !noalias !18
  %156 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %156, align 8, !alias.scope !18
  %157 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %158 = bitcast %"class.std::__1::basic_string"* %157 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* nonnull align 8 %130, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 0, i64 24, i1 false) #9, !noalias !18
  %159 = load i8, i8* %142, align 1, !noalias !18
  %160 = icmp slt i8 %159, 0
  br i1 %160, label %161, label %164

161:                                              ; preds = %128
  %162 = bitcast %"class.std::__1::basic_string.207"* %9 to i8**
  %163 = load i8*, i8** %162, align 8, !noalias !18
  call void @_ZdlPv(i8* %163) #11, !noalias !18
  br label %164

164:                                              ; preds = %161, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #9, !noalias !18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %130) #9, !noalias !18
  br label %165

165:                                              ; preds = %164, %123
  %166 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %132, %164 ], [ %127, %123 ]
  %167 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %166, i64 0, i32 1, i32 0
  %168 = load i8, i8* %167, align 1, !noalias !18
  %169 = icmp slt i8 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %165
  %171 = load i8*, i8** %103, align 8, !noalias !18
  call void @_ZdlPv(i8* %171) #11, !noalias !18
  br label %172

172:                                              ; preds = %165, %170
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #9, !noalias !18
  br label %173

173:                                              ; preds = %91, %97, %172, %19
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

declare %class.Profile* @_ZN7Profile18FromBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK11PrefService10GetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare %class.SharingService* @_ZN21SharingServiceFactory20GetForBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dereferenceable(200) %"class.re2::RE2"* @_Z19GetPhoneNumberRegexv() local_unnamed_addr #1

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #1

declare { i16*, i64 } @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsE(i16*, i64, i32) local_unnamed_addr #1

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.207"* sret, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN3re23RE213PartialMatchNERKNS_11StringPieceERKS0_PKPKNS0_3ArgEi(%"class.re2::StringPiece"* dereferenceable(16), %"class.re2::RE2"* dereferenceable(200), %"class.re2::RE2::Arg"**, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3re23RE23Arg11DoParse3aryINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEbPKcmPv(i8*, i64, i8*) #0 comdat align 2 {
  %4 = bitcast i8* %2 to %"class.std::__1::basic_string"*
  %5 = tail call zeroext i1 @_ZN3re212re2_internal5ParseINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbPKcmPT_(i8* %0, i64 %1, %"class.std::__1::basic_string"* %4) #9
  ret i1 %5
}

declare zeroext i1 @_ZN3re212re2_internal5ParseINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbPKcmPT_(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNK4GURL10GetContentEv(%"class.std::__1::basic_string"* sret, %class.GURL*) local_unnamed_addr #1

declare void @_ZN3url24DecodeURLEscapeSequencesEPKciNS_13DecodeURLModeEPNS_12CanonOutputTIDsEE(i8*, i32, i32, %"class.url::CanonOutputT"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIDsLi1024EED2Ev(%"class.url::RawCanonOutputT"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIDsLi1024EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %4 = load i16*, i16** %3, align 8
  %5 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %6 = icmp eq i16* %4, %5
  %7 = icmp eq i16* %4, null
  %8 = or i1 %6, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i16* %4 to i8*
  tail call void @_ZdaPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIDsLi1024EED0Ev(%"class.url::RawCanonOutputT"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIDsLi1024EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %4 = load i16*, i16** %3, align 8
  %5 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %6 = icmp eq i16* %4, %5
  %7 = icmp eq i16* %4, null
  %8 = or i1 %6, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i16* %4 to i8*
  tail call void @_ZdaPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = bitcast %"class.url::RawCanonOutputT"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIDsLi1024EE6ResizeEi(%"class.url::RawCanonOutputT"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 2)
  %5 = extractvalue { i64, i1 } %4, 1
  %6 = extractvalue { i64, i1 } %4, 0
  %7 = select i1 %5, i64 -1, i64 %6
  %8 = tail call i8* @_Znam(i64 %7) #11
  %9 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %10 = bitcast i16** %9 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, %1
  %15 = select i1 %14, i32 %13, i32 %1
  %16 = sext i32 %15 to i64
  %17 = shl nsw i64 %16, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* align 2 %11, i64 %17, i1 false)
  %18 = bitcast i8* %11 to i16*
  %19 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %20 = icmp eq i16* %19, %18
  %21 = icmp eq i8* %11, null
  %22 = or i1 %20, %21
  br i1 %22, label %24, label %23

23:                                               ; preds = %2
  tail call void @_ZdaPv(i8* nonnull %11) #11
  br label %24

24:                                               ; preds = %2, %23
  store i8* %8, i8** %10, align 8
  %25 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 2
  store i32 %1, i32* %25, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN12_GLOBAL__N_122GetUnescapedURLContentERK4GURL: argument 0"}
!4 = distinct !{!4, !"_ZN12_GLOBAL__N_122GetUnescapedURLContentERK4GURL"}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = !{!3, !6}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !14}
!16 = distinct !{!16, !12}
!17 = distinct !{!17, !14}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN12_GLOBAL__N_118ExtractPhoneNumberERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE: argument 0"}
!20 = distinct !{!20, !"_ZN12_GLOBAL__N_118ExtractPhoneNumberERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE"}
