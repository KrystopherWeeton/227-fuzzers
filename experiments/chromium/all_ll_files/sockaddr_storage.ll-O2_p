; ModuleID = '../../net/base/sockaddr_storage.cc'
source_filename = "../../net/base/sockaddr_storage.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.net::SockaddrStorage" = type { %struct.sockaddr_storage, i32, %struct.sockaddr* }
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%struct.sockaddr = type { i16, [14 x i8] }

@_ZN3net15SockaddrStorageC1Ev = hidden unnamed_addr alias void (%"struct.net::SockaddrStorage"*), void (%"struct.net::SockaddrStorage"*)* @_ZN3net15SockaddrStorageC2Ev
@_ZN3net15SockaddrStorageC1ERKS0_ = hidden unnamed_addr alias void (%"struct.net::SockaddrStorage"*, %"struct.net::SockaddrStorage"*), void (%"struct.net::SockaddrStorage"*, %"struct.net::SockaddrStorage"*)* @_ZN3net15SockaddrStorageC2ERKS0_

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net15SockaddrStorageC2Ev(%"struct.net::SockaddrStorage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %0, i64 0, i32 1
  store i32 128, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %0, i64 0, i32 2
  %4 = bitcast %struct.sockaddr** %3 to %"struct.net::SockaddrStorage"**
  store %"struct.net::SockaddrStorage"* %0, %"struct.net::SockaddrStorage"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15SockaddrStorageC2ERKS0_(%"struct.net::SockaddrStorage"*, %"struct.net::SockaddrStorage"* nocapture readonly dereferenceable(144)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %0, i64 0, i32 2
  %7 = bitcast %struct.sockaddr** %6 to %"struct.net::SockaddrStorage"**
  store %"struct.net::SockaddrStorage"* %0, %"struct.net::SockaddrStorage"** %7, align 8
  %8 = bitcast %"struct.net::SockaddrStorage"* %0 to i8*
  %9 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %1, i64 0, i32 2
  %10 = bitcast %struct.sockaddr** %9 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = zext i32 %5 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %8, i8* align 2 %11, i64 %12, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15SockaddrStorageaSERKS0_(%"struct.net::SockaddrStorage"* nocapture, %"struct.net::SockaddrStorage"* nocapture readonly dereferenceable(144)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %0, i64 0, i32 1
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %0, i64 0, i32 2
  %7 = bitcast %struct.sockaddr** %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %1, i64 0, i32 2
  %10 = bitcast %struct.sockaddr** %9 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = zext i32 %4 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %8, i8* align 2 %11, i64 %12, i1 false)
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
