; ModuleID = '../../third_party/webrtc/modules/audio_coding/neteq/comfort_noise.cc'
source_filename = "../../third_party/webrtc/modules/audio_coding/neteq/comfort_noise.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.webrtc::ComfortNoise" = type <{ i32, i8, [3 x i8], i64, %"class.webrtc::DecoderDatabase"*, %"class.webrtc::SyncBuffer"*, i32, [4 x i8] }>
%"class.webrtc::DecoderDatabase" = type { i32 (...)**, %"class.std::__1::map", i32, i32, %"class.std::__1::unique_ptr", %"class.rtc::scoped_refptr", %"class.absl::optional" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.webrtc::ComfortNoiseDecoder"* }
%"class.webrtc::ComfortNoiseDecoder" = type <{ i32, i32, i32, [13 x i16], [13 x i16], [13 x i16], [13 x i16], i16, i16, i16, [2 x i8] }>
%"class.rtc::scoped_refptr" = type { %"class.webrtc::AudioDecoderFactory"* }
%"class.webrtc::AudioDecoderFactory" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.webrtc::AudioCodecPairId" }
%"class.webrtc::AudioCodecPairId" = type { i64 }
%"class.webrtc::SyncBuffer" = type { %"class.webrtc::AudioMultiVector", i64, i32, i64 }
%"class.webrtc::AudioMultiVector" = type { i32 (...)**, %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.webrtc::AudioVector"**, %"class.webrtc::AudioVector"**, %"class.std::__1::__compressed_pair.13" }
%"class.webrtc::AudioVector" = type { i32 (...)**, %"class.std::__1::unique_ptr.7", i64, i64, i64 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i16* }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.webrtc::AudioVector"** }
%"struct.webrtc::Packet" = type { i32, i16, i8, %"class.rtc::BufferT", %"struct.webrtc::Packet::Priority", %"class.webrtc::RtpPacketInfo", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.52" }
%"class.rtc::BufferT" = type { i64, i64, %"class.std::__1::unique_ptr.18" }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i8* }
%"struct.webrtc::Packet::Priority" = type { i32, i32 }
%"class.webrtc::RtpPacketInfo" = type { i32, %"class.std::__1::vector.24", i32, %"class.absl::optional.31", %"class.absl::optional.36", %"class.absl::optional.41", %"class.webrtc::Timestamp" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { i32*, i32*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i32* }
%"class.absl::optional.31" = type { %"class.absl::optional_internal::optional_data.32" }
%"class.absl::optional_internal::optional_data.32" = type { %"class.absl::optional_internal::optional_data_base.33" }
%"class.absl::optional_internal::optional_data_base.33" = type { %"class.absl::optional_internal::optional_data_dtor_base.34" }
%"class.absl::optional_internal::optional_data_dtor_base.34" = type { i8, %union.anon.35 }
%union.anon.35 = type { i8 }
%"class.absl::optional.36" = type { %"class.absl::optional_internal::optional_data.37" }
%"class.absl::optional_internal::optional_data.37" = type { %"class.absl::optional_internal::optional_data_base.38" }
%"class.absl::optional_internal::optional_data_base.38" = type { %"class.absl::optional_internal::optional_data_dtor_base.39" }
%"class.absl::optional_internal::optional_data_dtor_base.39" = type { i8, %union.anon.40 }
%union.anon.40 = type { %"struct.webrtc::AbsoluteCaptureTime" }
%"struct.webrtc::AbsoluteCaptureTime" = type { i64, %"class.absl::optional.41" }
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, %union.anon.45 }
%union.anon.45 = type { i64 }
%"class.webrtc::Timestamp" = type { %"class.webrtc::rtc_units_impl::UnitBase" }
%"class.webrtc::rtc_units_impl::UnitBase" = type { i64 }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.webrtc::TickTimer::Stopwatch"* }
%"class.webrtc::TickTimer::Stopwatch" = type { %"class.webrtc::TickTimer"*, i64 }
%"class.webrtc::TickTimer" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.webrtc::AudioDecoder::EncodedAudioFrame"* }
%"class.webrtc::AudioDecoder::EncodedAudioFrame" = type { i32 (...)** }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.60 }
%union.anon.60 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [69 x i8] c"../../third_party/webrtc/modules/audio_coding/neteq/comfort_noise.cc\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"No multi-channel support\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"Unknwown payload type\00", align 1
@.str.3 = private unnamed_addr constant [65 x i8] c"ComfortNoiseDecoder::Genererate failed to generate comfort noise\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc12ComfortNoise5ResetEv(%"class.webrtc::ComfortNoise"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ComfortNoise", %"class.webrtc::ComfortNoise"* %0, i64 0, i32 1
  store i8 1, i8* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc12ComfortNoise16UpdateParametersERKNS_6PacketE(%"class.webrtc::ComfortNoise"* nocapture readonly, %"struct.webrtc::Packet"* nocapture readonly dereferenceable(152)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::ComfortNoise", %"class.webrtc::ComfortNoise"* %0, i64 0, i32 4
  %4 = load %"class.webrtc::DecoderDatabase"*, %"class.webrtc::DecoderDatabase"** %3, align 8
  %5 = getelementptr inbounds %"struct.webrtc::Packet", %"struct.webrtc::Packet"* %1, i64 0, i32 2
  %6 = load i8, i8* %5, align 2
  %7 = bitcast %"class.webrtc::DecoderDatabase"* %4 to i32 (%"class.webrtc::DecoderDatabase"*, i8)***
  %8 = load i32 (%"class.webrtc::DecoderDatabase"*, i8)**, i32 (%"class.webrtc::DecoderDatabase"*, i8)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.webrtc::DecoderDatabase"*, i8)*, i32 (%"class.webrtc::DecoderDatabase"*, i8)** %8, i64 12
  %10 = load i32 (%"class.webrtc::DecoderDatabase"*, i8)*, i32 (%"class.webrtc::DecoderDatabase"*, i8)** %9, align 8
  %11 = tail call i32 %10(%"class.webrtc::DecoderDatabase"* %4, i8 zeroext %6) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %26

13:                                               ; preds = %2
  %14 = load %"class.webrtc::DecoderDatabase"*, %"class.webrtc::DecoderDatabase"** %3, align 8
  %15 = bitcast %"class.webrtc::DecoderDatabase"* %14 to %"class.webrtc::ComfortNoiseDecoder"* (%"class.webrtc::DecoderDatabase"*)***
  %16 = load %"class.webrtc::ComfortNoiseDecoder"* (%"class.webrtc::DecoderDatabase"*)**, %"class.webrtc::ComfortNoiseDecoder"* (%"class.webrtc::DecoderDatabase"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.webrtc::ComfortNoiseDecoder"* (%"class.webrtc::DecoderDatabase"*)*, %"class.webrtc::ComfortNoiseDecoder"* (%"class.webrtc::DecoderDatabase"*)** %16, i64 13
  %18 = load %"class.webrtc::ComfortNoiseDecoder"* (%"class.webrtc::DecoderDatabase"*)*, %"class.webrtc::ComfortNoiseDecoder"* (%"class.webrtc::DecoderDatabase"*)** %17, align 8
  %19 = tail call %"class.webrtc::ComfortNoiseDecoder"* %18(%"class.webrtc::DecoderDatabase"* %14) #8
  %20 = getelementptr inbounds %"struct.webrtc::Packet", %"struct.webrtc::Packet"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"struct.webrtc::Packet", %"struct.webrtc::Packet"* %1, i64 0, i32 3, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  %25 = select i1 %24, i8* null, i8* %21
  tail call void @_ZN6webrtc19ComfortNoiseDecoder9UpdateSidEN3rtc9ArrayViewIKhLln4711EEE(%"class.webrtc::ComfortNoiseDecoder"* %19, i8* %25, i64 %23) #8
  br label %26

26:                                               ; preds = %2, %13
  %27 = phi i32 [ 0, %13 ], [ 1, %2 ]
  ret i32 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN6webrtc19ComfortNoiseDecoder9UpdateSidEN3rtc9ArrayViewIKhLln4711EEE(%"class.webrtc::ComfortNoiseDecoder"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc12ComfortNoise8GenerateEmPNS_16AudioMultiVectorE(%"class.webrtc::ComfortNoise"* nocapture, i64, %"class.webrtc::AudioMultiVector"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %5 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %6 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %7 = bitcast %"class.webrtc::AudioMultiVector"* %2 to i64 (%"class.webrtc::AudioMultiVector"*)***
  %8 = load i64 (%"class.webrtc::AudioMultiVector"*)**, i64 (%"class.webrtc::AudioMultiVector"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.webrtc::AudioMultiVector"*)*, i64 (%"class.webrtc::AudioMultiVector"*)** %8, i64 14
  %10 = load i64 (%"class.webrtc::AudioMultiVector"*)*, i64 (%"class.webrtc::AudioMultiVector"*)** %9, align 8
  %11 = tail call i64 %10(%"class.webrtc::AudioMultiVector"* %2) #8
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %18, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.rtc::DiagnosticLogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %14) #8
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %4, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i32 52, i32 1, i32 0, i32 0) #8
  %15 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %4, i64 0, i32 7
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %15 to %"class.std::__1::basic_ostream"*
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i64 24) #8
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %14) #8
  br label %164

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.webrtc::ComfortNoise", %"class.webrtc::ComfortNoise"* %0, i64 0, i32 1
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.webrtc::ComfortNoise", %"class.webrtc::ComfortNoise"* %0, i64 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, %1
  br label %26

26:                                               ; preds = %18, %22
  %27 = phi i64 [ %25, %22 ], [ %1, %18 ]
  %28 = phi i1 [ true, %22 ], [ false, %18 ]
  %29 = bitcast %"class.webrtc::AudioMultiVector"* %2 to void (%"class.webrtc::AudioMultiVector"*, i64)***
  %30 = load void (%"class.webrtc::AudioMultiVector"*, i64)**, void (%"class.webrtc::AudioMultiVector"*, i64)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.webrtc::AudioMultiVector"*, i64)*, void (%"class.webrtc::AudioMultiVector"*, i64)** %30, i64 16
  %32 = load void (%"class.webrtc::AudioMultiVector"*, i64)*, void (%"class.webrtc::AudioMultiVector"*, i64)** %31, align 8
  tail call void %32(%"class.webrtc::AudioMultiVector"* %2, i64 %27) #8
  %33 = getelementptr inbounds %"class.webrtc::ComfortNoise", %"class.webrtc::ComfortNoise"* %0, i64 0, i32 4
  %34 = load %"class.webrtc::DecoderDatabase"*, %"class.webrtc::DecoderDatabase"** %33, align 8
  %35 = bitcast %"class.webrtc::DecoderDatabase"* %34 to %"class.webrtc::ComfortNoiseDecoder"* (%"class.webrtc::DecoderDatabase"*)***
  %36 = load %"class.webrtc::ComfortNoiseDecoder"* (%"class.webrtc::DecoderDatabase"*)**, %"class.webrtc::ComfortNoiseDecoder"* (%"class.webrtc::DecoderDatabase"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.webrtc::ComfortNoiseDecoder"* (%"class.webrtc::DecoderDatabase"*)*, %"class.webrtc::ComfortNoiseDecoder"* (%"class.webrtc::DecoderDatabase"*)** %36, i64 13
  %38 = load %"class.webrtc::ComfortNoiseDecoder"* (%"class.webrtc::DecoderDatabase"*)*, %"class.webrtc::ComfortNoiseDecoder"* (%"class.webrtc::DecoderDatabase"*)** %37, align 8
  %39 = tail call %"class.webrtc::ComfortNoiseDecoder"* %38(%"class.webrtc::DecoderDatabase"* %34) #8
  %40 = icmp eq %"class.webrtc::ComfortNoiseDecoder"* %39, null
  br i1 %40, label %41, label %46

41:                                               ; preds = %26
  %42 = bitcast %"class.rtc::DiagnosticLogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %42) #8
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %5, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i32 67, i32 1, i32 0, i32 0) #8
  %43 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %5, i64 0, i32 7
  %44 = bitcast %"class.std::__1::basic_ostringstream"* %43 to %"class.std::__1::basic_ostream"*
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %44, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i64 21) #8
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %42) #8
  br label %164

46:                                               ; preds = %26
  %47 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %27, i64 2)
  %48 = extractvalue { i64, i1 } %47, 1
  %49 = extractvalue { i64, i1 } %47, 0
  %50 = select i1 %48, i64 -1, i64 %49
  %51 = tail call i8* @_Znam(i64 %50) #9
  %52 = bitcast i8* %51 to i16*
  %53 = icmp eq i64 %27, 0
  %54 = select i1 %53, i16* null, i16* %52
  %55 = tail call zeroext i1 @_ZN6webrtc19ComfortNoiseDecoder8GenerateEN3rtc9ArrayViewIsLln4711EEEb(%"class.webrtc::ComfortNoiseDecoder"* nonnull %39, i16* %54, i64 %27, i1 zeroext %28) #8
  br i1 %55, label %64, label %56

56:                                               ; preds = %46
  %57 = load void (%"class.webrtc::AudioMultiVector"*, i64)**, void (%"class.webrtc::AudioMultiVector"*, i64)*** %29, align 8
  %58 = getelementptr inbounds void (%"class.webrtc::AudioMultiVector"*, i64)*, void (%"class.webrtc::AudioMultiVector"*, i64)** %57, i64 3
  %59 = load void (%"class.webrtc::AudioMultiVector"*, i64)*, void (%"class.webrtc::AudioMultiVector"*, i64)** %58, align 8
  tail call void %59(%"class.webrtc::AudioMultiVector"* %2, i64 %1) #8
  %60 = bitcast %"class.rtc::DiagnosticLogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %60) #8
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %6, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i32 76, i32 1, i32 0, i32 0) #8
  %61 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %6, i64 0, i32 7
  %62 = bitcast %"class.std::__1::basic_ostringstream"* %61 to %"class.std::__1::basic_ostream"*
  %63 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %62, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.3, i64 0, i64 0), i64 64) #8
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %60) #8
  br label %162

64:                                               ; preds = %46
  %65 = tail call dereferenceable(40) %"class.webrtc::AudioVector"* @_ZN6webrtc16AudioMultiVectorixEm(%"class.webrtc::AudioMultiVector"* %2, i64 0) #8
  %66 = bitcast %"class.webrtc::AudioVector"* %65 to void (%"class.webrtc::AudioVector"*, i16*, i64, i64)***
  %67 = load void (%"class.webrtc::AudioVector"*, i16*, i64, i64)**, void (%"class.webrtc::AudioVector"*, i16*, i64, i64)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i16*, i64, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64, i64)** %67, i64 16
  %69 = load void (%"class.webrtc::AudioVector"*, i16*, i64, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64, i64)** %68, align 8
  tail call void %69(%"class.webrtc::AudioVector"* %65, i16* nonnull %52, i64 %27, i64 0) #8
  %70 = load i8, i8* %19, align 4, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %161, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.webrtc::ComfortNoise", %"class.webrtc::ComfortNoise"* %0, i64 0, i32 0
  %74 = load i32, i32* %73, align 8
  switch i32 %74, label %77 [
    i32 8000, label %78
    i32 16000, label %75
    i32 32000, label %76
  ]

75:                                               ; preds = %72
  br label %78

76:                                               ; preds = %72
  br label %78

77:                                               ; preds = %72
  br label %78

78:                                               ; preds = %72, %75, %77, %76
  %79 = phi i32 [ 29789, %75 ], [ 31208, %76 ], [ 31711, %77 ], [ 27307, %72 ]
  %80 = phi i32 [ -2979, %75 ], [ -1560, %76 ], [ -1057, %77 ], [ -5461, %72 ]
  %81 = phi i32 [ 2979, %75 ], [ 1560, %76 ], [ 1057, %77 ], [ 5461, %72 ]
  %82 = getelementptr inbounds %"class.webrtc::ComfortNoise", %"class.webrtc::ComfortNoise"* %0, i64 0, i32 5
  %83 = bitcast %"class.webrtc::SyncBuffer"** %82 to %"class.webrtc::AudioMultiVector"**
  %84 = load %"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"** %83, align 8
  %85 = bitcast %"class.webrtc::AudioMultiVector"* %84 to i64 (%"class.webrtc::AudioMultiVector"*)***
  %86 = load i64 (%"class.webrtc::AudioMultiVector"*)**, i64 (%"class.webrtc::AudioMultiVector"*)*** %85, align 8
  %87 = getelementptr inbounds i64 (%"class.webrtc::AudioMultiVector"*)*, i64 (%"class.webrtc::AudioMultiVector"*)** %86, i64 15
  %88 = load i64 (%"class.webrtc::AudioMultiVector"*)*, i64 (%"class.webrtc::AudioMultiVector"*)** %87, align 8
  %89 = tail call i64 %88(%"class.webrtc::AudioMultiVector"* %84) #8
  %90 = getelementptr inbounds %"class.webrtc::ComfortNoise", %"class.webrtc::ComfortNoise"* %0, i64 0, i32 3
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %89, %91
  %93 = icmp eq i64 %91, 0
  br i1 %93, label %94, label %99

94:                                               ; preds = %99, %78
  %95 = phi i64 [ 0, %78 ], [ %159, %99 ]
  %96 = load void (%"class.webrtc::AudioMultiVector"*, i64)**, void (%"class.webrtc::AudioMultiVector"*, i64)*** %29, align 8
  %97 = getelementptr inbounds void (%"class.webrtc::AudioMultiVector"*, i64)*, void (%"class.webrtc::AudioMultiVector"*, i64)** %96, i64 7
  %98 = load void (%"class.webrtc::AudioMultiVector"*, i64)*, void (%"class.webrtc::AudioMultiVector"*, i64)** %97, align 8
  tail call void %98(%"class.webrtc::AudioMultiVector"* %2, i64 %95) #8
  br label %161

99:                                               ; preds = %78, %99
  %100 = phi i64 [ %158, %99 ], [ 0, %78 ]
  %101 = phi i32 [ %157, %99 ], [ %81, %78 ]
  %102 = phi i32 [ %156, %99 ], [ %79, %78 ]
  %103 = load %"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"** %83, align 8
  %104 = tail call dereferenceable(40) %"class.webrtc::AudioVector"* @_ZN6webrtc16AudioMultiVectorixEm(%"class.webrtc::AudioMultiVector"* %103, i64 0) #8
  %105 = add i64 %100, %92
  %106 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %104, i64 0, i32 3
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %104, i64 0, i32 2
  %109 = load i64, i64* %108, align 8
  %110 = add i64 %107, %105
  %111 = icmp ult i64 %110, %109
  %112 = select i1 %111, i64 0, i64 %109
  %113 = sub i64 %110, %112
  %114 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %104, i64 0, i32 1, i32 0, i32 0, i32 0
  %115 = load i16*, i16** %114, align 8
  %116 = getelementptr inbounds i16, i16* %115, i64 %113
  %117 = load i16, i16* %116, align 2
  %118 = sext i16 %117 to i32
  %119 = shl i32 %102, 16
  %120 = ashr exact i32 %119, 16
  %121 = mul nsw i32 %120, %118
  %122 = tail call dereferenceable(40) %"class.webrtc::AudioVector"* @_ZN6webrtc16AudioMultiVectorixEm(%"class.webrtc::AudioMultiVector"* %2, i64 0) #8
  %123 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %122, i64 0, i32 3
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %122, i64 0, i32 2
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %124, %100
  %128 = icmp ult i64 %127, %126
  %129 = select i1 %128, i64 0, i64 %126
  %130 = sub i64 %127, %129
  %131 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %122, i64 0, i32 1, i32 0, i32 0, i32 0
  %132 = load i16*, i16** %131, align 8
  %133 = getelementptr inbounds i16, i16* %132, i64 %130
  %134 = load i16, i16* %133, align 2
  %135 = sext i16 %134 to i32
  %136 = shl i32 %101, 16
  %137 = ashr exact i32 %136, 16
  %138 = mul nsw i32 %137, %135
  %139 = add nsw i32 %121, 16384
  %140 = add i32 %139, %138
  %141 = lshr i32 %140, 15
  %142 = trunc i32 %141 to i16
  %143 = load %"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"** %83, align 8
  %144 = tail call dereferenceable(40) %"class.webrtc::AudioVector"* @_ZN6webrtc16AudioMultiVectorixEm(%"class.webrtc::AudioMultiVector"* %143, i64 0) #8
  %145 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %144, i64 0, i32 3
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %144, i64 0, i32 2
  %148 = load i64, i64* %147, align 8
  %149 = add i64 %146, %105
  %150 = icmp ult i64 %149, %148
  %151 = select i1 %150, i64 0, i64 %148
  %152 = sub i64 %149, %151
  %153 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %144, i64 0, i32 1, i32 0, i32 0, i32 0
  %154 = load i16*, i16** %153, align 8
  %155 = getelementptr inbounds i16, i16* %154, i64 %152
  store i16 %142, i16* %155, align 2
  %156 = add nsw i32 %120, %80
  %157 = add nsw i32 %137, %81
  %158 = add nuw i64 %100, 1
  %159 = load i64, i64* %90, align 8
  %160 = icmp ult i64 %158, %159
  br i1 %160, label %99, label %94

161:                                              ; preds = %64, %94
  store i8 0, i8* %19, align 4
  br label %162

162:                                              ; preds = %161, %56
  %163 = phi i32 [ 2, %56 ], [ 0, %161 ]
  call void @_ZdaPv(i8* nonnull %51) #9
  br label %164

164:                                              ; preds = %41, %162, %13
  %165 = phi i32 [ 3, %13 ], [ %163, %162 ], [ 1, %41 ]
  ret i32 %165
}

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

declare zeroext i1 @_ZN6webrtc19ComfortNoiseDecoder8GenerateEN3rtc9ArrayViewIsLln4711EEEb(%"class.webrtc::ComfortNoiseDecoder"*, i16*, i64, i1 zeroext) local_unnamed_addr #3

declare dereferenceable(40) %"class.webrtc::AudioVector"* @_ZN6webrtc16AudioMultiVectorixEm(%"class.webrtc::AudioMultiVector"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #8
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #8
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #8
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #1 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #8
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #9
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #8
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #8
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #9
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #8
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
