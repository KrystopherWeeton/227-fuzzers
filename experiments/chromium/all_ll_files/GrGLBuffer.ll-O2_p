; ModuleID = '../../third_party/skia/src/gpu/gl/GrGLBuffer.cpp'
source_filename = "../../third_party/skia/src/gpu/gl/GrGLBuffer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrGLBuffer = type <{ %class.GrGpuBuffer, i32, i32, i32, [4 x i8], i64, i8, [7 x i8] }>
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.71, i8* }
%class.sk_sp.71 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp, %"class.std::__1::unique_ptr", i32, %class.GrDirectContext*, %class.SkSTArray, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.1, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.1 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %class.sk_sp.67, %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.110", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.129" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.4", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.3 }
%class.sk_sp.3 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.14, %class.SkTArray.23, %class.SkTArray.25, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.7"*, i64 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.25, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.26 }
%class.sk_sp.26 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.14 = type { %class.SkTHashTable.15 }
%class.SkTHashTable.15 = type { i32, i32, %class.SkAutoTArray.16 }
%class.SkAutoTArray.16 = type { %"class.std::__1::unique_ptr.17" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.353" }
%"struct.std::__1::pair.353" = type { i32, %class.SkTArray.354* }
%class.SkTArray.354 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.23 = type { %"class.std::__1::unique_ptr.24"*, i64 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.354, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.25 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.39 }
%class.SkFibBlockSizes.39 = type { i32 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.67 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.80, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.98, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.72 }
%class.SkTHashTable.72 = type { i32, i32, %class.SkAutoTArray.73 }
%class.SkAutoTArray.73 = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.80 = type { %class.SkTHashTable.81 }
%class.SkTHashTable.81 = type { i32, i32, %class.SkAutoTArray.82 }
%class.SkAutoTArray.82 = type { %"class.std::__1::unique_ptr.83" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.89, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.89 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.90" }
%"struct.std::__1::atomic.90" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__atomic_base.92" }
%"struct.std::__1::__atomic_base.92" = type { %"struct.std::__1::__cxx_atomic_impl.93" }
%"struct.std::__1::__cxx_atomic_impl.93" = type { %"struct.std::__1::__cxx_atomic_base_impl.94" }
%"struct.std::__1::__cxx_atomic_base_impl.94" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.95, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.95 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.96 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.96 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.97, void (i8*)*, i8* }
%class.SkNVRefCnt.97 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap.98 = type { %class.SkTHashTable.99 }
%class.SkTHashTable.99 = type { i32, i32, %class.SkAutoTArray.100 }
%class.SkAutoTArray.100 = type { %"class.std::__1::unique_ptr.101" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp, %class.sk_sp.113, %class.sk_sp.113 }
%class.sk_sp.113 = type { %class.GrGpuBuffer* }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.135 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.135 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.GrBuffer = type { i32 (...)** }
%class.GrGLGpu = type <{ %class.GrGpu, %"class.std::__1::unique_ptr.136", %class.sk_sp.264, i32, i32, %class.sk_sp.273, i32, i32, i32, %struct.anon, %class.anon, %struct.GrNativeRect, %"class.GrGLGpu::HWVertexArrayState", i8, [3 x i8], [6 x %struct.anon.307], %struct.anon.308, i32, i32, i32, %class.GrStencilSettings, i32, i32, i32, %"class.GrGpuResource::UniqueID", i8, [3 x i8], i32, [4 x i8], %class.SkAutoTArray.309, [4 x float], i32, [3 x %struct.anon.316], [4 x i8], %class.sk_sp.317, [4 x %struct.anon.318], %class.sk_sp.317, i8, [7 x i8], i64, %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.325", %class.GrFinishCallbacks, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %class.GrGLContext* }
%class.GrGLContext = type { %class.GrGLContextInfo }
%class.GrGLContextInfo = type { i32 (...)**, %class.sk_sp.139, %struct.GrGLDriverInfo, i32, %class.sk_sp.246 }
%class.sk_sp.139 = type { %struct.GrGLInterface* }
%struct.GrGLInterface = type { %class.SkRefCnt.base, %union.anon.140, %class.GrGLExtensions, %"struct.GrGLInterface::Functions" }
%union.anon.140 = type { i32 }
%class.GrGLExtensions = type { i8, %class.SkTArray.25 }
%"struct.GrGLInterface::Functions" = type { %class.GrGLFunction, %class.GrGLFunction.141, %class.GrGLFunction.141, %class.GrGLFunction.142, %class.GrGLFunction.141, %class.GrGLFunction.142, %class.GrGLFunction.143, %class.GrGLFunction.141, %class.GrGLFunction.141, %class.GrGLFunction.141, %class.GrGLFunction.141, %class.GrGLFunction, %class.GrGLFunction.144, %class.GrGLFunction.145, %class.GrGLFunction, %class.GrGLFunction.141, %class.GrGLFunction.146, %class.GrGLFunction.147, %class.GrGLFunction.148, %class.GrGLFunction.149, %class.GrGLFunction, %class.GrGLFunction.145, %class.GrGLFunction.150, %class.GrGLFunction.151, %class.GrGLFunction.152, %class.GrGLFunction.153, %class.GrGLFunction, %class.GrGLFunction.154, %class.GrGLFunction.155, %class.GrGLFunction.156, %class.GrGLFunction.157, %class.GrGLFunction.149, %class.GrGLFunction, %class.GrGLFunction.158, %class.GrGLFunction.158, %class.GrGLFunction.158, %class.GrGLFunction, %class.GrGLFunction.158, %class.GrGLFunction.158, %class.GrGLFunction.158, %class.GrGLFunction, %class.GrGLFunction.158, %class.GrGLFunction.158, %class.GrGLFunction.159, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction.160, %class.GrGLFunction.161, %class.GrGLFunction.162, %class.GrGLFunction, %class.GrGLFunction.158, %class.GrGLFunction.163, %class.GrGLFunction.164, %class.GrGLFunction.165, %class.GrGLFunction.166, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction.144, %class.GrGLFunction, %class.GrGLFunction.144, %class.GrGLFunction.167, %class.GrGLFunction.168, %class.GrGLFunction.169, %class.GrGLFunction.170, %class.GrGLFunction, %class.GrGLFunction.171, %class.GrGLFunction.171, %class.GrGLFunction.171, %class.GrGLFunction, %class.GrGLFunction.171, %class.GrGLFunction.171, %class.GrGLFunction.171, %class.GrGLFunction.171, %class.GrGLFunction.171, %class.GrGLFunction.172, %class.GrGLFunction.157, %class.GrGLFunction.173, %class.GrGLFunction.174, %class.GrGLFunction.175, %class.GrGLFunction.176, %class.GrGLFunction.177, %class.GrGLFunction.172, %class.GrGLFunction.178, %class.GrGLFunction.172, %class.GrGLFunction.179, %class.GrGLFunction.180, %class.GrGLFunction.172, %class.GrGLFunction.172, %class.GrGLFunction.177, %class.GrGLFunction.172, %class.GrGLFunction.181, %class.GrGLFunction.182, %class.GrGLFunction.183, %class.GrGLFunction.184, %class.GrGLFunction.185, %class.GrGLFunction.186, %class.GrGLFunction, %class.GrGLFunction.167, %class.GrGLFunction.187, %class.GrGLFunction.188, %class.GrGLFunction.189, %class.GrGLFunction.156, %class.GrGLFunction.190, %class.GrGLFunction.191, %class.GrGLFunction, %class.GrGLFunction.192, %class.GrGLFunction.193, %class.GrGLFunction.194, %class.GrGLFunction.195, %class.GrGLFunction.195, %class.GrGLFunction.196, %class.GrGLFunction.197, %class.GrGLFunction.198, %class.GrGLFunction.199, %class.GrGLFunction.200, %class.GrGLFunction.201, %class.GrGLFunction.202, %class.GrGLFunction.203, %class.GrGLFunction.189, %class.GrGLFunction.189, %class.GrGLFunction.141, %class.GrGLFunction.144, %class.GrGLFunction.186, %class.GrGLFunction.141, %class.GrGLFunction, %class.GrGLFunction.204, %class.GrGLFunction.205, %class.GrGLFunction.206, %class.GrGLFunction.206, %class.GrGLFunction.206, %class.GrGLFunction.207, %class.GrGLFunction.144, %class.GrGLFunction.193, %class.GrGLFunction.208, %class.GrGLFunction.209, %class.GrGLFunction.141, %class.GrGLFunction.210, %class.GrGLFunction.211, %class.GrGLFunction.212, %class.GrGLFunction, %class.GrGLFunction.141, %class.GrGLFunction.213, %class.GrGLFunction.168, %class.GrGLFunction.190, %class.GrGLFunction.213, %class.GrGLFunction.214, %class.GrGLFunction.215, %class.GrGLFunction.216, %class.GrGLFunction.217, %class.GrGLFunction.193, %class.GrGLFunction.208, %class.GrGLFunction.215, %class.GrGLFunction.206, %class.GrGLFunction.144, %class.GrGLFunction.187, %class.GrGLFunction.218, %class.GrGLFunction.219, %class.GrGLFunction.220, %class.GrGLFunction.221, %class.GrGLFunction.222, %class.GrGLFunction.223, %class.GrGLFunction.220, %class.GrGLFunction.221, %class.GrGLFunction.224, %class.GrGLFunction.209, %class.GrGLFunction.220, %class.GrGLFunction.221, %class.GrGLFunction.225, %class.GrGLFunction.226, %class.GrGLFunction.220, %class.GrGLFunction.221, %class.GrGLFunction.227, %class.GrGLFunction.227, %class.GrGLFunction.227, %class.GrGLFunction.190, %class.GrGLFunction.228, %class.GrGLFunction.228, %class.GrGLFunction, %class.GrGLFunction.229, %class.GrGLFunction.230, %class.GrGLFunction.230, %class.GrGLFunction.230, %class.GrGLFunction.141, %class.GrGLFunction.231, %class.GrGLFunction.232, %class.GrGLFunction.209, %class.GrGLFunction, %class.GrGLFunction.233, %class.GrGLFunction.234, %class.GrGLFunction.235, %class.GrGLFunction.236, %class.GrGLFunction.237, %class.GrGLFunction.238, %class.GrGLFunction.239, %class.GrGLFunction.240, %class.GrGLFunction.241, %class.GrGLFunction.242, %class.GrGLFunction.243, %class.GrGLFunction.144, %class.GrGLFunction.243, %class.GrGLFunction.244, %class.GrGLFunction.245, %class.GrGLFunction }
%class.GrGLFunction.142 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.143 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.146 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.147 = type { void (i8*, i32, i64, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.148 = type { void (i8*, i32, i64, i64, i8*)*, [4 x i64] }
%class.GrGLFunction.145 = type { void (i8*, float, float, float, float)*, [4 x i64] }
%class.GrGLFunction.150 = type { void (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.151 = type { void (i8*, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.152 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.153 = type { void (i8*, i8, i8, i8, i8)*, [4 x i64] }
%class.GrGLFunction.154 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.155 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.149 = type { i32 (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.159 = type { void (i8*, i8)*, [4 x i64] }
%class.GrGLFunction.160 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.161 = type { void (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.162 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.158 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.163 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.164 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.165 = type { void (i8*, i32, i32, i32, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.166 = type { void (i8*, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.169 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.170 = type { void (i8*, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.171 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.157 = type { i32 (i8*)*, [4 x i64] }
%class.GrGLFunction.173 = type { void (i8*, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.174 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.175 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.176 = type { void (i8*, i32, i32, i32*, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.178 = type { void (i8*, i32, i32, i64*)*, [4 x i64] }
%class.GrGLFunction.179 = type { void (i8*, i32, i32, i64*)*, [4 x i64] }
%class.GrGLFunction.180 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.177 = type { void (i8*, i32, i32, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.172 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.181 = type { void (i8*, i32, i32, i32*, i32*)*, [4 x i64] }
%class.GrGLFunction.182 = type { i8* (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.183 = type { i8* (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.184 = type { void (i8*, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.185 = type { i32 (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.167 = type { void (i8*, i32, i64, i64)*, [4 x i64] }
%class.GrGLFunction.188 = type { void (i8*, i32, i32, i32*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.156 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.191 = type { void (i8*, float)*, [4 x i64] }
%class.GrGLFunction.192 = type { void (i8*, i32, i32, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.194 = type { i8* (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.195 = type { i8* (i8*, i32, i64, i64, i32)*, [4 x i64] }
%class.GrGLFunction.196 = type { i8* (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.197 = type { i8* (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.198 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.199 = type { void (i8*, i32, i32, i32, i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.200 = type { void (i8*, i32, i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.201 = type { void (i8*, i32, i32, i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.202 = type { void (i8*, i32, i32*, i32*, i32*, i32*, i32)*, [4 x i64] }
%class.GrGLFunction.203 = type { void (i8*, i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, [4 x i64] }
%class.GrGLFunction.189 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.186 = type { void (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.204 = type { void (i8*, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.205 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.207 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.210 = type { void (i8*, i32, i32, i8**, i32*)*, [4 x i64] }
%class.GrGLFunction.211 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.212 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.168 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.213 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.214 = type { void (i8*, i32, i32, i32, i64, i64)*, [4 x i64] }
%class.GrGLFunction.216 = type { void (i8*, i32, i32, float)*, [4 x i64] }
%class.GrGLFunction.217 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.193 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.208 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.215 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.206 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.187 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.218 = type { void (i8*, i32, float)*, [4 x i64] }
%class.GrGLFunction.219 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.222 = type { void (i8*, i32, float, float)*, [4 x i64] }
%class.GrGLFunction.223 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.224 = type { void (i8*, i32, float, float, float)*, [4 x i64] }
%class.GrGLFunction.225 = type { void (i8*, i32, float, float, float, float)*, [4 x i64] }
%class.GrGLFunction.226 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.220 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.221 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.227 = type { void (i8*, i32, i32, i8, float*)*, [4 x i64] }
%class.GrGLFunction.190 = type { i8 (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.228 = type { void (i8*, i8*)*, [4 x i64] }
%class.GrGLFunction.229 = type { void (i8*, i32, float)*, [4 x i64] }
%class.GrGLFunction.230 = type { void (i8*, i32, float*)*, [4 x i64] }
%class.GrGLFunction.141 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.231 = type { void (i8*, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.232 = type { void (i8*, i32, i32, i32, i8, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.209 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.233 = type { %struct.__GLsync* (i8*, i32, i32)*, [4 x i64] }
%struct.__GLsync = type opaque
%class.GrGLFunction.234 = type { i8 (i8*, %struct.__GLsync*)*, [4 x i64] }
%class.GrGLFunction.235 = type { i32 (i8*, %struct.__GLsync*, i32, i64)*, [4 x i64] }
%class.GrGLFunction.236 = type { void (i8*, %struct.__GLsync*, i32, i64)*, [4 x i64] }
%class.GrGLFunction.237 = type { void (i8*, %struct.__GLsync*)*, [4 x i64] }
%class.GrGLFunction.238 = type { void (i8*, i32, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.239 = type { void (i8*, i32, i32, i32, i32, i32*, i8)*, [4 x i64] }
%class.GrGLFunction.240 = type { void (i8*, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.241 = type { void (i8*, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, [4 x i64] }
%class.GrGLFunction.242 = type { i32 (i8*, i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.144 = type { void (i8*)*, [4 x i64] }
%class.GrGLFunction.243 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.244 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.245 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction = type { void (i8*, i32)*, [4 x i64] }
%struct.GrGLDriverInfo = type <{ i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i8, [7 x i8] }>
%class.sk_sp.246 = type { %class.GrGLCaps* }
%class.GrGLCaps = type <{ %class.GrCaps.base, i8, i32, [4 x i8], %class.SkTArray.247, i32, i32, i32, i32, i32, i32, i32, i40, i32, i32, [4 x i8], [24 x %"struct.GrGLCaps::FormatInfo"], [31 x i32], [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.1, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%class.SkTArray.247 = type { i32*, i64 }
%"struct.GrGLCaps::FormatInfo" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, %class.SkTDArray.248, %"class.std::__1::unique_ptr.249", i32, [4 x i8] }>
%class.SkTDArray.248 = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.GrGLCaps::ColorTypeInfo"* }
%"struct.GrGLCaps::ColorTypeInfo" = type <{ i32, i32, %class.GrSwizzle, %class.GrSwizzle, [4 x i8], %"class.std::__1::unique_ptr.252", i32, [4 x i8] }>
%class.GrSwizzle = type { i16 }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.GrGLCaps::ColorTypeInfo::ExternalIOFormats"* }
%"struct.GrGLCaps::ColorTypeInfo::ExternalIOFormats" = type <{ i32, i32, i32, i32, i8, [3 x i8] }>
%class.sk_sp.264 = type { %"class.GrGLGpu::ProgramCache"* }
%"class.GrGLGpu::ProgramCache" = type { %class.GrThreadSafePipelineBuilder.base, %class.SkLRUCache }
%class.GrThreadSafePipelineBuilder.base = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats" }
%"class.GrThreadSafePipelineBuilder::Stats" = type { i8 }
%class.SkLRUCache = type { i32, %class.SkTHashTable.265, %class.SkTInternalLList }
%class.SkTHashTable.265 = type { i32, i32, %class.SkAutoTArray.266 }
%class.SkAutoTArray.266 = type { %"class.std::__1::unique_ptr.267" }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.SkTHashTable<SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry *, GrProgramDesc, SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry *, GrProgramDesc, SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry"*, %"struct.SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry"* }
%"struct.SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry" = type opaque
%class.sk_sp.273 = type { %class.GrGLProgram* }
%class.GrGLProgram = type <{ %class.SkRefCnt.base, %"struct.GrGLProgram::RenderTargetState", %struct.GrGLSLBuiltinUniformHandles, i32, [4 x i8], %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.280", %"class.std::__1::vector", %"class.std::__1::unique_ptr.296", i32, i32, i32, i32, %class.GrGLGpu*, %class.GrGLProgramDataManager, i32, [4 x i8] }>
%"struct.GrGLProgram::RenderTargetState" = type { %struct.SkISize, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type opaque
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"*, %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %class.GrGLSLFragmentProcessor* }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray.25, %class.SkTArray.289 }
%class.SkTArray.289 = type { %"class.std::__1::unique_ptr.286"*, i64 }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.std::__1::unique_ptr.286"* }
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.GrGLProgram::Attribute"* }
%"struct.GrGLProgram::Attribute" = type { i32, i32, i64, i32 }
%class.GrGLProgramDataManager = type { %class.GrGLSLProgramDataManager, %class.SkTArray.302, %class.GrGLGpu* }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.SkTArray.302 = type { %"struct.GrGLProgramDataManager::Uniform"*, i64 }
%"struct.GrGLProgramDataManager::Uniform" = type { i32 }
%struct.anon = type { i32, %struct.GrNativeRect }
%class.anon = type { i32, i32, i32, %class.GrWindowRectsState }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.303 }
%union.anon.303 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.GrNativeRect = type { i32, i32, i32, i32 }
%"class.GrGLGpu::HWVertexArrayState" = type { i32, i8, [3 x i8], %class.GrGLAttribArrayState, %class.GrGLVertexArray* }
%class.GrGLAttribArrayState = type <{ %class.SkSTArray.304, i32, i8, i8, [2 x i8] }>
%class.SkSTArray.304 = type { %class.SkAlignedSTStorage.305, %class.SkTArray.306 }
%class.SkAlignedSTStorage.305 = type { [640 x i8] }
%class.SkTArray.306 = type { %"struct.GrGLAttribArrayState::AttribArrayState"*, i64 }
%"struct.GrGLAttribArrayState::AttribArrayState" = type <{ %"class.GrGpuResource::UniqueID", i8, [3 x i8], i32, i32, i32, [4 x i8], i8*, i32, [4 x i8] }>
%class.GrGLVertexArray = type { i32, [4 x i8], %class.GrGLAttribArrayState, %"class.GrGpuResource::UniqueID", [4 x i8] }
%struct.anon.307 = type <{ i32, %"class.GrGpuResource::UniqueID", i8, [3 x i8] }>
%struct.anon.308 = type { i32, i32, i32, %struct.SkRGBA4f, i8, i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrStencilSettings = type { i32, %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face" }
%"struct.GrStencilSettings::Face" = type { %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.SkAutoTArray.309 = type { %"class.std::__1::unique_ptr.310" }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.GrGLGpu::TextureUnitBindings"* }
%"class.GrGLGpu::TextureUnitBindings" = type { [3 x %"struct.GrGLGpu::TextureUnitBindings::TargetBinding"] }
%"struct.GrGLGpu::TextureUnitBindings::TargetBinding" = type <{ %"class.GrGpuResource::UniqueID", i8, [3 x i8] }>
%struct.anon.316 = type { i32, i32, i32, i32 }
%struct.anon.318 = type { i32, i32, i32 }
%class.sk_sp.317 = type { %class.GrGLBuffer* }
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.GrGLGpu::SamplerObjectCache"* }
%"class.GrGLGpu::SamplerObjectCache" = type opaque
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %class.GrGLOpsRenderPass* }
%class.GrGLOpsRenderPass = type opaque
%class.GrFinishCallbacks = type { %class.GrGpu*, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.331" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { i64 }
%"class.skia::tracing_internals::ScopedTracer" = type { %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data" }
%"struct.skia::tracing_internals::ScopedTracer::Data" = type { i8*, i8*, i64 }
%class.SkEventTracer = type { i32 (...)** }
%class.SkTraceMemoryDump = type { i32 (...)** }

$_ZNK11GrGpuBuffer4sizeEv = comdat any

$_ZNK11GrGpuBuffer15getResourceTypeEv = comdat any

$_ZN10GrGLBufferD2Ev = comdat any

$_ZN10GrGLBufferD0Ev = comdat any

$_ZNK11GrGpuBuffer15onGpuMemorySizeEv = comdat any

$_ZNK11GrGpuBuffer3refEv = comdat any

$_ZNK11GrGpuBuffer5unrefEv = comdat any

$_ZNK11GrGpuBuffer11isCpuBufferEv = comdat any

$_ZThn152_N10GrGLBufferD1Ev = comdat any

$_ZThn152_N10GrGLBufferD0Ev = comdat any

$_ZThn152_NK11GrGpuBuffer3refEv = comdat any

$_ZThn152_NK11GrGpuBuffer5unrefEv = comdat any

$_ZThn152_NK11GrGpuBuffer4sizeEv = comdat any

$_ZThn152_NK11GrGpuBuffer11isCpuBufferEv = comdat any

@_ZTV10GrGLBuffer = hidden unnamed_addr constant { [18 x i8*], [8 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGpuResource*, %class.SkTraceMemoryDump*)* @_ZNK13GrGpuResource20dumpMemoryStatisticsEP17SkTraceMemoryDump to i8*), i8* bitcast (i8* (%class.GrGpuBuffer*)* @_ZNK11GrGpuBuffer15getResourceTypeEv to i8*), i8* bitcast (void (%class.GrGLBuffer*)* @_ZN10GrGLBufferD2Ev to i8*), i8* bitcast (void (%class.GrGLBuffer*)* @_ZN10GrGLBufferD0Ev to i8*), i8* bitcast (void (%class.GrGLBuffer*)* @_ZN10GrGLBuffer9onReleaseEv to i8*), i8* bitcast (void (%class.GrGLBuffer*)* @_ZN10GrGLBuffer9onAbandonEv to i8*), i8* bitcast (void (%class.GrGLBuffer*, %class.SkTraceMemoryDump*, %class.SkString*)* @_ZNK10GrGLBuffer16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString to i8*), i8* bitcast (void (%class.GrGpuBuffer*, %class.GrScratchKey*)* @_ZNK11GrGpuBuffer17computeScratchKeyEP12GrScratchKey to i8*), i8* bitcast (i64 (%class.GrGpuBuffer*)* @_ZNK11GrGpuBuffer15onGpuMemorySizeEv to i8*), i8* bitcast (i64 (%class.GrGpuBuffer*)* @_ZNK11GrGpuBuffer4sizeEv to i8*), i8* bitcast (void (%class.GrGpuBuffer*)* @_ZNK11GrGpuBuffer3refEv to i8*), i8* bitcast (void (%class.GrGpuBuffer*)* @_ZNK11GrGpuBuffer5unrefEv to i8*), i8* bitcast (i1 (%class.GrGpuBuffer*)* @_ZNK11GrGpuBuffer11isCpuBufferEv to i8*), i8* bitcast (void (%class.GrGLBuffer*)* @_ZN10GrGLBuffer5onMapEv to i8*), i8* bitcast (void (%class.GrGLBuffer*)* @_ZN10GrGLBuffer7onUnmapEv to i8*), i8* bitcast (i1 (%class.GrGLBuffer*, i8*, i64)* @_ZN10GrGLBuffer12onUpdateDataEPKvm to i8*)], [8 x i8*] [i8* inttoptr (i64 -152 to i8*), i8* null, i8* bitcast (void (%class.GrGLBuffer*)* @_ZThn152_N10GrGLBufferD1Ev to i8*), i8* bitcast (void (%class.GrGLBuffer*)* @_ZThn152_N10GrGLBufferD0Ev to i8*), i8* bitcast (void (%class.GrGpuBuffer*)* @_ZThn152_NK11GrGpuBuffer3refEv to i8*), i8* bitcast (void (%class.GrGpuBuffer*)* @_ZThn152_NK11GrGpuBuffer5unrefEv to i8*), i8* bitcast (i64 (%class.GrGpuBuffer*)* @_ZThn152_NK11GrGpuBuffer4sizeEv to i8*), i8* bitcast (i1 (%class.GrGpuBuffer*)* @_ZThn152_NK11GrGpuBuffer11isCpuBufferEv to i8*)] }, align 8
@.str = private unnamed_addr constant [29 x i8] c"disabled-by-default-skia.gpu\00", align 1
@__PRETTY_FUNCTION__._ZN10GrGLBuffer9onReleaseEv = private unnamed_addr constant [37 x i8] c"virtual void GrGLBuffer::onRelease()\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"gl_buffer\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"Buffer Object\00", align 1
@_ZZN10GrGLBuffer9onReleaseEvE28trace_event_unique_atomic140.0.0 = internal unnamed_addr global i64 0, align 8
@switch.table._ZN10GrGLBufferC2EP7GrGLGpum15GrGpuBufferType15GrAccessPatternPKv.3 = private unnamed_addr constant [3 x i32] [i32 35040, i32 35044, i32 35040], align 4

@_ZN10GrGLBufferC1EP7GrGLGpum15GrGpuBufferType15GrAccessPatternPKv = hidden unnamed_addr alias void (%class.GrGLBuffer*, %class.GrGLGpu*, i64, i32, i32, i8*), void (%class.GrGLBuffer*, %class.GrGLGpu*, i64, i32, i32, i8*)* @_ZN10GrGLBufferC2EP7GrGLGpum15GrGpuBufferType15GrAccessPatternPKv

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrGLBuffer4MakeEP7GrGLGpum15GrGpuBufferType15GrAccessPatternPKv(%class.sk_sp.317* noalias nocapture sret, %class.GrGLGpu*, i64, i32, i32, i8*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %class.GrGLContext*, %class.GrGLContext** %7, align 8
  %9 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %8, i64 0, i32 0, i32 4, i32 0
  %10 = load %class.GrGLCaps*, %class.GrGLCaps** %9, align 8
  %11 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %10, i64 0, i32 9
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  %14 = add i32 %3, -3
  %15 = icmp ult i32 %14, 2
  %16 = and i1 %15, %13
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = getelementptr inbounds %class.sk_sp.317, %class.sk_sp.317* %0, i64 0, i32 0
  store %class.GrGLBuffer* null, %class.GrGLBuffer** %18, align 8
  br label %37

19:                                               ; preds = %6
  %20 = tail call i8* @_Znwm(i64 216) #8
  %21 = bitcast i8* %20 to %class.GrGLBuffer*
  tail call void @_ZN10GrGLBufferC2EP7GrGLGpum15GrGpuBufferType15GrAccessPatternPKv(%class.GrGLBuffer* nonnull %21, %class.GrGLGpu* %1, i64 %2, i32 %3, i32 %4, i8* %5)
  %22 = getelementptr inbounds i8, i8* %20, i64 188
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = ptrtoint i8* %20 to i64
  %28 = bitcast %class.sk_sp.317* %0 to i64*
  store i64 %27, i64* %28, align 8
  br label %37

29:                                               ; preds = %19
  %30 = getelementptr inbounds %class.sk_sp.317, %class.sk_sp.317* %0, i64 0, i32 0
  store %class.GrGLBuffer* null, %class.GrGLBuffer** %30, align 8
  %31 = getelementptr inbounds i8, i8* %20, i64 8
  %32 = bitcast i8* %31 to i32*
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = bitcast i8* %20 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* nonnull %36, i32 0) #9
  br label %37

37:                                               ; preds = %35, %29, %26, %17
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrGLBufferC2EP7GrGLGpum15GrGpuBufferType15GrAccessPatternPKv(%class.GrGLBuffer*, %class.GrGLGpu*, i64, i32, i32, i8*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0
  %8 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 0
  tail call void @_ZN11GrGpuBufferC2EP5GrGpum15GrGpuBufferType15GrAccessPattern(%class.GrGpuBuffer* %7, %class.GrGpu* %8, i64 %2, i32 %3, i32 %4) #9
  %9 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTV10GrGLBuffer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTV10GrGLBuffer, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 1
  store i32 %3, i32* %12, align 8
  %13 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 2
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 3
  %15 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %class.GrGLContext*, %class.GrGLContext** %15, align 8
  %17 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %16, i64 0, i32 0, i32 4, i32 0
  %18 = load %class.GrGLCaps*, %class.GrGLCaps** %17, align 8
  %19 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %18, i64 0, i32 9
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %25

22:                                               ; preds = %6
  %23 = icmp ult i32 %4, 3
  br i1 %23, label %33, label %24

24:                                               ; preds = %22
  tail call void @llvm.trap() #9
  unreachable

25:                                               ; preds = %6
  switch i32 %3, label %32 [
    i32 0, label %26
    i32 1, label %26
    i32 2, label %26
    i32 3, label %26
    i32 5, label %26
    i32 4, label %29
  ]

26:                                               ; preds = %25, %25, %25, %25, %25
  %27 = icmp ult i32 %4, 3
  br i1 %27, label %37, label %28

28:                                               ; preds = %26
  tail call void @llvm.trap() #9
  unreachable

29:                                               ; preds = %25
  %30 = icmp ult i32 %4, 3
  br i1 %30, label %41, label %31

31:                                               ; preds = %29
  tail call void @llvm.trap() #9
  unreachable

32:                                               ; preds = %25
  tail call void @llvm.trap() #9
  unreachable

33:                                               ; preds = %22
  %34 = sext i32 %4 to i64
  %35 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN10GrGLBufferC2EP7GrGLGpum15GrGpuBufferType15GrAccessPatternPKv.3, i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  br label %44

37:                                               ; preds = %26
  %38 = sext i32 %4 to i64
  %39 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN10GrGLBufferC2EP7GrGLGpum15GrGpuBufferType15GrAccessPatternPKv.3, i64 0, i64 %38
  %40 = load i32, i32* %39, align 4
  br label %44

41:                                               ; preds = %29
  %42 = mul i32 %4, -4
  %43 = add i32 %42, 35049
  br label %44

44:                                               ; preds = %41, %37, %33
  %45 = phi i32 [ %36, %33 ], [ %40, %37 ], [ %43, %41 ]
  store i32 %45, i32* %14, align 8
  %46 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 5
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 6
  store i8 0, i8* %47, align 8
  %48 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 0, i32 7
  %49 = bitcast %class.GrGpu** %48 to %class.GrGLGpu**
  %50 = load %class.GrGLGpu*, %class.GrGLGpu** %49, align 8
  %51 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %50, i64 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %class.GrGLContext*, %class.GrGLContext** %51, align 8
  %53 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %52, i64 0, i32 0, i32 1, i32 0
  %54 = load %struct.GrGLInterface*, %struct.GrGLInterface** %53, align 8
  %55 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %54, i64 0, i32 3, i32 66, i32 0
  %56 = load void (i8*, i32, i32*)*, void (i8*, i32, i32*)** %55, align 8
  %57 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %54, i64 0, i32 3, i32 66, i32 1, i64 0
  %58 = bitcast i64* %57 to i8*
  tail call void %56(i8* %58, i32 1, i32* %13) #9
  %59 = load i32, i32* %13, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %107, label %61

61:                                               ; preds = %44
  %62 = load i32, i32* %12, align 8
  %63 = tail call i32 @_ZN7GrGLGpu10bindBufferE15GrGpuBufferTypePK8GrBuffer(%class.GrGLGpu* %1, i32 %62, %class.GrBuffer* %10) #9
  %64 = load %class.GrGLGpu*, %class.GrGLGpu** %49, align 8
  %65 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %64, i64 0, i32 1, i32 0, i32 0, i32 0
  %66 = load %class.GrGLContext*, %class.GrGLContext** %65, align 8
  %67 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %66, i64 0, i32 0, i32 4, i32 0
  %68 = load %class.GrGLCaps*, %class.GrGLCaps** %67, align 8
  %69 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %68, i64 0, i32 12
  %70 = bitcast i40* %69 to i64*
  %71 = load i64, i64* %70, align 4
  %72 = and i64 %71, 16777216
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %82, label %74

74:                                               ; preds = %61
  %75 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %66, i64 0, i32 0, i32 1, i32 0
  %76 = load %struct.GrGLInterface*, %struct.GrGLInterface** %75, align 8
  %77 = load i32, i32* %14, align 8
  %78 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %76, i64 0, i32 3, i32 17, i32 0
  %79 = load void (i8*, i32, i64, i8*, i32)*, void (i8*, i32, i64, i8*, i32)** %78, align 8
  %80 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %76, i64 0, i32 3, i32 17, i32 1, i64 0
  %81 = bitcast i64* %80 to i8*
  tail call void %79(i8* %81, i32 %63, i64 %2, i8* %5, i32 %77) #9
  br label %106

82:                                               ; preds = %61
  tail call void @_ZN7GrGLGpu25clearErrorsAndCheckForOOMEv(%class.GrGLGpu* %64) #9
  %83 = load %class.GrGLGpu*, %class.GrGLGpu** %49, align 8
  %84 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %83, i64 0, i32 1, i32 0, i32 0, i32 0
  %85 = load %class.GrGLContext*, %class.GrGLContext** %84, align 8
  %86 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %85, i64 0, i32 0, i32 1, i32 0
  %87 = load %struct.GrGLInterface*, %struct.GrGLInterface** %86, align 8
  %88 = load i32, i32* %14, align 8
  %89 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %87, i64 0, i32 3, i32 17, i32 0
  %90 = load void (i8*, i32, i64, i8*, i32)*, void (i8*, i32, i64, i8*, i32)** %89, align 8
  %91 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %87, i64 0, i32 3, i32 17, i32 1, i64 0
  %92 = bitcast i64* %91 to i8*
  tail call void %90(i8* %92, i32 %63, i64 %2, i8* %5, i32 %88) #9
  %93 = load %class.GrGLGpu*, %class.GrGLGpu** %49, align 8
  %94 = tail call i32 @_ZN7GrGLGpu22getErrorAndCheckForOOMEv(%class.GrGLGpu* %93) #9
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %82
  %97 = load %class.GrGLGpu*, %class.GrGLGpu** %49, align 8
  %98 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %97, i64 0, i32 1, i32 0, i32 0, i32 0
  %99 = load %class.GrGLContext*, %class.GrGLContext** %98, align 8
  %100 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %99, i64 0, i32 0, i32 1, i32 0
  %101 = load %struct.GrGLInterface*, %struct.GrGLInterface** %100, align 8
  %102 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %101, i64 0, i32 3, i32 33, i32 0
  %103 = load void (i8*, i32, i32*)*, void (i8*, i32, i32*)** %102, align 8
  %104 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %101, i64 0, i32 3, i32 33, i32 1, i64 0
  %105 = bitcast i64* %104 to i8*
  tail call void %103(i8* %105, i32 1, i32* %13) #9
  store i32 0, i32* %13, align 4
  br label %107

106:                                              ; preds = %74, %82
  store i64 %2, i64* %46, align 8
  br label %107

107:                                              ; preds = %96, %106, %44
  %108 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 0
  tail call void @_ZN13GrGpuResource17registerWithCacheE10SkBudgeted(%class.GrGpuResource* %108, i1 zeroext true) #9
  %109 = load i32, i32* %13, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %107
  tail call void @_ZN13GrGpuResource16removeScratchKeyEv(%class.GrGpuResource* %108) #9
  br label %112

112:                                              ; preds = %107, %111
  ret void
}

declare void @_ZN11GrGpuBufferC2EP5GrGpum15GrGpuBufferType15GrAccessPattern(%class.GrGpuBuffer*, %class.GrGpu*, i64, i32, i32) unnamed_addr #3

declare i32 @_ZN7GrGLGpu10bindBufferE15GrGpuBufferTypePK8GrBuffer(%class.GrGLGpu*, i32, %class.GrBuffer*) local_unnamed_addr #3

declare void @_ZN13GrGpuResource17registerWithCacheE10SkBudgeted(%class.GrGpuResource*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrGLBuffer9onReleaseEv(%class.GrGLBuffer*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %3 = load atomic i64, i64* @_ZZN10GrGLBuffer9onReleaseEvE28trace_event_unique_atomic140.0.0 monotonic, align 8
  %4 = inttoptr i64 %3 to i8*
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %8 = bitcast %class.SkEventTracer* %7 to i8* (%class.SkEventTracer*, i8*)***
  %9 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %8, align 8
  %10 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %9, i64 2
  %11 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %10, align 8
  %12 = tail call i8* %11(%class.SkEventTracer* %7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #9
  %13 = ptrtoint i8* %12 to i64
  store atomic i64 %13, i64* @_ZZN10GrGLBuffer9onReleaseEvE28trace_event_unique_atomic140.0.0 monotonic, align 8
  br label %14

14:                                               ; preds = %1, %6
  %15 = phi i8* [ %4, %1 ], [ %12, %6 ]
  %16 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %2, i64 0, i32 0
  %18 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %2, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %2, i64 0, i32 1, i32 1
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %2, i64 0, i32 1, i32 2
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %2, i64 0, i32 1
  %22 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %17, align 8
  %23 = load i8, i8* %15, align 1
  %24 = and i8 %23, 5
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %35, label %26

26:                                               ; preds = %14
  %27 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %28 = bitcast %class.SkEventTracer* %27 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %29 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %28, align 8
  %30 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %29, i64 4
  %31 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %30, align 8
  %32 = tail call i64 %31(%class.SkEventTracer* %27, i8 signext 88, i8* %15, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__PRETTY_FUNCTION__._ZN10GrGLBuffer9onReleaseEv, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #9
  %33 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %2, i64 0, i32 1
  %34 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %33, i64 0, i32 0
  store i8* %15, i8** %34, align 8
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__PRETTY_FUNCTION__._ZN10GrGLBuffer9onReleaseEv, i64 0, i64 0), i8** %19, align 8
  store i64 %32, i64* %20, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %33, %"struct.skia::tracing_internals::ScopedTracer::Data"** %17, align 8
  br label %35

35:                                               ; preds = %14, %26
  %36 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ null, %14 ], [ %33, %26 ]
  %37 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 0, i32 7
  %38 = load %class.GrGpu*, %class.GrGpu** %37, align 8
  %39 = icmp eq %class.GrGpu* %38, null
  br i1 %39, label %59, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %56, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %38, i64 1
  %46 = bitcast %class.GrGpu* %45 to %class.GrGLContext**
  %47 = load %class.GrGLContext*, %class.GrGLContext** %46, align 8
  %48 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %47, i64 0, i32 0, i32 1, i32 0
  %49 = load %struct.GrGLInterface*, %struct.GrGLInterface** %48, align 8
  %50 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %49, i64 0, i32 3, i32 33, i32 0
  %51 = load void (i8*, i32, i32*)*, void (i8*, i32, i32*)** %50, align 8
  %52 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %49, i64 0, i32 3, i32 33, i32 1, i64 0
  %53 = bitcast i64* %52 to i8*
  call void %51(i8* %53, i32 1, i32* %41) #9
  store i32 0, i32* %41, align 4
  %54 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 5
  store i64 0, i64* %54, align 8
  %55 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %17, align 8
  br label %56

56:                                               ; preds = %40, %44
  %57 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ %36, %40 ], [ %55, %44 ]
  %58 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 2
  store i8* null, i8** %58, align 8
  br label %59

59:                                               ; preds = %56, %35
  %60 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ %57, %56 ], [ %36, %35 ]
  %61 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %59
  %63 = load i8*, i8** %18, align 8
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %75, label %66

66:                                               ; preds = %62
  %67 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %68 = load i8*, i8** %18, align 8
  %69 = load i8*, i8** %19, align 8
  %70 = load i64, i64* %20, align 8
  %71 = bitcast %class.SkEventTracer* %67 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %72 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %72, i64 5
  %74 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %73, align 8
  call void %74(%class.SkEventTracer* %67, i8* %68, i8* %69, i64 %70) #9
  br label %75

75:                                               ; preds = %59, %62, %66
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #9
  ret void
}

declare %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10GrGLBuffer9onAbandonEv(%class.GrGLBuffer* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 2
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 5
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 2
  store i8* null, i8** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrGLBuffer5onMapEv(%class.GrGLBuffer*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 4
  %5 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 0, i32 7
  %6 = bitcast %class.GrGpu** %5 to %class.GrGLGpu**
  %7 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %8 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %class.GrGLContext*, %class.GrGLContext** %8, align 8
  %10 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %9, i64 0, i32 0, i32 4, i32 0
  %11 = load %class.GrGLCaps*, %class.GrGLCaps** %10, align 8
  %12 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %11, i64 0, i32 8
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %199 [
    i32 0, label %203
    i32 1, label %14
    i32 2, label %77
    i32 3, label %139
  ]

14:                                               ; preds = %1
  %15 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 1
  %16 = tail call i32 @_ZN7GrGLGpu10bindBufferE15GrGpuBufferTypePK8GrBuffer(%class.GrGLGpu* %7, i32 %3, %class.GrBuffer* %15) #9
  br i1 %4, label %65, label %17

17:                                               ; preds = %14
  %18 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %19 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %18, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %class.GrGLContext*, %class.GrGLContext** %19, align 8
  %21 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %20, i64 0, i32 0, i32 4, i32 0
  %22 = load %class.GrGLCaps*, %class.GrGLCaps** %21, align 8
  %23 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %22, i64 0, i32 12
  %24 = bitcast i40* %23 to i64*
  %25 = load i64, i64* %24, align 4
  %26 = and i64 %25, 16384
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %17
  %29 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 5
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 3
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %30, %32
  br i1 %33, label %65, label %34

34:                                               ; preds = %17, %28
  %35 = and i64 %25, 16777216
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %48, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %20, i64 0, i32 0, i32 1, i32 0
  %39 = load %struct.GrGLInterface*, %struct.GrGLInterface** %38, align 8
  %40 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 3
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 3
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %39, i64 0, i32 3, i32 17, i32 0
  %45 = load void (i8*, i32, i64, i8*, i32)*, void (i8*, i32, i64, i8*, i32)** %44, align 8
  %46 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %39, i64 0, i32 3, i32 17, i32 1, i64 0
  %47 = bitcast i64* %46 to i8*
  tail call void %45(i8* %47, i32 %16, i64 %41, i8* null, i32 %43) #9
  br label %65

48:                                               ; preds = %34
  tail call void @_ZN7GrGLGpu25clearErrorsAndCheckForOOMEv(%class.GrGLGpu* %18) #9
  %49 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %50 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %49, i64 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %class.GrGLContext*, %class.GrGLContext** %50, align 8
  %52 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %51, i64 0, i32 0, i32 1, i32 0
  %53 = load %struct.GrGLInterface*, %struct.GrGLInterface** %52, align 8
  %54 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 3
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %53, i64 0, i32 3, i32 17, i32 0
  %59 = load void (i8*, i32, i64, i8*, i32)*, void (i8*, i32, i64, i8*, i32)** %58, align 8
  %60 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %53, i64 0, i32 3, i32 17, i32 1, i64 0
  %61 = bitcast i64* %60 to i8*
  tail call void %59(i8* %61, i32 %16, i64 %55, i8* null, i32 %57) #9
  %62 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %63 = tail call i32 @_ZN7GrGLGpu22getErrorAndCheckForOOMEv(%class.GrGLGpu* %62) #9
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %203

65:                                               ; preds = %14, %48, %28, %37
  %66 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %67 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %66, i64 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %class.GrGLContext*, %class.GrGLContext** %67, align 8
  %69 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %68, i64 0, i32 0, i32 1, i32 0
  %70 = load %struct.GrGLInterface*, %struct.GrGLInterface** %69, align 8
  %71 = select i1 %4, i32 35000, i32 35001
  %72 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %70, i64 0, i32 3, i32 108, i32 0
  %73 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %72, align 8
  %74 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %70, i64 0, i32 3, i32 108, i32 1, i64 0
  %75 = bitcast i64* %74 to i8*
  %76 = tail call i8* %73(i8* %75, i32 %16, i32 %71) #9
  br label %196

77:                                               ; preds = %1
  %78 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 1
  %79 = tail call i32 @_ZN7GrGLGpu10bindBufferE15GrGpuBufferTypePK8GrBuffer(%class.GrGLGpu* %7, i32 %3, %class.GrBuffer* %78) #9
  %80 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 5
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 3
  %83 = load i64, i64* %82, align 8
  %84 = icmp eq i64 %81, %83
  br i1 %84, label %121, label %85

85:                                               ; preds = %77
  %86 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %87 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %86, i64 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %class.GrGLContext*, %class.GrGLContext** %87, align 8
  %89 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %88, i64 0, i32 0, i32 4, i32 0
  %90 = load %class.GrGLCaps*, %class.GrGLCaps** %89, align 8
  %91 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %90, i64 0, i32 12
  %92 = bitcast i40* %91 to i64*
  %93 = load i64, i64* %92, align 4
  %94 = and i64 %93, 16777216
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %105, label %96

96:                                               ; preds = %85
  %97 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %88, i64 0, i32 0, i32 1, i32 0
  %98 = load %struct.GrGLInterface*, %struct.GrGLInterface** %97, align 8
  %99 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 3
  %100 = load i32, i32* %99, align 8
  %101 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %98, i64 0, i32 3, i32 17, i32 0
  %102 = load void (i8*, i32, i64, i8*, i32)*, void (i8*, i32, i64, i8*, i32)** %101, align 8
  %103 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %98, i64 0, i32 3, i32 17, i32 1, i64 0
  %104 = bitcast i64* %103 to i8*
  tail call void %102(i8* %104, i32 %79, i64 %83, i8* null, i32 %100) #9
  br label %121

105:                                              ; preds = %85
  tail call void @_ZN7GrGLGpu25clearErrorsAndCheckForOOMEv(%class.GrGLGpu* %86) #9
  %106 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %107 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %106, i64 0, i32 1, i32 0, i32 0, i32 0
  %108 = load %class.GrGLContext*, %class.GrGLContext** %107, align 8
  %109 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %108, i64 0, i32 0, i32 1, i32 0
  %110 = load %struct.GrGLInterface*, %struct.GrGLInterface** %109, align 8
  %111 = load i64, i64* %82, align 8
  %112 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 3
  %113 = load i32, i32* %112, align 8
  %114 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %110, i64 0, i32 3, i32 17, i32 0
  %115 = load void (i8*, i32, i64, i8*, i32)*, void (i8*, i32, i64, i8*, i32)** %114, align 8
  %116 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %110, i64 0, i32 3, i32 17, i32 1, i64 0
  %117 = bitcast i64* %116 to i8*
  tail call void %115(i8* %117, i32 %79, i64 %111, i8* null, i32 %113) #9
  %118 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %119 = tail call i32 @_ZN7GrGLGpu22getErrorAndCheckForOOMEv(%class.GrGLGpu* %118) #9
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %203

121:                                              ; preds = %96, %77, %105
  br i1 %4, label %126, label %122

122:                                              ; preds = %121
  %123 = load i32, i32* %2, align 8
  %124 = icmp eq i32 %123, 3
  %125 = select i1 %124, i32 2, i32 10
  br label %126

126:                                              ; preds = %121, %122
  %127 = phi i32 [ 1, %121 ], [ %125, %122 ]
  %128 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %129 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %128, i64 0, i32 1, i32 0, i32 0, i32 0
  %130 = load %class.GrGLContext*, %class.GrGLContext** %129, align 8
  %131 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %130, i64 0, i32 0, i32 1, i32 0
  %132 = load %struct.GrGLInterface*, %struct.GrGLInterface** %131, align 8
  %133 = load i64, i64* %82, align 8
  %134 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %132, i64 0, i32 3, i32 109, i32 0
  %135 = load i8* (i8*, i32, i64, i64, i32)*, i8* (i8*, i32, i64, i64, i32)** %134, align 8
  %136 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %132, i64 0, i32 3, i32 109, i32 1, i64 0
  %137 = bitcast i64* %136 to i8*
  %138 = tail call i8* %135(i8* %137, i32 %79, i64 0, i64 %133, i32 %127) #9
  br label %196

139:                                              ; preds = %1
  %140 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 1
  %141 = tail call i32 @_ZN7GrGLGpu10bindBufferE15GrGpuBufferTypePK8GrBuffer(%class.GrGLGpu* %7, i32 %3, %class.GrBuffer* %140) #9
  %142 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 5
  %143 = load i64, i64* %142, align 8
  %144 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 3
  %145 = load i64, i64* %144, align 8
  %146 = icmp eq i64 %143, %145
  br i1 %146, label %183, label %147

147:                                              ; preds = %139
  %148 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %149 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %148, i64 0, i32 1, i32 0, i32 0, i32 0
  %150 = load %class.GrGLContext*, %class.GrGLContext** %149, align 8
  %151 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %150, i64 0, i32 0, i32 4, i32 0
  %152 = load %class.GrGLCaps*, %class.GrGLCaps** %151, align 8
  %153 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %152, i64 0, i32 12
  %154 = bitcast i40* %153 to i64*
  %155 = load i64, i64* %154, align 4
  %156 = and i64 %155, 16777216
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %167, label %158

158:                                              ; preds = %147
  %159 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %150, i64 0, i32 0, i32 1, i32 0
  %160 = load %struct.GrGLInterface*, %struct.GrGLInterface** %159, align 8
  %161 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 3
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %160, i64 0, i32 3, i32 17, i32 0
  %164 = load void (i8*, i32, i64, i8*, i32)*, void (i8*, i32, i64, i8*, i32)** %163, align 8
  %165 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %160, i64 0, i32 3, i32 17, i32 1, i64 0
  %166 = bitcast i64* %165 to i8*
  tail call void %164(i8* %166, i32 %141, i64 %145, i8* null, i32 %162) #9
  br label %183

167:                                              ; preds = %147
  tail call void @_ZN7GrGLGpu25clearErrorsAndCheckForOOMEv(%class.GrGLGpu* %148) #9
  %168 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %169 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %168, i64 0, i32 1, i32 0, i32 0, i32 0
  %170 = load %class.GrGLContext*, %class.GrGLContext** %169, align 8
  %171 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %170, i64 0, i32 0, i32 1, i32 0
  %172 = load %struct.GrGLInterface*, %struct.GrGLInterface** %171, align 8
  %173 = load i64, i64* %144, align 8
  %174 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 3
  %175 = load i32, i32* %174, align 8
  %176 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %172, i64 0, i32 3, i32 17, i32 0
  %177 = load void (i8*, i32, i64, i8*, i32)*, void (i8*, i32, i64, i8*, i32)** %176, align 8
  %178 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %172, i64 0, i32 3, i32 17, i32 1, i64 0
  %179 = bitcast i64* %178 to i8*
  tail call void %177(i8* %179, i32 %141, i64 %173, i8* null, i32 %175) #9
  %180 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %181 = tail call i32 @_ZN7GrGLGpu22getErrorAndCheckForOOMEv(%class.GrGLGpu* %180) #9
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %203

183:                                              ; preds = %167, %139, %158
  %184 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %185 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %184, i64 0, i32 1, i32 0, i32 0, i32 0
  %186 = load %class.GrGLContext*, %class.GrGLContext** %185, align 8
  %187 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %186, i64 0, i32 0, i32 1, i32 0
  %188 = load %struct.GrGLInterface*, %struct.GrGLInterface** %187, align 8
  %189 = load i64, i64* %144, align 8
  %190 = select i1 %4, i32 35000, i32 35001
  %191 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %188, i64 0, i32 3, i32 110, i32 0
  %192 = load i8* (i8*, i32, i64, i64, i32)*, i8* (i8*, i32, i64, i64, i32)** %191, align 8
  %193 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %188, i64 0, i32 3, i32 110, i32 1, i64 0
  %194 = bitcast i64* %193 to i8*
  %195 = tail call i8* %192(i8* %194, i32 %141, i64 0, i64 %189, i32 %190) #9
  br label %196

196:                                              ; preds = %65, %126, %183
  %197 = phi i8* [ %195, %183 ], [ %138, %126 ], [ %76, %65 ]
  %198 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 2
  store i8* %197, i8** %198, align 8
  br label %199

199:                                              ; preds = %196, %1
  %200 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 3
  %201 = load i64, i64* %200, align 8
  %202 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 5
  store i64 %201, i64* %202, align 8
  br label %203

203:                                              ; preds = %167, %105, %48, %1, %199
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK11GrGpuBuffer4sizeEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrGLBuffer7onUnmapEv(%class.GrGLBuffer*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %46, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 0, i32 7
  %7 = bitcast %class.GrGpu** %6 to %class.GrGLGpu**
  %8 = load %class.GrGLGpu*, %class.GrGLGpu** %7, align 8
  %9 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %class.GrGLContext*, %class.GrGLContext** %9, align 8
  %11 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %10, i64 0, i32 0, i32 4, i32 0
  %12 = load %class.GrGLCaps*, %class.GrGLCaps** %11, align 8
  %13 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %12, i64 0, i32 8
  %14 = load i32, i32* %13, align 4
  switch i32 %14, label %46 [
    i32 0, label %48
    i32 1, label %15
    i32 2, label %15
    i32 3, label %30
  ]

15:                                               ; preds = %5, %5
  %16 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 1
  %19 = tail call i32 @_ZN7GrGLGpu10bindBufferE15GrGpuBufferTypePK8GrBuffer(%class.GrGLGpu* %8, i32 %17, %class.GrBuffer* %18) #9
  %20 = load %class.GrGLGpu*, %class.GrGLGpu** %7, align 8
  %21 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %20, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %class.GrGLContext*, %class.GrGLContext** %21, align 8
  %23 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %22, i64 0, i32 0, i32 1, i32 0
  %24 = load %struct.GrGLInterface*, %struct.GrGLInterface** %23, align 8
  %25 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %24, i64 0, i32 3, i32 175, i32 0
  %26 = load i8 (i8*, i32)*, i8 (i8*, i32)** %25, align 8
  %27 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %24, i64 0, i32 3, i32 175, i32 1, i64 0
  %28 = bitcast i64* %27 to i8*
  %29 = tail call zeroext i8 %26(i8* %28, i32 %19) #9
  br label %46

30:                                               ; preds = %5
  %31 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 1
  %34 = tail call i32 @_ZN7GrGLGpu10bindBufferE15GrGpuBufferTypePK8GrBuffer(%class.GrGLGpu* %8, i32 %32, %class.GrBuffer* %33) #9
  %35 = load %class.GrGLGpu*, %class.GrGLGpu** %7, align 8
  %36 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %35, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %class.GrGLContext*, %class.GrGLContext** %36, align 8
  %38 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %37, i64 0, i32 0, i32 1, i32 0
  %39 = load %struct.GrGLInterface*, %struct.GrGLInterface** %38, align 8
  %40 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 2
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %39, i64 0, i32 3, i32 176, i32 0
  %43 = load void (i8*, i8*)*, void (i8*, i8*)** %42, align 8
  %44 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %39, i64 0, i32 3, i32 176, i32 1, i64 0
  %45 = bitcast i64* %44 to i8*
  tail call void %43(i8* %45, i8* %41) #9
  br label %46

46:                                               ; preds = %15, %30, %5, %1
  %47 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 2
  store i8* null, i8** %47, align 8
  br label %48

48:                                               ; preds = %46, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10GrGLBuffer12onUpdateDataEPKvm(%class.GrGLBuffer*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 0, i32 7
  %5 = load %class.GrGpu*, %class.GrGpu** %4, align 8
  %6 = icmp eq %class.GrGpu* %5, null
  %7 = bitcast %class.GrGpu* %5 to %class.GrGLGpu*
  br i1 %6, label %126, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %10, %2
  br i1 %11, label %126, label %12

12:                                               ; preds = %8
  %13 = bitcast %class.GrGpu** %4 to %class.GrGLGpu**
  %14 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 1
  %17 = tail call i32 @_ZN7GrGLGpu10bindBufferE15GrGpuBufferTypePK8GrBuffer(%class.GrGLGpu* nonnull %7, i32 %15, %class.GrBuffer* %16) #9
  %18 = load %class.GrGLGpu*, %class.GrGLGpu** %13, align 8
  %19 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %18, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %class.GrGLContext*, %class.GrGLContext** %19, align 8
  %21 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %20, i64 0, i32 0, i32 4, i32 0
  %22 = load %class.GrGLCaps*, %class.GrGLCaps** %21, align 8
  %23 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %22, i64 0, i32 12
  %24 = bitcast i40* %23 to i64*
  %25 = load i64, i64* %24, align 4
  %26 = and i64 %25, 16384
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %97, label %28

28:                                               ; preds = %12
  %29 = load i64, i64* %9, align 8
  %30 = icmp eq i64 %29, %2
  %31 = and i64 %25, 16777216
  %32 = icmp eq i64 %31, 0
  br i1 %30, label %33, label %58

33:                                               ; preds = %28
  br i1 %32, label %43, label %34

34:                                               ; preds = %33
  %35 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %20, i64 0, i32 0, i32 1, i32 0
  %36 = load %struct.GrGLInterface*, %struct.GrGLInterface** %35, align 8
  %37 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %36, i64 0, i32 3, i32 17, i32 0
  %40 = load void (i8*, i32, i64, i8*, i32)*, void (i8*, i32, i64, i8*, i32)** %39, align 8
  %41 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %36, i64 0, i32 3, i32 17, i32 1, i64 0
  %42 = bitcast i64* %41 to i8*
  tail call void %40(i8* %42, i32 %17, i64 %2, i8* %1, i32 %38) #9
  br label %94

43:                                               ; preds = %33
  tail call void @_ZN7GrGLGpu25clearErrorsAndCheckForOOMEv(%class.GrGLGpu* %18) #9
  %44 = load %class.GrGLGpu*, %class.GrGLGpu** %13, align 8
  %45 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %44, i64 0, i32 1, i32 0, i32 0, i32 0
  %46 = load %class.GrGLContext*, %class.GrGLContext** %45, align 8
  %47 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %46, i64 0, i32 0, i32 1, i32 0
  %48 = load %struct.GrGLInterface*, %struct.GrGLInterface** %47, align 8
  %49 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %48, i64 0, i32 3, i32 17, i32 0
  %52 = load void (i8*, i32, i64, i8*, i32)*, void (i8*, i32, i64, i8*, i32)** %51, align 8
  %53 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %48, i64 0, i32 3, i32 17, i32 1, i64 0
  %54 = bitcast i64* %53 to i8*
  tail call void %52(i8* %54, i32 %17, i64 %2, i8* %1, i32 %50) #9
  %55 = load %class.GrGLGpu*, %class.GrGLGpu** %13, align 8
  %56 = tail call i32 @_ZN7GrGLGpu22getErrorAndCheckForOOMEv(%class.GrGLGpu* %55) #9
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %94, label %126

58:                                               ; preds = %28
  br i1 %32, label %68, label %59

59:                                               ; preds = %58
  %60 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %20, i64 0, i32 0, i32 1, i32 0
  %61 = load %struct.GrGLInterface*, %struct.GrGLInterface** %60, align 8
  %62 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 3
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %61, i64 0, i32 3, i32 17, i32 0
  %65 = load void (i8*, i32, i64, i8*, i32)*, void (i8*, i32, i64, i8*, i32)** %64, align 8
  %66 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %61, i64 0, i32 3, i32 17, i32 1, i64 0
  %67 = bitcast i64* %66 to i8*
  tail call void %65(i8* %67, i32 %17, i64 %29, i8* null, i32 %63) #9
  br label %84

68:                                               ; preds = %58
  tail call void @_ZN7GrGLGpu25clearErrorsAndCheckForOOMEv(%class.GrGLGpu* %18) #9
  %69 = load %class.GrGLGpu*, %class.GrGLGpu** %13, align 8
  %70 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %69, i64 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %class.GrGLContext*, %class.GrGLContext** %70, align 8
  %72 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %71, i64 0, i32 0, i32 1, i32 0
  %73 = load %struct.GrGLInterface*, %struct.GrGLInterface** %72, align 8
  %74 = load i64, i64* %9, align 8
  %75 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %73, i64 0, i32 3, i32 17, i32 0
  %78 = load void (i8*, i32, i64, i8*, i32)*, void (i8*, i32, i64, i8*, i32)** %77, align 8
  %79 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %73, i64 0, i32 3, i32 17, i32 1, i64 0
  %80 = bitcast i64* %79 to i8*
  tail call void %78(i8* %80, i32 %17, i64 %74, i8* null, i32 %76) #9
  %81 = load %class.GrGLGpu*, %class.GrGLGpu** %13, align 8
  %82 = tail call i32 @_ZN7GrGLGpu22getErrorAndCheckForOOMEv(%class.GrGLGpu* %81) #9
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %126

84:                                               ; preds = %59, %68
  %85 = load %class.GrGLGpu*, %class.GrGLGpu** %13, align 8
  %86 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %85, i64 0, i32 1, i32 0, i32 0, i32 0
  %87 = load %class.GrGLContext*, %class.GrGLContext** %86, align 8
  %88 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %87, i64 0, i32 0, i32 1, i32 0
  %89 = load %struct.GrGLInterface*, %struct.GrGLInterface** %88, align 8
  %90 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %89, i64 0, i32 3, i32 18, i32 0
  %91 = load void (i8*, i32, i64, i64, i8*)*, void (i8*, i32, i64, i64, i8*)** %90, align 8
  %92 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %89, i64 0, i32 3, i32 18, i32 1, i64 0
  %93 = bitcast i64* %92 to i8*
  tail call void %91(i8* %93, i32 %17, i64 0, i64 %2, i8* %1) #9
  br label %94

94:                                               ; preds = %34, %43, %84
  %95 = load i64, i64* %9, align 8
  %96 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 5
  store i64 %95, i64* %96, align 8
  br label %126

97:                                               ; preds = %12
  %98 = and i64 %25, 16777216
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %109, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %20, i64 0, i32 0, i32 1, i32 0
  %102 = load %struct.GrGLInterface*, %struct.GrGLInterface** %101, align 8
  %103 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %102, i64 0, i32 3, i32 17, i32 0
  %106 = load void (i8*, i32, i64, i8*, i32)*, void (i8*, i32, i64, i8*, i32)** %105, align 8
  %107 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %102, i64 0, i32 3, i32 17, i32 1, i64 0
  %108 = bitcast i64* %107 to i8*
  tail call void %106(i8* %108, i32 %17, i64 %2, i8* %1, i32 %104) #9
  br label %124

109:                                              ; preds = %97
  tail call void @_ZN7GrGLGpu25clearErrorsAndCheckForOOMEv(%class.GrGLGpu* %18) #9
  %110 = load %class.GrGLGpu*, %class.GrGLGpu** %13, align 8
  %111 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %110, i64 0, i32 1, i32 0, i32 0, i32 0
  %112 = load %class.GrGLContext*, %class.GrGLContext** %111, align 8
  %113 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %112, i64 0, i32 0, i32 1, i32 0
  %114 = load %struct.GrGLInterface*, %struct.GrGLInterface** %113, align 8
  %115 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 3
  %116 = load i32, i32* %115, align 8
  %117 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %114, i64 0, i32 3, i32 17, i32 0
  %118 = load void (i8*, i32, i64, i8*, i32)*, void (i8*, i32, i64, i8*, i32)** %117, align 8
  %119 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %114, i64 0, i32 3, i32 17, i32 1, i64 0
  %120 = bitcast i64* %119 to i8*
  tail call void %118(i8* %120, i32 %17, i64 %2, i8* %1, i32 %116) #9
  %121 = load %class.GrGLGpu*, %class.GrGLGpu** %13, align 8
  %122 = tail call i32 @_ZN7GrGLGpu22getErrorAndCheckForOOMEv(%class.GrGLGpu* %121) #9
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %100, %109
  %125 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 5
  store i64 %2, i64* %125, align 8
  br label %126

126:                                              ; preds = %68, %109, %124, %94, %43, %8, %3
  %127 = phi i1 [ false, %3 ], [ false, %8 ], [ false, %68 ], [ false, %109 ], [ true, %124 ], [ true, %94 ], [ false, %43 ]
  ret i1 %127
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10GrGLBuffer16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString(%class.GrGLBuffer* nocapture readonly, %class.SkTraceMemoryDump*, %class.SkString* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %6, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %4) #9
  %7 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  call void @_ZN8SkString9insertU32Emj(%class.SkString* nonnull %4, i64 -1, i32 %8) #9
  %9 = getelementptr inbounds %class.SkString, %class.SkString* %2, i64 0, i32 0, i32 0
  %10 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %9, align 8
  %11 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %10, i64 0, i32 2
  %12 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %6, align 8
  %13 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %12, i64 0, i32 2
  %14 = bitcast %class.SkTraceMemoryDump* %1 to void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)***
  %15 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)**, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)** %15, i64 2
  %17 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)** %16, align 8
  call void %17(%class.SkTraceMemoryDump* %1, i8* %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8* %13) #9
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #5

declare void @_ZNK13GrGpuResource20dumpMemoryStatisticsEP17SkTraceMemoryDump(%class.GrGpuResource*, %class.SkTraceMemoryDump*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK11GrGpuBuffer15getResourceTypeEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10GrGLBufferD2Ev(%class.GrGLBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTV10GrGLBuffer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTV10GrGLBuffer, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 0
  tail call void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10GrGLBufferD0Ev(%class.GrGLBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTV10GrGLBuffer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTV10GrGLBuffer, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 0, i32 0, i32 0
  tail call void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource* %4) #9
  %5 = bitcast %class.GrGLBuffer* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #8
  ret void
}

declare void @_ZNK11GrGpuBuffer17computeScratchKeyEP12GrScratchKey(%class.GrGpuBuffer*, %class.GrScratchKey*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK11GrGpuBuffer15onGpuMemorySizeEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK11GrGpuBuffer3refEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw add i32* %2, i32 1 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK11GrGpuBuffer5unrefEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 0, i32 1
  %3 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw add i32* %3, i32 -1 acq_rel
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %2, i64 -1
  %8 = bitcast %class.GrIORef* %7 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %8, i32 0) #9
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK11GrGpuBuffer11isCpuBufferEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn152_N10GrGLBufferD1Ev(%class.GrGLBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 -1, i32 0, i32 0, i32 5, i32 0, i32 0, i32 1, i32 0, i64 6
  %3 = bitcast i32* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTV10GrGLBuffer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 -1, i32 0, i32 0, i32 5, i32 0, i32 0, i32 1, i32 0, i64 44
  %5 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTV10GrGLBuffer, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = bitcast i32* %2 to %class.GrGpuResource*
  tail call void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource* %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn152_N10GrGLBufferD0Ev(%class.GrGLBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 -1, i32 0, i32 0, i32 5, i32 0, i32 0, i32 1, i32 0, i64 6
  %3 = bitcast i32* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTV10GrGLBuffer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %0, i64 -1, i32 0, i32 0, i32 5, i32 0, i32 0, i32 1, i32 0, i64 44
  %5 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTV10GrGLBuffer, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = bitcast i32* %2 to %class.GrGpuResource*
  tail call void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource* %6) #9
  %7 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn152_NK11GrGpuBuffer3refEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 -1, i32 0, i32 5, i32 0, i32 0, i32 1, i32 0, i64 0
  %3 = atomicrmw add i32* %2, i32 1 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn152_NK11GrGpuBuffer5unrefEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 -1, i32 0, i32 5, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %union.anon, %union.anon* %2, i64 0, i32 0, i64 0
  %4 = atomicrmw add i32* %3, i32 -1 acq_rel
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %union.anon, %union.anon* %2, i64 -1, i32 0, i64 5
  %8 = bitcast i32* %7 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %8, i32 0) #9
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZThn152_NK11GrGpuBuffer4sizeEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 -1, i32 0, i32 5
  %3 = getelementptr inbounds %class.GrScratchKey, %class.GrScratchKey* %2, i64 4, i32 0, i32 0, i32 1
  %4 = bitcast %union.anon* %3 to i64*
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn152_NK11GrGpuBuffer11isCpuBufferEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN7GrGLGpu25clearErrorsAndCheckForOOMEv(%class.GrGLGpu*) local_unnamed_addr #3

declare i32 @_ZN7GrGLGpu22getErrorAndCheckForOOMEv(%class.GrGLGpu*) local_unnamed_addr #3

declare void @_ZN13GrGpuResource16removeScratchKeyEv(%class.GrGpuResource*) local_unnamed_addr #3

declare void @_ZN8SkString9insertU32Emj(%class.SkString*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
