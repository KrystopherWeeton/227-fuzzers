; ModuleID = '../../chrome/browser/internal_auth.cc'
source_filename = "../../chrome/browser/internal_auth.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [40 x i8] }
%"class.base::LazyInstance.9" = type { i64, [112 x i8] }
%"class.base::LazyInstance.18" = type { i64, [48 x i8] }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%class.InternalAuthVerificationService = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", i64, %"class.base::circular_deque", i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.crypto::HMAC"* }
%"class.crypto::HMAC" = type { i32, i8, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i8* }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { i64*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.InternalAuthGenerationService = type { %"class.std::__1::unique_ptr", i64, %"class.base::circular_deque" }
%"class.std::__1::allocator" = type { i8 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::internal::circular_deque_iterator" = type { %"class.base::internal::circular_deque_const_iterator" }
%"class.base::internal::circular_deque_const_iterator" = type { %"class.base::circular_deque"*, i64 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN31InternalAuthVerificationService14VerifyPassportERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_RKNS0_3mapIS6_S6_NS0_4lessIS6_EENS4_INS0_4pairIS7_S6_EEEEEE = comdat any

$_ZN31InternalAuthVerificationService9ChangeKeyERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE = comdat any

$_ZN29InternalAuthGenerationService16GeneratePassportERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS0_3mapIS6_S6_NS0_4lessIS6_EENS4_INS0_4pairIS7_S6_EEEEEEl = comdat any

$_ZN29InternalAuthGenerationService14GenerateNewKeyEv = comdat any

$_ZN31InternalAuthVerificationService17PreVerifyPassportERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_l = comdat any

$_ZN4base14circular_dequeIlE5eraseENS_8internal29circular_deque_const_iteratorIlEES4_ = comdat any

$_ZNK4base8internal12VectorBufferIlEixEm = comdat any

$_ZN4base14circular_dequeIlE7emplaceIJRKlEEENS_8internal23circular_deque_iteratorIlEENS5_29circular_deque_const_iteratorIlEEDpOT_ = comdat any

$_ZN4base14circular_dequeIlE11MakeRoomForEmPNS_8internal23circular_deque_iteratorIlEES5_ = comdat any

$_ZN4base8internal12VectorBufferIlEixEm = comdat any

$_ZN4base14circular_dequeIlE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeIlE10MoveBufferERNS_8internal12VectorBufferIlEEmmPS4_PmS7_ = comdat any

$_ZN4base8internal12VectorBufferIlE9MoveRangeIlLi0EEEvPlS4_S4_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN29InternalAuthGenerationService13GetUnusedTickERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE = comdat any

$_ZN4base12LazyInstanceI31InternalAuthVerificationServiceNS_8internal34DestructorAtExitLazyInstanceTraitsIS1_EEE6OnExitEPv = comdat any

$_ZN4base22LazyInstanceTraitsBaseI31InternalAuthVerificationServiceE14CallDestructorEPS1_ = comdat any

$_ZN4base14circular_dequeIlED2Ev = comdat any

$_ZN4base12LazyInstanceI29InternalAuthGenerationServiceNS_8internal34DestructorAtExitLazyInstanceTraitsIS1_EEE6OnExitEPv = comdat any

@_ZN12_GLOBAL__N_127g_verification_service_lockE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZN12_GLOBAL__N_122g_verification_serviceE = internal global %"class.base::LazyInstance.9" zeroinitializer, align 8
@_ZN24InternalAuthVerification28verification_window_seconds_E = hidden local_unnamed_addr global i32 0, align 4
@_ZN12_GLOBAL__N_120g_generation_serviceE = internal global %"class.base::LazyInstance.18" zeroinitializer, align 8
@.str = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@_ZZN12_GLOBAL__N_19IsVarSaneERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE13kAllowedChars = internal constant [64 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_\00", align 16
@.str.3 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"from_begin: 0x\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c", from_end: 0x\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c", to: 0x\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN24InternalAuthVerification14VerifyPassportERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_RKNS0_3mapIS6_S6_NS0_4lessIS6_EENS4_INS0_4pairIS7_S6_EEEEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::map"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_verification_service_lockE, i64 0, i32 0) acquire, align 8
  %5 = icmp ugt i64 %4, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_verification_service_lockE, i64 0, i32 0)) #13
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_verification_service_lockE, i64 0, i32 1, i64 0) to %"class.base::internal::LockImpl"*)) #13
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_verification_service_lockE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_verification_service_lockE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_verification_service_lockE to i8*)) #13
  br label %11

9:                                                ; preds = %6
  %10 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_verification_service_lockE, i64 0, i32 0) acquire, align 8
  br label %11

11:                                               ; preds = %3, %8, %9
  %12 = phi i64 [ %4, %3 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_verification_service_lockE, i64 0, i32 1, i64 0) to i64), %8 ], [ %10, %9 ]
  %13 = inttoptr i64 %12 to %"class.base::Lock"*
  %14 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %13, i64 0, i32 0, i32 0
  %15 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %14) #13
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %19, label %17, !prof !2

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %13, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %18) #13
  br label %19

19:                                               ; preds = %11, %17
  %20 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 0) acquire, align 8
  %21 = icmp ugt i64 %20, 1
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 0)) #13
  br i1 %23, label %24, label %25

24:                                               ; preds = %22
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 1, i64 0), i8 0, i64 112, i1 false) #13
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceI31InternalAuthVerificationServiceNS_8internal34DestructorAtExitLazyInstanceTraitsIS1_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE to i8*)) #13
  br label %27

25:                                               ; preds = %22
  %26 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 0) acquire, align 8
  br label %27

27:                                               ; preds = %19, %24, %25
  %28 = phi i64 [ %20, %19 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 1, i64 0) to i64), %24 ], [ %26, %25 ]
  %29 = inttoptr i64 %28 to %class.InternalAuthVerificationService*
  %30 = tail call zeroext i1 @_ZN31InternalAuthVerificationService14VerifyPassportERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_RKNS0_3mapIS6_S6_NS0_4lessIS6_EENS4_INS0_4pairIS7_S6_EEEEEE(%class.InternalAuthVerificationService* %29, %"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::map"* dereferenceable(24) %2)
  %31 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %14) #13
  ret i1 %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN31InternalAuthVerificationService14VerifyPassportERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_RKNS0_3mapIS6_S6_NS0_4lessIS6_EENS4_INS0_4pairIS7_S6_EEEEEE(%class.InternalAuthVerificationService*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::map"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = tail call i64 @_ZN4base4Time3NowEv() #13
  %8 = sdiv i64 %7, 10000
  %9 = icmp slt i64 %7, 10000000000
  %10 = select i1 %9, i64 0, i64 %8
  %11 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = tail call i64 @_ZN31InternalAuthVerificationService17PreVerifyPassportERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_l(%class.InternalAuthVerificationService* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 %10)
  store i64 %12, i64* %5, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %298, label %14

14:                                               ; preds = %4
  %15 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_117IsVarValueMapSaneERKNSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEE(%"class.std::__1::map"* dereferenceable(24) %3)
  br i1 %15, label %16, label %298

16:                                               ; preds = %14
  %17 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #13
  %20 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load %"class.crypto::HMAC"*, %"class.crypto::HMAC"** %20, align 8
  call fastcc void @_ZN12_GLOBAL__N_114CreatePassportERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS0_3mapIS6_S6_NS0_4lessIS6_EENS4_INS0_4pairIS7_S6_EEEEEElPKN6crypto4HMACEPS6_(%"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::map"* dereferenceable(24) %3, i64 %12, %"class.crypto::HMAC"* %21, %"class.std::__1::basic_string"* nonnull %6)
  %22 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i64 %27, i64 %28
  %30 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = load i64, i64* %19, align 8
  %35 = zext i8 %32 to i64
  %36 = select i1 %33, i64 %34, i64 %35
  %37 = icmp eq i64 %29, %36
  br i1 %37, label %38, label %68

38:                                               ; preds = %16
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %42 = select i1 %25, i8* %40, i8* %41
  %43 = load i8*, i8** %18, align 8
  %44 = select i1 %33, i8* %43, i8* %17
  %45 = icmp eq i64 %29, 0
  br i1 %25, label %52, label %46

46:                                               ; preds = %38
  br i1 %45, label %145, label %47

47:                                               ; preds = %46
  %48 = ptrtoint i8* %40 to i64
  %49 = trunc i64 %48 to i8
  %50 = load i8, i8* %44, align 1
  %51 = icmp eq i8 %50, %49
  br i1 %51, label %53, label %68

52:                                               ; preds = %38
  br i1 %45, label %145, label %65

53:                                               ; preds = %47, %60
  %54 = phi i64 [ %57, %60 ], [ %28, %47 ]
  %55 = phi i8* [ %58, %60 ], [ %41, %47 ]
  %56 = phi i8* [ %61, %60 ], [ %44, %47 ]
  %57 = add i64 %54, -1
  %58 = getelementptr inbounds i8, i8* %55, i64 1
  %59 = icmp eq i64 %57, 0
  br i1 %59, label %145, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds i8, i8* %56, i64 1
  %62 = load i8, i8* %58, align 1
  %63 = load i8, i8* %61, align 1
  %64 = icmp eq i8 %62, %63
  br i1 %64, label %53, label %68

65:                                               ; preds = %52
  %66 = call i32 @bcmp(i8* %42, i8* %44, i64 %29) #13
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %145, label %68

68:                                               ; preds = %60, %47, %65, %16
  %69 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 4
  %70 = load i64, i64* %69, align 8
  %71 = load i32, i32* @_ZN24InternalAuthVerification28verification_window_seconds_E, align 4
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %80

73:                                               ; preds = %68
  %74 = mul i32 %71, 100
  %75 = icmp sgt i32 %74, 1
  br i1 %75, label %76, label %78

76:                                               ; preds = %73
  %77 = icmp slt i32 %74, 2000
  br i1 %77, label %78, label %80

78:                                               ; preds = %76, %73
  %79 = phi i32 [ %74, %76 ], [ 1, %73 ]
  br label %80

80:                                               ; preds = %68, %76, %78
  %81 = phi i32 [ %79, %78 ], [ 2000, %76 ], [ 2000, %68 ]
  %82 = sext i32 %81 to i64
  %83 = add nsw i64 %70, %82
  %84 = icmp slt i64 %83, %12
  br i1 %84, label %291, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 1
  %87 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  br label %96

94:                                               ; preds = %85
  %95 = zext i8 %89 to i64
  br label %96

96:                                               ; preds = %91, %94
  %97 = phi i64 [ %93, %91 ], [ %95, %94 ]
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %291, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %101 = load %"class.crypto::HMAC"*, %"class.crypto::HMAC"** %100, align 8
  %102 = icmp eq %"class.crypto::HMAC"* %101, null
  br i1 %102, label %291, label %103

103:                                              ; preds = %99
  call fastcc void @_ZN12_GLOBAL__N_114CreatePassportERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS0_3mapIS6_S6_NS0_4lessIS6_EENS4_INS0_4pairIS7_S6_EEEEEElPKN6crypto4HMACEPS6_(%"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::map"* dereferenceable(24) %3, i64 %12, %"class.crypto::HMAC"* nonnull %101, %"class.std::__1::basic_string"* nonnull %6)
  %104 = load i8, i8* %23, align 1
  %105 = icmp slt i8 %104, 0
  %106 = load i64, i64* %26, align 8
  %107 = zext i8 %104 to i64
  %108 = select i1 %105, i64 %106, i64 %107
  %109 = load i8, i8* %31, align 1
  %110 = icmp slt i8 %109, 0
  %111 = load i64, i64* %19, align 8
  %112 = zext i8 %109 to i64
  %113 = select i1 %110, i64 %111, i64 %112
  %114 = icmp eq i64 %108, %113
  br i1 %114, label %115, label %291

115:                                              ; preds = %103
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  %118 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %119 = select i1 %105, i8* %117, i8* %118
  %120 = load i8*, i8** %18, align 8
  %121 = select i1 %110, i8* %120, i8* %17
  %122 = icmp eq i64 %108, 0
  br i1 %105, label %129, label %123

123:                                              ; preds = %115
  br i1 %122, label %145, label %124

124:                                              ; preds = %123
  %125 = ptrtoint i8* %117 to i64
  %126 = trunc i64 %125 to i8
  %127 = load i8, i8* %121, align 1
  %128 = icmp eq i8 %127, %126
  br i1 %128, label %130, label %291

129:                                              ; preds = %115
  br i1 %122, label %145, label %142

130:                                              ; preds = %124, %137
  %131 = phi i64 [ %134, %137 ], [ %107, %124 ]
  %132 = phi i8* [ %135, %137 ], [ %118, %124 ]
  %133 = phi i8* [ %138, %137 ], [ %121, %124 ]
  %134 = add i64 %131, -1
  %135 = getelementptr inbounds i8, i8* %132, i64 1
  %136 = icmp eq i64 %134, 0
  br i1 %136, label %145, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds i8, i8* %133, i64 1
  %139 = load i8, i8* %135, align 1
  %140 = load i8, i8* %138, align 1
  %141 = icmp eq i8 %139, %140
  br i1 %141, label %130, label %291

142:                                              ; preds = %129
  %143 = call i32 @bcmp(i8* %119, i8* %121, i64 %108) #13
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %291

145:                                              ; preds = %53, %130, %65, %142, %123, %129, %46, %52
  %146 = phi i8 [ %32, %65 ], [ %109, %142 ], [ %109, %123 ], [ %109, %129 ], [ %32, %46 ], [ %32, %52 ], [ %109, %130 ], [ %32, %53 ]
  %147 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 5
  %148 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 5, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 5, i32 2
  %151 = load i64, i64* %150, align 8
  %152 = icmp ult i64 %151, %149
  br i1 %152, label %155, label %153

153:                                              ; preds = %145
  %154 = sub i64 %151, %149
  br label %160

155:                                              ; preds = %145
  %156 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 5, i32 0, i32 1
  %157 = load i64, i64* %156, align 8
  %158 = sub i64 %151, %149
  %159 = add i64 %158, %157
  br label %160

160:                                              ; preds = %155, %153
  %161 = phi i64 [ %154, %153 ], [ %159, %155 ]
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %204, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 5, i32 0, i32 1
  %165 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %147, i64 0, i32 0
  br label %166

166:                                              ; preds = %200, %163
  %167 = phi i64 [ %149, %163 ], [ %202, %200 ]
  %168 = phi i64 [ %161, %163 ], [ %201, %200 ]
  %169 = lshr i64 %168, 1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %187, label %171

171:                                              ; preds = %166
  %172 = load i64, i64* %148, align 8
  %173 = icmp ult i64 %167, %172
  br i1 %173, label %177, label %174

174:                                              ; preds = %171
  %175 = sub i64 %167, %172
  %176 = load i64, i64* %164, align 8
  br label %181

177:                                              ; preds = %171
  %178 = load i64, i64* %164, align 8
  %179 = sub i64 %167, %172
  %180 = add i64 %179, %178
  br label %181

181:                                              ; preds = %177, %174
  %182 = phi i64 [ %176, %174 ], [ %178, %177 ]
  %183 = phi i64 [ %175, %174 ], [ %180, %177 ]
  %184 = add i64 %172, %169
  %185 = add i64 %184, %183
  %186 = urem i64 %185, %182
  br label %187

187:                                              ; preds = %181, %166
  %188 = phi i64 [ %167, %166 ], [ %186, %181 ]
  %189 = tail call dereferenceable(8) i64* @_ZNK4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %165, i64 %188) #13
  %190 = load i64, i64* %189, align 8
  %191 = load i64, i64* %5, align 8
  %192 = icmp slt i64 %190, %191
  br i1 %192, label %193, label %200

193:                                              ; preds = %187
  %194 = add i64 %188, 1
  %195 = load i64, i64* %164, align 8
  %196 = icmp eq i64 %194, %195
  %197 = select i1 %196, i64 0, i64 %194
  %198 = xor i64 %169, -1
  %199 = add i64 %168, %198
  br label %200

200:                                              ; preds = %193, %187
  %201 = phi i64 [ %199, %193 ], [ %169, %187 ]
  %202 = phi i64 [ %197, %193 ], [ %167, %187 ]
  %203 = icmp eq i64 %201, 0
  br i1 %203, label %204, label %166

204:                                              ; preds = %200, %160
  %205 = phi i64 [ %149, %160 ], [ %202, %200 ]
  %206 = call { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeIlE7emplaceIJRKlEEENS_8internal23circular_deque_iteratorIlEENS5_29circular_deque_const_iteratorIlEEDpOT_(%"class.base::circular_deque"* %147, %"class.base::circular_deque"* %147, i64 %205, i64* nonnull dereferenceable(8) %5) #13
  %207 = load i64, i64* %148, align 8
  %208 = load i64, i64* %150, align 8
  %209 = icmp ult i64 %208, %207
  br i1 %209, label %212, label %210

210:                                              ; preds = %204
  %211 = sub i64 %208, %207
  br label %217

212:                                              ; preds = %204
  %213 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 5, i32 0, i32 1
  %214 = load i64, i64* %213, align 8
  %215 = sub i64 %208, %207
  %216 = add i64 %215, %214
  br label %217

217:                                              ; preds = %210, %212
  %218 = phi i64 [ %211, %210 ], [ %216, %212 ]
  %219 = icmp ugt i64 %218, 50
  br i1 %219, label %220, label %291

220:                                              ; preds = %217
  %221 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 6
  %222 = load i32, i32* @_ZN24InternalAuthVerification28verification_window_seconds_E, align 4
  %223 = icmp sgt i32 %222, 0
  br i1 %223, label %224, label %231

224:                                              ; preds = %220
  %225 = mul i32 %222, 100
  %226 = icmp sgt i32 %225, 1
  br i1 %226, label %227, label %229

227:                                              ; preds = %224
  %228 = icmp slt i32 %225, 2000
  br i1 %228, label %229, label %231

229:                                              ; preds = %227, %224
  %230 = phi i32 [ %225, %227 ], [ 1, %224 ]
  br label %231

231:                                              ; preds = %220, %227, %229
  %232 = phi i32 [ %230, %229 ], [ 2000, %227 ], [ 2000, %220 ]
  %233 = sext i32 %232 to i64
  %234 = sub nsw i64 %10, %233
  %235 = load i64, i64* %221, align 8
  %236 = icmp slt i64 %235, %234
  %237 = select i1 %236, i64 %234, i64 %235
  store i64 %237, i64* %221, align 8
  br i1 %209, label %240, label %238

238:                                              ; preds = %231
  %239 = sub i64 %208, %207
  br label %245

240:                                              ; preds = %231
  %241 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 5, i32 0, i32 1
  %242 = load i64, i64* %241, align 8
  %243 = sub i64 %208, %207
  %244 = add i64 %243, %242
  br label %245

245:                                              ; preds = %240, %238
  %246 = phi i64 [ %239, %238 ], [ %244, %240 ]
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %288, label %248

248:                                              ; preds = %245
  %249 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 5, i32 0, i32 1
  %250 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %147, i64 0, i32 0
  br label %251

251:                                              ; preds = %284, %248
  %252 = phi i64 [ %207, %248 ], [ %286, %284 ]
  %253 = phi i64 [ %246, %248 ], [ %285, %284 ]
  %254 = lshr i64 %253, 1
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %272, label %256

256:                                              ; preds = %251
  %257 = load i64, i64* %148, align 8
  %258 = icmp ult i64 %252, %257
  br i1 %258, label %262, label %259

259:                                              ; preds = %256
  %260 = sub i64 %252, %257
  %261 = load i64, i64* %249, align 8
  br label %266

262:                                              ; preds = %256
  %263 = load i64, i64* %249, align 8
  %264 = sub i64 %252, %257
  %265 = add i64 %264, %263
  br label %266

266:                                              ; preds = %262, %259
  %267 = phi i64 [ %261, %259 ], [ %263, %262 ]
  %268 = phi i64 [ %260, %259 ], [ %265, %262 ]
  %269 = add i64 %257, %254
  %270 = add i64 %269, %268
  %271 = urem i64 %270, %267
  br label %272

272:                                              ; preds = %266, %251
  %273 = phi i64 [ %252, %251 ], [ %271, %266 ]
  %274 = call dereferenceable(8) i64* @_ZNK4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %250, i64 %273) #13
  %275 = load i64, i64* %274, align 8
  %276 = icmp sgt i64 %275, %237
  br i1 %276, label %284, label %277

277:                                              ; preds = %272
  %278 = add i64 %273, 1
  %279 = load i64, i64* %249, align 8
  %280 = icmp eq i64 %278, %279
  %281 = select i1 %280, i64 0, i64 %278
  %282 = xor i64 %254, -1
  %283 = add i64 %253, %282
  br label %284

284:                                              ; preds = %272, %277
  %285 = phi i64 [ %283, %277 ], [ %254, %272 ]
  %286 = phi i64 [ %281, %277 ], [ %252, %272 ]
  %287 = icmp eq i64 %285, 0
  br i1 %287, label %288, label %251

288:                                              ; preds = %284, %245
  %289 = phi i64 [ %207, %245 ], [ %286, %284 ]
  %290 = call { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeIlE5eraseENS_8internal29circular_deque_const_iteratorIlEES4_(%"class.base::circular_deque"* %147, %"class.base::circular_deque"* %147, i64 %207, %"class.base::circular_deque"* %147, i64 %289)
  br label %291

291:                                              ; preds = %137, %124, %142, %103, %217, %288, %96, %99, %80
  %292 = phi i8 [ %32, %80 ], [ %32, %99 ], [ %32, %96 ], [ %109, %142 ], [ %146, %288 ], [ %146, %217 ], [ %109, %103 ], [ %109, %124 ], [ %109, %137 ]
  %293 = phi i1 [ false, %80 ], [ false, %99 ], [ false, %96 ], [ false, %142 ], [ true, %288 ], [ true, %217 ], [ false, %103 ], [ false, %124 ], [ false, %137 ]
  %294 = icmp slt i8 %292, 0
  br i1 %294, label %295, label %297

295:                                              ; preds = %291
  %296 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %296) #14
  br label %297

297:                                              ; preds = %291, %295
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #13
  br label %298

298:                                              ; preds = %14, %4, %297
  %299 = phi i1 [ %293, %297 ], [ false, %4 ], [ false, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  ret i1 %299
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24InternalAuthVerification9ChangeKeyERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_verification_service_lockE, i64 0, i32 0) acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_verification_service_lockE, i64 0, i32 0)) #13
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_verification_service_lockE, i64 0, i32 1, i64 0) to %"class.base::internal::LockImpl"*)) #13
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_verification_service_lockE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_verification_service_lockE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_verification_service_lockE to i8*)) #13
  br label %9

7:                                                ; preds = %4
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_verification_service_lockE, i64 0, i32 0) acquire, align 8
  br label %9

9:                                                ; preds = %1, %6, %7
  %10 = phi i64 [ %2, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_verification_service_lockE, i64 0, i32 1, i64 0) to i64), %6 ], [ %8, %7 ]
  %11 = inttoptr i64 %10 to %"class.base::Lock"*
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %11, i64 0, i32 0, i32 0
  %13 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %12) #13
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15, !prof !2

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %11, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %16) #13
  br label %17

17:                                               ; preds = %9, %15
  %18 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 0) acquire, align 8
  %19 = icmp ugt i64 %18, 1
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 0)) #13
  br i1 %21, label %22, label %23

22:                                               ; preds = %20
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 1, i64 0), i8 0, i64 112, i1 false) #13
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceI31InternalAuthVerificationServiceNS_8internal34DestructorAtExitLazyInstanceTraitsIS1_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE to i8*)) #13
  br label %25

23:                                               ; preds = %20
  %24 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 0) acquire, align 8
  br label %25

25:                                               ; preds = %17, %22, %23
  %26 = phi i64 [ %18, %17 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 1, i64 0) to i64), %22 ], [ %24, %23 ]
  %27 = inttoptr i64 %26 to %class.InternalAuthVerificationService*
  tail call void @_ZN31InternalAuthVerificationService9ChangeKeyERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.InternalAuthVerificationService* %27, %"class.std::__1::basic_string"* dereferenceable(24) %0)
  %28 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN31InternalAuthVerificationService9ChangeKeyERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.InternalAuthVerificationService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 0
  %5 = bitcast %"class.std::__1::basic_string"* %3 to <2 x i64>*
  %6 = load <2 x i64>, <2 x i64>* %5, align 8
  %7 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %10 = bitcast %class.InternalAuthVerificationService* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #13
  %11 = bitcast %class.InternalAuthVerificationService* %0 to <2 x i64>*
  store <2 x i64> %6, <2 x i64>* %11, align 8
  %12 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %8, i64* %12, align 8
  %13 = bitcast %class.InternalAuthVerificationService* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = lshr i64 %8, 56
  %16 = trunc i64 %15 to i8
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %2
  %19 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = extractelement <2 x i64> %6, i32 0
  %21 = inttoptr i64 %20 to i8*
  store i8 0, i8* %21, align 1
  store i64 0, i64* %19, align 8
  br label %23

22:                                               ; preds = %2
  store i8 0, i8* %10, align 1
  store i8 0, i8* %14, align 1
  br label %23

23:                                               ; preds = %18, %22
  %24 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 3
  %25 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 2
  %26 = bitcast %"class.std::__1::unique_ptr"* %24 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  store %"class.crypto::HMAC"* null, %"class.crypto::HMAC"** %30, align 8
  %31 = icmp eq i64 %27, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %23
  %33 = inttoptr i64 %27 to %"class.crypto::HMAC"*
  tail call void @_ZN6crypto4HMACD1Ev(%"class.crypto::HMAC"* nonnull %33) #13
  %34 = inttoptr i64 %27 to i8*
  tail call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %23, %32
  %36 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = zext i8 %38 to i64
  %43 = select i1 %39, i64 %41, i64 %42
  %44 = icmp eq i64 %43, 16
  br i1 %44, label %45, label %91

45:                                               ; preds = %35
  %46 = tail call i8* @_Znwm(i64 32) #14
  %47 = bitcast i8* %46 to %"class.crypto::HMAC"*
  tail call void @_ZN6crypto4HMACC1ENS0_13HashAlgorithmE(%"class.crypto::HMAC"* nonnull %47, i32 1) #13
  %48 = ptrtoint i8* %46 to i64
  %49 = load i8, i8* %37, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %54 = select i1 %50, i8* %52, i8* %53
  %55 = load i64, i64* %40, align 8
  %56 = zext i8 %49 to i64
  %57 = select i1 %50, i64 %55, i64 %56
  %58 = tail call zeroext i1 @_ZN6crypto4HMAC4InitEPKhm(%"class.crypto::HMAC"* nonnull %47, i8* %54, i64 %57) #13
  br i1 %58, label %59, label %87

59:                                               ; preds = %45
  %60 = load i64, i64* %28, align 8
  store i64 %48, i64* %28, align 8
  %61 = icmp eq %"class.std::__1::basic_string"* %4, %1
  br i1 %61, label %80, label %62

62:                                               ; preds = %59
  %63 = load i8, i8* %14, align 1
  %64 = icmp slt i8 %63, 0
  %65 = load i8, i8* %37, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %64, label %73, label %67

67:                                               ; preds = %62
  br i1 %66, label %69, label %68

68:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %53, i64 24, i1 false) #13
  br label %80

69:                                               ; preds = %67
  %70 = load i8*, i8** %51, align 8
  %71 = load i64, i64* %40, align 8
  %72 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %4, i8* %70, i64 %71) #13
  br label %80

73:                                               ; preds = %62
  %74 = load i8*, i8** %51, align 8
  %75 = load i64, i64* %40, align 8
  %76 = zext i8 %65 to i64
  %77 = select i1 %66, i8* %74, i8* %53
  %78 = select i1 %66, i64 %75, i64 %76
  %79 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %4, i8* %77, i64 %78) #13
  br label %80

80:                                               ; preds = %73, %69, %68, %59
  %81 = tail call i64 @_ZN4base4Time3NowEv() #13
  %82 = sdiv i64 %81, 10000
  %83 = icmp slt i64 %81, 10000000000
  %84 = select i1 %83, i64 0, i64 %82
  %85 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 4
  store i64 %84, i64* %85, align 8
  %86 = icmp eq i64 %60, 0
  br i1 %86, label %91, label %87

87:                                               ; preds = %45, %80
  %88 = phi i64 [ %60, %80 ], [ %48, %45 ]
  %89 = inttoptr i64 %88 to %"class.crypto::HMAC"*
  tail call void @_ZN6crypto4HMACD1Ev(%"class.crypto::HMAC"* nonnull %89) #13
  %90 = inttoptr i64 %88 to i8*
  tail call void @_ZdlPv(i8* %90) #14
  br label %91

91:                                               ; preds = %87, %80, %35
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN24InternalAuthVerification29get_verification_window_ticksEv() local_unnamed_addr #2 align 2 {
  %1 = load i32, i32* @_ZN24InternalAuthVerification28verification_window_seconds_E, align 4
  %2 = icmp sgt i32 %1, 0
  br i1 %2, label %3, label %10

3:                                                ; preds = %0
  %4 = mul i32 %1, 100
  %5 = icmp sgt i32 %4, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = icmp slt i32 %4, 2000
  br i1 %7, label %8, label %10

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %4, %6 ], [ 1, %3 ]
  br label %10

10:                                               ; preds = %0, %6, %8
  %11 = phi i32 [ %9, %8 ], [ 2000, %6 ], [ 2000, %0 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22InternalAuthGeneration16GeneratePassportERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS0_3mapIS6_S6_NS0_4lessIS6_EENS4_INS0_4pairIS7_S6_EEEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::map"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.18", %"class.base::LazyInstance.18"* @_ZN12_GLOBAL__N_120g_generation_serviceE, i64 0, i32 0) acquire, align 8
  %5 = icmp ugt i64 %4, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.18", %"class.base::LazyInstance.18"* @_ZN12_GLOBAL__N_120g_generation_serviceE, i64 0, i32 0)) #13
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance.18", %"class.base::LazyInstance.18"* @_ZN12_GLOBAL__N_120g_generation_serviceE, i64 0, i32 1, i64 0), i8 0, i64 48, i1 false) #13
  tail call void @_ZN29InternalAuthGenerationService14GenerateNewKeyEv(%class.InternalAuthGenerationService* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.18", %"class.base::LazyInstance.18"* @_ZN12_GLOBAL__N_120g_generation_serviceE, i64 0, i32 1, i64 0) to %class.InternalAuthGenerationService*)) #13
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.18", %"class.base::LazyInstance.18"* @_ZN12_GLOBAL__N_120g_generation_serviceE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.18", %"class.base::LazyInstance.18"* @_ZN12_GLOBAL__N_120g_generation_serviceE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceI29InternalAuthGenerationServiceNS_8internal34DestructorAtExitLazyInstanceTraitsIS1_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance.18"* @_ZN12_GLOBAL__N_120g_generation_serviceE to i8*)) #13
  br label %11

9:                                                ; preds = %6
  %10 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.18", %"class.base::LazyInstance.18"* @_ZN12_GLOBAL__N_120g_generation_serviceE, i64 0, i32 0) acquire, align 8
  br label %11

11:                                               ; preds = %3, %8, %9
  %12 = phi i64 [ %4, %3 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.18", %"class.base::LazyInstance.18"* @_ZN12_GLOBAL__N_120g_generation_serviceE, i64 0, i32 1, i64 0) to i64), %8 ], [ %10, %9 ]
  %13 = inttoptr i64 %12 to %class.InternalAuthGenerationService*
  tail call void @_ZN29InternalAuthGenerationService16GeneratePassportERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS0_3mapIS6_S6_NS0_4lessIS6_EENS4_INS0_4pairIS7_S6_EEEEEEl(%"class.std::__1::basic_string"* sret %0, %class.InternalAuthGenerationService* %13, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::map"* dereferenceable(24) %2, i64 0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN29InternalAuthGenerationService16GeneratePassportERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS0_3mapIS6_S6_NS0_4lessIS6_EENS4_INS0_4pairIS7_S6_EEEEEEl(%"class.std::__1::basic_string"* noalias sret, %class.InternalAuthGenerationService*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::map"* dereferenceable(24), i64) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  store i64 %4, i64* %6, align 8
  %8 = icmp eq i64 %4, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  %10 = tail call i64 @_ZN29InternalAuthGenerationService13GetUnusedTickERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.InternalAuthGenerationService* %1, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  store i64 %10, i64* %6, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %9
  %13 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #13
  br label %83

14:                                               ; preds = %9, %5
  %15 = phi i64 [ %10, %9 ], [ %4, %5 ]
  %16 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_117IsVarValueMapSaneERKNSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEE(%"class.std::__1::map"* dereferenceable(24) %3)
  br i1 %16, label %19, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #13
  br label %83

19:                                               ; preds = %14
  %20 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #13
  %21 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.crypto::HMAC"*, %"class.crypto::HMAC"** %21, align 8
  call fastcc void @_ZN12_GLOBAL__N_114CreatePassportERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS0_3mapIS6_S6_NS0_4lessIS6_EENS4_INS0_4pairIS7_S6_EEEEEElPKN6crypto4HMACEPS6_(%"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::map"* dereferenceable(24) %3, i64 %15, %"class.crypto::HMAC"* %22, %"class.std::__1::basic_string"* nonnull %7)
  %23 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %1, i64 0, i32 2
  %24 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %1, i64 0, i32 2, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %1, i64 0, i32 2, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, %25
  br i1 %28, label %31, label %29

29:                                               ; preds = %19
  %30 = sub i64 %27, %25
  br label %36

31:                                               ; preds = %19
  %32 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %1, i64 0, i32 2, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %27, %25
  %35 = add i64 %34, %33
  br label %36

36:                                               ; preds = %31, %29
  %37 = phi i64 [ %30, %29 ], [ %35, %31 ]
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %79, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %1, i64 0, i32 2, i32 0, i32 1
  %41 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %23, i64 0, i32 0
  br label %42

42:                                               ; preds = %75, %39
  %43 = phi i64 [ %25, %39 ], [ %77, %75 ]
  %44 = phi i64 [ %37, %39 ], [ %76, %75 ]
  %45 = lshr i64 %44, 1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %42
  %48 = load i64, i64* %24, align 8
  %49 = icmp ult i64 %43, %48
  br i1 %49, label %53, label %50

50:                                               ; preds = %47
  %51 = sub i64 %43, %48
  %52 = load i64, i64* %40, align 8
  br label %57

53:                                               ; preds = %47
  %54 = load i64, i64* %40, align 8
  %55 = sub i64 %43, %48
  %56 = add i64 %55, %54
  br label %57

57:                                               ; preds = %53, %50
  %58 = phi i64 [ %52, %50 ], [ %54, %53 ]
  %59 = phi i64 [ %51, %50 ], [ %56, %53 ]
  %60 = add i64 %48, %45
  %61 = add i64 %60, %59
  %62 = urem i64 %61, %58
  br label %63

63:                                               ; preds = %57, %42
  %64 = phi i64 [ %43, %42 ], [ %62, %57 ]
  %65 = tail call dereferenceable(8) i64* @_ZNK4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %41, i64 %64) #13
  %66 = load i64, i64* %65, align 8
  %67 = icmp slt i64 %66, %15
  br i1 %67, label %68, label %75

68:                                               ; preds = %63
  %69 = add i64 %64, 1
  %70 = load i64, i64* %40, align 8
  %71 = icmp eq i64 %69, %70
  %72 = select i1 %71, i64 0, i64 %69
  %73 = xor i64 %45, -1
  %74 = add i64 %44, %73
  br label %75

75:                                               ; preds = %68, %63
  %76 = phi i64 [ %74, %68 ], [ %45, %63 ]
  %77 = phi i64 [ %72, %68 ], [ %43, %63 ]
  %78 = icmp eq i64 %76, 0
  br i1 %78, label %79, label %42

79:                                               ; preds = %75, %36
  %80 = phi i64 [ %25, %36 ], [ %77, %75 ]
  %81 = call { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeIlE7emplaceIJRKlEEENS_8internal23circular_deque_iteratorIlEENS5_29circular_deque_const_iteratorIlEEDpOT_(%"class.base::circular_deque"* %23, %"class.base::circular_deque"* %23, i64 %80, i64* nonnull dereferenceable(8) %6) #13
  %82 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* nonnull align 8 %20, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #13
  br label %83

83:                                               ; preds = %79, %17, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22InternalAuthGeneration14GenerateNewKeyEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.18", %"class.base::LazyInstance.18"* @_ZN12_GLOBAL__N_120g_generation_serviceE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.18", %"class.base::LazyInstance.18"* @_ZN12_GLOBAL__N_120g_generation_serviceE, i64 0, i32 0)) #13
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance.18", %"class.base::LazyInstance.18"* @_ZN12_GLOBAL__N_120g_generation_serviceE, i64 0, i32 1, i64 0), i8 0, i64 48, i1 false) #13
  tail call void @_ZN29InternalAuthGenerationService14GenerateNewKeyEv(%class.InternalAuthGenerationService* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.18", %"class.base::LazyInstance.18"* @_ZN12_GLOBAL__N_120g_generation_serviceE, i64 0, i32 1, i64 0) to %class.InternalAuthGenerationService*)) #13
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.18", %"class.base::LazyInstance.18"* @_ZN12_GLOBAL__N_120g_generation_serviceE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.18", %"class.base::LazyInstance.18"* @_ZN12_GLOBAL__N_120g_generation_serviceE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceI29InternalAuthGenerationServiceNS_8internal34DestructorAtExitLazyInstanceTraitsIS1_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance.18"* @_ZN12_GLOBAL__N_120g_generation_serviceE to i8*)) #13
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.18", %"class.base::LazyInstance.18"* @_ZN12_GLOBAL__N_120g_generation_serviceE, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  %9 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.18", %"class.base::LazyInstance.18"* @_ZN12_GLOBAL__N_120g_generation_serviceE, i64 0, i32 1, i64 0) to i64), %5 ], [ %7, %6 ]
  %10 = inttoptr i64 %9 to %class.InternalAuthGenerationService*
  tail call void @_ZN29InternalAuthGenerationService14GenerateNewKeyEv(%class.InternalAuthGenerationService* %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN29InternalAuthGenerationService14GenerateNewKeyEv(%class.InternalAuthGenerationService*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = tail call i8* @_Znwm(i64 32) #14
  %4 = bitcast i8* %3 to %"class.crypto::HMAC"*
  tail call void @_ZN6crypto4HMACC1ENS0_13HashAlgorithmE(%"class.crypto::HMAC"* nonnull %4, i32 1) #13
  %5 = ptrtoint i8* %3 to i64
  %6 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN4base17RandBytesAsStringEm(%"class.std::__1::basic_string"* nonnull sret %2, i64 16) #13
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = load i8*, i8** %7, align 8
  %15 = select i1 %13, i8* %14, i8* %6
  %16 = load i64, i64* %8, align 8
  %17 = zext i8 %12 to i64
  %18 = select i1 %13, i64 %16, i64 %17
  %19 = call zeroext i1 @_ZN6crypto4HMAC4InitEPKhm(%"class.crypto::HMAC"* nonnull %4, i8* %15, i64 %18) #13
  br i1 %19, label %20, label %47

20:                                               ; preds = %1
  %21 = bitcast %class.InternalAuthGenerationService* %0 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %5, i64* %21, align 8
  %23 = call i64 @_ZN4base4Time3NowEv() #13
  %24 = sdiv i64 %23, 10000
  %25 = icmp slt i64 %23, 10000000000
  %26 = select i1 %25, i64 0, i64 %24
  %27 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %0, i64 0, i32 1
  store i64 %26, i64* %27, align 8
  %28 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 0) acquire, align 8
  %29 = icmp ugt i64 %28, 1
  br i1 %29, label %35, label %30

30:                                               ; preds = %20
  %31 = call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 0)) #13
  br i1 %31, label %32, label %33

32:                                               ; preds = %30
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 1, i64 0), i8 0, i64 112, i1 false) #13
  call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceI31InternalAuthVerificationServiceNS_8internal34DestructorAtExitLazyInstanceTraitsIS1_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE to i8*)) #13
  br label %35

33:                                               ; preds = %30
  %34 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 0) acquire, align 8
  br label %35

35:                                               ; preds = %20, %32, %33
  %36 = phi i64 [ %28, %20 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN12_GLOBAL__N_122g_verification_serviceE, i64 0, i32 1, i64 0) to i64), %32 ], [ %34, %33 ]
  %37 = inttoptr i64 %36 to %class.InternalAuthVerificationService*
  call void @_ZN31InternalAuthVerificationService9ChangeKeyERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.InternalAuthVerificationService* %37, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2)
  %38 = load i8, i8* %11, align 1
  %39 = icmp slt i8 %38, 0
  %40 = load i64, i64* %8, align 8
  %41 = zext i8 %38 to i64
  %42 = select i1 %39, i64 %40, i64 %41
  %43 = icmp sgt i64 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %35
  %45 = load i8*, i8** %7, align 8
  %46 = select i1 %39, i8* %45, i8* %6
  call void @llvm.memset.p0i8.i64(i8* align 1 %46, i8 0, i64 %42, i1 false)
  br label %47

47:                                               ; preds = %44, %35, %1
  %48 = phi i64 [ %5, %1 ], [ %22, %35 ], [ %22, %44 ]
  %49 = load i8, i8* %11, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %47
  %52 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %52) #14
  br label %53

53:                                               ; preds = %47, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  %54 = icmp eq i64 %48, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %53
  %56 = inttoptr i64 %48 to %"class.crypto::HMAC"*
  call void @_ZN6crypto4HMACD1Ev(%"class.crypto::HMAC"* nonnull %56) #13
  %57 = inttoptr i64 %48 to i8*
  call void @_ZdlPv(i8* %57) #14
  br label %58

58:                                               ; preds = %53, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN31InternalAuthVerificationService17PreVerifyPassportERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_l(%class.InternalAuthVerificationService*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca i64, align 8
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %9 to i64
  %14 = select i1 %10, i64 %12, i64 %13
  %15 = icmp eq i64 %14, 64
  br i1 %15, label %16, label %187

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %20 = select i1 %10, i8* %18, i8* %19
  %21 = tail call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %20, i64 64) #13
  br i1 %21, label %22, label %187

22:                                               ; preds = %16
  %23 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %25 to i64
  %30 = select i1 %26, i64 %28, i64 %29
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %187, label %32

32:                                               ; preds = %22
  %33 = xor i1 %26, true
  %34 = icmp ult i64 %28, 513
  %35 = or i1 %34, %33
  br i1 %35, label %36, label %187

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %40 = select i1 %26, i8* %38, i8* %39
  %41 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %40, i64 %30) #13
  br i1 %41, label %42, label %187

42:                                               ; preds = %36
  %43 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %2, i8 signext 10, i64 0) #13
  %44 = icmp eq i64 %43, -1
  br i1 %44, label %45, label %187

45:                                               ; preds = %42
  %46 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 6
  %47 = load i64, i64* %46, align 8
  %48 = icmp slt i64 %47, %3
  br i1 %48, label %49, label %187

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 4
  %51 = load i64, i64* %50, align 8
  %52 = add nsw i64 %51, 1000000
  %53 = icmp slt i64 %52, %3
  br i1 %53, label %187, label %54

54:                                               ; preds = %49
  %55 = bitcast %class.InternalAuthVerificationService* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  br label %64

62:                                               ; preds = %54
  %63 = zext i8 %57 to i64
  br label %64

64:                                               ; preds = %59, %62
  %65 = phi i64 [ %61, %59 ], [ %63, %62 ]
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %187, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %69 = load %"class.crypto::HMAC"*, %"class.crypto::HMAC"** %68, align 8
  %70 = icmp eq %"class.crypto::HMAC"* %69, null
  br i1 %70, label %187, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #13
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  %76 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 44, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %75) #13
  %77 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #13
  store i64 0, i64* %6, align 8
  %78 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  %82 = load i8*, i8** %73, align 8
  %83 = select i1 %81, i8* %82, i8* %72
  %84 = load i64, i64* %74, align 8
  %85 = zext i8 %80 to i64
  %86 = select i1 %81, i64 %84, i64 %85
  %87 = call zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8* %83, i64 %86, i64* nonnull %6) #13
  br i1 %87, label %88, label %180

88:                                               ; preds = %71
  %89 = load i64, i64* %6, align 8
  %90 = load i64, i64* %46, align 8
  %91 = icmp sgt i64 %89, %90
  br i1 %91, label %92, label %180

92:                                               ; preds = %88
  %93 = load i64, i64* %50, align 8
  %94 = add nsw i64 %93, 1000000
  %95 = icmp sgt i64 %89, %94
  br i1 %95, label %180, label %96

96:                                               ; preds = %92
  %97 = load i32, i32* @_ZN24InternalAuthVerification28verification_window_seconds_E, align 4
  %98 = icmp sgt i32 %97, 0
  br i1 %98, label %99, label %106

99:                                               ; preds = %96
  %100 = mul i32 %97, 100
  %101 = icmp sgt i32 %100, 1
  br i1 %101, label %102, label %104

102:                                              ; preds = %99
  %103 = icmp slt i32 %100, 2000
  br i1 %103, label %104, label %106

104:                                              ; preds = %102, %99
  %105 = phi i32 [ %100, %102 ], [ 1, %99 ]
  br label %106

106:                                              ; preds = %96, %102, %104
  %107 = phi i32 [ %105, %104 ], [ 2000, %102 ], [ 2000, %96 ]
  %108 = sext i32 %107 to i64
  %109 = sub nsw i64 %3, %108
  %110 = icmp slt i64 %89, %109
  br i1 %110, label %180, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 5
  %113 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 5, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 5, i32 2
  %116 = load i64, i64* %115, align 8
  %117 = icmp ult i64 %116, %114
  br i1 %117, label %120, label %118

118:                                              ; preds = %111
  %119 = sub i64 %116, %114
  br label %125

120:                                              ; preds = %111
  %121 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 5, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = sub i64 %116, %114
  %124 = add i64 %123, %122
  br label %125

125:                                              ; preds = %120, %118
  %126 = phi i64 [ %119, %118 ], [ %124, %120 ]
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %169, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 5, i32 0, i32 1
  %130 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %112, i64 0, i32 0
  br label %131

131:                                              ; preds = %165, %128
  %132 = phi i64 [ %114, %128 ], [ %167, %165 ]
  %133 = phi i64 [ %126, %128 ], [ %166, %165 ]
  %134 = lshr i64 %133, 1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %152, label %136

136:                                              ; preds = %131
  %137 = load i64, i64* %113, align 8
  %138 = icmp ult i64 %132, %137
  br i1 %138, label %142, label %139

139:                                              ; preds = %136
  %140 = sub i64 %132, %137
  %141 = load i64, i64* %129, align 8
  br label %146

142:                                              ; preds = %136
  %143 = load i64, i64* %129, align 8
  %144 = sub i64 %132, %137
  %145 = add i64 %144, %143
  br label %146

146:                                              ; preds = %142, %139
  %147 = phi i64 [ %141, %139 ], [ %143, %142 ]
  %148 = phi i64 [ %140, %139 ], [ %145, %142 ]
  %149 = add i64 %137, %134
  %150 = add i64 %149, %148
  %151 = urem i64 %150, %147
  br label %152

152:                                              ; preds = %146, %131
  %153 = phi i64 [ %132, %131 ], [ %151, %146 ]
  %154 = call dereferenceable(8) i64* @_ZNK4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %130, i64 %153) #13
  %155 = load i64, i64* %154, align 8
  %156 = load i64, i64* %6, align 8
  %157 = icmp slt i64 %155, %156
  br i1 %157, label %158, label %165

158:                                              ; preds = %152
  %159 = add i64 %153, 1
  %160 = load i64, i64* %129, align 8
  %161 = icmp eq i64 %159, %160
  %162 = select i1 %161, i64 0, i64 %159
  %163 = xor i64 %134, -1
  %164 = add i64 %133, %163
  br label %165

165:                                              ; preds = %158, %152
  %166 = phi i64 [ %164, %158 ], [ %134, %152 ]
  %167 = phi i64 [ %162, %158 ], [ %132, %152 ]
  %168 = icmp eq i64 %166, 0
  br i1 %168, label %169, label %131

169:                                              ; preds = %165, %125
  %170 = phi i64 [ %89, %125 ], [ %156, %165 ]
  %171 = phi i64 [ %114, %125 ], [ %167, %165 ]
  %172 = icmp eq i64 %171, %116
  br i1 %172, label %180, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %112, i64 0, i32 0
  %175 = call dereferenceable(8) i64* @_ZNK4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %174, i64 %171) #13
  %176 = load i64, i64* %6, align 8
  %177 = load i64, i64* %175, align 8
  %178 = icmp slt i64 %176, %177
  %179 = select i1 %178, i64 %176, i64 0
  br label %180

180:                                              ; preds = %169, %173, %106, %92, %71, %88
  %181 = phi i64 [ 0, %88 ], [ 0, %71 ], [ 0, %92 ], [ 0, %106 ], [ %179, %173 ], [ %170, %169 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #13
  %182 = load i8, i8* %79, align 1
  %183 = icmp slt i8 %182, 0
  br i1 %183, label %184, label %186

184:                                              ; preds = %180
  %185 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %185) #14
  br label %186

186:                                              ; preds = %180, %184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #13
  br label %187

187:                                              ; preds = %32, %22, %36, %67, %64, %49, %42, %16, %4, %45, %186
  %188 = phi i64 [ %181, %186 ], [ 0, %45 ], [ 0, %4 ], [ 0, %16 ], [ 0, %42 ], [ 0, %49 ], [ 0, %64 ], [ 0, %67 ], [ 0, %36 ], [ 0, %22 ], [ 0, %32 ]
  ret i64 %188
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_117IsVarValueMapSaneERKNSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEE(%"class.std::__1::map"* dereferenceable(24)) unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 16
  br i1 %4, label %117, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = icmp eq %"class.std::__1::__tree_end_node"* %7, %8
  br i1 %9, label %117, label %10

10:                                               ; preds = %5, %114
  %11 = phi %"class.std::__1::__tree_end_node"* [ %115, %114 ], [ %7, %5 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 4
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 5
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %15 to i64
  %21 = select i1 %16, i64 %19, i64 %20
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %117, label %23

23:                                               ; preds = %10
  %24 = xor i1 %16, true
  %25 = icmp ult i64 %19, 513
  %26 = or i1 %25, %24
  br i1 %26, label %27, label %117

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::__tree_end_node"* %12 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast %"class.std::__1::__tree_end_node"* %12 to i8*
  %31 = select i1 %16, i8* %29, i8* %30
  %32 = tail call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %31, i64 %21) #13
  br i1 %32, label %33, label %117

33:                                               ; preds = %27
  %34 = load i8, i8* %14, align 1
  %35 = icmp slt i8 %34, 0
  %36 = load i8*, i8** %28, align 8
  %37 = load i64, i64* %18, align 8
  %38 = zext i8 %34 to i64
  %39 = select i1 %35, i8* %36, i8* %30
  %40 = select i1 %35, i64 %37, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %33
  %43 = getelementptr inbounds i8, i8* %39, i64 %40
  br label %44

44:                                               ; preds = %50, %42
  %45 = phi i8* [ %39, %42 ], [ %51, %50 ]
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = tail call i8* @memchr(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @_ZZN12_GLOBAL__N_19IsVarSaneERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE13kAllowedChars, i64 0, i64 0), i32 %47, i64 63) #13
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds i8, i8* %45, i64 1
  %52 = icmp eq i8* %51, %43
  br i1 %52, label %58, label %44

53:                                               ; preds = %44
  %54 = ptrtoint i8* %45 to i64
  %55 = ptrtoint i8* %39 to i64
  %56 = sub i64 %54, %55
  %57 = icmp eq i64 %56, -1
  br i1 %57, label %58, label %117

58:                                               ; preds = %50, %33, %53
  %59 = load i8, i8* %39, align 1
  %60 = add i8 %59, -48
  %61 = icmp ugt i8 %60, 9
  br i1 %61, label %62, label %117

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 7
  %64 = bitcast %"class.std::__1::__tree_end_node"* %63 to %"class.std::__1::basic_string"*
  %65 = bitcast %"class.std::__1::__tree_end_node"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 8
  %70 = bitcast %"class.std::__1::__tree_end_node"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = xor i1 %68, true
  %73 = icmp ult i64 %71, 513
  %74 = or i1 %73, %72
  br i1 %74, label %75, label %117

75:                                               ; preds = %62
  %76 = bitcast %"class.std::__1::__tree_end_node"* %63 to i8**
  %77 = load i8*, i8** %76, align 8
  %78 = bitcast %"class.std::__1::__tree_end_node"* %63 to i8*
  %79 = select i1 %68, i8* %77, i8* %78
  %80 = zext i8 %67 to i64
  %81 = select i1 %68, i64 %71, i64 %80
  %82 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %79, i64 %81) #13
  br i1 %82, label %83, label %117

83:                                               ; preds = %75
  %84 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %64, i8 signext 10, i64 0) #13
  %85 = icmp eq i64 %84, -1
  br i1 %85, label %86, label %117

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 1, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, null
  br i1 %89, label %90, label %98

90:                                               ; preds = %86
  %91 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node_base"*
  %92 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 2
  %93 = bitcast %"class.std::__1::__tree_end_node"* %92 to %"class.std::__1::__tree_end_node"**
  %94 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %93, align 8
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %94, i64 0, i32 0
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %95, align 8
  %97 = icmp eq %"class.std::__1::__tree_node_base"* %96, %91
  br i1 %97, label %114, label %105

98:                                               ; preds = %86, %98
  %99 = phi %"class.std::__1::__tree_node_base"* [ %101, %98 ], [ %88, %86 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node_base"* %101, null
  br i1 %102, label %103, label %98

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0
  br label %114

105:                                              ; preds = %90, %105
  %106 = phi %"class.std::__1::__tree_end_node"** [ %109, %105 ], [ %93, %90 ]
  %107 = bitcast %"class.std::__1::__tree_end_node"** %106 to %"class.std::__1::__tree_node_base"**
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %108, i64 0, i32 2
  %110 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %109, align 8
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %110, i64 0, i32 0
  %112 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %111, align 8
  %113 = icmp eq %"class.std::__1::__tree_node_base"* %112, %108
  br i1 %113, label %114, label %105

114:                                              ; preds = %105, %90, %103
  %115 = phi %"class.std::__1::__tree_end_node"* [ %104, %103 ], [ %94, %90 ], [ %110, %105 ]
  %116 = icmp eq %"class.std::__1::__tree_end_node"* %115, %8
  br i1 %116, label %117, label %10

117:                                              ; preds = %58, %83, %53, %27, %10, %23, %75, %62, %114, %5, %1
  %118 = phi i1 [ false, %1 ], [ true, %5 ], [ false, %58 ], [ false, %83 ], [ false, %53 ], [ false, %27 ], [ false, %10 ], [ false, %23 ], [ false, %75 ], [ false, %62 ], [ true, %114 ]
  ret i1 %118
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_114CreatePassportERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS0_3mapIS6_S6_NS0_4lessIS6_EENS4_INS0_4pairIS7_S6_EEEEEElPKN6crypto4HMACEPS6_(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::map"* readonly dereferenceable(24), i64, %"class.crypto::HMAC"*, %"class.std::__1::basic_string"* nocapture) unnamed_addr #0 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 16
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.base::BasicStringPiece", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %27, align 8
  br label %30

28:                                               ; preds = %5
  %29 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  store i8 0, i8* %29, align 1
  store i8 0, i8* %21, align 1
  br label %30

30:                                               ; preds = %24, %28
  %31 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %35 = tail call i8* @_Znwm(i64 80) #14
  store i8* %35, i8** %32, align 16
  %36 = bitcast i64* %33 to <2 x i64>*
  store <2 x i64> <i64 64, i64 -9223372036854775728>, <2 x i64>* %36, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %35, i8 48, i64 64, i1 false) #13
  %37 = getelementptr inbounds i8, i8* %35, i64 64
  store i8 0, i8* %37, align 1
  %38 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #13
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #13
  %41 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #13
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 24, i1 false) #13, !alias.scope !3
  %45 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1, !noalias !3
  %48 = icmp slt i8 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8, !noalias !3
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8, !noalias !3
  %53 = zext i8 %47 to i64
  %54 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %55 = select i1 %48, i64 %50, i64 %53
  %56 = select i1 %48, i8* %52, i8* %54
  %57 = add i64 %55, 1
  %58 = icmp ugt i64 %57, -17
  br i1 %58, label %59, label %61

59:                                               ; preds = %30
  %60 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %60) #15
  unreachable

61:                                               ; preds = %30
  %62 = icmp ult i64 %57, 23
  br i1 %62, label %68, label %63

63:                                               ; preds = %61
  %64 = add nuw i64 %55, 17
  %65 = and i64 %64, -16
  %66 = tail call i8* @_Znwm(i64 %65) #14
  store i8* %66, i8** %42, align 8, !alias.scope !3
  %67 = or i64 %65, -9223372036854775808
  store i64 %67, i64* %44, align 8, !alias.scope !3
  store i64 %55, i64* %43, align 8, !alias.scope !3
  br label %73

68:                                               ; preds = %61
  %69 = trunc i64 %55 to i8
  %70 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  store i8 %69, i8* %71, align 1, !alias.scope !3
  %72 = icmp eq i64 %55, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %68, %63
  %74 = phi i8* [ %66, %63 ], [ %41, %68 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %74, i8* align 1 %56, i64 %55, i1 false) #13
  br label %75

75:                                               ; preds = %73, %68
  %76 = phi i8* [ %41, %68 ], [ %74, %73 ]
  %77 = getelementptr inbounds i8, i8* %76, i64 %55
  store i8 0, i8* %77, align 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %11, i8 signext 10) #13
  %78 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %41, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #13
  %80 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #13
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 24, i1 false) #13
  %83 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  store i8 0, i8* %80, align 8
  store i8 0, i8* %84, align 1
  %85 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 0
  %86 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %88 = icmp eq %"class.std::__1::__tree_end_node"* %86, %87
  br i1 %88, label %212, label %89

89:                                               ; preds = %75
  %90 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %91 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %92 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %96 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %105

105:                                              ; preds = %206, %89
  %106 = phi %"class.std::__1::__tree_end_node"* [ %86, %89 ], [ %207, %206 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #13
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 0, i64 24, i1 false) #13, !alias.scope !6
  %108 = bitcast %"class.std::__1::__tree_end_node"* %107 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1, !noalias !6
  %111 = icmp slt i8 %110, 0
  %112 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 5
  %113 = bitcast %"class.std::__1::__tree_end_node"* %112 to i64*
  %114 = load i64, i64* %113, align 8, !noalias !6
  %115 = bitcast %"class.std::__1::__tree_end_node"* %107 to i8**
  %116 = load i8*, i8** %115, align 8, !noalias !6
  %117 = zext i8 %110 to i64
  %118 = bitcast %"class.std::__1::__tree_end_node"* %107 to i8*
  %119 = select i1 %111, i64 %114, i64 %117
  %120 = select i1 %111, i8* %116, i8* %118
  %121 = add i64 %119, 1
  %122 = icmp ugt i64 %121, -17
  br i1 %122, label %123, label %125

123:                                              ; preds = %105
  %124 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %124) #15
  unreachable

125:                                              ; preds = %105
  %126 = icmp ult i64 %121, 23
  br i1 %126, label %132, label %127

127:                                              ; preds = %125
  %128 = add nuw i64 %119, 17
  %129 = and i64 %128, -16
  %130 = call i8* @_Znwm(i64 %129) #14
  store i8* %130, i8** %93, align 8, !alias.scope !6
  %131 = or i64 %129, -9223372036854775808
  store i64 %131, i64* %95, align 8, !alias.scope !6
  store i64 %119, i64* %94, align 8, !alias.scope !6
  br label %135

132:                                              ; preds = %125
  %133 = trunc i64 %119 to i8
  store i8 %133, i8* %97, align 1, !alias.scope !6
  %134 = icmp eq i64 %119, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %132, %127
  %136 = phi i8* [ %130, %127 ], [ %92, %132 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %136, i8* align 1 %120, i64 %119, i1 false) #13
  br label %137

137:                                              ; preds = %135, %132
  %138 = phi i8* [ %92, %132 ], [ %136, %135 ]
  %139 = getelementptr inbounds i8, i8* %138, i64 %119
  store i8 0, i8* %139, align 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %8, i8 signext 61) #13
  %140 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 7
  %141 = bitcast %"class.std::__1::__tree_end_node"* %140 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  %143 = load i8, i8* %142, align 1, !noalias !9
  %144 = icmp slt i8 %143, 0
  %145 = bitcast %"class.std::__1::__tree_end_node"* %140 to i8**
  %146 = load i8*, i8** %145, align 8, !noalias !9
  %147 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 8
  %148 = bitcast %"class.std::__1::__tree_end_node"* %147 to i64*
  %149 = load i64, i64* %148, align 8, !noalias !9
  %150 = bitcast %"class.std::__1::__tree_end_node"* %140 to i8*
  %151 = zext i8 %143 to i64
  %152 = select i1 %144, i8* %146, i8* %150
  %153 = select i1 %144, i64 %149, i64 %151
  %154 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %152, i64 %153) #13, !noalias !9
  %155 = bitcast %"class.std::__1::basic_string"* %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %91, i8* align 8 %155, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %155, i8 0, i64 24, i1 false) #13, !noalias !9
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %7, i8 signext 10) #13, !noalias !12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %91, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 0, i64 24, i1 false) #13, !noalias !12
  %156 = load i8, i8* %99, align 1
  %157 = icmp slt i8 %156, 0
  %158 = load i8*, i8** %100, align 8
  %159 = load i64, i64* %101, align 8
  %160 = zext i8 %156 to i64
  %161 = select i1 %157, i8* %158, i8* %90
  %162 = select i1 %157, i64 %159, i64 %160
  %163 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %161, i64 %162) #13
  %164 = load i8, i8* %99, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %137
  %167 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %167) #14
  br label %168

168:                                              ; preds = %166, %137
  %169 = load i8, i8* %103, align 1
  %170 = icmp slt i8 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %168
  %172 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %172) #14
  br label %173

173:                                              ; preds = %171, %168
  %174 = load i8, i8* %97, align 1
  %175 = icmp slt i8 %174, 0
  br i1 %175, label %176, label %178

176:                                              ; preds = %173
  %177 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %177) #14
  br label %178

178:                                              ; preds = %176, %173
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #13
  %179 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 1, i32 0
  %180 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %179, align 8
  %181 = icmp eq %"class.std::__1::__tree_node_base"* %180, null
  br i1 %181, label %182, label %190

182:                                              ; preds = %178
  %183 = bitcast %"class.std::__1::__tree_end_node"* %106 to %"class.std::__1::__tree_node_base"*
  %184 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 2
  %185 = bitcast %"class.std::__1::__tree_end_node"* %184 to %"class.std::__1::__tree_end_node"**
  %186 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %185, align 8
  %187 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %186, i64 0, i32 0
  %188 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %187, align 8
  %189 = icmp eq %"class.std::__1::__tree_node_base"* %188, %183
  br i1 %189, label %206, label %197

190:                                              ; preds = %178, %190
  %191 = phi %"class.std::__1::__tree_node_base"* [ %193, %190 ], [ %180, %178 ]
  %192 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 0, i32 0
  %193 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %192, align 8
  %194 = icmp eq %"class.std::__1::__tree_node_base"* %193, null
  br i1 %194, label %195, label %190

195:                                              ; preds = %190
  %196 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 0
  br label %206

197:                                              ; preds = %182, %197
  %198 = phi %"class.std::__1::__tree_end_node"** [ %201, %197 ], [ %185, %182 ]
  %199 = bitcast %"class.std::__1::__tree_end_node"** %198 to %"class.std::__1::__tree_node_base"**
  %200 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %199, align 8
  %201 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %200, i64 0, i32 2
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %201, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %200
  br i1 %205, label %206, label %197

206:                                              ; preds = %197, %195, %182
  %207 = phi %"class.std::__1::__tree_end_node"* [ %196, %195 ], [ %186, %182 ], [ %202, %197 ]
  %208 = icmp eq %"class.std::__1::__tree_end_node"* %207, %87
  br i1 %208, label %209, label %105

209:                                              ; preds = %206
  %210 = load i8, i8* %84, align 1, !noalias !15
  %211 = load i64, i64* %82, align 8, !noalias !15
  br label %212

212:                                              ; preds = %209, %75
  %213 = phi i64 [ %211, %209 ], [ 0, %75 ]
  %214 = phi i8 [ %210, %209 ], [ 0, %75 ]
  %215 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %215) #13
  %216 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %216) #13
  %217 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %219 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %216, i8 0, i64 24, i1 false) #13, !alias.scope !15
  %220 = icmp slt i8 %214, 0
  %221 = load i8*, i8** %81, align 8, !noalias !15
  %222 = zext i8 %214 to i64
  %223 = select i1 %220, i64 %213, i64 %222
  %224 = select i1 %220, i8* %221, i8* %80
  %225 = add i64 %223, 1
  %226 = icmp ugt i64 %225, -17
  br i1 %226, label %227, label %229

227:                                              ; preds = %212
  %228 = bitcast %"class.std::__1::basic_string"* %14 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %228) #15
  unreachable

229:                                              ; preds = %212
  %230 = icmp ult i64 %225, 23
  br i1 %230, label %236, label %231

231:                                              ; preds = %229
  %232 = add nuw i64 %223, 17
  %233 = and i64 %232, -16
  %234 = call i8* @_Znwm(i64 %233) #14
  store i8* %234, i8** %217, align 8, !alias.scope !15
  %235 = or i64 %233, -9223372036854775808
  store i64 %235, i64* %219, align 8, !alias.scope !15
  store i64 %223, i64* %218, align 8, !alias.scope !15
  br label %241

236:                                              ; preds = %229
  %237 = trunc i64 %223 to i8
  %238 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %239 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %238, i64 0, i32 1, i32 0
  store i8 %237, i8* %239, align 1, !alias.scope !15
  %240 = icmp eq i64 %223, 0
  br i1 %240, label %243, label %241

241:                                              ; preds = %236, %231
  %242 = phi i8* [ %234, %231 ], [ %216, %236 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %242, i8* align 1 %224, i64 %223, i1 false) #13
  br label %243

243:                                              ; preds = %236, %241
  %244 = phi i8* [ %216, %236 ], [ %242, %241 ]
  %245 = getelementptr inbounds i8, i8* %244, i64 %223
  store i8 0, i8* %245, align 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %14, i8 signext 10) #13
  %246 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %246) #13
  call void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* nonnull sret %15, i64 %2) #13
  %247 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %248 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %247, i64 0, i32 1, i32 0
  %249 = load i8, i8* %248, align 1, !noalias !18
  %250 = icmp slt i8 %249, 0
  %251 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = load i8*, i8** %251, align 8, !noalias !18
  %253 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %254 = load i64, i64* %253, align 8, !noalias !18
  %255 = zext i8 %249 to i64
  %256 = select i1 %250, i8* %252, i8* %246
  %257 = select i1 %250, i64 %254, i64 %255
  %258 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %14, i8* %256, i64 %257) #13, !noalias !18
  %259 = bitcast %"class.std::__1::basic_string"* %258 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %215, i8* align 8 %259, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %259, i8 0, i64 24, i1 false) #13, !noalias !18
  %260 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %261 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %260, i64 0, i32 1, i32 0
  %262 = load i8, i8* %261, align 1
  %263 = icmp slt i8 %262, 0
  %264 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = load i8*, i8** %264, align 8
  %266 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %267 = load i64, i64* %266, align 8
  %268 = zext i8 %262 to i64
  %269 = select i1 %263, i8* %265, i8* %215
  %270 = select i1 %263, i64 %267, i64 %268
  %271 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %269, i64 %270) #13
  %272 = load i8, i8* %261, align 1
  %273 = icmp slt i8 %272, 0
  br i1 %273, label %274, label %276

274:                                              ; preds = %243
  %275 = load i8*, i8** %264, align 8
  call void @_ZdlPv(i8* %275) #14
  br label %276

276:                                              ; preds = %243, %274
  %277 = load i8, i8* %248, align 1
  %278 = icmp slt i8 %277, 0
  br i1 %278, label %279, label %281

279:                                              ; preds = %276
  %280 = load i8*, i8** %251, align 8
  call void @_ZdlPv(i8* %280) #14
  br label %281

281:                                              ; preds = %276, %279
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %246) #13
  %282 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %283 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %282, i64 0, i32 1, i32 0
  %284 = load i8, i8* %283, align 1
  %285 = icmp slt i8 %284, 0
  br i1 %285, label %286, label %288

286:                                              ; preds = %281
  %287 = load i8*, i8** %217, align 8
  call void @_ZdlPv(i8* %287) #14
  br label %288

288:                                              ; preds = %281, %286
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %216) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %215) #13
  %289 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %289) #13
  %290 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %289, i8 0, i64 24, i1 false) #13
  %291 = call i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"* nonnull %16, i64 33) #13
  %292 = load i8, i8* %79, align 1
  %293 = icmp slt i8 %292, 0
  %294 = load i8*, i8** %39, align 8
  %295 = select i1 %293, i8* %294, i8* %38
  %296 = load i64, i64* %40, align 8
  %297 = zext i8 %292 to i64
  %298 = select i1 %293, i64 %296, i64 %297
  %299 = call zeroext i1 @_ZNK6crypto4HMAC4SignEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPhm(%"class.crypto::HMAC"* %3, i8* %295, i64 %298, i8* %291, i64 32) #13
  br i1 %299, label %302, label %300

300:                                              ; preds = %288
  %301 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %370

302:                                              ; preds = %288
  %303 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %304 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %304) #13
  %305 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %304, i8 0, i64 24, i1 false) #13
  %307 = bitcast %"class.base::BasicStringPiece"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %307) #13
  %308 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %18, i64 0, i32 0
  %309 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %310 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %309, i64 0, i32 1, i32 0
  %311 = load i8, i8* %310, align 1
  %312 = icmp slt i8 %311, 0
  %313 = load i8*, i8** %290, align 8
  %314 = select i1 %312, i8* %313, i8* %289
  store i8* %314, i8** %308, align 8
  %315 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %18, i64 0, i32 1
  %316 = load i64, i64* %303, align 8
  %317 = zext i8 %311 to i64
  %318 = select i1 %312, i64 %316, i64 %317
  store i64 %318, i64* %315, align 8
  call void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %18, %"class.std::__1::basic_string"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %307) #13
  %319 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %320 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %319, i64 0, i32 1, i32 0
  %321 = load i8, i8* %320, align 1
  %322 = icmp slt i8 %321, 0
  %323 = load i64, i64* %306, align 8
  %324 = zext i8 %321 to i64
  %325 = select i1 %322, i64 %323, i64 %324
  %326 = icmp eq i64 %325, 44
  br i1 %326, label %327, label %362

327:                                              ; preds = %302
  %328 = load i8*, i8** %305, align 8
  %329 = select i1 %322, i8* %328, i8* %304
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %35, i8* align 1 %329, i64 44, i1 false) #13
  %330 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %330) #13
  %331 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %333 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %333, i8 -86, i64 24, i1 false)
  call void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* nonnull sret %19, i64 %2) #13
  %334 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %335 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %334, i64 0, i32 1, i32 0
  %336 = load i8, i8* %335, align 1
  %337 = icmp slt i8 %336, 0
  %338 = load i64, i64* %332, align 8
  %339 = zext i8 %336 to i64
  %340 = select i1 %337, i64 %338, i64 %339
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %347, label %342

342:                                              ; preds = %327
  %343 = load i8*, i8** %331, align 8
  %344 = select i1 %337, i8* %343, i8* %330
  %345 = sub nsw i64 0, %340
  %346 = getelementptr inbounds i8, i8* %37, i64 %345
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %346, i8* align 1 %344, i64 %340, i1 false) #13
  br label %347

347:                                              ; preds = %327, %342
  %348 = bitcast %"class.std::__1::basic_string"* %4 to <2 x i64>*
  %349 = load <2 x i64>, <2 x i64>* %348, align 8
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %352, i8* nonnull align 16 %31, i64 24, i1 false) #13
  %353 = bitcast %"class.std::__1::basic_string"* %9 to <2 x i64>*
  store <2 x i64> %349, <2 x i64>* %353, align 16
  store i64 %351, i64* %34, align 16
  %354 = lshr i64 %351, 56
  %355 = trunc i64 %354 to i8
  %356 = extractelement <2 x i64> %349, i32 0
  %357 = inttoptr i64 %356 to i8*
  br i1 %337, label %358, label %360

358:                                              ; preds = %347
  %359 = load i8*, i8** %331, align 8
  call void @_ZdlPv(i8* %359) #14
  br label %360

360:                                              ; preds = %347, %358
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %330) #13
  %361 = load i8, i8* %320, align 1
  br label %362

362:                                              ; preds = %302, %360
  %363 = phi i8* [ %35, %302 ], [ %357, %360 ]
  %364 = phi i8 [ -128, %302 ], [ %355, %360 ]
  %365 = phi i8 [ %321, %302 ], [ %361, %360 ]
  %366 = icmp slt i8 %365, 0
  br i1 %366, label %367, label %369

367:                                              ; preds = %362
  %368 = load i8*, i8** %305, align 8
  call void @_ZdlPv(i8* %368) #14
  br label %369

369:                                              ; preds = %362, %367
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %304) #13
  br label %370

370:                                              ; preds = %300, %369
  %371 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %301, %300 ], [ %309, %369 ]
  %372 = phi i8* [ %35, %300 ], [ %363, %369 ]
  %373 = phi i8 [ -128, %300 ], [ %364, %369 ]
  %374 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %371, i64 0, i32 1, i32 0
  %375 = load i8, i8* %374, align 1
  %376 = icmp slt i8 %375, 0
  br i1 %376, label %377, label %379

377:                                              ; preds = %370
  %378 = load i8*, i8** %290, align 8
  call void @_ZdlPv(i8* %378) #14
  br label %379

379:                                              ; preds = %370, %377
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %289) #13
  %380 = load i8, i8* %84, align 1
  %381 = icmp slt i8 %380, 0
  br i1 %381, label %382, label %384

382:                                              ; preds = %379
  %383 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %383) #14
  br label %384

384:                                              ; preds = %379, %382
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #13
  %385 = load i8, i8* %79, align 1
  %386 = icmp slt i8 %385, 0
  br i1 %386, label %387, label %389

387:                                              ; preds = %384
  %388 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %388) #14
  br label %389

389:                                              ; preds = %384, %387
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #13
  %390 = icmp slt i8 %373, 0
  br i1 %390, label %391, label %392

391:                                              ; preds = %389
  call void @_ZdlPv(i8* %372) #14
  br label %392

392:                                              ; preds = %389, %391
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeIlE5eraseENS_8internal29circular_deque_const_iteratorIlEES4_(%"class.base::circular_deque"*, %"class.base::circular_deque"*, i64, %"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = icmp eq i64 %2, %4
  br i1 %6, label %62, label %7

7:                                                ; preds = %5
  %8 = icmp ult i64 %2, %4
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %2)
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %13)
  %15 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %9, i64 0)
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %4)
  %18 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, %2
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  store i64 %4, i64* %18, align 8
  br label %62

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  br label %26

26:                                               ; preds = %49, %22
  %27 = phi i64 [ %19, %22 ], [ %60, %49 ]
  %28 = phi i64 [ %4, %22 ], [ %56, %49 ]
  %29 = phi i64 [ %2, %22 ], [ %59, %49 ]
  %30 = icmp ult i64 %28, %27
  br i1 %30, label %33, label %31

31:                                               ; preds = %26
  %32 = sub i64 %28, %27
  br label %37

33:                                               ; preds = %26
  %34 = load i64, i64* %25, align 8
  %35 = sub i64 %28, %27
  %36 = add i64 %35, %34
  br label %37

37:                                               ; preds = %33, %31
  %38 = phi i64 [ %32, %31 ], [ %36, %33 ]
  %39 = icmp ult i64 %24, %27
  br i1 %39, label %42, label %40

40:                                               ; preds = %37
  %41 = sub i64 %24, %27
  br label %46

42:                                               ; preds = %37
  %43 = load i64, i64* %25, align 8
  %44 = sub i64 %24, %27
  %45 = add i64 %44, %43
  br label %46

46:                                               ; preds = %40, %42
  %47 = phi i64 [ %41, %40 ], [ %45, %42 ]
  %48 = icmp ult i64 %38, %47
  br i1 %48, label %49, label %61

49:                                               ; preds = %46
  %50 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %28)
  %51 = add i64 %28, 1
  %52 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %51)
  %53 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %29)
  tail call void @_ZN4base8internal12VectorBufferIlE9MoveRangeIlLi0EEEvPlS4_S4_(i64* %50, i64* %52, i64* %53)
  %54 = load i64, i64* %25, align 8
  %55 = icmp eq i64 %51, %54
  %56 = select i1 %55, i64 0, i64 %51
  %57 = add i64 %29, 1
  %58 = icmp eq i64 %57, %54
  %59 = select i1 %58, i64 0, i64 %57
  %60 = load i64, i64* %18, align 8
  br label %26

61:                                               ; preds = %46
  store i64 %29, i64* %23, align 8
  br label %62

62:                                               ; preds = %5, %61, %21
  %63 = phi i64 [ %4, %21 ], [ %2, %61 ], [ %2, %5 ]
  %64 = insertvalue { %"class.base::circular_deque"*, i64 } undef, %"class.base::circular_deque"* %0, 0
  %65 = insertvalue { %"class.base::circular_deque"*, i64 } %64, i64 %63, 1
  ret { %"class.base::circular_deque"*, i64 } %65
}

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #3

declare zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8*, i64, i64*) local_unnamed_addr #3

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) i64* @_ZNK4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds i64, i64* %24, i64 %1
  ret i64* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #5

declare void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #3

declare i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZNK6crypto4HMAC4SignEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPhm(%"class.crypto::HMAC"*, i8*, i64, i8*, i64) local_unnamed_addr #3

declare void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeIlE7emplaceIJRKlEEENS_8internal23circular_deque_iteratorIlEENS5_29circular_deque_const_iteratorIlEEDpOT_(%"class.base::circular_deque"*, %"class.base::circular_deque"*, i64, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.base::internal::circular_deque_iterator", align 8
  %6 = alloca %"class.base::internal::circular_deque_iterator", align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, %2
  br i1 %9, label %10, label %25

10:                                               ; preds = %4
  tail call void @_ZN4base14circular_dequeIlE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %0, i64 1) #13
  %11 = load i64, i64* %7, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  br label %16

16:                                               ; preds = %10, %13
  %17 = phi i64 [ %15, %13 ], [ %11, %10 ]
  %18 = add i64 %17, -1
  store i64 %18, i64* %7, align 8
  %19 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %20 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %19, i64 %18) #13
  %21 = load i64, i64* %3, align 8
  store i64 %21, i64* %20, align 8
  %22 = load i64, i64* %7, align 8
  %23 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %19, i64 %22) #13
  %24 = load i64, i64* %7, align 8
  br label %36

25:                                               ; preds = %4
  %26 = bitcast %"class.base::internal::circular_deque_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %5, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %5, i64 0, i32 0, i32 1
  store %"class.base::circular_deque"* %0, %"class.base::circular_deque"** %27, align 8
  store i64 %2, i64* %28, align 8
  %29 = bitcast %"class.base::internal::circular_deque_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 16, i1 false) #13
  call void @_ZN4base14circular_dequeIlE11MakeRoomForEmPNS_8internal23circular_deque_iteratorIlEES5_(%"class.base::circular_deque"* %0, i64 1, %"class.base::internal::circular_deque_iterator"* nonnull %5, %"class.base::internal::circular_deque_iterator"* nonnull %6)
  %30 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %31 = load i64, i64* %28, align 8
  %32 = call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %30, i64 %31)
  %33 = load i64, i64* %3, align 8
  store i64 %33, i64* %32, align 8
  %34 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %27, align 8
  %35 = load i64, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #13
  br label %36

36:                                               ; preds = %25, %16
  %37 = phi %"class.base::circular_deque"* [ %0, %16 ], [ %34, %25 ]
  %38 = phi i64 [ %24, %16 ], [ %35, %25 ]
  %39 = insertvalue { %"class.base::circular_deque"*, i64 } undef, %"class.base::circular_deque"* %37, 0
  %40 = insertvalue { %"class.base::circular_deque"*, i64 } %39, i64 %38, 1
  ret { %"class.base::circular_deque"*, i64 } %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIlE11MakeRoomForEmPNS_8internal23circular_deque_iteratorIlEES5_(%"class.base::circular_deque"*, i64, %"class.base::internal::circular_deque_iterator"*, %"class.base::internal::circular_deque_iterator"*) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = bitcast %"class.base::internal::circular_deque_iterator"* %3 to i8*
  %8 = bitcast %"class.base::internal::circular_deque_iterator"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  br label %65

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %2, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %12, align 8
  %14 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %13, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %11, %15
  br i1 %16, label %19, label %17

17:                                               ; preds = %9
  %18 = sub i64 %11, %15
  br label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %13, i64 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %11, %15
  %23 = add i64 %22, %21
  br label %24

24:                                               ; preds = %17, %19
  %25 = phi i64 [ %18, %17 ], [ %23, %19 ]
  tail call void @_ZN4base14circular_dequeIlE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %0, i64 %1)
  %26 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, %25
  %29 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %30 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = urem i64 %28, %31
  store i64 %32, i64* %10, align 8
  %33 = add i64 %32, %1
  %34 = load i64, i64* %30, align 8
  %35 = urem i64 %33, %34
  %36 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %3, i64 0, i32 0, i32 0
  store %"class.base::circular_deque"* %0, %"class.base::circular_deque"** %36, align 8
  %37 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %3, i64 0, i32 0, i32 1
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, %1
  %41 = load i64, i64* %30, align 8
  %42 = urem i64 %40, %41
  store i64 %42, i64* %38, align 8
  %43 = load i64, i64* %10, align 8
  %44 = icmp eq i64 %39, %43
  br i1 %44, label %65, label %45

45:                                               ; preds = %24, %57
  %46 = phi i64 [ %59, %57 ], [ %42, %24 ]
  %47 = phi i64 [ %53, %57 ], [ %39, %24 ]
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = load i64, i64* %30, align 8
  br label %51

51:                                               ; preds = %45, %49
  %52 = phi i64 [ %50, %49 ], [ %47, %45 ]
  %53 = add i64 %52, -1
  %54 = icmp eq i64 %46, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = load i64, i64* %30, align 8
  br label %57

57:                                               ; preds = %51, %55
  %58 = phi i64 [ %56, %55 ], [ %46, %51 ]
  %59 = add i64 %58, -1
  %60 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %29, i64 %53)
  %61 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %29, i64 %52)
  %62 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %29, i64 %59)
  tail call void @_ZN4base8internal12VectorBufferIlE9MoveRangeIlLi0EEEvPlS4_S4_(i64* %60, i64* %61, i64* %62)
  %63 = load i64, i64* %10, align 8
  %64 = icmp eq i64 %53, %63
  br i1 %64, label %65, label %45

65:                                               ; preds = %57, %24, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds i64, i64* %24, i64 %1
  ret i64* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIlE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #13
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #13
  br i1 %37, label %38, label %39, !prof !21

38:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #13
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIlE10MoveBufferERNS_8internal12VectorBufferIlEEmmPS4_PmS7_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #13
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #13
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIlE10MoveBufferERNS_8internal12VectorBufferIlEEmmPS4_PmS7_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load i64*, i64** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferIlE9MoveRangeIlLi0EEEvPlS4_S4_(i64* %11, i64* %12, i64* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load i64*, i64** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferIlE9MoveRangeIlLi0EEEvPlS4_S4_(i64* %19, i64* %20, i64* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferIlE9MoveRangeIlLi0EEEvPlS4_S4_(i64* %24, i64* %25, i64* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #10

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIlE9MoveRangeIlLi0EEEvPlS4_S4_(i64*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint i64* %0 to i64
  %6 = icmp ult i64* %2, %1
  br i1 %6, label %7, label %41

7:                                                ; preds = %3
  %8 = ptrtoint i64* %2 to i64
  %9 = ptrtoint i64* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #13
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #13
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !21

16:                                               ; preds = %7
  tail call void @llvm.trap() #13
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %46

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 132, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  %23 = bitcast %"class.std::__1::basic_ostream"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_ostream"* %22 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, -75
  %34 = or i32 %33, 8
  store i32 %34, i32* %31, align 8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i64 14) #13
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %35, i64 %5) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i64 14) #13
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %37, i64 %9) #13
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i64 8) #13
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %39, i64 %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %46

41:                                               ; preds = %3
  %42 = ptrtoint i64* %1 to i64
  %43 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %42, i64 %5) #13
  %44 = extractvalue { i64, i1 } %43, 1
  br i1 %44, label %45, label %46, !prof !21

45:                                               ; preds = %41
  call void @llvm.trap() #13
  unreachable

46:                                               ; preds = %20, %17, %41
  %47 = phi { i64, i1 } [ %43, %41 ], [ %10, %17 ], [ %10, %20 ]
  %48 = extractvalue { i64, i1 } %47, 0
  %49 = bitcast i64* %0 to i8*
  %50 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %49, i64 %48, i1 false)
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !22
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #10

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZN6crypto4HMACC1ENS0_13HashAlgorithmE(%"class.crypto::HMAC"*, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6crypto4HMACD1Ev(%"class.crypto::HMAC"*) unnamed_addr #4

declare zeroext i1 @_ZN6crypto4HMAC4InitEPKhm(%"class.crypto::HMAC"*, i8*, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN29InternalAuthGenerationService13GetUnusedTickERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.InternalAuthGenerationService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.crypto::HMAC"*, %"class.crypto::HMAC"** %3, align 8
  %5 = icmp eq %"class.crypto::HMAC"* %4, null
  br i1 %5, label %185, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %9 to i64
  %14 = select i1 %10, i64 %12, i64 %13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %185, label %16

16:                                               ; preds = %6
  %17 = xor i1 %10, true
  %18 = icmp ult i64 %12, 513
  %19 = or i1 %18, %17
  br i1 %19, label %20, label %185

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %24 = select i1 %10, i8* %22, i8* %23
  %25 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %24, i64 %14) #13
  br i1 %25, label %26, label %185

26:                                               ; preds = %20
  %27 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %1, i8 signext 10, i64 0) #13
  %28 = icmp eq i64 %27, -1
  br i1 %28, label %29, label %185

29:                                               ; preds = %26
  %30 = tail call i64 @_ZN4base4Time3NowEv() #13
  %31 = sdiv i64 %30, 10000
  %32 = icmp slt i64 %30, 10000000000
  %33 = select i1 %32, i64 0, i64 %31
  %34 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %0, i64 0, i32 2
  %35 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %0, i64 0, i32 2, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %0, i64 0, i32 2, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %36, %38
  br i1 %39, label %63, label %40

40:                                               ; preds = %29
  %41 = icmp eq i64 %38, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %40
  %43 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %0, i64 0, i32 2, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  br label %45

45:                                               ; preds = %40, %42
  %46 = phi i64 [ %44, %42 ], [ %38, %40 ]
  %47 = add i64 %46, -1
  %48 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %34, i64 0, i32 0
  %49 = tail call dereferenceable(8) i64* @_ZNK4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %48, i64 %47) #13
  %50 = load i64, i64* %49, align 8
  %51 = icmp sgt i64 %50, %33
  br i1 %51, label %52, label %63

52:                                               ; preds = %45
  %53 = load i64, i64* %37, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %52
  %56 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %0, i64 0, i32 2, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  br label %58

58:                                               ; preds = %52, %55
  %59 = phi i64 [ %57, %55 ], [ %53, %52 ]
  %60 = add i64 %59, -1
  %61 = tail call dereferenceable(8) i64* @_ZNK4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %48, i64 %60) #13
  %62 = load i64, i64* %61, align 8
  br label %63

63:                                               ; preds = %58, %45, %29
  %64 = phi i64 [ %33, %29 ], [ %62, %58 ], [ %33, %45 ]
  %65 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %0, i64 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = add nsw i64 %66, 1000000
  %68 = icmp slt i64 %64, %67
  br i1 %68, label %73, label %69

69:                                               ; preds = %63
  tail call void @_ZN29InternalAuthGenerationService14GenerateNewKeyEv(%class.InternalAuthGenerationService* %0)
  %70 = load i64, i64* %65, align 8
  %71 = add nsw i64 %70, 1000000
  %72 = icmp slt i64 %64, %71
  br i1 %72, label %73, label %185

73:                                               ; preds = %69, %63
  %74 = load i64, i64* %35, align 8
  %75 = load i64, i64* %37, align 8
  %76 = add nsw i64 %64, -19
  %77 = icmp ult i64 %75, %74
  br i1 %77, label %80, label %78

78:                                               ; preds = %73
  %79 = sub i64 %75, %74
  br label %85

80:                                               ; preds = %73
  %81 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %0, i64 0, i32 2, i32 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 %75, %74
  %84 = add i64 %83, %82
  br label %85

85:                                               ; preds = %80, %78
  %86 = phi i64 [ %79, %78 ], [ %84, %80 ]
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %128, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %0, i64 0, i32 2, i32 0, i32 1
  %90 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %34, i64 0, i32 0
  br label %91

91:                                               ; preds = %124, %88
  %92 = phi i64 [ %74, %88 ], [ %126, %124 ]
  %93 = phi i64 [ %86, %88 ], [ %125, %124 ]
  %94 = lshr i64 %93, 1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %112, label %96

96:                                               ; preds = %91
  %97 = load i64, i64* %35, align 8
  %98 = icmp ult i64 %92, %97
  br i1 %98, label %102, label %99

99:                                               ; preds = %96
  %100 = sub i64 %92, %97
  %101 = load i64, i64* %89, align 8
  br label %106

102:                                              ; preds = %96
  %103 = load i64, i64* %89, align 8
  %104 = sub i64 %92, %97
  %105 = add i64 %104, %103
  br label %106

106:                                              ; preds = %102, %99
  %107 = phi i64 [ %101, %99 ], [ %103, %102 ]
  %108 = phi i64 [ %100, %99 ], [ %105, %102 ]
  %109 = add i64 %97, %94
  %110 = add i64 %109, %108
  %111 = urem i64 %110, %107
  br label %112

112:                                              ; preds = %106, %91
  %113 = phi i64 [ %92, %91 ], [ %111, %106 ]
  %114 = tail call dereferenceable(8) i64* @_ZNK4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %90, i64 %113) #13
  %115 = load i64, i64* %114, align 8
  %116 = icmp slt i64 %115, %76
  br i1 %116, label %117, label %124

117:                                              ; preds = %112
  %118 = add i64 %113, 1
  %119 = load i64, i64* %89, align 8
  %120 = icmp eq i64 %118, %119
  %121 = select i1 %120, i64 0, i64 %118
  %122 = xor i64 %94, -1
  %123 = add i64 %93, %122
  br label %124

124:                                              ; preds = %117, %112
  %125 = phi i64 [ %123, %117 ], [ %94, %112 ]
  %126 = phi i64 [ %121, %117 ], [ %92, %112 ]
  %127 = icmp eq i64 %125, 0
  br i1 %127, label %128, label %91

128:                                              ; preds = %124, %85
  %129 = phi i64 [ %74, %85 ], [ %126, %124 ]
  %130 = tail call { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeIlE5eraseENS_8internal29circular_deque_const_iteratorIlEES4_(%"class.base::circular_deque"* %34, %"class.base::circular_deque"* %34, i64 %74, %"class.base::circular_deque"* %34, i64 %129)
  %131 = load i64, i64* %35, align 8
  %132 = load i64, i64* %37, align 8
  %133 = icmp ult i64 %132, %131
  br i1 %133, label %136, label %134

134:                                              ; preds = %128
  %135 = sub i64 %132, %131
  br label %141

136:                                              ; preds = %128
  %137 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %0, i64 0, i32 2, i32 0, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = sub i64 %132, %131
  %140 = add i64 %139, %138
  br label %141

141:                                              ; preds = %134, %136
  %142 = phi i64 [ %135, %134 ], [ %140, %136 ]
  %143 = icmp ugt i64 %142, 19
  br i1 %143, label %185, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %0, i64 0, i32 2, i32 0, i32 1
  %146 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %34, i64 0, i32 0
  br label %147

147:                                              ; preds = %181, %144
  %148 = phi i64 [ %132, %144 ], [ %184, %181 ]
  %149 = phi i64 [ %131, %144 ], [ %183, %181 ]
  %150 = phi i64 [ %64, %144 ], [ %182, %181 ]
  %151 = icmp ult i64 %148, %149
  br i1 %151, label %154, label %152

152:                                              ; preds = %147
  %153 = sub i64 %148, %149
  br label %158

154:                                              ; preds = %147
  %155 = load i64, i64* %145, align 8
  %156 = sub i64 %148, %149
  %157 = add i64 %156, %155
  br label %158

158:                                              ; preds = %152, %154
  %159 = phi i64 [ %153, %152 ], [ %157, %154 ]
  %160 = trunc i64 %159 to i32
  %161 = sub nsw i64 %64, %150
  %162 = trunc i64 %161 to i32
  %163 = xor i32 %162, -1
  %164 = add i32 %160, %163
  %165 = icmp slt i32 %164, 0
  br i1 %165, label %185, label %166

166:                                              ; preds = %158
  %167 = sext i32 %164 to i64
  %168 = load i64, i64* %145, align 8
  %169 = sub i64 %168, %149
  %170 = icmp uge i64 %148, %149
  %171 = icmp ugt i64 %169, %167
  %172 = or i1 %170, %171
  %173 = sub i64 0, %169
  %174 = select i1 %172, i64 %149, i64 %173
  %175 = add i64 %174, %167
  %176 = tail call dereferenceable(8) i64* @_ZNK4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %146, i64 %175) #13
  %177 = load i64, i64* %176, align 8
  %178 = icmp eq i64 %177, %150
  br i1 %178, label %179, label %185

179:                                              ; preds = %166
  %180 = icmp sgt i64 %150, %76
  br i1 %180, label %181, label %185

181:                                              ; preds = %179
  %182 = add nsw i64 %150, -1
  %183 = load i64, i64* %35, align 8
  %184 = load i64, i64* %37, align 8
  br label %147

185:                                              ; preds = %179, %166, %158, %69, %2, %26, %141, %20, %6, %16
  %186 = phi i64 [ 0, %16 ], [ 0, %6 ], [ 0, %20 ], [ 0, %141 ], [ 0, %26 ], [ 0, %2 ], [ 0, %69 ], [ 0, %179 ], [ %150, %158 ], [ %150, %166 ]
  ret i64 %186
}

declare void @_ZN4base17RandBytesAsStringEm(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12LazyInstanceI31InternalAuthVerificationServiceNS_8internal34DestructorAtExitLazyInstanceTraitsIS1_EEE6OnExitEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i64*
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = inttoptr i64 %3 to %class.InternalAuthVerificationService*
  tail call void @_ZN4base22LazyInstanceTraitsBaseI31InternalAuthVerificationServiceE14CallDestructorEPS1_(%class.InternalAuthVerificationService* %4) #13
  store atomic volatile i64 0, i64* %2 monotonic, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #3

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base22LazyInstanceTraitsBaseI31InternalAuthVerificationServiceE14CallDestructorEPS1_(%class.InternalAuthVerificationService*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 5
  tail call void @_ZN4base14circular_dequeIlED2Ev(%"class.base::circular_deque"* %2) #13
  %3 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.crypto::HMAC"*, %"class.crypto::HMAC"** %3, align 8
  store %"class.crypto::HMAC"* null, %"class.crypto::HMAC"** %3, align 8
  %5 = icmp eq %"class.crypto::HMAC"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN6crypto4HMACD1Ev(%"class.crypto::HMAC"* nonnull %4) #13
  %7 = bitcast %"class.crypto::HMAC"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.crypto::HMAC"*, %"class.crypto::HMAC"** %9, align 8
  store %"class.crypto::HMAC"* null, %"class.crypto::HMAC"** %9, align 8
  %11 = icmp eq %"class.crypto::HMAC"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  tail call void @_ZN6crypto4HMACD1Ev(%"class.crypto::HMAC"* nonnull %10) #13
  %13 = bitcast %"class.crypto::HMAC"* %10 to i8*
  tail call void @_ZdlPv(i8* %13) #14
  br label %14

14:                                               ; preds = %12, %8
  %15 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #14
  br label %23

23:                                               ; preds = %20, %14
  %24 = bitcast %class.InternalAuthVerificationService* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %class.InternalAuthVerificationService, %class.InternalAuthVerificationService* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #14
  br label %31

31:                                               ; preds = %23, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIlED2Ev(%"class.base::circular_deque"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %3
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = icmp ugt i64 %5, %3
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %3) #13
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %13) #13
  %15 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %9, i64 0) #13
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferIlEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %5) #13
  br label %18

18:                                               ; preds = %16, %1
  %19 = bitcast %"class.base::circular_deque"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #13
  ret void
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12LazyInstanceI29InternalAuthGenerationServiceNS_8internal34DestructorAtExitLazyInstanceTraitsIS1_EEE6OnExitEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i64*
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = inttoptr i64 %3 to %class.InternalAuthGenerationService*
  %5 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %4, i64 0, i32 2
  tail call void @_ZN4base14circular_dequeIlED2Ev(%"class.base::circular_deque"* %5) #13
  %6 = getelementptr inbounds %class.InternalAuthGenerationService, %class.InternalAuthGenerationService* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.crypto::HMAC"*, %"class.crypto::HMAC"** %6, align 8
  store %"class.crypto::HMAC"* null, %"class.crypto::HMAC"** %6, align 8
  %8 = icmp eq %"class.crypto::HMAC"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  tail call void @_ZN6crypto4HMACD1Ev(%"class.crypto::HMAC"* nonnull %7) #13
  %10 = bitcast %"class.crypto::HMAC"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %9
  store atomic volatile i64 0, i64* %2 monotonic, align 8
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!21 = !{!"branch_weights", i32 1, i32 2000}
!22 = !{i8 0, i8 2}
