; ModuleID = '../../cc/trees/scroll_node.cc'
source_filename = "../../cc/trees/scroll_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.cc::ScrollNode" = type <{ i32, i32, i32, %"class.gfx::Size", %"class.gfx::Size", i8, [3 x i8], %"class.gfx::Vector2dF", %"struct.cc::ElementId", i32, %"struct.cc::OverscrollBehavior", [4 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.6 }
%union.anon.6 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"parent_id\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"scrollable\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"container_bounds\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"bounds\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"offset_to_transform_parent\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"should_flatten\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"user_scrollable_horizontal\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"user_scrollable_vertical\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"scrolls_inner_viewport\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"scrolls_outer_viewport\00", align 1
@.str.11 = private unnamed_addr constant [38 x i8] c"prevent_viewport_scrolling_from_inner\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"transform_id\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"overscroll_behavior_x\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"overscroll_behavior_y\00", align 1
@.str.15 = private unnamed_addr constant [20 x i8] c"snap_container_rect\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"snap_area_rects\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"is_composited\00", align 1
@_ZN2cc9ElementId17kInvalidElementIdE = external local_unnamed_addr constant i64, align 8

@_ZN2cc10ScrollNodeC1Ev = hidden unnamed_addr alias void (%"struct.cc::ScrollNode"*), void (%"struct.cc::ScrollNode"*)* @_ZN2cc10ScrollNodeC2Ev
@_ZN2cc10ScrollNodeC1ERKS0_ = hidden unnamed_addr alias void (%"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*), void (%"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*)* @_ZN2cc10ScrollNodeC2ERKS0_
@_ZN2cc10ScrollNodeD1Ev = hidden unnamed_addr alias void (%"struct.cc::ScrollNode"*), void (%"struct.cc::ScrollNode"*)* @_ZN2cc10ScrollNodeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10ScrollNodeC2Ev(%"struct.cc::ScrollNode"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 0
  store i32 -1, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 1
  store i32 -1, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 7, i32 0
  store float 0.000000e+00, float* %5, align 4
  %6 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 7, i32 1
  store float 0.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 8, i32 0
  %8 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 21, i1 false)
  %9 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %9, i64* %7, align 8
  %10 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 9
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 10, i32 0
  store i32 1, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 10, i32 1
  store i32 1, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 88, i1 false) #6
  %15 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 13
  %16 = load i8, i8* %15, align 8
  %17 = and i8 %16, -2
  store i8 %17, i8* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10ScrollNodeC2ERKS0_(%"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"* dereferenceable(168)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.cc::ScrollNode"* %0 to i8*
  %4 = bitcast %"struct.cc::ScrollNode"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 60, i1 false)
  %5 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 96, i1 false) #6
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = bitcast i8* %10 to %"class.cc::SnapContainerData"*
  tail call void @_ZN2cc17SnapContainerDataC1ERKS0_(%"class.cc::SnapContainerData"* %12, %"class.cc::SnapContainerData"* dereferenceable(88) %11) #6
  store i8 1, i8* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 13
  %15 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 13
  %16 = load i8, i8* %15, align 8
  %17 = and i8 %16, 1
  %18 = load i8, i8* %14, align 8
  %19 = and i8 %18, -2
  %20 = or i8 %19, %17
  store i8 %20, i8* %14, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10ScrollNodeD2Ev(%"struct.cc::ScrollNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"* %6) #6
  store i8 0, i8* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc10ScrollNode11AsValueIntoEPN4base11trace_event11TracedValueE(%"struct.cc::ScrollNode"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca <2 x i64>, align 16
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %7) #6
  %8 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 %9) #6
  %10 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 5
  %11 = load i8, i8* %10, align 4
  %12 = and i8 %11, 1
  %13 = icmp ne i8 %12, 0
  tail call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i1 zeroext %13) #6
  %14 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 3
  tail call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4SizeEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), %"class.gfx::Size"* dereferenceable(8) %14, %"class.base::trace_event::TracedValue"* %1) #6
  %15 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 4
  tail call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4SizeEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), %"class.gfx::Size"* dereferenceable(8) %15, %"class.base::trace_event::TracedValue"* %1) #6
  %16 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 7
  tail call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx9Vector2dFEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), %"class.gfx::Vector2dF"* dereferenceable(8) %16, %"class.base::trace_event::TracedValue"* %1) #6
  %17 = load i8, i8* %10, align 4
  %18 = and i8 %17, 32
  %19 = icmp ne i8 %18, 0
  tail call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i1 zeroext %19) #6
  %20 = load i8, i8* %10, align 4
  %21 = and i8 %20, 64
  %22 = icmp ne i8 %21, 0
  tail call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i1 zeroext %22) #6
  %23 = load i8, i8* %10, align 4
  %24 = icmp slt i8 %23, 0
  tail call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i1 zeroext %24) #6
  %25 = load i8, i8* %10, align 4
  %26 = and i8 %25, 4
  %27 = icmp ne i8 %26, 0
  tail call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i1 zeroext %27) #6
  %28 = load i8, i8* %10, align 4
  %29 = and i8 %28, 8
  %30 = icmp ne i8 %29, 0
  tail call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i1 zeroext %30) #6
  %31 = load i8, i8* %10, align 4
  %32 = and i8 %31, 16
  %33 = icmp ne i8 %32, 0
  tail call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.11, i64 0, i64 0), i1 zeroext %33) #6
  %34 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 8
  tail call void @_ZNK2cc9ElementId16AddToTracedValueEPN4base11trace_event11TracedValueE(%"struct.cc::ElementId"* %34, %"class.base::trace_event::TracedValue"* %1) #6
  %35 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 9
  %36 = load i32, i32* %35, align 8
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i32 %36) #6
  %37 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 10, i32 0
  %38 = load i32, i32* %37, align 4
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0), i32 %38) #6
  %39 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 10, i32 1
  %40 = load i32, i32* %39, align 4
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i64 0, i64 0), i32 %40) #6
  %41 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %116, label %44

44:                                               ; preds = %2
  %45 = bitcast <2 x i64>* %4 to %"class.gfx::RectF"*
  %46 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #6
  %47 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #6
  %48 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %49 = bitcast %"class.gfx::RectF"* %48 to <2 x i64>*
  %50 = load <2 x i64>, <2 x i64>* %49, align 4
  store <2 x i64> %50, <2 x i64>* %4, align 16
  call void @_ZNK3gfx5RectF8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.gfx::RectF"* nonnull %45) #6
  %51 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = select i1 %54, i8* %56, i8* %46
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = zext i8 %53 to i64
  %61 = select i1 %54, i64 %59, i64 %60
  call void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15, i64 0, i64 0), i8* %57, i64 %61) #6
  %62 = load i8, i8* %52, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %44
  %65 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %65) #7
  br label %66

66:                                               ; preds = %44, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #6
  %67 = load i8, i8* %41, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %70, !prof !3

69:                                               ; preds = %66
  call void @llvm.trap() #6
  unreachable

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %72 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 1
  %73 = bitcast %"struct.cc::SnapAreaData"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.std::__1::vector"* %71 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %74, %76
  br i1 %77, label %116, label %78

78:                                               ; preds = %70
  call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0)) #6
  %79 = load i8, i8* %41, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %87, label %81, !prof !3

81:                                               ; preds = %78
  %82 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %83 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %88

87:                                               ; preds = %112, %78
  call void @llvm.trap() #6
  unreachable

88:                                               ; preds = %81, %112
  %89 = phi i64 [ 0, %81 ], [ %113, %112 ]
  %90 = load i64, i64* %73, align 8
  %91 = load i64, i64* %75, align 8
  %92 = sub i64 %90, %91
  %93 = sdiv exact i64 %92, 40
  %94 = icmp ult i64 %89, %93
  br i1 %94, label %96, label %95

95:                                               ; preds = %88
  call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #6
  br label %116

96:                                               ; preds = %88
  %97 = inttoptr i64 %91 to %"struct.cc::SnapAreaData"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #6
  %98 = shl i64 %89, 32
  %99 = ashr exact i64 %98, 32
  %100 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %97, i64 %99, i32 1
  call void @_ZNK3gfx5RectF8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.gfx::RectF"* %100) #6
  %101 = load i8, i8* %84, align 1
  %102 = icmp slt i8 %101, 0
  %103 = load i8*, i8** %85, align 8
  %104 = select i1 %102, i8* %103, i8* %82
  %105 = load i64, i64* %86, align 8
  %106 = zext i8 %101 to i64
  %107 = select i1 %102, i64 %105, i64 %106
  call void @_ZN4base11trace_event11TracedValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* %104, i64 %107) #6
  %108 = load i8, i8* %84, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %96
  %111 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %111) #7
  br label %112

112:                                              ; preds = %96, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #6
  %113 = add nuw i64 %89, 1
  %114 = load i8, i8* %41, align 8, !range !2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %87, label %88, !prof !3

116:                                              ; preds = %2, %70, %95
  %117 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %0, i64 0, i32 13
  %118 = load i8, i8* %117, align 8
  %119 = and i8 %118, 1
  %120 = icmp ne i8 %119, 0
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i1 zeroext %120) #6
  ret void
}

declare void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"*, i8*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4SizeEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::Size"* dereferenceable(8), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx9Vector2dFEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::Vector2dF"* dereferenceable(8), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

declare void @_ZNK2cc9ElementId16AddToTracedValueEPN4base11trace_event11TracedValueE(%"struct.cc::ElementId"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"*, i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK3gfx5RectF8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.gfx::RectF"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"*, i8*) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2cc17SnapContainerDataC1ERKS0_(%"class.cc::SnapContainerData"*, %"class.cc::SnapContainerData"* dereferenceable(88)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
