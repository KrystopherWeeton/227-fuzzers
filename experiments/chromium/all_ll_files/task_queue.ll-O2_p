; ModuleID = '../../base/task/sequence_manager/task_queue.cc'
source_filename = "../../base/task/sequence_manager/task_queue.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter" = type <{ %class.scoped_refptr, i8, [7 x i8] }>
%class.scoped_refptr = type { %"class.base::sequence_manager::TaskQueue"* }
%"class.base::sequence_manager::TaskQueue" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr", %"class.base::WeakPtr", %class.scoped_refptr.1, %class.scoped_refptr.146, i32, i32, i8*, %"class.base::WeakPtrFactory.147" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::sequence_manager::internal::TaskQueueImpl" = type <{ i8*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %class.scoped_refptr.1, %class.scoped_refptr.106, %"class.base::internal::CheckedLock", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread", %"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly", %"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag", i8, i8, i8, [5 x i8] }>
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type { %"class.base::sequence_manager::SequenceManager", %"class.base::sequence_manager::internal::SequencedTaskSource", %"class.base::sequence_manager::internal::TaskQueueSelector::Observer", %"class.base::RunLoop::NestingObserver", %class.scoped_refptr.1, %"class.base::sequence_manager::internal::EnqueueOrderGenerator", %"class.std::__1::unique_ptr.8", %"struct.base::sequence_manager::SequenceManager::Settings", %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings", i32, %"class.base::sequence_manager::internal::AtomicFlagSet", i32, %"struct.base::sequence_manager::internal::SequenceManagerImpl::MainThreadOnly", %"class.base::WeakPtrFactory" }
%"class.base::sequence_manager::SequenceManager" = type { i32 (...)** }
%"class.base::sequence_manager::internal::SequencedTaskSource" = type { i32 (...)** }
%"class.base::sequence_manager::internal::TaskQueueSelector::Observer" = type { i32 (...)** }
%"class.base::RunLoop::NestingObserver" = type { i32 (...)** }
%"class.base::sequence_manager::internal::EnqueueOrderGenerator" = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.base::sequence_manager::internal::ThreadController"* }
%"class.base::sequence_manager::internal::ThreadController" = type { i32 (...)** }
%"struct.base::sequence_manager::SequenceManager::Settings" = type <{ i32, i8, [3 x i8], %"class.base::TickClock"*, i8, [7 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings" = type { double }
%"class.base::sequence_manager::internal::AtomicFlagSet" = type { %class.scoped_refptr.1, %"class.std::__1::unique_ptr.12", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.base::sequence_manager::internal::AtomicFlagSet::Group" = type { %"struct.std::__1::atomic.3", i64, [64 x %"class.base::RepeatingCallback.148"], %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"class.std::__1::unique_ptr.12", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.base::RepeatingCallback.148" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.19", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.19" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.base::sequence_manager::internal::SequenceManagerImpl::MainThreadOnly" = type { i32, %"class.base::circular_deque", %"struct.base::debug::CrashKeyString"*, %"struct.base::debug::CrashKeyString"*, %"struct.base::debug::CrashKeyString"*, %"struct.std::__1::array.22", %"class.std::__1::mersenne_twister_engine", %"class.std::__1::uniform_real_distribution", %"class.base::sequence_manager::internal::TaskQueueSelector", %"class.base::ObserverList", %"class.base::ObserverList.41", %"class.std::__1::set", %"class.std::__1::unique_ptr.53", i8, %"class.base::TimeTicks", %"class.std::__1::set.59", %"class.std::__1::map", %"class.std::__1::map", i8, i8, %"class.std::__1::deque", %"class.base::sequence_manager::SequenceManager::Observer"*, %"class.base::ObserverList.86", %"class.std::__1::multiset" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DeferredNonNestableTask"*, i64 }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DeferredNonNestableTask" = type <{ %"struct.base::sequence_manager::Task", %"class.base::sequence_manager::internal::TaskQueueImpl"*, i32, [4 x i8] }>
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.20, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::array" = type { [4 x i8*] }
%class.scoped_refptr.20 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.21" }>
%"class.base::RefCountedThreadSafe.21" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"struct.base::debug::CrashKeyString" = type <{ i8*, i32, [4 x i8] }>
%"struct.std::__1::array.22" = type { [64 x i8] }
%"class.std::__1::mersenne_twister_engine" = type { [312 x i64], i64 }
%"class.std::__1::uniform_real_distribution" = type { %"class.std::__1::uniform_real_distribution<double>::param_type" }
%"class.std::__1::uniform_real_distribution<double>::param_type" = type { double, double }
%"class.base::sequence_manager::internal::TaskQueueSelector" = type { %"class.base::sequence_manager::internal::WorkQueueSets::Observer", %class.scoped_refptr.1, %"struct.std::__1::array.23", %"class.base::sequence_manager::internal::TaskQueueSelector::ActivePriorityTracker", %"class.base::sequence_manager::internal::WorkQueueSets", %"class.base::sequence_manager::internal::WorkQueueSets", i64, %"class.base::sequence_manager::internal::TaskQueueSelector::Observer"* }
%"class.base::sequence_manager::internal::WorkQueueSets::Observer" = type { i32 (...)** }
%"struct.std::__1::array.23" = type { [7 x i32] }
%"class.base::sequence_manager::internal::TaskQueueSelector::ActivePriorityTracker" = type { i64 }
%"class.base::sequence_manager::internal::WorkQueueSets" = type { i8*, %"struct.std::__1::array.24", %"class.base::sequence_manager::internal::WorkQueueSets::Observer"* }
%"struct.std::__1::array.24" = type { [7 x %"class.base::internal::IntrusiveHeap"] }
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder, base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::Impl" }
%"struct.base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder, base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::Impl" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder"*, %"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder"*, %"class.std::__1::__compressed_pair.31" }
%"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder" = type { %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.base::sequence_manager::internal::WorkQueue" = type <{ %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::WorkQueueSets"*, %"class.base::sequence_manager::internal::TaskQueueImpl"*, i64, %"class.base::HeapHandle", i8*, %"class.base::sequence_manager::EnqueueOrder", i32, [4 x i8] }>
%"class.base::sequence_manager::internal::LazilyDeallocatedDeque" = type { %"class.std::__1::unique_ptr.25", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* }
%"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring" = type { i64, i64, i64, %"struct.base::sequence_manager::Task"*, %"class.std::__1::unique_ptr.25" }
%"class.base::HeapHandle" = type { i64 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.34", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.36" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.41" = type <{ %"class.std::__1::vector.34", %"class.base::LinkedList.42", i64, i32, [4 x i8] }>
%"class.base::LinkedList.42" = type { %"class.base::LinkNode.43" }
%"class.base::LinkNode.43" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { i64 }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.base::sequence_manager::internal::RealTimeDomain"* }
%"class.base::sequence_manager::internal::RealTimeDomain" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::set.59" = type { %"class.std::__1::__tree.60" }
%"class.std::__1::__tree.60" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.69" }
%"class.std::__1::__tree.69" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.70", %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.82" }
%"struct.std::__1::__split_buffer" = type { %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"**, %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"**, %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"**, %"class.std::__1::__compressed_pair.77" }
%"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask" = type { %"struct.base::sequence_manager::Task", %"class.base::sequence_manager::internal::TaskQueueImpl"*, i8*, %"class.base::sequence_manager::TaskQueue::TaskTiming", i8, i32 }
%"class.base::sequence_manager::TaskQueue::TaskTiming" = type { i32, i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::ThreadTicks" }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.76" }
%"class.base::time_internal::TimeBase.76" = type { i64 }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"** }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.base::sequence_manager::SequenceManager::Observer" = type { i32 (...)** }
%"class.base::ObserverList.86" = type <{ %"class.std::__1::vector.34", %"class.base::LinkedList.87", i64, i32, [4 x i8] }>
%"class.base::LinkedList.87" = type { %"class.base::LinkNode.88" }
%"class.base::LinkNode.88" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::multiset" = type { %"class.std::__1::__tree.90" }
%"class.std::__1::__tree.90" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.99 }
%class.scoped_refptr.99 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.100", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.100" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.101" }
%"struct.std::__1::atomic.101" = type { %"struct.std::__1::__atomic_base.102" }
%"struct.std::__1::__atomic_base.102" = type { %"struct.std::__1::__atomic_base.103" }
%"struct.std::__1::__atomic_base.103" = type { %"struct.std::__1::__cxx_atomic_impl.104" }
%"struct.std::__1::__cxx_atomic_impl.104" = type { %"struct.std::__1::__cxx_atomic_base_impl.105" }
%"struct.std::__1::__cxx_atomic_base_impl.105" = type { i8 }
%class.scoped_refptr.106 = type { %"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster"* }
%"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster" = type { %"class.base::RefCountedThreadSafe.107", [4 x i8], %"class.base::internal::OperationsController", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::RefCountedThreadSafe.107" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic.108", [4 x i8], %"class.base::WaitableEvent" }
%"struct.std::__1::atomic.108" = type { %"struct.std::__1::__atomic_base.109" }
%"struct.std::__1::__atomic_base.109" = type { %"struct.std::__1::__atomic_base.110" }
%"struct.std::__1::__atomic_base.110" = type { %"struct.std::__1::__cxx_atomic_impl.111" }
%"struct.std::__1::__cxx_atomic_impl.111" = type { %"struct.std::__1::__cxx_atomic_base_impl.112" }
%"struct.std::__1::__cxx_atomic_base_impl.112" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.113, i8, [7 x i8] }>
%class.scoped_refptr.113 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.114", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.114" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.115" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread" = type { %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", i8, i8, i8, %"class.base::RepeatingCallback", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" }
%"class.base::sequence_manager::TimeDomain" = type opaque
%"class.base::sequence_manager::TaskQueue::Observer" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" = type <{ i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly" = type <{ %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.119", %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue", %"class.base::ObserverList", %"class.base::HeapHandle", i8, [7 x i8], %"class.base::trace_event::BlameContext"*, %"class.base::sequence_manager::EnqueueOrder", %"class.absl::optional", %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder", %"class.base::RepeatingCallback.135", %"class.base::RepeatingCallback.136", %"class.absl::optional.137", i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.base::sequence_manager::internal::WorkQueue"* }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue", i32, [4 x i8] }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector.125", %"struct.std::__1::less.132" }>
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.base::sequence_manager::Task"* }
%"struct.std::__1::less.132" = type { i8 }
%"class.base::trace_event::BlameContext" = type { %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8*, i8*, i8*, i8*, i64, i8*, i64, i8*, %"class.base::ThreadChecker", %"class.base::WeakPtrFactory.134" }
%"class.base::trace_event::TraceLog::AsyncEnabledStateObserver" = type { i32 (...)** }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory.134" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback.135" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.136" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.137" = type { %"class.absl::optional_internal::optional_data.138" }
%"class.absl::optional_internal::optional_data.138" = type { %"class.absl::optional_internal::optional_data_base.139" }
%"class.absl::optional_internal::optional_data_base.139" = type { %"class.absl::optional_internal::optional_data_dtor_base.140" }
%"class.absl::optional_internal::optional_data_dtor_base.140" = type { i8, %union.anon.141 }
%union.anon.141 = type { %"struct.base::sequence_manager::internal::DelayedWakeUp" }
%"struct.base::sequence_manager::internal::DelayedWakeUp" = type { %"class.base::TimeTicks", i32, i32 }
%"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag" = type { %"class.base::sequence_manager::internal::AtomicFlagSet"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.145 }
%class.scoped_refptr.145 = type { %"class.base::internal::WeakReference::Flag"* }
%class.scoped_refptr.1 = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe.2", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.146 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.147" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.base::sequence_manager::TaskQueue::Spec" = type <{ i8*, i8, [7 x i8], %"class.base::sequence_manager::TimeDomain"*, i8, i8, [6 x i8] }>
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.21", [4 x i8] }>
%"class.base::ThreadCheckerImpl" = type { %"class.base::Lock", %"class.std::__1::unique_ptr.163", %"class.base::PlatformThreadRef", %"class.base::TaskToken", %"class.base::SequenceToken" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.base::debug::StackTrace"* }
%"class.base::debug::StackTrace" = type opaque
%"class.base::PlatformThreadRef" = type { i64 }
%"class.base::TaskToken" = type { i32 }
%"class.base::SequenceToken" = type { i32 }
%"class.base::sequence_manager::LazyNow" = type { %"class.base::TickClock"*, %"class.absl::optional" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.171 }
%union.anon.171 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list.155" }
%"class.std::__1::list.155" = type { %"class.std::__1::__list_imp.156" }
%"class.std::__1::__list_imp.156" = type { %"struct.std::__1::__list_node_base.157", %"class.std::__1::__compressed_pair.158" }
%"struct.std::__1::__list_node_base.157" = type { %"struct.std::__1::__list_node_base.157"*, %"struct.std::__1::__list_node_base.157"* }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner" = type { %"class.base::SingleThreadTaskRunner.base", %"class.base::ThreadCheckerImpl" }
%"class.base::SingleThreadTaskRunner.base" = type { %"class.base::SequencedTaskRunner.base" }

@_ZTVN4base16sequence_manager9TaskQueueE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::sequence_manager::TaskQueue"*)* @_ZN4base16sequence_manager9TaskQueue17ShutdownTaskQueueEv to i8*), i8* bitcast (i8* (%"class.base::sequence_manager::TaskQueue"*)* @_ZNK4base16sequence_manager9TaskQueue7GetNameEv to i8*), i8* bitcast (void (%"class.base::sequence_manager::TaskQueue"*)* @_ZN4base16sequence_manager9TaskQueueD2Ev to i8*), i8* bitcast (void (%"class.base::sequence_manager::TaskQueue"*)* @_ZN4base16sequence_manager9TaskQueueD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@_ZTVN4base16sequence_manager12_GLOBAL__N_114NullTaskRunnerE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)* @_ZN4base16sequence_manager12_GLOBAL__N_114NullTaskRunner15PostDelayedTaskERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeDeltaE to i8*), i8* bitcast (void (%"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner"*)* @_ZN4base16sequence_manager12_GLOBAL__N_114NullTaskRunnerD2Ev to i8*), i8* bitcast (void (%"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner"*)* @_ZN4base16sequence_manager12_GLOBAL__N_114NullTaskRunnerD0Ev to i8*), i8* bitcast (void (%"class.base::TaskRunner"*)* @_ZNK4base10TaskRunner10OnDestructEv to i8*), i8* bitcast (i1 (%"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)* @_ZN4base16sequence_manager12_GLOBAL__N_114NullTaskRunner26PostNonNestableDelayedTaskERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeDeltaE to i8*), i8* bitcast (i1 (%"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner"*)* @_ZNK4base16sequence_manager12_GLOBAL__N_114NullTaskRunner26RunsTasksInCurrentSequenceEv to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoterC1E13scoped_refptrIS1_E = hidden unnamed_addr alias void (%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*, %"class.base::sequence_manager::TaskQueue"*), void (%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*, %"class.base::sequence_manager::TaskQueue"*)* @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoterC2E13scoped_refptrIS1_E
@_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoterD1Ev = hidden unnamed_addr alias void (%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*), void (%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*)* @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoterD2Ev
@_ZN4base16sequence_manager9TaskQueueC1ENSt3__110unique_ptrINS0_8internal13TaskQueueImplENS2_14default_deleteIS5_EEEERKNS1_4SpecE = hidden unnamed_addr alias void (%"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"struct.base::sequence_manager::TaskQueue::Spec"*), void (%"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)* @_ZN4base16sequence_manager9TaskQueueC2ENSt3__110unique_ptrINS0_8internal13TaskQueueImplENS2_14default_deleteIS5_EEEERKNS1_4SpecE
@_ZN4base16sequence_manager9TaskQueueD1Ev = hidden unnamed_addr alias void (%"class.base::sequence_manager::TaskQueue"*), void (%"class.base::sequence_manager::TaskQueue"*)* @_ZN4base16sequence_manager9TaskQueueD2Ev
@_ZN4base16sequence_manager9TaskQueue10TaskTimingC1Ebb = hidden unnamed_addr alias void (%"class.base::sequence_manager::TaskQueue::TaskTiming"*, i1, i1), void (%"class.base::sequence_manager::TaskQueue::TaskTiming"*, i1, i1)* @_ZN4base16sequence_manager9TaskQueue10TaskTimingC2Ebb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoterC2E13scoped_refptrIS1_E(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* nocapture, %"class.base::sequence_manager::TaskQueue"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::sequence_manager::TaskQueue"* %1 to i64
  %4 = bitcast %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %0 to i64*
  store i64 %3, i64* %4, align 8
  %5 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter", %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %0, i64 0, i32 1
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %1, i64 0, i32 8
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 4
  %9 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %1, i64 0, i32 7
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue20AddQueueEnabledVoterEb(%"class.base::sequence_manager::TaskQueue"* nocapture, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 4
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 4
  br i1 %1, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 7
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 8
  br label %10

10:                                               ; preds = %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoterD2Ev(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter", %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %2, align 8
  %4 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %4, align 8
  %6 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %5, null
  br i1 %6, label %26, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter", %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %0, i64 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %3, i64 0, i32 7
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %3, i64 0, i32 8
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %10, label %18, label %16

16:                                               ; preds = %7
  %17 = add nsw i32 %12, -1
  store i32 %17, i32* %11, align 8
  br label %18

18:                                               ; preds = %7, %16
  %19 = phi i32 [ %17, %16 ], [ %12, %7 ]
  %20 = add nsw i32 %14, -1
  store i32 %20, i32* %13, align 4
  %21 = icmp eq i32 %19, %20
  %22 = xor i1 %15, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %18
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl15SetQueueEnabledEb(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %5, i1 zeroext %21) #11
  br label %24

24:                                               ; preds = %23, %18
  %25 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %2, align 8
  br label %26

26:                                               ; preds = %24, %1
  %27 = phi %"class.base::sequence_manager::TaskQueue"* [ %25, %24 ], [ %3, %1 ]
  %28 = icmp eq %"class.base::sequence_manager::TaskQueue"* %27, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %27, i64 0, i32 1
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw sub i32* %31, i32 1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %41

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %30, i64 -2
  %36 = bitcast %"class.base::RefCountedThreadSafe"* %35 to %"class.base::sequence_manager::TaskQueue"*
  %37 = bitcast %"class.base::RefCountedThreadSafe"* %35 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %38 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %38, i64 3
  %40 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %39, align 8
  tail call void %40(%"class.base::sequence_manager::TaskQueue"* nonnull %36) #11
  br label %41

41:                                               ; preds = %26, %29, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue23RemoveQueueEnabledVoterEb(%"class.base::sequence_manager::TaskQueue"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %3, align 8
  %5 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 7
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 8
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %8, %10
  br i1 %1, label %12, label %14

12:                                               ; preds = %6
  %13 = add nsw i32 %8, -1
  store i32 %13, i32* %7, align 8
  br label %14

14:                                               ; preds = %12, %6
  %15 = phi i32 [ %13, %12 ], [ %8, %6 ]
  %16 = add nsw i32 %10, -1
  store i32 %16, i32* %9, align 4
  %17 = icmp eq i32 %15, %16
  %18 = xor i1 %11, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl15SetQueueEnabledEb(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %4, i1 zeroext %17) #11
  br label %20

20:                                               ; preds = %2, %14, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoter15SetVoteToEnableEb(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i32
  %4 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter", %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = zext i8 %5 to i32
  %7 = icmp eq i32 %3, %6
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store i8 %9, i8* %4, align 8
  %10 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter", %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %0, i64 0, i32 0, i32 0
  %11 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %10, align 8
  %12 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %11, i64 0, i32 7
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %11, i64 0, i32 8
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %13, %15
  %17 = select i1 %1, i32 1, i32 -1
  %18 = add nsw i32 %13, %17
  store i32 %18, i32* %12, align 8
  %19 = icmp eq i32 %18, %15
  %20 = xor i1 %16, %19
  br i1 %20, label %21, label %24

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %22, align 8
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl15SetQueueEnabledEb(%"class.base::sequence_manager::internal::TaskQueueImpl"* %23, i1 zeroext %19) #11
  br label %24

24:                                               ; preds = %21, %8, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue25OnQueueEnabledVoteChangedEb(%"class.base::sequence_manager::TaskQueue"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  %8 = select i1 %1, i32 1, i32 -1
  %9 = add nsw i32 %4, %8
  store i32 %9, i32* %3, align 8
  %10 = icmp eq i32 %9, %6
  %11 = xor i1 %7, %10
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %13, align 8
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl15SetQueueEnabledEb(%"class.base::sequence_manager::internal::TaskQueueImpl"* %14, i1 zeroext %10) #11
  br label %15

15:                                               ; preds = %12, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base16sequence_manager9TaskQueue31AreAllQueueEnabledVotersEnabledEv(%"class.base::sequence_manager::TaskQueue"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %3, %5
  ret i1 %6
}

declare void @_ZN4base16sequence_manager8internal13TaskQueueImpl15SetQueueEnabledEb(%"class.base::sequence_manager::internal::TaskQueueImpl"*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueueC2ENSt3__110unique_ptrINS0_8internal13TaskQueueImplENS2_14default_deleteIS5_EEEERKNS1_4SpecE(%"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"struct.base::sequence_manager::TaskQueue::Spec"* nocapture readnone dereferenceable(32)) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.base::sequence_manager::internal::TaskQueueImpl"* %1 to i64
  %5 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4base16sequence_manager9TaskQueueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %7) #11
  %8 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %4, i64* %9, align 8
  %10 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %12 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %1, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl25GetSequenceManagerWeakPtrEv(%"class.base::WeakPtr"* sret %10, %"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %1) #11
  br label %16

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %10, i64 0, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %15) #11
  br label %16

16:                                               ; preds = %14, %13
  %17 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 5
  %18 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %11, align 8
  %19 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %18, null
  br i1 %19, label %32, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.base::sequence_manager::internal::TaskQueueImpl", %"class.base::sequence_manager::internal::TaskQueueImpl"* %18, i64 0, i32 1
  %22 = load %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %21, align 8
  %23 = icmp eq %"class.base::sequence_manager::internal::SequenceManagerImpl"* %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.base::sequence_manager::internal::SequenceManagerImpl", %"class.base::sequence_manager::internal::SequenceManagerImpl"* %22, i64 0, i32 4, i32 0
  %26 = load %"class.base::sequence_manager::internal::AssociatedThreadId"*, %"class.base::sequence_manager::internal::AssociatedThreadId"** %25, align 8
  %27 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %17, i64 0, i32 0
  store %"class.base::sequence_manager::internal::AssociatedThreadId"* %26, %"class.base::sequence_manager::internal::AssociatedThreadId"** %27, align 8
  %28 = icmp eq %"class.base::sequence_manager::internal::AssociatedThreadId"* %26, null
  br i1 %28, label %38, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::sequence_manager::internal::AssociatedThreadId", %"class.base::sequence_manager::internal::AssociatedThreadId"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic
  br label %38

32:                                               ; preds = %16, %20
  %33 = tail call i8* @_Znwm(i64 8) #12
  %34 = bitcast i8* %33 to %"class.base::sequence_manager::internal::AssociatedThreadId"*
  tail call void @_ZN4base16sequence_manager8internal18AssociatedThreadIdC1Ev(%"class.base::sequence_manager::internal::AssociatedThreadId"* nonnull %34) #11
  %35 = bitcast i8* %33 to i32*
  %36 = atomicrmw add i32* %35, i32 1 monotonic
  %37 = bitcast %class.scoped_refptr.1* %17 to i8**
  store i8* %33, i8** %37, align 8
  br label %38

38:                                               ; preds = %29, %24, %32
  %39 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 6
  %40 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %11, align 8
  %41 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = tail call %"class.base::SingleThreadTaskRunner"* @_ZNK4base16sequence_manager8internal13TaskQueueImpl16CreateTaskRunnerEh(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %40, i8 zeroext 0) #11
  %44 = getelementptr inbounds %class.scoped_refptr.146, %class.scoped_refptr.146* %39, i64 0, i32 0
  store %"class.base::SingleThreadTaskRunner"* %43, %"class.base::SingleThreadTaskRunner"** %44, align 8
  br label %55

45:                                               ; preds = %38
  %46 = tail call i8* @_Znwm(i64 80) #12
  %47 = bitcast i8* %46 to %"class.base::TaskRunner"*
  tail call void @_ZN4base10TaskRunnerC2Ev(%"class.base::TaskRunner"* nonnull %47) #11
  %48 = bitcast i8* %46 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4base16sequence_manager12_GLOBAL__N_114NullTaskRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %49 = getelementptr inbounds i8, i8* %46, i64 16
  %50 = bitcast i8* %49 to %"class.base::ThreadCheckerImpl"*
  tail call void @_ZN4base17ThreadCheckerImplC1Ev(%"class.base::ThreadCheckerImpl"* %50) #11
  %51 = getelementptr inbounds i8, i8* %46, i64 8
  %52 = bitcast i8* %51 to i32*
  %53 = atomicrmw add i32* %52, i32 1 monotonic
  %54 = bitcast %class.scoped_refptr.146* %39 to i8**
  store i8* %46, i8** %54, align 8
  br label %55

55:                                               ; preds = %45, %42
  %56 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 7
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 8
  store i32 0, i32* %57, align 4
  %58 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 9
  %59 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %11, align 8
  %60 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %55
  %62 = tail call i8* @_ZNK4base16sequence_manager8internal13TaskQueueImpl7GetNameEv(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %59) #11
  br label %63

63:                                               ; preds = %55, %61
  %64 = phi i8* [ %62, %61 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %55 ]
  store i8* %64, i8** %58, align 8
  %65 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 10, i32 0
  %66 = ptrtoint %"class.base::sequence_manager::TaskQueue"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %65, i64 %66) #11
  ret void
}

declare void @_ZN4base16sequence_manager8internal13TaskQueueImpl25GetSequenceManagerWeakPtrEv(%"class.base::WeakPtr"* sret, %"class.base::sequence_manager::internal::TaskQueueImpl"*) local_unnamed_addr #4

declare %"class.base::SingleThreadTaskRunner"* @_ZNK4base16sequence_manager8internal13TaskQueueImpl16CreateTaskRunnerEh(%"class.base::sequence_manager::internal::TaskQueueImpl"*, i8 zeroext) local_unnamed_addr #4

declare i8* @_ZNK4base16sequence_manager8internal13TaskQueueImpl7GetNameEv(%"class.base::sequence_manager::internal::TaskQueueImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueueD2Ev(%"class.base::sequence_manager::TaskQueue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4base16sequence_manager9TaskQueueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN4base16sequence_manager9TaskQueue27ShutdownTaskQueueGracefullyEv(%"class.base::sequence_manager::TaskQueue"* %0)
  %3 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 10, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #11
  %4 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 6, i32 0
  %5 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %4, align 8
  %6 = icmp eq %"class.base::SingleThreadTaskRunner"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe.21", %"class.base::RefCountedThreadSafe.21"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.21", %"class.base::RefCountedThreadSafe.21"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe.21"* %13 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %14) #11
  br label %15

15:                                               ; preds = %1, %7, %12
  %16 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 5, i32 0
  %17 = load %"class.base::sequence_manager::internal::AssociatedThreadId"*, %"class.base::sequence_manager::internal::AssociatedThreadId"** %16, align 8
  %18 = icmp eq %"class.base::sequence_manager::internal::AssociatedThreadId"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.base::sequence_manager::internal::AssociatedThreadId", %"class.base::sequence_manager::internal::AssociatedThreadId"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  tail call void @_ZN4base16sequence_manager8internal18AssociatedThreadIdD1Ev(%"class.base::sequence_manager::internal::AssociatedThreadId"* nonnull %17) #11
  %24 = bitcast %"class.base::sequence_manager::internal::AssociatedThreadId"* %17 to i8*
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %15, %19, %23
  %26 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %26) #11
  %27 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %27, align 8
  store %"class.base::sequence_manager::internal::TaskQueueImpl"* null, %"class.base::sequence_manager::internal::TaskQueueImpl"** %27, align 8
  %29 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImplD1Ev(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %28) #11
  %31 = bitcast %"class.base::sequence_manager::internal::TaskQueueImpl"* %28 to i8*
  tail call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %25, %30
  %33 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %33) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue27ShutdownTaskQueueGracefullyEv(%"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %2, align 8
  %4 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK4base16sequence_manager8internal13TaskQueueImpl14IsUnregisteredEv(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %3) #11
  br i1 %6, label %21, label %7

7:                                                ; preds = %5
  %8 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %2, align 8
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl11SetObserverEPNS0_9TaskQueue8ObserverE(%"class.base::sequence_manager::internal::TaskQueueImpl"* %8, %"class.base::sequence_manager::TaskQueue::Observer"* null) #11
  %9 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %2, align 8
  %10 = getelementptr inbounds %"class.base::sequence_manager::internal::TaskQueueImpl", %"class.base::sequence_manager::internal::TaskQueueImpl"* %9, i64 0, i32 1
  %11 = load %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %13) #11
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16, !prof !3

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %12, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %17) #11
  br label %18

18:                                               ; preds = %7, %16
  %19 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %2, align 8
  store %"class.base::sequence_manager::internal::TaskQueueImpl"* null, %"class.base::sequence_manager::internal::TaskQueueImpl"** %2, align 8
  %20 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %13) #11
  tail call void @_ZN4base16sequence_manager8internal19SequenceManagerImpl27ShutdownTaskQueueGracefullyENSt3__110unique_ptrINS1_13TaskQueueImplENS3_14default_deleteIS5_EEEE(%"class.base::sequence_manager::internal::SequenceManagerImpl"* %11, %"class.base::sequence_manager::internal::TaskQueueImpl"* %19) #11
  br label %21

21:                                               ; preds = %1, %5, %18
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueueD0Ev(%"class.base::sequence_manager::TaskQueue"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4base16sequence_manager9TaskQueueD2Ev(%"class.base::sequence_manager::TaskQueue"* %0) #11
  %2 = bitcast %"class.base::sequence_manager::TaskQueue"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare zeroext i1 @_ZNK4base16sequence_manager8internal13TaskQueueImpl14IsUnregisteredEv(%"class.base::sequence_manager::internal::TaskQueueImpl"*) local_unnamed_addr #4

declare void @_ZN4base16sequence_manager8internal13TaskQueueImpl11SetObserverEPNS0_9TaskQueue8ObserverE(%"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::TaskQueue::Observer"*) local_unnamed_addr #4

declare void @_ZN4base16sequence_manager8internal19SequenceManagerImpl27ShutdownTaskQueueGracefullyENSt3__110unique_ptrINS1_13TaskQueueImplENS3_14default_deleteIS5_EEEE(%"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::sequence_manager::internal::TaskQueueImpl"* @_ZN4base16sequence_manager9TaskQueue17TakeTaskQueueImplEv(%"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !3

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %9, align 8
  store %"class.base::sequence_manager::internal::TaskQueueImpl"* null, %"class.base::sequence_manager::internal::TaskQueueImpl"** %9, align 8
  %11 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #11
  ret %"class.base::sequence_manager::internal::TaskQueueImpl"* %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base16sequence_manager9TaskQueue10TaskTimingC2Ebb(%"class.base::sequence_manager::TaskQueue::TaskTiming"* nocapture, i1 zeroext, i1 zeroext) unnamed_addr #7 align 2 {
  %4 = zext i1 %1 to i8
  %5 = zext i1 %2 to i8
  %6 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %0, i64 0, i32 0
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %0, i64 0, i32 1
  store i8 %4, i8* %7, align 4
  %8 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %0, i64 0, i32 2
  store i8 %5, i8* %8, align 1
  %9 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = bitcast i64* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue10TaskTiming15RecordTaskStartEPNS0_7LazyNowE(%"class.base::sequence_manager::TaskQueue::TaskTiming"* nocapture, %"class.base::sequence_manager::LazyNow"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %0, i64 0, i32 0
  store i32 1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @_ZN4base16sequence_manager7LazyNow3NowEv(%"class.base::sequence_manager::LazyNow"* %1) #11
  %9 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %0, i64 0, i32 2
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #11
  %16 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 %15, i64* %16, align 8
  br label %17

17:                                               ; preds = %10, %14
  ret void
}

declare i64 @_ZN4base16sequence_manager7LazyNow3NowEv(%"class.base::sequence_manager::LazyNow"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i64 @_ZN4base11ThreadTicks3NowEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue10TaskTiming13RecordTaskEndEPNS0_7LazyNowE(%"class.base::sequence_manager::TaskQueue::TaskTiming"* nocapture, %"class.base::sequence_manager::LazyNow"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  store i32 2, i32* %3, align 8
  %7 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = tail call i64 @_ZN4base16sequence_manager7LazyNow3NowEv(%"class.base::sequence_manager::LazyNow"* %1) #11
  %12 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  br label %13

13:                                               ; preds = %6, %10
  %14 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %0, i64 0, i32 2
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #11
  %19 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 %18, i64* %19, align 8
  br label %20

20:                                               ; preds = %13, %2, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue17ShutdownTaskQueueEv(%"class.base::sequence_manager::TaskQueue"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.base::RepeatingCallback.135", align 8
  %4 = alloca %"class.base::RepeatingCallback.136", align 8
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %6, align 8
  %8 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %7, null
  br i1 %8, label %60, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 4, i32 0, i32 0
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #11
  br i1 %11, label %12, label %17

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 4, i32 0, i32 1
  %14 = bitcast i64* %13 to %"class.base::sequence_manager::internal::SequenceManagerImpl"**
  %15 = load %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %14, align 8
  %16 = icmp eq %"class.base::sequence_manager::internal::SequenceManagerImpl"* %15, null
  br i1 %16, label %17, label %30

17:                                               ; preds = %12, %9
  %18 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 2
  %19 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %19) #11
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22, !prof !3

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %18, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %23) #11
  br label %24

24:                                               ; preds = %17, %22
  %25 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %6, align 8
  store %"class.base::sequence_manager::internal::TaskQueueImpl"* null, %"class.base::sequence_manager::internal::TaskQueueImpl"** %6, align 8
  %26 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %19) #11
  %27 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %25, null
  br i1 %27, label %60, label %28

28:                                               ; preds = %24
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImplD1Ev(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %25) #11
  %29 = bitcast %"class.base::sequence_manager::internal::TaskQueueImpl"* %25 to i8*
  tail call void @_ZdlPv(i8* %29) #12
  br label %60

30:                                               ; preds = %12
  %31 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %6, align 8
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl15SetBlameContextEPNS_11trace_event12BlameContextE(%"class.base::sequence_manager::internal::TaskQueueImpl"* %31, %"class.base::trace_event::BlameContext"* null) #11
  %32 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %6, align 8
  %33 = getelementptr inbounds %"class.base::RepeatingCallback.135", %"class.base::RepeatingCallback.135"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %33, align 8
  call void @_ZN4base16sequence_manager8internal13TaskQueueImpl23SetOnTaskStartedHandlerENS_17RepeatingCallbackIFvRKNS0_4TaskERKNS0_9TaskQueue10TaskTimingEEEE(%"class.base::sequence_manager::internal::TaskQueueImpl"* %32, %"class.base::RepeatingCallback.135"* nonnull %3) #11
  %34 = getelementptr inbounds %"class.base::RepeatingCallback.135", %"class.base::RepeatingCallback.135"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %34) #11
  %35 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %6, align 8
  %36 = getelementptr inbounds %"class.base::RepeatingCallback.136", %"class.base::RepeatingCallback.136"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %36, align 8
  call void @_ZN4base16sequence_manager8internal13TaskQueueImpl25SetOnTaskCompletedHandlerENS_17RepeatingCallbackIFvRKNS0_4TaskEPNS0_9TaskQueue10TaskTimingEPNS0_7LazyNowEEEE(%"class.base::sequence_manager::internal::TaskQueueImpl"* %35, %"class.base::RepeatingCallback.136"* nonnull %4) #11
  %37 = getelementptr inbounds %"class.base::RepeatingCallback.136", %"class.base::RepeatingCallback.136"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #11
  %38 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %6, align 8
  %39 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %39, align 8
  call void @_ZN4base16sequence_manager8internal13TaskQueueImpl22SetOnTaskPostedHandlerENS_17RepeatingCallbackIFvRKNS0_4TaskEEEE(%"class.base::sequence_manager::internal::TaskQueueImpl"* %38, %"class.base::RepeatingCallback"* nonnull %5) #11
  %40 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %40) #11
  %41 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #11
  br i1 %41, label %45, label %42

42:                                               ; preds = %30
  %43 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #11
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  br label %45

45:                                               ; preds = %42, %30
  %46 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #11
  br i1 %46, label %47, label %49

47:                                               ; preds = %45
  %48 = load %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %14, align 8
  br label %49

49:                                               ; preds = %45, %47
  %50 = phi %"class.base::sequence_manager::internal::SequenceManagerImpl"* [ %48, %47 ], [ null, %45 ]
  %51 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 2
  %52 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %52) #11
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %57, label %55, !prof !3

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %51, i64 0, i32 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %56) #11
  br label %57

57:                                               ; preds = %49, %55
  %58 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %6, align 8
  store %"class.base::sequence_manager::internal::TaskQueueImpl"* null, %"class.base::sequence_manager::internal::TaskQueueImpl"** %6, align 8
  %59 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %52) #11
  call void @_ZN4base16sequence_manager8internal19SequenceManagerImpl23UnregisterTaskQueueImplENSt3__110unique_ptrINS1_13TaskQueueImplENS3_14default_deleteIS5_EEEE(%"class.base::sequence_manager::internal::SequenceManagerImpl"* %50, %"class.base::sequence_manager::internal::TaskQueueImpl"* %58) #11
  br label %60

60:                                               ; preds = %1, %24, %28, %57
  ret void
}

declare void @_ZN4base16sequence_manager8internal13TaskQueueImpl15SetBlameContextEPNS_11trace_event12BlameContextE(%"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::trace_event::BlameContext"*) local_unnamed_addr #4

declare void @_ZN4base16sequence_manager8internal13TaskQueueImpl23SetOnTaskStartedHandlerENS_17RepeatingCallbackIFvRKNS0_4TaskERKNS0_9TaskQueue10TaskTimingEEEE(%"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::RepeatingCallback.135"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

declare void @_ZN4base16sequence_manager8internal13TaskQueueImpl25SetOnTaskCompletedHandlerENS_17RepeatingCallbackIFvRKNS0_4TaskEPNS0_9TaskQueue10TaskTimingEPNS0_7LazyNowEEEE(%"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::RepeatingCallback.136"*) local_unnamed_addr #4

declare void @_ZN4base16sequence_manager8internal13TaskQueueImpl22SetOnTaskPostedHandlerENS_17RepeatingCallbackIFvRKNS0_4TaskEEEE(%"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::RepeatingCallback"*) local_unnamed_addr #4

declare void @_ZN4base16sequence_manager8internal19SequenceManagerImpl23UnregisterTaskQueueImplENSt3__110unique_ptrINS1_13TaskQueueImplENS3_14default_deleteIS5_EEEE(%"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZN4base16sequence_manager9TaskQueue16CreateTaskRunnerEh(%"class.base::sequence_manager::TaskQueue"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 5, i32 0
  %4 = load %"class.base::sequence_manager::internal::AssociatedThreadId"*, %"class.base::sequence_manager::internal::AssociatedThreadId"** %3, align 8
  %5 = getelementptr inbounds %"class.base::sequence_manager::internal::AssociatedThreadId", %"class.base::sequence_manager::internal::AssociatedThreadId"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %8 = icmp eq i32 %6, %7
  %9 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 2
  %10 = select i1 %8, %"class.base::internal::CheckedLock"* %9, %"class.base::internal::CheckedLock"* null
  %11 = icmp eq %"class.base::internal::CheckedLock"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %10, i64 0, i32 0, i32 0, i32 0
  %14 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %13) #11
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16, !prof !3

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %10, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %17) #11
  br label %18

18:                                               ; preds = %2, %12, %16
  %19 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %19, align 8
  %21 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %20, null
  br i1 %21, label %22, label %32

22:                                               ; preds = %18
  %23 = tail call i8* @_Znwm(i64 80) #12
  %24 = bitcast i8* %23 to %"class.base::TaskRunner"*
  tail call void @_ZN4base10TaskRunnerC2Ev(%"class.base::TaskRunner"* nonnull %24) #11
  %25 = bitcast i8* %23 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4base16sequence_manager12_GLOBAL__N_114NullTaskRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds i8, i8* %23, i64 16
  %27 = bitcast i8* %26 to %"class.base::ThreadCheckerImpl"*
  tail call void @_ZN4base17ThreadCheckerImplC1Ev(%"class.base::ThreadCheckerImpl"* %27) #11
  %28 = getelementptr inbounds i8, i8* %23, i64 8
  %29 = bitcast i8* %28 to i32*
  %30 = atomicrmw add i32* %29, i32 1 monotonic
  %31 = bitcast i8* %23 to %"class.base::SingleThreadTaskRunner"*
  br label %34

32:                                               ; preds = %18
  %33 = tail call %"class.base::SingleThreadTaskRunner"* @_ZNK4base16sequence_manager8internal13TaskQueueImpl16CreateTaskRunnerEh(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %20, i8 zeroext %1) #11
  br label %34

34:                                               ; preds = %32, %22
  %35 = phi %"class.base::SingleThreadTaskRunner"* [ %33, %32 ], [ %31, %22 ]
  br i1 %11, label %39, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %10, i64 0, i32 0, i32 0, i32 0
  %38 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %37) #11
  br label %39

39:                                               ; preds = %34, %36
  ret %"class.base::SingleThreadTaskRunner"* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base16sequence_manager9TaskQueue14IsOnMainThreadEv(%"class.base::sequence_manager::TaskQueue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.base::sequence_manager::internal::AssociatedThreadId"*, %"class.base::sequence_manager::internal::AssociatedThreadId"** %2, align 8
  %4 = getelementptr inbounds %"class.base::sequence_manager::internal::AssociatedThreadId", %"class.base::sequence_manager::internal::AssociatedThreadId"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i32, i32* %4 monotonic, align 4
  %6 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %7 = icmp eq i32 %5, %6
  ret i1 %7
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* @_ZN4base16sequence_manager9TaskQueue23CreateQueueEnabledVoterEv(%"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %2, align 8
  %4 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 16) #12
  %7 = bitcast i8* %6 to %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*
  %8 = icmp eq %"class.base::sequence_manager::TaskQueue"* %0, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %5, %9
  %13 = ptrtoint %"class.base::sequence_manager::TaskQueue"* %0 to i64
  %14 = bitcast i8* %6 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 8
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 8
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 4
  %19 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 7
  %20 = load i32, i32* %19, align 8
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %19, align 8
  br label %22

22:                                               ; preds = %1, %12
  %23 = phi %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* [ %7, %12 ], [ null, %1 ]
  ret %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %23
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base16sequence_manager9TaskQueue14IsQueueEnabledEv(%"class.base::sequence_manager::TaskQueue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %2, align 8
  %4 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK4base16sequence_manager8internal13TaskQueueImpl14IsQueueEnabledEv(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %3) #11
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ %6, %5 ], [ false, %1 ]
  ret i1 %8
}

declare zeroext i1 @_ZNK4base16sequence_manager8internal13TaskQueueImpl14IsQueueEnabledEv(%"class.base::sequence_manager::internal::TaskQueueImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base16sequence_manager9TaskQueue7IsEmptyEv(%"class.base::sequence_manager::TaskQueue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %2, align 8
  %4 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK4base16sequence_manager8internal13TaskQueueImpl7IsEmptyEv(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %3) #11
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ %6, %5 ], [ true, %1 ]
  ret i1 %8
}

declare zeroext i1 @_ZNK4base16sequence_manager8internal13TaskQueueImpl7IsEmptyEv(%"class.base::sequence_manager::internal::TaskQueueImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4base16sequence_manager9TaskQueue23GetNumberOfPendingTasksEv(%"class.base::sequence_manager::TaskQueue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %2, align 8
  %4 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i64 @_ZNK4base16sequence_manager8internal13TaskQueueImpl23GetNumberOfPendingTasksEv(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %3) #11
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i64 [ %6, %5 ], [ 0, %1 ]
  ret i64 %8
}

declare i64 @_ZNK4base16sequence_manager8internal13TaskQueueImpl23GetNumberOfPendingTasksEv(%"class.base::sequence_manager::internal::TaskQueueImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base16sequence_manager9TaskQueue23HasTaskToRunImmediatelyEv(%"class.base::sequence_manager::TaskQueue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %2, align 8
  %4 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK4base16sequence_manager8internal13TaskQueueImpl23HasTaskToRunImmediatelyEv(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %3) #11
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ %6, %5 ], [ false, %1 ]
  ret i1 %8
}

declare zeroext i1 @_ZNK4base16sequence_manager8internal13TaskQueueImpl23HasTaskToRunImmediatelyEv(%"class.base::sequence_manager::internal::TaskQueueImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN4base16sequence_manager9TaskQueue22GetNextScheduledWakeUpEv(%"class.base::sequence_manager::TaskQueue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %2, align 8
  %4 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = tail call { i8, i64 } @_ZN4base16sequence_manager8internal13TaskQueueImpl22GetNextScheduledWakeUpEv(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %3) #11
  %7 = extractvalue { i8, i64 } %6, 0
  %8 = extractvalue { i8, i64 } %6, 1
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i64 [ %8, %5 ], [ undef, %1 ]
  %11 = phi i8 [ %7, %5 ], [ 0, %1 ]
  %12 = insertvalue { i8, i64 } undef, i8 %11, 0
  %13 = insertvalue { i8, i64 } %12, i64 %10, 1
  ret { i8, i64 } %13
}

declare { i8, i64 } @_ZN4base16sequence_manager8internal13TaskQueueImpl22GetNextScheduledWakeUpEv(%"class.base::sequence_manager::internal::TaskQueueImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue16SetQueuePriorityENS1_13QueuePriorityE(%"class.base::sequence_manager::TaskQueue"* nocapture readonly, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %3, align 8
  %5 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl16SetQueuePriorityENS0_9TaskQueue13QueuePriorityE(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %4, i8 zeroext %1) #11
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN4base16sequence_manager8internal13TaskQueueImpl16SetQueuePriorityENS0_9TaskQueue13QueuePriorityE(%"class.base::sequence_manager::internal::TaskQueueImpl"*, i8 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK4base16sequence_manager9TaskQueue16GetQueuePriorityEv(%"class.base::sequence_manager::TaskQueue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %2, align 8
  %4 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i8 @_ZNK4base16sequence_manager8internal13TaskQueueImpl16GetQueuePriorityEv(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %3) #11
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i8 [ %6, %5 ], [ 5, %1 ]
  ret i8 %8
}

declare zeroext i8 @_ZNK4base16sequence_manager8internal13TaskQueueImpl16GetQueuePriorityEv(%"class.base::sequence_manager::internal::TaskQueueImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue15AddTaskObserverEPNS_12TaskObserverE(%"class.base::sequence_manager::TaskQueue"* nocapture readonly, %"class.base::TaskObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %3, align 8
  %5 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl15AddTaskObserverEPNS_12TaskObserverE(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %4, %"class.base::TaskObserver"* %1) #11
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN4base16sequence_manager8internal13TaskQueueImpl15AddTaskObserverEPNS_12TaskObserverE(%"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::TaskObserver"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue18RemoveTaskObserverEPNS_12TaskObserverE(%"class.base::sequence_manager::TaskQueue"* nocapture readonly, %"class.base::TaskObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %3, align 8
  %5 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl18RemoveTaskObserverEPNS_12TaskObserverE(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %4, %"class.base::TaskObserver"* %1) #11
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN4base16sequence_manager8internal13TaskQueueImpl18RemoveTaskObserverEPNS_12TaskObserverE(%"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::TaskObserver"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue13SetTimeDomainEPNS0_10TimeDomainE(%"class.base::sequence_manager::TaskQueue"* nocapture readonly, %"class.base::sequence_manager::TimeDomain"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %3, align 8
  %5 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl13SetTimeDomainEPNS0_10TimeDomainE(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %4, %"class.base::sequence_manager::TimeDomain"* %1) #11
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN4base16sequence_manager8internal13TaskQueueImpl13SetTimeDomainEPNS0_10TimeDomainE(%"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::TimeDomain"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::sequence_manager::TimeDomain"* @_ZNK4base16sequence_manager9TaskQueue13GetTimeDomainEv(%"class.base::sequence_manager::TaskQueue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %2, align 8
  %4 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.base::sequence_manager::TimeDomain"* @_ZNK4base16sequence_manager8internal13TaskQueueImpl13GetTimeDomainEv(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %3) #11
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi %"class.base::sequence_manager::TimeDomain"* [ %6, %5 ], [ null, %1 ]
  ret %"class.base::sequence_manager::TimeDomain"* %8
}

declare %"class.base::sequence_manager::TimeDomain"* @_ZNK4base16sequence_manager8internal13TaskQueueImpl13GetTimeDomainEv(%"class.base::sequence_manager::internal::TaskQueueImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue15SetBlameContextEPNS_11trace_event12BlameContextE(%"class.base::sequence_manager::TaskQueue"* nocapture readonly, %"class.base::trace_event::BlameContext"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %3, align 8
  %5 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl15SetBlameContextEPNS_11trace_event12BlameContextE(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %4, %"class.base::trace_event::BlameContext"* %1) #11
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue11InsertFenceENS1_19InsertFencePositionE(%"class.base::sequence_manager::TaskQueue"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %3, align 8
  %5 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl11InsertFenceENS0_9TaskQueue19InsertFencePositionE(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %4, i32 %1) #11
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN4base16sequence_manager8internal13TaskQueueImpl11InsertFenceENS0_9TaskQueue19InsertFencePositionE(%"class.base::sequence_manager::internal::TaskQueueImpl"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue13InsertFenceAtENS_9TimeTicksE(%"class.base::sequence_manager::TaskQueue"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %3, align 8
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl13InsertFenceAtENS_9TimeTicksE(%"class.base::sequence_manager::internal::TaskQueueImpl"* %4, i64 %1) #11
  ret void
}

declare void @_ZN4base16sequence_manager8internal13TaskQueueImpl13InsertFenceAtENS_9TimeTicksE(%"class.base::sequence_manager::internal::TaskQueueImpl"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue11RemoveFenceEv(%"class.base::sequence_manager::TaskQueue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %2, align 8
  %4 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl11RemoveFenceEv(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %3) #11
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN4base16sequence_manager8internal13TaskQueueImpl11RemoveFenceEv(%"class.base::sequence_manager::internal::TaskQueueImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base16sequence_manager9TaskQueue14HasActiveFenceEv(%"class.base::sequence_manager::TaskQueue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %2, align 8
  %4 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN4base16sequence_manager8internal13TaskQueueImpl14HasActiveFenceEv(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %3) #11
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ %6, %5 ], [ false, %1 ]
  ret i1 %8
}

declare zeroext i1 @_ZN4base16sequence_manager8internal13TaskQueueImpl14HasActiveFenceEv(%"class.base::sequence_manager::internal::TaskQueueImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base16sequence_manager9TaskQueue14BlockedByFenceEv(%"class.base::sequence_manager::TaskQueue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %2, align 8
  %4 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK4base16sequence_manager8internal13TaskQueueImpl14BlockedByFenceEv(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %3) #11
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ %6, %5 ], [ false, %1 ]
  ret i1 %8
}

declare zeroext i1 @_ZNK4base16sequence_manager8internal13TaskQueueImpl14BlockedByFenceEv(%"class.base::sequence_manager::internal::TaskQueueImpl"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK4base16sequence_manager9TaskQueue7GetNameEv(%"class.base::sequence_manager::TaskQueue"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 9
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base16sequence_manager9TaskQueue14WriteIntoTraceEN8perfetto11TracedValueE(%"class.base::sequence_manager::TaskQueue"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedDictionary", align 8
  %6 = bitcast %"class.perfetto::TracedDictionary"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = bitcast %"class.perfetto::TracedDictionary"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %5, %"class.perfetto::TracedValue"* %1) #11
  %8 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 9
  %9 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %4, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #11
  %10 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* nonnull align 8 %9, i64 16, i1 false) #11
  %11 = load i8*, i8** %8, align 8
  call void @_ZNO8perfetto11TracedValue11WriteStringEPKc(%"class.perfetto::TracedValue"* nonnull %3, i8* %11) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void
}

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue11SetObserverEPNS1_8ObserverE(%"class.base::sequence_manager::TaskQueue"* nocapture readonly, %"class.base::sequence_manager::TaskQueue::Observer"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %3, align 8
  %5 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl11SetObserverEPNS0_9TaskQueue8ObserverE(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %4, %"class.base::sequence_manager::TaskQueue::Observer"* %1) #11
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue38SetShouldReportPostedTasksWhenDisabledEb(%"class.base::sequence_manager::TaskQueue"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %3, align 8
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl38SetShouldReportPostedTasksWhenDisabledEb(%"class.base::sequence_manager::internal::TaskQueueImpl"* %4, i1 zeroext %1) #11
  ret void
}

declare void @_ZN4base16sequence_manager8internal13TaskQueueImpl38SetShouldReportPostedTasksWhenDisabledEb(%"class.base::sequence_manager::internal::TaskQueueImpl"*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue23SetOnTaskStartedHandlerENS_17RepeatingCallbackIFvRKNS0_4TaskERKNS1_10TaskTimingEEEE(%"class.base::sequence_manager::TaskQueue"* nocapture readonly, %"class.base::RepeatingCallback.135"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RepeatingCallback.135", align 8
  %4 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %4, align 8
  %6 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::RepeatingCallback.135", %"class.base::RepeatingCallback.135"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::RepeatingCallback.135"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::RepeatingCallback.135"* %3 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  call void @_ZN4base16sequence_manager8internal13TaskQueueImpl23SetOnTaskStartedHandlerENS_17RepeatingCallbackIFvRKNS0_4TaskERKNS0_9TaskQueue10TaskTimingEEEE(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %5, %"class.base::RepeatingCallback.135"* nonnull %3) #11
  %12 = getelementptr inbounds %"class.base::RepeatingCallback.135", %"class.base::RepeatingCallback.135"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #11
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue25SetOnTaskCompletedHandlerENS_17RepeatingCallbackIFvRKNS0_4TaskEPNS1_10TaskTimingEPNS0_7LazyNowEEEE(%"class.base::sequence_manager::TaskQueue"* nocapture readonly, %"class.base::RepeatingCallback.136"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RepeatingCallback.136", align 8
  %4 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %4, align 8
  %6 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::RepeatingCallback.136", %"class.base::RepeatingCallback.136"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::RepeatingCallback.136"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::RepeatingCallback.136"* %3 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  call void @_ZN4base16sequence_manager8internal13TaskQueueImpl25SetOnTaskCompletedHandlerENS_17RepeatingCallbackIFvRKNS0_4TaskEPNS0_9TaskQueue10TaskTimingEPNS0_7LazyNowEEEE(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %5, %"class.base::RepeatingCallback.136"* nonnull %3) #11
  %12 = getelementptr inbounds %"class.base::RepeatingCallback.136", %"class.base::RepeatingCallback.136"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #11
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager9TaskQueue22SetOnTaskPostedHandlerENS_17RepeatingCallbackIFvRKNS0_4TaskEEEE(%"class.base::sequence_manager::TaskQueue"* nocapture readonly, %"class.base::RepeatingCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %4, align 8
  %6 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::RepeatingCallback"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::RepeatingCallback"* %3 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  call void @_ZN4base16sequence_manager8internal13TaskQueueImpl22SetOnTaskPostedHandlerENS_17RepeatingCallbackIFvRKNS0_4TaskEEEE(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %5, %"class.base::RepeatingCallback"* nonnull %3) #11
  %12 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #11
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #4

declare void @_ZN4base17ThreadCheckerImplC1Ev(%"class.base::ThreadCheckerImpl"*) unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN4base16sequence_manager12_GLOBAL__N_114NullTaskRunner15PostDelayedTaskERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeDeltaE(%"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner"* nocapture readnone, %"class.base::Location"* nocapture readnone dereferenceable(32), %"class.base::OnceCallback"* nocapture readnone, i64) unnamed_addr #10 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base16sequence_manager12_GLOBAL__N_114NullTaskRunnerD2Ev(%"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner", %"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4base16sequence_manager12_GLOBAL__N_114NullTaskRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner", %"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner"* %0, i64 0, i32 1
  tail call void @_ZN4base17ThreadCheckerImplD1Ev(%"class.base::ThreadCheckerImpl"* %3) #11
  %4 = bitcast %"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner"* %0 to %"class.base::TaskRunner"*
  tail call void @_ZN4base10TaskRunnerD2Ev(%"class.base::TaskRunner"* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base16sequence_manager12_GLOBAL__N_114NullTaskRunnerD0Ev(%"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner", %"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4base16sequence_manager12_GLOBAL__N_114NullTaskRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner", %"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner"* %0, i64 0, i32 1
  tail call void @_ZN4base17ThreadCheckerImplD1Ev(%"class.base::ThreadCheckerImpl"* %3) #11
  %4 = bitcast %"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner"* %0 to %"class.base::TaskRunner"*
  tail call void @_ZN4base10TaskRunnerD2Ev(%"class.base::TaskRunner"* %4) #11
  %5 = bitcast %"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #12
  ret void
}

declare void @_ZNK4base10TaskRunner10OnDestructEv(%"class.base::TaskRunner"*) unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN4base16sequence_manager12_GLOBAL__N_114NullTaskRunner26PostNonNestableDelayedTaskERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeDeltaE(%"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner"* nocapture readnone, %"class.base::Location"* nocapture readnone dereferenceable(32), %"class.base::OnceCallback"* nocapture readnone, i64) unnamed_addr #10 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK4base16sequence_manager12_GLOBAL__N_114NullTaskRunner26RunsTasksInCurrentSequenceEv(%"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner", %"class.base::sequence_manager::(anonymous namespace)::NullTaskRunner"* %0, i64 0, i32 1
  %3 = tail call zeroext i1 @_ZNK4base17ThreadCheckerImpl19CalledOnValidThreadEPNSt3__110unique_ptrINS_5debug10StackTraceENS1_14default_deleteIS4_EEEE(%"class.base::ThreadCheckerImpl"* %2, %"class.std::__1::unique_ptr.163"* null) #11
  ret i1 %3
}

declare void @_ZN4base10TaskRunnerC2Ev(%"class.base::TaskRunner"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base10TaskRunnerD2Ev(%"class.base::TaskRunner"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base17ThreadCheckerImplD1Ev(%"class.base::ThreadCheckerImpl"*) unnamed_addr #5

declare zeroext i1 @_ZNK4base17ThreadCheckerImpl19CalledOnValidThreadEPNSt3__110unique_ptrINS_5debug10StackTraceENS1_14default_deleteIS4_EEEE(%"class.base::ThreadCheckerImpl"*, %"class.std::__1::unique_ptr.163"*) local_unnamed_addr #4

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #5

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #4

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #4

declare void @_ZN4base16sequence_manager8internal18AssociatedThreadIdC1Ev(%"class.base::sequence_manager::internal::AssociatedThreadId"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base16sequence_manager8internal18AssociatedThreadIdD1Ev(%"class.base::sequence_manager::internal::AssociatedThreadId"*) unnamed_addr #5

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #4

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base16sequence_manager8internal13TaskQueueImplD1Ev(%"class.base::sequence_manager::internal::TaskQueueImpl"*) unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #5

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #4

declare void @_ZNO8perfetto11TracedValue11WriteStringEPKc(%"class.perfetto::TracedValue"*, i8*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
