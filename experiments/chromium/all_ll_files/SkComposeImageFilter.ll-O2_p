; ModuleID = '../../third_party/skia/src/effects/imagefilters/SkComposeImageFilter.cpp'
source_filename = "../../third_party/skia/src/effects/imagefilters/SkComposeImageFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkImageFilterCache = type opaque
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"class.skif::FilterResult" = type { %class.sk_sp.18, %"class.skif::LayerSpace.19" }
%class.sk_sp.18 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.skif::LayerSpace.19" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %class.sk_sp*, i64 }
%class.sk_sp = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp*, [16 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.15 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.2*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.15*, %class.SkReadBuffer*)* }
%class.sk_sp.2 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.8*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.13*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.2*, i8*, i64, i8*)*, i8* }
%class.sk_sp.8 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.9", [7 x i8] }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%class.sk_sp.13 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.14, i32, i32 }
%class.sk_sp.14 = type { %class.SkColorSpace* }
%struct.SkISize = type { i32, i32 }
%"class.SkImageFilter_Base::Common" = type { %"class.SkImageFilter_Base::CropRect", %class.SkSTArray }
%"class.(anonymous namespace)::SkComposeImageFilter" = type { %class.SkImageFilter_Base.base, [4 x i8] }
%class.SkImageFilter_Base.base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32 }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.16*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.16 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.17, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkImageFilter18getFlattenableTypeEv = comdat any

$_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter = comdat any

$_ZNK18SkImageFilter_Base23affectsTransparentBlackEv = comdat any

@.str = private unnamed_addr constant [21 x i8] c"SkComposeImageFilter\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"SkComposeImageFilterImpl\00", align 1
@_ZTVN12_GLOBAL__N_120SkComposeImageFilterE = internal unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkImageFilter_Base*)* @_ZN18SkImageFilter_BaseD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkComposeImageFilter"*)* @_ZN12_GLOBAL__N_120SkComposeImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkReadBuffer*)* (%"class.(anonymous namespace)::SkComposeImageFilter"*)* @_ZNK12_GLOBAL__N_120SkComposeImageFilter10getFactoryEv to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::SkComposeImageFilter"*)* @_ZNK12_GLOBAL__N_120SkComposeImageFilter11getTypeNameEv to i8*), i8* bitcast (void (%class.SkImageFilter_Base*, %class.SkWriteBuffer*)* @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.(anonymous namespace)::SkComposeImageFilter"*, %struct.SkRect*)* @_ZNK12_GLOBAL__N_120SkComposeImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void (%class.sk_sp.18*, %"class.(anonymous namespace)::SkComposeImageFilter"*, %"class.skif::Context"*, %struct.SkIPoint*)* @_ZNK12_GLOBAL__N_120SkComposeImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint to i8*), i8* bitcast ({ i64, i64 } (%"class.(anonymous namespace)::SkComposeImageFilter"*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK12_GLOBAL__N_120SkComposeImageFilter14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_ to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::SkComposeImageFilter"*)* @_ZNK12_GLOBAL__N_120SkComposeImageFilter21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*)] }, align 8
@__const._ZNK12_GLOBAL__N_120SkComposeImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.outerContext = private unnamed_addr constant { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, [4 x i8], %class.SkColorSpace*, %"class.skif::FilterResult" } { %"class.skif::Mapping" { %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, %"class.skif::LayerSpace" { %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 } }, %class.SkImageFilterCache* inttoptr (i64 -6148914691236517206 to %class.SkImageFilterCache*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*), %"class.skif::FilterResult" { %class.sk_sp.18 { %class.SkSpecialImage* inttoptr (i64 -6148914691236517206 to %class.SkSpecialImage*) }, %"class.skif::LayerSpace.19" { %struct.SkIPoint { i32 -1431655766, i32 -1431655766 } } } }, align 8
@__const._ZN12_GLOBAL__N_120SkComposeImageFilter10CreateProcER12SkReadBuffer.common = private unnamed_addr constant { %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray } { %"class.SkImageFilter_Base::CropRect" { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkSTArray { %class.SkAlignedSTStorage { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray { %class.sk_sp* inttoptr (i64 -6148914691236517206 to %class.sk_sp*), i64 -6148914691236517206 } } }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters7ComposeE5sk_spI13SkImageFilterES2_(%class.sk_sp* noalias nocapture sret, %class.sk_sp* nocapture, %class.sk_sp* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca [2 x %class.sk_sp], align 16
  %5 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %6 = load %class.SkImageFilter*, %class.SkImageFilter** %5, align 8
  %7 = icmp eq %class.SkImageFilter* %6, null
  %8 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %9 = ptrtoint %class.SkImageFilter* %6 to i64
  br i1 %7, label %10, label %14

10:                                               ; preds = %3
  %11 = bitcast %class.sk_sp* %2 to i64*
  %12 = load i64, i64* %11, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %8, align 8
  %13 = bitcast %class.sk_sp* %0 to i64*
  store i64 %12, i64* %13, align 8
  br label %48

14:                                               ; preds = %3
  %15 = load %class.SkImageFilter*, %class.SkImageFilter** %8, align 8
  %16 = icmp eq %class.SkImageFilter* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  store %class.SkImageFilter* null, %class.SkImageFilter** %5, align 8
  %18 = bitcast %class.sk_sp* %0 to i64*
  store i64 %9, i64* %18, align 8
  br label %48

19:                                               ; preds = %14
  %20 = bitcast [2 x %class.sk_sp]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #8
  %21 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %4, i64 0, i64 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %5, align 8
  %22 = bitcast [2 x %class.sk_sp]* %4 to i64*
  store i64 %9, i64* %22, align 16
  %23 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %4, i64 0, i64 1
  %24 = bitcast %class.sk_sp* %2 to i64*
  %25 = load i64, i64* %24, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %8, align 8
  %26 = bitcast %class.sk_sp* %23 to i64*
  store i64 %25, i64* %26, align 8
  %27 = tail call i8* @_Znwm(i64 80) #9
  %28 = bitcast i8* %27 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %28, %class.sk_sp* nonnull %21, i32 2, %struct.SkRect* null) #8
  %29 = bitcast i8* %27 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_120SkComposeImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = bitcast %class.sk_sp* %0 to i8**
  store i8* %27, i8** %30, align 8
  %31 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %4, i64 0, i64 1, i32 0
  %32 = load %class.SkImageFilter*, %class.SkImageFilter** %31, align 8
  %33 = icmp eq %class.SkImageFilter* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %19
  %35 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkImageFilter* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkImageFilter* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  call void %43(%class.SkRefCntBase* nonnull %39) #8
  br label %44

44:                                               ; preds = %19, %34, %38
  %45 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %4, i64 0, i64 0, i32 0
  %46 = load %class.SkImageFilter*, %class.SkImageFilter** %45, align 16
  %47 = icmp eq %class.SkImageFilter* %46, null
  br i1 %47, label %59, label %49

48:                                               ; preds = %59, %17, %10
  ret void

49:                                               ; preds = %44
  %50 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %46, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = bitcast %class.SkImageFilter* %46 to %class.SkRefCntBase*
  %55 = bitcast %class.SkImageFilter* %46 to void (%class.SkRefCntBase*)***
  %56 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, i64 2
  %58 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, align 8
  call void %58(%class.SkRefCntBase* nonnull %54) #8
  br label %59

59:                                               ; preds = %53, %49, %44
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #8
  br label %48
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z39SkRegisterComposeImageFilterFlattenablev() local_unnamed_addr #0 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_120SkComposeImageFilter10CreateProcER12SkReadBuffer) #8
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_120SkComposeImageFilter10CreateProcER12SkReadBuffer) #8
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.15*, %class.SkReadBuffer*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_120SkComposeImageFilter10CreateProcER12SkReadBuffer(%class.sk_sp.15* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca [2 x %class.sk_sp], align 16
  %4 = alloca %"class.SkImageFilter_Base::Common", align 8
  %5 = bitcast %"class.SkImageFilter_Base::Common"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray }* @__const._ZN12_GLOBAL__N_120SkComposeImageFilter10CreateProcER12SkReadBuffer.common to i8*), i64 40, i1 false)
  %6 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 16
  %8 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 0
  %9 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 24
  %10 = bitcast i8* %9 to i64*
  %11 = bitcast i8* %7 to i8**
  store i8* %8, i8** %11, align 8
  store i64 17179869184, i64* %10, align 8
  %12 = call zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"* nonnull %4, %class.SkReadBuffer* dereferenceable(136) %1, i32 2) #8
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %14, align 8
  br label %80

15:                                               ; preds = %2
  %16 = bitcast i8* %7 to %class.sk_sp**
  %17 = load %class.sk_sp*, %class.sk_sp** %16, align 8, !noalias !2
  %18 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %17, i64 0, i32 0
  %19 = load %class.SkImageFilter*, %class.SkImageFilter** %18, align 8, !noalias !2
  %20 = icmp eq %class.SkImageFilter* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic, !noalias !2
  %24 = load %class.sk_sp*, %class.sk_sp** %16, align 8, !noalias !5
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi %class.sk_sp* [ %17, %15 ], [ %24, %21 ]
  %27 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %26, i64 1, i32 0
  %28 = load %class.SkImageFilter*, %class.SkImageFilter** %27, align 8, !noalias !5
  %29 = icmp eq %class.SkImageFilter* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 1 monotonic, !noalias !5
  br label %33

33:                                               ; preds = %25, %30
  %34 = ptrtoint %class.SkImageFilter* %28 to i64
  %35 = ptrtoint %class.SkImageFilter* %19 to i64
  br i1 %20, label %75, label %36

36:                                               ; preds = %33
  br i1 %29, label %78, label %37

37:                                               ; preds = %36
  %38 = bitcast [2 x %class.sk_sp]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #8, !noalias !8
  %39 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %3, i64 0, i64 0
  %40 = bitcast [2 x %class.sk_sp]* %3 to i64*
  store i64 %35, i64* %40, align 16, !noalias !8
  %41 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %3, i64 0, i64 1
  %42 = bitcast %class.sk_sp* %41 to i64*
  store i64 %34, i64* %42, align 8, !noalias !8
  %43 = call i8* @_Znwm(i64 80) #9, !noalias !8
  %44 = bitcast i8* %43 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %44, %class.sk_sp* nonnull %39, i32 2, %struct.SkRect* null) #8, !noalias !8
  %45 = bitcast i8* %43 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_120SkComposeImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8, !noalias !8
  %46 = ptrtoint i8* %43 to i64
  %47 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %3, i64 0, i64 1, i32 0
  %48 = load %class.SkImageFilter*, %class.SkImageFilter** %47, align 8, !noalias !8
  %49 = icmp eq %class.SkImageFilter* %48, null
  br i1 %49, label %60, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %48, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 -1 acq_rel, !noalias !8
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %60

54:                                               ; preds = %50
  %55 = bitcast %class.SkImageFilter* %48 to %class.SkRefCntBase*
  %56 = bitcast %class.SkImageFilter* %48 to void (%class.SkRefCntBase*)***
  %57 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %56, align 8, !noalias !8
  %58 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, i64 2
  %59 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, align 8, !noalias !8
  call void %59(%class.SkRefCntBase* nonnull %55) #8, !noalias !8
  br label %60

60:                                               ; preds = %54, %50, %37
  %61 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %3, i64 0, i64 0, i32 0
  %62 = load %class.SkImageFilter*, %class.SkImageFilter** %61, align 16, !noalias !8
  %63 = icmp eq %class.SkImageFilter* %62, null
  br i1 %63, label %74, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %62, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel, !noalias !8
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  %69 = bitcast %class.SkImageFilter* %62 to %class.SkRefCntBase*
  %70 = bitcast %class.SkImageFilter* %62 to void (%class.SkRefCntBase*)***
  %71 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %70, align 8, !noalias !8
  %72 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, i64 2
  %73 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, align 8, !noalias !8
  call void %73(%class.SkRefCntBase* nonnull %69) #8, !noalias !8
  br label %74

74:                                               ; preds = %68, %64, %60
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #8, !noalias !8
  br label %75

75:                                               ; preds = %74, %33
  %76 = phi i64 [ %34, %33 ], [ %46, %74 ]
  %77 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %76, i64* %77, align 8
  br label %80

78:                                               ; preds = %36
  %79 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %35, i64* %79, align 8
  br label %80

80:                                               ; preds = %78, %75, %13
  %81 = load i64, i64* %10, align 8
  %82 = and i64 %81, 4294967294
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %80
  %85 = bitcast i8* %7 to %class.sk_sp**
  br label %90

86:                                               ; preds = %106, %80
  %87 = phi i64 [ %81, %80 ], [ %108, %106 ]
  %88 = and i64 %87, 1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %114, label %112

90:                                               ; preds = %106, %84
  %91 = phi i64 [ 0, %84 ], [ %107, %106 ]
  %92 = load %class.sk_sp*, %class.sk_sp** %85, align 8
  %93 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %92, i64 %91, i32 0
  %94 = load %class.SkImageFilter*, %class.SkImageFilter** %93, align 8
  %95 = icmp eq %class.SkImageFilter* %94, null
  br i1 %95, label %106, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %94, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = atomicrmw add i32* %97, i32 -1 acq_rel
  %99 = icmp eq i32 %98, 1
  br i1 %99, label %100, label %106

100:                                              ; preds = %96
  %101 = bitcast %class.SkImageFilter* %94 to %class.SkRefCntBase*
  %102 = bitcast %class.SkImageFilter* %94 to void (%class.SkRefCntBase*)***
  %103 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %102, align 8
  %104 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %103, i64 2
  %105 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %104, align 8
  call void %105(%class.SkRefCntBase* nonnull %101) #8
  br label %106

106:                                              ; preds = %100, %96, %90
  %107 = add nuw nsw i64 %91, 1
  %108 = load i64, i64* %10, align 8
  %109 = lshr i64 %108, 1
  %110 = and i64 %109, 2147483647
  %111 = icmp ult i64 %107, %110
  br i1 %111, label %90, label %86

112:                                              ; preds = %86
  %113 = load i8*, i8** %11, align 8
  call void @_Z7sk_freePv(i8* %113) #8
  br label %114

114:                                              ; preds = %86, %112
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #8
  ret void
}

declare void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base*, %class.sk_sp*, i32, %struct.SkRect*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_120SkComposeImageFilterD0Ev(%"class.(anonymous namespace)::SkComposeImageFilter"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::SkComposeImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %2) #8
  %3 = bitcast %"class.(anonymous namespace)::SkComposeImageFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #8
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal nonnull void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZNK12_GLOBAL__N_120SkComposeImageFilter10getFactoryEv(%"class.(anonymous namespace)::SkComposeImageFilter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZN12_GLOBAL__N_120SkComposeImageFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_120SkComposeImageFilter11getTypeNameEv(%"class.(anonymous namespace)::SkComposeImageFilter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)
}

declare void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkImageFilter18getFlattenableTypeEv(%class.SkImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define internal { <2 x float>, <2 x float> } @_ZNK12_GLOBAL__N_120SkComposeImageFilter17computeFastBoundsERK6SkRect(%"class.(anonymous namespace)::SkComposeImageFilter"*, %struct.SkRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRect*
  %5 = bitcast %"class.(anonymous namespace)::SkComposeImageFilter"* %0 to %class.SkImageFilter*
  %6 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %5, i32 0) #8
  %7 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %5, i32 1) #8
  %8 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  %9 = bitcast %class.SkImageFilter* %7 to { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)***
  %10 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)**, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*** %9, align 8
  %11 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %10, i64 7
  %12 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %11, align 8
  %13 = tail call { <2 x float>, <2 x float> } %12(%class.SkImageFilter* %7, %struct.SkRect* dereferenceable(16) %1) #8
  %14 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %15 = extractvalue { <2 x float>, <2 x float> } %13, 0
  store <2 x float> %15, <2 x float>* %14, align 8
  %16 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %17 = extractvalue { <2 x float>, <2 x float> } %13, 1
  store <2 x float> %17, <2 x float>* %16, align 8
  %18 = bitcast %class.SkImageFilter* %6 to { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)***
  %19 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)**, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*** %18, align 8
  %20 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %19, i64 7
  %21 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %20, align 8
  %22 = call { <2 x float>, <2 x float> } %21(%class.SkImageFilter* %6, %struct.SkRect* nonnull dereferenceable(16) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  ret { <2 x float>, <2 x float> } %22
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_120SkComposeImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint(%class.sk_sp.18* noalias nocapture sret, %"class.(anonymous namespace)::SkComposeImageFilter"*, %"class.skif::Context"* dereferenceable(136), %struct.SkIPoint* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.skif::FilterResult", align 8
  %6 = alloca %"class.skif::FilterResult", align 8
  %7 = alloca %"class.skif::Context", align 8
  %8 = alloca %class.SkMatrix, align 4
  %9 = alloca %"class.skif::Context", align 8
  %10 = bitcast %"class.(anonymous namespace)::SkComposeImageFilter"* %1 to %class.SkImageFilter*
  %11 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %10, i32 0) #8
  %12 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  %14 = tail call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* %11, %struct.SkIRect* dereferenceable(16) %12, %class.SkMatrix* dereferenceable(40) %13, i32 1, %struct.SkIRect* %12) #8
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = bitcast %"class.skif::Context"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %17) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 bitcast ({ %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, [4 x i8], %class.SkColorSpace*, %"class.skif::FilterResult" }* @__const._ZNK12_GLOBAL__N_120SkComposeImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.outerContext to i8*), i64 136, i1 false)
  %18 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 2
  %19 = bitcast %class.SkImageFilterCache** %18 to i64*
  %20 = load i64, i64* %19, align 8, !noalias !11
  %21 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %22 = load i32, i32* %21, align 8, !noalias !11
  %23 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %24 = bitcast %class.SkColorSpace** %23 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !11
  %26 = bitcast %"class.skif::Context"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 4 %26, i64 80, i1 false) #8
  %27 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 1
  %28 = bitcast %"class.skif::LayerSpace"* %27 to i64*
  store i64 %15, i64* %28, align 8
  %29 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 1, i32 0, i32 2
  %30 = bitcast i32* %29 to i64*
  store i64 %16, i64* %30, align 8
  %31 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 2
  %32 = bitcast %class.SkImageFilterCache** %31 to i64*
  store i64 %20, i64* %32, align 8, !alias.scope !11
  %33 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 3
  store i32 %22, i32* %33, align 8, !alias.scope !11
  %34 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 4
  %35 = bitcast %class.SkColorSpace** %34 to i64*
  store i64 %25, i64* %35, align 8, !alias.scope !11
  %36 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 5, i32 0, i32 0
  %37 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %38 = load %class.SkSpecialImage*, %class.SkSpecialImage** %37, align 8, !noalias !11
  %39 = icmp eq %class.SkSpecialImage* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %4
  %41 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %38, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 1 monotonic, !noalias !11
  br label %43

43:                                               ; preds = %4, %40
  store %class.SkSpecialImage* %38, %class.SkSpecialImage** %36, align 8, !alias.scope !11
  %44 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 5, i32 1
  %45 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 1
  %46 = bitcast %"class.skif::LayerSpace.19"* %45 to i64*
  %47 = bitcast %"class.skif::LayerSpace.19"* %44 to i64*
  %48 = load i64, i64* %46, align 8, !noalias !11
  store i64 %48, i64* %47, align 8, !alias.scope !11
  %49 = bitcast %"class.(anonymous namespace)::SkComposeImageFilter"* %1 to %class.SkImageFilter_Base*
  %50 = bitcast %"class.skif::FilterResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #8, !noalias !14
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %5, %class.SkImageFilter_Base* %49, i32 1, %"class.skif::Context"* nonnull dereferenceable(136) %7) #8, !noalias !14
  %51 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %5, i64 0, i32 0, i32 0
  %52 = load %class.SkSpecialImage*, %class.SkSpecialImage** %51, align 8, !noalias !17
  %53 = icmp eq %class.SkSpecialImage* %52, null
  br i1 %53, label %71, label %54

54:                                               ; preds = %43
  %55 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %5, i64 0, i32 1, i32 0
  %56 = bitcast %struct.SkIPoint* %55 to i64*
  %57 = load i64, i64* %56, align 8, !noalias !17
  %58 = trunc i64 %57 to i32
  %59 = lshr i64 %57, 32
  %60 = trunc i64 %59 to i32
  %61 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %52, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 1 monotonic, !noalias !17
  %63 = atomicrmw add i32* %61, i32 -1 acq_rel, !noalias !14
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %73

65:                                               ; preds = %54
  %66 = bitcast %class.SkSpecialImage* %52 to %class.SkRefCntBase*
  %67 = bitcast %class.SkSpecialImage* %52 to void (%class.SkRefCntBase*)***
  %68 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %67, align 8, !noalias !14
  %69 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, i64 2
  %70 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, align 8, !noalias !14
  call void %70(%class.SkRefCntBase* nonnull %66) #8, !noalias !14
  br label %73

71:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #8, !noalias !14
  %72 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %72, align 8
  br label %208

73:                                               ; preds = %65, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #8, !noalias !14
  %74 = bitcast %class.SkMatrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %74) #8
  %75 = bitcast %class.SkMatrix* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %75, i64 40, i1 false)
  %76 = sub nsw i32 0, %58
  %77 = sitofp i32 %76 to float
  %78 = sub nsw i32 0, %60
  %79 = sitofp i32 %78 to float
  %80 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %8, float %77, float %79) #8
  %81 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 1, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 1, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 1, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 1, i32 0, i32 3
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %82 to i64
  %90 = sext i32 %76 to i64
  %91 = add nsw i64 %89, %90
  %92 = icmp slt i64 %91, 2147483647
  %93 = select i1 %92, i64 %91, i64 2147483647
  %94 = icmp sgt i64 %93, -2147483647
  %95 = select i1 %94, i64 %93, i64 -2147483647
  %96 = trunc i64 %95 to i32
  %97 = sext i32 %84 to i64
  %98 = sext i32 %78 to i64
  %99 = add nsw i64 %97, %98
  %100 = icmp slt i64 %99, 2147483647
  %101 = select i1 %100, i64 %99, i64 2147483647
  %102 = icmp sgt i64 %101, -2147483647
  %103 = select i1 %102, i64 %101, i64 -2147483647
  %104 = trunc i64 %103 to i32
  %105 = sext i32 %86 to i64
  %106 = add nsw i64 %105, %90
  %107 = icmp slt i64 %106, 2147483647
  %108 = select i1 %107, i64 %106, i64 2147483647
  %109 = icmp sgt i64 %108, -2147483647
  %110 = select i1 %109, i64 %108, i64 -2147483647
  %111 = trunc i64 %110 to i32
  %112 = sext i32 %88 to i64
  %113 = add nsw i64 %112, %98
  %114 = icmp slt i64 %113, 2147483647
  %115 = select i1 %114, i64 %113, i64 2147483647
  %116 = icmp sgt i64 %115, -2147483647
  %117 = select i1 %116, i64 %115, i64 -2147483647
  %118 = trunc i64 %117 to i32
  %119 = bitcast %"class.skif::Context"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %119) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %119, i8* align 8 bitcast ({ %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, [4 x i8], %class.SkColorSpace*, %"class.skif::FilterResult" }* @__const._ZNK12_GLOBAL__N_120SkComposeImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.outerContext to i8*), i64 136, i1 false)
  %120 = load i64, i64* %19, align 8
  %121 = load i32, i32* %21, align 8
  %122 = load i64, i64* %24, align 8
  %123 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #8
  %124 = bitcast %class.SkMatrix* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %119, i8* align 4 %124, i64 40, i1 false) #8
  %125 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %9, i64 0, i32 0, i32 1
  %126 = bitcast %class.SkMatrix* %125 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* nonnull align 4 %74, i64 40, i1 false) #8
  %127 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %9, i64 0, i32 1, i32 0, i32 0
  store i32 %96, i32* %127, align 8
  %128 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %9, i64 0, i32 1, i32 0, i32 1
  store i32 %104, i32* %128, align 4
  %129 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %9, i64 0, i32 1, i32 0, i32 2
  store i32 %111, i32* %129, align 8
  %130 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %9, i64 0, i32 1, i32 0, i32 3
  store i32 %118, i32* %130, align 4
  %131 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %9, i64 0, i32 2
  %132 = bitcast %class.SkImageFilterCache** %131 to i64*
  store i64 %120, i64* %132, align 8
  %133 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %9, i64 0, i32 3
  store i32 %121, i32* %133, align 8
  %134 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %9, i64 0, i32 4
  %135 = bitcast %class.SkColorSpace** %134 to i64*
  store i64 %122, i64* %135, align 8
  %136 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %9, i64 0, i32 5
  %137 = atomicrmw add i32* %61, i32 1 monotonic, !noalias !20
  %138 = ptrtoint %class.SkSpecialImage* %52 to i64
  %139 = bitcast %"class.skif::FilterResult"* %136 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %9, i64 0, i32 5, i32 1
  %141 = bitcast %"class.skif::LayerSpace.19"* %140 to i64*
  store i64 0, i64* %141, align 8
  %142 = bitcast %"class.skif::FilterResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %142) #8, !noalias !23
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %6, %class.SkImageFilter_Base* %49, i32 0, %"class.skif::Context"* nonnull dereferenceable(136) %9) #8, !noalias !23
  %143 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %6, i64 0, i32 0, i32 0
  %144 = load %class.SkSpecialImage*, %class.SkSpecialImage** %143, align 8, !noalias !26
  %145 = icmp eq %class.SkSpecialImage* %144, null
  br i1 %145, label %146, label %148

146:                                              ; preds = %73
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142) #8, !noalias !23
  %147 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %147, align 8
  br label %185

148:                                              ; preds = %73
  %149 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %6, i64 0, i32 1, i32 0
  %150 = bitcast %struct.SkIPoint* %149 to i64*
  %151 = load i64, i64* %150, align 8, !noalias !26
  %152 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %144, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = atomicrmw add i32* %152, i32 1 monotonic, !noalias !26
  %154 = ptrtoint %class.SkSpecialImage* %144 to i64
  %155 = atomicrmw add i32* %152, i32 -1 acq_rel, !noalias !23
  %156 = icmp eq i32 %155, 1
  br i1 %156, label %157, label %163

157:                                              ; preds = %148
  %158 = bitcast %class.SkSpecialImage* %144 to %class.SkRefCntBase*
  %159 = bitcast %class.SkSpecialImage* %144 to void (%class.SkRefCntBase*)***
  %160 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %159, align 8, !noalias !23
  %161 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %160, i64 2
  %162 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %161, align 8, !noalias !23
  call void %162(%class.SkRefCntBase* nonnull %158) #8, !noalias !23
  br label %163

163:                                              ; preds = %148, %157
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142) #8, !noalias !23
  %164 = shl i64 %57, 32
  %165 = ashr exact i64 %164, 32
  %166 = shl i64 %151, 32
  %167 = ashr exact i64 %166, 32
  %168 = add nsw i64 %167, %165
  %169 = icmp slt i64 %168, 2147483647
  %170 = select i1 %169, i64 %168, i64 2147483647
  %171 = icmp sgt i64 %170, -2147483647
  %172 = select i1 %171, i64 %170, i64 -2147483647
  %173 = ashr i64 %57, 32
  %174 = ashr i64 %151, 32
  %175 = add nsw i64 %174, %173
  %176 = icmp slt i64 %175, 2147483647
  %177 = select i1 %176, i64 %175, i64 2147483647
  %178 = icmp sgt i64 %177, -2147483647
  %179 = select i1 %178, i64 %177, i64 -2147483647
  %180 = shl nsw i64 %179, 32
  %181 = and i64 %172, 4294967295
  %182 = or i64 %181, %180
  %183 = bitcast %struct.SkIPoint* %3 to i64*
  store i64 %182, i64* %183, align 4
  %184 = bitcast %class.sk_sp.18* %0 to i64*
  store i64 %154, i64* %184, align 8
  br label %185

185:                                              ; preds = %146, %163
  %186 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %9, i64 0, i32 5, i32 0, i32 0
  %187 = load %class.SkSpecialImage*, %class.SkSpecialImage** %186, align 8
  %188 = icmp eq %class.SkSpecialImage* %187, null
  br i1 %188, label %199, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %187, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = atomicrmw add i32* %190, i32 -1 acq_rel
  %192 = icmp eq i32 %191, 1
  br i1 %192, label %193, label %199

193:                                              ; preds = %189
  %194 = bitcast %class.SkSpecialImage* %187 to %class.SkRefCntBase*
  %195 = bitcast %class.SkSpecialImage* %187 to void (%class.SkRefCntBase*)***
  %196 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %195, align 8
  %197 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %196, i64 2
  %198 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %197, align 8
  call void %198(%class.SkRefCntBase* nonnull %194) #8
  br label %199

199:                                              ; preds = %185, %189, %193
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %119) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %74) #8
  %200 = atomicrmw add i32* %61, i32 -1 acq_rel
  %201 = icmp eq i32 %200, 1
  br i1 %201, label %202, label %208

202:                                              ; preds = %199
  %203 = bitcast %class.SkSpecialImage* %52 to %class.SkRefCntBase*
  %204 = bitcast %class.SkSpecialImage* %52 to void (%class.SkRefCntBase*)***
  %205 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %204, align 8
  %206 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %205, i64 2
  %207 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %206, align 8
  call void %207(%class.SkRefCntBase* nonnull %203) #8
  br label %208

208:                                              ; preds = %71, %199, %202
  %209 = load %class.SkSpecialImage*, %class.SkSpecialImage** %36, align 8
  %210 = icmp eq %class.SkSpecialImage* %209, null
  br i1 %210, label %221, label %211

211:                                              ; preds = %208
  %212 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %209, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = atomicrmw add i32* %212, i32 -1 acq_rel
  %214 = icmp eq i32 %213, 1
  br i1 %214, label %215, label %221

215:                                              ; preds = %211
  %216 = bitcast %class.SkSpecialImage* %209 to %class.SkRefCntBase*
  %217 = bitcast %class.SkSpecialImage* %209 to void (%class.SkRefCntBase*)***
  %218 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %217, align 8
  %219 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %218, i64 2
  %220 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %219, align 8
  call void %220(%class.SkRefCntBase* nonnull %216) #8
  br label %221

221:                                              ; preds = %208, %211, %215
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %17) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal { i64, i64 } @_ZNK12_GLOBAL__N_120SkComposeImageFilter14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_(%"class.(anonymous namespace)::SkComposeImageFilter"*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #0 align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast %"class.(anonymous namespace)::SkComposeImageFilter"* %0 to %class.SkImageFilter*
  %9 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %8, i32 0) #8
  %10 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %8, i32 1) #8
  %11 = icmp eq i32 %3, 1
  br i1 %11, label %12, label %21

12:                                               ; preds = %5
  %13 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %14 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %16 = tail call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* %9, %struct.SkIRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 1, %struct.SkIRect* %4) #8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %18 = extractvalue { i64, i64 } %16, 0
  store i64 %18, i64* %17, align 8
  %19 = extractvalue { i64, i64 } %16, 1
  store i64 %19, i64* %15, align 8
  %20 = call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* %10, %struct.SkIRect* nonnull dereferenceable(16) %13, %class.SkMatrix* dereferenceable(40) %2, i32 1, %struct.SkIRect* null) #8
  br label %30

21:                                               ; preds = %5
  %22 = bitcast { i64, i64 }* %7 to %struct.SkIRect*
  %23 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %25 = tail call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* %10, %struct.SkIRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 %3, %struct.SkIRect* null) #8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %27 = extractvalue { i64, i64 } %25, 0
  store i64 %27, i64* %26, align 8
  %28 = extractvalue { i64, i64 } %25, 1
  store i64 %28, i64* %24, align 8
  %29 = call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* %9, %struct.SkIRect* nonnull dereferenceable(16) %22, %class.SkMatrix* dereferenceable(40) %2, i32 %3, %struct.SkIRect* null) #8
  br label %30

30:                                               ; preds = %21, %12
  %31 = phi { i64, i64 } [ %29, %21 ], [ %20, %12 ]
  %32 = phi i8* [ %23, %21 ], [ %14, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #8
  ret { i64, i64 } %31
}

declare { i64, i64 } @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter_Base*, %class.SkColorFilter**) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_120SkComposeImageFilter21onCanHandleComplexCTMEv(%"class.(anonymous namespace)::SkComposeImageFilter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE() unnamed_addr

declare { i64, i64 } @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16), %"class.skif::LayerSpace"* dereferenceable(16), i1 zeroext) unnamed_addr #3

declare { i64, i64 } @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter*, i32) local_unnamed_addr #3

declare { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #3

declare void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* sret, %class.SkImageFilter_Base*, i32, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #3

declare zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"*, %class.SkReadBuffer* dereferenceable(136), i32) local_unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!4 = distinct !{!4, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!7 = distinct !{!7, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN14SkImageFilters7ComposeE5sk_spI13SkImageFilterES2_: argument 0"}
!10 = distinct !{!10, !"_ZN14SkImageFilters7ComposeE5sk_spI13SkImageFilterES2_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4skif7Context20withNewDesiredOutputERKNS_10LayerSpaceI7SkIRectEE: argument 0"}
!13 = distinct !{!13, !"_ZNK4skif7Context20withNewDesiredOutputERKNS_10LayerSpaceI7SkIRectEE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!16 = distinct !{!16, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!17 = !{!18, !15}
!18 = distinct !{!18, !19, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!19 = distinct !{!19, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_Z9sk_ref_spI14SkSpecialImageE5sk_spIT_EPKS2_: argument 0"}
!22 = distinct !{!22, !"_Z9sk_ref_spI14SkSpecialImageE5sk_spIT_EPKS2_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!25 = distinct !{!25, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!26 = !{!27, !24}
!27 = distinct !{!27, !28, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!28 = distinct !{!28, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
