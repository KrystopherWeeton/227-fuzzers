; ModuleID = '../../components/omnibox/browser/autocomplete_match_classification.cc'
source_filename = "../../components/omnibox/browser/autocomplete_match_classification.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.TermMatch*, %struct.TermMatch*, %"class.std::__1::__compressed_pair" }
%struct.TermMatch = type { i32, i64, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.TermMatch* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { i64*, i64*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i64* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::allocator.4" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"*, %"class.std::__1::__compressed_pair.22" }
%"struct.AutocompleteMatch::ACMatchClassification" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.AutocompleteMatch::ACMatchClassification"* }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z15FindTermMatchesNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES5_bb(%"class.std::__1::vector"* noalias sret, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i1 zeroext, i1 zeroext) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::vector.6", align 8
  %13 = alloca %"class.std::__1::vector", align 8
  %14 = alloca %"class.std::__1::vector", align 8
  %15 = alloca %"class.std::__1::vector", align 8
  %16 = alloca %"class.std::__1::vector.13", align 8
  %17 = alloca %"class.std::__1::vector.6", align 8
  %18 = alloca %"class.std::__1::vector.13", align 8
  %19 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #7
  %20 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %20, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %5
  %25 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 8 %26, i64 24, i1 false) #7
  br label %202

27:                                               ; preds = %5
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i16*, i16** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %33, label %38

33:                                               ; preds = %27
  %34 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %35 = trunc i64 %31 to i8
  %36 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  store i8 %35, i8* %37, align 1
  br label %55

38:                                               ; preds = %27
  %39 = icmp ugt i64 %31, 9223372036854775791
  br i1 %39, label %40, label %42

40:                                               ; preds = %38
  %41 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %41) #8
  unreachable

42:                                               ; preds = %38
  %43 = add nuw nsw i64 %31, 8
  %44 = and i64 %43, -8
  %45 = icmp slt i64 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  tail call void @abort() #8
  unreachable

47:                                               ; preds = %42
  %48 = shl i64 %44, 1
  %49 = tail call i8* @_Znwm(i64 %48) #9
  %50 = bitcast i8* %49 to i16*
  %51 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  store i8* %49, i8** %51, align 8
  %52 = or i64 %44, -9223372036854775808
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %31, i64* %54, align 8
  br label %55

55:                                               ; preds = %47, %33
  %56 = phi i16* [ %34, %33 ], [ %50, %47 ]
  %57 = add nuw nsw i64 %31, 1
  %58 = add i64 %31, 1
  %59 = icmp ult i64 %58, 16
  br i1 %59, label %149, label %60

60:                                               ; preds = %55
  %61 = add i64 %31, 1
  %62 = getelementptr i16, i16* %56, i64 %61
  %63 = getelementptr i16, i16* %29, i64 %61
  %64 = icmp ult i16* %56, %63
  %65 = icmp ult i16* %29, %62
  %66 = and i1 %64, %65
  br i1 %66, label %149, label %67

67:                                               ; preds = %60
  %68 = and i64 %58, -16
  %69 = sub i64 %57, %68
  %70 = getelementptr i16, i16* %29, i64 %68
  %71 = getelementptr i16, i16* %56, i64 %68
  %72 = add i64 %68, -16
  %73 = lshr exact i64 %72, 4
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 3
  %76 = icmp ult i64 %72, 48
  br i1 %76, label %128, label %77

77:                                               ; preds = %67
  %78 = sub nsw i64 %74, %75
  br label %79

79:                                               ; preds = %79, %77
  %80 = phi i64 [ 0, %77 ], [ %125, %79 ]
  %81 = phi i64 [ %78, %77 ], [ %126, %79 ]
  %82 = getelementptr i16, i16* %29, i64 %80
  %83 = getelementptr i16, i16* %56, i64 %80
  %84 = bitcast i16* %82 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !2
  %86 = getelementptr i16, i16* %82, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !2
  %89 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %89, align 2, !alias.scope !5, !noalias !2
  %90 = getelementptr i16, i16* %83, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %91, align 2, !alias.scope !5, !noalias !2
  %92 = or i64 %80, 16
  %93 = getelementptr i16, i16* %29, i64 %92
  %94 = getelementptr i16, i16* %56, i64 %92
  %95 = bitcast i16* %93 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !2
  %97 = getelementptr i16, i16* %93, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !2
  %100 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %100, align 2, !alias.scope !5, !noalias !2
  %101 = getelementptr i16, i16* %94, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %102, align 2, !alias.scope !5, !noalias !2
  %103 = or i64 %80, 32
  %104 = getelementptr i16, i16* %29, i64 %103
  %105 = getelementptr i16, i16* %56, i64 %103
  %106 = bitcast i16* %104 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !2
  %108 = getelementptr i16, i16* %104, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !2
  %111 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %111, align 2, !alias.scope !5, !noalias !2
  %112 = getelementptr i16, i16* %105, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %113, align 2, !alias.scope !5, !noalias !2
  %114 = or i64 %80, 48
  %115 = getelementptr i16, i16* %29, i64 %114
  %116 = getelementptr i16, i16* %56, i64 %114
  %117 = bitcast i16* %115 to <8 x i16>*
  %118 = load <8 x i16>, <8 x i16>* %117, align 2, !alias.scope !2
  %119 = getelementptr i16, i16* %115, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !2
  %122 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %118, <8 x i16>* %122, align 2, !alias.scope !5, !noalias !2
  %123 = getelementptr i16, i16* %116, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %124, align 2, !alias.scope !5, !noalias !2
  %125 = add i64 %80, 64
  %126 = add i64 %81, -4
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %79, !llvm.loop !7

128:                                              ; preds = %79, %67
  %129 = phi i64 [ 0, %67 ], [ %125, %79 ]
  %130 = icmp eq i64 %75, 0
  br i1 %130, label %147, label %131

131:                                              ; preds = %128, %131
  %132 = phi i64 [ %144, %131 ], [ %129, %128 ]
  %133 = phi i64 [ %145, %131 ], [ %75, %128 ]
  %134 = getelementptr i16, i16* %29, i64 %132
  %135 = getelementptr i16, i16* %56, i64 %132
  %136 = bitcast i16* %134 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !2
  %138 = getelementptr i16, i16* %134, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !2
  %141 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %141, align 2, !alias.scope !5, !noalias !2
  %142 = getelementptr i16, i16* %135, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %143, align 2, !alias.scope !5, !noalias !2
  %144 = add i64 %132, 16
  %145 = add i64 %133, -1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %131, !llvm.loop !9

147:                                              ; preds = %131, %128
  %148 = icmp eq i64 %58, %68
  br i1 %148, label %202, label %149

149:                                              ; preds = %147, %60, %55
  %150 = phi i64 [ %57, %60 ], [ %57, %55 ], [ %69, %147 ]
  %151 = phi i16* [ %29, %60 ], [ %29, %55 ], [ %70, %147 ]
  %152 = phi i16* [ %56, %60 ], [ %56, %55 ], [ %71, %147 ]
  %153 = add i64 %150, -1
  %154 = and i64 %150, 7
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %167, label %156

156:                                              ; preds = %149, %156
  %157 = phi i64 [ %162, %156 ], [ %150, %149 ]
  %158 = phi i16* [ %164, %156 ], [ %151, %149 ]
  %159 = phi i16* [ %163, %156 ], [ %152, %149 ]
  %160 = phi i64 [ %165, %156 ], [ %154, %149 ]
  %161 = load i16, i16* %158, align 2
  store i16 %161, i16* %159, align 2
  %162 = add i64 %157, -1
  %163 = getelementptr inbounds i16, i16* %159, i64 1
  %164 = getelementptr inbounds i16, i16* %158, i64 1
  %165 = add i64 %160, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %156, !llvm.loop !11

167:                                              ; preds = %156, %149
  %168 = phi i64 [ %150, %149 ], [ %162, %156 ]
  %169 = phi i16* [ %151, %149 ], [ %164, %156 ]
  %170 = phi i16* [ %152, %149 ], [ %163, %156 ]
  %171 = icmp ult i64 %153, 7
  br i1 %171, label %202, label %172

172:                                              ; preds = %167, %172
  %173 = phi i64 [ %198, %172 ], [ %168, %167 ]
  %174 = phi i16* [ %200, %172 ], [ %169, %167 ]
  %175 = phi i16* [ %199, %172 ], [ %170, %167 ]
  %176 = load i16, i16* %174, align 2
  store i16 %176, i16* %175, align 2
  %177 = getelementptr inbounds i16, i16* %175, i64 1
  %178 = getelementptr inbounds i16, i16* %174, i64 1
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %175, i64 2
  %181 = getelementptr inbounds i16, i16* %174, i64 2
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %175, i64 3
  %184 = getelementptr inbounds i16, i16* %174, i64 3
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %175, i64 4
  %187 = getelementptr inbounds i16, i16* %174, i64 4
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %175, i64 5
  %190 = getelementptr inbounds i16, i16* %174, i64 5
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %175, i64 6
  %193 = getelementptr inbounds i16, i16* %174, i64 6
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %175, i64 7
  %196 = getelementptr inbounds i16, i16* %174, i64 7
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = add i64 %173, -8
  %199 = getelementptr inbounds i16, i16* %175, i64 8
  %200 = getelementptr inbounds i16, i16* %174, i64 8
  %201 = icmp eq i64 %198, 0
  br i1 %201, label %202, label %172, !llvm.loop !12

202:                                              ; preds = %167, %172, %147, %24
  %203 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %203) #7, !noalias !13
  %204 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::allocator.4"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, i64 0, i64 2000, %"class.std::__1::allocator.4"* nonnull dereferenceable(1) %204) #7, !noalias !13
  %205 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %206 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %205, i64 0, i32 1, i32 1
  %207 = load i8, i8* %206, align 1, !noalias !13
  %208 = icmp slt i8 %207, 0
  %209 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load i16*, i16** %209, align 8, !noalias !13
  %211 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %212 = select i1 %208, i16* %210, i16* %211
  %213 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %214 = load i64, i64* %213, align 8, !noalias !13
  %215 = zext i8 %207 to i64
  %216 = select i1 %208, i64 %214, i64 %215
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %8, i16* %212, i64 %216) #7
  %217 = load i8, i8* %206, align 1, !noalias !13
  %218 = icmp slt i8 %217, 0
  br i1 %218, label %219, label %222

219:                                              ; preds = %202
  %220 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %221 = load i8*, i8** %220, align 8, !noalias !13
  call void @_ZdlPv(i8* %221) #9
  br label %222

222:                                              ; preds = %202, %219
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %203) #7, !noalias !13
  %223 = load i8, i8* %21, align 1
  %224 = icmp slt i8 %223, 0
  br i1 %224, label %225, label %228

225:                                              ; preds = %222
  %226 = bitcast %"class.std::__1::basic_string"* %1 to i8**
  %227 = load i8*, i8** %226, align 8
  call void @_ZdlPv(i8* %227) #9
  br label %228

228:                                              ; preds = %225, %222
  %229 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %229, i8* nonnull align 8 %19, i64 24, i1 false) #7
  %230 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %231 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %230, i64 0, i32 1, i32 1
  store i8 0, i8* %231, align 1
  %232 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  store i16 0, i16* %232, align 8
  %233 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %234 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %233, i64 0, i32 1, i32 1
  %235 = load i8, i8* %234, align 1
  %236 = icmp slt i8 %235, 0
  br i1 %236, label %237, label %240

237:                                              ; preds = %228
  %238 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  %239 = load i8*, i8** %238, align 8
  call void @_ZdlPv(i8* %239) #9
  br label %240

240:                                              ; preds = %228, %237
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #7
  %241 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %241) #7
  %242 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %243 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %242, i64 0, i32 1, i32 1
  %244 = load i8, i8* %243, align 1
  %245 = icmp slt i8 %244, 0
  br i1 %245, label %249, label %246

246:                                              ; preds = %240
  %247 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %248 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %247, i8* align 8 %248, i64 24, i1 false) #7
  br label %424

249:                                              ; preds = %240
  %250 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load i16*, i16** %250, align 8
  %252 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %253 = load i64, i64* %252, align 8
  %254 = icmp ult i64 %253, 11
  br i1 %254, label %255, label %260

255:                                              ; preds = %249
  %256 = bitcast %"class.std::__1::basic_string"* %11 to i16*
  %257 = trunc i64 %253 to i8
  %258 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %259 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %258, i64 0, i32 1, i32 1
  store i8 %257, i8* %259, align 1
  br label %277

260:                                              ; preds = %249
  %261 = icmp ugt i64 %253, 9223372036854775791
  br i1 %261, label %262, label %264

262:                                              ; preds = %260
  %263 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %263) #8
  unreachable

264:                                              ; preds = %260
  %265 = add nuw nsw i64 %253, 8
  %266 = and i64 %265, -8
  %267 = icmp slt i64 %266, 0
  br i1 %267, label %268, label %269

268:                                              ; preds = %264
  call void @abort() #8
  unreachable

269:                                              ; preds = %264
  %270 = shl i64 %266, 1
  %271 = call i8* @_Znwm(i64 %270) #9
  %272 = bitcast i8* %271 to i16*
  %273 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  store i8* %271, i8** %273, align 8
  %274 = or i64 %266, -9223372036854775808
  %275 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %274, i64* %275, align 8
  %276 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %253, i64* %276, align 8
  br label %277

277:                                              ; preds = %269, %255
  %278 = phi i16* [ %256, %255 ], [ %272, %269 ]
  %279 = add nuw nsw i64 %253, 1
  %280 = add i64 %253, 1
  %281 = icmp ult i64 %280, 16
  br i1 %281, label %371, label %282

282:                                              ; preds = %277
  %283 = add i64 %253, 1
  %284 = getelementptr i16, i16* %278, i64 %283
  %285 = getelementptr i16, i16* %251, i64 %283
  %286 = icmp ult i16* %278, %285
  %287 = icmp ult i16* %251, %284
  %288 = and i1 %286, %287
  br i1 %288, label %371, label %289

289:                                              ; preds = %282
  %290 = and i64 %280, -16
  %291 = sub i64 %279, %290
  %292 = getelementptr i16, i16* %251, i64 %290
  %293 = getelementptr i16, i16* %278, i64 %290
  %294 = add i64 %290, -16
  %295 = lshr exact i64 %294, 4
  %296 = add nuw nsw i64 %295, 1
  %297 = and i64 %296, 3
  %298 = icmp ult i64 %294, 48
  br i1 %298, label %350, label %299

299:                                              ; preds = %289
  %300 = sub nsw i64 %296, %297
  br label %301

301:                                              ; preds = %301, %299
  %302 = phi i64 [ 0, %299 ], [ %347, %301 ]
  %303 = phi i64 [ %300, %299 ], [ %348, %301 ]
  %304 = getelementptr i16, i16* %251, i64 %302
  %305 = getelementptr i16, i16* %278, i64 %302
  %306 = bitcast i16* %304 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !16
  %308 = getelementptr i16, i16* %304, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !16
  %311 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %311, align 2, !alias.scope !19, !noalias !16
  %312 = getelementptr i16, i16* %305, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %313, align 2, !alias.scope !19, !noalias !16
  %314 = or i64 %302, 16
  %315 = getelementptr i16, i16* %251, i64 %314
  %316 = getelementptr i16, i16* %278, i64 %314
  %317 = bitcast i16* %315 to <8 x i16>*
  %318 = load <8 x i16>, <8 x i16>* %317, align 2, !alias.scope !16
  %319 = getelementptr i16, i16* %315, i64 8
  %320 = bitcast i16* %319 to <8 x i16>*
  %321 = load <8 x i16>, <8 x i16>* %320, align 2, !alias.scope !16
  %322 = bitcast i16* %316 to <8 x i16>*
  store <8 x i16> %318, <8 x i16>* %322, align 2, !alias.scope !19, !noalias !16
  %323 = getelementptr i16, i16* %316, i64 8
  %324 = bitcast i16* %323 to <8 x i16>*
  store <8 x i16> %321, <8 x i16>* %324, align 2, !alias.scope !19, !noalias !16
  %325 = or i64 %302, 32
  %326 = getelementptr i16, i16* %251, i64 %325
  %327 = getelementptr i16, i16* %278, i64 %325
  %328 = bitcast i16* %326 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !16
  %330 = getelementptr i16, i16* %326, i64 8
  %331 = bitcast i16* %330 to <8 x i16>*
  %332 = load <8 x i16>, <8 x i16>* %331, align 2, !alias.scope !16
  %333 = bitcast i16* %327 to <8 x i16>*
  store <8 x i16> %329, <8 x i16>* %333, align 2, !alias.scope !19, !noalias !16
  %334 = getelementptr i16, i16* %327, i64 8
  %335 = bitcast i16* %334 to <8 x i16>*
  store <8 x i16> %332, <8 x i16>* %335, align 2, !alias.scope !19, !noalias !16
  %336 = or i64 %302, 48
  %337 = getelementptr i16, i16* %251, i64 %336
  %338 = getelementptr i16, i16* %278, i64 %336
  %339 = bitcast i16* %337 to <8 x i16>*
  %340 = load <8 x i16>, <8 x i16>* %339, align 2, !alias.scope !16
  %341 = getelementptr i16, i16* %337, i64 8
  %342 = bitcast i16* %341 to <8 x i16>*
  %343 = load <8 x i16>, <8 x i16>* %342, align 2, !alias.scope !16
  %344 = bitcast i16* %338 to <8 x i16>*
  store <8 x i16> %340, <8 x i16>* %344, align 2, !alias.scope !19, !noalias !16
  %345 = getelementptr i16, i16* %338, i64 8
  %346 = bitcast i16* %345 to <8 x i16>*
  store <8 x i16> %343, <8 x i16>* %346, align 2, !alias.scope !19, !noalias !16
  %347 = add i64 %302, 64
  %348 = add i64 %303, -4
  %349 = icmp eq i64 %348, 0
  br i1 %349, label %350, label %301, !llvm.loop !21

350:                                              ; preds = %301, %289
  %351 = phi i64 [ 0, %289 ], [ %347, %301 ]
  %352 = icmp eq i64 %297, 0
  br i1 %352, label %369, label %353

353:                                              ; preds = %350, %353
  %354 = phi i64 [ %366, %353 ], [ %351, %350 ]
  %355 = phi i64 [ %367, %353 ], [ %297, %350 ]
  %356 = getelementptr i16, i16* %251, i64 %354
  %357 = getelementptr i16, i16* %278, i64 %354
  %358 = bitcast i16* %356 to <8 x i16>*
  %359 = load <8 x i16>, <8 x i16>* %358, align 2, !alias.scope !16
  %360 = getelementptr i16, i16* %356, i64 8
  %361 = bitcast i16* %360 to <8 x i16>*
  %362 = load <8 x i16>, <8 x i16>* %361, align 2, !alias.scope !16
  %363 = bitcast i16* %357 to <8 x i16>*
  store <8 x i16> %359, <8 x i16>* %363, align 2, !alias.scope !19, !noalias !16
  %364 = getelementptr i16, i16* %357, i64 8
  %365 = bitcast i16* %364 to <8 x i16>*
  store <8 x i16> %362, <8 x i16>* %365, align 2, !alias.scope !19, !noalias !16
  %366 = add i64 %354, 16
  %367 = add i64 %355, -1
  %368 = icmp eq i64 %367, 0
  br i1 %368, label %369, label %353, !llvm.loop !22

369:                                              ; preds = %353, %350
  %370 = icmp eq i64 %280, %290
  br i1 %370, label %424, label %371

371:                                              ; preds = %369, %282, %277
  %372 = phi i64 [ %279, %282 ], [ %279, %277 ], [ %291, %369 ]
  %373 = phi i16* [ %251, %282 ], [ %251, %277 ], [ %292, %369 ]
  %374 = phi i16* [ %278, %282 ], [ %278, %277 ], [ %293, %369 ]
  %375 = add i64 %372, -1
  %376 = and i64 %372, 7
  %377 = icmp eq i64 %376, 0
  br i1 %377, label %389, label %378

378:                                              ; preds = %371, %378
  %379 = phi i64 [ %384, %378 ], [ %372, %371 ]
  %380 = phi i16* [ %386, %378 ], [ %373, %371 ]
  %381 = phi i16* [ %385, %378 ], [ %374, %371 ]
  %382 = phi i64 [ %387, %378 ], [ %376, %371 ]
  %383 = load i16, i16* %380, align 2
  store i16 %383, i16* %381, align 2
  %384 = add i64 %379, -1
  %385 = getelementptr inbounds i16, i16* %381, i64 1
  %386 = getelementptr inbounds i16, i16* %380, i64 1
  %387 = add i64 %382, -1
  %388 = icmp eq i64 %387, 0
  br i1 %388, label %389, label %378, !llvm.loop !23

389:                                              ; preds = %378, %371
  %390 = phi i64 [ %372, %371 ], [ %384, %378 ]
  %391 = phi i16* [ %373, %371 ], [ %386, %378 ]
  %392 = phi i16* [ %374, %371 ], [ %385, %378 ]
  %393 = icmp ult i64 %375, 7
  br i1 %393, label %424, label %394

394:                                              ; preds = %389, %394
  %395 = phi i64 [ %420, %394 ], [ %390, %389 ]
  %396 = phi i16* [ %422, %394 ], [ %391, %389 ]
  %397 = phi i16* [ %421, %394 ], [ %392, %389 ]
  %398 = load i16, i16* %396, align 2
  store i16 %398, i16* %397, align 2
  %399 = getelementptr inbounds i16, i16* %397, i64 1
  %400 = getelementptr inbounds i16, i16* %396, i64 1
  %401 = load i16, i16* %400, align 2
  store i16 %401, i16* %399, align 2
  %402 = getelementptr inbounds i16, i16* %397, i64 2
  %403 = getelementptr inbounds i16, i16* %396, i64 2
  %404 = load i16, i16* %403, align 2
  store i16 %404, i16* %402, align 2
  %405 = getelementptr inbounds i16, i16* %397, i64 3
  %406 = getelementptr inbounds i16, i16* %396, i64 3
  %407 = load i16, i16* %406, align 2
  store i16 %407, i16* %405, align 2
  %408 = getelementptr inbounds i16, i16* %397, i64 4
  %409 = getelementptr inbounds i16, i16* %396, i64 4
  %410 = load i16, i16* %409, align 2
  store i16 %410, i16* %408, align 2
  %411 = getelementptr inbounds i16, i16* %397, i64 5
  %412 = getelementptr inbounds i16, i16* %396, i64 5
  %413 = load i16, i16* %412, align 2
  store i16 %413, i16* %411, align 2
  %414 = getelementptr inbounds i16, i16* %397, i64 6
  %415 = getelementptr inbounds i16, i16* %396, i64 6
  %416 = load i16, i16* %415, align 2
  store i16 %416, i16* %414, align 2
  %417 = getelementptr inbounds i16, i16* %397, i64 7
  %418 = getelementptr inbounds i16, i16* %396, i64 7
  %419 = load i16, i16* %418, align 2
  store i16 %419, i16* %417, align 2
  %420 = add i64 %395, -8
  %421 = getelementptr inbounds i16, i16* %397, i64 8
  %422 = getelementptr inbounds i16, i16* %396, i64 8
  %423 = icmp eq i64 %420, 0
  br i1 %423, label %424, label %394, !llvm.loop !24

424:                                              ; preds = %389, %394, %369, %246
  %425 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %425) #7, !noalias !25
  %426 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::allocator.4"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, i64 0, i64 2000, %"class.std::__1::allocator.4"* nonnull dereferenceable(1) %426) #7, !noalias !25
  %427 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %428 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %427, i64 0, i32 1, i32 1
  %429 = load i8, i8* %428, align 1, !noalias !25
  %430 = icmp slt i8 %429, 0
  %431 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %432 = load i16*, i16** %431, align 8, !noalias !25
  %433 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %434 = select i1 %430, i16* %432, i16* %433
  %435 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %436 = load i64, i64* %435, align 8, !noalias !25
  %437 = zext i8 %429 to i64
  %438 = select i1 %430, i64 %436, i64 %437
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %10, i16* %434, i64 %438) #7
  %439 = load i8, i8* %428, align 1, !noalias !25
  %440 = icmp slt i8 %439, 0
  br i1 %440, label %441, label %444

441:                                              ; preds = %424
  %442 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %443 = load i8*, i8** %442, align 8, !noalias !25
  call void @_ZdlPv(i8* %443) #9
  br label %444

444:                                              ; preds = %424, %441
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %425) #7, !noalias !25
  %445 = load i8, i8* %243, align 1
  %446 = icmp slt i8 %445, 0
  br i1 %446, label %447, label %450

447:                                              ; preds = %444
  %448 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %449 = load i8*, i8** %448, align 8
  call void @_ZdlPv(i8* %449) #9
  br label %450

450:                                              ; preds = %447, %444
  %451 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %451, i8* nonnull align 8 %241, i64 24, i1 false) #7
  %452 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %453 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %452, i64 0, i32 1, i32 1
  store i8 0, i8* %453, align 1
  %454 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  store i16 0, i16* %454, align 8
  %455 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %456 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %455, i64 0, i32 1, i32 1
  %457 = load i8, i8* %456, align 1
  %458 = icmp slt i8 %457, 0
  br i1 %458, label %459, label %462

459:                                              ; preds = %450
  %460 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  %461 = load i8*, i8** %460, align 8
  call void @_ZdlPv(i8* %461) #9
  br label %462

462:                                              ; preds = %450, %459
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %241) #7
  br i1 %3, label %463, label %507

463:                                              ; preds = %462
  %464 = load i8, i8* %243, align 1
  %465 = icmp slt i8 %464, 0
  %466 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %467 = load i16*, i16** %466, align 8
  %468 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %469 = select i1 %465, i16* %467, i16* %468
  %470 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %471 = load i64, i64* %470, align 8
  %472 = zext i8 %464 to i64
  %473 = select i1 %465, i64 %471, i64 %472
  %474 = load i8, i8* %21, align 1
  %475 = icmp slt i8 %474, 0
  %476 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %477 = load i16*, i16** %476, align 8
  %478 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %479 = select i1 %475, i16* %477, i16* %478
  %480 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %481 = load i64, i64* %480, align 8
  %482 = zext i8 %474 to i64
  %483 = select i1 %475, i64 %481, i64 %482
  %484 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %469, i64 %473, i16* %479, i64 %483, i32 0) #7
  br i1 %484, label %485, label %507

485:                                              ; preds = %463
  %486 = load i8, i8* %21, align 1
  %487 = icmp slt i8 %486, 0
  br i1 %487, label %488, label %490

488:                                              ; preds = %485
  %489 = load i64, i64* %480, align 8
  br label %492

490:                                              ; preds = %485
  %491 = zext i8 %486 to i64
  br label %492

492:                                              ; preds = %488, %490
  %493 = phi i64 [ %489, %488 ], [ %491, %490 ]
  %494 = call i8* @_Znwm(i64 24) #9
  %495 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %496 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %494, i8** %496, align 8
  %497 = getelementptr inbounds i8, i8* %494, i64 24
  %498 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %499 = bitcast %struct.TermMatch** %498 to i8**
  store i8* %497, i8** %499, align 8
  %500 = bitcast %struct.TermMatch** %495 to i64*
  %501 = bitcast i8* %494 to i32*
  store i32 0, i32* %501, align 8
  %502 = getelementptr inbounds i8, i8* %494, i64 8
  %503 = bitcast i8* %502 to i64*
  store i64 0, i64* %503, align 8
  %504 = getelementptr inbounds i8, i8* %494, i64 16
  %505 = bitcast i8* %504 to i64*
  store i64 %493, i64* %505, align 8
  %506 = ptrtoint i8* %497 to i64
  store i64 %506, i64* %500, align 8
  br label %658

507:                                              ; preds = %462, %463
  %508 = bitcast %"class.std::__1::vector.6"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %508) #7
  %509 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %12, i64 0, i32 0, i32 0
  %510 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %12, i64 0, i32 0, i32 1
  %511 = bitcast %"class.std::__1::vector.6"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %511, i8 -86, i64 24, i1 false)
  call void @_Z26String16VectorFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEbPNS_6vectorImNS3_ImEEEE(%"class.std::__1::vector.6"* nonnull sret %12, %"class.std::__1::basic_string"* dereferenceable(24) %1, i1 zeroext false, %"class.std::__1::vector.13"* null) #7
  %512 = bitcast %"class.std::__1::vector"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %512) #7
  %513 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 0
  %514 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 1
  %515 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %516 = bitcast %"class.std::__1::vector"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %516, i8 -86, i64 24, i1 false)
  call void @_Z18MatchTermsInStringRKNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEEERKS6_(%"class.std::__1::vector"* nonnull sret %13, %"class.std::__1::vector.6"* nonnull dereferenceable(24) %12, %"class.std::__1::basic_string"* dereferenceable(24) %2) #7
  %517 = bitcast %"class.std::__1::vector"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %517) #7
  call void @_Z11SortMatchesRKNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEEE(%"class.std::__1::vector"* nonnull sret %14, %"class.std::__1::vector"* nonnull dereferenceable(24) %13) #7
  %518 = load %struct.TermMatch*, %struct.TermMatch** %513, align 8
  %519 = icmp eq %struct.TermMatch* %518, null
  br i1 %519, label %520, label %522

520:                                              ; preds = %507
  %521 = bitcast %struct.TermMatch** %514 to i64*
  br label %526

522:                                              ; preds = %507
  %523 = ptrtoint %struct.TermMatch* %518 to i64
  %524 = bitcast %struct.TermMatch** %514 to i64*
  store i64 %523, i64* %524, align 8
  %525 = bitcast %struct.TermMatch* %518 to i8*
  call void @_ZdlPv(i8* %525) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %512, i8 0, i64 24, i1 false) #7
  br label %526

526:                                              ; preds = %522, %520
  %527 = phi i64* [ %521, %520 ], [ %524, %522 ]
  %528 = bitcast %"class.std::__1::vector"* %14 to i64*
  %529 = load i64, i64* %528, align 8
  %530 = bitcast %"class.std::__1::vector"* %13 to i64*
  store i64 %529, i64* %530, align 8
  %531 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %14, i64 0, i32 0, i32 1
  %532 = bitcast %struct.TermMatch** %531 to i64*
  %533 = load i64, i64* %532, align 8
  store i64 %533, i64* %527, align 8
  %534 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %535 = bitcast %struct.TermMatch** %534 to i64*
  %536 = load i64, i64* %535, align 8
  %537 = bitcast %struct.TermMatch** %515 to i64*
  store i64 %536, i64* %537, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %517) #7
  %538 = bitcast %"class.std::__1::vector"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %538) #7
  call void @_Z16DeoverlapMatchesRKNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEEE(%"class.std::__1::vector"* nonnull sret %15, %"class.std::__1::vector"* nonnull dereferenceable(24) %13) #7
  %539 = load %struct.TermMatch*, %struct.TermMatch** %513, align 8
  %540 = icmp eq %struct.TermMatch* %539, null
  br i1 %540, label %544, label %541

541:                                              ; preds = %526
  %542 = ptrtoint %struct.TermMatch* %539 to i64
  store i64 %542, i64* %527, align 8
  %543 = bitcast %struct.TermMatch* %539 to i8*
  call void @_ZdlPv(i8* %543) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %512, i8 0, i64 24, i1 false) #7
  br label %544

544:                                              ; preds = %541, %526
  %545 = bitcast %"class.std::__1::vector"* %15 to i64*
  %546 = load i64, i64* %545, align 8
  store i64 %546, i64* %530, align 8
  %547 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 1
  %548 = bitcast %struct.TermMatch** %547 to i64*
  %549 = load i64, i64* %548, align 8
  store i64 %549, i64* %527, align 8
  %550 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %551 = bitcast %struct.TermMatch** %550 to i64*
  %552 = load i64, i64* %551, align 8
  store i64 %552, i64* %537, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %538) #7
  br i1 %4, label %553, label %559

553:                                              ; preds = %544
  %554 = bitcast %"class.std::__1::vector"* %0 to i64*
  store i64 %546, i64* %554, align 8
  %555 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %556 = bitcast %struct.TermMatch** %555 to i64*
  store i64 %549, i64* %556, align 8
  %557 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %558 = bitcast %struct.TermMatch** %557 to i64*
  store i64 %552, i64* %558, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %512, i8 0, i64 24, i1 false) #7
  br label %633

559:                                              ; preds = %544
  %560 = bitcast %"class.std::__1::vector.13"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %560) #7
  %561 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %16, i64 0, i32 0, i32 0
  %562 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %16, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %560, i8 0, i64 24, i1 false) #7
  call void @_Z26String16VectorFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEbPNS_6vectorImNS3_ImEEEE(%"class.std::__1::vector.6"* nonnull sret %17, %"class.std::__1::basic_string"* dereferenceable(24) %2, i1 zeroext false, %"class.std::__1::vector.13"* nonnull %16) #7
  %563 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %17, i64 0, i32 0, i32 0
  %564 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %563, align 8
  %565 = icmp eq %"class.std::__1::basic_string"* %564, null
  br i1 %565, label %588, label %566

566:                                              ; preds = %559
  %567 = bitcast %"class.std::__1::basic_string"* %564 to i8*
  %568 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %17, i64 0, i32 0, i32 1
  %569 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %568, align 8
  %570 = icmp eq %"class.std::__1::basic_string"* %569, %564
  br i1 %570, label %586, label %571

571:                                              ; preds = %566, %581
  %572 = phi %"class.std::__1::basic_string"* [ %573, %581 ], [ %569, %566 ]
  %573 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %572, i64 -1
  %574 = bitcast %"class.std::__1::basic_string"* %573 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %575 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %574, i64 0, i32 1, i32 1
  %576 = load i8, i8* %575, align 1
  %577 = icmp slt i8 %576, 0
  br i1 %577, label %578, label %581

578:                                              ; preds = %571
  %579 = bitcast %"class.std::__1::basic_string"* %573 to i8**
  %580 = load i8*, i8** %579, align 8
  call void @_ZdlPv(i8* %580) #9
  br label %581

581:                                              ; preds = %578, %571
  %582 = icmp eq %"class.std::__1::basic_string"* %573, %564
  br i1 %582, label %583, label %571

583:                                              ; preds = %581
  %584 = bitcast %"class.std::__1::vector.6"* %17 to i8**
  %585 = load i8*, i8** %584, align 8
  br label %586

586:                                              ; preds = %583, %566
  %587 = phi i8* [ %585, %583 ], [ %567, %566 ]
  store %"class.std::__1::basic_string"* %564, %"class.std::__1::basic_string"** %568, align 8
  call void @_ZdlPv(i8* %587) #9
  br label %588

588:                                              ; preds = %559, %586
  %589 = bitcast %"class.std::__1::vector.13"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %589) #7
  %590 = bitcast %"class.std::__1::basic_string"** %510 to i64*
  %591 = load i64, i64* %590, align 8
  %592 = bitcast %"class.std::__1::vector.6"* %12 to i64*
  %593 = load i64, i64* %592, align 8
  %594 = sub i64 %591, %593
  %595 = sdiv exact i64 %594, 24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %589, i8 0, i64 24, i1 false) #7
  %596 = icmp eq i64 %594, 0
  br i1 %596, label %611, label %597

597:                                              ; preds = %588
  %598 = icmp ugt i64 %595, 2305843009213693951
  br i1 %598, label %599, label %601

599:                                              ; preds = %597
  %600 = bitcast %"class.std::__1::vector.13"* %18 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %600) #8
  unreachable

601:                                              ; preds = %597
  %602 = shl nsw i64 %595, 3
  %603 = call i8* @_Znwm(i64 %602) #9
  %604 = bitcast i8* %603 to i64*
  %605 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %18, i64 0, i32 0, i32 1
  %606 = bitcast %"class.std::__1::vector.13"* %18 to i8**
  store i8* %603, i8** %606, align 8
  %607 = getelementptr inbounds i64, i64* %604, i64 %595
  %608 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %607, i64** %608, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %603, i8 0, i64 %602, i1 false)
  %609 = bitcast i64** %605 to i64*
  %610 = ptrtoint i64* %607 to i64
  store i64 %610, i64* %609, align 8
  br label %611

611:                                              ; preds = %588, %601
  call void @_ZN18ScoredHistoryMatch29FilterTermMatchesByWordStartsERKNSt3__16vectorI9TermMatchNS0_9allocatorIS2_EEEERKNS1_ImNS3_ImEEEESB_mmb(%"class.std::__1::vector"* sret %0, %"class.std::__1::vector"* nonnull dereferenceable(24) %13, %"class.std::__1::vector.13"* nonnull dereferenceable(24) %18, %"class.std::__1::vector.13"* nonnull dereferenceable(24) %16, i64 0, i64 -1, i1 zeroext false) #7
  %612 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %18, i64 0, i32 0, i32 0
  %613 = load i64*, i64** %612, align 8
  %614 = icmp eq i64* %613, null
  br i1 %614, label %620, label %615

615:                                              ; preds = %611
  %616 = ptrtoint i64* %613 to i64
  %617 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %18, i64 0, i32 0, i32 1
  %618 = bitcast i64** %617 to i64*
  store i64 %616, i64* %618, align 8
  %619 = bitcast i64* %613 to i8*
  call void @_ZdlPv(i8* %619) #9
  br label %620

620:                                              ; preds = %611, %615
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %589) #7
  %621 = load i64*, i64** %561, align 8
  %622 = icmp eq i64* %621, null
  br i1 %622, label %627, label %623

623:                                              ; preds = %620
  %624 = ptrtoint i64* %621 to i64
  %625 = bitcast i64** %562 to i64*
  store i64 %624, i64* %625, align 8
  %626 = bitcast i64* %621 to i8*
  call void @_ZdlPv(i8* %626) #9
  br label %627

627:                                              ; preds = %623, %620
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %560) #7
  %628 = load %struct.TermMatch*, %struct.TermMatch** %513, align 8
  %629 = icmp eq %struct.TermMatch* %628, null
  br i1 %629, label %633, label %630

630:                                              ; preds = %627
  %631 = bitcast %struct.TermMatch* %628 to i8*
  %632 = ptrtoint %struct.TermMatch* %628 to i64
  store i64 %632, i64* %527, align 8
  call void @_ZdlPv(i8* %631) #9
  br label %633

633:                                              ; preds = %553, %627, %630
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %512) #7
  %634 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %509, align 8
  %635 = icmp eq %"class.std::__1::basic_string"* %634, null
  br i1 %635, label %657, label %636

636:                                              ; preds = %633
  %637 = bitcast %"class.std::__1::basic_string"* %634 to i8*
  %638 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %510, align 8
  %639 = icmp eq %"class.std::__1::basic_string"* %638, %634
  br i1 %639, label %655, label %640

640:                                              ; preds = %636, %650
  %641 = phi %"class.std::__1::basic_string"* [ %642, %650 ], [ %638, %636 ]
  %642 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %641, i64 -1
  %643 = bitcast %"class.std::__1::basic_string"* %642 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %644 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %643, i64 0, i32 1, i32 1
  %645 = load i8, i8* %644, align 1
  %646 = icmp slt i8 %645, 0
  br i1 %646, label %647, label %650

647:                                              ; preds = %640
  %648 = bitcast %"class.std::__1::basic_string"* %642 to i8**
  %649 = load i8*, i8** %648, align 8
  call void @_ZdlPv(i8* %649) #9
  br label %650

650:                                              ; preds = %647, %640
  %651 = icmp eq %"class.std::__1::basic_string"* %642, %634
  br i1 %651, label %652, label %640

652:                                              ; preds = %650
  %653 = bitcast %"class.std::__1::vector.6"* %12 to i8**
  %654 = load i8*, i8** %653, align 8
  br label %655

655:                                              ; preds = %652, %636
  %656 = phi i8* [ %654, %652 ], [ %637, %636 ]
  store %"class.std::__1::basic_string"* %634, %"class.std::__1::basic_string"** %510, align 8
  call void @_ZdlPv(i8* %656) #9
  br label %657

657:                                              ; preds = %633, %655
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %508) #7
  br label %658

658:                                              ; preds = %657, %492
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16*, i64, i16*, i64, i32) local_unnamed_addr #2

declare void @_Z26String16VectorFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEbPNS_6vectorImNS3_ImEEEE(%"class.std::__1::vector.6"* sret, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, %"class.std::__1::vector.13"*) local_unnamed_addr #2

declare void @_Z18MatchTermsInStringRKNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEEERKS6_(%"class.std::__1::vector"* sret, %"class.std::__1::vector.6"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_Z11SortMatchesRKNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEEE(%"class.std::__1::vector"* sret, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #2

declare void @_Z16DeoverlapMatchesRKNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEEE(%"class.std::__1::vector"* sret, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN18ScoredHistoryMatch29FilterTermMatchesByWordStartsERKNSt3__16vectorI9TermMatchNS0_9allocatorIS2_EEEERKNS1_ImNS3_ImEEEESB_mmb(%"class.std::__1::vector"* sret, %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector.13"* dereferenceable(24), %"class.std::__1::vector.13"* dereferenceable(24), i64, i64, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z19ClassifyTermMatchesNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEEEmii(%"class.std::__1::vector.20"* noalias sret, %"class.std::__1::vector"* nocapture readonly, i64, i32, i32) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast %"class.std::__1::vector.20"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #7
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %10 = load %struct.TermMatch*, %struct.TermMatch** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %12 = load %struct.TermMatch*, %struct.TermMatch** %11, align 8
  %13 = icmp eq %struct.TermMatch* %10, %12
  %14 = ptrtoint %struct.TermMatch* %12 to i64
  %15 = ptrtoint %struct.TermMatch* %10 to i64
  br i1 %13, label %16, label %29

16:                                               ; preds = %5
  %17 = icmp eq i64 %2, 0
  br i1 %17, label %196, label %18

18:                                               ; preds = %16
  %19 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %6 to i64*
  %20 = bitcast %"class.std::__1::vector.20"* %0 to i64*
  %21 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %7 to i64*
  %22 = tail call i8* @_Znwm(i64 16) #9
  %23 = getelementptr inbounds i8, i8* %22, i64 16
  %24 = ptrtoint i8* %23 to i64
  %25 = bitcast i8* %22 to i64*
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %22, i64 8
  %27 = bitcast i8* %26 to i32*
  store i32 %4, i32* %27, align 8
  %28 = ptrtoint i8* %22 to i64
  store i64 %28, i64* %20, align 8
  store i64 %24, i64* %19, align 8
  store i64 %24, i64* %21, align 8
  br label %196

29:                                               ; preds = %5
  %30 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %10, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %45, label %33

33:                                               ; preds = %29
  %34 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %6 to i64*
  %35 = bitcast %"class.std::__1::vector.20"* %0 to i64*
  %36 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %7 to i64*
  %37 = tail call i8* @_Znwm(i64 16) #9
  %38 = getelementptr inbounds i8, i8* %37, i64 16
  %39 = bitcast i8* %38 to %"struct.AutocompleteMatch::ACMatchClassification"*
  %40 = ptrtoint i8* %38 to i64
  %41 = bitcast i8* %37 to i64*
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %37, i64 8
  %43 = bitcast i8* %42 to i32*
  store i32 %4, i32* %43, align 8
  %44 = ptrtoint i8* %37 to i64
  store i64 %44, i64* %35, align 8
  store i64 %40, i64* %34, align 8
  store i64 %40, i64* %36, align 8
  br label %45

45:                                               ; preds = %33, %29
  %46 = phi i64 [ %40, %33 ], [ 0, %29 ]
  %47 = phi %"struct.AutocompleteMatch::ACMatchClassification"* [ %39, %33 ], [ null, %29 ]
  %48 = sub i64 %14, %15
  %49 = sdiv exact i64 %48, 24
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %196, label %51

51:                                               ; preds = %45
  %52 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %6 to i64*
  %53 = bitcast %"class.std::__1::vector.20"* %0 to i64*
  %54 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %7 to i64*
  br label %55

55:                                               ; preds = %191, %51
  %56 = phi i64 [ %46, %51 ], [ %195, %191 ]
  %57 = phi %"struct.AutocompleteMatch::ACMatchClassification"* [ %47, %51 ], [ %194, %191 ]
  %58 = phi %"struct.AutocompleteMatch::ACMatchClassification"* [ %47, %51 ], [ %193, %191 ]
  %59 = phi %struct.TermMatch* [ %10, %51 ], [ %192, %191 ]
  %60 = phi i64 [ 0, %51 ], [ %127, %191 ]
  %61 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %59, i64 %60, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = icmp ult %"struct.AutocompleteMatch::ACMatchClassification"* %58, %57
  %64 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %57 to i64
  br i1 %63, label %65, label %70

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %58, i64 0, i32 0
  store i64 %62, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %58, i64 0, i32 1
  store i32 %3, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %58, i64 1
  %69 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %68 to i64
  store i64 %69, i64* %52, align 8
  br label %119

70:                                               ; preds = %55
  %71 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %58 to i64
  %72 = load i64, i64* %53, align 8
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 4
  %75 = add nsw i64 %74, 1
  %76 = icmp ugt i64 %75, 1152921504606846975
  br i1 %76, label %77, label %79

77:                                               ; preds = %70
  %78 = bitcast %"class.std::__1::vector.20"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %78) #8
  unreachable

79:                                               ; preds = %70
  %80 = sub i64 %64, %72
  %81 = ashr exact i64 %80, 4
  %82 = icmp ult i64 %81, 576460752303423487
  br i1 %82, label %83, label %91

83:                                               ; preds = %79
  %84 = ashr exact i64 %80, 3
  %85 = icmp ult i64 %84, %75
  %86 = select i1 %85, i64 %75, i64 %84
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %96, label %88

88:                                               ; preds = %83
  %89 = icmp ugt i64 %86, 1152921504606846975
  br i1 %89, label %90, label %91

90:                                               ; preds = %88
  tail call void @abort() #8
  unreachable

91:                                               ; preds = %88, %79
  %92 = phi i64 [ %86, %88 ], [ 1152921504606846975, %79 ]
  %93 = shl i64 %92, 4
  %94 = tail call i8* @_Znwm(i64 %93) #9
  %95 = bitcast i8* %94 to %"struct.AutocompleteMatch::ACMatchClassification"*
  br label %96

96:                                               ; preds = %91, %83
  %97 = phi i64 [ %92, %91 ], [ 0, %83 ]
  %98 = phi %"struct.AutocompleteMatch::ACMatchClassification"* [ %95, %91 ], [ null, %83 ]
  %99 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %98, i64 %74
  %100 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %98, i64 %97
  %101 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %100 to i64
  %102 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %99, i64 0, i32 0
  store i64 %62, i64* %102, align 8
  %103 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %98, i64 %74, i32 1
  store i32 %3, i32* %103, align 8
  %104 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %99, i64 1
  %105 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %104 to i64
  %106 = sub i64 %56, %72
  %107 = ashr exact i64 %106, 4
  %108 = sub nsw i64 0, %107
  %109 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %99, i64 %108
  %110 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %109 to i64
  %111 = icmp sgt i64 %106, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %96
  %113 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %109 to i8*
  %114 = inttoptr i64 %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 %106, i1 false) #7
  br label %115

115:                                              ; preds = %112, %96
  store i64 %110, i64* %53, align 8
  store i64 %105, i64* %52, align 8
  store i64 %101, i64* %54, align 8
  %116 = icmp eq i64 %72, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %115
  %118 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %118) #9
  br label %119

119:                                              ; preds = %65, %115, %117
  %120 = load %struct.TermMatch*, %struct.TermMatch** %9, align 8
  br label %121

121:                                              ; preds = %129, %119
  %122 = phi i64 [ %60, %119 ], [ %127, %129 ]
  %123 = phi i64 [ %62, %119 ], [ %126, %129 ]
  %124 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %120, i64 %122, i32 2
  %125 = load i64, i64* %124, align 8
  %126 = add i64 %125, %123
  %127 = add nuw i64 %122, 1
  %128 = icmp ult i64 %127, %49
  br i1 %128, label %129, label %133

129:                                              ; preds = %121
  %130 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %120, i64 %127, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = icmp eq i64 %126, %131
  br i1 %132, label %121, label %133

133:                                              ; preds = %121, %129
  %134 = icmp ult i64 %126, %2
  br i1 %134, label %135, label %190

135:                                              ; preds = %133
  %136 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %6, align 8
  %137 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %7, align 8
  %138 = icmp ult %"struct.AutocompleteMatch::ACMatchClassification"* %136, %137
  %139 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %137 to i64
  br i1 %138, label %140, label %145

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %136, i64 0, i32 0
  store i64 %126, i64* %141, align 8
  %142 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %136, i64 0, i32 1
  store i32 %4, i32* %142, align 8
  %143 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %136, i64 1
  %144 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %143 to i64
  store i64 %144, i64* %52, align 8
  br label %190

145:                                              ; preds = %135
  %146 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %136 to i64
  %147 = load i64, i64* %53, align 8
  %148 = sub i64 %146, %147
  %149 = ashr exact i64 %148, 4
  %150 = add nsw i64 %149, 1
  %151 = icmp ugt i64 %150, 1152921504606846975
  br i1 %151, label %152, label %154

152:                                              ; preds = %145
  %153 = bitcast %"class.std::__1::vector.20"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %153) #8
  unreachable

154:                                              ; preds = %145
  %155 = sub i64 %139, %147
  %156 = ashr exact i64 %155, 4
  %157 = icmp ult i64 %156, 576460752303423487
  br i1 %157, label %158, label %166

158:                                              ; preds = %154
  %159 = ashr exact i64 %155, 3
  %160 = icmp ult i64 %159, %150
  %161 = select i1 %160, i64 %150, i64 %159
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %171, label %163

163:                                              ; preds = %158
  %164 = icmp ugt i64 %161, 1152921504606846975
  br i1 %164, label %165, label %166

165:                                              ; preds = %163
  tail call void @abort() #8
  unreachable

166:                                              ; preds = %163, %154
  %167 = phi i64 [ %161, %163 ], [ 1152921504606846975, %154 ]
  %168 = shl i64 %167, 4
  %169 = tail call i8* @_Znwm(i64 %168) #9
  %170 = bitcast i8* %169 to %"struct.AutocompleteMatch::ACMatchClassification"*
  br label %171

171:                                              ; preds = %166, %158
  %172 = phi i64 [ %167, %166 ], [ 0, %158 ]
  %173 = phi i8* [ %169, %166 ], [ null, %158 ]
  %174 = phi %"struct.AutocompleteMatch::ACMatchClassification"* [ %170, %166 ], [ null, %158 ]
  %175 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %174, i64 %149
  %176 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %174, i64 %172
  %177 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %176 to i64
  %178 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %175, i64 0, i32 0
  store i64 %126, i64* %178, align 8
  %179 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %174, i64 %149, i32 1
  store i32 %4, i32* %179, align 8
  %180 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %175, i64 1
  %181 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %180 to i64
  %182 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %174 to i64
  %183 = icmp sgt i64 %148, 0
  br i1 %183, label %184, label %186

184:                                              ; preds = %171
  %185 = inttoptr i64 %147 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %185, i64 %148, i1 false) #7
  br label %186

186:                                              ; preds = %184, %171
  store i64 %182, i64* %53, align 8
  store i64 %181, i64* %52, align 8
  store i64 %177, i64* %54, align 8
  %187 = icmp eq i64 %147, 0
  br i1 %187, label %190, label %188

188:                                              ; preds = %186
  %189 = inttoptr i64 %147 to i8*
  tail call void @_ZdlPv(i8* %189) #9
  br label %190

190:                                              ; preds = %188, %186, %140, %133
  br i1 %128, label %191, label %196

191:                                              ; preds = %190
  %192 = load %struct.TermMatch*, %struct.TermMatch** %9, align 8
  %193 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %6, align 8
  %194 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %7, align 8
  %195 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %193 to i64
  br label %55

196:                                              ; preds = %190, %18, %45, %16
  ret void
}

declare void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.4"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #8
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #8
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #8
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #9
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !28
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !28
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !31, !noalias !28
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !31, !noalias !28
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !28
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !28
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !31, !noalias !28
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !31, !noalias !28
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !28
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !28
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !31, !noalias !28
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !31, !noalias !28
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !28
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !28
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !31, !noalias !28
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !31, !noalias !28
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !33

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !28
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !28
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !31, !noalias !28
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !31, !noalias !28
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !34

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !35

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !36

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN12_GLOBAL__N_15cleanENSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE: argument 0"}
!15 = distinct !{!15, !"_ZN12_GLOBAL__N_15cleanENSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE"}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !8}
!22 = distinct !{!22, !10}
!23 = distinct !{!23, !10}
!24 = distinct !{!24, !8}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN12_GLOBAL__N_15cleanENSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE: argument 0"}
!27 = distinct !{!27, !"_ZN12_GLOBAL__N_15cleanENSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE"}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !8}
!34 = distinct !{!34, !10}
!35 = distinct !{!35, !10}
!36 = distinct !{!36, !8}
