; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/mul.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/mul.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { {}*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteMulParams = type { i32 }
%"struct.tflite::ops::builtin::mul::OpData" = type { i32, i32, i32, i32 }
%"struct.tflite::ArithmeticParams" = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"struct.tflite::NdArrayDesc" = type { [4 x i32], [4 x i32] }

$_ZN6tflite3ops7builtin3mul4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin3mul4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin3mul4EvalILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE0EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_ = comdat any

$_ZN6tflite3ops7builtin3mul13EvalQuantizedILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_ = comdat any

$_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE = comdat any

$_ZN6tflite13reference_ops18BroadcastMul4DSlowIiEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops18BroadcastMul4DSlowIfEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_ = comdat any

$_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_ = comdat any

$_ZN6tflite21reference_integer_ops18BroadcastMul4DSlowIaEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_ = comdat any

$_ZN6tflite21reference_integer_ops3MulIaEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_ = comdat any

$_ZN6tflite21reference_integer_ops18BroadcastMul4DSlowIsEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_ = comdat any

$_ZN6tflite21reference_integer_ops3MulIsEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops18BroadcastMul4DSlowERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS6_S8_S6_Ph = comdat any

$_ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE1EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_ = comdat any

$_ZN6tflite3ops7builtin3mul13EvalQuantizedILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_ = comdat any

$_ZN6tflite13optimized_ops20BroadcastMulDispatchIfEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_ = comdat any

$_ZN6tflite21optimized_integer_ops20BroadcastMulDispatchERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKaS6_S8_S6_Pa = comdat any

$_ZN6tflite21optimized_integer_ops3MulERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKaS6_S8_S6_Pa = comdat any

$_ZN6tflite13optimized_ops20BroadcastMulDispatchIhEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops3MulERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS6_S8_S6_Ph = comdat any

$_ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_ = comdat any

$_ZN6tflite3ops7builtin3mul13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_ = comdat any

@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.3 = private unnamed_addr constant [60 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/mul.cc\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"input1->type\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"input2->type\00", align 1
@_ZZN6tflite3ops7builtin16Register_MUL_REFEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin3mul4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin3mul4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3mul7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3mul4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin24Register_MUL_GENERIC_OPTEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin3mul4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin3mul4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3mul7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3mul4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin21Register_MUL_NEON_OPTEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin3mul4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin3mul4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3mul7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3mul4EvalILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str.12 = private unnamed_addr constant [82 x i8] c"Mul only supports FLOAT32, INT32 and quantized UINT8, INT8 and INT16 now, got %d.\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"op_params.input1_offset\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"0.0\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"op_params.input2_offset\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"op_params.output_offset\00", align 1
@.str.19 = private unnamed_addr constant [58 x i8] c"Unsupported combination of input and output types in Mul.\00", align 1
@__const._ZN6tflite3ops7builtin3mul13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_.op_params = private unnamed_addr constant { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] } { i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, [5 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766] }, align 4
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer
@switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.48 = private unnamed_addr constant [3 x i32] [i32 0, i32 -1, i32 0], align 4
@switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.49 = private unnamed_addr constant [3 x i32] [i32 2147483647, i32 1, i32 6], align 4
@switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.52 = private unnamed_addr constant [3 x float] [float 0.000000e+00, float -1.000000e+00, float 0.000000e+00], align 4
@switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.53 = private unnamed_addr constant [3 x float] [float 0x47EFFFFFE0000000, float 1.000000e+00, float 6.000000e+00], align 4

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull i8* @_ZN6tflite3ops7builtin3mul4InitEP13TfLiteContextPKcm(%struct.TfLiteContext* nocapture readnone, i8* nocapture readnone, i64) #0 {
  %4 = tail call i8* @_Znwm(i64 16) #10
  ret i8* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite3ops7builtin3mul4FreeEP13TfLiteContextPv(%struct.TfLiteContext* nocapture readnone, i8*) #3 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZdlPv(i8* nonnull %1) #10
  br label %5

5:                                                ; preds = %4, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin3mul7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #3 {
  %3 = alloca %struct.TfLiteIntArray*, align 8
  %4 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %5 = bitcast i8** %4 to %struct.TfLiteMulParams**
  %6 = load %struct.TfLiteMulParams*, %struct.TfLiteMulParams** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %8 = bitcast i8** %7 to %"struct.tflite::ops::builtin::mul::OpData"**
  %9 = load %"struct.tflite::ops::builtin::mul::OpData"*, %"struct.tflite::ops::builtin::mul::OpData"** %8, align 8
  %10 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %11 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %10, align 8
  %12 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %17 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %16, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %17(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 75, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %13, i32 2) #11
  br label %108

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %20 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %19, align 8
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %26 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %25, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %26(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 76, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %22, i32 1) #11
  br label %108

27:                                               ; preds = %18
  %28 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %11, i64 0, i32 1, i64 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %33 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %32, align 8
  %34 = sext i32 %29 to i64
  %35 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 %34
  br label %36

36:                                               ; preds = %27, %31
  %37 = phi %struct.TfLiteTensor* [ %35, %31 ], [ null, %27 ]
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %11, i64 0, i32 1, i64 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %43 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %42, align 8
  %44 = sext i32 %39 to i64
  %45 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %43, i64 %44
  br label %46

46:                                               ; preds = %36, %41
  %47 = phi %struct.TfLiteTensor* [ %45, %41 ], [ null, %36 ]
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 1, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %53 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %52, align 8
  %54 = sext i32 %49 to i64
  %55 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %53, i64 %54
  br label %56

56:                                               ; preds = %46, %51
  %57 = phi %struct.TfLiteTensor* [ %55, %51 ], [ null, %46 ]
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %47, i64 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %69, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %65 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %64, align 8
  %66 = tail call i8* @TfLiteTypeGetName(i32 %59) #11
  %67 = load i32, i32* %60, align 8
  %68 = tail call i8* @TfLiteTypeGetName(i32 %67) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %65(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 82, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8* %66, i8* %68) #11
  br label %108

69:                                               ; preds = %56
  %70 = tail call zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor* %37, %struct.TfLiteTensor* %47) #11
  %71 = bitcast %struct.TfLiteIntArray** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #11
  store %struct.TfLiteIntArray* null, %struct.TfLiteIntArray** %3, align 8
  br i1 %70, label %75, label %72

72:                                               ; preds = %69
  %73 = call i32 @_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %37, %struct.TfLiteTensor* %47, %struct.TfLiteIntArray** nonnull %3) #11
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %106

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 0, i32 2
  %77 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %76, align 8
  %78 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %77) #11
  store %struct.TfLiteIntArray* %78, %struct.TfLiteIntArray** %3, align 8
  br label %79

79:                                               ; preds = %72, %75
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 0
  %81 = load i32, i32* %80, align 8
  switch i32 %81, label %101 [
    i32 3, label %82
    i32 9, label %82
    i32 7, label %82
  ]

82:                                               ; preds = %79, %79, %79
  %83 = getelementptr inbounds %struct.TfLiteMulParams, %struct.TfLiteMulParams* %6, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %9, i64 0, i32 0
  %86 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %9, i64 0, i32 1
  %87 = call i32 @_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPiS5_(%struct.TfLiteContext* %0, i32 %84, %struct.TfLiteTensor* %57, i32* %85, i32* %86) #11
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %106

89:                                               ; preds = %82
  %90 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 0, i32 3, i32 0
  %91 = load float, float* %90, align 8
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %47, i64 0, i32 3, i32 0
  %93 = load float, float* %92, align 8
  %94 = fmul float %91, %93
  %95 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 3, i32 0
  %96 = load float, float* %95, align 8
  %97 = fdiv float %94, %96
  %98 = fpext float %97 to double
  %99 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %9, i64 0, i32 2
  %100 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %9, i64 0, i32 3
  call void @_ZN6tflite18QuantizeMultiplierEdPiS0_(double %98, i32* %99, i32* %100) #11
  br label %101

101:                                              ; preds = %79, %89
  %102 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %103 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %102, align 8
  %104 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %105 = call i32 %103(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %57, %struct.TfLiteIntArray* %104) #11
  br label %106

106:                                              ; preds = %72, %82, %101
  %107 = phi i32 [ %105, %101 ], [ %87, %82 ], [ %73, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #11
  br label %108

108:                                              ; preds = %63, %106, %24, %15
  %109 = phi i32 [ 1, %15 ], [ 1, %24 ], [ 1, %63 ], [ %107, %106 ]
  ret i32 %109
}

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #5

declare zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #5

declare i32 @_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray(%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteIntArray**) local_unnamed_addr #5

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #5

declare i32 @_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPiS5_(%struct.TfLiteContext*, i32, %struct.TfLiteTensor*, i32*, i32*) local_unnamed_addr #5

declare void @_ZN6tflite18QuantizeMultiplierEdPiS0_(double, i32*, i32*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin16Register_MUL_REFEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin16Register_MUL_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin3mul4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #3 comdat {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %4 = bitcast i8** %3 to %struct.TfLiteMulParams**
  %5 = load %struct.TfLiteMulParams*, %struct.TfLiteMulParams** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %7 = bitcast i8** %6 to %"struct.tflite::ops::builtin::mul::OpData"**
  %8 = load %"struct.tflite::ops::builtin::mul::OpData"*, %"struct.tflite::ops::builtin::mul::OpData"** %7, align 8
  %9 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %10 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %9, align 8
  %11 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %16 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 %17
  br label %19

19:                                               ; preds = %2, %14
  %20 = phi %struct.TfLiteTensor* [ %18, %14 ], [ null, %2 ]
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %19, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %19 ]
  %31 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %32 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %38 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %37, align 8
  %39 = sext i32 %34 to i64
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 %39
  br label %41

41:                                               ; preds = %29, %36
  %42 = phi %struct.TfLiteTensor* [ %40, %36 ], [ null, %29 ]
  %43 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  switch i32 %44, label %49 [
    i32 1, label %45
    i32 2, label %45
    i32 3, label %46
    i32 9, label %46
    i32 7, label %46
  ]

45:                                               ; preds = %41, %41
  tail call void @_ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE0EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteMulParams* %5, %"struct.tflite::ops::builtin::mul::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %42)
  br label %52

46:                                               ; preds = %41, %41, %41
  %47 = tail call i32 @_ZN6tflite3ops7builtin3mul13EvalQuantizedILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteMulParams* %5, %"struct.tflite::ops::builtin::mul::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %42)
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %53

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %51 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %50, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %51(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.12, i64 0, i64 0), i32 %44) #11
  br label %53

52:                                               ; preds = %46, %45
  br label %53

53:                                               ; preds = %46, %52, %49
  %54 = phi i32 [ 0, %52 ], [ %47, %46 ], [ 1, %49 ]
  ret i32 %54
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin24Register_MUL_GENERIC_OPTEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin24Register_MUL_GENERIC_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin3mul4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #3 comdat {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %4 = bitcast i8** %3 to %struct.TfLiteMulParams**
  %5 = load %struct.TfLiteMulParams*, %struct.TfLiteMulParams** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %7 = bitcast i8** %6 to %"struct.tflite::ops::builtin::mul::OpData"**
  %8 = load %"struct.tflite::ops::builtin::mul::OpData"*, %"struct.tflite::ops::builtin::mul::OpData"** %7, align 8
  %9 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %10 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %9, align 8
  %11 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %16 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 %17
  br label %19

19:                                               ; preds = %2, %14
  %20 = phi %struct.TfLiteTensor* [ %18, %14 ], [ null, %2 ]
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %19, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %19 ]
  %31 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %32 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %38 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %37, align 8
  %39 = sext i32 %34 to i64
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 %39
  br label %41

41:                                               ; preds = %29, %36
  %42 = phi %struct.TfLiteTensor* [ %40, %36 ], [ null, %29 ]
  %43 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  switch i32 %44, label %49 [
    i32 1, label %45
    i32 2, label %45
    i32 3, label %46
    i32 9, label %46
    i32 7, label %46
  ]

45:                                               ; preds = %41, %41
  tail call void @_ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE1EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteMulParams* %5, %"struct.tflite::ops::builtin::mul::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %42)
  br label %52

46:                                               ; preds = %41, %41, %41
  %47 = tail call i32 @_ZN6tflite3ops7builtin3mul13EvalQuantizedILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteMulParams* %5, %"struct.tflite::ops::builtin::mul::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %42)
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %53

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %51 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %50, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %51(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.12, i64 0, i64 0), i32 %44) #11
  br label %53

52:                                               ; preds = %46, %45
  br label %53

53:                                               ; preds = %46, %52, %49
  %54 = phi i32 [ 0, %52 ], [ %47, %46 ], [ 1, %49 ]
  ret i32 %54
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin21Register_MUL_NEON_OPTEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin21Register_MUL_NEON_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin3mul4EvalILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #3 comdat {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %4 = bitcast i8** %3 to %struct.TfLiteMulParams**
  %5 = load %struct.TfLiteMulParams*, %struct.TfLiteMulParams** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %7 = bitcast i8** %6 to %"struct.tflite::ops::builtin::mul::OpData"**
  %8 = load %"struct.tflite::ops::builtin::mul::OpData"*, %"struct.tflite::ops::builtin::mul::OpData"** %7, align 8
  %9 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %10 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %9, align 8
  %11 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %16 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 %17
  br label %19

19:                                               ; preds = %2, %14
  %20 = phi %struct.TfLiteTensor* [ %18, %14 ], [ null, %2 ]
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %19, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %19 ]
  %31 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %32 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %38 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %37, align 8
  %39 = sext i32 %34 to i64
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 %39
  br label %41

41:                                               ; preds = %29, %36
  %42 = phi %struct.TfLiteTensor* [ %40, %36 ], [ null, %29 ]
  %43 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  switch i32 %44, label %49 [
    i32 1, label %45
    i32 2, label %45
    i32 3, label %46
    i32 9, label %46
    i32 7, label %46
  ]

45:                                               ; preds = %41, %41
  tail call void @_ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteMulParams* %5, %"struct.tflite::ops::builtin::mul::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %42)
  br label %52

46:                                               ; preds = %41, %41, %41
  %47 = tail call i32 @_ZN6tflite3ops7builtin3mul13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteMulParams* %5, %"struct.tflite::ops::builtin::mul::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %42)
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %53

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %51 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %50, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %51(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.12, i64 0, i64 0), i32 %44) #11
  br label %53

52:                                               ; preds = %46, %45
  br label %53

53:                                               ; preds = %46, %52, %49
  %54 = phi i32 [ 0, %52 ], [ %47, %46 ], [ 1, %49 ]
  ret i32 %54
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin12Register_MULEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin24Register_MUL_GENERIC_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE0EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteMulParams*, %"struct.tflite::ops::builtin::mul::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %8 = alloca %"struct.tflite::ArithmeticParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"class.tflite::RuntimeShape", align 8
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %23) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3mul13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_.op_params, i64 0, i32 0), i64 80, i1 false)
  %24 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  %25 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %7
  %27 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %27, align 8, !alias.scope !2
  br label %53

28:                                               ; preds = %7
  %29 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %30 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %29, align 8, !noalias !2
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 4, !noalias !2
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %30, i64 0, i32 1, i64 0
  %34 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %32, i32* %34, align 8, !alias.scope !2
  %35 = icmp sgt i32 %32, 5
  br i1 %35, label %36, label %43

36:                                               ; preds = %28
  %37 = sext i32 %32 to i64
  %38 = shl nsw i64 %37, 2
  %39 = tail call i8* @_Znam(i64 %38) #10, !noalias !2
  %40 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %41 = bitcast i32** %40 to i8**
  store i8* %39, i8** %41, align 8, !alias.scope !2
  %42 = bitcast i8* %39 to i32*
  br label %48

43:                                               ; preds = %28
  %44 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %45 = bitcast %union.anon* %44 to i32*
  %46 = sext i32 %32 to i64
  %47 = shl nsw i64 %46, 2
  br label %48

48:                                               ; preds = %43, %36
  %49 = phi i64 [ %38, %36 ], [ %47, %43 ]
  %50 = phi i32* [ %42, %36 ], [ %45, %43 ]
  %51 = bitcast i32* %50 to i8*
  %52 = bitcast i32* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %52, i64 %49, i1 false) #11
  br label %53

53:                                               ; preds = %26, %48
  %54 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #11
  %55 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %57, align 8, !alias.scope !5
  br label %83

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %60 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %59, align 8, !noalias !5
  %61 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %60, i64 0, i32 0
  %62 = load i32, i32* %61, align 4, !noalias !5
  %63 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %60, i64 0, i32 1, i64 0
  %64 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %62, i32* %64, align 8, !alias.scope !5
  %65 = icmp sgt i32 %62, 5
  br i1 %65, label %66, label %73

66:                                               ; preds = %58
  %67 = sext i32 %62 to i64
  %68 = shl nsw i64 %67, 2
  %69 = tail call i8* @_Znam(i64 %68) #10, !noalias !5
  %70 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %71 = bitcast i32** %70 to i8**
  store i8* %69, i8** %71, align 8, !alias.scope !5
  %72 = bitcast i8* %69 to i32*
  br label %78

73:                                               ; preds = %58
  %74 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %75 = bitcast %union.anon* %74 to i32*
  %76 = sext i32 %62 to i64
  %77 = shl nsw i64 %76, 2
  br label %78

78:                                               ; preds = %73, %66
  %79 = phi i64 [ %68, %66 ], [ %77, %73 ]
  %80 = phi i32* [ %72, %66 ], [ %75, %73 ]
  %81 = bitcast i32* %80 to i8*
  %82 = bitcast i32* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %81, i8* align 4 %82, i64 %79, i1 false) #11
  br label %83

83:                                               ; preds = %56, %78
  %84 = call zeroext i1 @_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, %"struct.tflite::ArithmeticParams"* nonnull %8)
  %85 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = icmp sgt i32 %86, 5
  br i1 %87, label %88, label %94

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = icmp eq i32* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %88
  %93 = bitcast i32* %90 to i8*
  call void @_ZdaPv(i8* %93) #10
  br label %94

94:                                               ; preds = %83, %88, %92
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #11
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %96 = load i32, i32* %95, align 8
  %97 = icmp sgt i32 %96, 5
  br i1 %97, label %98, label %104

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %100 = load i32*, i32** %99, align 8
  %101 = icmp eq i32* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %98
  %103 = bitcast i32* %100 to i8*
  call void @_ZdaPv(i8* %103) #10
  br label %104

104:                                              ; preds = %94, %98, %102
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  %105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 0
  %106 = load i32, i32* %105, align 8
  switch i32 %106, label %1158 [
    i32 2, label %107
    i32 1, label %647
  ]

107:                                              ; preds = %104
  %108 = getelementptr inbounds %struct.TfLiteMulParams, %struct.TfLiteMulParams* %2, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = add i32 %109, -1
  %111 = icmp ult i32 %110, 3
  br i1 %84, label %112, label %251

112:                                              ; preds = %107
  br i1 %111, label %113, label %120

113:                                              ; preds = %112
  %114 = sext i32 %110 to i64
  %115 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.48, i64 0, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = sext i32 %110 to i64
  %118 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.49, i64 0, i64 %117
  %119 = load i32, i32* %118, align 4
  br label %120

120:                                              ; preds = %112, %113
  %121 = phi i32 [ %116, %113 ], [ -2147483648, %112 ]
  %122 = phi i32 [ %119, %113 ], [ 2147483647, %112 ]
  %123 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 11
  store i32 %121, i32* %123, align 4
  %124 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 12
  store i32 %122, i32* %124, align 4
  %125 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %125) #11
  br i1 %25, label %126, label %128

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %127, align 8, !alias.scope !8
  br label %155

128:                                              ; preds = %120
  %129 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %130 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %129, align 8, !noalias !8
  %131 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %130, i64 0, i32 0
  %132 = load i32, i32* %131, align 4, !noalias !8
  %133 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %130, i64 0, i32 1, i64 0
  %134 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %132, i32* %134, align 8, !alias.scope !8
  %135 = icmp sgt i32 %132, 5
  br i1 %135, label %136, label %143

136:                                              ; preds = %128
  %137 = sext i32 %132 to i64
  %138 = shl nsw i64 %137, 2
  %139 = call i8* @_Znam(i64 %138) #10, !noalias !8
  %140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %141 = bitcast i32** %140 to i8**
  store i8* %139, i8** %141, align 8, !alias.scope !8
  %142 = bitcast i8* %139 to i32*
  br label %148

143:                                              ; preds = %128
  %144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %145 = bitcast %union.anon* %144 to i32*
  %146 = sext i32 %132 to i64
  %147 = shl nsw i64 %146, 2
  br label %148

148:                                              ; preds = %143, %136
  %149 = phi i64 [ %138, %136 ], [ %147, %143 ]
  %150 = phi i32* [ %142, %136 ], [ %145, %143 ]
  %151 = bitcast i32* %150 to i8*
  %152 = bitcast i32* %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %151, i8* align 4 %152, i64 %149, i1 false) #11
  %153 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %154 = load i32*, i32** %153, align 8
  br label %155

155:                                              ; preds = %126, %148
  %156 = phi i32* [ %154, %148 ], [ null, %126 ]
  %157 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %157) #11
  br i1 %55, label %158, label %160

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %159, align 8, !alias.scope !11
  br label %187

160:                                              ; preds = %155
  %161 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %162 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %161, align 8, !noalias !11
  %163 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %162, i64 0, i32 0
  %164 = load i32, i32* %163, align 4, !noalias !11
  %165 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %162, i64 0, i32 1, i64 0
  %166 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %164, i32* %166, align 8, !alias.scope !11
  %167 = icmp sgt i32 %164, 5
  br i1 %167, label %168, label %175

168:                                              ; preds = %160
  %169 = sext i32 %164 to i64
  %170 = shl nsw i64 %169, 2
  %171 = call i8* @_Znam(i64 %170) #10, !noalias !11
  %172 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %173 = bitcast i32** %172 to i8**
  store i8* %171, i8** %173, align 8, !alias.scope !11
  %174 = bitcast i8* %171 to i32*
  br label %180

175:                                              ; preds = %160
  %176 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %177 = bitcast %union.anon* %176 to i32*
  %178 = sext i32 %164 to i64
  %179 = shl nsw i64 %178, 2
  br label %180

180:                                              ; preds = %175, %168
  %181 = phi i64 [ %170, %168 ], [ %179, %175 ]
  %182 = phi i32* [ %174, %168 ], [ %177, %175 ]
  %183 = bitcast i32* %182 to i8*
  %184 = bitcast i32* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %183, i8* align 4 %184, i64 %181, i1 false) #11
  %185 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %186 = load i32*, i32** %185, align 8
  br label %187

187:                                              ; preds = %158, %180
  %188 = phi i32* [ %186, %180 ], [ null, %158 ]
  %189 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %189) #11
  %190 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %192, align 8, !alias.scope !14
  br label %220

193:                                              ; preds = %187
  %194 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %195 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %194, align 8, !noalias !14
  %196 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %195, i64 0, i32 0
  %197 = load i32, i32* %196, align 4, !noalias !14
  %198 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %195, i64 0, i32 1, i64 0
  %199 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %197, i32* %199, align 8, !alias.scope !14
  %200 = icmp sgt i32 %197, 5
  br i1 %200, label %201, label %208

201:                                              ; preds = %193
  %202 = sext i32 %197 to i64
  %203 = shl nsw i64 %202, 2
  %204 = call i8* @_Znam(i64 %203) #10, !noalias !14
  %205 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %206 = bitcast i32** %205 to i8**
  store i8* %204, i8** %206, align 8, !alias.scope !14
  %207 = bitcast i8* %204 to i32*
  br label %213

208:                                              ; preds = %193
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %210 = bitcast %union.anon* %209 to i32*
  %211 = sext i32 %197 to i64
  %212 = shl nsw i64 %211, 2
  br label %213

213:                                              ; preds = %208, %201
  %214 = phi i64 [ %203, %201 ], [ %212, %208 ]
  %215 = phi i32* [ %207, %201 ], [ %210, %208 ]
  %216 = bitcast i32* %215 to i8*
  %217 = bitcast i32* %198 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %216, i8* align 4 %217, i64 %214, i1 false) #11
  %218 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1, i32 0
  %219 = load i32*, i32** %218, align 8
  br label %220

220:                                              ; preds = %191, %213
  %221 = phi i32* [ %219, %213 ], [ null, %191 ]
  call void @_ZN6tflite13reference_ops18BroadcastMul4DSlowIiEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i32* %156, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i32* %188, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i32* %221)
  %222 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %223 = load i32, i32* %222, align 8
  %224 = icmp sgt i32 %223, 5
  br i1 %224, label %225, label %231

225:                                              ; preds = %220
  %226 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %227 = load i32*, i32** %226, align 8
  %228 = icmp eq i32* %227, null
  br i1 %228, label %231, label %229

229:                                              ; preds = %225
  %230 = bitcast i32* %227 to i8*
  call void @_ZdaPv(i8* %230) #10
  br label %231

231:                                              ; preds = %220, %225, %229
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %189) #11
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %233 = load i32, i32* %232, align 8
  %234 = icmp sgt i32 %233, 5
  br i1 %234, label %235, label %241

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %237 = load i32*, i32** %236, align 8
  %238 = icmp eq i32* %237, null
  br i1 %238, label %241, label %239

239:                                              ; preds = %235
  %240 = bitcast i32* %237 to i8*
  call void @_ZdaPv(i8* %240) #10
  br label %241

241:                                              ; preds = %231, %235, %239
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %157) #11
  %242 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %243 = load i32, i32* %242, align 8
  %244 = icmp sgt i32 %243, 5
  br i1 %244, label %245, label %1156

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %247 = load i32*, i32** %246, align 8
  %248 = icmp eq i32* %247, null
  br i1 %248, label %1156, label %249

249:                                              ; preds = %245
  %250 = bitcast i32* %247 to i8*
  call void @_ZdaPv(i8* %250) #10
  br label %1156

251:                                              ; preds = %107
  br i1 %111, label %252, label %259

252:                                              ; preds = %251
  %253 = sext i32 %110 to i64
  %254 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.48, i64 0, i64 %253
  %255 = load i32, i32* %254, align 4
  %256 = sext i32 %110 to i64
  %257 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.49, i64 0, i64 %256
  %258 = load i32, i32* %257, align 4
  br label %259

259:                                              ; preds = %251, %252
  %260 = phi i32 [ %255, %252 ], [ -2147483648, %251 ]
  %261 = phi i32 [ %258, %252 ], [ 2147483647, %251 ]
  %262 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 11
  store i32 %260, i32* %262, align 4
  %263 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 12
  store i32 %261, i32* %263, align 4
  %264 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %264) #11
  br i1 %25, label %265, label %267

265:                                              ; preds = %259
  %266 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %266, align 8, !alias.scope !17
  br label %295

267:                                              ; preds = %259
  %268 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %269 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %268, align 8, !noalias !17
  %270 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %269, i64 0, i32 0
  %271 = load i32, i32* %270, align 4, !noalias !17
  %272 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %269, i64 0, i32 1, i64 0
  %273 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %271, i32* %273, align 8, !alias.scope !17
  %274 = icmp sgt i32 %271, 5
  br i1 %274, label %275, label %282

275:                                              ; preds = %267
  %276 = sext i32 %271 to i64
  %277 = shl nsw i64 %276, 2
  %278 = call i8* @_Znam(i64 %277) #10, !noalias !17
  %279 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %280 = bitcast i32** %279 to i8**
  store i8* %278, i8** %280, align 8, !alias.scope !17
  %281 = bitcast i8* %278 to i32*
  br label %287

282:                                              ; preds = %267
  %283 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %284 = bitcast %union.anon* %283 to i32*
  %285 = sext i32 %271 to i64
  %286 = shl nsw i64 %285, 2
  br label %287

287:                                              ; preds = %282, %275
  %288 = phi i64 [ %277, %275 ], [ %286, %282 ]
  %289 = phi i32* [ %281, %275 ], [ %284, %282 ]
  %290 = bitcast i32* %289 to i8*
  %291 = bitcast i32* %272 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %290, i8* align 4 %291, i64 %288, i1 false) #11
  %292 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %293 = load i32*, i32** %292, align 8
  %294 = bitcast i32* %293 to i8*
  br label %295

295:                                              ; preds = %265, %287
  %296 = phi i32 [ %271, %287 ], [ 0, %265 ]
  %297 = phi i8* [ %294, %287 ], [ null, %265 ]
  %298 = phi i32* [ %293, %287 ], [ null, %265 ]
  %299 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %299) #11
  br i1 %55, label %300, label %302

300:                                              ; preds = %295
  %301 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %301, align 8, !alias.scope !20
  br label %330

302:                                              ; preds = %295
  %303 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %304 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %303, align 8, !noalias !20
  %305 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %304, i64 0, i32 0
  %306 = load i32, i32* %305, align 4, !noalias !20
  %307 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %304, i64 0, i32 1, i64 0
  %308 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %306, i32* %308, align 8, !alias.scope !20
  %309 = icmp sgt i32 %306, 5
  br i1 %309, label %310, label %317

310:                                              ; preds = %302
  %311 = sext i32 %306 to i64
  %312 = shl nsw i64 %311, 2
  %313 = call i8* @_Znam(i64 %312) #10, !noalias !20
  %314 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %315 = bitcast i32** %314 to i8**
  store i8* %313, i8** %315, align 8, !alias.scope !20
  %316 = bitcast i8* %313 to i32*
  br label %322

317:                                              ; preds = %302
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %319 = bitcast %union.anon* %318 to i32*
  %320 = sext i32 %306 to i64
  %321 = shl nsw i64 %320, 2
  br label %322

322:                                              ; preds = %317, %310
  %323 = phi i64 [ %312, %310 ], [ %321, %317 ]
  %324 = phi i32* [ %316, %310 ], [ %319, %317 ]
  %325 = bitcast i32* %324 to i8*
  %326 = bitcast i32* %307 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %325, i8* align 4 %326, i64 %323, i1 false) #11
  %327 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %328 = load i32*, i32** %327, align 8
  %329 = bitcast i32* %328 to i8*
  br label %330

330:                                              ; preds = %300, %322
  %331 = phi i32 [ %306, %322 ], [ 0, %300 ]
  %332 = phi i8* [ %329, %322 ], [ null, %300 ]
  %333 = phi i32* [ %328, %322 ], [ null, %300 ]
  %334 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %334) #11
  %335 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %335, label %336, label %338

336:                                              ; preds = %330
  %337 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %337, align 8, !alias.scope !23
  br label %366

338:                                              ; preds = %330
  %339 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %340 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %339, align 8, !noalias !23
  %341 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %340, i64 0, i32 0
  %342 = load i32, i32* %341, align 4, !noalias !23
  %343 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %340, i64 0, i32 1, i64 0
  %344 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %342, i32* %344, align 8, !alias.scope !23
  %345 = icmp sgt i32 %342, 5
  br i1 %345, label %346, label %353

346:                                              ; preds = %338
  %347 = sext i32 %342 to i64
  %348 = shl nsw i64 %347, 2
  %349 = call i8* @_Znam(i64 %348) #10, !noalias !23
  %350 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %351 = bitcast i32** %350 to i8**
  store i8* %349, i8** %351, align 8, !alias.scope !23
  %352 = bitcast i8* %349 to i32*
  br label %358

353:                                              ; preds = %338
  %354 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %355 = bitcast %union.anon* %354 to i32*
  %356 = sext i32 %342 to i64
  %357 = shl nsw i64 %356, 2
  br label %358

358:                                              ; preds = %353, %346
  %359 = phi i64 [ %348, %346 ], [ %357, %353 ]
  %360 = phi i32* [ %352, %346 ], [ %355, %353 ]
  %361 = bitcast i32* %360 to i8*
  %362 = bitcast i32* %343 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %361, i8* align 4 %362, i64 %359, i1 false) #11
  %363 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1, i32 0
  %364 = load i32*, i32** %363, align 8
  %365 = bitcast i32* %364 to i8*
  br label %366

366:                                              ; preds = %336, %358
  %367 = phi i32 [ %342, %358 ], [ 0, %336 ]
  %368 = phi i8* [ %365, %358 ], [ null, %336 ]
  %369 = phi i32* [ %364, %358 ], [ null, %336 ]
  %370 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %371 = icmp sgt i32 %296, 5
  br i1 %371, label %372, label %375

372:                                              ; preds = %366
  %373 = getelementptr inbounds %union.anon, %union.anon* %370, i64 0, i32 0
  %374 = load i32*, i32** %373, align 8
  br label %378

375:                                              ; preds = %366
  %376 = bitcast %union.anon* %370 to i32*
  %377 = icmp sgt i32 %296, 0
  br i1 %377, label %378, label %481

378:                                              ; preds = %375, %372
  %379 = phi i32* [ %374, %372 ], [ %376, %375 ]
  %380 = zext i32 %296 to i64
  %381 = icmp ult i32 %296, 8
  br i1 %381, label %467, label %382

382:                                              ; preds = %378
  %383 = and i64 %380, 4294967288
  %384 = add nsw i64 %383, -8
  %385 = lshr exact i64 %384, 3
  %386 = add nuw nsw i64 %385, 1
  %387 = and i64 %386, 3
  %388 = icmp ult i64 %384, 24
  br i1 %388, label %434, label %389

389:                                              ; preds = %382
  %390 = sub nsw i64 %386, %387
  br label %391

391:                                              ; preds = %391, %389
  %392 = phi i64 [ 0, %389 ], [ %431, %391 ]
  %393 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %389 ], [ %429, %391 ]
  %394 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %389 ], [ %430, %391 ]
  %395 = phi i64 [ %390, %389 ], [ %432, %391 ]
  %396 = getelementptr inbounds i32, i32* %379, i64 %392
  %397 = bitcast i32* %396 to <4 x i32>*
  %398 = load <4 x i32>, <4 x i32>* %397, align 4
  %399 = getelementptr inbounds i32, i32* %396, i64 4
  %400 = bitcast i32* %399 to <4 x i32>*
  %401 = load <4 x i32>, <4 x i32>* %400, align 4
  %402 = mul nsw <4 x i32> %398, %393
  %403 = mul nsw <4 x i32> %401, %394
  %404 = or i64 %392, 8
  %405 = getelementptr inbounds i32, i32* %379, i64 %404
  %406 = bitcast i32* %405 to <4 x i32>*
  %407 = load <4 x i32>, <4 x i32>* %406, align 4
  %408 = getelementptr inbounds i32, i32* %405, i64 4
  %409 = bitcast i32* %408 to <4 x i32>*
  %410 = load <4 x i32>, <4 x i32>* %409, align 4
  %411 = mul nsw <4 x i32> %407, %402
  %412 = mul nsw <4 x i32> %410, %403
  %413 = or i64 %392, 16
  %414 = getelementptr inbounds i32, i32* %379, i64 %413
  %415 = bitcast i32* %414 to <4 x i32>*
  %416 = load <4 x i32>, <4 x i32>* %415, align 4
  %417 = getelementptr inbounds i32, i32* %414, i64 4
  %418 = bitcast i32* %417 to <4 x i32>*
  %419 = load <4 x i32>, <4 x i32>* %418, align 4
  %420 = mul nsw <4 x i32> %416, %411
  %421 = mul nsw <4 x i32> %419, %412
  %422 = or i64 %392, 24
  %423 = getelementptr inbounds i32, i32* %379, i64 %422
  %424 = bitcast i32* %423 to <4 x i32>*
  %425 = load <4 x i32>, <4 x i32>* %424, align 4
  %426 = getelementptr inbounds i32, i32* %423, i64 4
  %427 = bitcast i32* %426 to <4 x i32>*
  %428 = load <4 x i32>, <4 x i32>* %427, align 4
  %429 = mul nsw <4 x i32> %425, %420
  %430 = mul nsw <4 x i32> %428, %421
  %431 = add i64 %392, 32
  %432 = add i64 %395, -4
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %391, !llvm.loop !26

434:                                              ; preds = %391, %382
  %435 = phi <4 x i32> [ undef, %382 ], [ %429, %391 ]
  %436 = phi <4 x i32> [ undef, %382 ], [ %430, %391 ]
  %437 = phi i64 [ 0, %382 ], [ %431, %391 ]
  %438 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %382 ], [ %429, %391 ]
  %439 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %382 ], [ %430, %391 ]
  %440 = icmp eq i64 %387, 0
  br i1 %440, label %457, label %441

441:                                              ; preds = %434, %441
  %442 = phi i64 [ %454, %441 ], [ %437, %434 ]
  %443 = phi <4 x i32> [ %452, %441 ], [ %438, %434 ]
  %444 = phi <4 x i32> [ %453, %441 ], [ %439, %434 ]
  %445 = phi i64 [ %455, %441 ], [ %387, %434 ]
  %446 = getelementptr inbounds i32, i32* %379, i64 %442
  %447 = bitcast i32* %446 to <4 x i32>*
  %448 = load <4 x i32>, <4 x i32>* %447, align 4
  %449 = getelementptr inbounds i32, i32* %446, i64 4
  %450 = bitcast i32* %449 to <4 x i32>*
  %451 = load <4 x i32>, <4 x i32>* %450, align 4
  %452 = mul nsw <4 x i32> %448, %443
  %453 = mul nsw <4 x i32> %451, %444
  %454 = add i64 %442, 8
  %455 = add i64 %445, -1
  %456 = icmp eq i64 %455, 0
  br i1 %456, label %457, label %441, !llvm.loop !28

457:                                              ; preds = %441, %434
  %458 = phi <4 x i32> [ %435, %434 ], [ %452, %441 ]
  %459 = phi <4 x i32> [ %436, %434 ], [ %453, %441 ]
  %460 = mul <4 x i32> %459, %458
  %461 = shufflevector <4 x i32> %460, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %462 = mul <4 x i32> %460, %461
  %463 = shufflevector <4 x i32> %462, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %464 = mul <4 x i32> %462, %463
  %465 = extractelement <4 x i32> %464, i32 0
  %466 = icmp eq i64 %383, %380
  br i1 %466, label %478, label %467

467:                                              ; preds = %457, %378
  %468 = phi i64 [ 0, %378 ], [ %383, %457 ]
  %469 = phi i32 [ 1, %378 ], [ %465, %457 ]
  br label %470

470:                                              ; preds = %467, %470
  %471 = phi i64 [ %476, %470 ], [ %468, %467 ]
  %472 = phi i32 [ %475, %470 ], [ %469, %467 ]
  %473 = getelementptr inbounds i32, i32* %379, i64 %471
  %474 = load i32, i32* %473, align 4
  %475 = mul nsw i32 %474, %472
  %476 = add nuw nsw i64 %471, 1
  %477 = icmp eq i64 %476, %380
  br i1 %477, label %478, label %470, !llvm.loop !30

478:                                              ; preds = %470, %457
  %479 = phi i32 [ %465, %457 ], [ %475, %470 ]
  %480 = icmp sgt i32 %479, 0
  br i1 %480, label %481, label %624

481:                                              ; preds = %478, %375
  %482 = phi i32 [ %479, %478 ], [ 1, %375 ]
  %483 = sitofp i32 %260 to float
  %484 = sitofp i32 %261 to float
  %485 = zext i32 %482 to i64
  %486 = icmp ult i32 %482, 4
  br i1 %486, label %572, label %487

487:                                              ; preds = %481
  %488 = getelementptr i32, i32* %369, i64 %485
  %489 = bitcast i32* %488 to i8*
  %490 = getelementptr i32, i32* %298, i64 %485
  %491 = bitcast i32* %490 to i8*
  %492 = getelementptr i32, i32* %333, i64 %485
  %493 = bitcast i32* %492 to i8*
  %494 = icmp ult i8* %368, %491
  %495 = icmp ult i8* %297, %489
  %496 = and i1 %494, %495
  %497 = icmp ult i8* %368, %493
  %498 = icmp ult i8* %332, %489
  %499 = and i1 %497, %498
  %500 = or i1 %496, %499
  br i1 %500, label %572, label %501

501:                                              ; preds = %487
  %502 = and i64 %485, 4294967292
  %503 = insertelement <4 x float> undef, float %483, i32 0
  %504 = shufflevector <4 x float> %503, <4 x float> undef, <4 x i32> zeroinitializer
  %505 = insertelement <4 x float> undef, float %484, i32 0
  %506 = shufflevector <4 x float> %505, <4 x float> undef, <4 x i32> zeroinitializer
  %507 = add nsw i64 %502, -4
  %508 = lshr exact i64 %507, 2
  %509 = add nuw nsw i64 %508, 1
  %510 = and i64 %509, 1
  %511 = icmp eq i64 %507, 0
  br i1 %511, label %551, label %512

512:                                              ; preds = %501
  %513 = sub nuw nsw i64 %509, %510
  br label %514

514:                                              ; preds = %514, %512
  %515 = phi i64 [ 0, %512 ], [ %548, %514 ]
  %516 = phi i64 [ %513, %512 ], [ %549, %514 ]
  %517 = getelementptr inbounds i32, i32* %298, i64 %515
  %518 = bitcast i32* %517 to <4 x i32>*
  %519 = load <4 x i32>, <4 x i32>* %518, align 4, !alias.scope !32
  %520 = getelementptr inbounds i32, i32* %333, i64 %515
  %521 = bitcast i32* %520 to <4 x i32>*
  %522 = load <4 x i32>, <4 x i32>* %521, align 4, !alias.scope !35
  %523 = mul nsw <4 x i32> %522, %519
  %524 = sitofp <4 x i32> %523 to <4 x float>
  %525 = fcmp ogt <4 x float> %504, %524
  %526 = select <4 x i1> %525, <4 x float> %504, <4 x float> %524
  %527 = fcmp ogt <4 x float> %526, %506
  %528 = select <4 x i1> %527, <4 x float> %506, <4 x float> %526
  %529 = fptosi <4 x float> %528 to <4 x i32>
  %530 = getelementptr inbounds i32, i32* %369, i64 %515
  %531 = bitcast i32* %530 to <4 x i32>*
  store <4 x i32> %529, <4 x i32>* %531, align 4, !alias.scope !37, !noalias !39
  %532 = or i64 %515, 4
  %533 = getelementptr inbounds i32, i32* %298, i64 %532
  %534 = bitcast i32* %533 to <4 x i32>*
  %535 = load <4 x i32>, <4 x i32>* %534, align 4, !alias.scope !32
  %536 = getelementptr inbounds i32, i32* %333, i64 %532
  %537 = bitcast i32* %536 to <4 x i32>*
  %538 = load <4 x i32>, <4 x i32>* %537, align 4, !alias.scope !35
  %539 = mul nsw <4 x i32> %538, %535
  %540 = sitofp <4 x i32> %539 to <4 x float>
  %541 = fcmp ogt <4 x float> %504, %540
  %542 = select <4 x i1> %541, <4 x float> %504, <4 x float> %540
  %543 = fcmp ogt <4 x float> %542, %506
  %544 = select <4 x i1> %543, <4 x float> %506, <4 x float> %542
  %545 = fptosi <4 x float> %544 to <4 x i32>
  %546 = getelementptr inbounds i32, i32* %369, i64 %532
  %547 = bitcast i32* %546 to <4 x i32>*
  store <4 x i32> %545, <4 x i32>* %547, align 4, !alias.scope !37, !noalias !39
  %548 = add i64 %515, 8
  %549 = add i64 %516, -2
  %550 = icmp eq i64 %549, 0
  br i1 %550, label %551, label %514, !llvm.loop !40

551:                                              ; preds = %514, %501
  %552 = phi i64 [ 0, %501 ], [ %548, %514 ]
  %553 = icmp eq i64 %510, 0
  br i1 %553, label %570, label %554

554:                                              ; preds = %551
  %555 = getelementptr inbounds i32, i32* %298, i64 %552
  %556 = bitcast i32* %555 to <4 x i32>*
  %557 = load <4 x i32>, <4 x i32>* %556, align 4, !alias.scope !32
  %558 = getelementptr inbounds i32, i32* %333, i64 %552
  %559 = bitcast i32* %558 to <4 x i32>*
  %560 = load <4 x i32>, <4 x i32>* %559, align 4, !alias.scope !35
  %561 = mul nsw <4 x i32> %560, %557
  %562 = sitofp <4 x i32> %561 to <4 x float>
  %563 = fcmp ogt <4 x float> %504, %562
  %564 = select <4 x i1> %563, <4 x float> %504, <4 x float> %562
  %565 = fcmp ogt <4 x float> %564, %506
  %566 = select <4 x i1> %565, <4 x float> %506, <4 x float> %564
  %567 = fptosi <4 x float> %566 to <4 x i32>
  %568 = getelementptr inbounds i32, i32* %369, i64 %552
  %569 = bitcast i32* %568 to <4 x i32>*
  store <4 x i32> %567, <4 x i32>* %569, align 4, !alias.scope !37, !noalias !39
  br label %570

570:                                              ; preds = %551, %554
  %571 = icmp eq i64 %502, %485
  br i1 %571, label %624, label %572

572:                                              ; preds = %570, %487, %481
  %573 = phi i64 [ 0, %487 ], [ 0, %481 ], [ %502, %570 ]
  %574 = xor i64 %573, -1
  %575 = and i64 %485, 1
  %576 = icmp eq i64 %575, 0
  br i1 %576, label %591, label %577

577:                                              ; preds = %572
  %578 = getelementptr inbounds i32, i32* %298, i64 %573
  %579 = load i32, i32* %578, align 4
  %580 = getelementptr inbounds i32, i32* %333, i64 %573
  %581 = load i32, i32* %580, align 4
  %582 = mul nsw i32 %581, %579
  %583 = sitofp i32 %582 to float
  %584 = fcmp olt float %583, %483
  %585 = select i1 %584, float %483, float %583
  %586 = fcmp ogt float %585, %484
  %587 = select i1 %586, float %484, float %585
  %588 = fptosi float %587 to i32
  %589 = getelementptr inbounds i32, i32* %369, i64 %573
  store i32 %588, i32* %589, align 4
  %590 = or i64 %573, 1
  br label %591

591:                                              ; preds = %572, %577
  %592 = phi i64 [ %573, %572 ], [ %590, %577 ]
  %593 = sub nsw i64 0, %485
  %594 = icmp eq i64 %574, %593
  br i1 %594, label %624, label %595

595:                                              ; preds = %591, %595
  %596 = phi i64 [ %622, %595 ], [ %592, %591 ]
  %597 = getelementptr inbounds i32, i32* %298, i64 %596
  %598 = load i32, i32* %597, align 4
  %599 = getelementptr inbounds i32, i32* %333, i64 %596
  %600 = load i32, i32* %599, align 4
  %601 = mul nsw i32 %600, %598
  %602 = sitofp i32 %601 to float
  %603 = fcmp olt float %602, %483
  %604 = select i1 %603, float %483, float %602
  %605 = fcmp ogt float %604, %484
  %606 = select i1 %605, float %484, float %604
  %607 = fptosi float %606 to i32
  %608 = getelementptr inbounds i32, i32* %369, i64 %596
  store i32 %607, i32* %608, align 4
  %609 = add nuw nsw i64 %596, 1
  %610 = getelementptr inbounds i32, i32* %298, i64 %609
  %611 = load i32, i32* %610, align 4
  %612 = getelementptr inbounds i32, i32* %333, i64 %609
  %613 = load i32, i32* %612, align 4
  %614 = mul nsw i32 %613, %611
  %615 = sitofp i32 %614 to float
  %616 = fcmp olt float %615, %483
  %617 = select i1 %616, float %483, float %615
  %618 = fcmp ogt float %617, %484
  %619 = select i1 %618, float %484, float %617
  %620 = fptosi float %619 to i32
  %621 = getelementptr inbounds i32, i32* %369, i64 %609
  store i32 %620, i32* %621, align 4
  %622 = add nuw nsw i64 %596, 2
  %623 = icmp eq i64 %622, %485
  br i1 %623, label %624, label %595, !llvm.loop !41

624:                                              ; preds = %591, %595, %570, %478
  %625 = icmp sgt i32 %367, 5
  br i1 %625, label %626, label %632

626:                                              ; preds = %624
  %627 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %628 = load i32*, i32** %627, align 8
  %629 = icmp eq i32* %628, null
  br i1 %629, label %632, label %630

630:                                              ; preds = %626
  %631 = bitcast i32* %628 to i8*
  call void @_ZdaPv(i8* %631) #10
  br label %632

632:                                              ; preds = %624, %626, %630
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %334) #11
  %633 = icmp sgt i32 %331, 5
  br i1 %633, label %634, label %640

634:                                              ; preds = %632
  %635 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %636 = load i32*, i32** %635, align 8
  %637 = icmp eq i32* %636, null
  br i1 %637, label %640, label %638

638:                                              ; preds = %634
  %639 = bitcast i32* %636 to i8*
  call void @_ZdaPv(i8* %639) #10
  br label %640

640:                                              ; preds = %632, %634, %638
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %299) #11
  br i1 %371, label %641, label %1156

641:                                              ; preds = %640
  %642 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %643 = load i32*, i32** %642, align 8
  %644 = icmp eq i32* %643, null
  br i1 %644, label %1156, label %645

645:                                              ; preds = %641
  %646 = bitcast i32* %643 to i8*
  call void @_ZdaPv(i8* %646) #10
  br label %1156

647:                                              ; preds = %104
  %648 = getelementptr inbounds %struct.TfLiteMulParams, %struct.TfLiteMulParams* %2, i64 0, i32 0
  %649 = load i32, i32* %648, align 4
  %650 = add i32 %649, -1
  %651 = icmp ult i32 %650, 3
  br i1 %84, label %652, label %794

652:                                              ; preds = %647
  br i1 %651, label %653, label %660

653:                                              ; preds = %652
  %654 = sext i32 %650 to i64
  %655 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.52, i64 0, i64 %654
  %656 = load float, float* %655, align 4
  %657 = sext i32 %650 to i64
  %658 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.53, i64 0, i64 %657
  %659 = load float, float* %658, align 4
  br label %660

660:                                              ; preds = %652, %653
  %661 = phi float [ %656, %653 ], [ 0xC7EFFFFFE0000000, %652 ]
  %662 = phi float [ %659, %653 ], [ 0x47EFFFFFE0000000, %652 ]
  %663 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 13
  store float %661, float* %663, align 4
  %664 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 14
  store float %662, float* %664, align 4
  %665 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %665) #11
  br i1 %25, label %666, label %668

666:                                              ; preds = %660
  %667 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %667, align 8, !alias.scope !42
  br label %696

668:                                              ; preds = %660
  %669 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %670 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %669, align 8, !noalias !42
  %671 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %670, i64 0, i32 0
  %672 = load i32, i32* %671, align 4, !noalias !42
  %673 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %670, i64 0, i32 1, i64 0
  %674 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %672, i32* %674, align 8, !alias.scope !42
  %675 = icmp sgt i32 %672, 5
  br i1 %675, label %676, label %683

676:                                              ; preds = %668
  %677 = sext i32 %672 to i64
  %678 = shl nsw i64 %677, 2
  %679 = call i8* @_Znam(i64 %678) #10, !noalias !42
  %680 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %681 = bitcast i32** %680 to i8**
  store i8* %679, i8** %681, align 8, !alias.scope !42
  %682 = bitcast i8* %679 to i32*
  br label %688

683:                                              ; preds = %668
  %684 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %685 = bitcast %union.anon* %684 to i32*
  %686 = sext i32 %672 to i64
  %687 = shl nsw i64 %686, 2
  br label %688

688:                                              ; preds = %683, %676
  %689 = phi i64 [ %678, %676 ], [ %687, %683 ]
  %690 = phi i32* [ %682, %676 ], [ %685, %683 ]
  %691 = bitcast i32* %690 to i8*
  %692 = bitcast i32* %673 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %691, i8* align 4 %692, i64 %689, i1 false) #11
  %693 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %694 = bitcast %union.TfLitePtrUnion* %693 to float**
  %695 = load float*, float** %694, align 8
  br label %696

696:                                              ; preds = %666, %688
  %697 = phi float* [ %695, %688 ], [ null, %666 ]
  %698 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %698) #11
  br i1 %55, label %699, label %701

699:                                              ; preds = %696
  %700 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %700, align 8, !alias.scope !45
  br label %729

701:                                              ; preds = %696
  %702 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %703 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %702, align 8, !noalias !45
  %704 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %703, i64 0, i32 0
  %705 = load i32, i32* %704, align 4, !noalias !45
  %706 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %703, i64 0, i32 1, i64 0
  %707 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %705, i32* %707, align 8, !alias.scope !45
  %708 = icmp sgt i32 %705, 5
  br i1 %708, label %709, label %716

709:                                              ; preds = %701
  %710 = sext i32 %705 to i64
  %711 = shl nsw i64 %710, 2
  %712 = call i8* @_Znam(i64 %711) #10, !noalias !45
  %713 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %714 = bitcast i32** %713 to i8**
  store i8* %712, i8** %714, align 8, !alias.scope !45
  %715 = bitcast i8* %712 to i32*
  br label %721

716:                                              ; preds = %701
  %717 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %718 = bitcast %union.anon* %717 to i32*
  %719 = sext i32 %705 to i64
  %720 = shl nsw i64 %719, 2
  br label %721

721:                                              ; preds = %716, %709
  %722 = phi i64 [ %711, %709 ], [ %720, %716 ]
  %723 = phi i32* [ %715, %709 ], [ %718, %716 ]
  %724 = bitcast i32* %723 to i8*
  %725 = bitcast i32* %706 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %724, i8* align 4 %725, i64 %722, i1 false) #11
  %726 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %727 = bitcast %union.TfLitePtrUnion* %726 to float**
  %728 = load float*, float** %727, align 8
  br label %729

729:                                              ; preds = %699, %721
  %730 = phi float* [ %728, %721 ], [ null, %699 ]
  %731 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %731) #11
  %732 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %732, label %733, label %735

733:                                              ; preds = %729
  %734 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %734, align 8, !alias.scope !48
  br label %763

735:                                              ; preds = %729
  %736 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %737 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %736, align 8, !noalias !48
  %738 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %737, i64 0, i32 0
  %739 = load i32, i32* %738, align 4, !noalias !48
  %740 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %737, i64 0, i32 1, i64 0
  %741 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %739, i32* %741, align 8, !alias.scope !48
  %742 = icmp sgt i32 %739, 5
  br i1 %742, label %743, label %750

743:                                              ; preds = %735
  %744 = sext i32 %739 to i64
  %745 = shl nsw i64 %744, 2
  %746 = call i8* @_Znam(i64 %745) #10, !noalias !48
  %747 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %748 = bitcast i32** %747 to i8**
  store i8* %746, i8** %748, align 8, !alias.scope !48
  %749 = bitcast i8* %746 to i32*
  br label %755

750:                                              ; preds = %735
  %751 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %752 = bitcast %union.anon* %751 to i32*
  %753 = sext i32 %739 to i64
  %754 = shl nsw i64 %753, 2
  br label %755

755:                                              ; preds = %750, %743
  %756 = phi i64 [ %745, %743 ], [ %754, %750 ]
  %757 = phi i32* [ %749, %743 ], [ %752, %750 ]
  %758 = bitcast i32* %757 to i8*
  %759 = bitcast i32* %740 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %758, i8* align 4 %759, i64 %756, i1 false) #11
  %760 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %761 = bitcast %union.TfLitePtrUnion* %760 to float**
  %762 = load float*, float** %761, align 8
  br label %763

763:                                              ; preds = %733, %755
  %764 = phi float* [ %762, %755 ], [ null, %733 ]
  call void @_ZN6tflite13reference_ops18BroadcastMul4DSlowIfEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, float* %697, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %18, float* %730, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %19, float* %764)
  %765 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  %766 = load i32, i32* %765, align 8
  %767 = icmp sgt i32 %766, 5
  br i1 %767, label %768, label %774

768:                                              ; preds = %763
  %769 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %770 = load i32*, i32** %769, align 8
  %771 = icmp eq i32* %770, null
  br i1 %771, label %774, label %772

772:                                              ; preds = %768
  %773 = bitcast i32* %770 to i8*
  call void @_ZdaPv(i8* %773) #10
  br label %774

774:                                              ; preds = %763, %768, %772
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %731) #11
  %775 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  %776 = load i32, i32* %775, align 8
  %777 = icmp sgt i32 %776, 5
  br i1 %777, label %778, label %784

778:                                              ; preds = %774
  %779 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %780 = load i32*, i32** %779, align 8
  %781 = icmp eq i32* %780, null
  br i1 %781, label %784, label %782

782:                                              ; preds = %778
  %783 = bitcast i32* %780 to i8*
  call void @_ZdaPv(i8* %783) #10
  br label %784

784:                                              ; preds = %774, %778, %782
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %698) #11
  %785 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %786 = load i32, i32* %785, align 8
  %787 = icmp sgt i32 %786, 5
  br i1 %787, label %788, label %1156

788:                                              ; preds = %784
  %789 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %790 = load i32*, i32** %789, align 8
  %791 = icmp eq i32* %790, null
  br i1 %791, label %1156, label %792

792:                                              ; preds = %788
  %793 = bitcast i32* %790 to i8*
  call void @_ZdaPv(i8* %793) #10
  br label %1156

794:                                              ; preds = %647
  br i1 %651, label %795, label %802

795:                                              ; preds = %794
  %796 = sext i32 %650 to i64
  %797 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.52, i64 0, i64 %796
  %798 = load float, float* %797, align 4
  %799 = sext i32 %650 to i64
  %800 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.53, i64 0, i64 %799
  %801 = load float, float* %800, align 4
  br label %802

802:                                              ; preds = %794, %795
  %803 = phi float [ %798, %795 ], [ 0xC7EFFFFFE0000000, %794 ]
  %804 = phi float [ %801, %795 ], [ 0x47EFFFFFE0000000, %794 ]
  %805 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 13
  store float %803, float* %805, align 4
  %806 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 14
  store float %804, float* %806, align 4
  %807 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %807) #11
  br i1 %25, label %808, label %810

808:                                              ; preds = %802
  %809 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %809, align 8, !alias.scope !51
  br label %839

810:                                              ; preds = %802
  %811 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %812 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %811, align 8, !noalias !51
  %813 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %812, i64 0, i32 0
  %814 = load i32, i32* %813, align 4, !noalias !51
  %815 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %812, i64 0, i32 1, i64 0
  %816 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %814, i32* %816, align 8, !alias.scope !51
  %817 = icmp sgt i32 %814, 5
  br i1 %817, label %818, label %825

818:                                              ; preds = %810
  %819 = sext i32 %814 to i64
  %820 = shl nsw i64 %819, 2
  %821 = call i8* @_Znam(i64 %820) #10, !noalias !51
  %822 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %823 = bitcast i32** %822 to i8**
  store i8* %821, i8** %823, align 8, !alias.scope !51
  %824 = bitcast i8* %821 to i32*
  br label %830

825:                                              ; preds = %810
  %826 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %827 = bitcast %union.anon* %826 to i32*
  %828 = sext i32 %814 to i64
  %829 = shl nsw i64 %828, 2
  br label %830

830:                                              ; preds = %825, %818
  %831 = phi i64 [ %820, %818 ], [ %829, %825 ]
  %832 = phi i32* [ %824, %818 ], [ %827, %825 ]
  %833 = bitcast i32* %832 to i8*
  %834 = bitcast i32* %815 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %833, i8* align 4 %834, i64 %831, i1 false) #11
  %835 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %836 = bitcast %union.TfLitePtrUnion* %835 to float**
  %837 = load float*, float** %836, align 8
  %838 = bitcast float* %837 to i8*
  br label %839

839:                                              ; preds = %808, %830
  %840 = phi i32 [ %814, %830 ], [ 0, %808 ]
  %841 = phi i8* [ %838, %830 ], [ null, %808 ]
  %842 = phi float* [ %837, %830 ], [ null, %808 ]
  %843 = bitcast %"class.tflite::RuntimeShape"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %843) #11
  br i1 %55, label %844, label %846

844:                                              ; preds = %839
  %845 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 0, i32* %845, align 8, !alias.scope !54
  br label %875

846:                                              ; preds = %839
  %847 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %848 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %847, align 8, !noalias !54
  %849 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %848, i64 0, i32 0
  %850 = load i32, i32* %849, align 4, !noalias !54
  %851 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %848, i64 0, i32 1, i64 0
  %852 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 %850, i32* %852, align 8, !alias.scope !54
  %853 = icmp sgt i32 %850, 5
  br i1 %853, label %854, label %861

854:                                              ; preds = %846
  %855 = sext i32 %850 to i64
  %856 = shl nsw i64 %855, 2
  %857 = call i8* @_Znam(i64 %856) #10, !noalias !54
  %858 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %859 = bitcast i32** %858 to i8**
  store i8* %857, i8** %859, align 8, !alias.scope !54
  %860 = bitcast i8* %857 to i32*
  br label %866

861:                                              ; preds = %846
  %862 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  %863 = bitcast %union.anon* %862 to i32*
  %864 = sext i32 %850 to i64
  %865 = shl nsw i64 %864, 2
  br label %866

866:                                              ; preds = %861, %854
  %867 = phi i64 [ %856, %854 ], [ %865, %861 ]
  %868 = phi i32* [ %860, %854 ], [ %863, %861 ]
  %869 = bitcast i32* %868 to i8*
  %870 = bitcast i32* %851 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %869, i8* align 4 %870, i64 %867, i1 false) #11
  %871 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %872 = bitcast %union.TfLitePtrUnion* %871 to float**
  %873 = load float*, float** %872, align 8
  %874 = bitcast float* %873 to i8*
  br label %875

875:                                              ; preds = %844, %866
  %876 = phi i32 [ %850, %866 ], [ 0, %844 ]
  %877 = phi i8* [ %874, %866 ], [ null, %844 ]
  %878 = phi float* [ %873, %866 ], [ null, %844 ]
  %879 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %879) #11
  %880 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %880, label %881, label %883

881:                                              ; preds = %875
  %882 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %882, align 8, !alias.scope !57
  br label %912

883:                                              ; preds = %875
  %884 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %885 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %884, align 8, !noalias !57
  %886 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %885, i64 0, i32 0
  %887 = load i32, i32* %886, align 4, !noalias !57
  %888 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %885, i64 0, i32 1, i64 0
  %889 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %887, i32* %889, align 8, !alias.scope !57
  %890 = icmp sgt i32 %887, 5
  br i1 %890, label %891, label %898

891:                                              ; preds = %883
  %892 = sext i32 %887 to i64
  %893 = shl nsw i64 %892, 2
  %894 = call i8* @_Znam(i64 %893) #10, !noalias !57
  %895 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %896 = bitcast i32** %895 to i8**
  store i8* %894, i8** %896, align 8, !alias.scope !57
  %897 = bitcast i8* %894 to i32*
  br label %903

898:                                              ; preds = %883
  %899 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %900 = bitcast %union.anon* %899 to i32*
  %901 = sext i32 %887 to i64
  %902 = shl nsw i64 %901, 2
  br label %903

903:                                              ; preds = %898, %891
  %904 = phi i64 [ %893, %891 ], [ %902, %898 ]
  %905 = phi i32* [ %897, %891 ], [ %900, %898 ]
  %906 = bitcast i32* %905 to i8*
  %907 = bitcast i32* %888 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %906, i8* align 4 %907, i64 %904, i1 false) #11
  %908 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %909 = bitcast %union.TfLitePtrUnion* %908 to float**
  %910 = load float*, float** %909, align 8
  %911 = bitcast float* %910 to i8*
  br label %912

912:                                              ; preds = %881, %903
  %913 = phi i32 [ %887, %903 ], [ 0, %881 ]
  %914 = phi i8* [ %911, %903 ], [ null, %881 ]
  %915 = phi float* [ %910, %903 ], [ null, %881 ]
  %916 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %917 = icmp sgt i32 %840, 5
  br i1 %917, label %918, label %921

918:                                              ; preds = %912
  %919 = getelementptr inbounds %union.anon, %union.anon* %916, i64 0, i32 0
  %920 = load i32*, i32** %919, align 8
  br label %924

921:                                              ; preds = %912
  %922 = bitcast %union.anon* %916 to i32*
  %923 = icmp sgt i32 %840, 0
  br i1 %923, label %924, label %1027

924:                                              ; preds = %921, %918
  %925 = phi i32* [ %920, %918 ], [ %922, %921 ]
  %926 = zext i32 %840 to i64
  %927 = icmp ult i32 %840, 8
  br i1 %927, label %1013, label %928

928:                                              ; preds = %924
  %929 = and i64 %926, 4294967288
  %930 = add nsw i64 %929, -8
  %931 = lshr exact i64 %930, 3
  %932 = add nuw nsw i64 %931, 1
  %933 = and i64 %932, 3
  %934 = icmp ult i64 %930, 24
  br i1 %934, label %980, label %935

935:                                              ; preds = %928
  %936 = sub nsw i64 %932, %933
  br label %937

937:                                              ; preds = %937, %935
  %938 = phi i64 [ 0, %935 ], [ %977, %937 ]
  %939 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %935 ], [ %975, %937 ]
  %940 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %935 ], [ %976, %937 ]
  %941 = phi i64 [ %936, %935 ], [ %978, %937 ]
  %942 = getelementptr inbounds i32, i32* %925, i64 %938
  %943 = bitcast i32* %942 to <4 x i32>*
  %944 = load <4 x i32>, <4 x i32>* %943, align 4
  %945 = getelementptr inbounds i32, i32* %942, i64 4
  %946 = bitcast i32* %945 to <4 x i32>*
  %947 = load <4 x i32>, <4 x i32>* %946, align 4
  %948 = mul nsw <4 x i32> %944, %939
  %949 = mul nsw <4 x i32> %947, %940
  %950 = or i64 %938, 8
  %951 = getelementptr inbounds i32, i32* %925, i64 %950
  %952 = bitcast i32* %951 to <4 x i32>*
  %953 = load <4 x i32>, <4 x i32>* %952, align 4
  %954 = getelementptr inbounds i32, i32* %951, i64 4
  %955 = bitcast i32* %954 to <4 x i32>*
  %956 = load <4 x i32>, <4 x i32>* %955, align 4
  %957 = mul nsw <4 x i32> %953, %948
  %958 = mul nsw <4 x i32> %956, %949
  %959 = or i64 %938, 16
  %960 = getelementptr inbounds i32, i32* %925, i64 %959
  %961 = bitcast i32* %960 to <4 x i32>*
  %962 = load <4 x i32>, <4 x i32>* %961, align 4
  %963 = getelementptr inbounds i32, i32* %960, i64 4
  %964 = bitcast i32* %963 to <4 x i32>*
  %965 = load <4 x i32>, <4 x i32>* %964, align 4
  %966 = mul nsw <4 x i32> %962, %957
  %967 = mul nsw <4 x i32> %965, %958
  %968 = or i64 %938, 24
  %969 = getelementptr inbounds i32, i32* %925, i64 %968
  %970 = bitcast i32* %969 to <4 x i32>*
  %971 = load <4 x i32>, <4 x i32>* %970, align 4
  %972 = getelementptr inbounds i32, i32* %969, i64 4
  %973 = bitcast i32* %972 to <4 x i32>*
  %974 = load <4 x i32>, <4 x i32>* %973, align 4
  %975 = mul nsw <4 x i32> %971, %966
  %976 = mul nsw <4 x i32> %974, %967
  %977 = add i64 %938, 32
  %978 = add i64 %941, -4
  %979 = icmp eq i64 %978, 0
  br i1 %979, label %980, label %937, !llvm.loop !60

980:                                              ; preds = %937, %928
  %981 = phi <4 x i32> [ undef, %928 ], [ %975, %937 ]
  %982 = phi <4 x i32> [ undef, %928 ], [ %976, %937 ]
  %983 = phi i64 [ 0, %928 ], [ %977, %937 ]
  %984 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %928 ], [ %975, %937 ]
  %985 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %928 ], [ %976, %937 ]
  %986 = icmp eq i64 %933, 0
  br i1 %986, label %1003, label %987

987:                                              ; preds = %980, %987
  %988 = phi i64 [ %1000, %987 ], [ %983, %980 ]
  %989 = phi <4 x i32> [ %998, %987 ], [ %984, %980 ]
  %990 = phi <4 x i32> [ %999, %987 ], [ %985, %980 ]
  %991 = phi i64 [ %1001, %987 ], [ %933, %980 ]
  %992 = getelementptr inbounds i32, i32* %925, i64 %988
  %993 = bitcast i32* %992 to <4 x i32>*
  %994 = load <4 x i32>, <4 x i32>* %993, align 4
  %995 = getelementptr inbounds i32, i32* %992, i64 4
  %996 = bitcast i32* %995 to <4 x i32>*
  %997 = load <4 x i32>, <4 x i32>* %996, align 4
  %998 = mul nsw <4 x i32> %994, %989
  %999 = mul nsw <4 x i32> %997, %990
  %1000 = add i64 %988, 8
  %1001 = add i64 %991, -1
  %1002 = icmp eq i64 %1001, 0
  br i1 %1002, label %1003, label %987, !llvm.loop !61

1003:                                             ; preds = %987, %980
  %1004 = phi <4 x i32> [ %981, %980 ], [ %998, %987 ]
  %1005 = phi <4 x i32> [ %982, %980 ], [ %999, %987 ]
  %1006 = mul <4 x i32> %1005, %1004
  %1007 = shufflevector <4 x i32> %1006, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1008 = mul <4 x i32> %1006, %1007
  %1009 = shufflevector <4 x i32> %1008, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1010 = mul <4 x i32> %1008, %1009
  %1011 = extractelement <4 x i32> %1010, i32 0
  %1012 = icmp eq i64 %929, %926
  br i1 %1012, label %1024, label %1013

1013:                                             ; preds = %1003, %924
  %1014 = phi i64 [ 0, %924 ], [ %929, %1003 ]
  %1015 = phi i32 [ 1, %924 ], [ %1011, %1003 ]
  br label %1016

1016:                                             ; preds = %1013, %1016
  %1017 = phi i64 [ %1022, %1016 ], [ %1014, %1013 ]
  %1018 = phi i32 [ %1021, %1016 ], [ %1015, %1013 ]
  %1019 = getelementptr inbounds i32, i32* %925, i64 %1017
  %1020 = load i32, i32* %1019, align 4
  %1021 = mul nsw i32 %1020, %1018
  %1022 = add nuw nsw i64 %1017, 1
  %1023 = icmp eq i64 %1022, %926
  br i1 %1023, label %1024, label %1016, !llvm.loop !62

1024:                                             ; preds = %1016, %1003
  %1025 = phi i32 [ %1011, %1003 ], [ %1021, %1016 ]
  %1026 = icmp sgt i32 %1025, 0
  br i1 %1026, label %1027, label %1133

1027:                                             ; preds = %1024, %921
  %1028 = phi i32 [ %1025, %1024 ], [ 1, %921 ]
  %1029 = zext i32 %1028 to i64
  %1030 = icmp ult i32 %1028, 8
  br i1 %1030, label %1087, label %1031

1031:                                             ; preds = %1027
  %1032 = getelementptr float, float* %915, i64 %1029
  %1033 = bitcast float* %1032 to i8*
  %1034 = getelementptr float, float* %842, i64 %1029
  %1035 = bitcast float* %1034 to i8*
  %1036 = getelementptr float, float* %878, i64 %1029
  %1037 = bitcast float* %1036 to i8*
  %1038 = icmp ult i8* %914, %1035
  %1039 = icmp ult i8* %841, %1033
  %1040 = and i1 %1038, %1039
  %1041 = icmp ult i8* %914, %1037
  %1042 = icmp ult i8* %877, %1033
  %1043 = and i1 %1041, %1042
  %1044 = or i1 %1040, %1043
  br i1 %1044, label %1087, label %1045

1045:                                             ; preds = %1031
  %1046 = and i64 %1029, 4294967288
  %1047 = insertelement <4 x float> undef, float %803, i32 0
  %1048 = shufflevector <4 x float> %1047, <4 x float> undef, <4 x i32> zeroinitializer
  %1049 = insertelement <4 x float> undef, float %803, i32 0
  %1050 = shufflevector <4 x float> %1049, <4 x float> undef, <4 x i32> zeroinitializer
  %1051 = insertelement <4 x float> undef, float %804, i32 0
  %1052 = shufflevector <4 x float> %1051, <4 x float> undef, <4 x i32> zeroinitializer
  %1053 = insertelement <4 x float> undef, float %804, i32 0
  %1054 = shufflevector <4 x float> %1053, <4 x float> undef, <4 x i32> zeroinitializer
  br label %1055

1055:                                             ; preds = %1055, %1045
  %1056 = phi i64 [ 0, %1045 ], [ %1083, %1055 ]
  %1057 = getelementptr inbounds float, float* %842, i64 %1056
  %1058 = bitcast float* %1057 to <4 x float>*
  %1059 = load <4 x float>, <4 x float>* %1058, align 4, !alias.scope !63
  %1060 = getelementptr inbounds float, float* %1057, i64 4
  %1061 = bitcast float* %1060 to <4 x float>*
  %1062 = load <4 x float>, <4 x float>* %1061, align 4, !alias.scope !63
  %1063 = getelementptr inbounds float, float* %878, i64 %1056
  %1064 = bitcast float* %1063 to <4 x float>*
  %1065 = load <4 x float>, <4 x float>* %1064, align 4, !alias.scope !66
  %1066 = getelementptr inbounds float, float* %1063, i64 4
  %1067 = bitcast float* %1066 to <4 x float>*
  %1068 = load <4 x float>, <4 x float>* %1067, align 4, !alias.scope !66
  %1069 = fmul <4 x float> %1059, %1065
  %1070 = fmul <4 x float> %1062, %1068
  %1071 = fcmp olt <4 x float> %1069, %1048
  %1072 = fcmp olt <4 x float> %1070, %1050
  %1073 = select <4 x i1> %1071, <4 x float> %1048, <4 x float> %1069
  %1074 = select <4 x i1> %1072, <4 x float> %1050, <4 x float> %1070
  %1075 = fcmp ogt <4 x float> %1073, %1052
  %1076 = fcmp ogt <4 x float> %1074, %1054
  %1077 = select <4 x i1> %1075, <4 x float> %1052, <4 x float> %1073
  %1078 = select <4 x i1> %1076, <4 x float> %1054, <4 x float> %1074
  %1079 = getelementptr inbounds float, float* %915, i64 %1056
  %1080 = bitcast float* %1079 to <4 x float>*
  store <4 x float> %1077, <4 x float>* %1080, align 4, !alias.scope !68, !noalias !70
  %1081 = getelementptr inbounds float, float* %1079, i64 4
  %1082 = bitcast float* %1081 to <4 x float>*
  store <4 x float> %1078, <4 x float>* %1082, align 4, !alias.scope !68, !noalias !70
  %1083 = add i64 %1056, 8
  %1084 = icmp eq i64 %1083, %1046
  br i1 %1084, label %1085, label %1055, !llvm.loop !71

1085:                                             ; preds = %1055
  %1086 = icmp eq i64 %1046, %1029
  br i1 %1086, label %1133, label %1087

1087:                                             ; preds = %1085, %1031, %1027
  %1088 = phi i64 [ 0, %1031 ], [ 0, %1027 ], [ %1046, %1085 ]
  %1089 = xor i64 %1088, -1
  %1090 = and i64 %1029, 1
  %1091 = icmp eq i64 %1090, 0
  br i1 %1091, label %1104, label %1092

1092:                                             ; preds = %1087
  %1093 = getelementptr inbounds float, float* %842, i64 %1088
  %1094 = load float, float* %1093, align 4
  %1095 = getelementptr inbounds float, float* %878, i64 %1088
  %1096 = load float, float* %1095, align 4
  %1097 = fmul float %1094, %1096
  %1098 = fcmp olt float %1097, %803
  %1099 = select i1 %1098, float %803, float %1097
  %1100 = fcmp ogt float %1099, %804
  %1101 = select i1 %1100, float %804, float %1099
  %1102 = getelementptr inbounds float, float* %915, i64 %1088
  store float %1101, float* %1102, align 4
  %1103 = or i64 %1088, 1
  br label %1104

1104:                                             ; preds = %1087, %1092
  %1105 = phi i64 [ %1088, %1087 ], [ %1103, %1092 ]
  %1106 = sub nsw i64 0, %1029
  %1107 = icmp eq i64 %1089, %1106
  br i1 %1107, label %1133, label %1108

1108:                                             ; preds = %1104, %1108
  %1109 = phi i64 [ %1131, %1108 ], [ %1105, %1104 ]
  %1110 = getelementptr inbounds float, float* %842, i64 %1109
  %1111 = load float, float* %1110, align 4
  %1112 = getelementptr inbounds float, float* %878, i64 %1109
  %1113 = load float, float* %1112, align 4
  %1114 = fmul float %1111, %1113
  %1115 = fcmp olt float %1114, %803
  %1116 = select i1 %1115, float %803, float %1114
  %1117 = fcmp ogt float %1116, %804
  %1118 = select i1 %1117, float %804, float %1116
  %1119 = getelementptr inbounds float, float* %915, i64 %1109
  store float %1118, float* %1119, align 4
  %1120 = add nuw nsw i64 %1109, 1
  %1121 = getelementptr inbounds float, float* %842, i64 %1120
  %1122 = load float, float* %1121, align 4
  %1123 = getelementptr inbounds float, float* %878, i64 %1120
  %1124 = load float, float* %1123, align 4
  %1125 = fmul float %1122, %1124
  %1126 = fcmp olt float %1125, %803
  %1127 = select i1 %1126, float %803, float %1125
  %1128 = fcmp ogt float %1127, %804
  %1129 = select i1 %1128, float %804, float %1127
  %1130 = getelementptr inbounds float, float* %915, i64 %1120
  store float %1129, float* %1130, align 4
  %1131 = add nuw nsw i64 %1109, 2
  %1132 = icmp eq i64 %1131, %1029
  br i1 %1132, label %1133, label %1108, !llvm.loop !72

1133:                                             ; preds = %1104, %1108, %1085, %1024
  %1134 = icmp sgt i32 %913, 5
  br i1 %1134, label %1135, label %1141

1135:                                             ; preds = %1133
  %1136 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1137 = load i32*, i32** %1136, align 8
  %1138 = icmp eq i32* %1137, null
  br i1 %1138, label %1141, label %1139

1139:                                             ; preds = %1135
  %1140 = bitcast i32* %1137 to i8*
  call void @_ZdaPv(i8* %1140) #10
  br label %1141

1141:                                             ; preds = %1133, %1135, %1139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %879) #11
  %1142 = icmp sgt i32 %876, 5
  br i1 %1142, label %1143, label %1149

1143:                                             ; preds = %1141
  %1144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %1145 = load i32*, i32** %1144, align 8
  %1146 = icmp eq i32* %1145, null
  br i1 %1146, label %1149, label %1147

1147:                                             ; preds = %1143
  %1148 = bitcast i32* %1145 to i8*
  call void @_ZdaPv(i8* %1148) #10
  br label %1149

1149:                                             ; preds = %1141, %1143, %1147
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %843) #11
  br i1 %917, label %1150, label %1156

1150:                                             ; preds = %1149
  %1151 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1152 = load i32*, i32** %1151, align 8
  %1153 = icmp eq i32* %1152, null
  br i1 %1153, label %1156, label %1154

1154:                                             ; preds = %1150
  %1155 = bitcast i32* %1152 to i8*
  call void @_ZdaPv(i8* %1155) #10
  br label %1156

1156:                                             ; preds = %1154, %1150, %1149, %792, %788, %784, %645, %641, %640, %249, %245, %241
  %1157 = phi i8* [ %125, %241 ], [ %125, %245 ], [ %125, %249 ], [ %264, %640 ], [ %264, %641 ], [ %264, %645 ], [ %665, %784 ], [ %665, %788 ], [ %665, %792 ], [ %807, %1149 ], [ %807, %1150 ], [ %807, %1154 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1157) #11
  br label %1158

1158:                                             ; preds = %1156, %104
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %23) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin3mul13EvalQuantizedILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteMulParams*, %"struct.tflite::ops::builtin::mul::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %8 = alloca %"struct.tflite::ArithmeticParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"class.tflite::RuntimeShape", align 8
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = alloca %"class.tflite::RuntimeShape", align 8
  %24 = alloca %"class.tflite::RuntimeShape", align 8
  %25 = alloca %"class.tflite::RuntimeShape", align 8
  %26 = alloca %"class.tflite::RuntimeShape", align 8
  %27 = alloca %"class.tflite::RuntimeShape", align 8
  %28 = alloca %"class.tflite::RuntimeShape", align 8
  %29 = alloca %"class.tflite::RuntimeShape", align 8
  %30 = alloca %"class.tflite::RuntimeShape", align 8
  %31 = alloca %"class.tflite::RuntimeShape", align 8
  %32 = alloca %"class.tflite::RuntimeShape", align 8
  %33 = alloca %"class.tflite::RuntimeShape", align 8
  %34 = alloca %"class.tflite::RuntimeShape", align 8
  %35 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %40, label %1129

40:                                               ; preds = %7
  %41 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %36, %42
  br i1 %43, label %44, label %1129

44:                                               ; preds = %40
  switch i32 %36, label %2300 [
    i32 3, label %45
    i32 9, label %45
    i32 7, label %45
  ]

45:                                               ; preds = %44, %44, %44
  %46 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %46) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %46, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3mul13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_.op_params, i64 0, i32 0), i64 80, i1 false)
  %47 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 11
  store i32 %48, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 12
  store i32 %50, i32* %52, align 4
  %53 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 3, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = sub nsw i32 0, %54
  %56 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 1
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 3, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = sub nsw i32 0, %58
  %60 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 2
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 3, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 3
  store i32 %62, i32* %63, align 4
  %64 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 4
  store i32 %65, i32* %66, align 4
  %67 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 5
  store i32 %68, i32* %69, align 4
  %70 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %70) #11
  %71 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %71, label %72, label %74

72:                                               ; preds = %45
  %73 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %73, align 8, !alias.scope !73
  br label %99

74:                                               ; preds = %45
  %75 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %76 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %75, align 8, !noalias !73
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %76, i64 0, i32 0
  %78 = load i32, i32* %77, align 4, !noalias !73
  %79 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %76, i64 0, i32 1, i64 0
  %80 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %78, i32* %80, align 8, !alias.scope !73
  %81 = icmp sgt i32 %78, 5
  br i1 %81, label %82, label %89

82:                                               ; preds = %74
  %83 = sext i32 %78 to i64
  %84 = shl nsw i64 %83, 2
  %85 = tail call i8* @_Znam(i64 %84) #10, !noalias !73
  %86 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %87 = bitcast i32** %86 to i8**
  store i8* %85, i8** %87, align 8, !alias.scope !73
  %88 = bitcast i8* %85 to i32*
  br label %94

89:                                               ; preds = %74
  %90 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %91 = bitcast %union.anon* %90 to i32*
  %92 = sext i32 %78 to i64
  %93 = shl nsw i64 %92, 2
  br label %94

94:                                               ; preds = %89, %82
  %95 = phi i64 [ %84, %82 ], [ %93, %89 ]
  %96 = phi i32* [ %88, %82 ], [ %91, %89 ]
  %97 = bitcast i32* %96 to i8*
  %98 = bitcast i32* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %97, i8* align 4 %98, i64 %95, i1 false) #11
  br label %99

99:                                               ; preds = %72, %94
  %100 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #11
  %101 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %101, label %102, label %104

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %103, align 8, !alias.scope !76
  br label %129

104:                                              ; preds = %99
  %105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %106 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %105, align 8, !noalias !76
  %107 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 4, !noalias !76
  %109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %106, i64 0, i32 1, i64 0
  %110 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %108, i32* %110, align 8, !alias.scope !76
  %111 = icmp sgt i32 %108, 5
  br i1 %111, label %112, label %119

112:                                              ; preds = %104
  %113 = sext i32 %108 to i64
  %114 = shl nsw i64 %113, 2
  %115 = tail call i8* @_Znam(i64 %114) #10, !noalias !76
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %117 = bitcast i32** %116 to i8**
  store i8* %115, i8** %117, align 8, !alias.scope !76
  %118 = bitcast i8* %115 to i32*
  br label %124

119:                                              ; preds = %104
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %121 = bitcast %union.anon* %120 to i32*
  %122 = sext i32 %108 to i64
  %123 = shl nsw i64 %122, 2
  br label %124

124:                                              ; preds = %119, %112
  %125 = phi i64 [ %114, %112 ], [ %123, %119 ]
  %126 = phi i32* [ %118, %112 ], [ %121, %119 ]
  %127 = bitcast i32* %126 to i8*
  %128 = bitcast i32* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* align 4 %128, i64 %125, i1 false) #11
  br label %129

129:                                              ; preds = %102, %124
  %130 = call zeroext i1 @_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, %"struct.tflite::ArithmeticParams"* nonnull %8)
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = icmp sgt i32 %132, 5
  br i1 %133, label %134, label %140

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %136 = load i32*, i32** %135, align 8
  %137 = icmp eq i32* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast i32* %136 to i8*
  call void @_ZdaPv(i8* %139) #10
  br label %140

140:                                              ; preds = %129, %134, %138
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #11
  %141 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %142 = load i32, i32* %141, align 8
  %143 = icmp sgt i32 %142, 5
  br i1 %143, label %144, label %150

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %146 = load i32*, i32** %145, align 8
  %147 = icmp eq i32* %146, null
  br i1 %147, label %150, label %148

148:                                              ; preds = %144
  %149 = bitcast i32* %146 to i8*
  call void @_ZdaPv(i8* %149) #10
  br label %150

150:                                              ; preds = %140, %144, %148
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %70) #11
  %151 = load i32, i32* %35, align 8
  switch i32 %151, label %692 [
    i32 9, label %152
    i32 7, label %413
  ]

152:                                              ; preds = %150
  br i1 %130, label %153, label %283

153:                                              ; preds = %152
  %154 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %154) #11
  br i1 %71, label %155, label %157

155:                                              ; preds = %153
  %156 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %156, align 8, !alias.scope !79
  br label %185

157:                                              ; preds = %153
  %158 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %159 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %158, align 8, !noalias !79
  %160 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %159, i64 0, i32 0
  %161 = load i32, i32* %160, align 4, !noalias !79
  %162 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %159, i64 0, i32 1, i64 0
  %163 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %161, i32* %163, align 8, !alias.scope !79
  %164 = icmp sgt i32 %161, 5
  br i1 %164, label %165, label %172

165:                                              ; preds = %157
  %166 = sext i32 %161 to i64
  %167 = shl nsw i64 %166, 2
  %168 = call i8* @_Znam(i64 %167) #10, !noalias !79
  %169 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %170 = bitcast i32** %169 to i8**
  store i8* %168, i8** %170, align 8, !alias.scope !79
  %171 = bitcast i8* %168 to i32*
  br label %177

172:                                              ; preds = %157
  %173 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %174 = bitcast %union.anon* %173 to i32*
  %175 = sext i32 %161 to i64
  %176 = shl nsw i64 %175, 2
  br label %177

177:                                              ; preds = %172, %165
  %178 = phi i64 [ %167, %165 ], [ %176, %172 ]
  %179 = phi i32* [ %171, %165 ], [ %174, %172 ]
  %180 = bitcast i32* %179 to i8*
  %181 = bitcast i32* %162 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %180, i8* align 4 %181, i64 %178, i1 false) #11
  %182 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %183 = bitcast %union.TfLitePtrUnion* %182 to i8**
  %184 = load i8*, i8** %183, align 8
  br label %185

185:                                              ; preds = %155, %177
  %186 = phi i8* [ %184, %177 ], [ null, %155 ]
  %187 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %187) #11
  br i1 %101, label %188, label %190

188:                                              ; preds = %185
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %189, align 8, !alias.scope !82
  br label %218

190:                                              ; preds = %185
  %191 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %192 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %191, align 8, !noalias !82
  %193 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %192, i64 0, i32 0
  %194 = load i32, i32* %193, align 4, !noalias !82
  %195 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %192, i64 0, i32 1, i64 0
  %196 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %194, i32* %196, align 8, !alias.scope !82
  %197 = icmp sgt i32 %194, 5
  br i1 %197, label %198, label %205

198:                                              ; preds = %190
  %199 = sext i32 %194 to i64
  %200 = shl nsw i64 %199, 2
  %201 = call i8* @_Znam(i64 %200) #10, !noalias !82
  %202 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %203 = bitcast i32** %202 to i8**
  store i8* %201, i8** %203, align 8, !alias.scope !82
  %204 = bitcast i8* %201 to i32*
  br label %210

205:                                              ; preds = %190
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %207 = bitcast %union.anon* %206 to i32*
  %208 = sext i32 %194 to i64
  %209 = shl nsw i64 %208, 2
  br label %210

210:                                              ; preds = %205, %198
  %211 = phi i64 [ %200, %198 ], [ %209, %205 ]
  %212 = phi i32* [ %204, %198 ], [ %207, %205 ]
  %213 = bitcast i32* %212 to i8*
  %214 = bitcast i32* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %213, i8* align 4 %214, i64 %211, i1 false) #11
  %215 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %216 = bitcast %union.TfLitePtrUnion* %215 to i8**
  %217 = load i8*, i8** %216, align 8
  br label %218

218:                                              ; preds = %188, %210
  %219 = phi i8* [ %217, %210 ], [ null, %188 ]
  %220 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %220) #11
  %221 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %221, label %222, label %224

222:                                              ; preds = %218
  %223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %223, align 8, !alias.scope !85
  br label %252

224:                                              ; preds = %218
  %225 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %226 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %225, align 8, !noalias !85
  %227 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %226, i64 0, i32 0
  %228 = load i32, i32* %227, align 4, !noalias !85
  %229 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %226, i64 0, i32 1, i64 0
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %228, i32* %230, align 8, !alias.scope !85
  %231 = icmp sgt i32 %228, 5
  br i1 %231, label %232, label %239

232:                                              ; preds = %224
  %233 = sext i32 %228 to i64
  %234 = shl nsw i64 %233, 2
  %235 = call i8* @_Znam(i64 %234) #10, !noalias !85
  %236 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %237 = bitcast i32** %236 to i8**
  store i8* %235, i8** %237, align 8, !alias.scope !85
  %238 = bitcast i8* %235 to i32*
  br label %244

239:                                              ; preds = %224
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %241 = bitcast %union.anon* %240 to i32*
  %242 = sext i32 %228 to i64
  %243 = shl nsw i64 %242, 2
  br label %244

244:                                              ; preds = %239, %232
  %245 = phi i64 [ %234, %232 ], [ %243, %239 ]
  %246 = phi i32* [ %238, %232 ], [ %241, %239 ]
  %247 = bitcast i32* %246 to i8*
  %248 = bitcast i32* %229 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %247, i8* align 4 %248, i64 %245, i1 false) #11
  %249 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %250 = bitcast %union.TfLitePtrUnion* %249 to i8**
  %251 = load i8*, i8** %250, align 8
  br label %252

252:                                              ; preds = %222, %244
  %253 = phi i8* [ %251, %244 ], [ null, %222 ]
  call void @_ZN6tflite21reference_integer_ops18BroadcastMul4DSlowIaEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i8* %186, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %219, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %253)
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %255 = load i32, i32* %254, align 8
  %256 = icmp sgt i32 %255, 5
  br i1 %256, label %257, label %263

257:                                              ; preds = %252
  %258 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %259 = load i32*, i32** %258, align 8
  %260 = icmp eq i32* %259, null
  br i1 %260, label %263, label %261

261:                                              ; preds = %257
  %262 = bitcast i32* %259 to i8*
  call void @_ZdaPv(i8* %262) #10
  br label %263

263:                                              ; preds = %252, %257, %261
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %220) #11
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %265 = load i32, i32* %264, align 8
  %266 = icmp sgt i32 %265, 5
  br i1 %266, label %267, label %273

267:                                              ; preds = %263
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %269 = load i32*, i32** %268, align 8
  %270 = icmp eq i32* %269, null
  br i1 %270, label %273, label %271

271:                                              ; preds = %267
  %272 = bitcast i32* %269 to i8*
  call void @_ZdaPv(i8* %272) #10
  br label %273

273:                                              ; preds = %263, %267, %271
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %187) #11
  %274 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %275 = load i32, i32* %274, align 8
  %276 = icmp sgt i32 %275, 5
  br i1 %276, label %277, label %1127

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %279 = load i32*, i32** %278, align 8
  %280 = icmp eq i32* %279, null
  br i1 %280, label %1127, label %281

281:                                              ; preds = %277
  %282 = bitcast i32* %279 to i8*
  call void @_ZdaPv(i8* %282) #10
  br label %1127

283:                                              ; preds = %152
  %284 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %284) #11
  br i1 %71, label %285, label %287

285:                                              ; preds = %283
  %286 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %286, align 8, !alias.scope !88
  br label %315

287:                                              ; preds = %283
  %288 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %289 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %288, align 8, !noalias !88
  %290 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %289, i64 0, i32 0
  %291 = load i32, i32* %290, align 4, !noalias !88
  %292 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %289, i64 0, i32 1, i64 0
  %293 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %291, i32* %293, align 8, !alias.scope !88
  %294 = icmp sgt i32 %291, 5
  br i1 %294, label %295, label %302

295:                                              ; preds = %287
  %296 = sext i32 %291 to i64
  %297 = shl nsw i64 %296, 2
  %298 = call i8* @_Znam(i64 %297) #10, !noalias !88
  %299 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %300 = bitcast i32** %299 to i8**
  store i8* %298, i8** %300, align 8, !alias.scope !88
  %301 = bitcast i8* %298 to i32*
  br label %307

302:                                              ; preds = %287
  %303 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %304 = bitcast %union.anon* %303 to i32*
  %305 = sext i32 %291 to i64
  %306 = shl nsw i64 %305, 2
  br label %307

307:                                              ; preds = %302, %295
  %308 = phi i64 [ %297, %295 ], [ %306, %302 ]
  %309 = phi i32* [ %301, %295 ], [ %304, %302 ]
  %310 = bitcast i32* %309 to i8*
  %311 = bitcast i32* %292 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %310, i8* align 4 %311, i64 %308, i1 false) #11
  %312 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %313 = bitcast %union.TfLitePtrUnion* %312 to i8**
  %314 = load i8*, i8** %313, align 8
  br label %315

315:                                              ; preds = %285, %307
  %316 = phi i8* [ %314, %307 ], [ null, %285 ]
  %317 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %317) #11
  br i1 %101, label %318, label %320

318:                                              ; preds = %315
  %319 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %319, align 8, !alias.scope !91
  br label %348

320:                                              ; preds = %315
  %321 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %322 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %321, align 8, !noalias !91
  %323 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %322, i64 0, i32 0
  %324 = load i32, i32* %323, align 4, !noalias !91
  %325 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %322, i64 0, i32 1, i64 0
  %326 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %324, i32* %326, align 8, !alias.scope !91
  %327 = icmp sgt i32 %324, 5
  br i1 %327, label %328, label %335

328:                                              ; preds = %320
  %329 = sext i32 %324 to i64
  %330 = shl nsw i64 %329, 2
  %331 = call i8* @_Znam(i64 %330) #10, !noalias !91
  %332 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %333 = bitcast i32** %332 to i8**
  store i8* %331, i8** %333, align 8, !alias.scope !91
  %334 = bitcast i8* %331 to i32*
  br label %340

335:                                              ; preds = %320
  %336 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %337 = bitcast %union.anon* %336 to i32*
  %338 = sext i32 %324 to i64
  %339 = shl nsw i64 %338, 2
  br label %340

340:                                              ; preds = %335, %328
  %341 = phi i64 [ %330, %328 ], [ %339, %335 ]
  %342 = phi i32* [ %334, %328 ], [ %337, %335 ]
  %343 = bitcast i32* %342 to i8*
  %344 = bitcast i32* %325 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %343, i8* align 4 %344, i64 %341, i1 false) #11
  %345 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %346 = bitcast %union.TfLitePtrUnion* %345 to i8**
  %347 = load i8*, i8** %346, align 8
  br label %348

348:                                              ; preds = %318, %340
  %349 = phi i8* [ %347, %340 ], [ null, %318 ]
  %350 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %350) #11
  %351 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %351, label %352, label %354

352:                                              ; preds = %348
  %353 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %353, align 8, !alias.scope !94
  br label %382

354:                                              ; preds = %348
  %355 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %356 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %355, align 8, !noalias !94
  %357 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %356, i64 0, i32 0
  %358 = load i32, i32* %357, align 4, !noalias !94
  %359 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %356, i64 0, i32 1, i64 0
  %360 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %358, i32* %360, align 8, !alias.scope !94
  %361 = icmp sgt i32 %358, 5
  br i1 %361, label %362, label %369

362:                                              ; preds = %354
  %363 = sext i32 %358 to i64
  %364 = shl nsw i64 %363, 2
  %365 = call i8* @_Znam(i64 %364) #10, !noalias !94
  %366 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %367 = bitcast i32** %366 to i8**
  store i8* %365, i8** %367, align 8, !alias.scope !94
  %368 = bitcast i8* %365 to i32*
  br label %374

369:                                              ; preds = %354
  %370 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %371 = bitcast %union.anon* %370 to i32*
  %372 = sext i32 %358 to i64
  %373 = shl nsw i64 %372, 2
  br label %374

374:                                              ; preds = %369, %362
  %375 = phi i64 [ %364, %362 ], [ %373, %369 ]
  %376 = phi i32* [ %368, %362 ], [ %371, %369 ]
  %377 = bitcast i32* %376 to i8*
  %378 = bitcast i32* %359 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %377, i8* align 4 %378, i64 %375, i1 false) #11
  %379 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %380 = bitcast %union.TfLitePtrUnion* %379 to i8**
  %381 = load i8*, i8** %380, align 8
  br label %382

382:                                              ; preds = %352, %374
  %383 = phi i8* [ %381, %374 ], [ null, %352 ]
  call void @_ZN6tflite21reference_integer_ops3MulIaEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i8* %316, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, i8* %349, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, i8* %383)
  %384 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %385 = load i32, i32* %384, align 8
  %386 = icmp sgt i32 %385, 5
  br i1 %386, label %387, label %393

387:                                              ; preds = %382
  %388 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %389 = load i32*, i32** %388, align 8
  %390 = icmp eq i32* %389, null
  br i1 %390, label %393, label %391

391:                                              ; preds = %387
  %392 = bitcast i32* %389 to i8*
  call void @_ZdaPv(i8* %392) #10
  br label %393

393:                                              ; preds = %382, %387, %391
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %350) #11
  %394 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %395 = load i32, i32* %394, align 8
  %396 = icmp sgt i32 %395, 5
  br i1 %396, label %397, label %403

397:                                              ; preds = %393
  %398 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %399 = load i32*, i32** %398, align 8
  %400 = icmp eq i32* %399, null
  br i1 %400, label %403, label %401

401:                                              ; preds = %397
  %402 = bitcast i32* %399 to i8*
  call void @_ZdaPv(i8* %402) #10
  br label %403

403:                                              ; preds = %393, %397, %401
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %317) #11
  %404 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %405 = load i32, i32* %404, align 8
  %406 = icmp sgt i32 %405, 5
  br i1 %406, label %407, label %1127

407:                                              ; preds = %403
  %408 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %409 = load i32*, i32** %408, align 8
  %410 = icmp eq i32* %409, null
  br i1 %410, label %1127, label %411

411:                                              ; preds = %407
  %412 = bitcast i32* %409 to i8*
  call void @_ZdaPv(i8* %412) #10
  br label %1127

413:                                              ; preds = %150
  %414 = load i32, i32* %56, align 4
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %419, label %416

416:                                              ; preds = %413
  %417 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %418 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %417, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %418(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 202, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i32 %414, double 0.000000e+00) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %46) #11
  br label %2303

419:                                              ; preds = %413
  %420 = load i32, i32* %60, align 4
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %425, label %422

422:                                              ; preds = %419
  %423 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %424 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %423, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %424(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 203, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i32 %420, double 0.000000e+00) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %46) #11
  br label %2303

425:                                              ; preds = %419
  %426 = load i32, i32* %63, align 4
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %431, label %428

428:                                              ; preds = %425
  %429 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %430 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %429, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %430(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 204, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i32 %426, double 0.000000e+00) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %46) #11
  br label %2303

431:                                              ; preds = %425
  br i1 %130, label %432, label %562

432:                                              ; preds = %431
  %433 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %433) #11
  br i1 %71, label %434, label %436

434:                                              ; preds = %432
  %435 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %435, align 8, !alias.scope !97
  br label %464

436:                                              ; preds = %432
  %437 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %438 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %437, align 8, !noalias !97
  %439 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %438, i64 0, i32 0
  %440 = load i32, i32* %439, align 4, !noalias !97
  %441 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %438, i64 0, i32 1, i64 0
  %442 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %440, i32* %442, align 8, !alias.scope !97
  %443 = icmp sgt i32 %440, 5
  br i1 %443, label %444, label %451

444:                                              ; preds = %436
  %445 = sext i32 %440 to i64
  %446 = shl nsw i64 %445, 2
  %447 = call i8* @_Znam(i64 %446) #10, !noalias !97
  %448 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %449 = bitcast i32** %448 to i8**
  store i8* %447, i8** %449, align 8, !alias.scope !97
  %450 = bitcast i8* %447 to i32*
  br label %456

451:                                              ; preds = %436
  %452 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %453 = bitcast %union.anon* %452 to i32*
  %454 = sext i32 %440 to i64
  %455 = shl nsw i64 %454, 2
  br label %456

456:                                              ; preds = %451, %444
  %457 = phi i64 [ %446, %444 ], [ %455, %451 ]
  %458 = phi i32* [ %450, %444 ], [ %453, %451 ]
  %459 = bitcast i32* %458 to i8*
  %460 = bitcast i32* %441 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %459, i8* align 4 %460, i64 %457, i1 false) #11
  %461 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %462 = bitcast %union.TfLitePtrUnion* %461 to i16**
  %463 = load i16*, i16** %462, align 8
  br label %464

464:                                              ; preds = %434, %456
  %465 = phi i16* [ %463, %456 ], [ null, %434 ]
  %466 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %466) #11
  br i1 %101, label %467, label %469

467:                                              ; preds = %464
  %468 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %468, align 8, !alias.scope !100
  br label %497

469:                                              ; preds = %464
  %470 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %471 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %470, align 8, !noalias !100
  %472 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %471, i64 0, i32 0
  %473 = load i32, i32* %472, align 4, !noalias !100
  %474 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %471, i64 0, i32 1, i64 0
  %475 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %473, i32* %475, align 8, !alias.scope !100
  %476 = icmp sgt i32 %473, 5
  br i1 %476, label %477, label %484

477:                                              ; preds = %469
  %478 = sext i32 %473 to i64
  %479 = shl nsw i64 %478, 2
  %480 = call i8* @_Znam(i64 %479) #10, !noalias !100
  %481 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %482 = bitcast i32** %481 to i8**
  store i8* %480, i8** %482, align 8, !alias.scope !100
  %483 = bitcast i8* %480 to i32*
  br label %489

484:                                              ; preds = %469
  %485 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %486 = bitcast %union.anon* %485 to i32*
  %487 = sext i32 %473 to i64
  %488 = shl nsw i64 %487, 2
  br label %489

489:                                              ; preds = %484, %477
  %490 = phi i64 [ %479, %477 ], [ %488, %484 ]
  %491 = phi i32* [ %483, %477 ], [ %486, %484 ]
  %492 = bitcast i32* %491 to i8*
  %493 = bitcast i32* %474 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %492, i8* align 4 %493, i64 %490, i1 false) #11
  %494 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %495 = bitcast %union.TfLitePtrUnion* %494 to i16**
  %496 = load i16*, i16** %495, align 8
  br label %497

497:                                              ; preds = %467, %489
  %498 = phi i16* [ %496, %489 ], [ null, %467 ]
  %499 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %499) #11
  %500 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %500, label %501, label %503

501:                                              ; preds = %497
  %502 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %502, align 8, !alias.scope !103
  br label %531

503:                                              ; preds = %497
  %504 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %505 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %504, align 8, !noalias !103
  %506 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %505, i64 0, i32 0
  %507 = load i32, i32* %506, align 4, !noalias !103
  %508 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %505, i64 0, i32 1, i64 0
  %509 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %507, i32* %509, align 8, !alias.scope !103
  %510 = icmp sgt i32 %507, 5
  br i1 %510, label %511, label %518

511:                                              ; preds = %503
  %512 = sext i32 %507 to i64
  %513 = shl nsw i64 %512, 2
  %514 = call i8* @_Znam(i64 %513) #10, !noalias !103
  %515 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %516 = bitcast i32** %515 to i8**
  store i8* %514, i8** %516, align 8, !alias.scope !103
  %517 = bitcast i8* %514 to i32*
  br label %523

518:                                              ; preds = %503
  %519 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %520 = bitcast %union.anon* %519 to i32*
  %521 = sext i32 %507 to i64
  %522 = shl nsw i64 %521, 2
  br label %523

523:                                              ; preds = %518, %511
  %524 = phi i64 [ %513, %511 ], [ %522, %518 ]
  %525 = phi i32* [ %517, %511 ], [ %520, %518 ]
  %526 = bitcast i32* %525 to i8*
  %527 = bitcast i32* %508 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %526, i8* align 4 %527, i64 %524, i1 false) #11
  %528 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %529 = bitcast %union.TfLitePtrUnion* %528 to i16**
  %530 = load i16*, i16** %529, align 8
  br label %531

531:                                              ; preds = %501, %523
  %532 = phi i16* [ %530, %523 ], [ null, %501 ]
  call void @_ZN6tflite21reference_integer_ops18BroadcastMul4DSlowIsEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, i16* %465, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %18, i16* %498, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %19, i16* %532)
  %533 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  %534 = load i32, i32* %533, align 8
  %535 = icmp sgt i32 %534, 5
  br i1 %535, label %536, label %542

536:                                              ; preds = %531
  %537 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %538 = load i32*, i32** %537, align 8
  %539 = icmp eq i32* %538, null
  br i1 %539, label %542, label %540

540:                                              ; preds = %536
  %541 = bitcast i32* %538 to i8*
  call void @_ZdaPv(i8* %541) #10
  br label %542

542:                                              ; preds = %531, %536, %540
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %499) #11
  %543 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  %544 = load i32, i32* %543, align 8
  %545 = icmp sgt i32 %544, 5
  br i1 %545, label %546, label %552

546:                                              ; preds = %542
  %547 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %548 = load i32*, i32** %547, align 8
  %549 = icmp eq i32* %548, null
  br i1 %549, label %552, label %550

550:                                              ; preds = %546
  %551 = bitcast i32* %548 to i8*
  call void @_ZdaPv(i8* %551) #10
  br label %552

552:                                              ; preds = %542, %546, %550
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %466) #11
  %553 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %554 = load i32, i32* %553, align 8
  %555 = icmp sgt i32 %554, 5
  br i1 %555, label %556, label %1127

556:                                              ; preds = %552
  %557 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %558 = load i32*, i32** %557, align 8
  %559 = icmp eq i32* %558, null
  br i1 %559, label %1127, label %560

560:                                              ; preds = %556
  %561 = bitcast i32* %558 to i8*
  call void @_ZdaPv(i8* %561) #10
  br label %1127

562:                                              ; preds = %431
  %563 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %563) #11
  br i1 %71, label %564, label %566

564:                                              ; preds = %562
  %565 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %565, align 8, !alias.scope !106
  br label %594

566:                                              ; preds = %562
  %567 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %568 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %567, align 8, !noalias !106
  %569 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %568, i64 0, i32 0
  %570 = load i32, i32* %569, align 4, !noalias !106
  %571 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %568, i64 0, i32 1, i64 0
  %572 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %570, i32* %572, align 8, !alias.scope !106
  %573 = icmp sgt i32 %570, 5
  br i1 %573, label %574, label %581

574:                                              ; preds = %566
  %575 = sext i32 %570 to i64
  %576 = shl nsw i64 %575, 2
  %577 = call i8* @_Znam(i64 %576) #10, !noalias !106
  %578 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %579 = bitcast i32** %578 to i8**
  store i8* %577, i8** %579, align 8, !alias.scope !106
  %580 = bitcast i8* %577 to i32*
  br label %586

581:                                              ; preds = %566
  %582 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %583 = bitcast %union.anon* %582 to i32*
  %584 = sext i32 %570 to i64
  %585 = shl nsw i64 %584, 2
  br label %586

586:                                              ; preds = %581, %574
  %587 = phi i64 [ %576, %574 ], [ %585, %581 ]
  %588 = phi i32* [ %580, %574 ], [ %583, %581 ]
  %589 = bitcast i32* %588 to i8*
  %590 = bitcast i32* %571 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %589, i8* align 4 %590, i64 %587, i1 false) #11
  %591 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %592 = bitcast %union.TfLitePtrUnion* %591 to i16**
  %593 = load i16*, i16** %592, align 8
  br label %594

594:                                              ; preds = %564, %586
  %595 = phi i16* [ %593, %586 ], [ null, %564 ]
  %596 = bitcast %"class.tflite::RuntimeShape"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %596) #11
  br i1 %101, label %597, label %599

597:                                              ; preds = %594
  %598 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 0, i32* %598, align 8, !alias.scope !109
  br label %627

599:                                              ; preds = %594
  %600 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %601 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %600, align 8, !noalias !109
  %602 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %601, i64 0, i32 0
  %603 = load i32, i32* %602, align 4, !noalias !109
  %604 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %601, i64 0, i32 1, i64 0
  %605 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 %603, i32* %605, align 8, !alias.scope !109
  %606 = icmp sgt i32 %603, 5
  br i1 %606, label %607, label %614

607:                                              ; preds = %599
  %608 = sext i32 %603 to i64
  %609 = shl nsw i64 %608, 2
  %610 = call i8* @_Znam(i64 %609) #10, !noalias !109
  %611 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %612 = bitcast i32** %611 to i8**
  store i8* %610, i8** %612, align 8, !alias.scope !109
  %613 = bitcast i8* %610 to i32*
  br label %619

614:                                              ; preds = %599
  %615 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  %616 = bitcast %union.anon* %615 to i32*
  %617 = sext i32 %603 to i64
  %618 = shl nsw i64 %617, 2
  br label %619

619:                                              ; preds = %614, %607
  %620 = phi i64 [ %609, %607 ], [ %618, %614 ]
  %621 = phi i32* [ %613, %607 ], [ %616, %614 ]
  %622 = bitcast i32* %621 to i8*
  %623 = bitcast i32* %604 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %622, i8* align 4 %623, i64 %620, i1 false) #11
  %624 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %625 = bitcast %union.TfLitePtrUnion* %624 to i16**
  %626 = load i16*, i16** %625, align 8
  br label %627

627:                                              ; preds = %597, %619
  %628 = phi i16* [ %626, %619 ], [ null, %597 ]
  %629 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %629) #11
  %630 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %630, label %631, label %633

631:                                              ; preds = %627
  %632 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %632, align 8, !alias.scope !112
  br label %661

633:                                              ; preds = %627
  %634 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %635 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %634, align 8, !noalias !112
  %636 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %635, i64 0, i32 0
  %637 = load i32, i32* %636, align 4, !noalias !112
  %638 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %635, i64 0, i32 1, i64 0
  %639 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %637, i32* %639, align 8, !alias.scope !112
  %640 = icmp sgt i32 %637, 5
  br i1 %640, label %641, label %648

641:                                              ; preds = %633
  %642 = sext i32 %637 to i64
  %643 = shl nsw i64 %642, 2
  %644 = call i8* @_Znam(i64 %643) #10, !noalias !112
  %645 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %646 = bitcast i32** %645 to i8**
  store i8* %644, i8** %646, align 8, !alias.scope !112
  %647 = bitcast i8* %644 to i32*
  br label %653

648:                                              ; preds = %633
  %649 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %650 = bitcast %union.anon* %649 to i32*
  %651 = sext i32 %637 to i64
  %652 = shl nsw i64 %651, 2
  br label %653

653:                                              ; preds = %648, %641
  %654 = phi i64 [ %643, %641 ], [ %652, %648 ]
  %655 = phi i32* [ %647, %641 ], [ %650, %648 ]
  %656 = bitcast i32* %655 to i8*
  %657 = bitcast i32* %638 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %656, i8* align 4 %657, i64 %654, i1 false) #11
  %658 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %659 = bitcast %union.TfLitePtrUnion* %658 to i16**
  %660 = load i16*, i16** %659, align 8
  br label %661

661:                                              ; preds = %631, %653
  %662 = phi i16* [ %660, %653 ], [ null, %631 ]
  call void @_ZN6tflite21reference_integer_ops3MulIsEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %20, i16* %595, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %21, i16* %628, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %22, i16* %662)
  %663 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  %664 = load i32, i32* %663, align 8
  %665 = icmp sgt i32 %664, 5
  br i1 %665, label %666, label %672

666:                                              ; preds = %661
  %667 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %668 = load i32*, i32** %667, align 8
  %669 = icmp eq i32* %668, null
  br i1 %669, label %672, label %670

670:                                              ; preds = %666
  %671 = bitcast i32* %668 to i8*
  call void @_ZdaPv(i8* %671) #10
  br label %672

672:                                              ; preds = %661, %666, %670
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %629) #11
  %673 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  %674 = load i32, i32* %673, align 8
  %675 = icmp sgt i32 %674, 5
  br i1 %675, label %676, label %682

676:                                              ; preds = %672
  %677 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %678 = load i32*, i32** %677, align 8
  %679 = icmp eq i32* %678, null
  br i1 %679, label %682, label %680

680:                                              ; preds = %676
  %681 = bitcast i32* %678 to i8*
  call void @_ZdaPv(i8* %681) #10
  br label %682

682:                                              ; preds = %672, %676, %680
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %596) #11
  %683 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  %684 = load i32, i32* %683, align 8
  %685 = icmp sgt i32 %684, 5
  br i1 %685, label %686, label %1127

686:                                              ; preds = %682
  %687 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %688 = load i32*, i32** %687, align 8
  %689 = icmp eq i32* %688, null
  br i1 %689, label %1127, label %690

690:                                              ; preds = %686
  %691 = bitcast i32* %688 to i8*
  call void @_ZdaPv(i8* %691) #10
  br label %1127

692:                                              ; preds = %150
  br i1 %130, label %693, label %823

693:                                              ; preds = %692
  %694 = bitcast %"class.tflite::RuntimeShape"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %694) #11
  br i1 %71, label %695, label %697

695:                                              ; preds = %693
  %696 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 0, i32* %696, align 8, !alias.scope !115
  br label %725

697:                                              ; preds = %693
  %698 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %699 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %698, align 8, !noalias !115
  %700 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %699, i64 0, i32 0
  %701 = load i32, i32* %700, align 4, !noalias !115
  %702 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %699, i64 0, i32 1, i64 0
  %703 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 %701, i32* %703, align 8, !alias.scope !115
  %704 = icmp sgt i32 %701, 5
  br i1 %704, label %705, label %712

705:                                              ; preds = %697
  %706 = sext i32 %701 to i64
  %707 = shl nsw i64 %706, 2
  %708 = call i8* @_Znam(i64 %707) #10, !noalias !115
  %709 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %710 = bitcast i32** %709 to i8**
  store i8* %708, i8** %710, align 8, !alias.scope !115
  %711 = bitcast i8* %708 to i32*
  br label %717

712:                                              ; preds = %697
  %713 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  %714 = bitcast %union.anon* %713 to i32*
  %715 = sext i32 %701 to i64
  %716 = shl nsw i64 %715, 2
  br label %717

717:                                              ; preds = %712, %705
  %718 = phi i64 [ %707, %705 ], [ %716, %712 ]
  %719 = phi i32* [ %711, %705 ], [ %714, %712 ]
  %720 = bitcast i32* %719 to i8*
  %721 = bitcast i32* %702 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %720, i8* align 4 %721, i64 %718, i1 false) #11
  %722 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %723 = bitcast %union.TfLitePtrUnion* %722 to i8**
  %724 = load i8*, i8** %723, align 8
  br label %725

725:                                              ; preds = %695, %717
  %726 = phi i8* [ %724, %717 ], [ null, %695 ]
  %727 = bitcast %"class.tflite::RuntimeShape"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %727) #11
  br i1 %101, label %728, label %730

728:                                              ; preds = %725
  %729 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 0, i32* %729, align 8, !alias.scope !118
  br label %758

730:                                              ; preds = %725
  %731 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %732 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %731, align 8, !noalias !118
  %733 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %732, i64 0, i32 0
  %734 = load i32, i32* %733, align 4, !noalias !118
  %735 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %732, i64 0, i32 1, i64 0
  %736 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 %734, i32* %736, align 8, !alias.scope !118
  %737 = icmp sgt i32 %734, 5
  br i1 %737, label %738, label %745

738:                                              ; preds = %730
  %739 = sext i32 %734 to i64
  %740 = shl nsw i64 %739, 2
  %741 = call i8* @_Znam(i64 %740) #10, !noalias !118
  %742 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %743 = bitcast i32** %742 to i8**
  store i8* %741, i8** %743, align 8, !alias.scope !118
  %744 = bitcast i8* %741 to i32*
  br label %750

745:                                              ; preds = %730
  %746 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1
  %747 = bitcast %union.anon* %746 to i32*
  %748 = sext i32 %734 to i64
  %749 = shl nsw i64 %748, 2
  br label %750

750:                                              ; preds = %745, %738
  %751 = phi i64 [ %740, %738 ], [ %749, %745 ]
  %752 = phi i32* [ %744, %738 ], [ %747, %745 ]
  %753 = bitcast i32* %752 to i8*
  %754 = bitcast i32* %735 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %753, i8* align 4 %754, i64 %751, i1 false) #11
  %755 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %756 = bitcast %union.TfLitePtrUnion* %755 to i8**
  %757 = load i8*, i8** %756, align 8
  br label %758

758:                                              ; preds = %728, %750
  %759 = phi i8* [ %757, %750 ], [ null, %728 ]
  %760 = bitcast %"class.tflite::RuntimeShape"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %760) #11
  %761 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %761, label %762, label %764

762:                                              ; preds = %758
  %763 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 0, i32* %763, align 8, !alias.scope !121
  br label %792

764:                                              ; preds = %758
  %765 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %766 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %765, align 8, !noalias !121
  %767 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %766, i64 0, i32 0
  %768 = load i32, i32* %767, align 4, !noalias !121
  %769 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %766, i64 0, i32 1, i64 0
  %770 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 %768, i32* %770, align 8, !alias.scope !121
  %771 = icmp sgt i32 %768, 5
  br i1 %771, label %772, label %779

772:                                              ; preds = %764
  %773 = sext i32 %768 to i64
  %774 = shl nsw i64 %773, 2
  %775 = call i8* @_Znam(i64 %774) #10, !noalias !121
  %776 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %777 = bitcast i32** %776 to i8**
  store i8* %775, i8** %777, align 8, !alias.scope !121
  %778 = bitcast i8* %775 to i32*
  br label %784

779:                                              ; preds = %764
  %780 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %781 = bitcast %union.anon* %780 to i32*
  %782 = sext i32 %768 to i64
  %783 = shl nsw i64 %782, 2
  br label %784

784:                                              ; preds = %779, %772
  %785 = phi i64 [ %774, %772 ], [ %783, %779 ]
  %786 = phi i32* [ %778, %772 ], [ %781, %779 ]
  %787 = bitcast i32* %786 to i8*
  %788 = bitcast i32* %769 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %787, i8* align 4 %788, i64 %785, i1 false) #11
  %789 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %790 = bitcast %union.TfLitePtrUnion* %789 to i8**
  %791 = load i8*, i8** %790, align 8
  br label %792

792:                                              ; preds = %762, %784
  %793 = phi i8* [ %791, %784 ], [ null, %762 ]
  call void @_ZN6tflite13reference_ops18BroadcastMul4DSlowERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS6_S8_S6_Ph(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %23, i8* %726, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %24, i8* %759, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %25, i8* %793)
  %794 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  %795 = load i32, i32* %794, align 8
  %796 = icmp sgt i32 %795, 5
  br i1 %796, label %797, label %803

797:                                              ; preds = %792
  %798 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %799 = load i32*, i32** %798, align 8
  %800 = icmp eq i32* %799, null
  br i1 %800, label %803, label %801

801:                                              ; preds = %797
  %802 = bitcast i32* %799 to i8*
  call void @_ZdaPv(i8* %802) #10
  br label %803

803:                                              ; preds = %792, %797, %801
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %760) #11
  %804 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  %805 = load i32, i32* %804, align 8
  %806 = icmp sgt i32 %805, 5
  br i1 %806, label %807, label %813

807:                                              ; preds = %803
  %808 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %809 = load i32*, i32** %808, align 8
  %810 = icmp eq i32* %809, null
  br i1 %810, label %813, label %811

811:                                              ; preds = %807
  %812 = bitcast i32* %809 to i8*
  call void @_ZdaPv(i8* %812) #10
  br label %813

813:                                              ; preds = %803, %807, %811
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %727) #11
  %814 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  %815 = load i32, i32* %814, align 8
  %816 = icmp sgt i32 %815, 5
  br i1 %816, label %817, label %1127

817:                                              ; preds = %813
  %818 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %819 = load i32*, i32** %818, align 8
  %820 = icmp eq i32* %819, null
  br i1 %820, label %1127, label %821

821:                                              ; preds = %817
  %822 = bitcast i32* %819 to i8*
  call void @_ZdaPv(i8* %822) #10
  br label %1127

823:                                              ; preds = %692
  %824 = bitcast %"class.tflite::RuntimeShape"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %824) #11
  br i1 %71, label %825, label %827

825:                                              ; preds = %823
  %826 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 0, i32* %826, align 8, !alias.scope !124
  br label %855

827:                                              ; preds = %823
  %828 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %829 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %828, align 8, !noalias !124
  %830 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %829, i64 0, i32 0
  %831 = load i32, i32* %830, align 4, !noalias !124
  %832 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %829, i64 0, i32 1, i64 0
  %833 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 %831, i32* %833, align 8, !alias.scope !124
  %834 = icmp sgt i32 %831, 5
  br i1 %834, label %835, label %842

835:                                              ; preds = %827
  %836 = sext i32 %831 to i64
  %837 = shl nsw i64 %836, 2
  %838 = call i8* @_Znam(i64 %837) #10, !noalias !124
  %839 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %840 = bitcast i32** %839 to i8**
  store i8* %838, i8** %840, align 8, !alias.scope !124
  %841 = bitcast i8* %838 to i32*
  br label %847

842:                                              ; preds = %827
  %843 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1
  %844 = bitcast %union.anon* %843 to i32*
  %845 = sext i32 %831 to i64
  %846 = shl nsw i64 %845, 2
  br label %847

847:                                              ; preds = %842, %835
  %848 = phi i64 [ %837, %835 ], [ %846, %842 ]
  %849 = phi i32* [ %841, %835 ], [ %844, %842 ]
  %850 = bitcast i32* %849 to i8*
  %851 = bitcast i32* %832 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %850, i8* align 4 %851, i64 %848, i1 false) #11
  %852 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %853 = bitcast %union.TfLitePtrUnion* %852 to i8**
  %854 = load i8*, i8** %853, align 8
  br label %855

855:                                              ; preds = %825, %847
  %856 = phi i32 [ %831, %847 ], [ 0, %825 ]
  %857 = phi i8* [ %854, %847 ], [ null, %825 ]
  %858 = bitcast %"class.tflite::RuntimeShape"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %858) #11
  br i1 %101, label %859, label %861

859:                                              ; preds = %855
  %860 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 0, i32* %860, align 8, !alias.scope !127
  br label %889

861:                                              ; preds = %855
  %862 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %863 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %862, align 8, !noalias !127
  %864 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %863, i64 0, i32 0
  %865 = load i32, i32* %864, align 4, !noalias !127
  %866 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %863, i64 0, i32 1, i64 0
  %867 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 %865, i32* %867, align 8, !alias.scope !127
  %868 = icmp sgt i32 %865, 5
  br i1 %868, label %869, label %876

869:                                              ; preds = %861
  %870 = sext i32 %865 to i64
  %871 = shl nsw i64 %870, 2
  %872 = call i8* @_Znam(i64 %871) #10, !noalias !127
  %873 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %874 = bitcast i32** %873 to i8**
  store i8* %872, i8** %874, align 8, !alias.scope !127
  %875 = bitcast i8* %872 to i32*
  br label %881

876:                                              ; preds = %861
  %877 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1
  %878 = bitcast %union.anon* %877 to i32*
  %879 = sext i32 %865 to i64
  %880 = shl nsw i64 %879, 2
  br label %881

881:                                              ; preds = %876, %869
  %882 = phi i64 [ %871, %869 ], [ %880, %876 ]
  %883 = phi i32* [ %875, %869 ], [ %878, %876 ]
  %884 = bitcast i32* %883 to i8*
  %885 = bitcast i32* %866 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %884, i8* align 4 %885, i64 %882, i1 false) #11
  %886 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %887 = bitcast %union.TfLitePtrUnion* %886 to i8**
  %888 = load i8*, i8** %887, align 8
  br label %889

889:                                              ; preds = %859, %881
  %890 = phi i32 [ %865, %881 ], [ 0, %859 ]
  %891 = phi i8* [ %888, %881 ], [ null, %859 ]
  %892 = bitcast %"class.tflite::RuntimeShape"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %892) #11
  %893 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %893, label %894, label %896

894:                                              ; preds = %889
  %895 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 0, i32* %895, align 8, !alias.scope !130
  br label %924

896:                                              ; preds = %889
  %897 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %898 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %897, align 8, !noalias !130
  %899 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %898, i64 0, i32 0
  %900 = load i32, i32* %899, align 4, !noalias !130
  %901 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %898, i64 0, i32 1, i64 0
  %902 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 %900, i32* %902, align 8, !alias.scope !130
  %903 = icmp sgt i32 %900, 5
  br i1 %903, label %904, label %911

904:                                              ; preds = %896
  %905 = sext i32 %900 to i64
  %906 = shl nsw i64 %905, 2
  %907 = call i8* @_Znam(i64 %906) #10, !noalias !130
  %908 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %909 = bitcast i32** %908 to i8**
  store i8* %907, i8** %909, align 8, !alias.scope !130
  %910 = bitcast i8* %907 to i32*
  br label %916

911:                                              ; preds = %896
  %912 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1
  %913 = bitcast %union.anon* %912 to i32*
  %914 = sext i32 %900 to i64
  %915 = shl nsw i64 %914, 2
  br label %916

916:                                              ; preds = %911, %904
  %917 = phi i64 [ %906, %904 ], [ %915, %911 ]
  %918 = phi i32* [ %910, %904 ], [ %913, %911 ]
  %919 = bitcast i32* %918 to i8*
  %920 = bitcast i32* %901 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %919, i8* align 4 %920, i64 %917, i1 false) #11
  %921 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %922 = bitcast %union.TfLitePtrUnion* %921 to i8**
  %923 = load i8*, i8** %922, align 8
  br label %924

924:                                              ; preds = %894, %916
  %925 = phi i32 [ %900, %916 ], [ 0, %894 ]
  %926 = phi i8* [ %923, %916 ], [ null, %894 ]
  %927 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1
  %928 = icmp sgt i32 %856, 5
  br i1 %928, label %929, label %932

929:                                              ; preds = %924
  %930 = getelementptr inbounds %union.anon, %union.anon* %927, i64 0, i32 0
  %931 = load i32*, i32** %930, align 8
  br label %935

932:                                              ; preds = %924
  %933 = bitcast %union.anon* %927 to i32*
  %934 = icmp sgt i32 %856, 0
  br i1 %934, label %935, label %1038

935:                                              ; preds = %932, %929
  %936 = phi i32* [ %931, %929 ], [ %933, %932 ]
  %937 = zext i32 %856 to i64
  %938 = icmp ult i32 %856, 8
  br i1 %938, label %1024, label %939

939:                                              ; preds = %935
  %940 = and i64 %937, 4294967288
  %941 = add nsw i64 %940, -8
  %942 = lshr exact i64 %941, 3
  %943 = add nuw nsw i64 %942, 1
  %944 = and i64 %943, 3
  %945 = icmp ult i64 %941, 24
  br i1 %945, label %991, label %946

946:                                              ; preds = %939
  %947 = sub nsw i64 %943, %944
  br label %948

948:                                              ; preds = %948, %946
  %949 = phi i64 [ 0, %946 ], [ %988, %948 ]
  %950 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %946 ], [ %986, %948 ]
  %951 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %946 ], [ %987, %948 ]
  %952 = phi i64 [ %947, %946 ], [ %989, %948 ]
  %953 = getelementptr inbounds i32, i32* %936, i64 %949
  %954 = bitcast i32* %953 to <4 x i32>*
  %955 = load <4 x i32>, <4 x i32>* %954, align 4
  %956 = getelementptr inbounds i32, i32* %953, i64 4
  %957 = bitcast i32* %956 to <4 x i32>*
  %958 = load <4 x i32>, <4 x i32>* %957, align 4
  %959 = mul nsw <4 x i32> %955, %950
  %960 = mul nsw <4 x i32> %958, %951
  %961 = or i64 %949, 8
  %962 = getelementptr inbounds i32, i32* %936, i64 %961
  %963 = bitcast i32* %962 to <4 x i32>*
  %964 = load <4 x i32>, <4 x i32>* %963, align 4
  %965 = getelementptr inbounds i32, i32* %962, i64 4
  %966 = bitcast i32* %965 to <4 x i32>*
  %967 = load <4 x i32>, <4 x i32>* %966, align 4
  %968 = mul nsw <4 x i32> %964, %959
  %969 = mul nsw <4 x i32> %967, %960
  %970 = or i64 %949, 16
  %971 = getelementptr inbounds i32, i32* %936, i64 %970
  %972 = bitcast i32* %971 to <4 x i32>*
  %973 = load <4 x i32>, <4 x i32>* %972, align 4
  %974 = getelementptr inbounds i32, i32* %971, i64 4
  %975 = bitcast i32* %974 to <4 x i32>*
  %976 = load <4 x i32>, <4 x i32>* %975, align 4
  %977 = mul nsw <4 x i32> %973, %968
  %978 = mul nsw <4 x i32> %976, %969
  %979 = or i64 %949, 24
  %980 = getelementptr inbounds i32, i32* %936, i64 %979
  %981 = bitcast i32* %980 to <4 x i32>*
  %982 = load <4 x i32>, <4 x i32>* %981, align 4
  %983 = getelementptr inbounds i32, i32* %980, i64 4
  %984 = bitcast i32* %983 to <4 x i32>*
  %985 = load <4 x i32>, <4 x i32>* %984, align 4
  %986 = mul nsw <4 x i32> %982, %977
  %987 = mul nsw <4 x i32> %985, %978
  %988 = add i64 %949, 32
  %989 = add i64 %952, -4
  %990 = icmp eq i64 %989, 0
  br i1 %990, label %991, label %948, !llvm.loop !133

991:                                              ; preds = %948, %939
  %992 = phi <4 x i32> [ undef, %939 ], [ %986, %948 ]
  %993 = phi <4 x i32> [ undef, %939 ], [ %987, %948 ]
  %994 = phi i64 [ 0, %939 ], [ %988, %948 ]
  %995 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %939 ], [ %986, %948 ]
  %996 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %939 ], [ %987, %948 ]
  %997 = icmp eq i64 %944, 0
  br i1 %997, label %1014, label %998

998:                                              ; preds = %991, %998
  %999 = phi i64 [ %1011, %998 ], [ %994, %991 ]
  %1000 = phi <4 x i32> [ %1009, %998 ], [ %995, %991 ]
  %1001 = phi <4 x i32> [ %1010, %998 ], [ %996, %991 ]
  %1002 = phi i64 [ %1012, %998 ], [ %944, %991 ]
  %1003 = getelementptr inbounds i32, i32* %936, i64 %999
  %1004 = bitcast i32* %1003 to <4 x i32>*
  %1005 = load <4 x i32>, <4 x i32>* %1004, align 4
  %1006 = getelementptr inbounds i32, i32* %1003, i64 4
  %1007 = bitcast i32* %1006 to <4 x i32>*
  %1008 = load <4 x i32>, <4 x i32>* %1007, align 4
  %1009 = mul nsw <4 x i32> %1005, %1000
  %1010 = mul nsw <4 x i32> %1008, %1001
  %1011 = add i64 %999, 8
  %1012 = add i64 %1002, -1
  %1013 = icmp eq i64 %1012, 0
  br i1 %1013, label %1014, label %998, !llvm.loop !134

1014:                                             ; preds = %998, %991
  %1015 = phi <4 x i32> [ %992, %991 ], [ %1009, %998 ]
  %1016 = phi <4 x i32> [ %993, %991 ], [ %1010, %998 ]
  %1017 = mul <4 x i32> %1016, %1015
  %1018 = shufflevector <4 x i32> %1017, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1019 = mul <4 x i32> %1017, %1018
  %1020 = shufflevector <4 x i32> %1019, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1021 = mul <4 x i32> %1019, %1020
  %1022 = extractelement <4 x i32> %1021, i32 0
  %1023 = icmp eq i64 %940, %937
  br i1 %1023, label %1035, label %1024

1024:                                             ; preds = %1014, %935
  %1025 = phi i64 [ 0, %935 ], [ %940, %1014 ]
  %1026 = phi i32 [ 1, %935 ], [ %1022, %1014 ]
  br label %1027

1027:                                             ; preds = %1024, %1027
  %1028 = phi i64 [ %1033, %1027 ], [ %1025, %1024 ]
  %1029 = phi i32 [ %1032, %1027 ], [ %1026, %1024 ]
  %1030 = getelementptr inbounds i32, i32* %936, i64 %1028
  %1031 = load i32, i32* %1030, align 4
  %1032 = mul nsw i32 %1031, %1029
  %1033 = add nuw nsw i64 %1028, 1
  %1034 = icmp eq i64 %1033, %937
  br i1 %1034, label %1035, label %1027, !llvm.loop !135

1035:                                             ; preds = %1027, %1014
  %1036 = phi i32 [ %1022, %1014 ], [ %1032, %1027 ]
  %1037 = icmp sgt i32 %1036, 0
  br i1 %1037, label %1038, label %1104

1038:                                             ; preds = %1035, %932
  %1039 = phi i32 [ %1036, %1035 ], [ 1, %932 ]
  %1040 = zext i32 %1039 to i64
  br label %1041

1041:                                             ; preds = %1079, %1038
  %1042 = phi i64 [ 0, %1038 ], [ %1102, %1079 ]
  %1043 = load i32, i32* %56, align 4
  %1044 = getelementptr inbounds i8, i8* %857, i64 %1042
  %1045 = load i8, i8* %1044, align 1
  %1046 = zext i8 %1045 to i32
  %1047 = add nsw i32 %1043, %1046
  %1048 = load i32, i32* %60, align 4
  %1049 = getelementptr inbounds i8, i8* %891, i64 %1042
  %1050 = load i8, i8* %1049, align 1
  %1051 = zext i8 %1050 to i32
  %1052 = add nsw i32 %1048, %1051
  %1053 = load i32, i32* %63, align 4
  %1054 = mul nsw i32 %1052, %1047
  %1055 = load i32, i32* %66, align 4
  %1056 = load i32, i32* %69, align 4
  %1057 = icmp sgt i32 %1056, 0
  %1058 = sub nsw i32 0, %1056
  %1059 = select i1 %1057, i32 0, i32 %1058
  %1060 = shl i32 1, %1056
  %1061 = select i1 %1057, i32 %1060, i32 1
  %1062 = mul nsw i32 %1054, %1061
  %1063 = icmp eq i32 %1062, %1055
  br i1 %1063, label %1068, label %1064

1064:                                             ; preds = %1041
  %1065 = sext i32 %1062 to i64
  %1066 = sext i32 %1055 to i64
  %1067 = mul nsw i64 %1065, %1066
  br label %1072

1068:                                             ; preds = %1041
  %1069 = icmp eq i32 %1055, -2147483648
  %1070 = sext i32 %1055 to i64
  %1071 = mul nsw i64 %1070, %1070
  br i1 %1069, label %1079, label %1072

1072:                                             ; preds = %1068, %1064
  %1073 = phi i64 [ %1067, %1064 ], [ %1071, %1068 ]
  %1074 = icmp sgt i64 %1073, -1
  %1075 = select i1 %1074, i64 1073741824, i64 -1073741823
  %1076 = add nsw i64 %1075, %1073
  %1077 = sdiv i64 %1076, 2147483648
  %1078 = trunc i64 %1077 to i32
  br label %1079

1079:                                             ; preds = %1072, %1068
  %1080 = phi i32 [ %1078, %1072 ], [ 2147483647, %1068 ]
  %1081 = zext i32 %1059 to i64
  %1082 = shl nsw i64 -1, %1081
  %1083 = trunc i64 %1082 to i32
  %1084 = xor i32 %1083, -1
  %1085 = and i32 %1080, %1084
  %1086 = ashr i32 %1084, 1
  %1087 = lshr i32 %1080, 31
  %1088 = add nsw i32 %1087, %1086
  %1089 = ashr i32 %1080, %1059
  %1090 = icmp sgt i32 %1085, %1088
  %1091 = zext i1 %1090 to i32
  %1092 = add i32 %1089, %1053
  %1093 = add i32 %1092, %1091
  %1094 = load i32, i32* %51, align 4
  %1095 = icmp slt i32 %1094, %1093
  %1096 = select i1 %1095, i32 %1093, i32 %1094
  %1097 = load i32, i32* %52, align 4
  %1098 = icmp slt i32 %1096, %1097
  %1099 = select i1 %1098, i32 %1096, i32 %1097
  %1100 = trunc i32 %1099 to i8
  %1101 = getelementptr inbounds i8, i8* %926, i64 %1042
  store i8 %1100, i8* %1101, align 1
  %1102 = add nuw nsw i64 %1042, 1
  %1103 = icmp eq i64 %1102, %1040
  br i1 %1103, label %1104, label %1041

1104:                                             ; preds = %1079, %1035
  %1105 = icmp sgt i32 %925, 5
  br i1 %1105, label %1106, label %1112

1106:                                             ; preds = %1104
  %1107 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %1108 = load i32*, i32** %1107, align 8
  %1109 = icmp eq i32* %1108, null
  br i1 %1109, label %1112, label %1110

1110:                                             ; preds = %1106
  %1111 = bitcast i32* %1108 to i8*
  call void @_ZdaPv(i8* %1111) #10
  br label %1112

1112:                                             ; preds = %1104, %1106, %1110
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %892) #11
  %1113 = icmp sgt i32 %890, 5
  br i1 %1113, label %1114, label %1120

1114:                                             ; preds = %1112
  %1115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %1116 = load i32*, i32** %1115, align 8
  %1117 = icmp eq i32* %1116, null
  br i1 %1117, label %1120, label %1118

1118:                                             ; preds = %1114
  %1119 = bitcast i32* %1116 to i8*
  call void @_ZdaPv(i8* %1119) #10
  br label %1120

1120:                                             ; preds = %1112, %1114, %1118
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %858) #11
  br i1 %928, label %1121, label %1127

1121:                                             ; preds = %1120
  %1122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1123 = load i32*, i32** %1122, align 8
  %1124 = icmp eq i32* %1123, null
  br i1 %1124, label %1127, label %1125

1125:                                             ; preds = %1121
  %1126 = bitcast i32* %1123 to i8*
  call void @_ZdaPv(i8* %1126) #10
  br label %1127

1127:                                             ; preds = %1125, %1121, %1120, %821, %817, %813, %690, %686, %682, %560, %556, %552, %411, %407, %403, %281, %277, %273
  %1128 = phi i8* [ %154, %273 ], [ %154, %277 ], [ %154, %281 ], [ %284, %403 ], [ %284, %407 ], [ %284, %411 ], [ %433, %552 ], [ %433, %556 ], [ %433, %560 ], [ %563, %682 ], [ %563, %686 ], [ %563, %690 ], [ %694, %813 ], [ %694, %817 ], [ %694, %821 ], [ %824, %1120 ], [ %824, %1121 ], [ %824, %1125 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1128) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %46) #11
  br label %2303

1129:                                             ; preds = %40, %7
  %1130 = icmp eq i32 %36, 7
  %1131 = icmp eq i32 %38, 7
  %1132 = and i1 %1130, %1131
  br i1 %1132, label %1133, label %2300

1133:                                             ; preds = %1129
  %1134 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 0
  %1135 = load i32, i32* %1134, align 8
  switch i32 %1135, label %2300 [
    i32 9, label %1136
    i32 3, label %1718
  ]

1136:                                             ; preds = %1133
  %1137 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 0
  %1138 = load i32, i32* %1137, align 4
  %1139 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 1
  %1140 = load i32, i32* %1139, align 4
  %1141 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 3, i32 1
  %1142 = load i32, i32* %1141, align 4
  %1143 = bitcast %"class.tflite::RuntimeShape"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1143) #11
  %1144 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %1144, label %1145, label %1147

1145:                                             ; preds = %1136
  %1146 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 0, i32* %1146, align 8, !alias.scope !136
  br label %1176

1147:                                             ; preds = %1136
  %1148 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %1149 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1148, align 8, !noalias !136
  %1150 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1149, i64 0, i32 0
  %1151 = load i32, i32* %1150, align 4, !noalias !136
  %1152 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1149, i64 0, i32 1, i64 0
  %1153 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 %1151, i32* %1153, align 8, !alias.scope !136
  %1154 = icmp sgt i32 %1151, 5
  br i1 %1154, label %1155, label %1162

1155:                                             ; preds = %1147
  %1156 = sext i32 %1151 to i64
  %1157 = shl nsw i64 %1156, 2
  %1158 = tail call i8* @_Znam(i64 %1157) #10, !noalias !136
  %1159 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1160 = bitcast i32** %1159 to i8**
  store i8* %1158, i8** %1160, align 8, !alias.scope !136
  %1161 = bitcast i8* %1158 to i32*
  br label %1167

1162:                                             ; preds = %1147
  %1163 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1
  %1164 = bitcast %union.anon* %1163 to i32*
  %1165 = sext i32 %1151 to i64
  %1166 = shl nsw i64 %1165, 2
  br label %1167

1167:                                             ; preds = %1162, %1155
  %1168 = phi i64 [ %1157, %1155 ], [ %1166, %1162 ]
  %1169 = phi i32* [ %1161, %1155 ], [ %1164, %1162 ]
  %1170 = bitcast i32* %1169 to i8*
  %1171 = bitcast i32* %1152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1170, i8* align 4 %1171, i64 %1168, i1 false) #11
  %1172 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %1173 = bitcast %union.TfLitePtrUnion* %1172 to i16**
  %1174 = load i16*, i16** %1173, align 8
  %1175 = bitcast i16* %1174 to i8*
  br label %1176

1176:                                             ; preds = %1145, %1167
  %1177 = phi i32 [ %1151, %1167 ], [ 0, %1145 ]
  %1178 = phi i8* [ %1175, %1167 ], [ null, %1145 ]
  %1179 = phi i16* [ %1174, %1167 ], [ null, %1145 ]
  %1180 = bitcast %"class.tflite::RuntimeShape"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1180) #11
  %1181 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %1181, label %1182, label %1184

1182:                                             ; preds = %1176
  %1183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  store i32 0, i32* %1183, align 8, !alias.scope !139
  br label %1213

1184:                                             ; preds = %1176
  %1185 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %1186 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1185, align 8, !noalias !139
  %1187 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1186, i64 0, i32 0
  %1188 = load i32, i32* %1187, align 4, !noalias !139
  %1189 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1186, i64 0, i32 1, i64 0
  %1190 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  store i32 %1188, i32* %1190, align 8, !alias.scope !139
  %1191 = icmp sgt i32 %1188, 5
  br i1 %1191, label %1192, label %1199

1192:                                             ; preds = %1184
  %1193 = sext i32 %1188 to i64
  %1194 = shl nsw i64 %1193, 2
  %1195 = tail call i8* @_Znam(i64 %1194) #10, !noalias !139
  %1196 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1, i32 0
  %1197 = bitcast i32** %1196 to i8**
  store i8* %1195, i8** %1197, align 8, !alias.scope !139
  %1198 = bitcast i8* %1195 to i32*
  br label %1204

1199:                                             ; preds = %1184
  %1200 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1
  %1201 = bitcast %union.anon* %1200 to i32*
  %1202 = sext i32 %1188 to i64
  %1203 = shl nsw i64 %1202, 2
  br label %1204

1204:                                             ; preds = %1199, %1192
  %1205 = phi i64 [ %1194, %1192 ], [ %1203, %1199 ]
  %1206 = phi i32* [ %1198, %1192 ], [ %1201, %1199 ]
  %1207 = bitcast i32* %1206 to i8*
  %1208 = bitcast i32* %1189 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1207, i8* align 4 %1208, i64 %1205, i1 false) #11
  %1209 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %1210 = bitcast %union.TfLitePtrUnion* %1209 to i16**
  %1211 = load i16*, i16** %1210, align 8
  %1212 = bitcast i16* %1211 to i8*
  br label %1213

1213:                                             ; preds = %1182, %1204
  %1214 = phi i32 [ %1188, %1204 ], [ 0, %1182 ]
  %1215 = phi i8* [ %1212, %1204 ], [ null, %1182 ]
  %1216 = phi i16* [ %1211, %1204 ], [ null, %1182 ]
  %1217 = bitcast %"class.tflite::RuntimeShape"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1217) #11
  %1218 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %1218, label %1219, label %1221

1219:                                             ; preds = %1213
  %1220 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 0, i32* %1220, align 8, !alias.scope !142
  br label %1249

1221:                                             ; preds = %1213
  %1222 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %1223 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1222, align 8, !noalias !142
  %1224 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1223, i64 0, i32 0
  %1225 = load i32, i32* %1224, align 4, !noalias !142
  %1226 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1223, i64 0, i32 1, i64 0
  %1227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 %1225, i32* %1227, align 8, !alias.scope !142
  %1228 = icmp sgt i32 %1225, 5
  br i1 %1228, label %1229, label %1236

1229:                                             ; preds = %1221
  %1230 = sext i32 %1225 to i64
  %1231 = shl nsw i64 %1230, 2
  %1232 = tail call i8* @_Znam(i64 %1231) #10, !noalias !142
  %1233 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %1234 = bitcast i32** %1233 to i8**
  store i8* %1232, i8** %1234, align 8, !alias.scope !142
  %1235 = bitcast i8* %1232 to i32*
  br label %1241

1236:                                             ; preds = %1221
  %1237 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1
  %1238 = bitcast %union.anon* %1237 to i32*
  %1239 = sext i32 %1225 to i64
  %1240 = shl nsw i64 %1239, 2
  br label %1241

1241:                                             ; preds = %1236, %1229
  %1242 = phi i64 [ %1231, %1229 ], [ %1240, %1236 ]
  %1243 = phi i32* [ %1235, %1229 ], [ %1238, %1236 ]
  %1244 = bitcast i32* %1243 to i8*
  %1245 = bitcast i32* %1226 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1244, i8* align 4 %1245, i64 %1242, i1 false) #11
  %1246 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %1247 = bitcast %union.TfLitePtrUnion* %1246 to i8**
  %1248 = load i8*, i8** %1247, align 8
  br label %1249

1249:                                             ; preds = %1219, %1241
  %1250 = phi i32 [ %1225, %1241 ], [ 0, %1219 ]
  %1251 = phi i8* [ %1248, %1241 ], [ null, %1219 ]
  %1252 = icmp sgt i32 %1177, 5
  %1253 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1
  br i1 %1252, label %1254, label %1257

1254:                                             ; preds = %1249
  %1255 = getelementptr inbounds %union.anon, %union.anon* %1253, i64 0, i32 0
  %1256 = load i32*, i32** %1255, align 8
  br label %1260

1257:                                             ; preds = %1249
  %1258 = bitcast %union.anon* %1253 to i32*
  %1259 = icmp sgt i32 %1177, 0
  br i1 %1259, label %1260, label %1360

1260:                                             ; preds = %1257, %1254
  %1261 = phi i32* [ %1256, %1254 ], [ %1258, %1257 ]
  %1262 = zext i32 %1177 to i64
  %1263 = icmp ult i32 %1177, 8
  br i1 %1263, label %1349, label %1264

1264:                                             ; preds = %1260
  %1265 = and i64 %1262, 4294967288
  %1266 = add nsw i64 %1265, -8
  %1267 = lshr exact i64 %1266, 3
  %1268 = add nuw nsw i64 %1267, 1
  %1269 = and i64 %1268, 3
  %1270 = icmp ult i64 %1266, 24
  br i1 %1270, label %1316, label %1271

1271:                                             ; preds = %1264
  %1272 = sub nsw i64 %1268, %1269
  br label %1273

1273:                                             ; preds = %1273, %1271
  %1274 = phi i64 [ 0, %1271 ], [ %1313, %1273 ]
  %1275 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1271 ], [ %1311, %1273 ]
  %1276 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1271 ], [ %1312, %1273 ]
  %1277 = phi i64 [ %1272, %1271 ], [ %1314, %1273 ]
  %1278 = getelementptr inbounds i32, i32* %1261, i64 %1274
  %1279 = bitcast i32* %1278 to <4 x i32>*
  %1280 = load <4 x i32>, <4 x i32>* %1279, align 4
  %1281 = getelementptr inbounds i32, i32* %1278, i64 4
  %1282 = bitcast i32* %1281 to <4 x i32>*
  %1283 = load <4 x i32>, <4 x i32>* %1282, align 4
  %1284 = mul nsw <4 x i32> %1280, %1275
  %1285 = mul nsw <4 x i32> %1283, %1276
  %1286 = or i64 %1274, 8
  %1287 = getelementptr inbounds i32, i32* %1261, i64 %1286
  %1288 = bitcast i32* %1287 to <4 x i32>*
  %1289 = load <4 x i32>, <4 x i32>* %1288, align 4
  %1290 = getelementptr inbounds i32, i32* %1287, i64 4
  %1291 = bitcast i32* %1290 to <4 x i32>*
  %1292 = load <4 x i32>, <4 x i32>* %1291, align 4
  %1293 = mul nsw <4 x i32> %1289, %1284
  %1294 = mul nsw <4 x i32> %1292, %1285
  %1295 = or i64 %1274, 16
  %1296 = getelementptr inbounds i32, i32* %1261, i64 %1295
  %1297 = bitcast i32* %1296 to <4 x i32>*
  %1298 = load <4 x i32>, <4 x i32>* %1297, align 4
  %1299 = getelementptr inbounds i32, i32* %1296, i64 4
  %1300 = bitcast i32* %1299 to <4 x i32>*
  %1301 = load <4 x i32>, <4 x i32>* %1300, align 4
  %1302 = mul nsw <4 x i32> %1298, %1293
  %1303 = mul nsw <4 x i32> %1301, %1294
  %1304 = or i64 %1274, 24
  %1305 = getelementptr inbounds i32, i32* %1261, i64 %1304
  %1306 = bitcast i32* %1305 to <4 x i32>*
  %1307 = load <4 x i32>, <4 x i32>* %1306, align 4
  %1308 = getelementptr inbounds i32, i32* %1305, i64 4
  %1309 = bitcast i32* %1308 to <4 x i32>*
  %1310 = load <4 x i32>, <4 x i32>* %1309, align 4
  %1311 = mul nsw <4 x i32> %1307, %1302
  %1312 = mul nsw <4 x i32> %1310, %1303
  %1313 = add i64 %1274, 32
  %1314 = add i64 %1277, -4
  %1315 = icmp eq i64 %1314, 0
  br i1 %1315, label %1316, label %1273, !llvm.loop !145

1316:                                             ; preds = %1273, %1264
  %1317 = phi <4 x i32> [ undef, %1264 ], [ %1311, %1273 ]
  %1318 = phi <4 x i32> [ undef, %1264 ], [ %1312, %1273 ]
  %1319 = phi i64 [ 0, %1264 ], [ %1313, %1273 ]
  %1320 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1264 ], [ %1311, %1273 ]
  %1321 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1264 ], [ %1312, %1273 ]
  %1322 = icmp eq i64 %1269, 0
  br i1 %1322, label %1339, label %1323

1323:                                             ; preds = %1316, %1323
  %1324 = phi i64 [ %1336, %1323 ], [ %1319, %1316 ]
  %1325 = phi <4 x i32> [ %1334, %1323 ], [ %1320, %1316 ]
  %1326 = phi <4 x i32> [ %1335, %1323 ], [ %1321, %1316 ]
  %1327 = phi i64 [ %1337, %1323 ], [ %1269, %1316 ]
  %1328 = getelementptr inbounds i32, i32* %1261, i64 %1324
  %1329 = bitcast i32* %1328 to <4 x i32>*
  %1330 = load <4 x i32>, <4 x i32>* %1329, align 4
  %1331 = getelementptr inbounds i32, i32* %1328, i64 4
  %1332 = bitcast i32* %1331 to <4 x i32>*
  %1333 = load <4 x i32>, <4 x i32>* %1332, align 4
  %1334 = mul nsw <4 x i32> %1330, %1325
  %1335 = mul nsw <4 x i32> %1333, %1326
  %1336 = add i64 %1324, 8
  %1337 = add i64 %1327, -1
  %1338 = icmp eq i64 %1337, 0
  br i1 %1338, label %1339, label %1323, !llvm.loop !146

1339:                                             ; preds = %1323, %1316
  %1340 = phi <4 x i32> [ %1317, %1316 ], [ %1334, %1323 ]
  %1341 = phi <4 x i32> [ %1318, %1316 ], [ %1335, %1323 ]
  %1342 = mul <4 x i32> %1341, %1340
  %1343 = shufflevector <4 x i32> %1342, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1344 = mul <4 x i32> %1342, %1343
  %1345 = shufflevector <4 x i32> %1344, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1346 = mul <4 x i32> %1344, %1345
  %1347 = extractelement <4 x i32> %1346, i32 0
  %1348 = icmp eq i64 %1265, %1262
  br i1 %1348, label %1360, label %1349

1349:                                             ; preds = %1339, %1260
  %1350 = phi i64 [ 0, %1260 ], [ %1265, %1339 ]
  %1351 = phi i32 [ 1, %1260 ], [ %1347, %1339 ]
  br label %1352

1352:                                             ; preds = %1349, %1352
  %1353 = phi i64 [ %1358, %1352 ], [ %1350, %1349 ]
  %1354 = phi i32 [ %1357, %1352 ], [ %1351, %1349 ]
  %1355 = getelementptr inbounds i32, i32* %1261, i64 %1353
  %1356 = load i32, i32* %1355, align 4
  %1357 = mul nsw i32 %1356, %1354
  %1358 = add nuw nsw i64 %1353, 1
  %1359 = icmp eq i64 %1358, %1262
  br i1 %1359, label %1360, label %1352, !llvm.loop !147

1360:                                             ; preds = %1352, %1339, %1257
  %1361 = phi i32 [ 1, %1257 ], [ %1347, %1339 ], [ %1357, %1352 ]
  %1362 = icmp sgt i32 %1214, 5
  %1363 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1
  br i1 %1362, label %1364, label %1367

1364:                                             ; preds = %1360
  %1365 = getelementptr inbounds %union.anon, %union.anon* %1363, i64 0, i32 0
  %1366 = load i32*, i32** %1365, align 8
  br label %1370

1367:                                             ; preds = %1360
  %1368 = bitcast %union.anon* %1363 to i32*
  %1369 = icmp sgt i32 %1214, 0
  br i1 %1369, label %1370, label %1470

1370:                                             ; preds = %1367, %1364
  %1371 = phi i32* [ %1366, %1364 ], [ %1368, %1367 ]
  %1372 = zext i32 %1214 to i64
  %1373 = icmp ult i32 %1214, 8
  br i1 %1373, label %1459, label %1374

1374:                                             ; preds = %1370
  %1375 = and i64 %1372, 4294967288
  %1376 = add nsw i64 %1375, -8
  %1377 = lshr exact i64 %1376, 3
  %1378 = add nuw nsw i64 %1377, 1
  %1379 = and i64 %1378, 3
  %1380 = icmp ult i64 %1376, 24
  br i1 %1380, label %1426, label %1381

1381:                                             ; preds = %1374
  %1382 = sub nsw i64 %1378, %1379
  br label %1383

1383:                                             ; preds = %1383, %1381
  %1384 = phi i64 [ 0, %1381 ], [ %1423, %1383 ]
  %1385 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1381 ], [ %1421, %1383 ]
  %1386 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1381 ], [ %1422, %1383 ]
  %1387 = phi i64 [ %1382, %1381 ], [ %1424, %1383 ]
  %1388 = getelementptr inbounds i32, i32* %1371, i64 %1384
  %1389 = bitcast i32* %1388 to <4 x i32>*
  %1390 = load <4 x i32>, <4 x i32>* %1389, align 4
  %1391 = getelementptr inbounds i32, i32* %1388, i64 4
  %1392 = bitcast i32* %1391 to <4 x i32>*
  %1393 = load <4 x i32>, <4 x i32>* %1392, align 4
  %1394 = mul nsw <4 x i32> %1390, %1385
  %1395 = mul nsw <4 x i32> %1393, %1386
  %1396 = or i64 %1384, 8
  %1397 = getelementptr inbounds i32, i32* %1371, i64 %1396
  %1398 = bitcast i32* %1397 to <4 x i32>*
  %1399 = load <4 x i32>, <4 x i32>* %1398, align 4
  %1400 = getelementptr inbounds i32, i32* %1397, i64 4
  %1401 = bitcast i32* %1400 to <4 x i32>*
  %1402 = load <4 x i32>, <4 x i32>* %1401, align 4
  %1403 = mul nsw <4 x i32> %1399, %1394
  %1404 = mul nsw <4 x i32> %1402, %1395
  %1405 = or i64 %1384, 16
  %1406 = getelementptr inbounds i32, i32* %1371, i64 %1405
  %1407 = bitcast i32* %1406 to <4 x i32>*
  %1408 = load <4 x i32>, <4 x i32>* %1407, align 4
  %1409 = getelementptr inbounds i32, i32* %1406, i64 4
  %1410 = bitcast i32* %1409 to <4 x i32>*
  %1411 = load <4 x i32>, <4 x i32>* %1410, align 4
  %1412 = mul nsw <4 x i32> %1408, %1403
  %1413 = mul nsw <4 x i32> %1411, %1404
  %1414 = or i64 %1384, 24
  %1415 = getelementptr inbounds i32, i32* %1371, i64 %1414
  %1416 = bitcast i32* %1415 to <4 x i32>*
  %1417 = load <4 x i32>, <4 x i32>* %1416, align 4
  %1418 = getelementptr inbounds i32, i32* %1415, i64 4
  %1419 = bitcast i32* %1418 to <4 x i32>*
  %1420 = load <4 x i32>, <4 x i32>* %1419, align 4
  %1421 = mul nsw <4 x i32> %1417, %1412
  %1422 = mul nsw <4 x i32> %1420, %1413
  %1423 = add i64 %1384, 32
  %1424 = add i64 %1387, -4
  %1425 = icmp eq i64 %1424, 0
  br i1 %1425, label %1426, label %1383, !llvm.loop !148

1426:                                             ; preds = %1383, %1374
  %1427 = phi <4 x i32> [ undef, %1374 ], [ %1421, %1383 ]
  %1428 = phi <4 x i32> [ undef, %1374 ], [ %1422, %1383 ]
  %1429 = phi i64 [ 0, %1374 ], [ %1423, %1383 ]
  %1430 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1374 ], [ %1421, %1383 ]
  %1431 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1374 ], [ %1422, %1383 ]
  %1432 = icmp eq i64 %1379, 0
  br i1 %1432, label %1449, label %1433

1433:                                             ; preds = %1426, %1433
  %1434 = phi i64 [ %1446, %1433 ], [ %1429, %1426 ]
  %1435 = phi <4 x i32> [ %1444, %1433 ], [ %1430, %1426 ]
  %1436 = phi <4 x i32> [ %1445, %1433 ], [ %1431, %1426 ]
  %1437 = phi i64 [ %1447, %1433 ], [ %1379, %1426 ]
  %1438 = getelementptr inbounds i32, i32* %1371, i64 %1434
  %1439 = bitcast i32* %1438 to <4 x i32>*
  %1440 = load <4 x i32>, <4 x i32>* %1439, align 4
  %1441 = getelementptr inbounds i32, i32* %1438, i64 4
  %1442 = bitcast i32* %1441 to <4 x i32>*
  %1443 = load <4 x i32>, <4 x i32>* %1442, align 4
  %1444 = mul nsw <4 x i32> %1440, %1435
  %1445 = mul nsw <4 x i32> %1443, %1436
  %1446 = add i64 %1434, 8
  %1447 = add i64 %1437, -1
  %1448 = icmp eq i64 %1447, 0
  br i1 %1448, label %1449, label %1433, !llvm.loop !149

1449:                                             ; preds = %1433, %1426
  %1450 = phi <4 x i32> [ %1427, %1426 ], [ %1444, %1433 ]
  %1451 = phi <4 x i32> [ %1428, %1426 ], [ %1445, %1433 ]
  %1452 = mul <4 x i32> %1451, %1450
  %1453 = shufflevector <4 x i32> %1452, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1454 = mul <4 x i32> %1452, %1453
  %1455 = shufflevector <4 x i32> %1454, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1456 = mul <4 x i32> %1454, %1455
  %1457 = extractelement <4 x i32> %1456, i32 0
  %1458 = icmp eq i64 %1375, %1372
  br i1 %1458, label %1470, label %1459

1459:                                             ; preds = %1449, %1370
  %1460 = phi i64 [ 0, %1370 ], [ %1375, %1449 ]
  %1461 = phi i32 [ 1, %1370 ], [ %1457, %1449 ]
  br label %1462

1462:                                             ; preds = %1459, %1462
  %1463 = phi i64 [ %1468, %1462 ], [ %1460, %1459 ]
  %1464 = phi i32 [ %1467, %1462 ], [ %1461, %1459 ]
  %1465 = getelementptr inbounds i32, i32* %1371, i64 %1463
  %1466 = load i32, i32* %1465, align 4
  %1467 = mul nsw i32 %1466, %1464
  %1468 = add nuw nsw i64 %1463, 1
  %1469 = icmp eq i64 %1468, %1372
  br i1 %1469, label %1470, label %1462, !llvm.loop !150

1470:                                             ; preds = %1462, %1449, %1367
  %1471 = phi i32 [ 1, %1367 ], [ %1457, %1449 ], [ %1467, %1462 ]
  %1472 = icmp sgt i32 %1250, 5
  %1473 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1
  br i1 %1472, label %1474, label %1477

1474:                                             ; preds = %1470
  %1475 = getelementptr inbounds %union.anon, %union.anon* %1473, i64 0, i32 0
  %1476 = load i32*, i32** %1475, align 8
  br label %1480

1477:                                             ; preds = %1470
  %1478 = bitcast %union.anon* %1473 to i32*
  %1479 = icmp sgt i32 %1250, 0
  br i1 %1479, label %1480, label %1580

1480:                                             ; preds = %1477, %1474
  %1481 = phi i32* [ %1476, %1474 ], [ %1478, %1477 ]
  %1482 = zext i32 %1250 to i64
  %1483 = icmp ult i32 %1250, 8
  br i1 %1483, label %1569, label %1484

1484:                                             ; preds = %1480
  %1485 = and i64 %1482, 4294967288
  %1486 = add nsw i64 %1485, -8
  %1487 = lshr exact i64 %1486, 3
  %1488 = add nuw nsw i64 %1487, 1
  %1489 = and i64 %1488, 3
  %1490 = icmp ult i64 %1486, 24
  br i1 %1490, label %1536, label %1491

1491:                                             ; preds = %1484
  %1492 = sub nsw i64 %1488, %1489
  br label %1493

1493:                                             ; preds = %1493, %1491
  %1494 = phi i64 [ 0, %1491 ], [ %1533, %1493 ]
  %1495 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1491 ], [ %1531, %1493 ]
  %1496 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1491 ], [ %1532, %1493 ]
  %1497 = phi i64 [ %1492, %1491 ], [ %1534, %1493 ]
  %1498 = getelementptr inbounds i32, i32* %1481, i64 %1494
  %1499 = bitcast i32* %1498 to <4 x i32>*
  %1500 = load <4 x i32>, <4 x i32>* %1499, align 4
  %1501 = getelementptr inbounds i32, i32* %1498, i64 4
  %1502 = bitcast i32* %1501 to <4 x i32>*
  %1503 = load <4 x i32>, <4 x i32>* %1502, align 4
  %1504 = mul nsw <4 x i32> %1500, %1495
  %1505 = mul nsw <4 x i32> %1503, %1496
  %1506 = or i64 %1494, 8
  %1507 = getelementptr inbounds i32, i32* %1481, i64 %1506
  %1508 = bitcast i32* %1507 to <4 x i32>*
  %1509 = load <4 x i32>, <4 x i32>* %1508, align 4
  %1510 = getelementptr inbounds i32, i32* %1507, i64 4
  %1511 = bitcast i32* %1510 to <4 x i32>*
  %1512 = load <4 x i32>, <4 x i32>* %1511, align 4
  %1513 = mul nsw <4 x i32> %1509, %1504
  %1514 = mul nsw <4 x i32> %1512, %1505
  %1515 = or i64 %1494, 16
  %1516 = getelementptr inbounds i32, i32* %1481, i64 %1515
  %1517 = bitcast i32* %1516 to <4 x i32>*
  %1518 = load <4 x i32>, <4 x i32>* %1517, align 4
  %1519 = getelementptr inbounds i32, i32* %1516, i64 4
  %1520 = bitcast i32* %1519 to <4 x i32>*
  %1521 = load <4 x i32>, <4 x i32>* %1520, align 4
  %1522 = mul nsw <4 x i32> %1518, %1513
  %1523 = mul nsw <4 x i32> %1521, %1514
  %1524 = or i64 %1494, 24
  %1525 = getelementptr inbounds i32, i32* %1481, i64 %1524
  %1526 = bitcast i32* %1525 to <4 x i32>*
  %1527 = load <4 x i32>, <4 x i32>* %1526, align 4
  %1528 = getelementptr inbounds i32, i32* %1525, i64 4
  %1529 = bitcast i32* %1528 to <4 x i32>*
  %1530 = load <4 x i32>, <4 x i32>* %1529, align 4
  %1531 = mul nsw <4 x i32> %1527, %1522
  %1532 = mul nsw <4 x i32> %1530, %1523
  %1533 = add i64 %1494, 32
  %1534 = add i64 %1497, -4
  %1535 = icmp eq i64 %1534, 0
  br i1 %1535, label %1536, label %1493, !llvm.loop !151

1536:                                             ; preds = %1493, %1484
  %1537 = phi <4 x i32> [ undef, %1484 ], [ %1531, %1493 ]
  %1538 = phi <4 x i32> [ undef, %1484 ], [ %1532, %1493 ]
  %1539 = phi i64 [ 0, %1484 ], [ %1533, %1493 ]
  %1540 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1484 ], [ %1531, %1493 ]
  %1541 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1484 ], [ %1532, %1493 ]
  %1542 = icmp eq i64 %1489, 0
  br i1 %1542, label %1559, label %1543

1543:                                             ; preds = %1536, %1543
  %1544 = phi i64 [ %1556, %1543 ], [ %1539, %1536 ]
  %1545 = phi <4 x i32> [ %1554, %1543 ], [ %1540, %1536 ]
  %1546 = phi <4 x i32> [ %1555, %1543 ], [ %1541, %1536 ]
  %1547 = phi i64 [ %1557, %1543 ], [ %1489, %1536 ]
  %1548 = getelementptr inbounds i32, i32* %1481, i64 %1544
  %1549 = bitcast i32* %1548 to <4 x i32>*
  %1550 = load <4 x i32>, <4 x i32>* %1549, align 4
  %1551 = getelementptr inbounds i32, i32* %1548, i64 4
  %1552 = bitcast i32* %1551 to <4 x i32>*
  %1553 = load <4 x i32>, <4 x i32>* %1552, align 4
  %1554 = mul nsw <4 x i32> %1550, %1545
  %1555 = mul nsw <4 x i32> %1553, %1546
  %1556 = add i64 %1544, 8
  %1557 = add i64 %1547, -1
  %1558 = icmp eq i64 %1557, 0
  br i1 %1558, label %1559, label %1543, !llvm.loop !152

1559:                                             ; preds = %1543, %1536
  %1560 = phi <4 x i32> [ %1537, %1536 ], [ %1554, %1543 ]
  %1561 = phi <4 x i32> [ %1538, %1536 ], [ %1555, %1543 ]
  %1562 = mul <4 x i32> %1561, %1560
  %1563 = shufflevector <4 x i32> %1562, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1564 = mul <4 x i32> %1562, %1563
  %1565 = shufflevector <4 x i32> %1564, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1566 = mul <4 x i32> %1564, %1565
  %1567 = extractelement <4 x i32> %1566, i32 0
  %1568 = icmp eq i64 %1485, %1482
  br i1 %1568, label %1580, label %1569

1569:                                             ; preds = %1559, %1480
  %1570 = phi i64 [ 0, %1480 ], [ %1485, %1559 ]
  %1571 = phi i32 [ 1, %1480 ], [ %1567, %1559 ]
  br label %1572

1572:                                             ; preds = %1569, %1572
  %1573 = phi i64 [ %1578, %1572 ], [ %1570, %1569 ]
  %1574 = phi i32 [ %1577, %1572 ], [ %1571, %1569 ]
  %1575 = getelementptr inbounds i32, i32* %1481, i64 %1573
  %1576 = load i32, i32* %1575, align 4
  %1577 = mul nsw i32 %1576, %1574
  %1578 = add nuw nsw i64 %1573, 1
  %1579 = icmp eq i64 %1578, %1482
  br i1 %1579, label %1580, label %1572, !llvm.loop !153

1580:                                             ; preds = %1572, %1559, %1477
  %1581 = phi i32 [ 1, %1477 ], [ %1567, %1559 ], [ %1577, %1572 ]
  %1582 = icmp eq i32 %1361, %1471
  br i1 %1582, label %1584, label %1583

1583:                                             ; preds = %1580
  tail call void @abort() #12
  unreachable

1584:                                             ; preds = %1580
  %1585 = icmp eq i32 %1361, %1581
  br i1 %1585, label %1586, label %1658

1586:                                             ; preds = %1584
  %1587 = icmp sgt i32 %1361, 0
  br i1 %1587, label %1588, label %1696

1588:                                             ; preds = %1586
  %1589 = sub nsw i32 %1140, %1142
  %1590 = trunc i32 %1589 to i16
  %1591 = sub nsw i32 %1138, %1142
  %1592 = trunc i32 %1591 to i16
  %1593 = zext i32 %1361 to i64
  %1594 = icmp ult i32 %1361, 8
  br i1 %1594, label %1595, label %1597

1595:                                             ; preds = %1656, %1597, %1588
  %1596 = phi i64 [ 0, %1597 ], [ 0, %1588 ], [ %1611, %1656 ]
  br label %1659

1597:                                             ; preds = %1588
  %1598 = getelementptr i8, i8* %1251, i64 %1593
  %1599 = getelementptr i16, i16* %1216, i64 %1593
  %1600 = bitcast i16* %1599 to i8*
  %1601 = getelementptr i16, i16* %1179, i64 %1593
  %1602 = bitcast i16* %1601 to i8*
  %1603 = icmp ult i8* %1251, %1600
  %1604 = icmp ult i8* %1215, %1598
  %1605 = and i1 %1603, %1604
  %1606 = icmp ult i8* %1251, %1602
  %1607 = icmp ult i8* %1178, %1598
  %1608 = and i1 %1606, %1607
  %1609 = or i1 %1605, %1608
  br i1 %1609, label %1595, label %1610

1610:                                             ; preds = %1597
  %1611 = and i64 %1593, 4294967288
  %1612 = insertelement <8 x i16> undef, i16 %1590, i32 0
  %1613 = shufflevector <8 x i16> %1612, <8 x i16> undef, <8 x i32> zeroinitializer
  %1614 = insertelement <8 x i16> undef, i16 %1592, i32 0
  %1615 = shufflevector <8 x i16> %1614, <8 x i16> undef, <8 x i32> zeroinitializer
  %1616 = insertelement <8 x i32> undef, i32 %1142, i32 0
  %1617 = shufflevector <8 x i32> %1616, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %1618

1618:                                             ; preds = %1618, %1610
  %1619 = phi i64 [ 0, %1610 ], [ %1654, %1618 ]
  %1620 = getelementptr inbounds i16, i16* %1179, i64 %1619
  %1621 = bitcast i16* %1620 to <8 x i16>*
  %1622 = load <8 x i16>, <8 x i16>* %1621, align 2, !alias.scope !154
  %1623 = getelementptr inbounds i16, i16* %1216, i64 %1619
  %1624 = bitcast i16* %1623 to <8 x i16>*
  %1625 = load <8 x i16>, <8 x i16>* %1624, align 2, !alias.scope !157
  %1626 = icmp eq <8 x i16> %1622, %1625
  %1627 = icmp eq <8 x i16> %1622, <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>
  %1628 = and <8 x i1> %1627, %1626
  %1629 = sext <8 x i16> %1625 to <8 x i32>
  %1630 = sext <8 x i16> %1622 to <8 x i32>
  %1631 = mul nsw <8 x i32> %1629, %1630
  %1632 = icmp sgt <8 x i32> %1631, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %1633 = select <8 x i1> %1632, <8 x i32> <i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384>, <8 x i32> <i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383>
  %1634 = add nsw <8 x i32> %1633, %1631
  %1635 = sdiv <8 x i32> %1634, <i32 32768, i32 32768, i32 32768, i32 32768, i32 32768, i32 32768, i32 32768, i32 32768>
  %1636 = trunc <8 x i32> %1635 to <8 x i16>
  %1637 = select <8 x i1> %1628, <8 x i16> <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, <8 x i16> %1636
  %1638 = and <8 x i16> %1637, <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>
  %1639 = lshr <8 x i16> %1637, <i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15>
  %1640 = add nuw nsw <8 x i16> %1639, <i16 127, i16 127, i16 127, i16 127, i16 127, i16 127, i16 127, i16 127>
  %1641 = ashr <8 x i16> %1637, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %1642 = icmp ugt <8 x i16> %1638, %1640
  %1643 = zext <8 x i1> %1642 to <8 x i16>
  %1644 = add nsw <8 x i16> %1641, %1643
  %1645 = icmp slt <8 x i16> %1644, %1613
  %1646 = select <8 x i1> %1645, <8 x i16> %1644, <8 x i16> %1613
  %1647 = icmp sgt <8 x i16> %1646, %1615
  %1648 = select <8 x i1> %1647, <8 x i16> %1646, <8 x i16> %1615
  %1649 = zext <8 x i16> %1648 to <8 x i32>
  %1650 = add <8 x i32> %1617, %1649
  %1651 = trunc <8 x i32> %1650 to <8 x i8>
  %1652 = getelementptr inbounds i8, i8* %1251, i64 %1619
  %1653 = bitcast i8* %1652 to <8 x i8>*
  store <8 x i8> %1651, <8 x i8>* %1653, align 1, !alias.scope !159, !noalias !161
  %1654 = add i64 %1619, 8
  %1655 = icmp eq i64 %1654, %1611
  br i1 %1655, label %1656, label %1618, !llvm.loop !162

1656:                                             ; preds = %1618
  %1657 = icmp eq i64 %1611, %1593
  br i1 %1657, label %1696, label %1595

1658:                                             ; preds = %1584
  tail call void @abort() #12
  unreachable

1659:                                             ; preds = %1595, %1677
  %1660 = phi i64 [ %1694, %1677 ], [ %1596, %1595 ]
  %1661 = getelementptr inbounds i16, i16* %1179, i64 %1660
  %1662 = load i16, i16* %1661, align 2
  %1663 = getelementptr inbounds i16, i16* %1216, i64 %1660
  %1664 = load i16, i16* %1663, align 2
  %1665 = icmp eq i16 %1662, %1664
  %1666 = icmp eq i16 %1662, -32768
  %1667 = and i1 %1666, %1665
  br i1 %1667, label %1677, label %1668

1668:                                             ; preds = %1659
  %1669 = sext i16 %1664 to i32
  %1670 = sext i16 %1662 to i32
  %1671 = mul nsw i32 %1669, %1670
  %1672 = icmp sgt i32 %1671, -1
  %1673 = select i1 %1672, i32 16384, i32 -16383
  %1674 = add nsw i32 %1673, %1671
  %1675 = sdiv i32 %1674, 32768
  %1676 = trunc i32 %1675 to i16
  br label %1677

1677:                                             ; preds = %1668, %1659
  %1678 = phi i16 [ %1676, %1668 ], [ 32767, %1659 ]
  %1679 = and i16 %1678, 255
  %1680 = lshr i16 %1678, 15
  %1681 = add nuw nsw i16 %1680, 127
  %1682 = ashr i16 %1678, 8
  %1683 = icmp ugt i16 %1679, %1681
  %1684 = zext i1 %1683 to i16
  %1685 = add nsw i16 %1682, %1684
  %1686 = icmp slt i16 %1685, %1590
  %1687 = select i1 %1686, i16 %1685, i16 %1590
  %1688 = icmp sgt i16 %1687, %1592
  %1689 = select i1 %1688, i16 %1687, i16 %1592
  %1690 = zext i16 %1689 to i32
  %1691 = add i32 %1142, %1690
  %1692 = trunc i32 %1691 to i8
  %1693 = getelementptr inbounds i8, i8* %1251, i64 %1660
  store i8 %1692, i8* %1693, align 1
  %1694 = add nuw nsw i64 %1660, 1
  %1695 = icmp eq i64 %1694, %1593
  br i1 %1695, label %1696, label %1659, !llvm.loop !163

1696:                                             ; preds = %1677, %1656, %1586
  br i1 %1472, label %1697, label %1703

1697:                                             ; preds = %1696
  %1698 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %1699 = load i32*, i32** %1698, align 8
  %1700 = icmp eq i32* %1699, null
  br i1 %1700, label %1703, label %1701

1701:                                             ; preds = %1697
  %1702 = bitcast i32* %1699 to i8*
  tail call void @_ZdaPv(i8* %1702) #10
  br label %1703

1703:                                             ; preds = %1696, %1697, %1701
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1217) #11
  br i1 %1362, label %1704, label %1710

1704:                                             ; preds = %1703
  %1705 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1, i32 0
  %1706 = load i32*, i32** %1705, align 8
  %1707 = icmp eq i32* %1706, null
  br i1 %1707, label %1710, label %1708

1708:                                             ; preds = %1704
  %1709 = bitcast i32* %1706 to i8*
  tail call void @_ZdaPv(i8* %1709) #10
  br label %1710

1710:                                             ; preds = %1703, %1704, %1708
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1180) #11
  br i1 %1252, label %1711, label %1717

1711:                                             ; preds = %1710
  %1712 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1713 = load i32*, i32** %1712, align 8
  %1714 = icmp eq i32* %1713, null
  br i1 %1714, label %1717, label %1715

1715:                                             ; preds = %1711
  %1716 = bitcast i32* %1713 to i8*
  tail call void @_ZdaPv(i8* %1716) #10
  br label %1717

1717:                                             ; preds = %1710, %1711, %1715
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1143) #11
  br label %2303

1718:                                             ; preds = %1133
  %1719 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 0
  %1720 = load i32, i32* %1719, align 4
  %1721 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 1
  %1722 = load i32, i32* %1721, align 4
  %1723 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 3, i32 1
  %1724 = load i32, i32* %1723, align 4
  %1725 = bitcast %"class.tflite::RuntimeShape"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1725) #11
  %1726 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %1726, label %1727, label %1729

1727:                                             ; preds = %1718
  %1728 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 0, i32* %1728, align 8, !alias.scope !164
  br label %1758

1729:                                             ; preds = %1718
  %1730 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %1731 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1730, align 8, !noalias !164
  %1732 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1731, i64 0, i32 0
  %1733 = load i32, i32* %1732, align 4, !noalias !164
  %1734 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1731, i64 0, i32 1, i64 0
  %1735 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 %1733, i32* %1735, align 8, !alias.scope !164
  %1736 = icmp sgt i32 %1733, 5
  br i1 %1736, label %1737, label %1744

1737:                                             ; preds = %1729
  %1738 = sext i32 %1733 to i64
  %1739 = shl nsw i64 %1738, 2
  %1740 = tail call i8* @_Znam(i64 %1739) #10, !noalias !164
  %1741 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %1742 = bitcast i32** %1741 to i8**
  store i8* %1740, i8** %1742, align 8, !alias.scope !164
  %1743 = bitcast i8* %1740 to i32*
  br label %1749

1744:                                             ; preds = %1729
  %1745 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  %1746 = bitcast %union.anon* %1745 to i32*
  %1747 = sext i32 %1733 to i64
  %1748 = shl nsw i64 %1747, 2
  br label %1749

1749:                                             ; preds = %1744, %1737
  %1750 = phi i64 [ %1739, %1737 ], [ %1748, %1744 ]
  %1751 = phi i32* [ %1743, %1737 ], [ %1746, %1744 ]
  %1752 = bitcast i32* %1751 to i8*
  %1753 = bitcast i32* %1734 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1752, i8* align 4 %1753, i64 %1750, i1 false) #11
  %1754 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %1755 = bitcast %union.TfLitePtrUnion* %1754 to i16**
  %1756 = load i16*, i16** %1755, align 8
  %1757 = bitcast i16* %1756 to i8*
  br label %1758

1758:                                             ; preds = %1727, %1749
  %1759 = phi i32 [ %1733, %1749 ], [ 0, %1727 ]
  %1760 = phi i8* [ %1757, %1749 ], [ null, %1727 ]
  %1761 = phi i16* [ %1756, %1749 ], [ null, %1727 ]
  %1762 = bitcast %"class.tflite::RuntimeShape"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1762) #11
  %1763 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %1763, label %1764, label %1766

1764:                                             ; preds = %1758
  %1765 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  store i32 0, i32* %1765, align 8, !alias.scope !167
  br label %1795

1766:                                             ; preds = %1758
  %1767 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %1768 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1767, align 8, !noalias !167
  %1769 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1768, i64 0, i32 0
  %1770 = load i32, i32* %1769, align 4, !noalias !167
  %1771 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1768, i64 0, i32 1, i64 0
  %1772 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  store i32 %1770, i32* %1772, align 8, !alias.scope !167
  %1773 = icmp sgt i32 %1770, 5
  br i1 %1773, label %1774, label %1781

1774:                                             ; preds = %1766
  %1775 = sext i32 %1770 to i64
  %1776 = shl nsw i64 %1775, 2
  %1777 = tail call i8* @_Znam(i64 %1776) #10, !noalias !167
  %1778 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1, i32 0
  %1779 = bitcast i32** %1778 to i8**
  store i8* %1777, i8** %1779, align 8, !alias.scope !167
  %1780 = bitcast i8* %1777 to i32*
  br label %1786

1781:                                             ; preds = %1766
  %1782 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1
  %1783 = bitcast %union.anon* %1782 to i32*
  %1784 = sext i32 %1770 to i64
  %1785 = shl nsw i64 %1784, 2
  br label %1786

1786:                                             ; preds = %1781, %1774
  %1787 = phi i64 [ %1776, %1774 ], [ %1785, %1781 ]
  %1788 = phi i32* [ %1780, %1774 ], [ %1783, %1781 ]
  %1789 = bitcast i32* %1788 to i8*
  %1790 = bitcast i32* %1771 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1789, i8* align 4 %1790, i64 %1787, i1 false) #11
  %1791 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %1792 = bitcast %union.TfLitePtrUnion* %1791 to i16**
  %1793 = load i16*, i16** %1792, align 8
  %1794 = bitcast i16* %1793 to i8*
  br label %1795

1795:                                             ; preds = %1764, %1786
  %1796 = phi i32 [ %1770, %1786 ], [ 0, %1764 ]
  %1797 = phi i8* [ %1794, %1786 ], [ null, %1764 ]
  %1798 = phi i16* [ %1793, %1786 ], [ null, %1764 ]
  %1799 = bitcast %"class.tflite::RuntimeShape"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1799) #11
  %1800 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %1800, label %1801, label %1803

1801:                                             ; preds = %1795
  %1802 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 0, i32* %1802, align 8, !alias.scope !170
  br label %1831

1803:                                             ; preds = %1795
  %1804 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %1805 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1804, align 8, !noalias !170
  %1806 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1805, i64 0, i32 0
  %1807 = load i32, i32* %1806, align 4, !noalias !170
  %1808 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1805, i64 0, i32 1, i64 0
  %1809 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 %1807, i32* %1809, align 8, !alias.scope !170
  %1810 = icmp sgt i32 %1807, 5
  br i1 %1810, label %1811, label %1818

1811:                                             ; preds = %1803
  %1812 = sext i32 %1807 to i64
  %1813 = shl nsw i64 %1812, 2
  %1814 = tail call i8* @_Znam(i64 %1813) #10, !noalias !170
  %1815 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %1816 = bitcast i32** %1815 to i8**
  store i8* %1814, i8** %1816, align 8, !alias.scope !170
  %1817 = bitcast i8* %1814 to i32*
  br label %1823

1818:                                             ; preds = %1803
  %1819 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1
  %1820 = bitcast %union.anon* %1819 to i32*
  %1821 = sext i32 %1807 to i64
  %1822 = shl nsw i64 %1821, 2
  br label %1823

1823:                                             ; preds = %1818, %1811
  %1824 = phi i64 [ %1813, %1811 ], [ %1822, %1818 ]
  %1825 = phi i32* [ %1817, %1811 ], [ %1820, %1818 ]
  %1826 = bitcast i32* %1825 to i8*
  %1827 = bitcast i32* %1808 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1826, i8* align 4 %1827, i64 %1824, i1 false) #11
  %1828 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %1829 = bitcast %union.TfLitePtrUnion* %1828 to i8**
  %1830 = load i8*, i8** %1829, align 8
  br label %1831

1831:                                             ; preds = %1801, %1823
  %1832 = phi i32 [ %1807, %1823 ], [ 0, %1801 ]
  %1833 = phi i8* [ %1830, %1823 ], [ null, %1801 ]
  %1834 = icmp sgt i32 %1759, 5
  %1835 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  br i1 %1834, label %1836, label %1839

1836:                                             ; preds = %1831
  %1837 = getelementptr inbounds %union.anon, %union.anon* %1835, i64 0, i32 0
  %1838 = load i32*, i32** %1837, align 8
  br label %1842

1839:                                             ; preds = %1831
  %1840 = bitcast %union.anon* %1835 to i32*
  %1841 = icmp sgt i32 %1759, 0
  br i1 %1841, label %1842, label %1942

1842:                                             ; preds = %1839, %1836
  %1843 = phi i32* [ %1838, %1836 ], [ %1840, %1839 ]
  %1844 = zext i32 %1759 to i64
  %1845 = icmp ult i32 %1759, 8
  br i1 %1845, label %1931, label %1846

1846:                                             ; preds = %1842
  %1847 = and i64 %1844, 4294967288
  %1848 = add nsw i64 %1847, -8
  %1849 = lshr exact i64 %1848, 3
  %1850 = add nuw nsw i64 %1849, 1
  %1851 = and i64 %1850, 3
  %1852 = icmp ult i64 %1848, 24
  br i1 %1852, label %1898, label %1853

1853:                                             ; preds = %1846
  %1854 = sub nsw i64 %1850, %1851
  br label %1855

1855:                                             ; preds = %1855, %1853
  %1856 = phi i64 [ 0, %1853 ], [ %1895, %1855 ]
  %1857 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1853 ], [ %1893, %1855 ]
  %1858 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1853 ], [ %1894, %1855 ]
  %1859 = phi i64 [ %1854, %1853 ], [ %1896, %1855 ]
  %1860 = getelementptr inbounds i32, i32* %1843, i64 %1856
  %1861 = bitcast i32* %1860 to <4 x i32>*
  %1862 = load <4 x i32>, <4 x i32>* %1861, align 4
  %1863 = getelementptr inbounds i32, i32* %1860, i64 4
  %1864 = bitcast i32* %1863 to <4 x i32>*
  %1865 = load <4 x i32>, <4 x i32>* %1864, align 4
  %1866 = mul nsw <4 x i32> %1862, %1857
  %1867 = mul nsw <4 x i32> %1865, %1858
  %1868 = or i64 %1856, 8
  %1869 = getelementptr inbounds i32, i32* %1843, i64 %1868
  %1870 = bitcast i32* %1869 to <4 x i32>*
  %1871 = load <4 x i32>, <4 x i32>* %1870, align 4
  %1872 = getelementptr inbounds i32, i32* %1869, i64 4
  %1873 = bitcast i32* %1872 to <4 x i32>*
  %1874 = load <4 x i32>, <4 x i32>* %1873, align 4
  %1875 = mul nsw <4 x i32> %1871, %1866
  %1876 = mul nsw <4 x i32> %1874, %1867
  %1877 = or i64 %1856, 16
  %1878 = getelementptr inbounds i32, i32* %1843, i64 %1877
  %1879 = bitcast i32* %1878 to <4 x i32>*
  %1880 = load <4 x i32>, <4 x i32>* %1879, align 4
  %1881 = getelementptr inbounds i32, i32* %1878, i64 4
  %1882 = bitcast i32* %1881 to <4 x i32>*
  %1883 = load <4 x i32>, <4 x i32>* %1882, align 4
  %1884 = mul nsw <4 x i32> %1880, %1875
  %1885 = mul nsw <4 x i32> %1883, %1876
  %1886 = or i64 %1856, 24
  %1887 = getelementptr inbounds i32, i32* %1843, i64 %1886
  %1888 = bitcast i32* %1887 to <4 x i32>*
  %1889 = load <4 x i32>, <4 x i32>* %1888, align 4
  %1890 = getelementptr inbounds i32, i32* %1887, i64 4
  %1891 = bitcast i32* %1890 to <4 x i32>*
  %1892 = load <4 x i32>, <4 x i32>* %1891, align 4
  %1893 = mul nsw <4 x i32> %1889, %1884
  %1894 = mul nsw <4 x i32> %1892, %1885
  %1895 = add i64 %1856, 32
  %1896 = add i64 %1859, -4
  %1897 = icmp eq i64 %1896, 0
  br i1 %1897, label %1898, label %1855, !llvm.loop !173

1898:                                             ; preds = %1855, %1846
  %1899 = phi <4 x i32> [ undef, %1846 ], [ %1893, %1855 ]
  %1900 = phi <4 x i32> [ undef, %1846 ], [ %1894, %1855 ]
  %1901 = phi i64 [ 0, %1846 ], [ %1895, %1855 ]
  %1902 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1846 ], [ %1893, %1855 ]
  %1903 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1846 ], [ %1894, %1855 ]
  %1904 = icmp eq i64 %1851, 0
  br i1 %1904, label %1921, label %1905

1905:                                             ; preds = %1898, %1905
  %1906 = phi i64 [ %1918, %1905 ], [ %1901, %1898 ]
  %1907 = phi <4 x i32> [ %1916, %1905 ], [ %1902, %1898 ]
  %1908 = phi <4 x i32> [ %1917, %1905 ], [ %1903, %1898 ]
  %1909 = phi i64 [ %1919, %1905 ], [ %1851, %1898 ]
  %1910 = getelementptr inbounds i32, i32* %1843, i64 %1906
  %1911 = bitcast i32* %1910 to <4 x i32>*
  %1912 = load <4 x i32>, <4 x i32>* %1911, align 4
  %1913 = getelementptr inbounds i32, i32* %1910, i64 4
  %1914 = bitcast i32* %1913 to <4 x i32>*
  %1915 = load <4 x i32>, <4 x i32>* %1914, align 4
  %1916 = mul nsw <4 x i32> %1912, %1907
  %1917 = mul nsw <4 x i32> %1915, %1908
  %1918 = add i64 %1906, 8
  %1919 = add i64 %1909, -1
  %1920 = icmp eq i64 %1919, 0
  br i1 %1920, label %1921, label %1905, !llvm.loop !174

1921:                                             ; preds = %1905, %1898
  %1922 = phi <4 x i32> [ %1899, %1898 ], [ %1916, %1905 ]
  %1923 = phi <4 x i32> [ %1900, %1898 ], [ %1917, %1905 ]
  %1924 = mul <4 x i32> %1923, %1922
  %1925 = shufflevector <4 x i32> %1924, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1926 = mul <4 x i32> %1924, %1925
  %1927 = shufflevector <4 x i32> %1926, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1928 = mul <4 x i32> %1926, %1927
  %1929 = extractelement <4 x i32> %1928, i32 0
  %1930 = icmp eq i64 %1847, %1844
  br i1 %1930, label %1942, label %1931

1931:                                             ; preds = %1921, %1842
  %1932 = phi i64 [ 0, %1842 ], [ %1847, %1921 ]
  %1933 = phi i32 [ 1, %1842 ], [ %1929, %1921 ]
  br label %1934

1934:                                             ; preds = %1931, %1934
  %1935 = phi i64 [ %1940, %1934 ], [ %1932, %1931 ]
  %1936 = phi i32 [ %1939, %1934 ], [ %1933, %1931 ]
  %1937 = getelementptr inbounds i32, i32* %1843, i64 %1935
  %1938 = load i32, i32* %1937, align 4
  %1939 = mul nsw i32 %1938, %1936
  %1940 = add nuw nsw i64 %1935, 1
  %1941 = icmp eq i64 %1940, %1844
  br i1 %1941, label %1942, label %1934, !llvm.loop !175

1942:                                             ; preds = %1934, %1921, %1839
  %1943 = phi i32 [ 1, %1839 ], [ %1929, %1921 ], [ %1939, %1934 ]
  %1944 = icmp sgt i32 %1796, 5
  %1945 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1
  br i1 %1944, label %1946, label %1949

1946:                                             ; preds = %1942
  %1947 = getelementptr inbounds %union.anon, %union.anon* %1945, i64 0, i32 0
  %1948 = load i32*, i32** %1947, align 8
  br label %1952

1949:                                             ; preds = %1942
  %1950 = bitcast %union.anon* %1945 to i32*
  %1951 = icmp sgt i32 %1796, 0
  br i1 %1951, label %1952, label %2052

1952:                                             ; preds = %1949, %1946
  %1953 = phi i32* [ %1948, %1946 ], [ %1950, %1949 ]
  %1954 = zext i32 %1796 to i64
  %1955 = icmp ult i32 %1796, 8
  br i1 %1955, label %2041, label %1956

1956:                                             ; preds = %1952
  %1957 = and i64 %1954, 4294967288
  %1958 = add nsw i64 %1957, -8
  %1959 = lshr exact i64 %1958, 3
  %1960 = add nuw nsw i64 %1959, 1
  %1961 = and i64 %1960, 3
  %1962 = icmp ult i64 %1958, 24
  br i1 %1962, label %2008, label %1963

1963:                                             ; preds = %1956
  %1964 = sub nsw i64 %1960, %1961
  br label %1965

1965:                                             ; preds = %1965, %1963
  %1966 = phi i64 [ 0, %1963 ], [ %2005, %1965 ]
  %1967 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1963 ], [ %2003, %1965 ]
  %1968 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1963 ], [ %2004, %1965 ]
  %1969 = phi i64 [ %1964, %1963 ], [ %2006, %1965 ]
  %1970 = getelementptr inbounds i32, i32* %1953, i64 %1966
  %1971 = bitcast i32* %1970 to <4 x i32>*
  %1972 = load <4 x i32>, <4 x i32>* %1971, align 4
  %1973 = getelementptr inbounds i32, i32* %1970, i64 4
  %1974 = bitcast i32* %1973 to <4 x i32>*
  %1975 = load <4 x i32>, <4 x i32>* %1974, align 4
  %1976 = mul nsw <4 x i32> %1972, %1967
  %1977 = mul nsw <4 x i32> %1975, %1968
  %1978 = or i64 %1966, 8
  %1979 = getelementptr inbounds i32, i32* %1953, i64 %1978
  %1980 = bitcast i32* %1979 to <4 x i32>*
  %1981 = load <4 x i32>, <4 x i32>* %1980, align 4
  %1982 = getelementptr inbounds i32, i32* %1979, i64 4
  %1983 = bitcast i32* %1982 to <4 x i32>*
  %1984 = load <4 x i32>, <4 x i32>* %1983, align 4
  %1985 = mul nsw <4 x i32> %1981, %1976
  %1986 = mul nsw <4 x i32> %1984, %1977
  %1987 = or i64 %1966, 16
  %1988 = getelementptr inbounds i32, i32* %1953, i64 %1987
  %1989 = bitcast i32* %1988 to <4 x i32>*
  %1990 = load <4 x i32>, <4 x i32>* %1989, align 4
  %1991 = getelementptr inbounds i32, i32* %1988, i64 4
  %1992 = bitcast i32* %1991 to <4 x i32>*
  %1993 = load <4 x i32>, <4 x i32>* %1992, align 4
  %1994 = mul nsw <4 x i32> %1990, %1985
  %1995 = mul nsw <4 x i32> %1993, %1986
  %1996 = or i64 %1966, 24
  %1997 = getelementptr inbounds i32, i32* %1953, i64 %1996
  %1998 = bitcast i32* %1997 to <4 x i32>*
  %1999 = load <4 x i32>, <4 x i32>* %1998, align 4
  %2000 = getelementptr inbounds i32, i32* %1997, i64 4
  %2001 = bitcast i32* %2000 to <4 x i32>*
  %2002 = load <4 x i32>, <4 x i32>* %2001, align 4
  %2003 = mul nsw <4 x i32> %1999, %1994
  %2004 = mul nsw <4 x i32> %2002, %1995
  %2005 = add i64 %1966, 32
  %2006 = add i64 %1969, -4
  %2007 = icmp eq i64 %2006, 0
  br i1 %2007, label %2008, label %1965, !llvm.loop !176

2008:                                             ; preds = %1965, %1956
  %2009 = phi <4 x i32> [ undef, %1956 ], [ %2003, %1965 ]
  %2010 = phi <4 x i32> [ undef, %1956 ], [ %2004, %1965 ]
  %2011 = phi i64 [ 0, %1956 ], [ %2005, %1965 ]
  %2012 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1956 ], [ %2003, %1965 ]
  %2013 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1956 ], [ %2004, %1965 ]
  %2014 = icmp eq i64 %1961, 0
  br i1 %2014, label %2031, label %2015

2015:                                             ; preds = %2008, %2015
  %2016 = phi i64 [ %2028, %2015 ], [ %2011, %2008 ]
  %2017 = phi <4 x i32> [ %2026, %2015 ], [ %2012, %2008 ]
  %2018 = phi <4 x i32> [ %2027, %2015 ], [ %2013, %2008 ]
  %2019 = phi i64 [ %2029, %2015 ], [ %1961, %2008 ]
  %2020 = getelementptr inbounds i32, i32* %1953, i64 %2016
  %2021 = bitcast i32* %2020 to <4 x i32>*
  %2022 = load <4 x i32>, <4 x i32>* %2021, align 4
  %2023 = getelementptr inbounds i32, i32* %2020, i64 4
  %2024 = bitcast i32* %2023 to <4 x i32>*
  %2025 = load <4 x i32>, <4 x i32>* %2024, align 4
  %2026 = mul nsw <4 x i32> %2022, %2017
  %2027 = mul nsw <4 x i32> %2025, %2018
  %2028 = add i64 %2016, 8
  %2029 = add i64 %2019, -1
  %2030 = icmp eq i64 %2029, 0
  br i1 %2030, label %2031, label %2015, !llvm.loop !177

2031:                                             ; preds = %2015, %2008
  %2032 = phi <4 x i32> [ %2009, %2008 ], [ %2026, %2015 ]
  %2033 = phi <4 x i32> [ %2010, %2008 ], [ %2027, %2015 ]
  %2034 = mul <4 x i32> %2033, %2032
  %2035 = shufflevector <4 x i32> %2034, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %2036 = mul <4 x i32> %2034, %2035
  %2037 = shufflevector <4 x i32> %2036, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %2038 = mul <4 x i32> %2036, %2037
  %2039 = extractelement <4 x i32> %2038, i32 0
  %2040 = icmp eq i64 %1957, %1954
  br i1 %2040, label %2052, label %2041

2041:                                             ; preds = %2031, %1952
  %2042 = phi i64 [ 0, %1952 ], [ %1957, %2031 ]
  %2043 = phi i32 [ 1, %1952 ], [ %2039, %2031 ]
  br label %2044

2044:                                             ; preds = %2041, %2044
  %2045 = phi i64 [ %2050, %2044 ], [ %2042, %2041 ]
  %2046 = phi i32 [ %2049, %2044 ], [ %2043, %2041 ]
  %2047 = getelementptr inbounds i32, i32* %1953, i64 %2045
  %2048 = load i32, i32* %2047, align 4
  %2049 = mul nsw i32 %2048, %2046
  %2050 = add nuw nsw i64 %2045, 1
  %2051 = icmp eq i64 %2050, %1954
  br i1 %2051, label %2052, label %2044, !llvm.loop !178

2052:                                             ; preds = %2044, %2031, %1949
  %2053 = phi i32 [ 1, %1949 ], [ %2039, %2031 ], [ %2049, %2044 ]
  %2054 = icmp sgt i32 %1832, 5
  %2055 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1
  br i1 %2054, label %2056, label %2059

2056:                                             ; preds = %2052
  %2057 = getelementptr inbounds %union.anon, %union.anon* %2055, i64 0, i32 0
  %2058 = load i32*, i32** %2057, align 8
  br label %2062

2059:                                             ; preds = %2052
  %2060 = bitcast %union.anon* %2055 to i32*
  %2061 = icmp sgt i32 %1832, 0
  br i1 %2061, label %2062, label %2162

2062:                                             ; preds = %2059, %2056
  %2063 = phi i32* [ %2058, %2056 ], [ %2060, %2059 ]
  %2064 = zext i32 %1832 to i64
  %2065 = icmp ult i32 %1832, 8
  br i1 %2065, label %2151, label %2066

2066:                                             ; preds = %2062
  %2067 = and i64 %2064, 4294967288
  %2068 = add nsw i64 %2067, -8
  %2069 = lshr exact i64 %2068, 3
  %2070 = add nuw nsw i64 %2069, 1
  %2071 = and i64 %2070, 3
  %2072 = icmp ult i64 %2068, 24
  br i1 %2072, label %2118, label %2073

2073:                                             ; preds = %2066
  %2074 = sub nsw i64 %2070, %2071
  br label %2075

2075:                                             ; preds = %2075, %2073
  %2076 = phi i64 [ 0, %2073 ], [ %2115, %2075 ]
  %2077 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2073 ], [ %2113, %2075 ]
  %2078 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2073 ], [ %2114, %2075 ]
  %2079 = phi i64 [ %2074, %2073 ], [ %2116, %2075 ]
  %2080 = getelementptr inbounds i32, i32* %2063, i64 %2076
  %2081 = bitcast i32* %2080 to <4 x i32>*
  %2082 = load <4 x i32>, <4 x i32>* %2081, align 4
  %2083 = getelementptr inbounds i32, i32* %2080, i64 4
  %2084 = bitcast i32* %2083 to <4 x i32>*
  %2085 = load <4 x i32>, <4 x i32>* %2084, align 4
  %2086 = mul nsw <4 x i32> %2082, %2077
  %2087 = mul nsw <4 x i32> %2085, %2078
  %2088 = or i64 %2076, 8
  %2089 = getelementptr inbounds i32, i32* %2063, i64 %2088
  %2090 = bitcast i32* %2089 to <4 x i32>*
  %2091 = load <4 x i32>, <4 x i32>* %2090, align 4
  %2092 = getelementptr inbounds i32, i32* %2089, i64 4
  %2093 = bitcast i32* %2092 to <4 x i32>*
  %2094 = load <4 x i32>, <4 x i32>* %2093, align 4
  %2095 = mul nsw <4 x i32> %2091, %2086
  %2096 = mul nsw <4 x i32> %2094, %2087
  %2097 = or i64 %2076, 16
  %2098 = getelementptr inbounds i32, i32* %2063, i64 %2097
  %2099 = bitcast i32* %2098 to <4 x i32>*
  %2100 = load <4 x i32>, <4 x i32>* %2099, align 4
  %2101 = getelementptr inbounds i32, i32* %2098, i64 4
  %2102 = bitcast i32* %2101 to <4 x i32>*
  %2103 = load <4 x i32>, <4 x i32>* %2102, align 4
  %2104 = mul nsw <4 x i32> %2100, %2095
  %2105 = mul nsw <4 x i32> %2103, %2096
  %2106 = or i64 %2076, 24
  %2107 = getelementptr inbounds i32, i32* %2063, i64 %2106
  %2108 = bitcast i32* %2107 to <4 x i32>*
  %2109 = load <4 x i32>, <4 x i32>* %2108, align 4
  %2110 = getelementptr inbounds i32, i32* %2107, i64 4
  %2111 = bitcast i32* %2110 to <4 x i32>*
  %2112 = load <4 x i32>, <4 x i32>* %2111, align 4
  %2113 = mul nsw <4 x i32> %2109, %2104
  %2114 = mul nsw <4 x i32> %2112, %2105
  %2115 = add i64 %2076, 32
  %2116 = add i64 %2079, -4
  %2117 = icmp eq i64 %2116, 0
  br i1 %2117, label %2118, label %2075, !llvm.loop !179

2118:                                             ; preds = %2075, %2066
  %2119 = phi <4 x i32> [ undef, %2066 ], [ %2113, %2075 ]
  %2120 = phi <4 x i32> [ undef, %2066 ], [ %2114, %2075 ]
  %2121 = phi i64 [ 0, %2066 ], [ %2115, %2075 ]
  %2122 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2066 ], [ %2113, %2075 ]
  %2123 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2066 ], [ %2114, %2075 ]
  %2124 = icmp eq i64 %2071, 0
  br i1 %2124, label %2141, label %2125

2125:                                             ; preds = %2118, %2125
  %2126 = phi i64 [ %2138, %2125 ], [ %2121, %2118 ]
  %2127 = phi <4 x i32> [ %2136, %2125 ], [ %2122, %2118 ]
  %2128 = phi <4 x i32> [ %2137, %2125 ], [ %2123, %2118 ]
  %2129 = phi i64 [ %2139, %2125 ], [ %2071, %2118 ]
  %2130 = getelementptr inbounds i32, i32* %2063, i64 %2126
  %2131 = bitcast i32* %2130 to <4 x i32>*
  %2132 = load <4 x i32>, <4 x i32>* %2131, align 4
  %2133 = getelementptr inbounds i32, i32* %2130, i64 4
  %2134 = bitcast i32* %2133 to <4 x i32>*
  %2135 = load <4 x i32>, <4 x i32>* %2134, align 4
  %2136 = mul nsw <4 x i32> %2132, %2127
  %2137 = mul nsw <4 x i32> %2135, %2128
  %2138 = add i64 %2126, 8
  %2139 = add i64 %2129, -1
  %2140 = icmp eq i64 %2139, 0
  br i1 %2140, label %2141, label %2125, !llvm.loop !180

2141:                                             ; preds = %2125, %2118
  %2142 = phi <4 x i32> [ %2119, %2118 ], [ %2136, %2125 ]
  %2143 = phi <4 x i32> [ %2120, %2118 ], [ %2137, %2125 ]
  %2144 = mul <4 x i32> %2143, %2142
  %2145 = shufflevector <4 x i32> %2144, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %2146 = mul <4 x i32> %2144, %2145
  %2147 = shufflevector <4 x i32> %2146, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %2148 = mul <4 x i32> %2146, %2147
  %2149 = extractelement <4 x i32> %2148, i32 0
  %2150 = icmp eq i64 %2067, %2064
  br i1 %2150, label %2162, label %2151

2151:                                             ; preds = %2141, %2062
  %2152 = phi i64 [ 0, %2062 ], [ %2067, %2141 ]
  %2153 = phi i32 [ 1, %2062 ], [ %2149, %2141 ]
  br label %2154

2154:                                             ; preds = %2151, %2154
  %2155 = phi i64 [ %2160, %2154 ], [ %2152, %2151 ]
  %2156 = phi i32 [ %2159, %2154 ], [ %2153, %2151 ]
  %2157 = getelementptr inbounds i32, i32* %2063, i64 %2155
  %2158 = load i32, i32* %2157, align 4
  %2159 = mul nsw i32 %2158, %2156
  %2160 = add nuw nsw i64 %2155, 1
  %2161 = icmp eq i64 %2160, %2064
  br i1 %2161, label %2162, label %2154, !llvm.loop !181

2162:                                             ; preds = %2154, %2141, %2059
  %2163 = phi i32 [ 1, %2059 ], [ %2149, %2141 ], [ %2159, %2154 ]
  %2164 = icmp eq i32 %1943, %2053
  br i1 %2164, label %2166, label %2165

2165:                                             ; preds = %2162
  tail call void @abort() #12
  unreachable

2166:                                             ; preds = %2162
  %2167 = icmp eq i32 %1943, %2163
  br i1 %2167, label %2168, label %2240

2168:                                             ; preds = %2166
  %2169 = icmp sgt i32 %1943, 0
  br i1 %2169, label %2170, label %2278

2170:                                             ; preds = %2168
  %2171 = sub nsw i32 %1722, %1724
  %2172 = trunc i32 %2171 to i16
  %2173 = sub nsw i32 %1720, %1724
  %2174 = trunc i32 %2173 to i16
  %2175 = zext i32 %1943 to i64
  %2176 = icmp ult i32 %1943, 8
  br i1 %2176, label %2177, label %2179

2177:                                             ; preds = %2238, %2179, %2170
  %2178 = phi i64 [ 0, %2179 ], [ 0, %2170 ], [ %2193, %2238 ]
  br label %2241

2179:                                             ; preds = %2170
  %2180 = getelementptr i8, i8* %1833, i64 %2175
  %2181 = getelementptr i16, i16* %1798, i64 %2175
  %2182 = bitcast i16* %2181 to i8*
  %2183 = getelementptr i16, i16* %1761, i64 %2175
  %2184 = bitcast i16* %2183 to i8*
  %2185 = icmp ult i8* %1833, %2182
  %2186 = icmp ult i8* %1797, %2180
  %2187 = and i1 %2185, %2186
  %2188 = icmp ult i8* %1833, %2184
  %2189 = icmp ult i8* %1760, %2180
  %2190 = and i1 %2188, %2189
  %2191 = or i1 %2187, %2190
  br i1 %2191, label %2177, label %2192

2192:                                             ; preds = %2179
  %2193 = and i64 %2175, 4294967288
  %2194 = insertelement <8 x i16> undef, i16 %2172, i32 0
  %2195 = shufflevector <8 x i16> %2194, <8 x i16> undef, <8 x i32> zeroinitializer
  %2196 = insertelement <8 x i16> undef, i16 %2174, i32 0
  %2197 = shufflevector <8 x i16> %2196, <8 x i16> undef, <8 x i32> zeroinitializer
  %2198 = insertelement <8 x i32> undef, i32 %1724, i32 0
  %2199 = shufflevector <8 x i32> %2198, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %2200

2200:                                             ; preds = %2200, %2192
  %2201 = phi i64 [ 0, %2192 ], [ %2236, %2200 ]
  %2202 = getelementptr inbounds i16, i16* %1761, i64 %2201
  %2203 = bitcast i16* %2202 to <8 x i16>*
  %2204 = load <8 x i16>, <8 x i16>* %2203, align 2, !alias.scope !182
  %2205 = getelementptr inbounds i16, i16* %1798, i64 %2201
  %2206 = bitcast i16* %2205 to <8 x i16>*
  %2207 = load <8 x i16>, <8 x i16>* %2206, align 2, !alias.scope !185
  %2208 = icmp eq <8 x i16> %2204, %2207
  %2209 = icmp eq <8 x i16> %2204, <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>
  %2210 = and <8 x i1> %2209, %2208
  %2211 = sext <8 x i16> %2207 to <8 x i32>
  %2212 = sext <8 x i16> %2204 to <8 x i32>
  %2213 = mul nsw <8 x i32> %2211, %2212
  %2214 = icmp sgt <8 x i32> %2213, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %2215 = select <8 x i1> %2214, <8 x i32> <i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384>, <8 x i32> <i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383>
  %2216 = add nsw <8 x i32> %2215, %2213
  %2217 = sdiv <8 x i32> %2216, <i32 32768, i32 32768, i32 32768, i32 32768, i32 32768, i32 32768, i32 32768, i32 32768>
  %2218 = trunc <8 x i32> %2217 to <8 x i16>
  %2219 = select <8 x i1> %2210, <8 x i16> <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, <8 x i16> %2218
  %2220 = and <8 x i16> %2219, <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>
  %2221 = lshr <8 x i16> %2219, <i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15>
  %2222 = add nuw nsw <8 x i16> %2221, <i16 127, i16 127, i16 127, i16 127, i16 127, i16 127, i16 127, i16 127>
  %2223 = ashr <8 x i16> %2219, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %2224 = icmp ugt <8 x i16> %2220, %2222
  %2225 = zext <8 x i1> %2224 to <8 x i16>
  %2226 = add nsw <8 x i16> %2223, %2225
  %2227 = icmp slt <8 x i16> %2226, %2195
  %2228 = select <8 x i1> %2227, <8 x i16> %2226, <8 x i16> %2195
  %2229 = icmp sgt <8 x i16> %2228, %2197
  %2230 = select <8 x i1> %2229, <8 x i16> %2228, <8 x i16> %2197
  %2231 = zext <8 x i16> %2230 to <8 x i32>
  %2232 = add <8 x i32> %2199, %2231
  %2233 = trunc <8 x i32> %2232 to <8 x i8>
  %2234 = getelementptr inbounds i8, i8* %1833, i64 %2201
  %2235 = bitcast i8* %2234 to <8 x i8>*
  store <8 x i8> %2233, <8 x i8>* %2235, align 1, !alias.scope !187, !noalias !189
  %2236 = add i64 %2201, 8
  %2237 = icmp eq i64 %2236, %2193
  br i1 %2237, label %2238, label %2200, !llvm.loop !190

2238:                                             ; preds = %2200
  %2239 = icmp eq i64 %2193, %2175
  br i1 %2239, label %2278, label %2177

2240:                                             ; preds = %2166
  tail call void @abort() #12
  unreachable

2241:                                             ; preds = %2177, %2259
  %2242 = phi i64 [ %2276, %2259 ], [ %2178, %2177 ]
  %2243 = getelementptr inbounds i16, i16* %1761, i64 %2242
  %2244 = load i16, i16* %2243, align 2
  %2245 = getelementptr inbounds i16, i16* %1798, i64 %2242
  %2246 = load i16, i16* %2245, align 2
  %2247 = icmp eq i16 %2244, %2246
  %2248 = icmp eq i16 %2244, -32768
  %2249 = and i1 %2248, %2247
  br i1 %2249, label %2259, label %2250

2250:                                             ; preds = %2241
  %2251 = sext i16 %2246 to i32
  %2252 = sext i16 %2244 to i32
  %2253 = mul nsw i32 %2251, %2252
  %2254 = icmp sgt i32 %2253, -1
  %2255 = select i1 %2254, i32 16384, i32 -16383
  %2256 = add nsw i32 %2255, %2253
  %2257 = sdiv i32 %2256, 32768
  %2258 = trunc i32 %2257 to i16
  br label %2259

2259:                                             ; preds = %2250, %2241
  %2260 = phi i16 [ %2258, %2250 ], [ 32767, %2241 ]
  %2261 = and i16 %2260, 255
  %2262 = lshr i16 %2260, 15
  %2263 = add nuw nsw i16 %2262, 127
  %2264 = ashr i16 %2260, 8
  %2265 = icmp ugt i16 %2261, %2263
  %2266 = zext i1 %2265 to i16
  %2267 = add nsw i16 %2264, %2266
  %2268 = icmp slt i16 %2267, %2172
  %2269 = select i1 %2268, i16 %2267, i16 %2172
  %2270 = icmp sgt i16 %2269, %2174
  %2271 = select i1 %2270, i16 %2269, i16 %2174
  %2272 = zext i16 %2271 to i32
  %2273 = add i32 %1724, %2272
  %2274 = trunc i32 %2273 to i8
  %2275 = getelementptr inbounds i8, i8* %1833, i64 %2242
  store i8 %2274, i8* %2275, align 1
  %2276 = add nuw nsw i64 %2242, 1
  %2277 = icmp eq i64 %2276, %2175
  br i1 %2277, label %2278, label %2241, !llvm.loop !191

2278:                                             ; preds = %2259, %2238, %2168
  br i1 %2054, label %2279, label %2285

2279:                                             ; preds = %2278
  %2280 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %2281 = load i32*, i32** %2280, align 8
  %2282 = icmp eq i32* %2281, null
  br i1 %2282, label %2285, label %2283

2283:                                             ; preds = %2279
  %2284 = bitcast i32* %2281 to i8*
  tail call void @_ZdaPv(i8* %2284) #10
  br label %2285

2285:                                             ; preds = %2278, %2279, %2283
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1799) #11
  br i1 %1944, label %2286, label %2292

2286:                                             ; preds = %2285
  %2287 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1, i32 0
  %2288 = load i32*, i32** %2287, align 8
  %2289 = icmp eq i32* %2288, null
  br i1 %2289, label %2292, label %2290

2290:                                             ; preds = %2286
  %2291 = bitcast i32* %2288 to i8*
  tail call void @_ZdaPv(i8* %2291) #10
  br label %2292

2292:                                             ; preds = %2285, %2286, %2290
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1762) #11
  br i1 %1834, label %2293, label %2299

2293:                                             ; preds = %2292
  %2294 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %2295 = load i32*, i32** %2294, align 8
  %2296 = icmp eq i32* %2295, null
  br i1 %2296, label %2299, label %2297

2297:                                             ; preds = %2293
  %2298 = bitcast i32* %2295 to i8*
  tail call void @_ZdaPv(i8* %2298) #10
  br label %2299

2299:                                             ; preds = %2292, %2293, %2297
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1725) #11
  br label %2303

2300:                                             ; preds = %1133, %44, %1129
  %2301 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %2302 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %2301, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %2302(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.19, i64 0, i64 0)) #11
  br label %2303

2303:                                             ; preds = %1717, %2299, %1127, %428, %422, %416, %2300
  %2304 = phi i32 [ 1, %2300 ], [ 1, %416 ], [ 1, %422 ], [ 1, %428 ], [ 0, %1127 ], [ 0, %2299 ], [ 0, %1717 ]
  ret i32 %2304
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE(%"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"struct.tflite::ArithmeticParams"*) local_unnamed_addr #7 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %8, %10
  %12 = select i1 %11, i32 %10, i32 %8
  %13 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 0
  store i8 4, i8* %13, align 4
  %14 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %12, i32* %15, align 8
  %16 = icmp sgt i32 %12, 5
  br i1 %16, label %17, label %23

17:                                               ; preds = %3
  %18 = sext i32 %12 to i64
  %19 = shl nuw nsw i64 %18, 2
  %20 = tail call i8* @_Znam(i64 %19) #10
  %21 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %22 = bitcast i32** %21 to i8**
  store i8* %20, i8** %22, align 8
  br label %25

23:                                               ; preds = %3
  %24 = icmp sgt i32 %12, 0
  br i1 %24, label %25, label %73

25:                                               ; preds = %23, %17
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %27 = bitcast %union.anon* %26 to [5 x i32]*
  %28 = getelementptr inbounds %union.anon, %union.anon* %26, i64 0, i32 0
  %29 = zext i32 %12 to i64
  %30 = add nsw i64 %29, -1
  %31 = and i64 %29, 3
  %32 = icmp ult i64 %30, 3
  br i1 %32, label %60, label %33

33:                                               ; preds = %25
  %34 = sub nsw i64 %29, %31
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ 0, %33 ], [ %57, %35 ]
  %37 = phi i64 [ %34, %33 ], [ %58, %35 ]
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %36
  %39 = load i32*, i32** %28, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 %36
  %41 = select i1 %16, i32* %40, i32* %38
  store i32 1, i32* %41, align 4
  %42 = or i64 %36, 1
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %42
  %44 = load i32*, i32** %28, align 8
  %45 = getelementptr inbounds i32, i32* %44, i64 %42
  %46 = select i1 %16, i32* %45, i32* %43
  store i32 1, i32* %46, align 4
  %47 = or i64 %36, 2
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %47
  %49 = load i32*, i32** %28, align 8
  %50 = getelementptr inbounds i32, i32* %49, i64 %47
  %51 = select i1 %16, i32* %50, i32* %48
  store i32 1, i32* %51, align 4
  %52 = or i64 %36, 3
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %52
  %54 = load i32*, i32** %28, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 %52
  %56 = select i1 %16, i32* %55, i32* %53
  store i32 1, i32* %56, align 4
  %57 = add nuw nsw i64 %36, 4
  %58 = add i64 %37, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %35

60:                                               ; preds = %35, %25
  %61 = phi i64 [ 0, %25 ], [ %57, %35 ]
  %62 = icmp eq i64 %31, 0
  br i1 %62, label %73, label %63

63:                                               ; preds = %60, %63
  %64 = phi i64 [ %70, %63 ], [ %61, %60 ]
  %65 = phi i64 [ %71, %63 ], [ %31, %60 ]
  %66 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %64
  %67 = load i32*, i32** %28, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %64
  %69 = select i1 %16, i32* %68, i32* %66
  store i32 1, i32* %69, align 4
  %70 = add nuw nsw i64 %64, 1
  %71 = add i64 %65, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %63, !llvm.loop !192

73:                                               ; preds = %60, %63, %23
  %74 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %74) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 32, i1 false)
  %75 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %75, align 8, !alias.scope !193
  %76 = load i32, i32* %7, align 8, !noalias !193
  %77 = icmp slt i32 %12, %76
  br i1 %77, label %78, label %79

78:                                               ; preds = %73
  tail call void @abort() #12, !noalias !193
  unreachable

79:                                               ; preds = %73
  store i32 %12, i32* %75, align 8, !alias.scope !193
  br i1 %16, label %80, label %86

80:                                               ; preds = %79
  %81 = sext i32 %12 to i64
  %82 = shl nuw nsw i64 %81, 2
  %83 = tail call i8* @_Znam(i64 %82) #10, !noalias !193
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %85 = bitcast i32** %84 to i8**
  store i8* %83, i8** %85, align 8, !alias.scope !193
  br label %86

86:                                               ; preds = %80, %79
  %87 = sub i32 %12, %76
  %88 = icmp sgt i32 %87, 0
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %88, label %90, label %139

90:                                               ; preds = %86
  %91 = bitcast %union.anon* %89 to [5 x i32]*
  %92 = getelementptr inbounds %union.anon, %union.anon* %89, i64 0, i32 0
  %93 = zext i32 %87 to i64
  %94 = add nsw i64 %93, -1
  %95 = and i64 %93, 3
  %96 = icmp ult i64 %94, 3
  br i1 %96, label %99, label %97

97:                                               ; preds = %90
  %98 = sub nsw i64 %93, %95
  br label %114

99:                                               ; preds = %114, %90
  %100 = phi i64 [ 0, %90 ], [ %136, %114 ]
  %101 = icmp eq i64 %95, 0
  br i1 %101, label %112, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %109, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %110, %102 ], [ %95, %99 ]
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %103
  %106 = load i32*, i32** %92, align 8
  %107 = getelementptr inbounds i32, i32* %106, i64 %103
  %108 = select i1 %16, i32* %107, i32* %105
  store i32 1, i32* %108, align 4
  %109 = add nuw nsw i64 %103, 1
  %110 = add i64 %104, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %102, !llvm.loop !196

112:                                              ; preds = %102, %99
  %113 = load i32, i32* %7, align 8, !noalias !193
  br label %139

114:                                              ; preds = %114, %97
  %115 = phi i64 [ 0, %97 ], [ %136, %114 ]
  %116 = phi i64 [ %98, %97 ], [ %137, %114 ]
  %117 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %115
  %118 = load i32*, i32** %92, align 8
  %119 = getelementptr inbounds i32, i32* %118, i64 %115
  %120 = select i1 %16, i32* %119, i32* %117
  store i32 1, i32* %120, align 4
  %121 = or i64 %115, 1
  %122 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %121
  %123 = load i32*, i32** %92, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 %121
  %125 = select i1 %16, i32* %124, i32* %122
  store i32 1, i32* %125, align 4
  %126 = or i64 %115, 2
  %127 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %126
  %128 = load i32*, i32** %92, align 8
  %129 = getelementptr inbounds i32, i32* %128, i64 %126
  %130 = select i1 %16, i32* %129, i32* %127
  store i32 1, i32* %130, align 4
  %131 = or i64 %115, 3
  %132 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %131
  %133 = load i32*, i32** %92, align 8
  %134 = getelementptr inbounds i32, i32* %133, i64 %131
  %135 = select i1 %16, i32* %134, i32* %132
  store i32 1, i32* %135, align 4
  %136 = add nuw nsw i64 %115, 4
  %137 = add i64 %116, -4
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %99, label %114

139:                                              ; preds = %86, %112
  %140 = phi i32 [ %113, %112 ], [ %76, %86 ]
  %141 = getelementptr inbounds %union.anon, %union.anon* %89, i64 0, i32 0
  %142 = load i32*, i32** %141, align 8, !alias.scope !193
  %143 = bitcast %union.anon* %89 to i32*
  %144 = select i1 %16, i32* %142, i32* %143
  %145 = sext i32 %87 to i64
  %146 = getelementptr inbounds i32, i32* %144, i64 %145
  %147 = bitcast i32* %146 to i8*
  %148 = icmp sgt i32 %140, 5
  %149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %150 = getelementptr inbounds %union.anon, %union.anon* %149, i64 0, i32 0
  %151 = load i32*, i32** %150, align 8, !noalias !193
  %152 = bitcast %union.anon* %149 to i32*
  %153 = select i1 %148, i32* %151, i32* %152
  %154 = bitcast i32* %153 to i8*
  %155 = sext i32 %140 to i64
  %156 = shl nsw i64 %155, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %147, i8* align 4 %154, i64 %156, i1 false) #11
  %157 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %157) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %157, i8 -86, i64 32, i1 false)
  %158 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %158, align 8, !alias.scope !197
  %159 = load i32, i32* %9, align 8, !noalias !197
  %160 = icmp slt i32 %12, %159
  br i1 %160, label %161, label %162

161:                                              ; preds = %139
  tail call void @abort() #12, !noalias !197
  unreachable

162:                                              ; preds = %139
  store i32 %12, i32* %158, align 8, !alias.scope !197
  br i1 %16, label %163, label %169

163:                                              ; preds = %162
  %164 = sext i32 %12 to i64
  %165 = shl nuw nsw i64 %164, 2
  %166 = tail call i8* @_Znam(i64 %165) #10, !noalias !197
  %167 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %168 = bitcast i32** %167 to i8**
  store i8* %166, i8** %168, align 8, !alias.scope !197
  br label %169

169:                                              ; preds = %163, %162
  %170 = sub i32 %12, %159
  %171 = icmp sgt i32 %170, 0
  %172 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %171, label %173, label %222

173:                                              ; preds = %169
  %174 = bitcast %union.anon* %172 to [5 x i32]*
  %175 = getelementptr inbounds %union.anon, %union.anon* %172, i64 0, i32 0
  %176 = zext i32 %170 to i64
  %177 = add nsw i64 %176, -1
  %178 = and i64 %176, 3
  %179 = icmp ult i64 %177, 3
  br i1 %179, label %182, label %180

180:                                              ; preds = %173
  %181 = sub nsw i64 %176, %178
  br label %197

182:                                              ; preds = %197, %173
  %183 = phi i64 [ 0, %173 ], [ %219, %197 ]
  %184 = icmp eq i64 %178, 0
  br i1 %184, label %195, label %185

185:                                              ; preds = %182, %185
  %186 = phi i64 [ %192, %185 ], [ %183, %182 ]
  %187 = phi i64 [ %193, %185 ], [ %178, %182 ]
  %188 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %186
  %189 = load i32*, i32** %175, align 8
  %190 = getelementptr inbounds i32, i32* %189, i64 %186
  %191 = select i1 %16, i32* %190, i32* %188
  store i32 1, i32* %191, align 4
  %192 = add nuw nsw i64 %186, 1
  %193 = add i64 %187, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %185, !llvm.loop !200

195:                                              ; preds = %185, %182
  %196 = load i32, i32* %9, align 8, !noalias !197
  br label %222

197:                                              ; preds = %197, %180
  %198 = phi i64 [ 0, %180 ], [ %219, %197 ]
  %199 = phi i64 [ %181, %180 ], [ %220, %197 ]
  %200 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %198
  %201 = load i32*, i32** %175, align 8
  %202 = getelementptr inbounds i32, i32* %201, i64 %198
  %203 = select i1 %16, i32* %202, i32* %200
  store i32 1, i32* %203, align 4
  %204 = or i64 %198, 1
  %205 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %204
  %206 = load i32*, i32** %175, align 8
  %207 = getelementptr inbounds i32, i32* %206, i64 %204
  %208 = select i1 %16, i32* %207, i32* %205
  store i32 1, i32* %208, align 4
  %209 = or i64 %198, 2
  %210 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %209
  %211 = load i32*, i32** %175, align 8
  %212 = getelementptr inbounds i32, i32* %211, i64 %209
  %213 = select i1 %16, i32* %212, i32* %210
  store i32 1, i32* %213, align 4
  %214 = or i64 %198, 3
  %215 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %214
  %216 = load i32*, i32** %175, align 8
  %217 = getelementptr inbounds i32, i32* %216, i64 %214
  %218 = select i1 %16, i32* %217, i32* %215
  store i32 1, i32* %218, align 4
  %219 = add nuw nsw i64 %198, 4
  %220 = add i64 %199, -4
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %182, label %197

222:                                              ; preds = %169, %195
  %223 = phi i32 [ %196, %195 ], [ %159, %169 ]
  %224 = getelementptr inbounds %union.anon, %union.anon* %172, i64 0, i32 0
  %225 = load i32*, i32** %224, align 8, !alias.scope !197
  %226 = bitcast %union.anon* %172 to i32*
  %227 = select i1 %16, i32* %225, i32* %226
  %228 = sext i32 %170 to i64
  %229 = getelementptr inbounds i32, i32* %227, i64 %228
  %230 = bitcast i32* %229 to i8*
  %231 = icmp sgt i32 %223, 5
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %233 = getelementptr inbounds %union.anon, %union.anon* %232, i64 0, i32 0
  %234 = load i32*, i32** %233, align 8, !noalias !197
  %235 = bitcast %union.anon* %232 to i32*
  %236 = select i1 %231, i32* %234, i32* %235
  %237 = bitcast i32* %236 to i8*
  %238 = sext i32 %223 to i64
  %239 = shl nsw i64 %238, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %230, i8* align 4 %237, i64 %239, i1 false) #11
  %240 = load i32, i32* %75, align 8
  %241 = load i32, i32* %158, align 8
  %242 = icmp eq i32 %240, %241
  br i1 %242, label %243, label %256

243:                                              ; preds = %222
  %244 = icmp sgt i32 %240, 5
  %245 = load i32*, i32** %141, align 8
  %246 = select i1 %244, i32* %245, i32* %143
  %247 = bitcast i32* %246 to i8*
  %248 = load i32*, i32** %224, align 8
  %249 = select i1 %244, i32* %248, i32* %226
  %250 = bitcast i32* %249 to i8*
  %251 = sext i32 %240 to i64
  %252 = shl nsw i64 %251, 2
  %253 = call i32 @bcmp(i8* %247, i8* %250, i64 %252) #11
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %243
  store i8 1, i8* %13, align 4
  br label %556

256:                                              ; preds = %222, %243
  %257 = add nsw i32 %12, -1
  %258 = icmp sgt i32 %12, 0
  br i1 %258, label %259, label %298

259:                                              ; preds = %256
  %260 = icmp sgt i32 %240, 5
  %261 = load i32*, i32** %141, align 8
  %262 = bitcast %union.anon* %89 to [5 x i32]*
  %263 = icmp sgt i32 %241, 5
  %264 = load i32*, i32** %224, align 8
  %265 = bitcast %union.anon* %172 to [5 x i32]*
  %266 = sext i32 %12 to i64
  br label %267

267:                                              ; preds = %259, %296
  %268 = phi i64 [ %266, %259 ], [ %269, %296 ]
  %269 = add nsw i64 %268, -1
  %270 = getelementptr inbounds i32, i32* %261, i64 %269
  %271 = getelementptr inbounds [5 x i32], [5 x i32]* %262, i64 0, i64 %269
  %272 = select i1 %260, i32* %270, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds i32, i32* %264, i64 %269
  %275 = getelementptr inbounds [5 x i32], [5 x i32]* %265, i64 0, i64 %269
  %276 = select i1 %263, i32* %274, i32* %275
  %277 = load i32, i32* %276, align 4
  %278 = icmp eq i32 %273, %277
  br i1 %278, label %296, label %279

279:                                              ; preds = %267
  %280 = shl i64 %269, 32
  %281 = ashr exact i64 %280, 32
  %282 = getelementptr inbounds i32, i32* %261, i64 %281
  %283 = getelementptr inbounds [5 x i32], [5 x i32]* %262, i64 0, i64 %281
  %284 = select i1 %260, i32* %282, i32* %283
  %285 = load i32, i32* %284, align 4
  %286 = icmp eq i32 %285, 1
  br i1 %286, label %287, label %288

287:                                              ; preds = %279
  store i8 2, i8* %13, align 4
  br label %298

288:                                              ; preds = %279
  %289 = getelementptr inbounds i32, i32* %264, i64 %281
  %290 = getelementptr inbounds [5 x i32], [5 x i32]* %265, i64 0, i64 %281
  %291 = select i1 %263, i32* %289, i32* %290
  %292 = load i32, i32* %291, align 4
  %293 = icmp eq i32 %292, 1
  br i1 %293, label %294, label %295

294:                                              ; preds = %288
  store i8 3, i8* %13, align 4
  br label %298

295:                                              ; preds = %288
  store i8 4, i8* %13, align 4
  br label %556

296:                                              ; preds = %267
  %297 = icmp sgt i64 %269, 0
  br i1 %297, label %267, label %298

298:                                              ; preds = %296, %256, %294, %287
  %299 = load i8, i8* %13, align 4
  %300 = and i8 %299, -2
  %301 = icmp eq i8 %300, 2
  br i1 %301, label %303, label %302

302:                                              ; preds = %298
  store i8 1, i8* %13, align 4
  br label %556

303:                                              ; preds = %298
  %304 = icmp eq i8 %299, 3
  %305 = select i1 %304, %"class.tflite::RuntimeShape"* %6, %"class.tflite::RuntimeShape"* %5
  %306 = select i1 %304, %"class.tflite::RuntimeShape"* %5, %"class.tflite::RuntimeShape"* %6
  %307 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 0
  %308 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 1
  %309 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 2
  %310 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 3
  %311 = bitcast i32* %307 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %311, align 4
  %312 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 4
  store i32 1, i32* %312, align 4
  br i1 %258, label %313, label %363

313:                                              ; preds = %303
  %314 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %315 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %316 = bitcast %union.anon* %315 to [5 x i32]*
  %317 = getelementptr inbounds %union.anon, %union.anon* %315, i64 0, i32 0
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %319 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %320 = bitcast %union.anon* %319 to [5 x i32]*
  %321 = getelementptr inbounds %union.anon, %union.anon* %319, i64 0, i32 0
  %322 = sext i32 %12 to i64
  %323 = load i32, i32* %314, align 8
  %324 = icmp sgt i32 %323, 5
  br label %325

325:                                              ; preds = %313, %355
  %326 = phi i32 [ 1, %313 ], [ %358, %355 ]
  %327 = phi i64 [ %322, %313 ], [ %329, %355 ]
  %328 = phi i32 [ %257, %313 ], [ %359, %355 ]
  %329 = add nsw i64 %327, -1
  br i1 %324, label %330, label %333

330:                                              ; preds = %325
  %331 = load i32*, i32** %317, align 8
  %332 = getelementptr inbounds i32, i32* %331, i64 %329
  br label %335

333:                                              ; preds = %325
  %334 = getelementptr inbounds [5 x i32], [5 x i32]* %316, i64 0, i64 %329
  br label %335

335:                                              ; preds = %330, %333
  %336 = phi i32* [ %332, %330 ], [ %334, %333 ]
  %337 = load i32, i32* %336, align 4
  %338 = load i32, i32* %318, align 8
  %339 = icmp sgt i32 %338, 5
  br i1 %339, label %340, label %343

340:                                              ; preds = %335
  %341 = load i32*, i32** %321, align 8
  %342 = getelementptr inbounds i32, i32* %341, i64 %329
  br label %345

343:                                              ; preds = %335
  %344 = getelementptr inbounds [5 x i32], [5 x i32]* %320, i64 0, i64 %329
  br label %345

345:                                              ; preds = %340, %343
  %346 = phi i32* [ %342, %340 ], [ %344, %343 ]
  %347 = load i32, i32* %346, align 4
  %348 = icmp eq i32 %337, %347
  br i1 %348, label %349, label %361

349:                                              ; preds = %345
  br i1 %339, label %350, label %353

350:                                              ; preds = %349
  %351 = load i32*, i32** %321, align 8
  %352 = getelementptr inbounds i32, i32* %351, i64 %329
  br label %355

353:                                              ; preds = %349
  %354 = getelementptr inbounds [5 x i32], [5 x i32]* %320, i64 0, i64 %329
  br label %355

355:                                              ; preds = %350, %353
  %356 = phi i32* [ %352, %350 ], [ %354, %353 ]
  %357 = load i32, i32* %356, align 4
  %358 = mul nsw i32 %326, %357
  store i32 %358, i32* %312, align 4
  %359 = add nsw i32 %328, -1
  %360 = icmp sgt i64 %329, 0
  br i1 %360, label %325, label %363

361:                                              ; preds = %345
  %362 = trunc i64 %329 to i32
  br label %363

363:                                              ; preds = %355, %361, %303
  %364 = phi i32 [ %257, %303 ], [ %362, %361 ], [ %359, %355 ]
  %365 = icmp sgt i32 %364, -1
  br i1 %365, label %366, label %556

366:                                              ; preds = %363
  %367 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %368 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %369 = bitcast %union.anon* %368 to [5 x i32]*
  %370 = getelementptr inbounds %union.anon, %union.anon* %368, i64 0, i32 0
  %371 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %372 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %373 = bitcast %union.anon* %372 to [5 x i32]*
  %374 = getelementptr inbounds %union.anon, %union.anon* %372, i64 0, i32 0
  %375 = sext i32 %364 to i64
  %376 = load i32, i32* %367, align 8
  %377 = icmp sgt i32 %376, 5
  br label %378

378:                                              ; preds = %366, %399
  %379 = phi i32 [ 1, %366 ], [ %402, %399 ]
  %380 = phi i64 [ %375, %366 ], [ %403, %399 ]
  %381 = phi i32 [ %364, %366 ], [ %404, %399 ]
  br i1 %377, label %382, label %385

382:                                              ; preds = %378
  %383 = load i32*, i32** %370, align 8
  %384 = getelementptr inbounds i32, i32* %383, i64 %380
  br label %387

385:                                              ; preds = %378
  %386 = getelementptr inbounds [5 x i32], [5 x i32]* %369, i64 0, i64 %380
  br label %387

387:                                              ; preds = %382, %385
  %388 = phi i32* [ %384, %382 ], [ %386, %385 ]
  %389 = load i32, i32* %388, align 4
  %390 = icmp eq i32 %389, 1
  br i1 %390, label %391, label %406

391:                                              ; preds = %387
  %392 = load i32, i32* %371, align 8
  %393 = icmp sgt i32 %392, 5
  br i1 %393, label %394, label %397

394:                                              ; preds = %391
  %395 = load i32*, i32** %374, align 8
  %396 = getelementptr inbounds i32, i32* %395, i64 %380
  br label %399

397:                                              ; preds = %391
  %398 = getelementptr inbounds [5 x i32], [5 x i32]* %373, i64 0, i64 %380
  br label %399

399:                                              ; preds = %394, %397
  %400 = phi i32* [ %396, %394 ], [ %398, %397 ]
  %401 = load i32, i32* %400, align 4
  %402 = mul nsw i32 %379, %401
  store i32 %402, i32* %310, align 4
  %403 = add nsw i64 %380, -1
  %404 = add nsw i32 %381, -1
  %405 = icmp sgt i64 %380, 0
  br i1 %405, label %378, label %408

406:                                              ; preds = %387
  %407 = trunc i64 %380 to i32
  br label %408

408:                                              ; preds = %399, %406
  %409 = phi i32 [ %407, %406 ], [ %404, %399 ]
  %410 = icmp sgt i32 %409, -1
  br i1 %410, label %411, label %556

411:                                              ; preds = %408
  %412 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %413 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %414 = bitcast %union.anon* %413 to [5 x i32]*
  %415 = getelementptr inbounds %union.anon, %union.anon* %413, i64 0, i32 0
  %416 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %417 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %418 = bitcast %union.anon* %417 to [5 x i32]*
  %419 = getelementptr inbounds %union.anon, %union.anon* %417, i64 0, i32 0
  %420 = sext i32 %409 to i64
  %421 = load i32, i32* %412, align 8
  %422 = icmp sgt i32 %421, 5
  br label %423

423:                                              ; preds = %411, %452
  %424 = phi i32 [ 1, %411 ], [ %455, %452 ]
  %425 = phi i64 [ %420, %411 ], [ %456, %452 ]
  %426 = phi i32 [ %409, %411 ], [ %457, %452 ]
  br i1 %422, label %427, label %430

427:                                              ; preds = %423
  %428 = load i32*, i32** %415, align 8
  %429 = getelementptr inbounds i32, i32* %428, i64 %425
  br label %432

430:                                              ; preds = %423
  %431 = getelementptr inbounds [5 x i32], [5 x i32]* %414, i64 0, i64 %425
  br label %432

432:                                              ; preds = %427, %430
  %433 = phi i32* [ %429, %427 ], [ %431, %430 ]
  %434 = load i32, i32* %433, align 4
  %435 = load i32, i32* %416, align 8
  %436 = icmp sgt i32 %435, 5
  br i1 %436, label %437, label %440

437:                                              ; preds = %432
  %438 = load i32*, i32** %419, align 8
  %439 = getelementptr inbounds i32, i32* %438, i64 %425
  br label %442

440:                                              ; preds = %432
  %441 = getelementptr inbounds [5 x i32], [5 x i32]* %418, i64 0, i64 %425
  br label %442

442:                                              ; preds = %437, %440
  %443 = phi i32* [ %439, %437 ], [ %441, %440 ]
  %444 = load i32, i32* %443, align 4
  %445 = icmp eq i32 %434, %444
  br i1 %445, label %446, label %459

446:                                              ; preds = %442
  br i1 %422, label %447, label %450

447:                                              ; preds = %446
  %448 = load i32*, i32** %415, align 8
  %449 = getelementptr inbounds i32, i32* %448, i64 %425
  br label %452

450:                                              ; preds = %446
  %451 = getelementptr inbounds [5 x i32], [5 x i32]* %414, i64 0, i64 %425
  br label %452

452:                                              ; preds = %447, %450
  %453 = phi i32* [ %449, %447 ], [ %451, %450 ]
  %454 = load i32, i32* %453, align 4
  %455 = mul nsw i32 %424, %454
  store i32 %455, i32* %309, align 4
  %456 = add nsw i64 %425, -1
  %457 = add nsw i32 %426, -1
  %458 = icmp sgt i64 %425, 0
  br i1 %458, label %423, label %461

459:                                              ; preds = %442
  %460 = trunc i64 %425 to i32
  br label %461

461:                                              ; preds = %452, %459
  %462 = phi i32 [ %460, %459 ], [ %457, %452 ]
  %463 = icmp sgt i32 %462, -1
  br i1 %463, label %464, label %556

464:                                              ; preds = %461
  %465 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %466 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %467 = bitcast %union.anon* %466 to [5 x i32]*
  %468 = getelementptr inbounds %union.anon, %union.anon* %466, i64 0, i32 0
  %469 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %470 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %471 = bitcast %union.anon* %470 to [5 x i32]*
  %472 = getelementptr inbounds %union.anon, %union.anon* %470, i64 0, i32 0
  %473 = sext i32 %462 to i64
  %474 = load i32, i32* %465, align 8
  %475 = icmp sgt i32 %474, 5
  br label %476

476:                                              ; preds = %464, %497
  %477 = phi i32 [ 1, %464 ], [ %500, %497 ]
  %478 = phi i64 [ %473, %464 ], [ %501, %497 ]
  %479 = phi i32 [ %462, %464 ], [ %502, %497 ]
  br i1 %475, label %480, label %483

480:                                              ; preds = %476
  %481 = load i32*, i32** %468, align 8
  %482 = getelementptr inbounds i32, i32* %481, i64 %478
  br label %485

483:                                              ; preds = %476
  %484 = getelementptr inbounds [5 x i32], [5 x i32]* %467, i64 0, i64 %478
  br label %485

485:                                              ; preds = %480, %483
  %486 = phi i32* [ %482, %480 ], [ %484, %483 ]
  %487 = load i32, i32* %486, align 4
  %488 = icmp eq i32 %487, 1
  br i1 %488, label %489, label %504

489:                                              ; preds = %485
  %490 = load i32, i32* %469, align 8
  %491 = icmp sgt i32 %490, 5
  br i1 %491, label %492, label %495

492:                                              ; preds = %489
  %493 = load i32*, i32** %472, align 8
  %494 = getelementptr inbounds i32, i32* %493, i64 %478
  br label %497

495:                                              ; preds = %489
  %496 = getelementptr inbounds [5 x i32], [5 x i32]* %471, i64 0, i64 %478
  br label %497

497:                                              ; preds = %492, %495
  %498 = phi i32* [ %494, %492 ], [ %496, %495 ]
  %499 = load i32, i32* %498, align 4
  %500 = mul nsw i32 %477, %499
  store i32 %500, i32* %308, align 4
  %501 = add nsw i64 %478, -1
  %502 = add nsw i32 %479, -1
  %503 = icmp sgt i64 %478, 0
  br i1 %503, label %476, label %506

504:                                              ; preds = %485
  %505 = trunc i64 %478 to i32
  br label %506

506:                                              ; preds = %497, %504
  %507 = phi i32 [ %505, %504 ], [ %502, %497 ]
  %508 = icmp sgt i32 %507, -1
  br i1 %508, label %509, label %556

509:                                              ; preds = %506
  %510 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %511 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %512 = bitcast %union.anon* %511 to [5 x i32]*
  %513 = getelementptr inbounds %union.anon, %union.anon* %511, i64 0, i32 0
  %514 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %515 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %516 = bitcast %union.anon* %515 to [5 x i32]*
  %517 = getelementptr inbounds %union.anon, %union.anon* %515, i64 0, i32 0
  %518 = sext i32 %507 to i64
  %519 = load i32, i32* %510, align 8
  %520 = icmp sgt i32 %519, 5
  br label %521

521:                                              ; preds = %509, %549
  %522 = phi i32 [ 1, %509 ], [ %552, %549 ]
  %523 = phi i64 [ %518, %509 ], [ %553, %549 ]
  br i1 %520, label %524, label %527

524:                                              ; preds = %521
  %525 = load i32*, i32** %513, align 8
  %526 = getelementptr inbounds i32, i32* %525, i64 %523
  br label %529

527:                                              ; preds = %521
  %528 = getelementptr inbounds [5 x i32], [5 x i32]* %512, i64 0, i64 %523
  br label %529

529:                                              ; preds = %524, %527
  %530 = phi i32* [ %526, %524 ], [ %528, %527 ]
  %531 = load i32, i32* %530, align 4
  %532 = load i32, i32* %514, align 8
  %533 = icmp sgt i32 %532, 5
  br i1 %533, label %534, label %537

534:                                              ; preds = %529
  %535 = load i32*, i32** %517, align 8
  %536 = getelementptr inbounds i32, i32* %535, i64 %523
  br label %539

537:                                              ; preds = %529
  %538 = getelementptr inbounds [5 x i32], [5 x i32]* %516, i64 0, i64 %523
  br label %539

539:                                              ; preds = %534, %537
  %540 = phi i32* [ %536, %534 ], [ %538, %537 ]
  %541 = load i32, i32* %540, align 4
  %542 = icmp eq i32 %531, %541
  br i1 %542, label %543, label %555

543:                                              ; preds = %539
  br i1 %533, label %544, label %547

544:                                              ; preds = %543
  %545 = load i32*, i32** %517, align 8
  %546 = getelementptr inbounds i32, i32* %545, i64 %523
  br label %549

547:                                              ; preds = %543
  %548 = getelementptr inbounds [5 x i32], [5 x i32]* %516, i64 0, i64 %523
  br label %549

549:                                              ; preds = %544, %547
  %550 = phi i32* [ %546, %544 ], [ %548, %547 ]
  %551 = load i32, i32* %550, align 4
  %552 = mul nsw i32 %522, %551
  store i32 %552, i32* %307, align 4
  %553 = add nsw i64 %523, -1
  %554 = icmp sgt i64 %523, 0
  br i1 %554, label %521, label %556

555:                                              ; preds = %539
  store i8 4, i8* %13, align 4
  br label %556

556:                                              ; preds = %549, %363, %408, %461, %506, %555, %295, %302, %255
  %557 = phi i1 [ false, %255 ], [ false, %302 ], [ true, %295 ], [ true, %555 ], [ true, %506 ], [ true, %461 ], [ true, %408 ], [ true, %363 ], [ true, %549 ]
  %558 = icmp sgt i32 %241, 5
  br i1 %558, label %559, label %565

559:                                              ; preds = %556
  %560 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %561 = load i32*, i32** %560, align 8
  %562 = icmp eq i32* %561, null
  br i1 %562, label %565, label %563

563:                                              ; preds = %559
  %564 = bitcast i32* %561 to i8*
  tail call void @_ZdaPv(i8* %564) #10
  br label %565

565:                                              ; preds = %556, %559, %563
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %157) #11
  %566 = icmp sgt i32 %240, 5
  br i1 %566, label %567, label %573

567:                                              ; preds = %565
  %568 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %569 = load i32*, i32** %568, align 8
  %570 = icmp eq i32* %569, null
  br i1 %570, label %573, label %571

571:                                              ; preds = %567
  %572 = bitcast i32* %569 to i8*
  tail call void @_ZdaPv(i8* %572) #10
  br label %573

573:                                              ; preds = %565, %567, %571
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %74) #11
  br i1 %16, label %574, label %580

574:                                              ; preds = %573
  %575 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %576 = load i32*, i32** %575, align 8
  %577 = icmp eq i32* %576, null
  br i1 %577, label %580, label %578

578:                                              ; preds = %574
  %579 = bitcast i32* %576 to i8*
  tail call void @_ZdaPv(i8* %579) #10
  br label %580

580:                                              ; preds = %573, %574, %578
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #11
  ret i1 %557
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops18BroadcastMul4DSlowIiEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*) local_unnamed_addr #3 comdat {
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::NdArrayDesc", align 4
  %11 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 11
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 12
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %16 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %17, align 8, !alias.scope !201
  %18 = load i32, i32* %15, align 8, !noalias !201
  %19 = icmp sgt i32 %18, 4
  br i1 %19, label %20, label %21

20:                                               ; preds = %7
  tail call void @abort() #12, !noalias !201
  unreachable

21:                                               ; preds = %7
  store i32 4, i32* %17, align 8, !alias.scope !201
  %22 = sub i32 4, %18
  %23 = icmp sgt i32 %22, 0
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %23, label %25, label %105

25:                                               ; preds = %21
  %26 = bitcast %union.anon* %24 to [5 x i32]*
  %27 = zext i32 %22 to i64
  %28 = icmp ult i32 %22, 8
  br i1 %28, label %98, label %29

29:                                               ; preds = %25
  %30 = and i64 %27, 4294967288
  %31 = add nsw i64 %30, -8
  %32 = lshr exact i64 %31, 3
  %33 = add nuw nsw i64 %32, 1
  %34 = and i64 %33, 7
  %35 = icmp ult i64 %31, 56
  br i1 %35, label %83, label %36

36:                                               ; preds = %29
  %37 = sub nsw i64 %33, %34
  br label %38

38:                                               ; preds = %38, %36
  %39 = phi i64 [ 0, %36 ], [ %80, %38 ]
  %40 = phi i64 [ %37, %36 ], [ %81, %38 ]
  %41 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %39
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !201
  %43 = getelementptr inbounds i32, i32* %41, i64 4
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !201
  %45 = or i64 %39, 8
  %46 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %45
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !201
  %48 = getelementptr inbounds i32, i32* %46, i64 4
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !201
  %50 = or i64 %39, 16
  %51 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %50
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !201
  %53 = getelementptr inbounds i32, i32* %51, i64 4
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !201
  %55 = or i64 %39, 24
  %56 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %55
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !201
  %58 = getelementptr inbounds i32, i32* %56, i64 4
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !201
  %60 = or i64 %39, 32
  %61 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %60
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !201
  %63 = getelementptr inbounds i32, i32* %61, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !201
  %65 = or i64 %39, 40
  %66 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %65
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !201
  %68 = getelementptr inbounds i32, i32* %66, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !201
  %70 = or i64 %39, 48
  %71 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %70
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !201
  %73 = getelementptr inbounds i32, i32* %71, i64 4
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !201
  %75 = or i64 %39, 56
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %75
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !201
  %78 = getelementptr inbounds i32, i32* %76, i64 4
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %79, align 8, !alias.scope !201
  %80 = add i64 %39, 64
  %81 = add i64 %40, -8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %38, !llvm.loop !204

83:                                               ; preds = %38, %29
  %84 = phi i64 [ 0, %29 ], [ %80, %38 ]
  %85 = icmp eq i64 %34, 0
  br i1 %85, label %96, label %86

86:                                               ; preds = %83, %86
  %87 = phi i64 [ %93, %86 ], [ %84, %83 ]
  %88 = phi i64 [ %94, %86 ], [ %34, %83 ]
  %89 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %87
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !201
  %91 = getelementptr inbounds i32, i32* %89, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %92, align 8, !alias.scope !201
  %93 = add i64 %87, 8
  %94 = add i64 %88, -1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %86, !llvm.loop !205

96:                                               ; preds = %86, %83
  %97 = icmp eq i64 %30, %27
  br i1 %97, label %105, label %98

98:                                               ; preds = %96, %25
  %99 = phi i64 [ 0, %25 ], [ %30, %96 ]
  br label %100

100:                                              ; preds = %98, %100
  %101 = phi i64 [ %103, %100 ], [ %99, %98 ]
  %102 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %101
  store i32 1, i32* %102, align 4, !alias.scope !201
  %103 = add nuw nsw i64 %101, 1
  %104 = icmp eq i64 %103, %27
  br i1 %104, label %105, label %100, !llvm.loop !206

105:                                              ; preds = %100, %96, %21
  %106 = getelementptr inbounds %union.anon, %union.anon* %24, i64 0, i32 0
  %107 = bitcast %union.anon* %24 to i32*
  %108 = sext i32 %22 to i64
  %109 = getelementptr inbounds i32, i32* %107, i64 %108
  %110 = bitcast i32* %109 to i8*
  %111 = icmp sgt i32 %18, 5
  %112 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %113 = getelementptr inbounds %union.anon, %union.anon* %112, i64 0, i32 0
  %114 = load i32*, i32** %113, align 8, !noalias !201
  %115 = bitcast %union.anon* %112 to i32*
  %116 = select i1 %111, i32* %114, i32* %115
  %117 = bitcast i32* %116 to i8*
  %118 = sext i32 %18 to i64
  %119 = shl nsw i64 %118, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %117, i64 %119, i1 false) #11
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %120) #11
  %121 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 0
  %122 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 1
  %123 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 2
  %124 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 3
  %125 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  %126 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %126, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %125) #11
  %127 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 0
  %128 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 1
  %129 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 2
  %130 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 3
  %131 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %131, i8 -86, i64 32, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %9, %"struct.tflite::NdArrayDesc"* nonnull %10)
  %132 = load i32, i32* %17, align 8
  %133 = icmp sgt i32 %132, 5
  %134 = load i32*, i32** %106, align 8
  %135 = select i1 %133, i32* %134, i32* %107
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %159

138:                                              ; preds = %105
  %139 = bitcast %union.anon* %24 to [5 x i32]*
  %140 = getelementptr inbounds [5 x i32], [5 x i32]* %139, i64 0, i64 1
  %141 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %142 = bitcast [16 x i8]* %141 to i32*
  %143 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %144 = bitcast i8* %143 to i32*
  %145 = sitofp i32 %12 to float
  %146 = sitofp i32 %14 to float
  %147 = getelementptr inbounds i32, i32* %107, i64 1
  %148 = getelementptr inbounds i32, i32* %134, i64 1
  %149 = select i1 %133, i32* %148, i32* %140
  %150 = getelementptr inbounds i32, i32* %134, i64 2
  %151 = select i1 %133, i32* %150, i32* %142
  %152 = getelementptr inbounds i32, i32* %134, i64 3
  %153 = select i1 %133, i32* %152, i32* %144
  br label %154

154:                                              ; preds = %138, %178
  %155 = phi i32 [ %136, %138 ], [ %179, %178 ]
  %156 = phi i32 [ 0, %138 ], [ %180, %178 ]
  %157 = load i32, i32* %149, align 4
  %158 = icmp sgt i32 %157, 0
  br i1 %158, label %166, label %178

159:                                              ; preds = %178, %105
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %125) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %120) #11
  %160 = xor i1 %133, true
  %161 = icmp eq i32* %134, null
  %162 = or i1 %161, %160
  br i1 %162, label %165, label %163

163:                                              ; preds = %159
  %164 = bitcast i32* %134 to i8*
  call void @_ZdaPv(i8* %164) #10
  br label %165

165:                                              ; preds = %159, %163
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #11
  ret void

166:                                              ; preds = %154, %213
  %167 = phi i32 [ %214, %213 ], [ %157, %154 ]
  %168 = phi i32 [ %215, %213 ], [ 0, %154 ]
  %169 = load i32, i32* %151, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %213

171:                                              ; preds = %166
  %172 = load i32, i32* %147, align 4
  %173 = mul nsw i32 %172, %156
  %174 = add nsw i32 %173, %168
  %175 = load i32, i32* %153, align 4
  br label %182

176:                                              ; preds = %213
  %177 = load i32, i32* %135, align 4
  br label %178

178:                                              ; preds = %176, %154
  %179 = phi i32 [ %177, %176 ], [ %155, %154 ]
  %180 = add nuw nsw i32 %156, 1
  %181 = icmp slt i32 %180, %179
  br i1 %181, label %154, label %159

182:                                              ; preds = %171, %219
  %183 = phi i32 [ %169, %171 ], [ %220, %219 ]
  %184 = phi i32 [ %175, %171 ], [ %221, %219 ]
  %185 = phi i32 [ 0, %171 ], [ %222, %219 ]
  %186 = icmp sgt i32 %184, 0
  br i1 %186, label %187, label %219

187:                                              ; preds = %182
  %188 = load i32, i32* %142, align 8
  %189 = mul nsw i32 %174, %188
  %190 = add nsw i32 %189, %185
  %191 = load i32, i32* %121, align 4
  %192 = load i32, i32* %122, align 4
  %193 = load i32, i32* %123, align 4
  %194 = load i32, i32* %124, align 4
  %195 = load i32, i32* %127, align 4
  %196 = load i32, i32* %128, align 4
  %197 = load i32, i32* %129, align 4
  %198 = load i32, i32* %130, align 4
  %199 = load i32, i32* %144, align 4
  %200 = mul nsw i32 %191, %156
  %201 = mul nsw i32 %192, %168
  %202 = add nsw i32 %201, %200
  %203 = mul nsw i32 %193, %185
  %204 = add nsw i32 %202, %203
  %205 = mul nsw i32 %195, %156
  %206 = mul nsw i32 %196, %168
  %207 = add nsw i32 %206, %205
  %208 = mul nsw i32 %197, %185
  %209 = add nsw i32 %207, %208
  %210 = mul nsw i32 %190, %199
  br label %224

211:                                              ; preds = %219
  %212 = load i32, i32* %149, align 4
  br label %213

213:                                              ; preds = %211, %166
  %214 = phi i32 [ %212, %211 ], [ %167, %166 ]
  %215 = add nuw nsw i32 %168, 1
  %216 = icmp slt i32 %215, %214
  br i1 %216, label %166, label %176

217:                                              ; preds = %224
  %218 = load i32, i32* %151, align 4
  br label %219

219:                                              ; preds = %217, %182
  %220 = phi i32 [ %218, %217 ], [ %183, %182 ]
  %221 = phi i32 [ %247, %217 ], [ %184, %182 ]
  %222 = add nuw nsw i32 %185, 1
  %223 = icmp slt i32 %222, %220
  br i1 %223, label %182, label %211

224:                                              ; preds = %187, %224
  %225 = phi i32 [ 0, %187 ], [ %246, %224 ]
  %226 = mul nsw i32 %194, %225
  %227 = add nsw i32 %204, %226
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds i32, i32* %2, i64 %228
  %230 = load i32, i32* %229, align 4
  %231 = mul nsw i32 %198, %225
  %232 = add nsw i32 %209, %231
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds i32, i32* %4, i64 %233
  %235 = load i32, i32* %234, align 4
  %236 = mul nsw i32 %235, %230
  %237 = sitofp i32 %236 to float
  %238 = fcmp olt float %237, %145
  %239 = select i1 %238, float %145, float %237
  %240 = fcmp ogt float %239, %146
  %241 = select i1 %240, float %146, float %239
  %242 = fptosi float %241 to i32
  %243 = add nsw i32 %210, %225
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds i32, i32* %6, i64 %244
  store i32 %242, i32* %245, align 4
  %246 = add nuw nsw i32 %225, 1
  %247 = load i32, i32* %153, align 4
  %248 = icmp slt i32 %246, %247
  br i1 %248, label %224, label %217
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops18BroadcastMul4DSlowIfEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #3 comdat {
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::NdArrayDesc", align 4
  %11 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 13
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 14
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %16 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %17, align 8, !alias.scope !207
  %18 = load i32, i32* %15, align 8, !noalias !207
  %19 = icmp sgt i32 %18, 4
  br i1 %19, label %20, label %21

20:                                               ; preds = %7
  tail call void @abort() #12, !noalias !207
  unreachable

21:                                               ; preds = %7
  store i32 4, i32* %17, align 8, !alias.scope !207
  %22 = sub i32 4, %18
  %23 = icmp sgt i32 %22, 0
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %23, label %25, label %105

25:                                               ; preds = %21
  %26 = bitcast %union.anon* %24 to [5 x i32]*
  %27 = zext i32 %22 to i64
  %28 = icmp ult i32 %22, 8
  br i1 %28, label %98, label %29

29:                                               ; preds = %25
  %30 = and i64 %27, 4294967288
  %31 = add nsw i64 %30, -8
  %32 = lshr exact i64 %31, 3
  %33 = add nuw nsw i64 %32, 1
  %34 = and i64 %33, 7
  %35 = icmp ult i64 %31, 56
  br i1 %35, label %83, label %36

36:                                               ; preds = %29
  %37 = sub nsw i64 %33, %34
  br label %38

38:                                               ; preds = %38, %36
  %39 = phi i64 [ 0, %36 ], [ %80, %38 ]
  %40 = phi i64 [ %37, %36 ], [ %81, %38 ]
  %41 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %39
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !207
  %43 = getelementptr inbounds i32, i32* %41, i64 4
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !207
  %45 = or i64 %39, 8
  %46 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %45
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !207
  %48 = getelementptr inbounds i32, i32* %46, i64 4
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !207
  %50 = or i64 %39, 16
  %51 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %50
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !207
  %53 = getelementptr inbounds i32, i32* %51, i64 4
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !207
  %55 = or i64 %39, 24
  %56 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %55
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !207
  %58 = getelementptr inbounds i32, i32* %56, i64 4
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !207
  %60 = or i64 %39, 32
  %61 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %60
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !207
  %63 = getelementptr inbounds i32, i32* %61, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !207
  %65 = or i64 %39, 40
  %66 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %65
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !207
  %68 = getelementptr inbounds i32, i32* %66, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !207
  %70 = or i64 %39, 48
  %71 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %70
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !207
  %73 = getelementptr inbounds i32, i32* %71, i64 4
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !207
  %75 = or i64 %39, 56
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %75
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !207
  %78 = getelementptr inbounds i32, i32* %76, i64 4
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %79, align 8, !alias.scope !207
  %80 = add i64 %39, 64
  %81 = add i64 %40, -8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %38, !llvm.loop !210

83:                                               ; preds = %38, %29
  %84 = phi i64 [ 0, %29 ], [ %80, %38 ]
  %85 = icmp eq i64 %34, 0
  br i1 %85, label %96, label %86

86:                                               ; preds = %83, %86
  %87 = phi i64 [ %93, %86 ], [ %84, %83 ]
  %88 = phi i64 [ %94, %86 ], [ %34, %83 ]
  %89 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %87
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !207
  %91 = getelementptr inbounds i32, i32* %89, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %92, align 8, !alias.scope !207
  %93 = add i64 %87, 8
  %94 = add i64 %88, -1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %86, !llvm.loop !211

96:                                               ; preds = %86, %83
  %97 = icmp eq i64 %30, %27
  br i1 %97, label %105, label %98

98:                                               ; preds = %96, %25
  %99 = phi i64 [ 0, %25 ], [ %30, %96 ]
  br label %100

100:                                              ; preds = %98, %100
  %101 = phi i64 [ %103, %100 ], [ %99, %98 ]
  %102 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %101
  store i32 1, i32* %102, align 4, !alias.scope !207
  %103 = add nuw nsw i64 %101, 1
  %104 = icmp eq i64 %103, %27
  br i1 %104, label %105, label %100, !llvm.loop !212

105:                                              ; preds = %100, %96, %21
  %106 = getelementptr inbounds %union.anon, %union.anon* %24, i64 0, i32 0
  %107 = bitcast %union.anon* %24 to i32*
  %108 = sext i32 %22 to i64
  %109 = getelementptr inbounds i32, i32* %107, i64 %108
  %110 = bitcast i32* %109 to i8*
  %111 = icmp sgt i32 %18, 5
  %112 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %113 = getelementptr inbounds %union.anon, %union.anon* %112, i64 0, i32 0
  %114 = load i32*, i32** %113, align 8, !noalias !207
  %115 = bitcast %union.anon* %112 to i32*
  %116 = select i1 %111, i32* %114, i32* %115
  %117 = bitcast i32* %116 to i8*
  %118 = sext i32 %18 to i64
  %119 = shl nsw i64 %118, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %117, i64 %119, i1 false) #11
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %120) #11
  %121 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 0
  %122 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 1
  %123 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 2
  %124 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 3
  %125 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  %126 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %126, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %125) #11
  %127 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 0
  %128 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 1
  %129 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 2
  %130 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 3
  %131 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %131, i8 -86, i64 32, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %9, %"struct.tflite::NdArrayDesc"* nonnull %10)
  %132 = load i32, i32* %17, align 8
  %133 = icmp sgt i32 %132, 5
  %134 = load i32*, i32** %106, align 8
  %135 = select i1 %133, i32* %134, i32* %107
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %157

138:                                              ; preds = %105
  %139 = bitcast %union.anon* %24 to [5 x i32]*
  %140 = getelementptr inbounds [5 x i32], [5 x i32]* %139, i64 0, i64 1
  %141 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %142 = bitcast [16 x i8]* %141 to i32*
  %143 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %144 = bitcast i8* %143 to i32*
  %145 = getelementptr inbounds i32, i32* %107, i64 1
  %146 = getelementptr inbounds i32, i32* %134, i64 1
  %147 = select i1 %133, i32* %146, i32* %140
  %148 = getelementptr inbounds i32, i32* %134, i64 2
  %149 = select i1 %133, i32* %148, i32* %142
  %150 = getelementptr inbounds i32, i32* %134, i64 3
  %151 = select i1 %133, i32* %150, i32* %144
  br label %152

152:                                              ; preds = %138, %176
  %153 = phi i32 [ %136, %138 ], [ %177, %176 ]
  %154 = phi i32 [ 0, %138 ], [ %178, %176 ]
  %155 = load i32, i32* %147, align 4
  %156 = icmp sgt i32 %155, 0
  br i1 %156, label %164, label %176

157:                                              ; preds = %176, %105
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %125) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %120) #11
  %158 = xor i1 %133, true
  %159 = icmp eq i32* %134, null
  %160 = or i1 %159, %158
  br i1 %160, label %163, label %161

161:                                              ; preds = %157
  %162 = bitcast i32* %134 to i8*
  call void @_ZdaPv(i8* %162) #10
  br label %163

163:                                              ; preds = %157, %161
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #11
  ret void

164:                                              ; preds = %152, %211
  %165 = phi i32 [ %212, %211 ], [ %155, %152 ]
  %166 = phi i32 [ %213, %211 ], [ 0, %152 ]
  %167 = load i32, i32* %149, align 4
  %168 = icmp sgt i32 %167, 0
  br i1 %168, label %169, label %211

169:                                              ; preds = %164
  %170 = load i32, i32* %145, align 4
  %171 = mul nsw i32 %170, %154
  %172 = add nsw i32 %171, %166
  %173 = load i32, i32* %151, align 4
  br label %180

174:                                              ; preds = %211
  %175 = load i32, i32* %135, align 4
  br label %176

176:                                              ; preds = %174, %152
  %177 = phi i32 [ %175, %174 ], [ %153, %152 ]
  %178 = add nuw nsw i32 %154, 1
  %179 = icmp slt i32 %178, %177
  br i1 %179, label %152, label %157

180:                                              ; preds = %169, %217
  %181 = phi i32 [ %167, %169 ], [ %218, %217 ]
  %182 = phi i32 [ %173, %169 ], [ %219, %217 ]
  %183 = phi i32 [ 0, %169 ], [ %220, %217 ]
  %184 = icmp sgt i32 %182, 0
  br i1 %184, label %185, label %217

185:                                              ; preds = %180
  %186 = load i32, i32* %142, align 8
  %187 = mul nsw i32 %172, %186
  %188 = add nsw i32 %187, %183
  %189 = load i32, i32* %121, align 4
  %190 = load i32, i32* %122, align 4
  %191 = load i32, i32* %123, align 4
  %192 = load i32, i32* %124, align 4
  %193 = load i32, i32* %127, align 4
  %194 = load i32, i32* %128, align 4
  %195 = load i32, i32* %129, align 4
  %196 = load i32, i32* %130, align 4
  %197 = load i32, i32* %144, align 4
  %198 = mul nsw i32 %189, %154
  %199 = mul nsw i32 %190, %166
  %200 = add nsw i32 %199, %198
  %201 = mul nsw i32 %191, %183
  %202 = add nsw i32 %200, %201
  %203 = mul nsw i32 %193, %154
  %204 = mul nsw i32 %194, %166
  %205 = add nsw i32 %204, %203
  %206 = mul nsw i32 %195, %183
  %207 = add nsw i32 %205, %206
  %208 = mul nsw i32 %188, %197
  br label %222

209:                                              ; preds = %217
  %210 = load i32, i32* %147, align 4
  br label %211

211:                                              ; preds = %209, %164
  %212 = phi i32 [ %210, %209 ], [ %165, %164 ]
  %213 = add nuw nsw i32 %166, 1
  %214 = icmp slt i32 %213, %212
  br i1 %214, label %164, label %174

215:                                              ; preds = %222
  %216 = load i32, i32* %149, align 4
  br label %217

217:                                              ; preds = %215, %180
  %218 = phi i32 [ %216, %215 ], [ %181, %180 ]
  %219 = phi i32 [ %243, %215 ], [ %182, %180 ]
  %220 = add nuw nsw i32 %183, 1
  %221 = icmp slt i32 %220, %218
  br i1 %221, label %180, label %209

222:                                              ; preds = %185, %222
  %223 = phi i32 [ 0, %185 ], [ %242, %222 ]
  %224 = mul nsw i32 %192, %223
  %225 = add nsw i32 %202, %224
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds float, float* %2, i64 %226
  %228 = load float, float* %227, align 4
  %229 = mul nsw i32 %196, %223
  %230 = add nsw i32 %207, %229
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds float, float* %4, i64 %231
  %233 = load float, float* %232, align 4
  %234 = fmul float %228, %233
  %235 = fcmp olt float %234, %12
  %236 = select i1 %235, float %12, float %234
  %237 = fcmp ogt float %236, %14
  %238 = select i1 %237, float %14, float %236
  %239 = add nsw i32 %208, %223
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds float, float* %6, i64 %240
  store float %238, float* %241, align 4
  %242 = add nuw nsw i32 %223, 1
  %243 = load i32, i32* %151, align 4
  %244 = icmp slt i32 %242, %243
  br i1 %244, label %222, label %215
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"*) local_unnamed_addr #7 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %8, align 8, !alias.scope !213
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8, !noalias !213
  %11 = icmp sgt i32 %10, 4
  br i1 %11, label %12, label %13

12:                                               ; preds = %4
  tail call void @abort() #12, !noalias !213
  unreachable

13:                                               ; preds = %4
  store i32 4, i32* %8, align 8, !alias.scope !213
  %14 = sub i32 4, %10
  %15 = icmp sgt i32 %14, 0
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %15, label %17, label %97

17:                                               ; preds = %13
  %18 = bitcast %union.anon* %16 to [5 x i32]*
  %19 = zext i32 %14 to i64
  %20 = icmp ult i32 %14, 8
  br i1 %20, label %90, label %21

21:                                               ; preds = %17
  %22 = and i64 %19, 4294967288
  %23 = add nsw i64 %22, -8
  %24 = lshr exact i64 %23, 3
  %25 = add nuw nsw i64 %24, 1
  %26 = and i64 %25, 7
  %27 = icmp ult i64 %23, 56
  br i1 %27, label %75, label %28

28:                                               ; preds = %21
  %29 = sub nsw i64 %25, %26
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %72, %30 ]
  %32 = phi i64 [ %29, %28 ], [ %73, %30 ]
  %33 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %31
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %34, align 8, !alias.scope !213
  %35 = getelementptr inbounds i32, i32* %33, i64 4
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !213
  %37 = or i64 %31, 8
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %37
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !213
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !213
  %42 = or i64 %31, 16
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !213
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !213
  %47 = or i64 %31, 24
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !213
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !213
  %52 = or i64 %31, 32
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !213
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !213
  %57 = or i64 %31, 40
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !213
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !213
  %62 = or i64 %31, 48
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !213
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !213
  %67 = or i64 %31, 56
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !213
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !213
  %72 = add i64 %31, 64
  %73 = add i64 %32, -8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %30, !llvm.loop !216

75:                                               ; preds = %30, %21
  %76 = phi i64 [ 0, %21 ], [ %72, %30 ]
  %77 = icmp eq i64 %26, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %75, %78
  %79 = phi i64 [ %85, %78 ], [ %76, %75 ]
  %80 = phi i64 [ %86, %78 ], [ %26, %75 ]
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %79
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !213
  %83 = getelementptr inbounds i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !213
  %85 = add i64 %79, 8
  %86 = add i64 %80, -1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %78, !llvm.loop !217

88:                                               ; preds = %78, %75
  %89 = icmp eq i64 %22, %19
  br i1 %89, label %97, label %90

90:                                               ; preds = %88, %17
  %91 = phi i64 [ 0, %17 ], [ %22, %88 ]
  br label %92

92:                                               ; preds = %90, %92
  %93 = phi i64 [ %95, %92 ], [ %91, %90 ]
  %94 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %93
  store i32 1, i32* %94, align 4, !alias.scope !213
  %95 = add nuw nsw i64 %93, 1
  %96 = icmp eq i64 %95, %19
  br i1 %96, label %97, label %92, !llvm.loop !218

97:                                               ; preds = %92, %88, %13
  %98 = getelementptr inbounds %union.anon, %union.anon* %16, i64 0, i32 0
  %99 = bitcast %union.anon* %16 to i32*
  %100 = sext i32 %14 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = icmp sgt i32 %10, 5
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %105 = getelementptr inbounds %union.anon, %union.anon* %104, i64 0, i32 0
  %106 = load i32*, i32** %105, align 8, !noalias !213
  %107 = bitcast %union.anon* %104 to i32*
  %108 = select i1 %103, i32* %106, i32* %107
  %109 = bitcast i32* %108 to i8*
  %110 = sext i32 %10 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 %111, i1 false) #11
  %112 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %112) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 32, i1 false)
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %113, align 8, !alias.scope !219
  %114 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %115 = load i32, i32* %114, align 8, !noalias !219
  %116 = icmp sgt i32 %115, 4
  br i1 %116, label %117, label %118

117:                                              ; preds = %97
  tail call void @abort() #12, !noalias !219
  unreachable

118:                                              ; preds = %97
  store i32 4, i32* %113, align 8, !alias.scope !219
  %119 = sub i32 4, %115
  %120 = icmp sgt i32 %119, 0
  %121 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %122 = bitcast %union.anon* %121 to [5 x i32]*
  br i1 %120, label %123, label %202

123:                                              ; preds = %118
  %124 = zext i32 %119 to i64
  %125 = icmp ult i32 %119, 8
  br i1 %125, label %195, label %126

126:                                              ; preds = %123
  %127 = and i64 %124, 4294967288
  %128 = add nsw i64 %127, -8
  %129 = lshr exact i64 %128, 3
  %130 = add nuw nsw i64 %129, 1
  %131 = and i64 %130, 7
  %132 = icmp ult i64 %128, 56
  br i1 %132, label %180, label %133

133:                                              ; preds = %126
  %134 = sub nsw i64 %130, %131
  br label %135

135:                                              ; preds = %135, %133
  %136 = phi i64 [ 0, %133 ], [ %177, %135 ]
  %137 = phi i64 [ %134, %133 ], [ %178, %135 ]
  %138 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %136
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %139, align 8, !alias.scope !219
  %140 = getelementptr inbounds i32, i32* %138, i64 4
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %141, align 8, !alias.scope !219
  %142 = or i64 %136, 8
  %143 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %142
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %144, align 8, !alias.scope !219
  %145 = getelementptr inbounds i32, i32* %143, i64 4
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !219
  %147 = or i64 %136, 16
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %147
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %149, align 8, !alias.scope !219
  %150 = getelementptr inbounds i32, i32* %148, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !219
  %152 = or i64 %136, 24
  %153 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %152
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %154, align 8, !alias.scope !219
  %155 = getelementptr inbounds i32, i32* %153, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !219
  %157 = or i64 %136, 32
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %157
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %159, align 8, !alias.scope !219
  %160 = getelementptr inbounds i32, i32* %158, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !219
  %162 = or i64 %136, 40
  %163 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %164, align 8, !alias.scope !219
  %165 = getelementptr inbounds i32, i32* %163, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !219
  %167 = or i64 %136, 48
  %168 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %167
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %169, align 8, !alias.scope !219
  %170 = getelementptr inbounds i32, i32* %168, i64 4
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !219
  %172 = or i64 %136, 56
  %173 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %172
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %174, align 8, !alias.scope !219
  %175 = getelementptr inbounds i32, i32* %173, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !219
  %177 = add i64 %136, 64
  %178 = add i64 %137, -8
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %135, !llvm.loop !222

180:                                              ; preds = %135, %126
  %181 = phi i64 [ 0, %126 ], [ %177, %135 ]
  %182 = icmp eq i64 %131, 0
  br i1 %182, label %193, label %183

183:                                              ; preds = %180, %183
  %184 = phi i64 [ %190, %183 ], [ %181, %180 ]
  %185 = phi i64 [ %191, %183 ], [ %131, %180 ]
  %186 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %184
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %187, align 8, !alias.scope !219
  %188 = getelementptr inbounds i32, i32* %186, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !219
  %190 = add i64 %184, 8
  %191 = add i64 %185, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %183, !llvm.loop !223

193:                                              ; preds = %183, %180
  %194 = icmp eq i64 %127, %124
  br i1 %194, label %202, label %195

195:                                              ; preds = %193, %123
  %196 = phi i64 [ 0, %123 ], [ %127, %193 ]
  br label %197

197:                                              ; preds = %195, %197
  %198 = phi i64 [ %200, %197 ], [ %196, %195 ]
  %199 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %198
  store i32 1, i32* %199, align 4, !alias.scope !219
  %200 = add nuw nsw i64 %198, 1
  %201 = icmp eq i64 %200, %124
  br i1 %201, label %202, label %197, !llvm.loop !224

202:                                              ; preds = %197, %193, %118
  %203 = getelementptr inbounds %union.anon, %union.anon* %121, i64 0, i32 0
  %204 = bitcast %union.anon* %121 to i32*
  %205 = sext i32 %119 to i64
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  %207 = bitcast i32* %206 to i8*
  %208 = icmp sgt i32 %115, 5
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %210 = getelementptr inbounds %union.anon, %union.anon* %209, i64 0, i32 0
  %211 = load i32*, i32** %210, align 8, !noalias !219
  %212 = bitcast %union.anon* %209 to i32*
  %213 = select i1 %208, i32* %211, i32* %212
  %214 = bitcast i32* %213 to i8*
  %215 = sext i32 %115 to i64
  %216 = shl nsw i64 %215, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %214, i64 %216, i1 false) #11
  %217 = bitcast %union.anon* %16 to [5 x i32]*
  %218 = load i32, i32* %8, align 8
  %219 = icmp sgt i32 %218, 5
  %220 = load i32*, i32** %98, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 3
  %222 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %223 = bitcast i8* %222 to i32*
  %224 = select i1 %219, i32* %221, i32* %223
  %225 = load i32, i32* %224, align 4
  %226 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 3
  store i32 %225, i32* %226, align 4
  %227 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 3
  store i32 1, i32* %227, align 4
  %228 = load i32, i32* %224, align 4
  %229 = getelementptr inbounds i32, i32* %220, i64 2
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %231 = bitcast [16 x i8]* %230 to i32*
  %232 = select i1 %219, i32* %229, i32* %231
  %233 = load i32, i32* %232, align 4
  %234 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 2
  store i32 %233, i32* %234, align 4
  %235 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 2
  store i32 %228, i32* %235, align 4
  %236 = load i32, i32* %232, align 4
  %237 = mul nsw i32 %236, %228
  %238 = getelementptr inbounds i32, i32* %220, i64 1
  %239 = getelementptr inbounds [5 x i32], [5 x i32]* %217, i64 0, i64 1
  %240 = select i1 %219, i32* %238, i32* %239
  %241 = load i32, i32* %240, align 4
  %242 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 1
  store i32 %241, i32* %242, align 4
  %243 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 1
  store i32 %237, i32* %243, align 4
  %244 = load i32, i32* %240, align 4
  %245 = mul nsw i32 %244, %237
  %246 = select i1 %219, i32* %220, i32* %99
  %247 = load i32, i32* %246, align 4
  %248 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 0
  store i32 %247, i32* %248, align 4
  %249 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 0
  store i32 %245, i32* %249, align 4
  %250 = load i32, i32* %113, align 8
  %251 = icmp sgt i32 %250, 5
  %252 = load i32*, i32** %203, align 8
  %253 = getelementptr inbounds i32, i32* %252, i64 3
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %255 = bitcast i8* %254 to i32*
  %256 = select i1 %251, i32* %253, i32* %255
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 3
  store i32 %257, i32* %258, align 4
  %259 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 3
  store i32 1, i32* %259, align 4
  %260 = load i32, i32* %256, align 4
  %261 = getelementptr inbounds i32, i32* %252, i64 2
  %262 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %263 = bitcast [16 x i8]* %262 to i32*
  %264 = select i1 %251, i32* %261, i32* %263
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 2
  store i32 %265, i32* %266, align 4
  %267 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 2
  store i32 %260, i32* %267, align 4
  %268 = load i32, i32* %264, align 4
  %269 = mul nsw i32 %268, %260
  %270 = getelementptr inbounds i32, i32* %252, i64 1
  %271 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 1
  %272 = select i1 %251, i32* %270, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 1
  store i32 %273, i32* %274, align 4
  %275 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 1
  store i32 %269, i32* %275, align 4
  %276 = load i32, i32* %272, align 4
  %277 = mul nsw i32 %276, %269
  %278 = select i1 %251, i32* %252, i32* %204
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 0
  store i32 %279, i32* %280, align 4
  %281 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 0
  store i32 %277, i32* %281, align 4
  %282 = bitcast %union.anon* %16 to i32*
  %283 = select i1 %219, i32* %220, i32* %282
  %284 = load i32, i32* %283, align 4
  %285 = bitcast %union.anon* %121 to i32*
  %286 = select i1 %251, i32* %252, i32* %285
  %287 = load i32, i32* %286, align 4
  %288 = icmp eq i32 %284, %287
  br i1 %288, label %302, label %298

289:                                              ; preds = %338
  %290 = bitcast i32* %252 to i8*
  tail call void @_ZdaPv(i8* %290) #10
  br label %291

291:                                              ; preds = %338, %289
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %112) #11
  %292 = xor i1 %219, true
  %293 = icmp eq i32* %220, null
  %294 = or i1 %293, %292
  br i1 %294, label %297, label %295

295:                                              ; preds = %291
  %296 = bitcast i32* %220 to i8*
  tail call void @_ZdaPv(i8* %296) #10
  br label %297

297:                                              ; preds = %291, %295
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #11
  ret void

298:                                              ; preds = %202
  %299 = icmp eq i32 %284, 1
  br i1 %299, label %300, label %301

300:                                              ; preds = %298
  store i32 0, i32* %249, align 4
  store i32 %287, i32* %248, align 4
  br label %302

301:                                              ; preds = %298
  store i32 0, i32* %281, align 4
  store i32 %284, i32* %280, align 4
  br label %302

302:                                              ; preds = %202, %300, %301
  %303 = load i32, i32* %240, align 4
  %304 = load i32, i32* %272, align 4
  %305 = icmp eq i32 %303, %304
  br i1 %305, label %310, label %306

306:                                              ; preds = %302
  %307 = icmp eq i32 %303, 1
  br i1 %307, label %309, label %308

308:                                              ; preds = %306
  store i32 0, i32* %275, align 4
  store i32 %303, i32* %274, align 4
  br label %310

309:                                              ; preds = %306
  store i32 0, i32* %243, align 4
  store i32 %304, i32* %242, align 4
  br label %310

310:                                              ; preds = %309, %308, %302
  %311 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %312 = bitcast [16 x i8]* %311 to i32*
  %313 = select i1 %219, i32* %229, i32* %312
  %314 = load i32, i32* %313, align 4
  %315 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %316 = bitcast [16 x i8]* %315 to i32*
  %317 = select i1 %251, i32* %261, i32* %316
  %318 = load i32, i32* %317, align 4
  %319 = icmp eq i32 %314, %318
  br i1 %319, label %324, label %320

320:                                              ; preds = %310
  %321 = icmp eq i32 %314, 1
  br i1 %321, label %323, label %322

322:                                              ; preds = %320
  store i32 0, i32* %267, align 4
  store i32 %314, i32* %266, align 4
  br label %324

323:                                              ; preds = %320
  store i32 0, i32* %235, align 4
  store i32 %318, i32* %234, align 4
  br label %324

324:                                              ; preds = %323, %322, %310
  %325 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %326 = bitcast i8* %325 to i32*
  %327 = select i1 %219, i32* %221, i32* %326
  %328 = load i32, i32* %327, align 4
  %329 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %330 = bitcast i8* %329 to i32*
  %331 = select i1 %251, i32* %253, i32* %330
  %332 = load i32, i32* %331, align 4
  %333 = icmp eq i32 %328, %332
  br i1 %333, label %338, label %334

334:                                              ; preds = %324
  %335 = icmp eq i32 %328, 1
  br i1 %335, label %337, label %336

336:                                              ; preds = %334
  store i32 0, i32* %259, align 4
  store i32 %328, i32* %258, align 4
  br label %338

337:                                              ; preds = %334
  store i32 0, i32* %227, align 4
  store i32 %332, i32* %226, align 4
  br label %338

338:                                              ; preds = %337, %336, %324
  %339 = xor i1 %251, true
  %340 = icmp eq i32* %252, null
  %341 = or i1 %340, %339
  br i1 %341, label %291, label %289
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite21reference_integer_ops18BroadcastMul4DSlowIaEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #7 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %8, i64 0, i32 1, i64 0
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %8, i64 0, i32 1, i64 1
  %14 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %8, i64 0, i32 1, i64 2
  %15 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %8, i64 0, i32 1, i64 3
  %16 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  %17 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #11
  %18 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 1
  %20 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 2
  %21 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 3
  %22 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %22, i8 -86, i64 32, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9)
  %23 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 32, i1 false)
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %24, align 8, !alias.scope !225
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %26 = load i32, i32* %25, align 8, !noalias !225
  %27 = icmp sgt i32 %26, 4
  br i1 %27, label %28, label %29

28:                                               ; preds = %7
  call void @abort() #12, !noalias !225
  unreachable

29:                                               ; preds = %7
  store i32 4, i32* %24, align 8, !alias.scope !225
  %30 = sub i32 4, %26
  %31 = icmp sgt i32 %30, 0
  %32 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  br i1 %31, label %33, label %113

33:                                               ; preds = %29
  %34 = bitcast %union.anon* %32 to [5 x i32]*
  %35 = zext i32 %30 to i64
  %36 = icmp ult i32 %30, 8
  br i1 %36, label %106, label %37

37:                                               ; preds = %33
  %38 = and i64 %35, 4294967288
  %39 = add nsw i64 %38, -8
  %40 = lshr exact i64 %39, 3
  %41 = add nuw nsw i64 %40, 1
  %42 = and i64 %41, 7
  %43 = icmp ult i64 %39, 56
  br i1 %43, label %91, label %44

44:                                               ; preds = %37
  %45 = sub nsw i64 %41, %42
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi i64 [ 0, %44 ], [ %88, %46 ]
  %48 = phi i64 [ %45, %44 ], [ %89, %46 ]
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %47
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !225
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !225
  %53 = or i64 %47, 8
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !225
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !225
  %58 = or i64 %47, 16
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !225
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !225
  %63 = or i64 %47, 24
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !225
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !225
  %68 = or i64 %47, 32
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !225
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !225
  %73 = or i64 %47, 40
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !225
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !225
  %78 = or i64 %47, 48
  %79 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %78
  %80 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %80, align 8, !alias.scope !225
  %81 = getelementptr inbounds i32, i32* %79, i64 4
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !225
  %83 = or i64 %47, 56
  %84 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %83
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %85, align 8, !alias.scope !225
  %86 = getelementptr inbounds i32, i32* %84, i64 4
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 8, !alias.scope !225
  %88 = add i64 %47, 64
  %89 = add i64 %48, -8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %46, !llvm.loop !228

91:                                               ; preds = %46, %37
  %92 = phi i64 [ 0, %37 ], [ %88, %46 ]
  %93 = icmp eq i64 %42, 0
  br i1 %93, label %104, label %94

94:                                               ; preds = %91, %94
  %95 = phi i64 [ %101, %94 ], [ %92, %91 ]
  %96 = phi i64 [ %102, %94 ], [ %42, %91 ]
  %97 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %95
  %98 = bitcast i32* %97 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %98, align 8, !alias.scope !225
  %99 = getelementptr inbounds i32, i32* %97, i64 4
  %100 = bitcast i32* %99 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %100, align 8, !alias.scope !225
  %101 = add i64 %95, 8
  %102 = add i64 %96, -1
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %94, !llvm.loop !229

104:                                              ; preds = %94, %91
  %105 = icmp eq i64 %38, %35
  br i1 %105, label %113, label %106

106:                                              ; preds = %104, %33
  %107 = phi i64 [ 0, %33 ], [ %38, %104 ]
  br label %108

108:                                              ; preds = %106, %108
  %109 = phi i64 [ %111, %108 ], [ %107, %106 ]
  %110 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %109
  store i32 1, i32* %110, align 4, !alias.scope !225
  %111 = add nuw nsw i64 %109, 1
  %112 = icmp eq i64 %111, %35
  br i1 %112, label %113, label %108, !llvm.loop !230

113:                                              ; preds = %108, %104, %29
  %114 = getelementptr inbounds %union.anon, %union.anon* %32, i64 0, i32 0
  %115 = bitcast %union.anon* %32 to i32*
  %116 = sext i32 %30 to i64
  %117 = getelementptr inbounds i32, i32* %115, i64 %116
  %118 = bitcast i32* %117 to i8*
  %119 = icmp sgt i32 %26, 5
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %121 = getelementptr inbounds %union.anon, %union.anon* %120, i64 0, i32 0
  %122 = load i32*, i32** %121, align 8, !noalias !225
  %123 = bitcast %union.anon* %120 to i32*
  %124 = select i1 %119, i32* %122, i32* %123
  %125 = bitcast i32* %124 to i8*
  %126 = sext i32 %26 to i64
  %127 = shl nsw i64 %126, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %118, i8* align 4 %125, i64 %127, i1 false) #11
  %128 = load i32, i32* %24, align 8
  %129 = icmp sgt i32 %128, 5
  %130 = load i32*, i32** %114, align 8
  %131 = select i1 %129, i32* %130, i32* %115
  %132 = load i32, i32* %131, align 4
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %134, label %160

134:                                              ; preds = %113
  %135 = bitcast %union.anon* %32 to [5 x i32]*
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %135, i64 0, i64 1
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1
  %138 = bitcast [16 x i8]* %137 to i32*
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1, i64 4
  %140 = bitcast i8* %139 to i32*
  %141 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 1
  %142 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 2
  %143 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 3
  %144 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 4
  %145 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 5
  %146 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 12
  %147 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 11
  %148 = getelementptr inbounds i32, i32* %115, i64 1
  %149 = getelementptr inbounds i32, i32* %130, i64 1
  %150 = select i1 %129, i32* %149, i32* %136
  %151 = getelementptr inbounds i32, i32* %130, i64 2
  %152 = select i1 %129, i32* %151, i32* %138
  %153 = getelementptr inbounds i32, i32* %130, i64 3
  %154 = select i1 %129, i32* %153, i32* %140
  br label %155

155:                                              ; preds = %134, %179
  %156 = phi i32 [ %132, %134 ], [ %180, %179 ]
  %157 = phi i32 [ 0, %134 ], [ %181, %179 ]
  %158 = load i32, i32* %150, align 4
  %159 = icmp sgt i32 %158, 0
  br i1 %159, label %167, label %179

160:                                              ; preds = %179, %113
  %161 = xor i1 %129, true
  %162 = icmp eq i32* %130, null
  %163 = or i1 %162, %161
  br i1 %163, label %166, label %164

164:                                              ; preds = %160
  %165 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %165) #10
  br label %166

166:                                              ; preds = %160, %164
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  ret void

167:                                              ; preds = %155, %194
  %168 = phi i32 [ %195, %194 ], [ %158, %155 ]
  %169 = phi i32 [ %196, %194 ], [ 0, %155 ]
  %170 = load i32, i32* %152, align 4
  %171 = icmp sgt i32 %170, 0
  br i1 %171, label %172, label %194

172:                                              ; preds = %167
  %173 = load i32, i32* %148, align 4
  %174 = mul nsw i32 %173, %157
  %175 = add nsw i32 %174, %169
  %176 = load i32, i32* %154, align 4
  br label %183

177:                                              ; preds = %194
  %178 = load i32, i32* %131, align 4
  br label %179

179:                                              ; preds = %177, %155
  %180 = phi i32 [ %178, %177 ], [ %156, %155 ]
  %181 = add nuw nsw i32 %157, 1
  %182 = icmp slt i32 %181, %180
  br i1 %182, label %155, label %160

183:                                              ; preds = %172, %200
  %184 = phi i32 [ %170, %172 ], [ %201, %200 ]
  %185 = phi i32 [ %176, %172 ], [ %202, %200 ]
  %186 = phi i32 [ 0, %172 ], [ %203, %200 ]
  %187 = icmp sgt i32 %185, 0
  br i1 %187, label %188, label %200

188:                                              ; preds = %183
  %189 = load i32, i32* %138, align 8
  %190 = mul nsw i32 %175, %189
  %191 = add nsw i32 %190, %186
  br label %205

192:                                              ; preds = %200
  %193 = load i32, i32* %150, align 4
  br label %194

194:                                              ; preds = %192, %167
  %195 = phi i32 [ %193, %192 ], [ %168, %167 ]
  %196 = add nuw nsw i32 %169, 1
  %197 = icmp slt i32 %196, %195
  br i1 %197, label %167, label %177

198:                                              ; preds = %267
  %199 = load i32, i32* %152, align 4
  br label %200

200:                                              ; preds = %198, %183
  %201 = phi i32 [ %199, %198 ], [ %184, %183 ]
  %202 = phi i32 [ %295, %198 ], [ %185, %183 ]
  %203 = add nuw nsw i32 %186, 1
  %204 = icmp slt i32 %203, %201
  br i1 %204, label %183, label %192

205:                                              ; preds = %188, %267
  %206 = phi i32 [ 0, %188 ], [ %294, %267 ]
  %207 = load i32, i32* %141, align 4
  %208 = load i32, i32* %12, align 4
  %209 = mul nsw i32 %208, %157
  %210 = load i32, i32* %13, align 4
  %211 = mul nsw i32 %210, %169
  %212 = add nsw i32 %211, %209
  %213 = load i32, i32* %14, align 4
  %214 = mul nsw i32 %213, %186
  %215 = add nsw i32 %212, %214
  %216 = load i32, i32* %15, align 4
  %217 = mul nsw i32 %216, %206
  %218 = add nsw i32 %215, %217
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds i8, i8* %2, i64 %219
  %221 = load i8, i8* %220, align 1
  %222 = sext i8 %221 to i32
  %223 = add nsw i32 %207, %222
  %224 = load i32, i32* %142, align 4
  %225 = load i32, i32* %18, align 4
  %226 = mul nsw i32 %225, %157
  %227 = load i32, i32* %19, align 4
  %228 = mul nsw i32 %227, %169
  %229 = add nsw i32 %228, %226
  %230 = load i32, i32* %20, align 4
  %231 = mul nsw i32 %230, %186
  %232 = add nsw i32 %229, %231
  %233 = load i32, i32* %21, align 4
  %234 = mul nsw i32 %233, %206
  %235 = add nsw i32 %232, %234
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds i8, i8* %4, i64 %236
  %238 = load i8, i8* %237, align 1
  %239 = sext i8 %238 to i32
  %240 = add nsw i32 %224, %239
  %241 = load i32, i32* %143, align 4
  %242 = mul nsw i32 %240, %223
  %243 = load i32, i32* %144, align 4
  %244 = load i32, i32* %145, align 4
  %245 = icmp sgt i32 %244, 0
  %246 = sub nsw i32 0, %244
  %247 = select i1 %245, i32 0, i32 %246
  %248 = shl i32 1, %244
  %249 = select i1 %245, i32 %248, i32 1
  %250 = mul nsw i32 %242, %249
  %251 = icmp eq i32 %250, %243
  br i1 %251, label %256, label %252

252:                                              ; preds = %205
  %253 = sext i32 %250 to i64
  %254 = sext i32 %243 to i64
  %255 = mul nsw i64 %253, %254
  br label %260

256:                                              ; preds = %205
  %257 = icmp eq i32 %243, -2147483648
  %258 = sext i32 %243 to i64
  %259 = mul nsw i64 %258, %258
  br i1 %257, label %267, label %260

260:                                              ; preds = %256, %252
  %261 = phi i64 [ %255, %252 ], [ %259, %256 ]
  %262 = icmp sgt i64 %261, -1
  %263 = select i1 %262, i64 1073741824, i64 -1073741823
  %264 = add nsw i64 %263, %261
  %265 = sdiv i64 %264, 2147483648
  %266 = trunc i64 %265 to i32
  br label %267

267:                                              ; preds = %256, %260
  %268 = phi i32 [ %266, %260 ], [ 2147483647, %256 ]
  %269 = zext i32 %247 to i64
  %270 = shl nsw i64 -1, %269
  %271 = trunc i64 %270 to i32
  %272 = xor i32 %271, -1
  %273 = and i32 %268, %272
  %274 = ashr i32 %272, 1
  %275 = lshr i32 %268, 31
  %276 = add nsw i32 %275, %274
  %277 = ashr i32 %268, %247
  %278 = icmp sgt i32 %273, %276
  %279 = zext i1 %278 to i32
  %280 = add i32 %277, %241
  %281 = add i32 %280, %279
  %282 = load i32, i32* %147, align 4
  %283 = icmp slt i32 %282, %281
  %284 = select i1 %283, i32 %281, i32 %282
  %285 = load i32, i32* %146, align 4
  %286 = icmp slt i32 %284, %285
  %287 = select i1 %286, i32 %284, i32 %285
  %288 = trunc i32 %287 to i8
  %289 = load i32, i32* %140, align 4
  %290 = mul nsw i32 %191, %289
  %291 = add nsw i32 %290, %206
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds i8, i8* %6, i64 %292
  store i8 %288, i8* %293, align 1
  %294 = add nuw nsw i32 %206, 1
  %295 = load i32, i32* %154, align 4
  %296 = icmp slt i32 %294, %295
  br i1 %296, label %205, label %198
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite21reference_integer_ops3MulIaEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #7 comdat {
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 5
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  br i1 %10, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %union.anon, %union.anon* %11, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  br label %18

15:                                               ; preds = %7
  %16 = bitcast %union.anon* %11 to i32*
  %17 = icmp sgt i32 %9, 0
  br i1 %17, label %18, label %118

18:                                               ; preds = %15, %12
  %19 = phi i32* [ %14, %12 ], [ %16, %15 ]
  %20 = zext i32 %9 to i64
  %21 = icmp ult i32 %9, 8
  br i1 %21, label %107, label %22

22:                                               ; preds = %18
  %23 = and i64 %20, 4294967288
  %24 = add nsw i64 %23, -8
  %25 = lshr exact i64 %24, 3
  %26 = add nuw nsw i64 %25, 1
  %27 = and i64 %26, 3
  %28 = icmp ult i64 %24, 24
  br i1 %28, label %74, label %29

29:                                               ; preds = %22
  %30 = sub nsw i64 %26, %27
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %71, %31 ]
  %33 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %29 ], [ %69, %31 ]
  %34 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %29 ], [ %70, %31 ]
  %35 = phi i64 [ %30, %29 ], [ %72, %31 ]
  %36 = getelementptr inbounds i32, i32* %19, i64 %32
  %37 = bitcast i32* %36 to <4 x i32>*
  %38 = load <4 x i32>, <4 x i32>* %37, align 4
  %39 = getelementptr inbounds i32, i32* %36, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  %41 = load <4 x i32>, <4 x i32>* %40, align 4
  %42 = mul nsw <4 x i32> %38, %33
  %43 = mul nsw <4 x i32> %41, %34
  %44 = or i64 %32, 8
  %45 = getelementptr inbounds i32, i32* %19, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  %47 = load <4 x i32>, <4 x i32>* %46, align 4
  %48 = getelementptr inbounds i32, i32* %45, i64 4
  %49 = bitcast i32* %48 to <4 x i32>*
  %50 = load <4 x i32>, <4 x i32>* %49, align 4
  %51 = mul nsw <4 x i32> %47, %42
  %52 = mul nsw <4 x i32> %50, %43
  %53 = or i64 %32, 16
  %54 = getelementptr inbounds i32, i32* %19, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  %56 = load <4 x i32>, <4 x i32>* %55, align 4
  %57 = getelementptr inbounds i32, i32* %54, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  %59 = load <4 x i32>, <4 x i32>* %58, align 4
  %60 = mul nsw <4 x i32> %56, %51
  %61 = mul nsw <4 x i32> %59, %52
  %62 = or i64 %32, 24
  %63 = getelementptr inbounds i32, i32* %19, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  %65 = load <4 x i32>, <4 x i32>* %64, align 4
  %66 = getelementptr inbounds i32, i32* %63, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  %68 = load <4 x i32>, <4 x i32>* %67, align 4
  %69 = mul nsw <4 x i32> %65, %60
  %70 = mul nsw <4 x i32> %68, %61
  %71 = add i64 %32, 32
  %72 = add i64 %35, -4
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %31, !llvm.loop !231

74:                                               ; preds = %31, %22
  %75 = phi <4 x i32> [ undef, %22 ], [ %69, %31 ]
  %76 = phi <4 x i32> [ undef, %22 ], [ %70, %31 ]
  %77 = phi i64 [ 0, %22 ], [ %71, %31 ]
  %78 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %22 ], [ %69, %31 ]
  %79 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %22 ], [ %70, %31 ]
  %80 = icmp eq i64 %27, 0
  br i1 %80, label %97, label %81

81:                                               ; preds = %74, %81
  %82 = phi i64 [ %94, %81 ], [ %77, %74 ]
  %83 = phi <4 x i32> [ %92, %81 ], [ %78, %74 ]
  %84 = phi <4 x i32> [ %93, %81 ], [ %79, %74 ]
  %85 = phi i64 [ %95, %81 ], [ %27, %74 ]
  %86 = getelementptr inbounds i32, i32* %19, i64 %82
  %87 = bitcast i32* %86 to <4 x i32>*
  %88 = load <4 x i32>, <4 x i32>* %87, align 4
  %89 = getelementptr inbounds i32, i32* %86, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4
  %92 = mul nsw <4 x i32> %88, %83
  %93 = mul nsw <4 x i32> %91, %84
  %94 = add i64 %82, 8
  %95 = add i64 %85, -1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %81, !llvm.loop !232

97:                                               ; preds = %81, %74
  %98 = phi <4 x i32> [ %75, %74 ], [ %92, %81 ]
  %99 = phi <4 x i32> [ %76, %74 ], [ %93, %81 ]
  %100 = mul <4 x i32> %99, %98
  %101 = shufflevector <4 x i32> %100, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %102 = mul <4 x i32> %100, %101
  %103 = shufflevector <4 x i32> %102, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %104 = mul <4 x i32> %102, %103
  %105 = extractelement <4 x i32> %104, i32 0
  %106 = icmp eq i64 %23, %20
  br i1 %106, label %118, label %107

107:                                              ; preds = %97, %18
  %108 = phi i64 [ 0, %18 ], [ %23, %97 ]
  %109 = phi i32 [ 1, %18 ], [ %105, %97 ]
  br label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %116, %110 ], [ %108, %107 ]
  %112 = phi i32 [ %115, %110 ], [ %109, %107 ]
  %113 = getelementptr inbounds i32, i32* %19, i64 %111
  %114 = load i32, i32* %113, align 4
  %115 = mul nsw i32 %114, %112
  %116 = add nuw nsw i64 %111, 1
  %117 = icmp eq i64 %116, %20
  br i1 %117, label %118, label %110, !llvm.loop !233

118:                                              ; preds = %110, %97, %15
  %119 = phi i32 [ 1, %15 ], [ %105, %97 ], [ %115, %110 ]
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  br i1 %122, label %124, label %127

124:                                              ; preds = %118
  %125 = getelementptr inbounds %union.anon, %union.anon* %123, i64 0, i32 0
  %126 = load i32*, i32** %125, align 8
  br label %130

127:                                              ; preds = %118
  %128 = bitcast %union.anon* %123 to i32*
  %129 = icmp sgt i32 %121, 0
  br i1 %129, label %130, label %230

130:                                              ; preds = %127, %124
  %131 = phi i32* [ %126, %124 ], [ %128, %127 ]
  %132 = zext i32 %121 to i64
  %133 = icmp ult i32 %121, 8
  br i1 %133, label %219, label %134

134:                                              ; preds = %130
  %135 = and i64 %132, 4294967288
  %136 = add nsw i64 %135, -8
  %137 = lshr exact i64 %136, 3
  %138 = add nuw nsw i64 %137, 1
  %139 = and i64 %138, 3
  %140 = icmp ult i64 %136, 24
  br i1 %140, label %186, label %141

141:                                              ; preds = %134
  %142 = sub nsw i64 %138, %139
  br label %143

143:                                              ; preds = %143, %141
  %144 = phi i64 [ 0, %141 ], [ %183, %143 ]
  %145 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %141 ], [ %181, %143 ]
  %146 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %141 ], [ %182, %143 ]
  %147 = phi i64 [ %142, %141 ], [ %184, %143 ]
  %148 = getelementptr inbounds i32, i32* %131, i64 %144
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4
  %151 = getelementptr inbounds i32, i32* %148, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4
  %154 = mul nsw <4 x i32> %150, %145
  %155 = mul nsw <4 x i32> %153, %146
  %156 = or i64 %144, 8
  %157 = getelementptr inbounds i32, i32* %131, i64 %156
  %158 = bitcast i32* %157 to <4 x i32>*
  %159 = load <4 x i32>, <4 x i32>* %158, align 4
  %160 = getelementptr inbounds i32, i32* %157, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  %162 = load <4 x i32>, <4 x i32>* %161, align 4
  %163 = mul nsw <4 x i32> %159, %154
  %164 = mul nsw <4 x i32> %162, %155
  %165 = or i64 %144, 16
  %166 = getelementptr inbounds i32, i32* %131, i64 %165
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = getelementptr inbounds i32, i32* %166, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 4
  %172 = mul nsw <4 x i32> %168, %163
  %173 = mul nsw <4 x i32> %171, %164
  %174 = or i64 %144, 24
  %175 = getelementptr inbounds i32, i32* %131, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = getelementptr inbounds i32, i32* %175, i64 4
  %179 = bitcast i32* %178 to <4 x i32>*
  %180 = load <4 x i32>, <4 x i32>* %179, align 4
  %181 = mul nsw <4 x i32> %177, %172
  %182 = mul nsw <4 x i32> %180, %173
  %183 = add i64 %144, 32
  %184 = add i64 %147, -4
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %143, !llvm.loop !234

186:                                              ; preds = %143, %134
  %187 = phi <4 x i32> [ undef, %134 ], [ %181, %143 ]
  %188 = phi <4 x i32> [ undef, %134 ], [ %182, %143 ]
  %189 = phi i64 [ 0, %134 ], [ %183, %143 ]
  %190 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %134 ], [ %181, %143 ]
  %191 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %134 ], [ %182, %143 ]
  %192 = icmp eq i64 %139, 0
  br i1 %192, label %209, label %193

193:                                              ; preds = %186, %193
  %194 = phi i64 [ %206, %193 ], [ %189, %186 ]
  %195 = phi <4 x i32> [ %204, %193 ], [ %190, %186 ]
  %196 = phi <4 x i32> [ %205, %193 ], [ %191, %186 ]
  %197 = phi i64 [ %207, %193 ], [ %139, %186 ]
  %198 = getelementptr inbounds i32, i32* %131, i64 %194
  %199 = bitcast i32* %198 to <4 x i32>*
  %200 = load <4 x i32>, <4 x i32>* %199, align 4
  %201 = getelementptr inbounds i32, i32* %198, i64 4
  %202 = bitcast i32* %201 to <4 x i32>*
  %203 = load <4 x i32>, <4 x i32>* %202, align 4
  %204 = mul nsw <4 x i32> %200, %195
  %205 = mul nsw <4 x i32> %203, %196
  %206 = add i64 %194, 8
  %207 = add i64 %197, -1
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %193, !llvm.loop !235

209:                                              ; preds = %193, %186
  %210 = phi <4 x i32> [ %187, %186 ], [ %204, %193 ]
  %211 = phi <4 x i32> [ %188, %186 ], [ %205, %193 ]
  %212 = mul <4 x i32> %211, %210
  %213 = shufflevector <4 x i32> %212, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %214 = mul <4 x i32> %212, %213
  %215 = shufflevector <4 x i32> %214, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %216 = mul <4 x i32> %214, %215
  %217 = extractelement <4 x i32> %216, i32 0
  %218 = icmp eq i64 %135, %132
  br i1 %218, label %230, label %219

219:                                              ; preds = %209, %130
  %220 = phi i64 [ 0, %130 ], [ %135, %209 ]
  %221 = phi i32 [ 1, %130 ], [ %217, %209 ]
  br label %222

222:                                              ; preds = %219, %222
  %223 = phi i64 [ %228, %222 ], [ %220, %219 ]
  %224 = phi i32 [ %227, %222 ], [ %221, %219 ]
  %225 = getelementptr inbounds i32, i32* %131, i64 %223
  %226 = load i32, i32* %225, align 4
  %227 = mul nsw i32 %226, %224
  %228 = add nuw nsw i64 %223, 1
  %229 = icmp eq i64 %228, %132
  br i1 %229, label %230, label %222, !llvm.loop !236

230:                                              ; preds = %222, %209, %127
  %231 = phi i32 [ 1, %127 ], [ %217, %209 ], [ %227, %222 ]
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %233 = load i32, i32* %232, align 8
  %234 = icmp sgt i32 %233, 5
  %235 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %234, label %236, label %239

236:                                              ; preds = %230
  %237 = getelementptr inbounds %union.anon, %union.anon* %235, i64 0, i32 0
  %238 = load i32*, i32** %237, align 8
  br label %242

239:                                              ; preds = %230
  %240 = bitcast %union.anon* %235 to i32*
  %241 = icmp sgt i32 %233, 0
  br i1 %241, label %242, label %342

242:                                              ; preds = %239, %236
  %243 = phi i32* [ %238, %236 ], [ %240, %239 ]
  %244 = zext i32 %233 to i64
  %245 = icmp ult i32 %233, 8
  br i1 %245, label %331, label %246

246:                                              ; preds = %242
  %247 = and i64 %244, 4294967288
  %248 = add nsw i64 %247, -8
  %249 = lshr exact i64 %248, 3
  %250 = add nuw nsw i64 %249, 1
  %251 = and i64 %250, 3
  %252 = icmp ult i64 %248, 24
  br i1 %252, label %298, label %253

253:                                              ; preds = %246
  %254 = sub nsw i64 %250, %251
  br label %255

255:                                              ; preds = %255, %253
  %256 = phi i64 [ 0, %253 ], [ %295, %255 ]
  %257 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %253 ], [ %293, %255 ]
  %258 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %253 ], [ %294, %255 ]
  %259 = phi i64 [ %254, %253 ], [ %296, %255 ]
  %260 = getelementptr inbounds i32, i32* %243, i64 %256
  %261 = bitcast i32* %260 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4
  %263 = getelementptr inbounds i32, i32* %260, i64 4
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4
  %266 = mul nsw <4 x i32> %262, %257
  %267 = mul nsw <4 x i32> %265, %258
  %268 = or i64 %256, 8
  %269 = getelementptr inbounds i32, i32* %243, i64 %268
  %270 = bitcast i32* %269 to <4 x i32>*
  %271 = load <4 x i32>, <4 x i32>* %270, align 4
  %272 = getelementptr inbounds i32, i32* %269, i64 4
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4
  %275 = mul nsw <4 x i32> %271, %266
  %276 = mul nsw <4 x i32> %274, %267
  %277 = or i64 %256, 16
  %278 = getelementptr inbounds i32, i32* %243, i64 %277
  %279 = bitcast i32* %278 to <4 x i32>*
  %280 = load <4 x i32>, <4 x i32>* %279, align 4
  %281 = getelementptr inbounds i32, i32* %278, i64 4
  %282 = bitcast i32* %281 to <4 x i32>*
  %283 = load <4 x i32>, <4 x i32>* %282, align 4
  %284 = mul nsw <4 x i32> %280, %275
  %285 = mul nsw <4 x i32> %283, %276
  %286 = or i64 %256, 24
  %287 = getelementptr inbounds i32, i32* %243, i64 %286
  %288 = bitcast i32* %287 to <4 x i32>*
  %289 = load <4 x i32>, <4 x i32>* %288, align 4
  %290 = getelementptr inbounds i32, i32* %287, i64 4
  %291 = bitcast i32* %290 to <4 x i32>*
  %292 = load <4 x i32>, <4 x i32>* %291, align 4
  %293 = mul nsw <4 x i32> %289, %284
  %294 = mul nsw <4 x i32> %292, %285
  %295 = add i64 %256, 32
  %296 = add i64 %259, -4
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %255, !llvm.loop !237

298:                                              ; preds = %255, %246
  %299 = phi <4 x i32> [ undef, %246 ], [ %293, %255 ]
  %300 = phi <4 x i32> [ undef, %246 ], [ %294, %255 ]
  %301 = phi i64 [ 0, %246 ], [ %295, %255 ]
  %302 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %246 ], [ %293, %255 ]
  %303 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %246 ], [ %294, %255 ]
  %304 = icmp eq i64 %251, 0
  br i1 %304, label %321, label %305

305:                                              ; preds = %298, %305
  %306 = phi i64 [ %318, %305 ], [ %301, %298 ]
  %307 = phi <4 x i32> [ %316, %305 ], [ %302, %298 ]
  %308 = phi <4 x i32> [ %317, %305 ], [ %303, %298 ]
  %309 = phi i64 [ %319, %305 ], [ %251, %298 ]
  %310 = getelementptr inbounds i32, i32* %243, i64 %306
  %311 = bitcast i32* %310 to <4 x i32>*
  %312 = load <4 x i32>, <4 x i32>* %311, align 4
  %313 = getelementptr inbounds i32, i32* %310, i64 4
  %314 = bitcast i32* %313 to <4 x i32>*
  %315 = load <4 x i32>, <4 x i32>* %314, align 4
  %316 = mul nsw <4 x i32> %312, %307
  %317 = mul nsw <4 x i32> %315, %308
  %318 = add i64 %306, 8
  %319 = add i64 %309, -1
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %305, !llvm.loop !238

321:                                              ; preds = %305, %298
  %322 = phi <4 x i32> [ %299, %298 ], [ %316, %305 ]
  %323 = phi <4 x i32> [ %300, %298 ], [ %317, %305 ]
  %324 = mul <4 x i32> %323, %322
  %325 = shufflevector <4 x i32> %324, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %326 = mul <4 x i32> %324, %325
  %327 = shufflevector <4 x i32> %326, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %328 = mul <4 x i32> %326, %327
  %329 = extractelement <4 x i32> %328, i32 0
  %330 = icmp eq i64 %247, %244
  br i1 %330, label %342, label %331

331:                                              ; preds = %321, %242
  %332 = phi i64 [ 0, %242 ], [ %247, %321 ]
  %333 = phi i32 [ 1, %242 ], [ %329, %321 ]
  br label %334

334:                                              ; preds = %331, %334
  %335 = phi i64 [ %340, %334 ], [ %332, %331 ]
  %336 = phi i32 [ %339, %334 ], [ %333, %331 ]
  %337 = getelementptr inbounds i32, i32* %243, i64 %335
  %338 = load i32, i32* %337, align 4
  %339 = mul nsw i32 %338, %336
  %340 = add nuw nsw i64 %335, 1
  %341 = icmp eq i64 %340, %244
  br i1 %341, label %342, label %334, !llvm.loop !239

342:                                              ; preds = %334, %321, %239
  %343 = phi i32 [ 1, %239 ], [ %329, %321 ], [ %339, %334 ]
  %344 = icmp eq i32 %119, %231
  br i1 %344, label %346, label %345

345:                                              ; preds = %342
  tail call void @abort() #12
  unreachable

346:                                              ; preds = %342
  %347 = icmp eq i32 %119, %343
  br i1 %347, label %349, label %348

348:                                              ; preds = %346
  tail call void @abort() #12
  unreachable

349:                                              ; preds = %346
  %350 = icmp sgt i32 %119, 0
  br i1 %350, label %351, label %423

351:                                              ; preds = %349
  %352 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 1
  %353 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 2
  %354 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 3
  %355 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 4
  %356 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 5
  %357 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 12
  %358 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 11
  %359 = zext i32 %119 to i64
  br label %360

360:                                              ; preds = %398, %351
  %361 = phi i64 [ 0, %351 ], [ %421, %398 ]
  %362 = load i32, i32* %352, align 4
  %363 = getelementptr inbounds i8, i8* %2, i64 %361
  %364 = load i8, i8* %363, align 1
  %365 = sext i8 %364 to i32
  %366 = add nsw i32 %362, %365
  %367 = load i32, i32* %353, align 4
  %368 = getelementptr inbounds i8, i8* %4, i64 %361
  %369 = load i8, i8* %368, align 1
  %370 = sext i8 %369 to i32
  %371 = add nsw i32 %367, %370
  %372 = load i32, i32* %354, align 4
  %373 = mul nsw i32 %371, %366
  %374 = load i32, i32* %355, align 4
  %375 = load i32, i32* %356, align 4
  %376 = icmp sgt i32 %375, 0
  %377 = sub nsw i32 0, %375
  %378 = select i1 %376, i32 0, i32 %377
  %379 = shl i32 1, %375
  %380 = select i1 %376, i32 %379, i32 1
  %381 = mul nsw i32 %373, %380
  %382 = icmp eq i32 %381, %374
  br i1 %382, label %387, label %383

383:                                              ; preds = %360
  %384 = sext i32 %381 to i64
  %385 = sext i32 %374 to i64
  %386 = mul nsw i64 %384, %385
  br label %391

387:                                              ; preds = %360
  %388 = icmp eq i32 %374, -2147483648
  %389 = sext i32 %374 to i64
  %390 = mul nsw i64 %389, %389
  br i1 %388, label %398, label %391

391:                                              ; preds = %387, %383
  %392 = phi i64 [ %386, %383 ], [ %390, %387 ]
  %393 = icmp sgt i64 %392, -1
  %394 = select i1 %393, i64 1073741824, i64 -1073741823
  %395 = add nsw i64 %394, %392
  %396 = sdiv i64 %395, 2147483648
  %397 = trunc i64 %396 to i32
  br label %398

398:                                              ; preds = %391, %387
  %399 = phi i32 [ %397, %391 ], [ 2147483647, %387 ]
  %400 = zext i32 %378 to i64
  %401 = shl nsw i64 -1, %400
  %402 = trunc i64 %401 to i32
  %403 = xor i32 %402, -1
  %404 = and i32 %399, %403
  %405 = ashr i32 %403, 1
  %406 = lshr i32 %399, 31
  %407 = add nsw i32 %406, %405
  %408 = ashr i32 %399, %378
  %409 = icmp sgt i32 %404, %407
  %410 = zext i1 %409 to i32
  %411 = add i32 %408, %372
  %412 = add i32 %411, %410
  %413 = load i32, i32* %358, align 4
  %414 = icmp slt i32 %413, %412
  %415 = select i1 %414, i32 %412, i32 %413
  %416 = load i32, i32* %357, align 4
  %417 = icmp slt i32 %415, %416
  %418 = select i1 %417, i32 %415, i32 %416
  %419 = trunc i32 %418 to i8
  %420 = getelementptr inbounds i8, i8* %6, i64 %361
  store i8 %419, i8* %420, align 1
  %421 = add nuw nsw i64 %361, 1
  %422 = icmp eq i64 %421, %359
  br i1 %422, label %423, label %360

423:                                              ; preds = %398, %349
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite21reference_integer_ops18BroadcastMul4DSlowIsEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i16*, %"class.tflite::RuntimeShape"* dereferenceable(32), i16*, %"class.tflite::RuntimeShape"* dereferenceable(32), i16*) local_unnamed_addr #7 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %8, i64 0, i32 1, i64 0
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %8, i64 0, i32 1, i64 1
  %14 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %8, i64 0, i32 1, i64 2
  %15 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %8, i64 0, i32 1, i64 3
  %16 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  %17 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #11
  %18 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 1
  %20 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 2
  %21 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 3
  %22 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %22, i8 -86, i64 32, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9)
  %23 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 32, i1 false)
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %24, align 8, !alias.scope !240
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %26 = load i32, i32* %25, align 8, !noalias !240
  %27 = icmp sgt i32 %26, 4
  br i1 %27, label %28, label %29

28:                                               ; preds = %7
  call void @abort() #12, !noalias !240
  unreachable

29:                                               ; preds = %7
  store i32 4, i32* %24, align 8, !alias.scope !240
  %30 = sub i32 4, %26
  %31 = icmp sgt i32 %30, 0
  %32 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  br i1 %31, label %33, label %113

33:                                               ; preds = %29
  %34 = bitcast %union.anon* %32 to [5 x i32]*
  %35 = zext i32 %30 to i64
  %36 = icmp ult i32 %30, 8
  br i1 %36, label %106, label %37

37:                                               ; preds = %33
  %38 = and i64 %35, 4294967288
  %39 = add nsw i64 %38, -8
  %40 = lshr exact i64 %39, 3
  %41 = add nuw nsw i64 %40, 1
  %42 = and i64 %41, 7
  %43 = icmp ult i64 %39, 56
  br i1 %43, label %91, label %44

44:                                               ; preds = %37
  %45 = sub nsw i64 %41, %42
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi i64 [ 0, %44 ], [ %88, %46 ]
  %48 = phi i64 [ %45, %44 ], [ %89, %46 ]
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %47
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !240
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !240
  %53 = or i64 %47, 8
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !240
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !240
  %58 = or i64 %47, 16
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !240
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !240
  %63 = or i64 %47, 24
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !240
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !240
  %68 = or i64 %47, 32
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !240
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !240
  %73 = or i64 %47, 40
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !240
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !240
  %78 = or i64 %47, 48
  %79 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %78
  %80 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %80, align 8, !alias.scope !240
  %81 = getelementptr inbounds i32, i32* %79, i64 4
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !240
  %83 = or i64 %47, 56
  %84 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %83
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %85, align 8, !alias.scope !240
  %86 = getelementptr inbounds i32, i32* %84, i64 4
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 8, !alias.scope !240
  %88 = add i64 %47, 64
  %89 = add i64 %48, -8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %46, !llvm.loop !243

91:                                               ; preds = %46, %37
  %92 = phi i64 [ 0, %37 ], [ %88, %46 ]
  %93 = icmp eq i64 %42, 0
  br i1 %93, label %104, label %94

94:                                               ; preds = %91, %94
  %95 = phi i64 [ %101, %94 ], [ %92, %91 ]
  %96 = phi i64 [ %102, %94 ], [ %42, %91 ]
  %97 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %95
  %98 = bitcast i32* %97 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %98, align 8, !alias.scope !240
  %99 = getelementptr inbounds i32, i32* %97, i64 4
  %100 = bitcast i32* %99 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %100, align 8, !alias.scope !240
  %101 = add i64 %95, 8
  %102 = add i64 %96, -1
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %94, !llvm.loop !244

104:                                              ; preds = %94, %91
  %105 = icmp eq i64 %38, %35
  br i1 %105, label %113, label %106

106:                                              ; preds = %104, %33
  %107 = phi i64 [ 0, %33 ], [ %38, %104 ]
  br label %108

108:                                              ; preds = %106, %108
  %109 = phi i64 [ %111, %108 ], [ %107, %106 ]
  %110 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %109
  store i32 1, i32* %110, align 4, !alias.scope !240
  %111 = add nuw nsw i64 %109, 1
  %112 = icmp eq i64 %111, %35
  br i1 %112, label %113, label %108, !llvm.loop !245

113:                                              ; preds = %108, %104, %29
  %114 = getelementptr inbounds %union.anon, %union.anon* %32, i64 0, i32 0
  %115 = bitcast %union.anon* %32 to i32*
  %116 = sext i32 %30 to i64
  %117 = getelementptr inbounds i32, i32* %115, i64 %116
  %118 = bitcast i32* %117 to i8*
  %119 = icmp sgt i32 %26, 5
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %121 = getelementptr inbounds %union.anon, %union.anon* %120, i64 0, i32 0
  %122 = load i32*, i32** %121, align 8, !noalias !240
  %123 = bitcast %union.anon* %120 to i32*
  %124 = select i1 %119, i32* %122, i32* %123
  %125 = bitcast i32* %124 to i8*
  %126 = sext i32 %26 to i64
  %127 = shl nsw i64 %126, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %118, i8* align 4 %125, i64 %127, i1 false) #11
  %128 = load i32, i32* %24, align 8
  %129 = icmp sgt i32 %128, 5
  %130 = load i32*, i32** %114, align 8
  %131 = select i1 %129, i32* %130, i32* %115
  %132 = load i32, i32* %131, align 4
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %134, label %160

134:                                              ; preds = %113
  %135 = bitcast %union.anon* %32 to [5 x i32]*
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %135, i64 0, i64 1
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1
  %138 = bitcast [16 x i8]* %137 to i32*
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1, i64 4
  %140 = bitcast i8* %139 to i32*
  %141 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 1
  %142 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 2
  %143 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 3
  %144 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 4
  %145 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 5
  %146 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 12
  %147 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 11
  %148 = getelementptr inbounds i32, i32* %115, i64 1
  %149 = getelementptr inbounds i32, i32* %130, i64 1
  %150 = select i1 %129, i32* %149, i32* %136
  %151 = getelementptr inbounds i32, i32* %130, i64 2
  %152 = select i1 %129, i32* %151, i32* %138
  %153 = getelementptr inbounds i32, i32* %130, i64 3
  %154 = select i1 %129, i32* %153, i32* %140
  br label %155

155:                                              ; preds = %134, %179
  %156 = phi i32 [ %132, %134 ], [ %180, %179 ]
  %157 = phi i32 [ 0, %134 ], [ %181, %179 ]
  %158 = load i32, i32* %150, align 4
  %159 = icmp sgt i32 %158, 0
  br i1 %159, label %167, label %179

160:                                              ; preds = %179, %113
  %161 = xor i1 %129, true
  %162 = icmp eq i32* %130, null
  %163 = or i1 %162, %161
  br i1 %163, label %166, label %164

164:                                              ; preds = %160
  %165 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %165) #10
  br label %166

166:                                              ; preds = %160, %164
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  ret void

167:                                              ; preds = %155, %194
  %168 = phi i32 [ %195, %194 ], [ %158, %155 ]
  %169 = phi i32 [ %196, %194 ], [ 0, %155 ]
  %170 = load i32, i32* %152, align 4
  %171 = icmp sgt i32 %170, 0
  br i1 %171, label %172, label %194

172:                                              ; preds = %167
  %173 = load i32, i32* %148, align 4
  %174 = mul nsw i32 %173, %157
  %175 = add nsw i32 %174, %169
  %176 = load i32, i32* %154, align 4
  br label %183

177:                                              ; preds = %194
  %178 = load i32, i32* %131, align 4
  br label %179

179:                                              ; preds = %177, %155
  %180 = phi i32 [ %178, %177 ], [ %156, %155 ]
  %181 = add nuw nsw i32 %157, 1
  %182 = icmp slt i32 %181, %180
  br i1 %182, label %155, label %160

183:                                              ; preds = %172, %200
  %184 = phi i32 [ %170, %172 ], [ %201, %200 ]
  %185 = phi i32 [ %176, %172 ], [ %202, %200 ]
  %186 = phi i32 [ 0, %172 ], [ %203, %200 ]
  %187 = icmp sgt i32 %185, 0
  br i1 %187, label %188, label %200

188:                                              ; preds = %183
  %189 = load i32, i32* %138, align 8
  %190 = mul nsw i32 %175, %189
  %191 = add nsw i32 %190, %186
  br label %205

192:                                              ; preds = %200
  %193 = load i32, i32* %150, align 4
  br label %194

194:                                              ; preds = %192, %167
  %195 = phi i32 [ %193, %192 ], [ %168, %167 ]
  %196 = add nuw nsw i32 %169, 1
  %197 = icmp slt i32 %196, %195
  br i1 %197, label %167, label %177

198:                                              ; preds = %267
  %199 = load i32, i32* %152, align 4
  br label %200

200:                                              ; preds = %198, %183
  %201 = phi i32 [ %199, %198 ], [ %184, %183 ]
  %202 = phi i32 [ %295, %198 ], [ %185, %183 ]
  %203 = add nuw nsw i32 %186, 1
  %204 = icmp slt i32 %203, %201
  br i1 %204, label %183, label %192

205:                                              ; preds = %188, %267
  %206 = phi i32 [ 0, %188 ], [ %294, %267 ]
  %207 = load i32, i32* %141, align 4
  %208 = load i32, i32* %12, align 4
  %209 = mul nsw i32 %208, %157
  %210 = load i32, i32* %13, align 4
  %211 = mul nsw i32 %210, %169
  %212 = add nsw i32 %211, %209
  %213 = load i32, i32* %14, align 4
  %214 = mul nsw i32 %213, %186
  %215 = add nsw i32 %212, %214
  %216 = load i32, i32* %15, align 4
  %217 = mul nsw i32 %216, %206
  %218 = add nsw i32 %215, %217
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds i16, i16* %2, i64 %219
  %221 = load i16, i16* %220, align 2
  %222 = sext i16 %221 to i32
  %223 = add nsw i32 %207, %222
  %224 = load i32, i32* %142, align 4
  %225 = load i32, i32* %18, align 4
  %226 = mul nsw i32 %225, %157
  %227 = load i32, i32* %19, align 4
  %228 = mul nsw i32 %227, %169
  %229 = add nsw i32 %228, %226
  %230 = load i32, i32* %20, align 4
  %231 = mul nsw i32 %230, %186
  %232 = add nsw i32 %229, %231
  %233 = load i32, i32* %21, align 4
  %234 = mul nsw i32 %233, %206
  %235 = add nsw i32 %232, %234
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds i16, i16* %4, i64 %236
  %238 = load i16, i16* %237, align 2
  %239 = sext i16 %238 to i32
  %240 = add nsw i32 %224, %239
  %241 = load i32, i32* %143, align 4
  %242 = mul nsw i32 %240, %223
  %243 = load i32, i32* %144, align 4
  %244 = load i32, i32* %145, align 4
  %245 = icmp sgt i32 %244, 0
  %246 = sub nsw i32 0, %244
  %247 = select i1 %245, i32 0, i32 %246
  %248 = shl i32 1, %244
  %249 = select i1 %245, i32 %248, i32 1
  %250 = mul nsw i32 %242, %249
  %251 = icmp eq i32 %250, %243
  br i1 %251, label %256, label %252

252:                                              ; preds = %205
  %253 = sext i32 %250 to i64
  %254 = sext i32 %243 to i64
  %255 = mul nsw i64 %253, %254
  br label %260

256:                                              ; preds = %205
  %257 = icmp eq i32 %243, -2147483648
  %258 = sext i32 %243 to i64
  %259 = mul nsw i64 %258, %258
  br i1 %257, label %267, label %260

260:                                              ; preds = %256, %252
  %261 = phi i64 [ %255, %252 ], [ %259, %256 ]
  %262 = icmp sgt i64 %261, -1
  %263 = select i1 %262, i64 1073741824, i64 -1073741823
  %264 = add nsw i64 %263, %261
  %265 = sdiv i64 %264, 2147483648
  %266 = trunc i64 %265 to i32
  br label %267

267:                                              ; preds = %256, %260
  %268 = phi i32 [ %266, %260 ], [ 2147483647, %256 ]
  %269 = zext i32 %247 to i64
  %270 = shl nsw i64 -1, %269
  %271 = trunc i64 %270 to i32
  %272 = xor i32 %271, -1
  %273 = and i32 %268, %272
  %274 = ashr i32 %272, 1
  %275 = lshr i32 %268, 31
  %276 = add nsw i32 %275, %274
  %277 = ashr i32 %268, %247
  %278 = icmp sgt i32 %273, %276
  %279 = zext i1 %278 to i32
  %280 = add i32 %277, %241
  %281 = add i32 %280, %279
  %282 = load i32, i32* %147, align 4
  %283 = icmp slt i32 %282, %281
  %284 = select i1 %283, i32 %281, i32 %282
  %285 = load i32, i32* %146, align 4
  %286 = icmp slt i32 %284, %285
  %287 = select i1 %286, i32 %284, i32 %285
  %288 = trunc i32 %287 to i16
  %289 = load i32, i32* %140, align 4
  %290 = mul nsw i32 %191, %289
  %291 = add nsw i32 %290, %206
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds i16, i16* %6, i64 %292
  store i16 %288, i16* %293, align 2
  %294 = add nuw nsw i32 %206, 1
  %295 = load i32, i32* %154, align 4
  %296 = icmp slt i32 %294, %295
  br i1 %296, label %205, label %198
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite21reference_integer_ops3MulIsEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i16*, %"class.tflite::RuntimeShape"* dereferenceable(32), i16*, %"class.tflite::RuntimeShape"* dereferenceable(32), i16*) local_unnamed_addr #7 comdat {
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 5
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  br i1 %10, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %union.anon, %union.anon* %11, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  br label %18

15:                                               ; preds = %7
  %16 = bitcast %union.anon* %11 to i32*
  %17 = icmp sgt i32 %9, 0
  br i1 %17, label %18, label %118

18:                                               ; preds = %15, %12
  %19 = phi i32* [ %14, %12 ], [ %16, %15 ]
  %20 = zext i32 %9 to i64
  %21 = icmp ult i32 %9, 8
  br i1 %21, label %107, label %22

22:                                               ; preds = %18
  %23 = and i64 %20, 4294967288
  %24 = add nsw i64 %23, -8
  %25 = lshr exact i64 %24, 3
  %26 = add nuw nsw i64 %25, 1
  %27 = and i64 %26, 3
  %28 = icmp ult i64 %24, 24
  br i1 %28, label %74, label %29

29:                                               ; preds = %22
  %30 = sub nsw i64 %26, %27
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %71, %31 ]
  %33 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %29 ], [ %69, %31 ]
  %34 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %29 ], [ %70, %31 ]
  %35 = phi i64 [ %30, %29 ], [ %72, %31 ]
  %36 = getelementptr inbounds i32, i32* %19, i64 %32
  %37 = bitcast i32* %36 to <4 x i32>*
  %38 = load <4 x i32>, <4 x i32>* %37, align 4
  %39 = getelementptr inbounds i32, i32* %36, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  %41 = load <4 x i32>, <4 x i32>* %40, align 4
  %42 = mul nsw <4 x i32> %38, %33
  %43 = mul nsw <4 x i32> %41, %34
  %44 = or i64 %32, 8
  %45 = getelementptr inbounds i32, i32* %19, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  %47 = load <4 x i32>, <4 x i32>* %46, align 4
  %48 = getelementptr inbounds i32, i32* %45, i64 4
  %49 = bitcast i32* %48 to <4 x i32>*
  %50 = load <4 x i32>, <4 x i32>* %49, align 4
  %51 = mul nsw <4 x i32> %47, %42
  %52 = mul nsw <4 x i32> %50, %43
  %53 = or i64 %32, 16
  %54 = getelementptr inbounds i32, i32* %19, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  %56 = load <4 x i32>, <4 x i32>* %55, align 4
  %57 = getelementptr inbounds i32, i32* %54, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  %59 = load <4 x i32>, <4 x i32>* %58, align 4
  %60 = mul nsw <4 x i32> %56, %51
  %61 = mul nsw <4 x i32> %59, %52
  %62 = or i64 %32, 24
  %63 = getelementptr inbounds i32, i32* %19, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  %65 = load <4 x i32>, <4 x i32>* %64, align 4
  %66 = getelementptr inbounds i32, i32* %63, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  %68 = load <4 x i32>, <4 x i32>* %67, align 4
  %69 = mul nsw <4 x i32> %65, %60
  %70 = mul nsw <4 x i32> %68, %61
  %71 = add i64 %32, 32
  %72 = add i64 %35, -4
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %31, !llvm.loop !246

74:                                               ; preds = %31, %22
  %75 = phi <4 x i32> [ undef, %22 ], [ %69, %31 ]
  %76 = phi <4 x i32> [ undef, %22 ], [ %70, %31 ]
  %77 = phi i64 [ 0, %22 ], [ %71, %31 ]
  %78 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %22 ], [ %69, %31 ]
  %79 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %22 ], [ %70, %31 ]
  %80 = icmp eq i64 %27, 0
  br i1 %80, label %97, label %81

81:                                               ; preds = %74, %81
  %82 = phi i64 [ %94, %81 ], [ %77, %74 ]
  %83 = phi <4 x i32> [ %92, %81 ], [ %78, %74 ]
  %84 = phi <4 x i32> [ %93, %81 ], [ %79, %74 ]
  %85 = phi i64 [ %95, %81 ], [ %27, %74 ]
  %86 = getelementptr inbounds i32, i32* %19, i64 %82
  %87 = bitcast i32* %86 to <4 x i32>*
  %88 = load <4 x i32>, <4 x i32>* %87, align 4
  %89 = getelementptr inbounds i32, i32* %86, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4
  %92 = mul nsw <4 x i32> %88, %83
  %93 = mul nsw <4 x i32> %91, %84
  %94 = add i64 %82, 8
  %95 = add i64 %85, -1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %81, !llvm.loop !247

97:                                               ; preds = %81, %74
  %98 = phi <4 x i32> [ %75, %74 ], [ %92, %81 ]
  %99 = phi <4 x i32> [ %76, %74 ], [ %93, %81 ]
  %100 = mul <4 x i32> %99, %98
  %101 = shufflevector <4 x i32> %100, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %102 = mul <4 x i32> %100, %101
  %103 = shufflevector <4 x i32> %102, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %104 = mul <4 x i32> %102, %103
  %105 = extractelement <4 x i32> %104, i32 0
  %106 = icmp eq i64 %23, %20
  br i1 %106, label %118, label %107

107:                                              ; preds = %97, %18
  %108 = phi i64 [ 0, %18 ], [ %23, %97 ]
  %109 = phi i32 [ 1, %18 ], [ %105, %97 ]
  br label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %116, %110 ], [ %108, %107 ]
  %112 = phi i32 [ %115, %110 ], [ %109, %107 ]
  %113 = getelementptr inbounds i32, i32* %19, i64 %111
  %114 = load i32, i32* %113, align 4
  %115 = mul nsw i32 %114, %112
  %116 = add nuw nsw i64 %111, 1
  %117 = icmp eq i64 %116, %20
  br i1 %117, label %118, label %110, !llvm.loop !248

118:                                              ; preds = %110, %97, %15
  %119 = phi i32 [ 1, %15 ], [ %105, %97 ], [ %115, %110 ]
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  br i1 %122, label %124, label %127

124:                                              ; preds = %118
  %125 = getelementptr inbounds %union.anon, %union.anon* %123, i64 0, i32 0
  %126 = load i32*, i32** %125, align 8
  br label %130

127:                                              ; preds = %118
  %128 = bitcast %union.anon* %123 to i32*
  %129 = icmp sgt i32 %121, 0
  br i1 %129, label %130, label %230

130:                                              ; preds = %127, %124
  %131 = phi i32* [ %126, %124 ], [ %128, %127 ]
  %132 = zext i32 %121 to i64
  %133 = icmp ult i32 %121, 8
  br i1 %133, label %219, label %134

134:                                              ; preds = %130
  %135 = and i64 %132, 4294967288
  %136 = add nsw i64 %135, -8
  %137 = lshr exact i64 %136, 3
  %138 = add nuw nsw i64 %137, 1
  %139 = and i64 %138, 3
  %140 = icmp ult i64 %136, 24
  br i1 %140, label %186, label %141

141:                                              ; preds = %134
  %142 = sub nsw i64 %138, %139
  br label %143

143:                                              ; preds = %143, %141
  %144 = phi i64 [ 0, %141 ], [ %183, %143 ]
  %145 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %141 ], [ %181, %143 ]
  %146 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %141 ], [ %182, %143 ]
  %147 = phi i64 [ %142, %141 ], [ %184, %143 ]
  %148 = getelementptr inbounds i32, i32* %131, i64 %144
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4
  %151 = getelementptr inbounds i32, i32* %148, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4
  %154 = mul nsw <4 x i32> %150, %145
  %155 = mul nsw <4 x i32> %153, %146
  %156 = or i64 %144, 8
  %157 = getelementptr inbounds i32, i32* %131, i64 %156
  %158 = bitcast i32* %157 to <4 x i32>*
  %159 = load <4 x i32>, <4 x i32>* %158, align 4
  %160 = getelementptr inbounds i32, i32* %157, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  %162 = load <4 x i32>, <4 x i32>* %161, align 4
  %163 = mul nsw <4 x i32> %159, %154
  %164 = mul nsw <4 x i32> %162, %155
  %165 = or i64 %144, 16
  %166 = getelementptr inbounds i32, i32* %131, i64 %165
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = getelementptr inbounds i32, i32* %166, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 4
  %172 = mul nsw <4 x i32> %168, %163
  %173 = mul nsw <4 x i32> %171, %164
  %174 = or i64 %144, 24
  %175 = getelementptr inbounds i32, i32* %131, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = getelementptr inbounds i32, i32* %175, i64 4
  %179 = bitcast i32* %178 to <4 x i32>*
  %180 = load <4 x i32>, <4 x i32>* %179, align 4
  %181 = mul nsw <4 x i32> %177, %172
  %182 = mul nsw <4 x i32> %180, %173
  %183 = add i64 %144, 32
  %184 = add i64 %147, -4
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %143, !llvm.loop !249

186:                                              ; preds = %143, %134
  %187 = phi <4 x i32> [ undef, %134 ], [ %181, %143 ]
  %188 = phi <4 x i32> [ undef, %134 ], [ %182, %143 ]
  %189 = phi i64 [ 0, %134 ], [ %183, %143 ]
  %190 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %134 ], [ %181, %143 ]
  %191 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %134 ], [ %182, %143 ]
  %192 = icmp eq i64 %139, 0
  br i1 %192, label %209, label %193

193:                                              ; preds = %186, %193
  %194 = phi i64 [ %206, %193 ], [ %189, %186 ]
  %195 = phi <4 x i32> [ %204, %193 ], [ %190, %186 ]
  %196 = phi <4 x i32> [ %205, %193 ], [ %191, %186 ]
  %197 = phi i64 [ %207, %193 ], [ %139, %186 ]
  %198 = getelementptr inbounds i32, i32* %131, i64 %194
  %199 = bitcast i32* %198 to <4 x i32>*
  %200 = load <4 x i32>, <4 x i32>* %199, align 4
  %201 = getelementptr inbounds i32, i32* %198, i64 4
  %202 = bitcast i32* %201 to <4 x i32>*
  %203 = load <4 x i32>, <4 x i32>* %202, align 4
  %204 = mul nsw <4 x i32> %200, %195
  %205 = mul nsw <4 x i32> %203, %196
  %206 = add i64 %194, 8
  %207 = add i64 %197, -1
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %193, !llvm.loop !250

209:                                              ; preds = %193, %186
  %210 = phi <4 x i32> [ %187, %186 ], [ %204, %193 ]
  %211 = phi <4 x i32> [ %188, %186 ], [ %205, %193 ]
  %212 = mul <4 x i32> %211, %210
  %213 = shufflevector <4 x i32> %212, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %214 = mul <4 x i32> %212, %213
  %215 = shufflevector <4 x i32> %214, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %216 = mul <4 x i32> %214, %215
  %217 = extractelement <4 x i32> %216, i32 0
  %218 = icmp eq i64 %135, %132
  br i1 %218, label %230, label %219

219:                                              ; preds = %209, %130
  %220 = phi i64 [ 0, %130 ], [ %135, %209 ]
  %221 = phi i32 [ 1, %130 ], [ %217, %209 ]
  br label %222

222:                                              ; preds = %219, %222
  %223 = phi i64 [ %228, %222 ], [ %220, %219 ]
  %224 = phi i32 [ %227, %222 ], [ %221, %219 ]
  %225 = getelementptr inbounds i32, i32* %131, i64 %223
  %226 = load i32, i32* %225, align 4
  %227 = mul nsw i32 %226, %224
  %228 = add nuw nsw i64 %223, 1
  %229 = icmp eq i64 %228, %132
  br i1 %229, label %230, label %222, !llvm.loop !251

230:                                              ; preds = %222, %209, %127
  %231 = phi i32 [ 1, %127 ], [ %217, %209 ], [ %227, %222 ]
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %233 = load i32, i32* %232, align 8
  %234 = icmp sgt i32 %233, 5
  %235 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %234, label %236, label %239

236:                                              ; preds = %230
  %237 = getelementptr inbounds %union.anon, %union.anon* %235, i64 0, i32 0
  %238 = load i32*, i32** %237, align 8
  br label %242

239:                                              ; preds = %230
  %240 = bitcast %union.anon* %235 to i32*
  %241 = icmp sgt i32 %233, 0
  br i1 %241, label %242, label %342

242:                                              ; preds = %239, %236
  %243 = phi i32* [ %238, %236 ], [ %240, %239 ]
  %244 = zext i32 %233 to i64
  %245 = icmp ult i32 %233, 8
  br i1 %245, label %331, label %246

246:                                              ; preds = %242
  %247 = and i64 %244, 4294967288
  %248 = add nsw i64 %247, -8
  %249 = lshr exact i64 %248, 3
  %250 = add nuw nsw i64 %249, 1
  %251 = and i64 %250, 3
  %252 = icmp ult i64 %248, 24
  br i1 %252, label %298, label %253

253:                                              ; preds = %246
  %254 = sub nsw i64 %250, %251
  br label %255

255:                                              ; preds = %255, %253
  %256 = phi i64 [ 0, %253 ], [ %295, %255 ]
  %257 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %253 ], [ %293, %255 ]
  %258 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %253 ], [ %294, %255 ]
  %259 = phi i64 [ %254, %253 ], [ %296, %255 ]
  %260 = getelementptr inbounds i32, i32* %243, i64 %256
  %261 = bitcast i32* %260 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4
  %263 = getelementptr inbounds i32, i32* %260, i64 4
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4
  %266 = mul nsw <4 x i32> %262, %257
  %267 = mul nsw <4 x i32> %265, %258
  %268 = or i64 %256, 8
  %269 = getelementptr inbounds i32, i32* %243, i64 %268
  %270 = bitcast i32* %269 to <4 x i32>*
  %271 = load <4 x i32>, <4 x i32>* %270, align 4
  %272 = getelementptr inbounds i32, i32* %269, i64 4
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4
  %275 = mul nsw <4 x i32> %271, %266
  %276 = mul nsw <4 x i32> %274, %267
  %277 = or i64 %256, 16
  %278 = getelementptr inbounds i32, i32* %243, i64 %277
  %279 = bitcast i32* %278 to <4 x i32>*
  %280 = load <4 x i32>, <4 x i32>* %279, align 4
  %281 = getelementptr inbounds i32, i32* %278, i64 4
  %282 = bitcast i32* %281 to <4 x i32>*
  %283 = load <4 x i32>, <4 x i32>* %282, align 4
  %284 = mul nsw <4 x i32> %280, %275
  %285 = mul nsw <4 x i32> %283, %276
  %286 = or i64 %256, 24
  %287 = getelementptr inbounds i32, i32* %243, i64 %286
  %288 = bitcast i32* %287 to <4 x i32>*
  %289 = load <4 x i32>, <4 x i32>* %288, align 4
  %290 = getelementptr inbounds i32, i32* %287, i64 4
  %291 = bitcast i32* %290 to <4 x i32>*
  %292 = load <4 x i32>, <4 x i32>* %291, align 4
  %293 = mul nsw <4 x i32> %289, %284
  %294 = mul nsw <4 x i32> %292, %285
  %295 = add i64 %256, 32
  %296 = add i64 %259, -4
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %255, !llvm.loop !252

298:                                              ; preds = %255, %246
  %299 = phi <4 x i32> [ undef, %246 ], [ %293, %255 ]
  %300 = phi <4 x i32> [ undef, %246 ], [ %294, %255 ]
  %301 = phi i64 [ 0, %246 ], [ %295, %255 ]
  %302 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %246 ], [ %293, %255 ]
  %303 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %246 ], [ %294, %255 ]
  %304 = icmp eq i64 %251, 0
  br i1 %304, label %321, label %305

305:                                              ; preds = %298, %305
  %306 = phi i64 [ %318, %305 ], [ %301, %298 ]
  %307 = phi <4 x i32> [ %316, %305 ], [ %302, %298 ]
  %308 = phi <4 x i32> [ %317, %305 ], [ %303, %298 ]
  %309 = phi i64 [ %319, %305 ], [ %251, %298 ]
  %310 = getelementptr inbounds i32, i32* %243, i64 %306
  %311 = bitcast i32* %310 to <4 x i32>*
  %312 = load <4 x i32>, <4 x i32>* %311, align 4
  %313 = getelementptr inbounds i32, i32* %310, i64 4
  %314 = bitcast i32* %313 to <4 x i32>*
  %315 = load <4 x i32>, <4 x i32>* %314, align 4
  %316 = mul nsw <4 x i32> %312, %307
  %317 = mul nsw <4 x i32> %315, %308
  %318 = add i64 %306, 8
  %319 = add i64 %309, -1
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %305, !llvm.loop !253

321:                                              ; preds = %305, %298
  %322 = phi <4 x i32> [ %299, %298 ], [ %316, %305 ]
  %323 = phi <4 x i32> [ %300, %298 ], [ %317, %305 ]
  %324 = mul <4 x i32> %323, %322
  %325 = shufflevector <4 x i32> %324, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %326 = mul <4 x i32> %324, %325
  %327 = shufflevector <4 x i32> %326, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %328 = mul <4 x i32> %326, %327
  %329 = extractelement <4 x i32> %328, i32 0
  %330 = icmp eq i64 %247, %244
  br i1 %330, label %342, label %331

331:                                              ; preds = %321, %242
  %332 = phi i64 [ 0, %242 ], [ %247, %321 ]
  %333 = phi i32 [ 1, %242 ], [ %329, %321 ]
  br label %334

334:                                              ; preds = %331, %334
  %335 = phi i64 [ %340, %334 ], [ %332, %331 ]
  %336 = phi i32 [ %339, %334 ], [ %333, %331 ]
  %337 = getelementptr inbounds i32, i32* %243, i64 %335
  %338 = load i32, i32* %337, align 4
  %339 = mul nsw i32 %338, %336
  %340 = add nuw nsw i64 %335, 1
  %341 = icmp eq i64 %340, %244
  br i1 %341, label %342, label %334, !llvm.loop !254

342:                                              ; preds = %334, %321, %239
  %343 = phi i32 [ 1, %239 ], [ %329, %321 ], [ %339, %334 ]
  %344 = icmp eq i32 %119, %231
  br i1 %344, label %346, label %345

345:                                              ; preds = %342
  tail call void @abort() #12
  unreachable

346:                                              ; preds = %342
  %347 = icmp eq i32 %119, %343
  br i1 %347, label %349, label %348

348:                                              ; preds = %346
  tail call void @abort() #12
  unreachable

349:                                              ; preds = %346
  %350 = icmp sgt i32 %119, 0
  br i1 %350, label %351, label %423

351:                                              ; preds = %349
  %352 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 1
  %353 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 2
  %354 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 3
  %355 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 4
  %356 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 5
  %357 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 12
  %358 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 11
  %359 = zext i32 %119 to i64
  br label %360

360:                                              ; preds = %398, %351
  %361 = phi i64 [ 0, %351 ], [ %421, %398 ]
  %362 = load i32, i32* %352, align 4
  %363 = getelementptr inbounds i16, i16* %2, i64 %361
  %364 = load i16, i16* %363, align 2
  %365 = sext i16 %364 to i32
  %366 = add nsw i32 %362, %365
  %367 = load i32, i32* %353, align 4
  %368 = getelementptr inbounds i16, i16* %4, i64 %361
  %369 = load i16, i16* %368, align 2
  %370 = sext i16 %369 to i32
  %371 = add nsw i32 %367, %370
  %372 = load i32, i32* %354, align 4
  %373 = mul nsw i32 %371, %366
  %374 = load i32, i32* %355, align 4
  %375 = load i32, i32* %356, align 4
  %376 = icmp sgt i32 %375, 0
  %377 = sub nsw i32 0, %375
  %378 = select i1 %376, i32 0, i32 %377
  %379 = shl i32 1, %375
  %380 = select i1 %376, i32 %379, i32 1
  %381 = mul nsw i32 %373, %380
  %382 = icmp eq i32 %381, %374
  br i1 %382, label %387, label %383

383:                                              ; preds = %360
  %384 = sext i32 %381 to i64
  %385 = sext i32 %374 to i64
  %386 = mul nsw i64 %384, %385
  br label %391

387:                                              ; preds = %360
  %388 = icmp eq i32 %374, -2147483648
  %389 = sext i32 %374 to i64
  %390 = mul nsw i64 %389, %389
  br i1 %388, label %398, label %391

391:                                              ; preds = %387, %383
  %392 = phi i64 [ %386, %383 ], [ %390, %387 ]
  %393 = icmp sgt i64 %392, -1
  %394 = select i1 %393, i64 1073741824, i64 -1073741823
  %395 = add nsw i64 %394, %392
  %396 = sdiv i64 %395, 2147483648
  %397 = trunc i64 %396 to i32
  br label %398

398:                                              ; preds = %391, %387
  %399 = phi i32 [ %397, %391 ], [ 2147483647, %387 ]
  %400 = zext i32 %378 to i64
  %401 = shl nsw i64 -1, %400
  %402 = trunc i64 %401 to i32
  %403 = xor i32 %402, -1
  %404 = and i32 %399, %403
  %405 = ashr i32 %403, 1
  %406 = lshr i32 %399, 31
  %407 = add nsw i32 %406, %405
  %408 = ashr i32 %399, %378
  %409 = icmp sgt i32 %404, %407
  %410 = zext i1 %409 to i32
  %411 = add i32 %408, %372
  %412 = add i32 %411, %410
  %413 = load i32, i32* %358, align 4
  %414 = icmp slt i32 %413, %412
  %415 = select i1 %414, i32 %412, i32 %413
  %416 = load i32, i32* %357, align 4
  %417 = icmp slt i32 %415, %416
  %418 = select i1 %417, i32 %415, i32 %416
  %419 = trunc i32 %418 to i16
  %420 = getelementptr inbounds i16, i16* %6, i64 %361
  store i16 %419, i16* %420, align 2
  %421 = add nuw nsw i64 %361, 1
  %422 = icmp eq i64 %421, %359
  br i1 %422, label %423, label %360

423:                                              ; preds = %398, %349
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops18BroadcastMul4DSlowERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS6_S8_S6_Ph(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #7 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %8, i64 0, i32 1, i64 0
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %8, i64 0, i32 1, i64 1
  %14 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %8, i64 0, i32 1, i64 2
  %15 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %8, i64 0, i32 1, i64 3
  %16 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  %17 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #11
  %18 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 1
  %20 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 2
  %21 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 3
  %22 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %22, i8 -86, i64 32, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9)
  %23 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 32, i1 false)
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %24, align 8, !alias.scope !255
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %26 = load i32, i32* %25, align 8, !noalias !255
  %27 = icmp sgt i32 %26, 4
  br i1 %27, label %28, label %29

28:                                               ; preds = %7
  call void @abort() #12, !noalias !255
  unreachable

29:                                               ; preds = %7
  store i32 4, i32* %24, align 8, !alias.scope !255
  %30 = sub i32 4, %26
  %31 = icmp sgt i32 %30, 0
  %32 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  br i1 %31, label %33, label %113

33:                                               ; preds = %29
  %34 = bitcast %union.anon* %32 to [5 x i32]*
  %35 = zext i32 %30 to i64
  %36 = icmp ult i32 %30, 8
  br i1 %36, label %106, label %37

37:                                               ; preds = %33
  %38 = and i64 %35, 4294967288
  %39 = add nsw i64 %38, -8
  %40 = lshr exact i64 %39, 3
  %41 = add nuw nsw i64 %40, 1
  %42 = and i64 %41, 7
  %43 = icmp ult i64 %39, 56
  br i1 %43, label %91, label %44

44:                                               ; preds = %37
  %45 = sub nsw i64 %41, %42
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi i64 [ 0, %44 ], [ %88, %46 ]
  %48 = phi i64 [ %45, %44 ], [ %89, %46 ]
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %47
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !255
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !255
  %53 = or i64 %47, 8
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !255
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !255
  %58 = or i64 %47, 16
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !255
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !255
  %63 = or i64 %47, 24
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !255
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !255
  %68 = or i64 %47, 32
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !255
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !255
  %73 = or i64 %47, 40
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !255
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !255
  %78 = or i64 %47, 48
  %79 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %78
  %80 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %80, align 8, !alias.scope !255
  %81 = getelementptr inbounds i32, i32* %79, i64 4
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !255
  %83 = or i64 %47, 56
  %84 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %83
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %85, align 8, !alias.scope !255
  %86 = getelementptr inbounds i32, i32* %84, i64 4
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 8, !alias.scope !255
  %88 = add i64 %47, 64
  %89 = add i64 %48, -8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %46, !llvm.loop !258

91:                                               ; preds = %46, %37
  %92 = phi i64 [ 0, %37 ], [ %88, %46 ]
  %93 = icmp eq i64 %42, 0
  br i1 %93, label %104, label %94

94:                                               ; preds = %91, %94
  %95 = phi i64 [ %101, %94 ], [ %92, %91 ]
  %96 = phi i64 [ %102, %94 ], [ %42, %91 ]
  %97 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %95
  %98 = bitcast i32* %97 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %98, align 8, !alias.scope !255
  %99 = getelementptr inbounds i32, i32* %97, i64 4
  %100 = bitcast i32* %99 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %100, align 8, !alias.scope !255
  %101 = add i64 %95, 8
  %102 = add i64 %96, -1
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %94, !llvm.loop !259

104:                                              ; preds = %94, %91
  %105 = icmp eq i64 %38, %35
  br i1 %105, label %113, label %106

106:                                              ; preds = %104, %33
  %107 = phi i64 [ 0, %33 ], [ %38, %104 ]
  br label %108

108:                                              ; preds = %106, %108
  %109 = phi i64 [ %111, %108 ], [ %107, %106 ]
  %110 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %109
  store i32 1, i32* %110, align 4, !alias.scope !255
  %111 = add nuw nsw i64 %109, 1
  %112 = icmp eq i64 %111, %35
  br i1 %112, label %113, label %108, !llvm.loop !260

113:                                              ; preds = %108, %104, %29
  %114 = getelementptr inbounds %union.anon, %union.anon* %32, i64 0, i32 0
  %115 = bitcast %union.anon* %32 to i32*
  %116 = sext i32 %30 to i64
  %117 = getelementptr inbounds i32, i32* %115, i64 %116
  %118 = bitcast i32* %117 to i8*
  %119 = icmp sgt i32 %26, 5
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %121 = getelementptr inbounds %union.anon, %union.anon* %120, i64 0, i32 0
  %122 = load i32*, i32** %121, align 8, !noalias !255
  %123 = bitcast %union.anon* %120 to i32*
  %124 = select i1 %119, i32* %122, i32* %123
  %125 = bitcast i32* %124 to i8*
  %126 = sext i32 %26 to i64
  %127 = shl nsw i64 %126, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %118, i8* align 4 %125, i64 %127, i1 false) #11
  %128 = load i32, i32* %24, align 8
  %129 = icmp sgt i32 %128, 5
  %130 = load i32*, i32** %114, align 8
  %131 = select i1 %129, i32* %130, i32* %115
  %132 = load i32, i32* %131, align 4
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %134, label %160

134:                                              ; preds = %113
  %135 = bitcast %union.anon* %32 to [5 x i32]*
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %135, i64 0, i64 1
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1
  %138 = bitcast [16 x i8]* %137 to i32*
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1, i64 4
  %140 = bitcast i8* %139 to i32*
  %141 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 1
  %142 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 2
  %143 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 3
  %144 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 4
  %145 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 5
  %146 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 12
  %147 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 11
  %148 = getelementptr inbounds i32, i32* %115, i64 1
  %149 = getelementptr inbounds i32, i32* %130, i64 1
  %150 = select i1 %129, i32* %149, i32* %136
  %151 = getelementptr inbounds i32, i32* %130, i64 2
  %152 = select i1 %129, i32* %151, i32* %138
  %153 = getelementptr inbounds i32, i32* %130, i64 3
  %154 = select i1 %129, i32* %153, i32* %140
  br label %155

155:                                              ; preds = %134, %179
  %156 = phi i32 [ %132, %134 ], [ %180, %179 ]
  %157 = phi i32 [ 0, %134 ], [ %181, %179 ]
  %158 = load i32, i32* %150, align 4
  %159 = icmp sgt i32 %158, 0
  br i1 %159, label %167, label %179

160:                                              ; preds = %179, %113
  %161 = xor i1 %129, true
  %162 = icmp eq i32* %130, null
  %163 = or i1 %162, %161
  br i1 %163, label %166, label %164

164:                                              ; preds = %160
  %165 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %165) #10
  br label %166

166:                                              ; preds = %160, %164
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  ret void

167:                                              ; preds = %155, %194
  %168 = phi i32 [ %195, %194 ], [ %158, %155 ]
  %169 = phi i32 [ %196, %194 ], [ 0, %155 ]
  %170 = load i32, i32* %152, align 4
  %171 = icmp sgt i32 %170, 0
  br i1 %171, label %172, label %194

172:                                              ; preds = %167
  %173 = load i32, i32* %148, align 4
  %174 = mul nsw i32 %173, %157
  %175 = add nsw i32 %174, %169
  %176 = load i32, i32* %154, align 4
  br label %183

177:                                              ; preds = %194
  %178 = load i32, i32* %131, align 4
  br label %179

179:                                              ; preds = %177, %155
  %180 = phi i32 [ %178, %177 ], [ %156, %155 ]
  %181 = add nuw nsw i32 %157, 1
  %182 = icmp slt i32 %181, %180
  br i1 %182, label %155, label %160

183:                                              ; preds = %172, %200
  %184 = phi i32 [ %170, %172 ], [ %201, %200 ]
  %185 = phi i32 [ %176, %172 ], [ %202, %200 ]
  %186 = phi i32 [ 0, %172 ], [ %203, %200 ]
  %187 = icmp sgt i32 %185, 0
  br i1 %187, label %188, label %200

188:                                              ; preds = %183
  %189 = load i32, i32* %138, align 8
  %190 = mul nsw i32 %175, %189
  %191 = add nsw i32 %190, %186
  br label %205

192:                                              ; preds = %200
  %193 = load i32, i32* %150, align 4
  br label %194

194:                                              ; preds = %192, %167
  %195 = phi i32 [ %193, %192 ], [ %168, %167 ]
  %196 = add nuw nsw i32 %169, 1
  %197 = icmp slt i32 %196, %195
  br i1 %197, label %167, label %177

198:                                              ; preds = %267
  %199 = load i32, i32* %152, align 4
  br label %200

200:                                              ; preds = %198, %183
  %201 = phi i32 [ %199, %198 ], [ %184, %183 ]
  %202 = phi i32 [ %295, %198 ], [ %185, %183 ]
  %203 = add nuw nsw i32 %186, 1
  %204 = icmp slt i32 %203, %201
  br i1 %204, label %183, label %192

205:                                              ; preds = %188, %267
  %206 = phi i32 [ 0, %188 ], [ %294, %267 ]
  %207 = load i32, i32* %141, align 4
  %208 = load i32, i32* %12, align 4
  %209 = mul nsw i32 %208, %157
  %210 = load i32, i32* %13, align 4
  %211 = mul nsw i32 %210, %169
  %212 = add nsw i32 %211, %209
  %213 = load i32, i32* %14, align 4
  %214 = mul nsw i32 %213, %186
  %215 = add nsw i32 %212, %214
  %216 = load i32, i32* %15, align 4
  %217 = mul nsw i32 %216, %206
  %218 = add nsw i32 %215, %217
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds i8, i8* %2, i64 %219
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i32
  %223 = add nsw i32 %207, %222
  %224 = load i32, i32* %142, align 4
  %225 = load i32, i32* %18, align 4
  %226 = mul nsw i32 %225, %157
  %227 = load i32, i32* %19, align 4
  %228 = mul nsw i32 %227, %169
  %229 = add nsw i32 %228, %226
  %230 = load i32, i32* %20, align 4
  %231 = mul nsw i32 %230, %186
  %232 = add nsw i32 %229, %231
  %233 = load i32, i32* %21, align 4
  %234 = mul nsw i32 %233, %206
  %235 = add nsw i32 %232, %234
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds i8, i8* %4, i64 %236
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i32
  %240 = add nsw i32 %224, %239
  %241 = load i32, i32* %143, align 4
  %242 = mul nsw i32 %240, %223
  %243 = load i32, i32* %144, align 4
  %244 = load i32, i32* %145, align 4
  %245 = icmp sgt i32 %244, 0
  %246 = sub nsw i32 0, %244
  %247 = select i1 %245, i32 0, i32 %246
  %248 = shl i32 1, %244
  %249 = select i1 %245, i32 %248, i32 1
  %250 = mul nsw i32 %242, %249
  %251 = icmp eq i32 %250, %243
  br i1 %251, label %256, label %252

252:                                              ; preds = %205
  %253 = sext i32 %250 to i64
  %254 = sext i32 %243 to i64
  %255 = mul nsw i64 %253, %254
  br label %260

256:                                              ; preds = %205
  %257 = icmp eq i32 %243, -2147483648
  %258 = sext i32 %243 to i64
  %259 = mul nsw i64 %258, %258
  br i1 %257, label %267, label %260

260:                                              ; preds = %256, %252
  %261 = phi i64 [ %255, %252 ], [ %259, %256 ]
  %262 = icmp sgt i64 %261, -1
  %263 = select i1 %262, i64 1073741824, i64 -1073741823
  %264 = add nsw i64 %263, %261
  %265 = sdiv i64 %264, 2147483648
  %266 = trunc i64 %265 to i32
  br label %267

267:                                              ; preds = %256, %260
  %268 = phi i32 [ %266, %260 ], [ 2147483647, %256 ]
  %269 = zext i32 %247 to i64
  %270 = shl nsw i64 -1, %269
  %271 = trunc i64 %270 to i32
  %272 = xor i32 %271, -1
  %273 = and i32 %268, %272
  %274 = ashr i32 %272, 1
  %275 = lshr i32 %268, 31
  %276 = add nsw i32 %275, %274
  %277 = ashr i32 %268, %247
  %278 = icmp sgt i32 %273, %276
  %279 = zext i1 %278 to i32
  %280 = add i32 %277, %241
  %281 = add i32 %280, %279
  %282 = load i32, i32* %147, align 4
  %283 = icmp slt i32 %282, %281
  %284 = select i1 %283, i32 %281, i32 %282
  %285 = load i32, i32* %146, align 4
  %286 = icmp slt i32 %284, %285
  %287 = select i1 %286, i32 %284, i32 %285
  %288 = trunc i32 %287 to i8
  %289 = load i32, i32* %140, align 4
  %290 = mul nsw i32 %191, %289
  %291 = add nsw i32 %290, %206
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds i8, i8* %6, i64 %292
  store i8 %288, i8* %293, align 1
  %294 = add nuw nsw i32 %206, 1
  %295 = load i32, i32* %154, align 4
  %296 = icmp slt i32 %294, %295
  br i1 %296, label %205, label %198
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE1EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteMulParams*, %"struct.tflite::ops::builtin::mul::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %8 = alloca %"struct.tflite::ArithmeticParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"class.tflite::RuntimeShape", align 8
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %23) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3mul13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_.op_params, i64 0, i32 0), i64 80, i1 false)
  %24 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  %25 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %7
  %27 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %27, align 8, !alias.scope !261
  br label %53

28:                                               ; preds = %7
  %29 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %30 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %29, align 8, !noalias !261
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 4, !noalias !261
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %30, i64 0, i32 1, i64 0
  %34 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %32, i32* %34, align 8, !alias.scope !261
  %35 = icmp sgt i32 %32, 5
  br i1 %35, label %36, label %43

36:                                               ; preds = %28
  %37 = sext i32 %32 to i64
  %38 = shl nsw i64 %37, 2
  %39 = tail call i8* @_Znam(i64 %38) #10, !noalias !261
  %40 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %41 = bitcast i32** %40 to i8**
  store i8* %39, i8** %41, align 8, !alias.scope !261
  %42 = bitcast i8* %39 to i32*
  br label %48

43:                                               ; preds = %28
  %44 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %45 = bitcast %union.anon* %44 to i32*
  %46 = sext i32 %32 to i64
  %47 = shl nsw i64 %46, 2
  br label %48

48:                                               ; preds = %43, %36
  %49 = phi i64 [ %38, %36 ], [ %47, %43 ]
  %50 = phi i32* [ %42, %36 ], [ %45, %43 ]
  %51 = bitcast i32* %50 to i8*
  %52 = bitcast i32* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %52, i64 %49, i1 false) #11
  br label %53

53:                                               ; preds = %26, %48
  %54 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #11
  %55 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %57, align 8, !alias.scope !264
  br label %83

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %60 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %59, align 8, !noalias !264
  %61 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %60, i64 0, i32 0
  %62 = load i32, i32* %61, align 4, !noalias !264
  %63 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %60, i64 0, i32 1, i64 0
  %64 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %62, i32* %64, align 8, !alias.scope !264
  %65 = icmp sgt i32 %62, 5
  br i1 %65, label %66, label %73

66:                                               ; preds = %58
  %67 = sext i32 %62 to i64
  %68 = shl nsw i64 %67, 2
  %69 = tail call i8* @_Znam(i64 %68) #10, !noalias !264
  %70 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %71 = bitcast i32** %70 to i8**
  store i8* %69, i8** %71, align 8, !alias.scope !264
  %72 = bitcast i8* %69 to i32*
  br label %78

73:                                               ; preds = %58
  %74 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %75 = bitcast %union.anon* %74 to i32*
  %76 = sext i32 %62 to i64
  %77 = shl nsw i64 %76, 2
  br label %78

78:                                               ; preds = %73, %66
  %79 = phi i64 [ %68, %66 ], [ %77, %73 ]
  %80 = phi i32* [ %72, %66 ], [ %75, %73 ]
  %81 = bitcast i32* %80 to i8*
  %82 = bitcast i32* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %81, i8* align 4 %82, i64 %79, i1 false) #11
  br label %83

83:                                               ; preds = %56, %78
  %84 = call zeroext i1 @_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, %"struct.tflite::ArithmeticParams"* nonnull %8)
  %85 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = icmp sgt i32 %86, 5
  br i1 %87, label %88, label %94

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = icmp eq i32* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %88
  %93 = bitcast i32* %90 to i8*
  call void @_ZdaPv(i8* %93) #10
  br label %94

94:                                               ; preds = %83, %88, %92
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #11
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %96 = load i32, i32* %95, align 8
  %97 = icmp sgt i32 %96, 5
  br i1 %97, label %98, label %104

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %100 = load i32*, i32** %99, align 8
  %101 = icmp eq i32* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %98
  %103 = bitcast i32* %100 to i8*
  call void @_ZdaPv(i8* %103) #10
  br label %104

104:                                              ; preds = %94, %98, %102
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  %105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 0
  %106 = load i32, i32* %105, align 8
  switch i32 %106, label %1604 [
    i32 2, label %107
    i32 1, label %870
  ]

107:                                              ; preds = %104
  %108 = getelementptr inbounds %struct.TfLiteMulParams, %struct.TfLiteMulParams* %2, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = add i32 %109, -1
  %111 = icmp ult i32 %110, 3
  br i1 %84, label %112, label %251

112:                                              ; preds = %107
  br i1 %111, label %113, label %120

113:                                              ; preds = %112
  %114 = sext i32 %110 to i64
  %115 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.48, i64 0, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = sext i32 %110 to i64
  %118 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.49, i64 0, i64 %117
  %119 = load i32, i32* %118, align 4
  br label %120

120:                                              ; preds = %112, %113
  %121 = phi i32 [ %116, %113 ], [ -2147483648, %112 ]
  %122 = phi i32 [ %119, %113 ], [ 2147483647, %112 ]
  %123 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 11
  store i32 %121, i32* %123, align 4
  %124 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 12
  store i32 %122, i32* %124, align 4
  %125 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %125) #11
  br i1 %25, label %126, label %128

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %127, align 8, !alias.scope !267
  br label %155

128:                                              ; preds = %120
  %129 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %130 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %129, align 8, !noalias !267
  %131 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %130, i64 0, i32 0
  %132 = load i32, i32* %131, align 4, !noalias !267
  %133 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %130, i64 0, i32 1, i64 0
  %134 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %132, i32* %134, align 8, !alias.scope !267
  %135 = icmp sgt i32 %132, 5
  br i1 %135, label %136, label %143

136:                                              ; preds = %128
  %137 = sext i32 %132 to i64
  %138 = shl nsw i64 %137, 2
  %139 = call i8* @_Znam(i64 %138) #10, !noalias !267
  %140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %141 = bitcast i32** %140 to i8**
  store i8* %139, i8** %141, align 8, !alias.scope !267
  %142 = bitcast i8* %139 to i32*
  br label %148

143:                                              ; preds = %128
  %144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %145 = bitcast %union.anon* %144 to i32*
  %146 = sext i32 %132 to i64
  %147 = shl nsw i64 %146, 2
  br label %148

148:                                              ; preds = %143, %136
  %149 = phi i64 [ %138, %136 ], [ %147, %143 ]
  %150 = phi i32* [ %142, %136 ], [ %145, %143 ]
  %151 = bitcast i32* %150 to i8*
  %152 = bitcast i32* %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %151, i8* align 4 %152, i64 %149, i1 false) #11
  %153 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %154 = load i32*, i32** %153, align 8
  br label %155

155:                                              ; preds = %126, %148
  %156 = phi i32* [ %154, %148 ], [ null, %126 ]
  %157 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %157) #11
  br i1 %55, label %158, label %160

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %159, align 8, !alias.scope !270
  br label %187

160:                                              ; preds = %155
  %161 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %162 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %161, align 8, !noalias !270
  %163 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %162, i64 0, i32 0
  %164 = load i32, i32* %163, align 4, !noalias !270
  %165 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %162, i64 0, i32 1, i64 0
  %166 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %164, i32* %166, align 8, !alias.scope !270
  %167 = icmp sgt i32 %164, 5
  br i1 %167, label %168, label %175

168:                                              ; preds = %160
  %169 = sext i32 %164 to i64
  %170 = shl nsw i64 %169, 2
  %171 = call i8* @_Znam(i64 %170) #10, !noalias !270
  %172 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %173 = bitcast i32** %172 to i8**
  store i8* %171, i8** %173, align 8, !alias.scope !270
  %174 = bitcast i8* %171 to i32*
  br label %180

175:                                              ; preds = %160
  %176 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %177 = bitcast %union.anon* %176 to i32*
  %178 = sext i32 %164 to i64
  %179 = shl nsw i64 %178, 2
  br label %180

180:                                              ; preds = %175, %168
  %181 = phi i64 [ %170, %168 ], [ %179, %175 ]
  %182 = phi i32* [ %174, %168 ], [ %177, %175 ]
  %183 = bitcast i32* %182 to i8*
  %184 = bitcast i32* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %183, i8* align 4 %184, i64 %181, i1 false) #11
  %185 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %186 = load i32*, i32** %185, align 8
  br label %187

187:                                              ; preds = %158, %180
  %188 = phi i32* [ %186, %180 ], [ null, %158 ]
  %189 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %189) #11
  %190 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %192, align 8, !alias.scope !273
  br label %220

193:                                              ; preds = %187
  %194 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %195 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %194, align 8, !noalias !273
  %196 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %195, i64 0, i32 0
  %197 = load i32, i32* %196, align 4, !noalias !273
  %198 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %195, i64 0, i32 1, i64 0
  %199 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %197, i32* %199, align 8, !alias.scope !273
  %200 = icmp sgt i32 %197, 5
  br i1 %200, label %201, label %208

201:                                              ; preds = %193
  %202 = sext i32 %197 to i64
  %203 = shl nsw i64 %202, 2
  %204 = call i8* @_Znam(i64 %203) #10, !noalias !273
  %205 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %206 = bitcast i32** %205 to i8**
  store i8* %204, i8** %206, align 8, !alias.scope !273
  %207 = bitcast i8* %204 to i32*
  br label %213

208:                                              ; preds = %193
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %210 = bitcast %union.anon* %209 to i32*
  %211 = sext i32 %197 to i64
  %212 = shl nsw i64 %211, 2
  br label %213

213:                                              ; preds = %208, %201
  %214 = phi i64 [ %203, %201 ], [ %212, %208 ]
  %215 = phi i32* [ %207, %201 ], [ %210, %208 ]
  %216 = bitcast i32* %215 to i8*
  %217 = bitcast i32* %198 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %216, i8* align 4 %217, i64 %214, i1 false) #11
  %218 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1, i32 0
  %219 = load i32*, i32** %218, align 8
  br label %220

220:                                              ; preds = %191, %213
  %221 = phi i32* [ %219, %213 ], [ null, %191 ]
  call void @_ZN6tflite13reference_ops18BroadcastMul4DSlowIiEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i32* %156, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i32* %188, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i32* %221)
  %222 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %223 = load i32, i32* %222, align 8
  %224 = icmp sgt i32 %223, 5
  br i1 %224, label %225, label %231

225:                                              ; preds = %220
  %226 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %227 = load i32*, i32** %226, align 8
  %228 = icmp eq i32* %227, null
  br i1 %228, label %231, label %229

229:                                              ; preds = %225
  %230 = bitcast i32* %227 to i8*
  call void @_ZdaPv(i8* %230) #10
  br label %231

231:                                              ; preds = %220, %225, %229
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %189) #11
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %233 = load i32, i32* %232, align 8
  %234 = icmp sgt i32 %233, 5
  br i1 %234, label %235, label %241

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %237 = load i32*, i32** %236, align 8
  %238 = icmp eq i32* %237, null
  br i1 %238, label %241, label %239

239:                                              ; preds = %235
  %240 = bitcast i32* %237 to i8*
  call void @_ZdaPv(i8* %240) #10
  br label %241

241:                                              ; preds = %231, %235, %239
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %157) #11
  %242 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %243 = load i32, i32* %242, align 8
  %244 = icmp sgt i32 %243, 5
  br i1 %244, label %245, label %1602

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %247 = load i32*, i32** %246, align 8
  %248 = icmp eq i32* %247, null
  br i1 %248, label %1602, label %249

249:                                              ; preds = %245
  %250 = bitcast i32* %247 to i8*
  call void @_ZdaPv(i8* %250) #10
  br label %1602

251:                                              ; preds = %107
  br i1 %111, label %252, label %259

252:                                              ; preds = %251
  %253 = sext i32 %110 to i64
  %254 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.48, i64 0, i64 %253
  %255 = load i32, i32* %254, align 4
  %256 = sext i32 %110 to i64
  %257 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.49, i64 0, i64 %256
  %258 = load i32, i32* %257, align 4
  br label %259

259:                                              ; preds = %251, %252
  %260 = phi i32 [ %255, %252 ], [ -2147483648, %251 ]
  %261 = phi i32 [ %258, %252 ], [ 2147483647, %251 ]
  %262 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 11
  store i32 %260, i32* %262, align 4
  %263 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 12
  store i32 %261, i32* %263, align 4
  %264 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %264) #11
  br i1 %25, label %265, label %267

265:                                              ; preds = %259
  %266 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %266, align 8, !alias.scope !276
  br label %295

267:                                              ; preds = %259
  %268 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %269 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %268, align 8, !noalias !276
  %270 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %269, i64 0, i32 0
  %271 = load i32, i32* %270, align 4, !noalias !276
  %272 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %269, i64 0, i32 1, i64 0
  %273 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %271, i32* %273, align 8, !alias.scope !276
  %274 = icmp sgt i32 %271, 5
  br i1 %274, label %275, label %282

275:                                              ; preds = %267
  %276 = sext i32 %271 to i64
  %277 = shl nsw i64 %276, 2
  %278 = call i8* @_Znam(i64 %277) #10, !noalias !276
  %279 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %280 = bitcast i32** %279 to i8**
  store i8* %278, i8** %280, align 8, !alias.scope !276
  %281 = bitcast i8* %278 to i32*
  br label %287

282:                                              ; preds = %267
  %283 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %284 = bitcast %union.anon* %283 to i32*
  %285 = sext i32 %271 to i64
  %286 = shl nsw i64 %285, 2
  br label %287

287:                                              ; preds = %282, %275
  %288 = phi i64 [ %277, %275 ], [ %286, %282 ]
  %289 = phi i32* [ %281, %275 ], [ %284, %282 ]
  %290 = bitcast i32* %289 to i8*
  %291 = bitcast i32* %272 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %290, i8* align 4 %291, i64 %288, i1 false) #11
  %292 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %293 = load i32*, i32** %292, align 8
  %294 = bitcast i32* %293 to i8*
  br label %295

295:                                              ; preds = %265, %287
  %296 = phi i32 [ %271, %287 ], [ 0, %265 ]
  %297 = phi i8* [ %294, %287 ], [ null, %265 ]
  %298 = phi i32* [ %293, %287 ], [ null, %265 ]
  %299 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %299) #11
  br i1 %55, label %300, label %302

300:                                              ; preds = %295
  %301 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %301, align 8, !alias.scope !279
  br label %330

302:                                              ; preds = %295
  %303 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %304 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %303, align 8, !noalias !279
  %305 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %304, i64 0, i32 0
  %306 = load i32, i32* %305, align 4, !noalias !279
  %307 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %304, i64 0, i32 1, i64 0
  %308 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %306, i32* %308, align 8, !alias.scope !279
  %309 = icmp sgt i32 %306, 5
  br i1 %309, label %310, label %317

310:                                              ; preds = %302
  %311 = sext i32 %306 to i64
  %312 = shl nsw i64 %311, 2
  %313 = call i8* @_Znam(i64 %312) #10, !noalias !279
  %314 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %315 = bitcast i32** %314 to i8**
  store i8* %313, i8** %315, align 8, !alias.scope !279
  %316 = bitcast i8* %313 to i32*
  br label %322

317:                                              ; preds = %302
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %319 = bitcast %union.anon* %318 to i32*
  %320 = sext i32 %306 to i64
  %321 = shl nsw i64 %320, 2
  br label %322

322:                                              ; preds = %317, %310
  %323 = phi i64 [ %312, %310 ], [ %321, %317 ]
  %324 = phi i32* [ %316, %310 ], [ %319, %317 ]
  %325 = bitcast i32* %324 to i8*
  %326 = bitcast i32* %307 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %325, i8* align 4 %326, i64 %323, i1 false) #11
  %327 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %328 = load i32*, i32** %327, align 8
  %329 = bitcast i32* %328 to i8*
  br label %330

330:                                              ; preds = %300, %322
  %331 = phi i32 [ %306, %322 ], [ 0, %300 ]
  %332 = phi i8* [ %329, %322 ], [ null, %300 ]
  %333 = phi i32* [ %328, %322 ], [ null, %300 ]
  %334 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %334) #11
  %335 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %335, label %336, label %338

336:                                              ; preds = %330
  %337 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %337, align 8, !alias.scope !282
  br label %366

338:                                              ; preds = %330
  %339 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %340 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %339, align 8, !noalias !282
  %341 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %340, i64 0, i32 0
  %342 = load i32, i32* %341, align 4, !noalias !282
  %343 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %340, i64 0, i32 1, i64 0
  %344 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %342, i32* %344, align 8, !alias.scope !282
  %345 = icmp sgt i32 %342, 5
  br i1 %345, label %346, label %353

346:                                              ; preds = %338
  %347 = sext i32 %342 to i64
  %348 = shl nsw i64 %347, 2
  %349 = call i8* @_Znam(i64 %348) #10, !noalias !282
  %350 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %351 = bitcast i32** %350 to i8**
  store i8* %349, i8** %351, align 8, !alias.scope !282
  %352 = bitcast i8* %349 to i32*
  br label %358

353:                                              ; preds = %338
  %354 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %355 = bitcast %union.anon* %354 to i32*
  %356 = sext i32 %342 to i64
  %357 = shl nsw i64 %356, 2
  br label %358

358:                                              ; preds = %353, %346
  %359 = phi i64 [ %348, %346 ], [ %357, %353 ]
  %360 = phi i32* [ %352, %346 ], [ %355, %353 ]
  %361 = bitcast i32* %360 to i8*
  %362 = bitcast i32* %343 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %361, i8* align 4 %362, i64 %359, i1 false) #11
  %363 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1, i32 0
  %364 = load i32*, i32** %363, align 8
  %365 = bitcast i32* %364 to i8*
  br label %366

366:                                              ; preds = %336, %358
  %367 = phi i32 [ %342, %358 ], [ 0, %336 ]
  %368 = phi i8* [ %365, %358 ], [ null, %336 ]
  %369 = phi i32* [ %364, %358 ], [ null, %336 ]
  %370 = icmp sgt i32 %296, 5
  %371 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  br i1 %370, label %372, label %375

372:                                              ; preds = %366
  %373 = getelementptr inbounds %union.anon, %union.anon* %371, i64 0, i32 0
  %374 = load i32*, i32** %373, align 8
  br label %378

375:                                              ; preds = %366
  %376 = bitcast %union.anon* %371 to i32*
  %377 = icmp sgt i32 %296, 0
  br i1 %377, label %378, label %478

378:                                              ; preds = %375, %372
  %379 = phi i32* [ %374, %372 ], [ %376, %375 ]
  %380 = zext i32 %296 to i64
  %381 = icmp ult i32 %296, 8
  br i1 %381, label %467, label %382

382:                                              ; preds = %378
  %383 = and i64 %380, 4294967288
  %384 = add nsw i64 %383, -8
  %385 = lshr exact i64 %384, 3
  %386 = add nuw nsw i64 %385, 1
  %387 = and i64 %386, 3
  %388 = icmp ult i64 %384, 24
  br i1 %388, label %434, label %389

389:                                              ; preds = %382
  %390 = sub nsw i64 %386, %387
  br label %391

391:                                              ; preds = %391, %389
  %392 = phi i64 [ 0, %389 ], [ %431, %391 ]
  %393 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %389 ], [ %429, %391 ]
  %394 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %389 ], [ %430, %391 ]
  %395 = phi i64 [ %390, %389 ], [ %432, %391 ]
  %396 = getelementptr inbounds i32, i32* %379, i64 %392
  %397 = bitcast i32* %396 to <4 x i32>*
  %398 = load <4 x i32>, <4 x i32>* %397, align 4
  %399 = getelementptr inbounds i32, i32* %396, i64 4
  %400 = bitcast i32* %399 to <4 x i32>*
  %401 = load <4 x i32>, <4 x i32>* %400, align 4
  %402 = mul nsw <4 x i32> %398, %393
  %403 = mul nsw <4 x i32> %401, %394
  %404 = or i64 %392, 8
  %405 = getelementptr inbounds i32, i32* %379, i64 %404
  %406 = bitcast i32* %405 to <4 x i32>*
  %407 = load <4 x i32>, <4 x i32>* %406, align 4
  %408 = getelementptr inbounds i32, i32* %405, i64 4
  %409 = bitcast i32* %408 to <4 x i32>*
  %410 = load <4 x i32>, <4 x i32>* %409, align 4
  %411 = mul nsw <4 x i32> %407, %402
  %412 = mul nsw <4 x i32> %410, %403
  %413 = or i64 %392, 16
  %414 = getelementptr inbounds i32, i32* %379, i64 %413
  %415 = bitcast i32* %414 to <4 x i32>*
  %416 = load <4 x i32>, <4 x i32>* %415, align 4
  %417 = getelementptr inbounds i32, i32* %414, i64 4
  %418 = bitcast i32* %417 to <4 x i32>*
  %419 = load <4 x i32>, <4 x i32>* %418, align 4
  %420 = mul nsw <4 x i32> %416, %411
  %421 = mul nsw <4 x i32> %419, %412
  %422 = or i64 %392, 24
  %423 = getelementptr inbounds i32, i32* %379, i64 %422
  %424 = bitcast i32* %423 to <4 x i32>*
  %425 = load <4 x i32>, <4 x i32>* %424, align 4
  %426 = getelementptr inbounds i32, i32* %423, i64 4
  %427 = bitcast i32* %426 to <4 x i32>*
  %428 = load <4 x i32>, <4 x i32>* %427, align 4
  %429 = mul nsw <4 x i32> %425, %420
  %430 = mul nsw <4 x i32> %428, %421
  %431 = add i64 %392, 32
  %432 = add i64 %395, -4
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %391, !llvm.loop !285

434:                                              ; preds = %391, %382
  %435 = phi <4 x i32> [ undef, %382 ], [ %429, %391 ]
  %436 = phi <4 x i32> [ undef, %382 ], [ %430, %391 ]
  %437 = phi i64 [ 0, %382 ], [ %431, %391 ]
  %438 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %382 ], [ %429, %391 ]
  %439 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %382 ], [ %430, %391 ]
  %440 = icmp eq i64 %387, 0
  br i1 %440, label %457, label %441

441:                                              ; preds = %434, %441
  %442 = phi i64 [ %454, %441 ], [ %437, %434 ]
  %443 = phi <4 x i32> [ %452, %441 ], [ %438, %434 ]
  %444 = phi <4 x i32> [ %453, %441 ], [ %439, %434 ]
  %445 = phi i64 [ %455, %441 ], [ %387, %434 ]
  %446 = getelementptr inbounds i32, i32* %379, i64 %442
  %447 = bitcast i32* %446 to <4 x i32>*
  %448 = load <4 x i32>, <4 x i32>* %447, align 4
  %449 = getelementptr inbounds i32, i32* %446, i64 4
  %450 = bitcast i32* %449 to <4 x i32>*
  %451 = load <4 x i32>, <4 x i32>* %450, align 4
  %452 = mul nsw <4 x i32> %448, %443
  %453 = mul nsw <4 x i32> %451, %444
  %454 = add i64 %442, 8
  %455 = add i64 %445, -1
  %456 = icmp eq i64 %455, 0
  br i1 %456, label %457, label %441, !llvm.loop !286

457:                                              ; preds = %441, %434
  %458 = phi <4 x i32> [ %435, %434 ], [ %452, %441 ]
  %459 = phi <4 x i32> [ %436, %434 ], [ %453, %441 ]
  %460 = mul <4 x i32> %459, %458
  %461 = shufflevector <4 x i32> %460, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %462 = mul <4 x i32> %460, %461
  %463 = shufflevector <4 x i32> %462, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %464 = mul <4 x i32> %462, %463
  %465 = extractelement <4 x i32> %464, i32 0
  %466 = icmp eq i64 %383, %380
  br i1 %466, label %478, label %467

467:                                              ; preds = %457, %378
  %468 = phi i64 [ 0, %378 ], [ %383, %457 ]
  %469 = phi i32 [ 1, %378 ], [ %465, %457 ]
  br label %470

470:                                              ; preds = %467, %470
  %471 = phi i64 [ %476, %470 ], [ %468, %467 ]
  %472 = phi i32 [ %475, %470 ], [ %469, %467 ]
  %473 = getelementptr inbounds i32, i32* %379, i64 %471
  %474 = load i32, i32* %473, align 4
  %475 = mul nsw i32 %474, %472
  %476 = add nuw nsw i64 %471, 1
  %477 = icmp eq i64 %476, %380
  br i1 %477, label %478, label %470, !llvm.loop !287

478:                                              ; preds = %470, %457, %375
  %479 = phi i32 [ 1, %375 ], [ %465, %457 ], [ %475, %470 ]
  %480 = icmp sgt i32 %331, 5
  %481 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  br i1 %480, label %482, label %485

482:                                              ; preds = %478
  %483 = getelementptr inbounds %union.anon, %union.anon* %481, i64 0, i32 0
  %484 = load i32*, i32** %483, align 8
  br label %488

485:                                              ; preds = %478
  %486 = bitcast %union.anon* %481 to i32*
  %487 = icmp sgt i32 %331, 0
  br i1 %487, label %488, label %588

488:                                              ; preds = %485, %482
  %489 = phi i32* [ %484, %482 ], [ %486, %485 ]
  %490 = zext i32 %331 to i64
  %491 = icmp ult i32 %331, 8
  br i1 %491, label %577, label %492

492:                                              ; preds = %488
  %493 = and i64 %490, 4294967288
  %494 = add nsw i64 %493, -8
  %495 = lshr exact i64 %494, 3
  %496 = add nuw nsw i64 %495, 1
  %497 = and i64 %496, 3
  %498 = icmp ult i64 %494, 24
  br i1 %498, label %544, label %499

499:                                              ; preds = %492
  %500 = sub nsw i64 %496, %497
  br label %501

501:                                              ; preds = %501, %499
  %502 = phi i64 [ 0, %499 ], [ %541, %501 ]
  %503 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %499 ], [ %539, %501 ]
  %504 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %499 ], [ %540, %501 ]
  %505 = phi i64 [ %500, %499 ], [ %542, %501 ]
  %506 = getelementptr inbounds i32, i32* %489, i64 %502
  %507 = bitcast i32* %506 to <4 x i32>*
  %508 = load <4 x i32>, <4 x i32>* %507, align 4
  %509 = getelementptr inbounds i32, i32* %506, i64 4
  %510 = bitcast i32* %509 to <4 x i32>*
  %511 = load <4 x i32>, <4 x i32>* %510, align 4
  %512 = mul nsw <4 x i32> %508, %503
  %513 = mul nsw <4 x i32> %511, %504
  %514 = or i64 %502, 8
  %515 = getelementptr inbounds i32, i32* %489, i64 %514
  %516 = bitcast i32* %515 to <4 x i32>*
  %517 = load <4 x i32>, <4 x i32>* %516, align 4
  %518 = getelementptr inbounds i32, i32* %515, i64 4
  %519 = bitcast i32* %518 to <4 x i32>*
  %520 = load <4 x i32>, <4 x i32>* %519, align 4
  %521 = mul nsw <4 x i32> %517, %512
  %522 = mul nsw <4 x i32> %520, %513
  %523 = or i64 %502, 16
  %524 = getelementptr inbounds i32, i32* %489, i64 %523
  %525 = bitcast i32* %524 to <4 x i32>*
  %526 = load <4 x i32>, <4 x i32>* %525, align 4
  %527 = getelementptr inbounds i32, i32* %524, i64 4
  %528 = bitcast i32* %527 to <4 x i32>*
  %529 = load <4 x i32>, <4 x i32>* %528, align 4
  %530 = mul nsw <4 x i32> %526, %521
  %531 = mul nsw <4 x i32> %529, %522
  %532 = or i64 %502, 24
  %533 = getelementptr inbounds i32, i32* %489, i64 %532
  %534 = bitcast i32* %533 to <4 x i32>*
  %535 = load <4 x i32>, <4 x i32>* %534, align 4
  %536 = getelementptr inbounds i32, i32* %533, i64 4
  %537 = bitcast i32* %536 to <4 x i32>*
  %538 = load <4 x i32>, <4 x i32>* %537, align 4
  %539 = mul nsw <4 x i32> %535, %530
  %540 = mul nsw <4 x i32> %538, %531
  %541 = add i64 %502, 32
  %542 = add i64 %505, -4
  %543 = icmp eq i64 %542, 0
  br i1 %543, label %544, label %501, !llvm.loop !288

544:                                              ; preds = %501, %492
  %545 = phi <4 x i32> [ undef, %492 ], [ %539, %501 ]
  %546 = phi <4 x i32> [ undef, %492 ], [ %540, %501 ]
  %547 = phi i64 [ 0, %492 ], [ %541, %501 ]
  %548 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %492 ], [ %539, %501 ]
  %549 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %492 ], [ %540, %501 ]
  %550 = icmp eq i64 %497, 0
  br i1 %550, label %567, label %551

551:                                              ; preds = %544, %551
  %552 = phi i64 [ %564, %551 ], [ %547, %544 ]
  %553 = phi <4 x i32> [ %562, %551 ], [ %548, %544 ]
  %554 = phi <4 x i32> [ %563, %551 ], [ %549, %544 ]
  %555 = phi i64 [ %565, %551 ], [ %497, %544 ]
  %556 = getelementptr inbounds i32, i32* %489, i64 %552
  %557 = bitcast i32* %556 to <4 x i32>*
  %558 = load <4 x i32>, <4 x i32>* %557, align 4
  %559 = getelementptr inbounds i32, i32* %556, i64 4
  %560 = bitcast i32* %559 to <4 x i32>*
  %561 = load <4 x i32>, <4 x i32>* %560, align 4
  %562 = mul nsw <4 x i32> %558, %553
  %563 = mul nsw <4 x i32> %561, %554
  %564 = add i64 %552, 8
  %565 = add i64 %555, -1
  %566 = icmp eq i64 %565, 0
  br i1 %566, label %567, label %551, !llvm.loop !289

567:                                              ; preds = %551, %544
  %568 = phi <4 x i32> [ %545, %544 ], [ %562, %551 ]
  %569 = phi <4 x i32> [ %546, %544 ], [ %563, %551 ]
  %570 = mul <4 x i32> %569, %568
  %571 = shufflevector <4 x i32> %570, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %572 = mul <4 x i32> %570, %571
  %573 = shufflevector <4 x i32> %572, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %574 = mul <4 x i32> %572, %573
  %575 = extractelement <4 x i32> %574, i32 0
  %576 = icmp eq i64 %493, %490
  br i1 %576, label %588, label %577

577:                                              ; preds = %567, %488
  %578 = phi i64 [ 0, %488 ], [ %493, %567 ]
  %579 = phi i32 [ 1, %488 ], [ %575, %567 ]
  br label %580

580:                                              ; preds = %577, %580
  %581 = phi i64 [ %586, %580 ], [ %578, %577 ]
  %582 = phi i32 [ %585, %580 ], [ %579, %577 ]
  %583 = getelementptr inbounds i32, i32* %489, i64 %581
  %584 = load i32, i32* %583, align 4
  %585 = mul nsw i32 %584, %582
  %586 = add nuw nsw i64 %581, 1
  %587 = icmp eq i64 %586, %490
  br i1 %587, label %588, label %580, !llvm.loop !290

588:                                              ; preds = %580, %567, %485
  %589 = phi i32 [ 1, %485 ], [ %575, %567 ], [ %585, %580 ]
  %590 = icmp sgt i32 %367, 5
  %591 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  br i1 %590, label %592, label %595

592:                                              ; preds = %588
  %593 = getelementptr inbounds %union.anon, %union.anon* %591, i64 0, i32 0
  %594 = load i32*, i32** %593, align 8
  br label %598

595:                                              ; preds = %588
  %596 = bitcast %union.anon* %591 to i32*
  %597 = icmp sgt i32 %367, 0
  br i1 %597, label %598, label %698

598:                                              ; preds = %595, %592
  %599 = phi i32* [ %594, %592 ], [ %596, %595 ]
  %600 = zext i32 %367 to i64
  %601 = icmp ult i32 %367, 8
  br i1 %601, label %687, label %602

602:                                              ; preds = %598
  %603 = and i64 %600, 4294967288
  %604 = add nsw i64 %603, -8
  %605 = lshr exact i64 %604, 3
  %606 = add nuw nsw i64 %605, 1
  %607 = and i64 %606, 3
  %608 = icmp ult i64 %604, 24
  br i1 %608, label %654, label %609

609:                                              ; preds = %602
  %610 = sub nsw i64 %606, %607
  br label %611

611:                                              ; preds = %611, %609
  %612 = phi i64 [ 0, %609 ], [ %651, %611 ]
  %613 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %609 ], [ %649, %611 ]
  %614 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %609 ], [ %650, %611 ]
  %615 = phi i64 [ %610, %609 ], [ %652, %611 ]
  %616 = getelementptr inbounds i32, i32* %599, i64 %612
  %617 = bitcast i32* %616 to <4 x i32>*
  %618 = load <4 x i32>, <4 x i32>* %617, align 4
  %619 = getelementptr inbounds i32, i32* %616, i64 4
  %620 = bitcast i32* %619 to <4 x i32>*
  %621 = load <4 x i32>, <4 x i32>* %620, align 4
  %622 = mul nsw <4 x i32> %618, %613
  %623 = mul nsw <4 x i32> %621, %614
  %624 = or i64 %612, 8
  %625 = getelementptr inbounds i32, i32* %599, i64 %624
  %626 = bitcast i32* %625 to <4 x i32>*
  %627 = load <4 x i32>, <4 x i32>* %626, align 4
  %628 = getelementptr inbounds i32, i32* %625, i64 4
  %629 = bitcast i32* %628 to <4 x i32>*
  %630 = load <4 x i32>, <4 x i32>* %629, align 4
  %631 = mul nsw <4 x i32> %627, %622
  %632 = mul nsw <4 x i32> %630, %623
  %633 = or i64 %612, 16
  %634 = getelementptr inbounds i32, i32* %599, i64 %633
  %635 = bitcast i32* %634 to <4 x i32>*
  %636 = load <4 x i32>, <4 x i32>* %635, align 4
  %637 = getelementptr inbounds i32, i32* %634, i64 4
  %638 = bitcast i32* %637 to <4 x i32>*
  %639 = load <4 x i32>, <4 x i32>* %638, align 4
  %640 = mul nsw <4 x i32> %636, %631
  %641 = mul nsw <4 x i32> %639, %632
  %642 = or i64 %612, 24
  %643 = getelementptr inbounds i32, i32* %599, i64 %642
  %644 = bitcast i32* %643 to <4 x i32>*
  %645 = load <4 x i32>, <4 x i32>* %644, align 4
  %646 = getelementptr inbounds i32, i32* %643, i64 4
  %647 = bitcast i32* %646 to <4 x i32>*
  %648 = load <4 x i32>, <4 x i32>* %647, align 4
  %649 = mul nsw <4 x i32> %645, %640
  %650 = mul nsw <4 x i32> %648, %641
  %651 = add i64 %612, 32
  %652 = add i64 %615, -4
  %653 = icmp eq i64 %652, 0
  br i1 %653, label %654, label %611, !llvm.loop !291

654:                                              ; preds = %611, %602
  %655 = phi <4 x i32> [ undef, %602 ], [ %649, %611 ]
  %656 = phi <4 x i32> [ undef, %602 ], [ %650, %611 ]
  %657 = phi i64 [ 0, %602 ], [ %651, %611 ]
  %658 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %602 ], [ %649, %611 ]
  %659 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %602 ], [ %650, %611 ]
  %660 = icmp eq i64 %607, 0
  br i1 %660, label %677, label %661

661:                                              ; preds = %654, %661
  %662 = phi i64 [ %674, %661 ], [ %657, %654 ]
  %663 = phi <4 x i32> [ %672, %661 ], [ %658, %654 ]
  %664 = phi <4 x i32> [ %673, %661 ], [ %659, %654 ]
  %665 = phi i64 [ %675, %661 ], [ %607, %654 ]
  %666 = getelementptr inbounds i32, i32* %599, i64 %662
  %667 = bitcast i32* %666 to <4 x i32>*
  %668 = load <4 x i32>, <4 x i32>* %667, align 4
  %669 = getelementptr inbounds i32, i32* %666, i64 4
  %670 = bitcast i32* %669 to <4 x i32>*
  %671 = load <4 x i32>, <4 x i32>* %670, align 4
  %672 = mul nsw <4 x i32> %668, %663
  %673 = mul nsw <4 x i32> %671, %664
  %674 = add i64 %662, 8
  %675 = add i64 %665, -1
  %676 = icmp eq i64 %675, 0
  br i1 %676, label %677, label %661, !llvm.loop !292

677:                                              ; preds = %661, %654
  %678 = phi <4 x i32> [ %655, %654 ], [ %672, %661 ]
  %679 = phi <4 x i32> [ %656, %654 ], [ %673, %661 ]
  %680 = mul <4 x i32> %679, %678
  %681 = shufflevector <4 x i32> %680, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %682 = mul <4 x i32> %680, %681
  %683 = shufflevector <4 x i32> %682, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %684 = mul <4 x i32> %682, %683
  %685 = extractelement <4 x i32> %684, i32 0
  %686 = icmp eq i64 %603, %600
  br i1 %686, label %698, label %687

687:                                              ; preds = %677, %598
  %688 = phi i64 [ 0, %598 ], [ %603, %677 ]
  %689 = phi i32 [ 1, %598 ], [ %685, %677 ]
  br label %690

690:                                              ; preds = %687, %690
  %691 = phi i64 [ %696, %690 ], [ %688, %687 ]
  %692 = phi i32 [ %695, %690 ], [ %689, %687 ]
  %693 = getelementptr inbounds i32, i32* %599, i64 %691
  %694 = load i32, i32* %693, align 4
  %695 = mul nsw i32 %694, %692
  %696 = add nuw nsw i64 %691, 1
  %697 = icmp eq i64 %696, %600
  br i1 %697, label %698, label %690, !llvm.loop !293

698:                                              ; preds = %690, %677, %595
  %699 = phi i32 [ 1, %595 ], [ %685, %677 ], [ %695, %690 ]
  %700 = icmp eq i32 %479, %589
  br i1 %700, label %702, label %701

701:                                              ; preds = %698
  call void @abort() #12
  unreachable

702:                                              ; preds = %698
  %703 = icmp eq i32 %479, %699
  br i1 %703, label %705, label %704

704:                                              ; preds = %702
  call void @abort() #12
  unreachable

705:                                              ; preds = %702
  %706 = icmp sgt i32 %479, 0
  br i1 %706, label %707, label %849

707:                                              ; preds = %705
  %708 = sitofp i32 %260 to float
  %709 = sitofp i32 %261 to float
  %710 = zext i32 %479 to i64
  %711 = icmp ult i32 %479, 4
  br i1 %711, label %797, label %712

712:                                              ; preds = %707
  %713 = getelementptr i32, i32* %369, i64 %710
  %714 = bitcast i32* %713 to i8*
  %715 = getelementptr i32, i32* %298, i64 %710
  %716 = bitcast i32* %715 to i8*
  %717 = getelementptr i32, i32* %333, i64 %710
  %718 = bitcast i32* %717 to i8*
  %719 = icmp ult i8* %368, %716
  %720 = icmp ult i8* %297, %714
  %721 = and i1 %719, %720
  %722 = icmp ult i8* %368, %718
  %723 = icmp ult i8* %332, %714
  %724 = and i1 %722, %723
  %725 = or i1 %721, %724
  br i1 %725, label %797, label %726

726:                                              ; preds = %712
  %727 = and i64 %710, 4294967292
  %728 = insertelement <4 x float> undef, float %708, i32 0
  %729 = shufflevector <4 x float> %728, <4 x float> undef, <4 x i32> zeroinitializer
  %730 = insertelement <4 x float> undef, float %709, i32 0
  %731 = shufflevector <4 x float> %730, <4 x float> undef, <4 x i32> zeroinitializer
  %732 = add nsw i64 %727, -4
  %733 = lshr exact i64 %732, 2
  %734 = add nuw nsw i64 %733, 1
  %735 = and i64 %734, 1
  %736 = icmp eq i64 %732, 0
  br i1 %736, label %776, label %737

737:                                              ; preds = %726
  %738 = sub nuw nsw i64 %734, %735
  br label %739

739:                                              ; preds = %739, %737
  %740 = phi i64 [ 0, %737 ], [ %773, %739 ]
  %741 = phi i64 [ %738, %737 ], [ %774, %739 ]
  %742 = getelementptr inbounds i32, i32* %298, i64 %740
  %743 = bitcast i32* %742 to <4 x i32>*
  %744 = load <4 x i32>, <4 x i32>* %743, align 4, !alias.scope !294
  %745 = getelementptr inbounds i32, i32* %333, i64 %740
  %746 = bitcast i32* %745 to <4 x i32>*
  %747 = load <4 x i32>, <4 x i32>* %746, align 4, !alias.scope !297
  %748 = mul nsw <4 x i32> %747, %744
  %749 = sitofp <4 x i32> %748 to <4 x float>
  %750 = fcmp ogt <4 x float> %729, %749
  %751 = select <4 x i1> %750, <4 x float> %729, <4 x float> %749
  %752 = fcmp ogt <4 x float> %751, %731
  %753 = select <4 x i1> %752, <4 x float> %731, <4 x float> %751
  %754 = fptosi <4 x float> %753 to <4 x i32>
  %755 = getelementptr inbounds i32, i32* %369, i64 %740
  %756 = bitcast i32* %755 to <4 x i32>*
  store <4 x i32> %754, <4 x i32>* %756, align 4, !alias.scope !299, !noalias !301
  %757 = or i64 %740, 4
  %758 = getelementptr inbounds i32, i32* %298, i64 %757
  %759 = bitcast i32* %758 to <4 x i32>*
  %760 = load <4 x i32>, <4 x i32>* %759, align 4, !alias.scope !294
  %761 = getelementptr inbounds i32, i32* %333, i64 %757
  %762 = bitcast i32* %761 to <4 x i32>*
  %763 = load <4 x i32>, <4 x i32>* %762, align 4, !alias.scope !297
  %764 = mul nsw <4 x i32> %763, %760
  %765 = sitofp <4 x i32> %764 to <4 x float>
  %766 = fcmp ogt <4 x float> %729, %765
  %767 = select <4 x i1> %766, <4 x float> %729, <4 x float> %765
  %768 = fcmp ogt <4 x float> %767, %731
  %769 = select <4 x i1> %768, <4 x float> %731, <4 x float> %767
  %770 = fptosi <4 x float> %769 to <4 x i32>
  %771 = getelementptr inbounds i32, i32* %369, i64 %757
  %772 = bitcast i32* %771 to <4 x i32>*
  store <4 x i32> %770, <4 x i32>* %772, align 4, !alias.scope !299, !noalias !301
  %773 = add i64 %740, 8
  %774 = add i64 %741, -2
  %775 = icmp eq i64 %774, 0
  br i1 %775, label %776, label %739, !llvm.loop !302

776:                                              ; preds = %739, %726
  %777 = phi i64 [ 0, %726 ], [ %773, %739 ]
  %778 = icmp eq i64 %735, 0
  br i1 %778, label %795, label %779

779:                                              ; preds = %776
  %780 = getelementptr inbounds i32, i32* %298, i64 %777
  %781 = bitcast i32* %780 to <4 x i32>*
  %782 = load <4 x i32>, <4 x i32>* %781, align 4, !alias.scope !294
  %783 = getelementptr inbounds i32, i32* %333, i64 %777
  %784 = bitcast i32* %783 to <4 x i32>*
  %785 = load <4 x i32>, <4 x i32>* %784, align 4, !alias.scope !297
  %786 = mul nsw <4 x i32> %785, %782
  %787 = sitofp <4 x i32> %786 to <4 x float>
  %788 = fcmp ogt <4 x float> %729, %787
  %789 = select <4 x i1> %788, <4 x float> %729, <4 x float> %787
  %790 = fcmp ogt <4 x float> %789, %731
  %791 = select <4 x i1> %790, <4 x float> %731, <4 x float> %789
  %792 = fptosi <4 x float> %791 to <4 x i32>
  %793 = getelementptr inbounds i32, i32* %369, i64 %777
  %794 = bitcast i32* %793 to <4 x i32>*
  store <4 x i32> %792, <4 x i32>* %794, align 4, !alias.scope !299, !noalias !301
  br label %795

795:                                              ; preds = %776, %779
  %796 = icmp eq i64 %727, %710
  br i1 %796, label %849, label %797

797:                                              ; preds = %795, %712, %707
  %798 = phi i64 [ 0, %712 ], [ 0, %707 ], [ %727, %795 ]
  %799 = xor i64 %798, -1
  %800 = and i64 %710, 1
  %801 = icmp eq i64 %800, 0
  br i1 %801, label %816, label %802

802:                                              ; preds = %797
  %803 = getelementptr inbounds i32, i32* %298, i64 %798
  %804 = load i32, i32* %803, align 4
  %805 = getelementptr inbounds i32, i32* %333, i64 %798
  %806 = load i32, i32* %805, align 4
  %807 = mul nsw i32 %806, %804
  %808 = sitofp i32 %807 to float
  %809 = fcmp olt float %808, %708
  %810 = select i1 %809, float %708, float %808
  %811 = fcmp ogt float %810, %709
  %812 = select i1 %811, float %709, float %810
  %813 = fptosi float %812 to i32
  %814 = getelementptr inbounds i32, i32* %369, i64 %798
  store i32 %813, i32* %814, align 4
  %815 = or i64 %798, 1
  br label %816

816:                                              ; preds = %797, %802
  %817 = phi i64 [ %798, %797 ], [ %815, %802 ]
  %818 = sub nsw i64 0, %710
  %819 = icmp eq i64 %799, %818
  br i1 %819, label %849, label %820

820:                                              ; preds = %816, %820
  %821 = phi i64 [ %847, %820 ], [ %817, %816 ]
  %822 = getelementptr inbounds i32, i32* %298, i64 %821
  %823 = load i32, i32* %822, align 4
  %824 = getelementptr inbounds i32, i32* %333, i64 %821
  %825 = load i32, i32* %824, align 4
  %826 = mul nsw i32 %825, %823
  %827 = sitofp i32 %826 to float
  %828 = fcmp olt float %827, %708
  %829 = select i1 %828, float %708, float %827
  %830 = fcmp ogt float %829, %709
  %831 = select i1 %830, float %709, float %829
  %832 = fptosi float %831 to i32
  %833 = getelementptr inbounds i32, i32* %369, i64 %821
  store i32 %832, i32* %833, align 4
  %834 = add nuw nsw i64 %821, 1
  %835 = getelementptr inbounds i32, i32* %298, i64 %834
  %836 = load i32, i32* %835, align 4
  %837 = getelementptr inbounds i32, i32* %333, i64 %834
  %838 = load i32, i32* %837, align 4
  %839 = mul nsw i32 %838, %836
  %840 = sitofp i32 %839 to float
  %841 = fcmp olt float %840, %708
  %842 = select i1 %841, float %708, float %840
  %843 = fcmp ogt float %842, %709
  %844 = select i1 %843, float %709, float %842
  %845 = fptosi float %844 to i32
  %846 = getelementptr inbounds i32, i32* %369, i64 %834
  store i32 %845, i32* %846, align 4
  %847 = add nuw nsw i64 %821, 2
  %848 = icmp eq i64 %847, %710
  br i1 %848, label %849, label %820, !llvm.loop !303

849:                                              ; preds = %816, %820, %795, %705
  br i1 %590, label %850, label %856

850:                                              ; preds = %849
  %851 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %852 = load i32*, i32** %851, align 8
  %853 = icmp eq i32* %852, null
  br i1 %853, label %856, label %854

854:                                              ; preds = %850
  %855 = bitcast i32* %852 to i8*
  call void @_ZdaPv(i8* %855) #10
  br label %856

856:                                              ; preds = %849, %850, %854
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %334) #11
  br i1 %480, label %857, label %863

857:                                              ; preds = %856
  %858 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %859 = load i32*, i32** %858, align 8
  %860 = icmp eq i32* %859, null
  br i1 %860, label %863, label %861

861:                                              ; preds = %857
  %862 = bitcast i32* %859 to i8*
  call void @_ZdaPv(i8* %862) #10
  br label %863

863:                                              ; preds = %856, %857, %861
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %299) #11
  br i1 %370, label %864, label %1602

864:                                              ; preds = %863
  %865 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %866 = load i32*, i32** %865, align 8
  %867 = icmp eq i32* %866, null
  br i1 %867, label %1602, label %868

868:                                              ; preds = %864
  %869 = bitcast i32* %866 to i8*
  call void @_ZdaPv(i8* %869) #10
  br label %1602

870:                                              ; preds = %104
  %871 = getelementptr inbounds %struct.TfLiteMulParams, %struct.TfLiteMulParams* %2, i64 0, i32 0
  %872 = load i32, i32* %871, align 4
  %873 = add i32 %872, -1
  %874 = icmp ult i32 %873, 3
  br i1 %84, label %875, label %1017

875:                                              ; preds = %870
  br i1 %874, label %876, label %883

876:                                              ; preds = %875
  %877 = sext i32 %873 to i64
  %878 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.52, i64 0, i64 %877
  %879 = load float, float* %878, align 4
  %880 = sext i32 %873 to i64
  %881 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.53, i64 0, i64 %880
  %882 = load float, float* %881, align 4
  br label %883

883:                                              ; preds = %875, %876
  %884 = phi float [ %879, %876 ], [ 0xC7EFFFFFE0000000, %875 ]
  %885 = phi float [ %882, %876 ], [ 0x47EFFFFFE0000000, %875 ]
  %886 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 13
  store float %884, float* %886, align 4
  %887 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 14
  store float %885, float* %887, align 4
  %888 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %888) #11
  br i1 %25, label %889, label %891

889:                                              ; preds = %883
  %890 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %890, align 8, !alias.scope !304
  br label %919

891:                                              ; preds = %883
  %892 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %893 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %892, align 8, !noalias !304
  %894 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %893, i64 0, i32 0
  %895 = load i32, i32* %894, align 4, !noalias !304
  %896 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %893, i64 0, i32 1, i64 0
  %897 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %895, i32* %897, align 8, !alias.scope !304
  %898 = icmp sgt i32 %895, 5
  br i1 %898, label %899, label %906

899:                                              ; preds = %891
  %900 = sext i32 %895 to i64
  %901 = shl nsw i64 %900, 2
  %902 = call i8* @_Znam(i64 %901) #10, !noalias !304
  %903 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %904 = bitcast i32** %903 to i8**
  store i8* %902, i8** %904, align 8, !alias.scope !304
  %905 = bitcast i8* %902 to i32*
  br label %911

906:                                              ; preds = %891
  %907 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %908 = bitcast %union.anon* %907 to i32*
  %909 = sext i32 %895 to i64
  %910 = shl nsw i64 %909, 2
  br label %911

911:                                              ; preds = %906, %899
  %912 = phi i64 [ %901, %899 ], [ %910, %906 ]
  %913 = phi i32* [ %905, %899 ], [ %908, %906 ]
  %914 = bitcast i32* %913 to i8*
  %915 = bitcast i32* %896 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %914, i8* align 4 %915, i64 %912, i1 false) #11
  %916 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %917 = bitcast %union.TfLitePtrUnion* %916 to float**
  %918 = load float*, float** %917, align 8
  br label %919

919:                                              ; preds = %889, %911
  %920 = phi float* [ %918, %911 ], [ null, %889 ]
  %921 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %921) #11
  br i1 %55, label %922, label %924

922:                                              ; preds = %919
  %923 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %923, align 8, !alias.scope !307
  br label %952

924:                                              ; preds = %919
  %925 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %926 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %925, align 8, !noalias !307
  %927 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %926, i64 0, i32 0
  %928 = load i32, i32* %927, align 4, !noalias !307
  %929 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %926, i64 0, i32 1, i64 0
  %930 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %928, i32* %930, align 8, !alias.scope !307
  %931 = icmp sgt i32 %928, 5
  br i1 %931, label %932, label %939

932:                                              ; preds = %924
  %933 = sext i32 %928 to i64
  %934 = shl nsw i64 %933, 2
  %935 = call i8* @_Znam(i64 %934) #10, !noalias !307
  %936 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %937 = bitcast i32** %936 to i8**
  store i8* %935, i8** %937, align 8, !alias.scope !307
  %938 = bitcast i8* %935 to i32*
  br label %944

939:                                              ; preds = %924
  %940 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %941 = bitcast %union.anon* %940 to i32*
  %942 = sext i32 %928 to i64
  %943 = shl nsw i64 %942, 2
  br label %944

944:                                              ; preds = %939, %932
  %945 = phi i64 [ %934, %932 ], [ %943, %939 ]
  %946 = phi i32* [ %938, %932 ], [ %941, %939 ]
  %947 = bitcast i32* %946 to i8*
  %948 = bitcast i32* %929 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %947, i8* align 4 %948, i64 %945, i1 false) #11
  %949 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %950 = bitcast %union.TfLitePtrUnion* %949 to float**
  %951 = load float*, float** %950, align 8
  br label %952

952:                                              ; preds = %922, %944
  %953 = phi float* [ %951, %944 ], [ null, %922 ]
  %954 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %954) #11
  %955 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %955, label %956, label %958

956:                                              ; preds = %952
  %957 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %957, align 8, !alias.scope !310
  br label %986

958:                                              ; preds = %952
  %959 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %960 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %959, align 8, !noalias !310
  %961 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %960, i64 0, i32 0
  %962 = load i32, i32* %961, align 4, !noalias !310
  %963 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %960, i64 0, i32 1, i64 0
  %964 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %962, i32* %964, align 8, !alias.scope !310
  %965 = icmp sgt i32 %962, 5
  br i1 %965, label %966, label %973

966:                                              ; preds = %958
  %967 = sext i32 %962 to i64
  %968 = shl nsw i64 %967, 2
  %969 = call i8* @_Znam(i64 %968) #10, !noalias !310
  %970 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %971 = bitcast i32** %970 to i8**
  store i8* %969, i8** %971, align 8, !alias.scope !310
  %972 = bitcast i8* %969 to i32*
  br label %978

973:                                              ; preds = %958
  %974 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %975 = bitcast %union.anon* %974 to i32*
  %976 = sext i32 %962 to i64
  %977 = shl nsw i64 %976, 2
  br label %978

978:                                              ; preds = %973, %966
  %979 = phi i64 [ %968, %966 ], [ %977, %973 ]
  %980 = phi i32* [ %972, %966 ], [ %975, %973 ]
  %981 = bitcast i32* %980 to i8*
  %982 = bitcast i32* %963 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %981, i8* align 4 %982, i64 %979, i1 false) #11
  %983 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %984 = bitcast %union.TfLitePtrUnion* %983 to float**
  %985 = load float*, float** %984, align 8
  br label %986

986:                                              ; preds = %956, %978
  %987 = phi float* [ %985, %978 ], [ null, %956 ]
  call void @_ZN6tflite13optimized_ops20BroadcastMulDispatchIfEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, float* %920, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %18, float* %953, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %19, float* %987)
  %988 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  %989 = load i32, i32* %988, align 8
  %990 = icmp sgt i32 %989, 5
  br i1 %990, label %991, label %997

991:                                              ; preds = %986
  %992 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %993 = load i32*, i32** %992, align 8
  %994 = icmp eq i32* %993, null
  br i1 %994, label %997, label %995

995:                                              ; preds = %991
  %996 = bitcast i32* %993 to i8*
  call void @_ZdaPv(i8* %996) #10
  br label %997

997:                                              ; preds = %986, %991, %995
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %954) #11
  %998 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  %999 = load i32, i32* %998, align 8
  %1000 = icmp sgt i32 %999, 5
  br i1 %1000, label %1001, label %1007

1001:                                             ; preds = %997
  %1002 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %1003 = load i32*, i32** %1002, align 8
  %1004 = icmp eq i32* %1003, null
  br i1 %1004, label %1007, label %1005

1005:                                             ; preds = %1001
  %1006 = bitcast i32* %1003 to i8*
  call void @_ZdaPv(i8* %1006) #10
  br label %1007

1007:                                             ; preds = %997, %1001, %1005
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %921) #11
  %1008 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %1009 = load i32, i32* %1008, align 8
  %1010 = icmp sgt i32 %1009, 5
  br i1 %1010, label %1011, label %1602

1011:                                             ; preds = %1007
  %1012 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %1013 = load i32*, i32** %1012, align 8
  %1014 = icmp eq i32* %1013, null
  br i1 %1014, label %1602, label %1015

1015:                                             ; preds = %1011
  %1016 = bitcast i32* %1013 to i8*
  call void @_ZdaPv(i8* %1016) #10
  br label %1602

1017:                                             ; preds = %870
  br i1 %874, label %1018, label %1025

1018:                                             ; preds = %1017
  %1019 = sext i32 %873 to i64
  %1020 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.52, i64 0, i64 %1019
  %1021 = load float, float* %1020, align 4
  %1022 = sext i32 %873 to i64
  %1023 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.53, i64 0, i64 %1022
  %1024 = load float, float* %1023, align 4
  br label %1025

1025:                                             ; preds = %1017, %1018
  %1026 = phi float [ %1021, %1018 ], [ 0xC7EFFFFFE0000000, %1017 ]
  %1027 = phi float [ %1024, %1018 ], [ 0x47EFFFFFE0000000, %1017 ]
  %1028 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 13
  store float %1026, float* %1028, align 4
  %1029 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 14
  store float %1027, float* %1029, align 4
  %1030 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1030) #11
  br i1 %25, label %1031, label %1033

1031:                                             ; preds = %1025
  %1032 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %1032, align 8, !alias.scope !313
  br label %1062

1033:                                             ; preds = %1025
  %1034 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %1035 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1034, align 8, !noalias !313
  %1036 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1035, i64 0, i32 0
  %1037 = load i32, i32* %1036, align 4, !noalias !313
  %1038 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1035, i64 0, i32 1, i64 0
  %1039 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %1037, i32* %1039, align 8, !alias.scope !313
  %1040 = icmp sgt i32 %1037, 5
  br i1 %1040, label %1041, label %1048

1041:                                             ; preds = %1033
  %1042 = sext i32 %1037 to i64
  %1043 = shl nsw i64 %1042, 2
  %1044 = call i8* @_Znam(i64 %1043) #10, !noalias !313
  %1045 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1046 = bitcast i32** %1045 to i8**
  store i8* %1044, i8** %1046, align 8, !alias.scope !313
  %1047 = bitcast i8* %1044 to i32*
  br label %1053

1048:                                             ; preds = %1033
  %1049 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %1050 = bitcast %union.anon* %1049 to i32*
  %1051 = sext i32 %1037 to i64
  %1052 = shl nsw i64 %1051, 2
  br label %1053

1053:                                             ; preds = %1048, %1041
  %1054 = phi i64 [ %1043, %1041 ], [ %1052, %1048 ]
  %1055 = phi i32* [ %1047, %1041 ], [ %1050, %1048 ]
  %1056 = bitcast i32* %1055 to i8*
  %1057 = bitcast i32* %1038 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1056, i8* align 4 %1057, i64 %1054, i1 false) #11
  %1058 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %1059 = bitcast %union.TfLitePtrUnion* %1058 to float**
  %1060 = load float*, float** %1059, align 8
  %1061 = bitcast float* %1060 to i8*
  br label %1062

1062:                                             ; preds = %1031, %1053
  %1063 = phi i32 [ %1037, %1053 ], [ 0, %1031 ]
  %1064 = phi i8* [ %1061, %1053 ], [ null, %1031 ]
  %1065 = phi float* [ %1060, %1053 ], [ null, %1031 ]
  %1066 = bitcast %"class.tflite::RuntimeShape"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1066) #11
  br i1 %55, label %1067, label %1069

1067:                                             ; preds = %1062
  %1068 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 0, i32* %1068, align 8, !alias.scope !316
  br label %1098

1069:                                             ; preds = %1062
  %1070 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %1071 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1070, align 8, !noalias !316
  %1072 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1071, i64 0, i32 0
  %1073 = load i32, i32* %1072, align 4, !noalias !316
  %1074 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1071, i64 0, i32 1, i64 0
  %1075 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 %1073, i32* %1075, align 8, !alias.scope !316
  %1076 = icmp sgt i32 %1073, 5
  br i1 %1076, label %1077, label %1084

1077:                                             ; preds = %1069
  %1078 = sext i32 %1073 to i64
  %1079 = shl nsw i64 %1078, 2
  %1080 = call i8* @_Znam(i64 %1079) #10, !noalias !316
  %1081 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %1082 = bitcast i32** %1081 to i8**
  store i8* %1080, i8** %1082, align 8, !alias.scope !316
  %1083 = bitcast i8* %1080 to i32*
  br label %1089

1084:                                             ; preds = %1069
  %1085 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  %1086 = bitcast %union.anon* %1085 to i32*
  %1087 = sext i32 %1073 to i64
  %1088 = shl nsw i64 %1087, 2
  br label %1089

1089:                                             ; preds = %1084, %1077
  %1090 = phi i64 [ %1079, %1077 ], [ %1088, %1084 ]
  %1091 = phi i32* [ %1083, %1077 ], [ %1086, %1084 ]
  %1092 = bitcast i32* %1091 to i8*
  %1093 = bitcast i32* %1074 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1092, i8* align 4 %1093, i64 %1090, i1 false) #11
  %1094 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %1095 = bitcast %union.TfLitePtrUnion* %1094 to float**
  %1096 = load float*, float** %1095, align 8
  %1097 = bitcast float* %1096 to i8*
  br label %1098

1098:                                             ; preds = %1067, %1089
  %1099 = phi i32 [ %1073, %1089 ], [ 0, %1067 ]
  %1100 = phi i8* [ %1097, %1089 ], [ null, %1067 ]
  %1101 = phi float* [ %1096, %1089 ], [ null, %1067 ]
  %1102 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1102) #11
  %1103 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %1103, label %1104, label %1106

1104:                                             ; preds = %1098
  %1105 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %1105, align 8, !alias.scope !319
  br label %1135

1106:                                             ; preds = %1098
  %1107 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %1108 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1107, align 8, !noalias !319
  %1109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1108, i64 0, i32 0
  %1110 = load i32, i32* %1109, align 4, !noalias !319
  %1111 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1108, i64 0, i32 1, i64 0
  %1112 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %1110, i32* %1112, align 8, !alias.scope !319
  %1113 = icmp sgt i32 %1110, 5
  br i1 %1113, label %1114, label %1121

1114:                                             ; preds = %1106
  %1115 = sext i32 %1110 to i64
  %1116 = shl nsw i64 %1115, 2
  %1117 = call i8* @_Znam(i64 %1116) #10, !noalias !319
  %1118 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1119 = bitcast i32** %1118 to i8**
  store i8* %1117, i8** %1119, align 8, !alias.scope !319
  %1120 = bitcast i8* %1117 to i32*
  br label %1126

1121:                                             ; preds = %1106
  %1122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %1123 = bitcast %union.anon* %1122 to i32*
  %1124 = sext i32 %1110 to i64
  %1125 = shl nsw i64 %1124, 2
  br label %1126

1126:                                             ; preds = %1121, %1114
  %1127 = phi i64 [ %1116, %1114 ], [ %1125, %1121 ]
  %1128 = phi i32* [ %1120, %1114 ], [ %1123, %1121 ]
  %1129 = bitcast i32* %1128 to i8*
  %1130 = bitcast i32* %1111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1129, i8* align 4 %1130, i64 %1127, i1 false) #11
  %1131 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %1132 = bitcast %union.TfLitePtrUnion* %1131 to float**
  %1133 = load float*, float** %1132, align 8
  %1134 = bitcast float* %1133 to i8*
  br label %1135

1135:                                             ; preds = %1104, %1126
  %1136 = phi i32 [ %1110, %1126 ], [ 0, %1104 ]
  %1137 = phi i8* [ %1134, %1126 ], [ null, %1104 ]
  %1138 = phi float* [ %1133, %1126 ], [ null, %1104 ]
  %1139 = icmp sgt i32 %1063, 5
  %1140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  br i1 %1139, label %1141, label %1144

1141:                                             ; preds = %1135
  %1142 = getelementptr inbounds %union.anon, %union.anon* %1140, i64 0, i32 0
  %1143 = load i32*, i32** %1142, align 8
  br label %1147

1144:                                             ; preds = %1135
  %1145 = bitcast %union.anon* %1140 to i32*
  %1146 = icmp sgt i32 %1063, 0
  br i1 %1146, label %1147, label %1247

1147:                                             ; preds = %1144, %1141
  %1148 = phi i32* [ %1143, %1141 ], [ %1145, %1144 ]
  %1149 = zext i32 %1063 to i64
  %1150 = icmp ult i32 %1063, 8
  br i1 %1150, label %1236, label %1151

1151:                                             ; preds = %1147
  %1152 = and i64 %1149, 4294967288
  %1153 = add nsw i64 %1152, -8
  %1154 = lshr exact i64 %1153, 3
  %1155 = add nuw nsw i64 %1154, 1
  %1156 = and i64 %1155, 3
  %1157 = icmp ult i64 %1153, 24
  br i1 %1157, label %1203, label %1158

1158:                                             ; preds = %1151
  %1159 = sub nsw i64 %1155, %1156
  br label %1160

1160:                                             ; preds = %1160, %1158
  %1161 = phi i64 [ 0, %1158 ], [ %1200, %1160 ]
  %1162 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1158 ], [ %1198, %1160 ]
  %1163 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1158 ], [ %1199, %1160 ]
  %1164 = phi i64 [ %1159, %1158 ], [ %1201, %1160 ]
  %1165 = getelementptr inbounds i32, i32* %1148, i64 %1161
  %1166 = bitcast i32* %1165 to <4 x i32>*
  %1167 = load <4 x i32>, <4 x i32>* %1166, align 4
  %1168 = getelementptr inbounds i32, i32* %1165, i64 4
  %1169 = bitcast i32* %1168 to <4 x i32>*
  %1170 = load <4 x i32>, <4 x i32>* %1169, align 4
  %1171 = mul nsw <4 x i32> %1167, %1162
  %1172 = mul nsw <4 x i32> %1170, %1163
  %1173 = or i64 %1161, 8
  %1174 = getelementptr inbounds i32, i32* %1148, i64 %1173
  %1175 = bitcast i32* %1174 to <4 x i32>*
  %1176 = load <4 x i32>, <4 x i32>* %1175, align 4
  %1177 = getelementptr inbounds i32, i32* %1174, i64 4
  %1178 = bitcast i32* %1177 to <4 x i32>*
  %1179 = load <4 x i32>, <4 x i32>* %1178, align 4
  %1180 = mul nsw <4 x i32> %1176, %1171
  %1181 = mul nsw <4 x i32> %1179, %1172
  %1182 = or i64 %1161, 16
  %1183 = getelementptr inbounds i32, i32* %1148, i64 %1182
  %1184 = bitcast i32* %1183 to <4 x i32>*
  %1185 = load <4 x i32>, <4 x i32>* %1184, align 4
  %1186 = getelementptr inbounds i32, i32* %1183, i64 4
  %1187 = bitcast i32* %1186 to <4 x i32>*
  %1188 = load <4 x i32>, <4 x i32>* %1187, align 4
  %1189 = mul nsw <4 x i32> %1185, %1180
  %1190 = mul nsw <4 x i32> %1188, %1181
  %1191 = or i64 %1161, 24
  %1192 = getelementptr inbounds i32, i32* %1148, i64 %1191
  %1193 = bitcast i32* %1192 to <4 x i32>*
  %1194 = load <4 x i32>, <4 x i32>* %1193, align 4
  %1195 = getelementptr inbounds i32, i32* %1192, i64 4
  %1196 = bitcast i32* %1195 to <4 x i32>*
  %1197 = load <4 x i32>, <4 x i32>* %1196, align 4
  %1198 = mul nsw <4 x i32> %1194, %1189
  %1199 = mul nsw <4 x i32> %1197, %1190
  %1200 = add i64 %1161, 32
  %1201 = add i64 %1164, -4
  %1202 = icmp eq i64 %1201, 0
  br i1 %1202, label %1203, label %1160, !llvm.loop !322

1203:                                             ; preds = %1160, %1151
  %1204 = phi <4 x i32> [ undef, %1151 ], [ %1198, %1160 ]
  %1205 = phi <4 x i32> [ undef, %1151 ], [ %1199, %1160 ]
  %1206 = phi i64 [ 0, %1151 ], [ %1200, %1160 ]
  %1207 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1151 ], [ %1198, %1160 ]
  %1208 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1151 ], [ %1199, %1160 ]
  %1209 = icmp eq i64 %1156, 0
  br i1 %1209, label %1226, label %1210

1210:                                             ; preds = %1203, %1210
  %1211 = phi i64 [ %1223, %1210 ], [ %1206, %1203 ]
  %1212 = phi <4 x i32> [ %1221, %1210 ], [ %1207, %1203 ]
  %1213 = phi <4 x i32> [ %1222, %1210 ], [ %1208, %1203 ]
  %1214 = phi i64 [ %1224, %1210 ], [ %1156, %1203 ]
  %1215 = getelementptr inbounds i32, i32* %1148, i64 %1211
  %1216 = bitcast i32* %1215 to <4 x i32>*
  %1217 = load <4 x i32>, <4 x i32>* %1216, align 4
  %1218 = getelementptr inbounds i32, i32* %1215, i64 4
  %1219 = bitcast i32* %1218 to <4 x i32>*
  %1220 = load <4 x i32>, <4 x i32>* %1219, align 4
  %1221 = mul nsw <4 x i32> %1217, %1212
  %1222 = mul nsw <4 x i32> %1220, %1213
  %1223 = add i64 %1211, 8
  %1224 = add i64 %1214, -1
  %1225 = icmp eq i64 %1224, 0
  br i1 %1225, label %1226, label %1210, !llvm.loop !323

1226:                                             ; preds = %1210, %1203
  %1227 = phi <4 x i32> [ %1204, %1203 ], [ %1221, %1210 ]
  %1228 = phi <4 x i32> [ %1205, %1203 ], [ %1222, %1210 ]
  %1229 = mul <4 x i32> %1228, %1227
  %1230 = shufflevector <4 x i32> %1229, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1231 = mul <4 x i32> %1229, %1230
  %1232 = shufflevector <4 x i32> %1231, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1233 = mul <4 x i32> %1231, %1232
  %1234 = extractelement <4 x i32> %1233, i32 0
  %1235 = icmp eq i64 %1152, %1149
  br i1 %1235, label %1247, label %1236

1236:                                             ; preds = %1226, %1147
  %1237 = phi i64 [ 0, %1147 ], [ %1152, %1226 ]
  %1238 = phi i32 [ 1, %1147 ], [ %1234, %1226 ]
  br label %1239

1239:                                             ; preds = %1236, %1239
  %1240 = phi i64 [ %1245, %1239 ], [ %1237, %1236 ]
  %1241 = phi i32 [ %1244, %1239 ], [ %1238, %1236 ]
  %1242 = getelementptr inbounds i32, i32* %1148, i64 %1240
  %1243 = load i32, i32* %1242, align 4
  %1244 = mul nsw i32 %1243, %1241
  %1245 = add nuw nsw i64 %1240, 1
  %1246 = icmp eq i64 %1245, %1149
  br i1 %1246, label %1247, label %1239, !llvm.loop !324

1247:                                             ; preds = %1239, %1226, %1144
  %1248 = phi i32 [ 1, %1144 ], [ %1234, %1226 ], [ %1244, %1239 ]
  %1249 = icmp sgt i32 %1099, 5
  %1250 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  br i1 %1249, label %1251, label %1254

1251:                                             ; preds = %1247
  %1252 = getelementptr inbounds %union.anon, %union.anon* %1250, i64 0, i32 0
  %1253 = load i32*, i32** %1252, align 8
  br label %1257

1254:                                             ; preds = %1247
  %1255 = bitcast %union.anon* %1250 to i32*
  %1256 = icmp sgt i32 %1099, 0
  br i1 %1256, label %1257, label %1357

1257:                                             ; preds = %1254, %1251
  %1258 = phi i32* [ %1253, %1251 ], [ %1255, %1254 ]
  %1259 = zext i32 %1099 to i64
  %1260 = icmp ult i32 %1099, 8
  br i1 %1260, label %1346, label %1261

1261:                                             ; preds = %1257
  %1262 = and i64 %1259, 4294967288
  %1263 = add nsw i64 %1262, -8
  %1264 = lshr exact i64 %1263, 3
  %1265 = add nuw nsw i64 %1264, 1
  %1266 = and i64 %1265, 3
  %1267 = icmp ult i64 %1263, 24
  br i1 %1267, label %1313, label %1268

1268:                                             ; preds = %1261
  %1269 = sub nsw i64 %1265, %1266
  br label %1270

1270:                                             ; preds = %1270, %1268
  %1271 = phi i64 [ 0, %1268 ], [ %1310, %1270 ]
  %1272 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1268 ], [ %1308, %1270 ]
  %1273 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1268 ], [ %1309, %1270 ]
  %1274 = phi i64 [ %1269, %1268 ], [ %1311, %1270 ]
  %1275 = getelementptr inbounds i32, i32* %1258, i64 %1271
  %1276 = bitcast i32* %1275 to <4 x i32>*
  %1277 = load <4 x i32>, <4 x i32>* %1276, align 4
  %1278 = getelementptr inbounds i32, i32* %1275, i64 4
  %1279 = bitcast i32* %1278 to <4 x i32>*
  %1280 = load <4 x i32>, <4 x i32>* %1279, align 4
  %1281 = mul nsw <4 x i32> %1277, %1272
  %1282 = mul nsw <4 x i32> %1280, %1273
  %1283 = or i64 %1271, 8
  %1284 = getelementptr inbounds i32, i32* %1258, i64 %1283
  %1285 = bitcast i32* %1284 to <4 x i32>*
  %1286 = load <4 x i32>, <4 x i32>* %1285, align 4
  %1287 = getelementptr inbounds i32, i32* %1284, i64 4
  %1288 = bitcast i32* %1287 to <4 x i32>*
  %1289 = load <4 x i32>, <4 x i32>* %1288, align 4
  %1290 = mul nsw <4 x i32> %1286, %1281
  %1291 = mul nsw <4 x i32> %1289, %1282
  %1292 = or i64 %1271, 16
  %1293 = getelementptr inbounds i32, i32* %1258, i64 %1292
  %1294 = bitcast i32* %1293 to <4 x i32>*
  %1295 = load <4 x i32>, <4 x i32>* %1294, align 4
  %1296 = getelementptr inbounds i32, i32* %1293, i64 4
  %1297 = bitcast i32* %1296 to <4 x i32>*
  %1298 = load <4 x i32>, <4 x i32>* %1297, align 4
  %1299 = mul nsw <4 x i32> %1295, %1290
  %1300 = mul nsw <4 x i32> %1298, %1291
  %1301 = or i64 %1271, 24
  %1302 = getelementptr inbounds i32, i32* %1258, i64 %1301
  %1303 = bitcast i32* %1302 to <4 x i32>*
  %1304 = load <4 x i32>, <4 x i32>* %1303, align 4
  %1305 = getelementptr inbounds i32, i32* %1302, i64 4
  %1306 = bitcast i32* %1305 to <4 x i32>*
  %1307 = load <4 x i32>, <4 x i32>* %1306, align 4
  %1308 = mul nsw <4 x i32> %1304, %1299
  %1309 = mul nsw <4 x i32> %1307, %1300
  %1310 = add i64 %1271, 32
  %1311 = add i64 %1274, -4
  %1312 = icmp eq i64 %1311, 0
  br i1 %1312, label %1313, label %1270, !llvm.loop !325

1313:                                             ; preds = %1270, %1261
  %1314 = phi <4 x i32> [ undef, %1261 ], [ %1308, %1270 ]
  %1315 = phi <4 x i32> [ undef, %1261 ], [ %1309, %1270 ]
  %1316 = phi i64 [ 0, %1261 ], [ %1310, %1270 ]
  %1317 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1261 ], [ %1308, %1270 ]
  %1318 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1261 ], [ %1309, %1270 ]
  %1319 = icmp eq i64 %1266, 0
  br i1 %1319, label %1336, label %1320

1320:                                             ; preds = %1313, %1320
  %1321 = phi i64 [ %1333, %1320 ], [ %1316, %1313 ]
  %1322 = phi <4 x i32> [ %1331, %1320 ], [ %1317, %1313 ]
  %1323 = phi <4 x i32> [ %1332, %1320 ], [ %1318, %1313 ]
  %1324 = phi i64 [ %1334, %1320 ], [ %1266, %1313 ]
  %1325 = getelementptr inbounds i32, i32* %1258, i64 %1321
  %1326 = bitcast i32* %1325 to <4 x i32>*
  %1327 = load <4 x i32>, <4 x i32>* %1326, align 4
  %1328 = getelementptr inbounds i32, i32* %1325, i64 4
  %1329 = bitcast i32* %1328 to <4 x i32>*
  %1330 = load <4 x i32>, <4 x i32>* %1329, align 4
  %1331 = mul nsw <4 x i32> %1327, %1322
  %1332 = mul nsw <4 x i32> %1330, %1323
  %1333 = add i64 %1321, 8
  %1334 = add i64 %1324, -1
  %1335 = icmp eq i64 %1334, 0
  br i1 %1335, label %1336, label %1320, !llvm.loop !326

1336:                                             ; preds = %1320, %1313
  %1337 = phi <4 x i32> [ %1314, %1313 ], [ %1331, %1320 ]
  %1338 = phi <4 x i32> [ %1315, %1313 ], [ %1332, %1320 ]
  %1339 = mul <4 x i32> %1338, %1337
  %1340 = shufflevector <4 x i32> %1339, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1341 = mul <4 x i32> %1339, %1340
  %1342 = shufflevector <4 x i32> %1341, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1343 = mul <4 x i32> %1341, %1342
  %1344 = extractelement <4 x i32> %1343, i32 0
  %1345 = icmp eq i64 %1262, %1259
  br i1 %1345, label %1357, label %1346

1346:                                             ; preds = %1336, %1257
  %1347 = phi i64 [ 0, %1257 ], [ %1262, %1336 ]
  %1348 = phi i32 [ 1, %1257 ], [ %1344, %1336 ]
  br label %1349

1349:                                             ; preds = %1346, %1349
  %1350 = phi i64 [ %1355, %1349 ], [ %1347, %1346 ]
  %1351 = phi i32 [ %1354, %1349 ], [ %1348, %1346 ]
  %1352 = getelementptr inbounds i32, i32* %1258, i64 %1350
  %1353 = load i32, i32* %1352, align 4
  %1354 = mul nsw i32 %1353, %1351
  %1355 = add nuw nsw i64 %1350, 1
  %1356 = icmp eq i64 %1355, %1259
  br i1 %1356, label %1357, label %1349, !llvm.loop !327

1357:                                             ; preds = %1349, %1336, %1254
  %1358 = phi i32 [ 1, %1254 ], [ %1344, %1336 ], [ %1354, %1349 ]
  %1359 = icmp sgt i32 %1136, 5
  %1360 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  br i1 %1359, label %1361, label %1364

1361:                                             ; preds = %1357
  %1362 = getelementptr inbounds %union.anon, %union.anon* %1360, i64 0, i32 0
  %1363 = load i32*, i32** %1362, align 8
  br label %1367

1364:                                             ; preds = %1357
  %1365 = bitcast %union.anon* %1360 to i32*
  %1366 = icmp sgt i32 %1136, 0
  br i1 %1366, label %1367, label %1467

1367:                                             ; preds = %1364, %1361
  %1368 = phi i32* [ %1363, %1361 ], [ %1365, %1364 ]
  %1369 = zext i32 %1136 to i64
  %1370 = icmp ult i32 %1136, 8
  br i1 %1370, label %1456, label %1371

1371:                                             ; preds = %1367
  %1372 = and i64 %1369, 4294967288
  %1373 = add nsw i64 %1372, -8
  %1374 = lshr exact i64 %1373, 3
  %1375 = add nuw nsw i64 %1374, 1
  %1376 = and i64 %1375, 3
  %1377 = icmp ult i64 %1373, 24
  br i1 %1377, label %1423, label %1378

1378:                                             ; preds = %1371
  %1379 = sub nsw i64 %1375, %1376
  br label %1380

1380:                                             ; preds = %1380, %1378
  %1381 = phi i64 [ 0, %1378 ], [ %1420, %1380 ]
  %1382 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1378 ], [ %1418, %1380 ]
  %1383 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1378 ], [ %1419, %1380 ]
  %1384 = phi i64 [ %1379, %1378 ], [ %1421, %1380 ]
  %1385 = getelementptr inbounds i32, i32* %1368, i64 %1381
  %1386 = bitcast i32* %1385 to <4 x i32>*
  %1387 = load <4 x i32>, <4 x i32>* %1386, align 4
  %1388 = getelementptr inbounds i32, i32* %1385, i64 4
  %1389 = bitcast i32* %1388 to <4 x i32>*
  %1390 = load <4 x i32>, <4 x i32>* %1389, align 4
  %1391 = mul nsw <4 x i32> %1387, %1382
  %1392 = mul nsw <4 x i32> %1390, %1383
  %1393 = or i64 %1381, 8
  %1394 = getelementptr inbounds i32, i32* %1368, i64 %1393
  %1395 = bitcast i32* %1394 to <4 x i32>*
  %1396 = load <4 x i32>, <4 x i32>* %1395, align 4
  %1397 = getelementptr inbounds i32, i32* %1394, i64 4
  %1398 = bitcast i32* %1397 to <4 x i32>*
  %1399 = load <4 x i32>, <4 x i32>* %1398, align 4
  %1400 = mul nsw <4 x i32> %1396, %1391
  %1401 = mul nsw <4 x i32> %1399, %1392
  %1402 = or i64 %1381, 16
  %1403 = getelementptr inbounds i32, i32* %1368, i64 %1402
  %1404 = bitcast i32* %1403 to <4 x i32>*
  %1405 = load <4 x i32>, <4 x i32>* %1404, align 4
  %1406 = getelementptr inbounds i32, i32* %1403, i64 4
  %1407 = bitcast i32* %1406 to <4 x i32>*
  %1408 = load <4 x i32>, <4 x i32>* %1407, align 4
  %1409 = mul nsw <4 x i32> %1405, %1400
  %1410 = mul nsw <4 x i32> %1408, %1401
  %1411 = or i64 %1381, 24
  %1412 = getelementptr inbounds i32, i32* %1368, i64 %1411
  %1413 = bitcast i32* %1412 to <4 x i32>*
  %1414 = load <4 x i32>, <4 x i32>* %1413, align 4
  %1415 = getelementptr inbounds i32, i32* %1412, i64 4
  %1416 = bitcast i32* %1415 to <4 x i32>*
  %1417 = load <4 x i32>, <4 x i32>* %1416, align 4
  %1418 = mul nsw <4 x i32> %1414, %1409
  %1419 = mul nsw <4 x i32> %1417, %1410
  %1420 = add i64 %1381, 32
  %1421 = add i64 %1384, -4
  %1422 = icmp eq i64 %1421, 0
  br i1 %1422, label %1423, label %1380, !llvm.loop !328

1423:                                             ; preds = %1380, %1371
  %1424 = phi <4 x i32> [ undef, %1371 ], [ %1418, %1380 ]
  %1425 = phi <4 x i32> [ undef, %1371 ], [ %1419, %1380 ]
  %1426 = phi i64 [ 0, %1371 ], [ %1420, %1380 ]
  %1427 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1371 ], [ %1418, %1380 ]
  %1428 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1371 ], [ %1419, %1380 ]
  %1429 = icmp eq i64 %1376, 0
  br i1 %1429, label %1446, label %1430

1430:                                             ; preds = %1423, %1430
  %1431 = phi i64 [ %1443, %1430 ], [ %1426, %1423 ]
  %1432 = phi <4 x i32> [ %1441, %1430 ], [ %1427, %1423 ]
  %1433 = phi <4 x i32> [ %1442, %1430 ], [ %1428, %1423 ]
  %1434 = phi i64 [ %1444, %1430 ], [ %1376, %1423 ]
  %1435 = getelementptr inbounds i32, i32* %1368, i64 %1431
  %1436 = bitcast i32* %1435 to <4 x i32>*
  %1437 = load <4 x i32>, <4 x i32>* %1436, align 4
  %1438 = getelementptr inbounds i32, i32* %1435, i64 4
  %1439 = bitcast i32* %1438 to <4 x i32>*
  %1440 = load <4 x i32>, <4 x i32>* %1439, align 4
  %1441 = mul nsw <4 x i32> %1437, %1432
  %1442 = mul nsw <4 x i32> %1440, %1433
  %1443 = add i64 %1431, 8
  %1444 = add i64 %1434, -1
  %1445 = icmp eq i64 %1444, 0
  br i1 %1445, label %1446, label %1430, !llvm.loop !329

1446:                                             ; preds = %1430, %1423
  %1447 = phi <4 x i32> [ %1424, %1423 ], [ %1441, %1430 ]
  %1448 = phi <4 x i32> [ %1425, %1423 ], [ %1442, %1430 ]
  %1449 = mul <4 x i32> %1448, %1447
  %1450 = shufflevector <4 x i32> %1449, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1451 = mul <4 x i32> %1449, %1450
  %1452 = shufflevector <4 x i32> %1451, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1453 = mul <4 x i32> %1451, %1452
  %1454 = extractelement <4 x i32> %1453, i32 0
  %1455 = icmp eq i64 %1372, %1369
  br i1 %1455, label %1467, label %1456

1456:                                             ; preds = %1446, %1367
  %1457 = phi i64 [ 0, %1367 ], [ %1372, %1446 ]
  %1458 = phi i32 [ 1, %1367 ], [ %1454, %1446 ]
  br label %1459

1459:                                             ; preds = %1456, %1459
  %1460 = phi i64 [ %1465, %1459 ], [ %1457, %1456 ]
  %1461 = phi i32 [ %1464, %1459 ], [ %1458, %1456 ]
  %1462 = getelementptr inbounds i32, i32* %1368, i64 %1460
  %1463 = load i32, i32* %1462, align 4
  %1464 = mul nsw i32 %1463, %1461
  %1465 = add nuw nsw i64 %1460, 1
  %1466 = icmp eq i64 %1465, %1369
  br i1 %1466, label %1467, label %1459, !llvm.loop !330

1467:                                             ; preds = %1459, %1446, %1364
  %1468 = phi i32 [ 1, %1364 ], [ %1454, %1446 ], [ %1464, %1459 ]
  %1469 = icmp eq i32 %1248, %1358
  br i1 %1469, label %1471, label %1470

1470:                                             ; preds = %1467
  call void @abort() #12
  unreachable

1471:                                             ; preds = %1467
  %1472 = icmp eq i32 %1248, %1468
  br i1 %1472, label %1474, label %1473

1473:                                             ; preds = %1471
  call void @abort() #12
  unreachable

1474:                                             ; preds = %1471
  %1475 = icmp sgt i32 %1248, 0
  br i1 %1475, label %1476, label %1581

1476:                                             ; preds = %1474
  %1477 = zext i32 %1248 to i64
  %1478 = icmp ult i32 %1248, 8
  br i1 %1478, label %1535, label %1479

1479:                                             ; preds = %1476
  %1480 = getelementptr float, float* %1138, i64 %1477
  %1481 = bitcast float* %1480 to i8*
  %1482 = getelementptr float, float* %1065, i64 %1477
  %1483 = bitcast float* %1482 to i8*
  %1484 = getelementptr float, float* %1101, i64 %1477
  %1485 = bitcast float* %1484 to i8*
  %1486 = icmp ult i8* %1137, %1483
  %1487 = icmp ult i8* %1064, %1481
  %1488 = and i1 %1486, %1487
  %1489 = icmp ult i8* %1137, %1485
  %1490 = icmp ult i8* %1100, %1481
  %1491 = and i1 %1489, %1490
  %1492 = or i1 %1488, %1491
  br i1 %1492, label %1535, label %1493

1493:                                             ; preds = %1479
  %1494 = and i64 %1477, 4294967288
  %1495 = insertelement <4 x float> undef, float %1026, i32 0
  %1496 = shufflevector <4 x float> %1495, <4 x float> undef, <4 x i32> zeroinitializer
  %1497 = insertelement <4 x float> undef, float %1026, i32 0
  %1498 = shufflevector <4 x float> %1497, <4 x float> undef, <4 x i32> zeroinitializer
  %1499 = insertelement <4 x float> undef, float %1027, i32 0
  %1500 = shufflevector <4 x float> %1499, <4 x float> undef, <4 x i32> zeroinitializer
  %1501 = insertelement <4 x float> undef, float %1027, i32 0
  %1502 = shufflevector <4 x float> %1501, <4 x float> undef, <4 x i32> zeroinitializer
  br label %1503

1503:                                             ; preds = %1503, %1493
  %1504 = phi i64 [ 0, %1493 ], [ %1531, %1503 ]
  %1505 = getelementptr inbounds float, float* %1065, i64 %1504
  %1506 = bitcast float* %1505 to <4 x float>*
  %1507 = load <4 x float>, <4 x float>* %1506, align 4, !alias.scope !331
  %1508 = getelementptr inbounds float, float* %1505, i64 4
  %1509 = bitcast float* %1508 to <4 x float>*
  %1510 = load <4 x float>, <4 x float>* %1509, align 4, !alias.scope !331
  %1511 = getelementptr inbounds float, float* %1101, i64 %1504
  %1512 = bitcast float* %1511 to <4 x float>*
  %1513 = load <4 x float>, <4 x float>* %1512, align 4, !alias.scope !334
  %1514 = getelementptr inbounds float, float* %1511, i64 4
  %1515 = bitcast float* %1514 to <4 x float>*
  %1516 = load <4 x float>, <4 x float>* %1515, align 4, !alias.scope !334
  %1517 = fmul <4 x float> %1507, %1513
  %1518 = fmul <4 x float> %1510, %1516
  %1519 = fcmp olt <4 x float> %1517, %1496
  %1520 = fcmp olt <4 x float> %1518, %1498
  %1521 = select <4 x i1> %1519, <4 x float> %1496, <4 x float> %1517
  %1522 = select <4 x i1> %1520, <4 x float> %1498, <4 x float> %1518
  %1523 = fcmp ogt <4 x float> %1521, %1500
  %1524 = fcmp ogt <4 x float> %1522, %1502
  %1525 = select <4 x i1> %1523, <4 x float> %1500, <4 x float> %1521
  %1526 = select <4 x i1> %1524, <4 x float> %1502, <4 x float> %1522
  %1527 = getelementptr inbounds float, float* %1138, i64 %1504
  %1528 = bitcast float* %1527 to <4 x float>*
  store <4 x float> %1525, <4 x float>* %1528, align 4, !alias.scope !336, !noalias !338
  %1529 = getelementptr inbounds float, float* %1527, i64 4
  %1530 = bitcast float* %1529 to <4 x float>*
  store <4 x float> %1526, <4 x float>* %1530, align 4, !alias.scope !336, !noalias !338
  %1531 = add i64 %1504, 8
  %1532 = icmp eq i64 %1531, %1494
  br i1 %1532, label %1533, label %1503, !llvm.loop !339

1533:                                             ; preds = %1503
  %1534 = icmp eq i64 %1494, %1477
  br i1 %1534, label %1581, label %1535

1535:                                             ; preds = %1533, %1479, %1476
  %1536 = phi i64 [ 0, %1479 ], [ 0, %1476 ], [ %1494, %1533 ]
  %1537 = xor i64 %1536, -1
  %1538 = and i64 %1477, 1
  %1539 = icmp eq i64 %1538, 0
  br i1 %1539, label %1552, label %1540

1540:                                             ; preds = %1535
  %1541 = getelementptr inbounds float, float* %1065, i64 %1536
  %1542 = load float, float* %1541, align 4
  %1543 = getelementptr inbounds float, float* %1101, i64 %1536
  %1544 = load float, float* %1543, align 4
  %1545 = fmul float %1542, %1544
  %1546 = fcmp olt float %1545, %1026
  %1547 = select i1 %1546, float %1026, float %1545
  %1548 = fcmp ogt float %1547, %1027
  %1549 = select i1 %1548, float %1027, float %1547
  %1550 = getelementptr inbounds float, float* %1138, i64 %1536
  store float %1549, float* %1550, align 4
  %1551 = or i64 %1536, 1
  br label %1552

1552:                                             ; preds = %1535, %1540
  %1553 = phi i64 [ %1536, %1535 ], [ %1551, %1540 ]
  %1554 = sub nsw i64 0, %1477
  %1555 = icmp eq i64 %1537, %1554
  br i1 %1555, label %1581, label %1556

1556:                                             ; preds = %1552, %1556
  %1557 = phi i64 [ %1579, %1556 ], [ %1553, %1552 ]
  %1558 = getelementptr inbounds float, float* %1065, i64 %1557
  %1559 = load float, float* %1558, align 4
  %1560 = getelementptr inbounds float, float* %1101, i64 %1557
  %1561 = load float, float* %1560, align 4
  %1562 = fmul float %1559, %1561
  %1563 = fcmp olt float %1562, %1026
  %1564 = select i1 %1563, float %1026, float %1562
  %1565 = fcmp ogt float %1564, %1027
  %1566 = select i1 %1565, float %1027, float %1564
  %1567 = getelementptr inbounds float, float* %1138, i64 %1557
  store float %1566, float* %1567, align 4
  %1568 = add nuw nsw i64 %1557, 1
  %1569 = getelementptr inbounds float, float* %1065, i64 %1568
  %1570 = load float, float* %1569, align 4
  %1571 = getelementptr inbounds float, float* %1101, i64 %1568
  %1572 = load float, float* %1571, align 4
  %1573 = fmul float %1570, %1572
  %1574 = fcmp olt float %1573, %1026
  %1575 = select i1 %1574, float %1026, float %1573
  %1576 = fcmp ogt float %1575, %1027
  %1577 = select i1 %1576, float %1027, float %1575
  %1578 = getelementptr inbounds float, float* %1138, i64 %1568
  store float %1577, float* %1578, align 4
  %1579 = add nuw nsw i64 %1557, 2
  %1580 = icmp eq i64 %1579, %1477
  br i1 %1580, label %1581, label %1556, !llvm.loop !340

1581:                                             ; preds = %1552, %1556, %1533, %1474
  br i1 %1359, label %1582, label %1588

1582:                                             ; preds = %1581
  %1583 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1584 = load i32*, i32** %1583, align 8
  %1585 = icmp eq i32* %1584, null
  br i1 %1585, label %1588, label %1586

1586:                                             ; preds = %1582
  %1587 = bitcast i32* %1584 to i8*
  call void @_ZdaPv(i8* %1587) #10
  br label %1588

1588:                                             ; preds = %1581, %1582, %1586
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1102) #11
  br i1 %1249, label %1589, label %1595

1589:                                             ; preds = %1588
  %1590 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %1591 = load i32*, i32** %1590, align 8
  %1592 = icmp eq i32* %1591, null
  br i1 %1592, label %1595, label %1593

1593:                                             ; preds = %1589
  %1594 = bitcast i32* %1591 to i8*
  call void @_ZdaPv(i8* %1594) #10
  br label %1595

1595:                                             ; preds = %1588, %1589, %1593
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1066) #11
  br i1 %1139, label %1596, label %1602

1596:                                             ; preds = %1595
  %1597 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1598 = load i32*, i32** %1597, align 8
  %1599 = icmp eq i32* %1598, null
  br i1 %1599, label %1602, label %1600

1600:                                             ; preds = %1596
  %1601 = bitcast i32* %1598 to i8*
  call void @_ZdaPv(i8* %1601) #10
  br label %1602

1602:                                             ; preds = %1600, %1596, %1595, %1015, %1011, %1007, %868, %864, %863, %249, %245, %241
  %1603 = phi i8* [ %125, %241 ], [ %125, %245 ], [ %125, %249 ], [ %264, %863 ], [ %264, %864 ], [ %264, %868 ], [ %888, %1007 ], [ %888, %1011 ], [ %888, %1015 ], [ %1030, %1595 ], [ %1030, %1596 ], [ %1030, %1600 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1603) #11
  br label %1604

1604:                                             ; preds = %1602, %104
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %23) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin3mul13EvalQuantizedILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteMulParams*, %"struct.tflite::ops::builtin::mul::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %8 = alloca %"struct.tflite::ArithmeticParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"class.tflite::RuntimeShape", align 8
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = alloca %"class.tflite::RuntimeShape", align 8
  %24 = alloca %"class.tflite::RuntimeShape", align 8
  %25 = alloca %"class.tflite::RuntimeShape", align 8
  %26 = alloca %"class.tflite::RuntimeShape", align 8
  %27 = alloca %"class.tflite::RuntimeShape", align 8
  %28 = alloca %"class.tflite::RuntimeShape", align 8
  %29 = alloca %"class.tflite::RuntimeShape", align 8
  %30 = alloca %"class.tflite::RuntimeShape", align 8
  %31 = alloca %"class.tflite::RuntimeShape", align 8
  %32 = alloca %"class.tflite::RuntimeShape", align 8
  %33 = alloca %"class.tflite::RuntimeShape", align 8
  %34 = alloca %"class.tflite::RuntimeShape", align 8
  %35 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %40, label %955

40:                                               ; preds = %7
  %41 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %36, %42
  br i1 %43, label %44, label %955

44:                                               ; preds = %40
  switch i32 %36, label %2126 [
    i32 3, label %45
    i32 9, label %45
    i32 7, label %45
  ]

45:                                               ; preds = %44, %44, %44
  %46 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %46) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %46, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3mul13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_.op_params, i64 0, i32 0), i64 80, i1 false)
  %47 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 11
  store i32 %48, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 12
  store i32 %50, i32* %52, align 4
  %53 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 3, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = sub nsw i32 0, %54
  %56 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 1
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 3, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = sub nsw i32 0, %58
  %60 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 2
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 3, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 3
  store i32 %62, i32* %63, align 4
  %64 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 4
  store i32 %65, i32* %66, align 4
  %67 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 5
  store i32 %68, i32* %69, align 4
  %70 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %70) #11
  %71 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %71, label %72, label %74

72:                                               ; preds = %45
  %73 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %73, align 8, !alias.scope !341
  br label %99

74:                                               ; preds = %45
  %75 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %76 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %75, align 8, !noalias !341
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %76, i64 0, i32 0
  %78 = load i32, i32* %77, align 4, !noalias !341
  %79 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %76, i64 0, i32 1, i64 0
  %80 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %78, i32* %80, align 8, !alias.scope !341
  %81 = icmp sgt i32 %78, 5
  br i1 %81, label %82, label %89

82:                                               ; preds = %74
  %83 = sext i32 %78 to i64
  %84 = shl nsw i64 %83, 2
  %85 = tail call i8* @_Znam(i64 %84) #10, !noalias !341
  %86 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %87 = bitcast i32** %86 to i8**
  store i8* %85, i8** %87, align 8, !alias.scope !341
  %88 = bitcast i8* %85 to i32*
  br label %94

89:                                               ; preds = %74
  %90 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %91 = bitcast %union.anon* %90 to i32*
  %92 = sext i32 %78 to i64
  %93 = shl nsw i64 %92, 2
  br label %94

94:                                               ; preds = %89, %82
  %95 = phi i64 [ %84, %82 ], [ %93, %89 ]
  %96 = phi i32* [ %88, %82 ], [ %91, %89 ]
  %97 = bitcast i32* %96 to i8*
  %98 = bitcast i32* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %97, i8* align 4 %98, i64 %95, i1 false) #11
  br label %99

99:                                               ; preds = %72, %94
  %100 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #11
  %101 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %101, label %102, label %104

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %103, align 8, !alias.scope !344
  br label %129

104:                                              ; preds = %99
  %105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %106 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %105, align 8, !noalias !344
  %107 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 4, !noalias !344
  %109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %106, i64 0, i32 1, i64 0
  %110 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %108, i32* %110, align 8, !alias.scope !344
  %111 = icmp sgt i32 %108, 5
  br i1 %111, label %112, label %119

112:                                              ; preds = %104
  %113 = sext i32 %108 to i64
  %114 = shl nsw i64 %113, 2
  %115 = tail call i8* @_Znam(i64 %114) #10, !noalias !344
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %117 = bitcast i32** %116 to i8**
  store i8* %115, i8** %117, align 8, !alias.scope !344
  %118 = bitcast i8* %115 to i32*
  br label %124

119:                                              ; preds = %104
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %121 = bitcast %union.anon* %120 to i32*
  %122 = sext i32 %108 to i64
  %123 = shl nsw i64 %122, 2
  br label %124

124:                                              ; preds = %119, %112
  %125 = phi i64 [ %114, %112 ], [ %123, %119 ]
  %126 = phi i32* [ %118, %112 ], [ %121, %119 ]
  %127 = bitcast i32* %126 to i8*
  %128 = bitcast i32* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* align 4 %128, i64 %125, i1 false) #11
  br label %129

129:                                              ; preds = %102, %124
  %130 = call zeroext i1 @_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, %"struct.tflite::ArithmeticParams"* nonnull %8)
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = icmp sgt i32 %132, 5
  br i1 %133, label %134, label %140

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %136 = load i32*, i32** %135, align 8
  %137 = icmp eq i32* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast i32* %136 to i8*
  call void @_ZdaPv(i8* %139) #10
  br label %140

140:                                              ; preds = %129, %134, %138
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #11
  %141 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %142 = load i32, i32* %141, align 8
  %143 = icmp sgt i32 %142, 5
  br i1 %143, label %144, label %150

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %146 = load i32*, i32** %145, align 8
  %147 = icmp eq i32* %146, null
  br i1 %147, label %150, label %148

148:                                              ; preds = %144
  %149 = bitcast i32* %146 to i8*
  call void @_ZdaPv(i8* %149) #10
  br label %150

150:                                              ; preds = %140, %144, %148
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %70) #11
  %151 = load i32, i32* %35, align 8
  switch i32 %151, label %692 [
    i32 9, label %152
    i32 7, label %413
  ]

152:                                              ; preds = %150
  br i1 %130, label %153, label %283

153:                                              ; preds = %152
  %154 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %154) #11
  br i1 %71, label %155, label %157

155:                                              ; preds = %153
  %156 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %156, align 8, !alias.scope !347
  br label %185

157:                                              ; preds = %153
  %158 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %159 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %158, align 8, !noalias !347
  %160 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %159, i64 0, i32 0
  %161 = load i32, i32* %160, align 4, !noalias !347
  %162 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %159, i64 0, i32 1, i64 0
  %163 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %161, i32* %163, align 8, !alias.scope !347
  %164 = icmp sgt i32 %161, 5
  br i1 %164, label %165, label %172

165:                                              ; preds = %157
  %166 = sext i32 %161 to i64
  %167 = shl nsw i64 %166, 2
  %168 = call i8* @_Znam(i64 %167) #10, !noalias !347
  %169 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %170 = bitcast i32** %169 to i8**
  store i8* %168, i8** %170, align 8, !alias.scope !347
  %171 = bitcast i8* %168 to i32*
  br label %177

172:                                              ; preds = %157
  %173 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %174 = bitcast %union.anon* %173 to i32*
  %175 = sext i32 %161 to i64
  %176 = shl nsw i64 %175, 2
  br label %177

177:                                              ; preds = %172, %165
  %178 = phi i64 [ %167, %165 ], [ %176, %172 ]
  %179 = phi i32* [ %171, %165 ], [ %174, %172 ]
  %180 = bitcast i32* %179 to i8*
  %181 = bitcast i32* %162 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %180, i8* align 4 %181, i64 %178, i1 false) #11
  %182 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %183 = bitcast %union.TfLitePtrUnion* %182 to i8**
  %184 = load i8*, i8** %183, align 8
  br label %185

185:                                              ; preds = %155, %177
  %186 = phi i8* [ %184, %177 ], [ null, %155 ]
  %187 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %187) #11
  br i1 %101, label %188, label %190

188:                                              ; preds = %185
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %189, align 8, !alias.scope !350
  br label %218

190:                                              ; preds = %185
  %191 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %192 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %191, align 8, !noalias !350
  %193 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %192, i64 0, i32 0
  %194 = load i32, i32* %193, align 4, !noalias !350
  %195 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %192, i64 0, i32 1, i64 0
  %196 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %194, i32* %196, align 8, !alias.scope !350
  %197 = icmp sgt i32 %194, 5
  br i1 %197, label %198, label %205

198:                                              ; preds = %190
  %199 = sext i32 %194 to i64
  %200 = shl nsw i64 %199, 2
  %201 = call i8* @_Znam(i64 %200) #10, !noalias !350
  %202 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %203 = bitcast i32** %202 to i8**
  store i8* %201, i8** %203, align 8, !alias.scope !350
  %204 = bitcast i8* %201 to i32*
  br label %210

205:                                              ; preds = %190
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %207 = bitcast %union.anon* %206 to i32*
  %208 = sext i32 %194 to i64
  %209 = shl nsw i64 %208, 2
  br label %210

210:                                              ; preds = %205, %198
  %211 = phi i64 [ %200, %198 ], [ %209, %205 ]
  %212 = phi i32* [ %204, %198 ], [ %207, %205 ]
  %213 = bitcast i32* %212 to i8*
  %214 = bitcast i32* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %213, i8* align 4 %214, i64 %211, i1 false) #11
  %215 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %216 = bitcast %union.TfLitePtrUnion* %215 to i8**
  %217 = load i8*, i8** %216, align 8
  br label %218

218:                                              ; preds = %188, %210
  %219 = phi i8* [ %217, %210 ], [ null, %188 ]
  %220 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %220) #11
  %221 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %221, label %222, label %224

222:                                              ; preds = %218
  %223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %223, align 8, !alias.scope !353
  br label %252

224:                                              ; preds = %218
  %225 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %226 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %225, align 8, !noalias !353
  %227 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %226, i64 0, i32 0
  %228 = load i32, i32* %227, align 4, !noalias !353
  %229 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %226, i64 0, i32 1, i64 0
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %228, i32* %230, align 8, !alias.scope !353
  %231 = icmp sgt i32 %228, 5
  br i1 %231, label %232, label %239

232:                                              ; preds = %224
  %233 = sext i32 %228 to i64
  %234 = shl nsw i64 %233, 2
  %235 = call i8* @_Znam(i64 %234) #10, !noalias !353
  %236 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %237 = bitcast i32** %236 to i8**
  store i8* %235, i8** %237, align 8, !alias.scope !353
  %238 = bitcast i8* %235 to i32*
  br label %244

239:                                              ; preds = %224
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %241 = bitcast %union.anon* %240 to i32*
  %242 = sext i32 %228 to i64
  %243 = shl nsw i64 %242, 2
  br label %244

244:                                              ; preds = %239, %232
  %245 = phi i64 [ %234, %232 ], [ %243, %239 ]
  %246 = phi i32* [ %238, %232 ], [ %241, %239 ]
  %247 = bitcast i32* %246 to i8*
  %248 = bitcast i32* %229 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %247, i8* align 4 %248, i64 %245, i1 false) #11
  %249 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %250 = bitcast %union.TfLitePtrUnion* %249 to i8**
  %251 = load i8*, i8** %250, align 8
  br label %252

252:                                              ; preds = %222, %244
  %253 = phi i8* [ %251, %244 ], [ null, %222 ]
  call void @_ZN6tflite21optimized_integer_ops20BroadcastMulDispatchERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKaS6_S8_S6_Pa(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i8* %186, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %219, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %253)
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %255 = load i32, i32* %254, align 8
  %256 = icmp sgt i32 %255, 5
  br i1 %256, label %257, label %263

257:                                              ; preds = %252
  %258 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %259 = load i32*, i32** %258, align 8
  %260 = icmp eq i32* %259, null
  br i1 %260, label %263, label %261

261:                                              ; preds = %257
  %262 = bitcast i32* %259 to i8*
  call void @_ZdaPv(i8* %262) #10
  br label %263

263:                                              ; preds = %252, %257, %261
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %220) #11
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %265 = load i32, i32* %264, align 8
  %266 = icmp sgt i32 %265, 5
  br i1 %266, label %267, label %273

267:                                              ; preds = %263
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %269 = load i32*, i32** %268, align 8
  %270 = icmp eq i32* %269, null
  br i1 %270, label %273, label %271

271:                                              ; preds = %267
  %272 = bitcast i32* %269 to i8*
  call void @_ZdaPv(i8* %272) #10
  br label %273

273:                                              ; preds = %263, %267, %271
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %187) #11
  %274 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %275 = load i32, i32* %274, align 8
  %276 = icmp sgt i32 %275, 5
  br i1 %276, label %277, label %953

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %279 = load i32*, i32** %278, align 8
  %280 = icmp eq i32* %279, null
  br i1 %280, label %953, label %281

281:                                              ; preds = %277
  %282 = bitcast i32* %279 to i8*
  call void @_ZdaPv(i8* %282) #10
  br label %953

283:                                              ; preds = %152
  %284 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %284) #11
  br i1 %71, label %285, label %287

285:                                              ; preds = %283
  %286 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %286, align 8, !alias.scope !356
  br label %315

287:                                              ; preds = %283
  %288 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %289 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %288, align 8, !noalias !356
  %290 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %289, i64 0, i32 0
  %291 = load i32, i32* %290, align 4, !noalias !356
  %292 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %289, i64 0, i32 1, i64 0
  %293 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %291, i32* %293, align 8, !alias.scope !356
  %294 = icmp sgt i32 %291, 5
  br i1 %294, label %295, label %302

295:                                              ; preds = %287
  %296 = sext i32 %291 to i64
  %297 = shl nsw i64 %296, 2
  %298 = call i8* @_Znam(i64 %297) #10, !noalias !356
  %299 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %300 = bitcast i32** %299 to i8**
  store i8* %298, i8** %300, align 8, !alias.scope !356
  %301 = bitcast i8* %298 to i32*
  br label %307

302:                                              ; preds = %287
  %303 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %304 = bitcast %union.anon* %303 to i32*
  %305 = sext i32 %291 to i64
  %306 = shl nsw i64 %305, 2
  br label %307

307:                                              ; preds = %302, %295
  %308 = phi i64 [ %297, %295 ], [ %306, %302 ]
  %309 = phi i32* [ %301, %295 ], [ %304, %302 ]
  %310 = bitcast i32* %309 to i8*
  %311 = bitcast i32* %292 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %310, i8* align 4 %311, i64 %308, i1 false) #11
  %312 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %313 = bitcast %union.TfLitePtrUnion* %312 to i8**
  %314 = load i8*, i8** %313, align 8
  br label %315

315:                                              ; preds = %285, %307
  %316 = phi i8* [ %314, %307 ], [ null, %285 ]
  %317 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %317) #11
  br i1 %101, label %318, label %320

318:                                              ; preds = %315
  %319 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %319, align 8, !alias.scope !359
  br label %348

320:                                              ; preds = %315
  %321 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %322 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %321, align 8, !noalias !359
  %323 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %322, i64 0, i32 0
  %324 = load i32, i32* %323, align 4, !noalias !359
  %325 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %322, i64 0, i32 1, i64 0
  %326 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %324, i32* %326, align 8, !alias.scope !359
  %327 = icmp sgt i32 %324, 5
  br i1 %327, label %328, label %335

328:                                              ; preds = %320
  %329 = sext i32 %324 to i64
  %330 = shl nsw i64 %329, 2
  %331 = call i8* @_Znam(i64 %330) #10, !noalias !359
  %332 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %333 = bitcast i32** %332 to i8**
  store i8* %331, i8** %333, align 8, !alias.scope !359
  %334 = bitcast i8* %331 to i32*
  br label %340

335:                                              ; preds = %320
  %336 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %337 = bitcast %union.anon* %336 to i32*
  %338 = sext i32 %324 to i64
  %339 = shl nsw i64 %338, 2
  br label %340

340:                                              ; preds = %335, %328
  %341 = phi i64 [ %330, %328 ], [ %339, %335 ]
  %342 = phi i32* [ %334, %328 ], [ %337, %335 ]
  %343 = bitcast i32* %342 to i8*
  %344 = bitcast i32* %325 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %343, i8* align 4 %344, i64 %341, i1 false) #11
  %345 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %346 = bitcast %union.TfLitePtrUnion* %345 to i8**
  %347 = load i8*, i8** %346, align 8
  br label %348

348:                                              ; preds = %318, %340
  %349 = phi i8* [ %347, %340 ], [ null, %318 ]
  %350 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %350) #11
  %351 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %351, label %352, label %354

352:                                              ; preds = %348
  %353 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %353, align 8, !alias.scope !362
  br label %382

354:                                              ; preds = %348
  %355 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %356 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %355, align 8, !noalias !362
  %357 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %356, i64 0, i32 0
  %358 = load i32, i32* %357, align 4, !noalias !362
  %359 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %356, i64 0, i32 1, i64 0
  %360 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %358, i32* %360, align 8, !alias.scope !362
  %361 = icmp sgt i32 %358, 5
  br i1 %361, label %362, label %369

362:                                              ; preds = %354
  %363 = sext i32 %358 to i64
  %364 = shl nsw i64 %363, 2
  %365 = call i8* @_Znam(i64 %364) #10, !noalias !362
  %366 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %367 = bitcast i32** %366 to i8**
  store i8* %365, i8** %367, align 8, !alias.scope !362
  %368 = bitcast i8* %365 to i32*
  br label %374

369:                                              ; preds = %354
  %370 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %371 = bitcast %union.anon* %370 to i32*
  %372 = sext i32 %358 to i64
  %373 = shl nsw i64 %372, 2
  br label %374

374:                                              ; preds = %369, %362
  %375 = phi i64 [ %364, %362 ], [ %373, %369 ]
  %376 = phi i32* [ %368, %362 ], [ %371, %369 ]
  %377 = bitcast i32* %376 to i8*
  %378 = bitcast i32* %359 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %377, i8* align 4 %378, i64 %375, i1 false) #11
  %379 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %380 = bitcast %union.TfLitePtrUnion* %379 to i8**
  %381 = load i8*, i8** %380, align 8
  br label %382

382:                                              ; preds = %352, %374
  %383 = phi i8* [ %381, %374 ], [ null, %352 ]
  call void @_ZN6tflite21optimized_integer_ops3MulERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKaS6_S8_S6_Pa(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i8* %316, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, i8* %349, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, i8* %383)
  %384 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %385 = load i32, i32* %384, align 8
  %386 = icmp sgt i32 %385, 5
  br i1 %386, label %387, label %393

387:                                              ; preds = %382
  %388 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %389 = load i32*, i32** %388, align 8
  %390 = icmp eq i32* %389, null
  br i1 %390, label %393, label %391

391:                                              ; preds = %387
  %392 = bitcast i32* %389 to i8*
  call void @_ZdaPv(i8* %392) #10
  br label %393

393:                                              ; preds = %382, %387, %391
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %350) #11
  %394 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %395 = load i32, i32* %394, align 8
  %396 = icmp sgt i32 %395, 5
  br i1 %396, label %397, label %403

397:                                              ; preds = %393
  %398 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %399 = load i32*, i32** %398, align 8
  %400 = icmp eq i32* %399, null
  br i1 %400, label %403, label %401

401:                                              ; preds = %397
  %402 = bitcast i32* %399 to i8*
  call void @_ZdaPv(i8* %402) #10
  br label %403

403:                                              ; preds = %393, %397, %401
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %317) #11
  %404 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %405 = load i32, i32* %404, align 8
  %406 = icmp sgt i32 %405, 5
  br i1 %406, label %407, label %953

407:                                              ; preds = %403
  %408 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %409 = load i32*, i32** %408, align 8
  %410 = icmp eq i32* %409, null
  br i1 %410, label %953, label %411

411:                                              ; preds = %407
  %412 = bitcast i32* %409 to i8*
  call void @_ZdaPv(i8* %412) #10
  br label %953

413:                                              ; preds = %150
  %414 = load i32, i32* %56, align 4
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %419, label %416

416:                                              ; preds = %413
  %417 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %418 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %417, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %418(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 202, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i32 %414, double 0.000000e+00) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %46) #11
  br label %2129

419:                                              ; preds = %413
  %420 = load i32, i32* %60, align 4
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %425, label %422

422:                                              ; preds = %419
  %423 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %424 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %423, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %424(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 203, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i32 %420, double 0.000000e+00) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %46) #11
  br label %2129

425:                                              ; preds = %419
  %426 = load i32, i32* %63, align 4
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %431, label %428

428:                                              ; preds = %425
  %429 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %430 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %429, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %430(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 204, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i32 %426, double 0.000000e+00) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %46) #11
  br label %2129

431:                                              ; preds = %425
  br i1 %130, label %432, label %562

432:                                              ; preds = %431
  %433 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %433) #11
  br i1 %71, label %434, label %436

434:                                              ; preds = %432
  %435 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %435, align 8, !alias.scope !365
  br label %464

436:                                              ; preds = %432
  %437 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %438 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %437, align 8, !noalias !365
  %439 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %438, i64 0, i32 0
  %440 = load i32, i32* %439, align 4, !noalias !365
  %441 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %438, i64 0, i32 1, i64 0
  %442 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %440, i32* %442, align 8, !alias.scope !365
  %443 = icmp sgt i32 %440, 5
  br i1 %443, label %444, label %451

444:                                              ; preds = %436
  %445 = sext i32 %440 to i64
  %446 = shl nsw i64 %445, 2
  %447 = call i8* @_Znam(i64 %446) #10, !noalias !365
  %448 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %449 = bitcast i32** %448 to i8**
  store i8* %447, i8** %449, align 8, !alias.scope !365
  %450 = bitcast i8* %447 to i32*
  br label %456

451:                                              ; preds = %436
  %452 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %453 = bitcast %union.anon* %452 to i32*
  %454 = sext i32 %440 to i64
  %455 = shl nsw i64 %454, 2
  br label %456

456:                                              ; preds = %451, %444
  %457 = phi i64 [ %446, %444 ], [ %455, %451 ]
  %458 = phi i32* [ %450, %444 ], [ %453, %451 ]
  %459 = bitcast i32* %458 to i8*
  %460 = bitcast i32* %441 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %459, i8* align 4 %460, i64 %457, i1 false) #11
  %461 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %462 = bitcast %union.TfLitePtrUnion* %461 to i16**
  %463 = load i16*, i16** %462, align 8
  br label %464

464:                                              ; preds = %434, %456
  %465 = phi i16* [ %463, %456 ], [ null, %434 ]
  %466 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %466) #11
  br i1 %101, label %467, label %469

467:                                              ; preds = %464
  %468 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %468, align 8, !alias.scope !368
  br label %497

469:                                              ; preds = %464
  %470 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %471 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %470, align 8, !noalias !368
  %472 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %471, i64 0, i32 0
  %473 = load i32, i32* %472, align 4, !noalias !368
  %474 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %471, i64 0, i32 1, i64 0
  %475 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %473, i32* %475, align 8, !alias.scope !368
  %476 = icmp sgt i32 %473, 5
  br i1 %476, label %477, label %484

477:                                              ; preds = %469
  %478 = sext i32 %473 to i64
  %479 = shl nsw i64 %478, 2
  %480 = call i8* @_Znam(i64 %479) #10, !noalias !368
  %481 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %482 = bitcast i32** %481 to i8**
  store i8* %480, i8** %482, align 8, !alias.scope !368
  %483 = bitcast i8* %480 to i32*
  br label %489

484:                                              ; preds = %469
  %485 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %486 = bitcast %union.anon* %485 to i32*
  %487 = sext i32 %473 to i64
  %488 = shl nsw i64 %487, 2
  br label %489

489:                                              ; preds = %484, %477
  %490 = phi i64 [ %479, %477 ], [ %488, %484 ]
  %491 = phi i32* [ %483, %477 ], [ %486, %484 ]
  %492 = bitcast i32* %491 to i8*
  %493 = bitcast i32* %474 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %492, i8* align 4 %493, i64 %490, i1 false) #11
  %494 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %495 = bitcast %union.TfLitePtrUnion* %494 to i16**
  %496 = load i16*, i16** %495, align 8
  br label %497

497:                                              ; preds = %467, %489
  %498 = phi i16* [ %496, %489 ], [ null, %467 ]
  %499 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %499) #11
  %500 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %500, label %501, label %503

501:                                              ; preds = %497
  %502 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %502, align 8, !alias.scope !371
  br label %531

503:                                              ; preds = %497
  %504 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %505 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %504, align 8, !noalias !371
  %506 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %505, i64 0, i32 0
  %507 = load i32, i32* %506, align 4, !noalias !371
  %508 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %505, i64 0, i32 1, i64 0
  %509 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %507, i32* %509, align 8, !alias.scope !371
  %510 = icmp sgt i32 %507, 5
  br i1 %510, label %511, label %518

511:                                              ; preds = %503
  %512 = sext i32 %507 to i64
  %513 = shl nsw i64 %512, 2
  %514 = call i8* @_Znam(i64 %513) #10, !noalias !371
  %515 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %516 = bitcast i32** %515 to i8**
  store i8* %514, i8** %516, align 8, !alias.scope !371
  %517 = bitcast i8* %514 to i32*
  br label %523

518:                                              ; preds = %503
  %519 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %520 = bitcast %union.anon* %519 to i32*
  %521 = sext i32 %507 to i64
  %522 = shl nsw i64 %521, 2
  br label %523

523:                                              ; preds = %518, %511
  %524 = phi i64 [ %513, %511 ], [ %522, %518 ]
  %525 = phi i32* [ %517, %511 ], [ %520, %518 ]
  %526 = bitcast i32* %525 to i8*
  %527 = bitcast i32* %508 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %526, i8* align 4 %527, i64 %524, i1 false) #11
  %528 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %529 = bitcast %union.TfLitePtrUnion* %528 to i16**
  %530 = load i16*, i16** %529, align 8
  br label %531

531:                                              ; preds = %501, %523
  %532 = phi i16* [ %530, %523 ], [ null, %501 ]
  call void @_ZN6tflite21reference_integer_ops18BroadcastMul4DSlowIsEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, i16* %465, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %18, i16* %498, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %19, i16* %532)
  %533 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  %534 = load i32, i32* %533, align 8
  %535 = icmp sgt i32 %534, 5
  br i1 %535, label %536, label %542

536:                                              ; preds = %531
  %537 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %538 = load i32*, i32** %537, align 8
  %539 = icmp eq i32* %538, null
  br i1 %539, label %542, label %540

540:                                              ; preds = %536
  %541 = bitcast i32* %538 to i8*
  call void @_ZdaPv(i8* %541) #10
  br label %542

542:                                              ; preds = %531, %536, %540
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %499) #11
  %543 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  %544 = load i32, i32* %543, align 8
  %545 = icmp sgt i32 %544, 5
  br i1 %545, label %546, label %552

546:                                              ; preds = %542
  %547 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %548 = load i32*, i32** %547, align 8
  %549 = icmp eq i32* %548, null
  br i1 %549, label %552, label %550

550:                                              ; preds = %546
  %551 = bitcast i32* %548 to i8*
  call void @_ZdaPv(i8* %551) #10
  br label %552

552:                                              ; preds = %542, %546, %550
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %466) #11
  %553 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %554 = load i32, i32* %553, align 8
  %555 = icmp sgt i32 %554, 5
  br i1 %555, label %556, label %953

556:                                              ; preds = %552
  %557 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %558 = load i32*, i32** %557, align 8
  %559 = icmp eq i32* %558, null
  br i1 %559, label %953, label %560

560:                                              ; preds = %556
  %561 = bitcast i32* %558 to i8*
  call void @_ZdaPv(i8* %561) #10
  br label %953

562:                                              ; preds = %431
  %563 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %563) #11
  br i1 %71, label %564, label %566

564:                                              ; preds = %562
  %565 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %565, align 8, !alias.scope !374
  br label %594

566:                                              ; preds = %562
  %567 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %568 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %567, align 8, !noalias !374
  %569 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %568, i64 0, i32 0
  %570 = load i32, i32* %569, align 4, !noalias !374
  %571 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %568, i64 0, i32 1, i64 0
  %572 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %570, i32* %572, align 8, !alias.scope !374
  %573 = icmp sgt i32 %570, 5
  br i1 %573, label %574, label %581

574:                                              ; preds = %566
  %575 = sext i32 %570 to i64
  %576 = shl nsw i64 %575, 2
  %577 = call i8* @_Znam(i64 %576) #10, !noalias !374
  %578 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %579 = bitcast i32** %578 to i8**
  store i8* %577, i8** %579, align 8, !alias.scope !374
  %580 = bitcast i8* %577 to i32*
  br label %586

581:                                              ; preds = %566
  %582 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %583 = bitcast %union.anon* %582 to i32*
  %584 = sext i32 %570 to i64
  %585 = shl nsw i64 %584, 2
  br label %586

586:                                              ; preds = %581, %574
  %587 = phi i64 [ %576, %574 ], [ %585, %581 ]
  %588 = phi i32* [ %580, %574 ], [ %583, %581 ]
  %589 = bitcast i32* %588 to i8*
  %590 = bitcast i32* %571 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %589, i8* align 4 %590, i64 %587, i1 false) #11
  %591 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %592 = bitcast %union.TfLitePtrUnion* %591 to i16**
  %593 = load i16*, i16** %592, align 8
  br label %594

594:                                              ; preds = %564, %586
  %595 = phi i16* [ %593, %586 ], [ null, %564 ]
  %596 = bitcast %"class.tflite::RuntimeShape"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %596) #11
  br i1 %101, label %597, label %599

597:                                              ; preds = %594
  %598 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 0, i32* %598, align 8, !alias.scope !377
  br label %627

599:                                              ; preds = %594
  %600 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %601 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %600, align 8, !noalias !377
  %602 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %601, i64 0, i32 0
  %603 = load i32, i32* %602, align 4, !noalias !377
  %604 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %601, i64 0, i32 1, i64 0
  %605 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 %603, i32* %605, align 8, !alias.scope !377
  %606 = icmp sgt i32 %603, 5
  br i1 %606, label %607, label %614

607:                                              ; preds = %599
  %608 = sext i32 %603 to i64
  %609 = shl nsw i64 %608, 2
  %610 = call i8* @_Znam(i64 %609) #10, !noalias !377
  %611 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %612 = bitcast i32** %611 to i8**
  store i8* %610, i8** %612, align 8, !alias.scope !377
  %613 = bitcast i8* %610 to i32*
  br label %619

614:                                              ; preds = %599
  %615 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  %616 = bitcast %union.anon* %615 to i32*
  %617 = sext i32 %603 to i64
  %618 = shl nsw i64 %617, 2
  br label %619

619:                                              ; preds = %614, %607
  %620 = phi i64 [ %609, %607 ], [ %618, %614 ]
  %621 = phi i32* [ %613, %607 ], [ %616, %614 ]
  %622 = bitcast i32* %621 to i8*
  %623 = bitcast i32* %604 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %622, i8* align 4 %623, i64 %620, i1 false) #11
  %624 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %625 = bitcast %union.TfLitePtrUnion* %624 to i16**
  %626 = load i16*, i16** %625, align 8
  br label %627

627:                                              ; preds = %597, %619
  %628 = phi i16* [ %626, %619 ], [ null, %597 ]
  %629 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %629) #11
  %630 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %630, label %631, label %633

631:                                              ; preds = %627
  %632 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %632, align 8, !alias.scope !380
  br label %661

633:                                              ; preds = %627
  %634 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %635 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %634, align 8, !noalias !380
  %636 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %635, i64 0, i32 0
  %637 = load i32, i32* %636, align 4, !noalias !380
  %638 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %635, i64 0, i32 1, i64 0
  %639 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %637, i32* %639, align 8, !alias.scope !380
  %640 = icmp sgt i32 %637, 5
  br i1 %640, label %641, label %648

641:                                              ; preds = %633
  %642 = sext i32 %637 to i64
  %643 = shl nsw i64 %642, 2
  %644 = call i8* @_Znam(i64 %643) #10, !noalias !380
  %645 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %646 = bitcast i32** %645 to i8**
  store i8* %644, i8** %646, align 8, !alias.scope !380
  %647 = bitcast i8* %644 to i32*
  br label %653

648:                                              ; preds = %633
  %649 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %650 = bitcast %union.anon* %649 to i32*
  %651 = sext i32 %637 to i64
  %652 = shl nsw i64 %651, 2
  br label %653

653:                                              ; preds = %648, %641
  %654 = phi i64 [ %643, %641 ], [ %652, %648 ]
  %655 = phi i32* [ %647, %641 ], [ %650, %648 ]
  %656 = bitcast i32* %655 to i8*
  %657 = bitcast i32* %638 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %656, i8* align 4 %657, i64 %654, i1 false) #11
  %658 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %659 = bitcast %union.TfLitePtrUnion* %658 to i16**
  %660 = load i16*, i16** %659, align 8
  br label %661

661:                                              ; preds = %631, %653
  %662 = phi i16* [ %660, %653 ], [ null, %631 ]
  call void @_ZN6tflite21reference_integer_ops3MulIsEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %20, i16* %595, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %21, i16* %628, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %22, i16* %662)
  %663 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  %664 = load i32, i32* %663, align 8
  %665 = icmp sgt i32 %664, 5
  br i1 %665, label %666, label %672

666:                                              ; preds = %661
  %667 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %668 = load i32*, i32** %667, align 8
  %669 = icmp eq i32* %668, null
  br i1 %669, label %672, label %670

670:                                              ; preds = %666
  %671 = bitcast i32* %668 to i8*
  call void @_ZdaPv(i8* %671) #10
  br label %672

672:                                              ; preds = %661, %666, %670
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %629) #11
  %673 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  %674 = load i32, i32* %673, align 8
  %675 = icmp sgt i32 %674, 5
  br i1 %675, label %676, label %682

676:                                              ; preds = %672
  %677 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %678 = load i32*, i32** %677, align 8
  %679 = icmp eq i32* %678, null
  br i1 %679, label %682, label %680

680:                                              ; preds = %676
  %681 = bitcast i32* %678 to i8*
  call void @_ZdaPv(i8* %681) #10
  br label %682

682:                                              ; preds = %672, %676, %680
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %596) #11
  %683 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  %684 = load i32, i32* %683, align 8
  %685 = icmp sgt i32 %684, 5
  br i1 %685, label %686, label %953

686:                                              ; preds = %682
  %687 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %688 = load i32*, i32** %687, align 8
  %689 = icmp eq i32* %688, null
  br i1 %689, label %953, label %690

690:                                              ; preds = %686
  %691 = bitcast i32* %688 to i8*
  call void @_ZdaPv(i8* %691) #10
  br label %953

692:                                              ; preds = %150
  br i1 %130, label %693, label %823

693:                                              ; preds = %692
  %694 = bitcast %"class.tflite::RuntimeShape"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %694) #11
  br i1 %71, label %695, label %697

695:                                              ; preds = %693
  %696 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 0, i32* %696, align 8, !alias.scope !383
  br label %725

697:                                              ; preds = %693
  %698 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %699 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %698, align 8, !noalias !383
  %700 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %699, i64 0, i32 0
  %701 = load i32, i32* %700, align 4, !noalias !383
  %702 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %699, i64 0, i32 1, i64 0
  %703 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 %701, i32* %703, align 8, !alias.scope !383
  %704 = icmp sgt i32 %701, 5
  br i1 %704, label %705, label %712

705:                                              ; preds = %697
  %706 = sext i32 %701 to i64
  %707 = shl nsw i64 %706, 2
  %708 = call i8* @_Znam(i64 %707) #10, !noalias !383
  %709 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %710 = bitcast i32** %709 to i8**
  store i8* %708, i8** %710, align 8, !alias.scope !383
  %711 = bitcast i8* %708 to i32*
  br label %717

712:                                              ; preds = %697
  %713 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  %714 = bitcast %union.anon* %713 to i32*
  %715 = sext i32 %701 to i64
  %716 = shl nsw i64 %715, 2
  br label %717

717:                                              ; preds = %712, %705
  %718 = phi i64 [ %707, %705 ], [ %716, %712 ]
  %719 = phi i32* [ %711, %705 ], [ %714, %712 ]
  %720 = bitcast i32* %719 to i8*
  %721 = bitcast i32* %702 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %720, i8* align 4 %721, i64 %718, i1 false) #11
  %722 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %723 = bitcast %union.TfLitePtrUnion* %722 to i8**
  %724 = load i8*, i8** %723, align 8
  br label %725

725:                                              ; preds = %695, %717
  %726 = phi i8* [ %724, %717 ], [ null, %695 ]
  %727 = bitcast %"class.tflite::RuntimeShape"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %727) #11
  br i1 %101, label %728, label %730

728:                                              ; preds = %725
  %729 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 0, i32* %729, align 8, !alias.scope !386
  br label %758

730:                                              ; preds = %725
  %731 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %732 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %731, align 8, !noalias !386
  %733 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %732, i64 0, i32 0
  %734 = load i32, i32* %733, align 4, !noalias !386
  %735 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %732, i64 0, i32 1, i64 0
  %736 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 %734, i32* %736, align 8, !alias.scope !386
  %737 = icmp sgt i32 %734, 5
  br i1 %737, label %738, label %745

738:                                              ; preds = %730
  %739 = sext i32 %734 to i64
  %740 = shl nsw i64 %739, 2
  %741 = call i8* @_Znam(i64 %740) #10, !noalias !386
  %742 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %743 = bitcast i32** %742 to i8**
  store i8* %741, i8** %743, align 8, !alias.scope !386
  %744 = bitcast i8* %741 to i32*
  br label %750

745:                                              ; preds = %730
  %746 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1
  %747 = bitcast %union.anon* %746 to i32*
  %748 = sext i32 %734 to i64
  %749 = shl nsw i64 %748, 2
  br label %750

750:                                              ; preds = %745, %738
  %751 = phi i64 [ %740, %738 ], [ %749, %745 ]
  %752 = phi i32* [ %744, %738 ], [ %747, %745 ]
  %753 = bitcast i32* %752 to i8*
  %754 = bitcast i32* %735 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %753, i8* align 4 %754, i64 %751, i1 false) #11
  %755 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %756 = bitcast %union.TfLitePtrUnion* %755 to i8**
  %757 = load i8*, i8** %756, align 8
  br label %758

758:                                              ; preds = %728, %750
  %759 = phi i8* [ %757, %750 ], [ null, %728 ]
  %760 = bitcast %"class.tflite::RuntimeShape"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %760) #11
  %761 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %761, label %762, label %764

762:                                              ; preds = %758
  %763 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 0, i32* %763, align 8, !alias.scope !389
  br label %792

764:                                              ; preds = %758
  %765 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %766 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %765, align 8, !noalias !389
  %767 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %766, i64 0, i32 0
  %768 = load i32, i32* %767, align 4, !noalias !389
  %769 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %766, i64 0, i32 1, i64 0
  %770 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 %768, i32* %770, align 8, !alias.scope !389
  %771 = icmp sgt i32 %768, 5
  br i1 %771, label %772, label %779

772:                                              ; preds = %764
  %773 = sext i32 %768 to i64
  %774 = shl nsw i64 %773, 2
  %775 = call i8* @_Znam(i64 %774) #10, !noalias !389
  %776 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %777 = bitcast i32** %776 to i8**
  store i8* %775, i8** %777, align 8, !alias.scope !389
  %778 = bitcast i8* %775 to i32*
  br label %784

779:                                              ; preds = %764
  %780 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %781 = bitcast %union.anon* %780 to i32*
  %782 = sext i32 %768 to i64
  %783 = shl nsw i64 %782, 2
  br label %784

784:                                              ; preds = %779, %772
  %785 = phi i64 [ %774, %772 ], [ %783, %779 ]
  %786 = phi i32* [ %778, %772 ], [ %781, %779 ]
  %787 = bitcast i32* %786 to i8*
  %788 = bitcast i32* %769 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %787, i8* align 4 %788, i64 %785, i1 false) #11
  %789 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %790 = bitcast %union.TfLitePtrUnion* %789 to i8**
  %791 = load i8*, i8** %790, align 8
  br label %792

792:                                              ; preds = %762, %784
  %793 = phi i8* [ %791, %784 ], [ null, %762 ]
  call void @_ZN6tflite13optimized_ops20BroadcastMulDispatchIhEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %23, i8* %726, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %24, i8* %759, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %25, i8* %793)
  %794 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  %795 = load i32, i32* %794, align 8
  %796 = icmp sgt i32 %795, 5
  br i1 %796, label %797, label %803

797:                                              ; preds = %792
  %798 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %799 = load i32*, i32** %798, align 8
  %800 = icmp eq i32* %799, null
  br i1 %800, label %803, label %801

801:                                              ; preds = %797
  %802 = bitcast i32* %799 to i8*
  call void @_ZdaPv(i8* %802) #10
  br label %803

803:                                              ; preds = %792, %797, %801
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %760) #11
  %804 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  %805 = load i32, i32* %804, align 8
  %806 = icmp sgt i32 %805, 5
  br i1 %806, label %807, label %813

807:                                              ; preds = %803
  %808 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %809 = load i32*, i32** %808, align 8
  %810 = icmp eq i32* %809, null
  br i1 %810, label %813, label %811

811:                                              ; preds = %807
  %812 = bitcast i32* %809 to i8*
  call void @_ZdaPv(i8* %812) #10
  br label %813

813:                                              ; preds = %803, %807, %811
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %727) #11
  %814 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  %815 = load i32, i32* %814, align 8
  %816 = icmp sgt i32 %815, 5
  br i1 %816, label %817, label %953

817:                                              ; preds = %813
  %818 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %819 = load i32*, i32** %818, align 8
  %820 = icmp eq i32* %819, null
  br i1 %820, label %953, label %821

821:                                              ; preds = %817
  %822 = bitcast i32* %819 to i8*
  call void @_ZdaPv(i8* %822) #10
  br label %953

823:                                              ; preds = %692
  %824 = bitcast %"class.tflite::RuntimeShape"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %824) #11
  br i1 %71, label %825, label %827

825:                                              ; preds = %823
  %826 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 0, i32* %826, align 8, !alias.scope !392
  br label %855

827:                                              ; preds = %823
  %828 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %829 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %828, align 8, !noalias !392
  %830 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %829, i64 0, i32 0
  %831 = load i32, i32* %830, align 4, !noalias !392
  %832 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %829, i64 0, i32 1, i64 0
  %833 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 %831, i32* %833, align 8, !alias.scope !392
  %834 = icmp sgt i32 %831, 5
  br i1 %834, label %835, label %842

835:                                              ; preds = %827
  %836 = sext i32 %831 to i64
  %837 = shl nsw i64 %836, 2
  %838 = call i8* @_Znam(i64 %837) #10, !noalias !392
  %839 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %840 = bitcast i32** %839 to i8**
  store i8* %838, i8** %840, align 8, !alias.scope !392
  %841 = bitcast i8* %838 to i32*
  br label %847

842:                                              ; preds = %827
  %843 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1
  %844 = bitcast %union.anon* %843 to i32*
  %845 = sext i32 %831 to i64
  %846 = shl nsw i64 %845, 2
  br label %847

847:                                              ; preds = %842, %835
  %848 = phi i64 [ %837, %835 ], [ %846, %842 ]
  %849 = phi i32* [ %841, %835 ], [ %844, %842 ]
  %850 = bitcast i32* %849 to i8*
  %851 = bitcast i32* %832 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %850, i8* align 4 %851, i64 %848, i1 false) #11
  %852 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %853 = bitcast %union.TfLitePtrUnion* %852 to i8**
  %854 = load i8*, i8** %853, align 8
  br label %855

855:                                              ; preds = %825, %847
  %856 = phi i8* [ %854, %847 ], [ null, %825 ]
  %857 = bitcast %"class.tflite::RuntimeShape"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %857) #11
  br i1 %101, label %858, label %860

858:                                              ; preds = %855
  %859 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 0, i32* %859, align 8, !alias.scope !395
  br label %888

860:                                              ; preds = %855
  %861 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %862 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %861, align 8, !noalias !395
  %863 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %862, i64 0, i32 0
  %864 = load i32, i32* %863, align 4, !noalias !395
  %865 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %862, i64 0, i32 1, i64 0
  %866 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 %864, i32* %866, align 8, !alias.scope !395
  %867 = icmp sgt i32 %864, 5
  br i1 %867, label %868, label %875

868:                                              ; preds = %860
  %869 = sext i32 %864 to i64
  %870 = shl nsw i64 %869, 2
  %871 = call i8* @_Znam(i64 %870) #10, !noalias !395
  %872 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %873 = bitcast i32** %872 to i8**
  store i8* %871, i8** %873, align 8, !alias.scope !395
  %874 = bitcast i8* %871 to i32*
  br label %880

875:                                              ; preds = %860
  %876 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1
  %877 = bitcast %union.anon* %876 to i32*
  %878 = sext i32 %864 to i64
  %879 = shl nsw i64 %878, 2
  br label %880

880:                                              ; preds = %875, %868
  %881 = phi i64 [ %870, %868 ], [ %879, %875 ]
  %882 = phi i32* [ %874, %868 ], [ %877, %875 ]
  %883 = bitcast i32* %882 to i8*
  %884 = bitcast i32* %865 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %883, i8* align 4 %884, i64 %881, i1 false) #11
  %885 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %886 = bitcast %union.TfLitePtrUnion* %885 to i8**
  %887 = load i8*, i8** %886, align 8
  br label %888

888:                                              ; preds = %858, %880
  %889 = phi i8* [ %887, %880 ], [ null, %858 ]
  %890 = bitcast %"class.tflite::RuntimeShape"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %890) #11
  %891 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %891, label %892, label %894

892:                                              ; preds = %888
  %893 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 0, i32* %893, align 8, !alias.scope !398
  br label %922

894:                                              ; preds = %888
  %895 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %896 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %895, align 8, !noalias !398
  %897 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %896, i64 0, i32 0
  %898 = load i32, i32* %897, align 4, !noalias !398
  %899 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %896, i64 0, i32 1, i64 0
  %900 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 %898, i32* %900, align 8, !alias.scope !398
  %901 = icmp sgt i32 %898, 5
  br i1 %901, label %902, label %909

902:                                              ; preds = %894
  %903 = sext i32 %898 to i64
  %904 = shl nsw i64 %903, 2
  %905 = call i8* @_Znam(i64 %904) #10, !noalias !398
  %906 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %907 = bitcast i32** %906 to i8**
  store i8* %905, i8** %907, align 8, !alias.scope !398
  %908 = bitcast i8* %905 to i32*
  br label %914

909:                                              ; preds = %894
  %910 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1
  %911 = bitcast %union.anon* %910 to i32*
  %912 = sext i32 %898 to i64
  %913 = shl nsw i64 %912, 2
  br label %914

914:                                              ; preds = %909, %902
  %915 = phi i64 [ %904, %902 ], [ %913, %909 ]
  %916 = phi i32* [ %908, %902 ], [ %911, %909 ]
  %917 = bitcast i32* %916 to i8*
  %918 = bitcast i32* %899 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %917, i8* align 4 %918, i64 %915, i1 false) #11
  %919 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %920 = bitcast %union.TfLitePtrUnion* %919 to i8**
  %921 = load i8*, i8** %920, align 8
  br label %922

922:                                              ; preds = %892, %914
  %923 = phi i8* [ %921, %914 ], [ null, %892 ]
  call void @_ZN6tflite13optimized_ops3MulERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS6_S8_S6_Ph(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %26, i8* %856, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %27, i8* %889, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %28, i8* %923)
  %924 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  %925 = load i32, i32* %924, align 8
  %926 = icmp sgt i32 %925, 5
  br i1 %926, label %927, label %933

927:                                              ; preds = %922
  %928 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %929 = load i32*, i32** %928, align 8
  %930 = icmp eq i32* %929, null
  br i1 %930, label %933, label %931

931:                                              ; preds = %927
  %932 = bitcast i32* %929 to i8*
  call void @_ZdaPv(i8* %932) #10
  br label %933

933:                                              ; preds = %922, %927, %931
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %890) #11
  %934 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  %935 = load i32, i32* %934, align 8
  %936 = icmp sgt i32 %935, 5
  br i1 %936, label %937, label %943

937:                                              ; preds = %933
  %938 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %939 = load i32*, i32** %938, align 8
  %940 = icmp eq i32* %939, null
  br i1 %940, label %943, label %941

941:                                              ; preds = %937
  %942 = bitcast i32* %939 to i8*
  call void @_ZdaPv(i8* %942) #10
  br label %943

943:                                              ; preds = %933, %937, %941
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %857) #11
  %944 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  %945 = load i32, i32* %944, align 8
  %946 = icmp sgt i32 %945, 5
  br i1 %946, label %947, label %953

947:                                              ; preds = %943
  %948 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %949 = load i32*, i32** %948, align 8
  %950 = icmp eq i32* %949, null
  br i1 %950, label %953, label %951

951:                                              ; preds = %947
  %952 = bitcast i32* %949 to i8*
  call void @_ZdaPv(i8* %952) #10
  br label %953

953:                                              ; preds = %951, %947, %943, %821, %817, %813, %690, %686, %682, %560, %556, %552, %411, %407, %403, %281, %277, %273
  %954 = phi i8* [ %154, %273 ], [ %154, %277 ], [ %154, %281 ], [ %284, %403 ], [ %284, %407 ], [ %284, %411 ], [ %433, %552 ], [ %433, %556 ], [ %433, %560 ], [ %563, %682 ], [ %563, %686 ], [ %563, %690 ], [ %694, %813 ], [ %694, %817 ], [ %694, %821 ], [ %824, %943 ], [ %824, %947 ], [ %824, %951 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %954) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %46) #11
  br label %2129

955:                                              ; preds = %40, %7
  %956 = icmp eq i32 %36, 7
  %957 = icmp eq i32 %38, 7
  %958 = and i1 %956, %957
  br i1 %958, label %959, label %2126

959:                                              ; preds = %955
  %960 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 0
  %961 = load i32, i32* %960, align 8
  switch i32 %961, label %2126 [
    i32 9, label %962
    i32 3, label %1544
  ]

962:                                              ; preds = %959
  %963 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 0
  %964 = load i32, i32* %963, align 4
  %965 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 1
  %966 = load i32, i32* %965, align 4
  %967 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 3, i32 1
  %968 = load i32, i32* %967, align 4
  %969 = bitcast %"class.tflite::RuntimeShape"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %969) #11
  %970 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %970, label %971, label %973

971:                                              ; preds = %962
  %972 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 0, i32* %972, align 8, !alias.scope !401
  br label %1002

973:                                              ; preds = %962
  %974 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %975 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %974, align 8, !noalias !401
  %976 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %975, i64 0, i32 0
  %977 = load i32, i32* %976, align 4, !noalias !401
  %978 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %975, i64 0, i32 1, i64 0
  %979 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 %977, i32* %979, align 8, !alias.scope !401
  %980 = icmp sgt i32 %977, 5
  br i1 %980, label %981, label %988

981:                                              ; preds = %973
  %982 = sext i32 %977 to i64
  %983 = shl nsw i64 %982, 2
  %984 = tail call i8* @_Znam(i64 %983) #10, !noalias !401
  %985 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %986 = bitcast i32** %985 to i8**
  store i8* %984, i8** %986, align 8, !alias.scope !401
  %987 = bitcast i8* %984 to i32*
  br label %993

988:                                              ; preds = %973
  %989 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1
  %990 = bitcast %union.anon* %989 to i32*
  %991 = sext i32 %977 to i64
  %992 = shl nsw i64 %991, 2
  br label %993

993:                                              ; preds = %988, %981
  %994 = phi i64 [ %983, %981 ], [ %992, %988 ]
  %995 = phi i32* [ %987, %981 ], [ %990, %988 ]
  %996 = bitcast i32* %995 to i8*
  %997 = bitcast i32* %978 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %996, i8* align 4 %997, i64 %994, i1 false) #11
  %998 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %999 = bitcast %union.TfLitePtrUnion* %998 to i16**
  %1000 = load i16*, i16** %999, align 8
  %1001 = bitcast i16* %1000 to i8*
  br label %1002

1002:                                             ; preds = %971, %993
  %1003 = phi i32 [ %977, %993 ], [ 0, %971 ]
  %1004 = phi i8* [ %1001, %993 ], [ null, %971 ]
  %1005 = phi i16* [ %1000, %993 ], [ null, %971 ]
  %1006 = bitcast %"class.tflite::RuntimeShape"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1006) #11
  %1007 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %1007, label %1008, label %1010

1008:                                             ; preds = %1002
  %1009 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  store i32 0, i32* %1009, align 8, !alias.scope !404
  br label %1039

1010:                                             ; preds = %1002
  %1011 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %1012 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1011, align 8, !noalias !404
  %1013 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1012, i64 0, i32 0
  %1014 = load i32, i32* %1013, align 4, !noalias !404
  %1015 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1012, i64 0, i32 1, i64 0
  %1016 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  store i32 %1014, i32* %1016, align 8, !alias.scope !404
  %1017 = icmp sgt i32 %1014, 5
  br i1 %1017, label %1018, label %1025

1018:                                             ; preds = %1010
  %1019 = sext i32 %1014 to i64
  %1020 = shl nsw i64 %1019, 2
  %1021 = tail call i8* @_Znam(i64 %1020) #10, !noalias !404
  %1022 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1, i32 0
  %1023 = bitcast i32** %1022 to i8**
  store i8* %1021, i8** %1023, align 8, !alias.scope !404
  %1024 = bitcast i8* %1021 to i32*
  br label %1030

1025:                                             ; preds = %1010
  %1026 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1
  %1027 = bitcast %union.anon* %1026 to i32*
  %1028 = sext i32 %1014 to i64
  %1029 = shl nsw i64 %1028, 2
  br label %1030

1030:                                             ; preds = %1025, %1018
  %1031 = phi i64 [ %1020, %1018 ], [ %1029, %1025 ]
  %1032 = phi i32* [ %1024, %1018 ], [ %1027, %1025 ]
  %1033 = bitcast i32* %1032 to i8*
  %1034 = bitcast i32* %1015 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1033, i8* align 4 %1034, i64 %1031, i1 false) #11
  %1035 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %1036 = bitcast %union.TfLitePtrUnion* %1035 to i16**
  %1037 = load i16*, i16** %1036, align 8
  %1038 = bitcast i16* %1037 to i8*
  br label %1039

1039:                                             ; preds = %1008, %1030
  %1040 = phi i32 [ %1014, %1030 ], [ 0, %1008 ]
  %1041 = phi i8* [ %1038, %1030 ], [ null, %1008 ]
  %1042 = phi i16* [ %1037, %1030 ], [ null, %1008 ]
  %1043 = bitcast %"class.tflite::RuntimeShape"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1043) #11
  %1044 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %1044, label %1045, label %1047

1045:                                             ; preds = %1039
  %1046 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 0, i32* %1046, align 8, !alias.scope !407
  br label %1075

1047:                                             ; preds = %1039
  %1048 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %1049 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1048, align 8, !noalias !407
  %1050 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1049, i64 0, i32 0
  %1051 = load i32, i32* %1050, align 4, !noalias !407
  %1052 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1049, i64 0, i32 1, i64 0
  %1053 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 %1051, i32* %1053, align 8, !alias.scope !407
  %1054 = icmp sgt i32 %1051, 5
  br i1 %1054, label %1055, label %1062

1055:                                             ; preds = %1047
  %1056 = sext i32 %1051 to i64
  %1057 = shl nsw i64 %1056, 2
  %1058 = tail call i8* @_Znam(i64 %1057) #10, !noalias !407
  %1059 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %1060 = bitcast i32** %1059 to i8**
  store i8* %1058, i8** %1060, align 8, !alias.scope !407
  %1061 = bitcast i8* %1058 to i32*
  br label %1067

1062:                                             ; preds = %1047
  %1063 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1
  %1064 = bitcast %union.anon* %1063 to i32*
  %1065 = sext i32 %1051 to i64
  %1066 = shl nsw i64 %1065, 2
  br label %1067

1067:                                             ; preds = %1062, %1055
  %1068 = phi i64 [ %1057, %1055 ], [ %1066, %1062 ]
  %1069 = phi i32* [ %1061, %1055 ], [ %1064, %1062 ]
  %1070 = bitcast i32* %1069 to i8*
  %1071 = bitcast i32* %1052 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1070, i8* align 4 %1071, i64 %1068, i1 false) #11
  %1072 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %1073 = bitcast %union.TfLitePtrUnion* %1072 to i8**
  %1074 = load i8*, i8** %1073, align 8
  br label %1075

1075:                                             ; preds = %1045, %1067
  %1076 = phi i32 [ %1051, %1067 ], [ 0, %1045 ]
  %1077 = phi i8* [ %1074, %1067 ], [ null, %1045 ]
  %1078 = icmp sgt i32 %1003, 5
  %1079 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1
  br i1 %1078, label %1080, label %1083

1080:                                             ; preds = %1075
  %1081 = getelementptr inbounds %union.anon, %union.anon* %1079, i64 0, i32 0
  %1082 = load i32*, i32** %1081, align 8
  br label %1086

1083:                                             ; preds = %1075
  %1084 = bitcast %union.anon* %1079 to i32*
  %1085 = icmp sgt i32 %1003, 0
  br i1 %1085, label %1086, label %1186

1086:                                             ; preds = %1083, %1080
  %1087 = phi i32* [ %1082, %1080 ], [ %1084, %1083 ]
  %1088 = zext i32 %1003 to i64
  %1089 = icmp ult i32 %1003, 8
  br i1 %1089, label %1175, label %1090

1090:                                             ; preds = %1086
  %1091 = and i64 %1088, 4294967288
  %1092 = add nsw i64 %1091, -8
  %1093 = lshr exact i64 %1092, 3
  %1094 = add nuw nsw i64 %1093, 1
  %1095 = and i64 %1094, 3
  %1096 = icmp ult i64 %1092, 24
  br i1 %1096, label %1142, label %1097

1097:                                             ; preds = %1090
  %1098 = sub nsw i64 %1094, %1095
  br label %1099

1099:                                             ; preds = %1099, %1097
  %1100 = phi i64 [ 0, %1097 ], [ %1139, %1099 ]
  %1101 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1097 ], [ %1137, %1099 ]
  %1102 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1097 ], [ %1138, %1099 ]
  %1103 = phi i64 [ %1098, %1097 ], [ %1140, %1099 ]
  %1104 = getelementptr inbounds i32, i32* %1087, i64 %1100
  %1105 = bitcast i32* %1104 to <4 x i32>*
  %1106 = load <4 x i32>, <4 x i32>* %1105, align 4
  %1107 = getelementptr inbounds i32, i32* %1104, i64 4
  %1108 = bitcast i32* %1107 to <4 x i32>*
  %1109 = load <4 x i32>, <4 x i32>* %1108, align 4
  %1110 = mul nsw <4 x i32> %1106, %1101
  %1111 = mul nsw <4 x i32> %1109, %1102
  %1112 = or i64 %1100, 8
  %1113 = getelementptr inbounds i32, i32* %1087, i64 %1112
  %1114 = bitcast i32* %1113 to <4 x i32>*
  %1115 = load <4 x i32>, <4 x i32>* %1114, align 4
  %1116 = getelementptr inbounds i32, i32* %1113, i64 4
  %1117 = bitcast i32* %1116 to <4 x i32>*
  %1118 = load <4 x i32>, <4 x i32>* %1117, align 4
  %1119 = mul nsw <4 x i32> %1115, %1110
  %1120 = mul nsw <4 x i32> %1118, %1111
  %1121 = or i64 %1100, 16
  %1122 = getelementptr inbounds i32, i32* %1087, i64 %1121
  %1123 = bitcast i32* %1122 to <4 x i32>*
  %1124 = load <4 x i32>, <4 x i32>* %1123, align 4
  %1125 = getelementptr inbounds i32, i32* %1122, i64 4
  %1126 = bitcast i32* %1125 to <4 x i32>*
  %1127 = load <4 x i32>, <4 x i32>* %1126, align 4
  %1128 = mul nsw <4 x i32> %1124, %1119
  %1129 = mul nsw <4 x i32> %1127, %1120
  %1130 = or i64 %1100, 24
  %1131 = getelementptr inbounds i32, i32* %1087, i64 %1130
  %1132 = bitcast i32* %1131 to <4 x i32>*
  %1133 = load <4 x i32>, <4 x i32>* %1132, align 4
  %1134 = getelementptr inbounds i32, i32* %1131, i64 4
  %1135 = bitcast i32* %1134 to <4 x i32>*
  %1136 = load <4 x i32>, <4 x i32>* %1135, align 4
  %1137 = mul nsw <4 x i32> %1133, %1128
  %1138 = mul nsw <4 x i32> %1136, %1129
  %1139 = add i64 %1100, 32
  %1140 = add i64 %1103, -4
  %1141 = icmp eq i64 %1140, 0
  br i1 %1141, label %1142, label %1099, !llvm.loop !410

1142:                                             ; preds = %1099, %1090
  %1143 = phi <4 x i32> [ undef, %1090 ], [ %1137, %1099 ]
  %1144 = phi <4 x i32> [ undef, %1090 ], [ %1138, %1099 ]
  %1145 = phi i64 [ 0, %1090 ], [ %1139, %1099 ]
  %1146 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1090 ], [ %1137, %1099 ]
  %1147 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1090 ], [ %1138, %1099 ]
  %1148 = icmp eq i64 %1095, 0
  br i1 %1148, label %1165, label %1149

1149:                                             ; preds = %1142, %1149
  %1150 = phi i64 [ %1162, %1149 ], [ %1145, %1142 ]
  %1151 = phi <4 x i32> [ %1160, %1149 ], [ %1146, %1142 ]
  %1152 = phi <4 x i32> [ %1161, %1149 ], [ %1147, %1142 ]
  %1153 = phi i64 [ %1163, %1149 ], [ %1095, %1142 ]
  %1154 = getelementptr inbounds i32, i32* %1087, i64 %1150
  %1155 = bitcast i32* %1154 to <4 x i32>*
  %1156 = load <4 x i32>, <4 x i32>* %1155, align 4
  %1157 = getelementptr inbounds i32, i32* %1154, i64 4
  %1158 = bitcast i32* %1157 to <4 x i32>*
  %1159 = load <4 x i32>, <4 x i32>* %1158, align 4
  %1160 = mul nsw <4 x i32> %1156, %1151
  %1161 = mul nsw <4 x i32> %1159, %1152
  %1162 = add i64 %1150, 8
  %1163 = add i64 %1153, -1
  %1164 = icmp eq i64 %1163, 0
  br i1 %1164, label %1165, label %1149, !llvm.loop !411

1165:                                             ; preds = %1149, %1142
  %1166 = phi <4 x i32> [ %1143, %1142 ], [ %1160, %1149 ]
  %1167 = phi <4 x i32> [ %1144, %1142 ], [ %1161, %1149 ]
  %1168 = mul <4 x i32> %1167, %1166
  %1169 = shufflevector <4 x i32> %1168, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1170 = mul <4 x i32> %1168, %1169
  %1171 = shufflevector <4 x i32> %1170, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1172 = mul <4 x i32> %1170, %1171
  %1173 = extractelement <4 x i32> %1172, i32 0
  %1174 = icmp eq i64 %1091, %1088
  br i1 %1174, label %1186, label %1175

1175:                                             ; preds = %1165, %1086
  %1176 = phi i64 [ 0, %1086 ], [ %1091, %1165 ]
  %1177 = phi i32 [ 1, %1086 ], [ %1173, %1165 ]
  br label %1178

1178:                                             ; preds = %1175, %1178
  %1179 = phi i64 [ %1184, %1178 ], [ %1176, %1175 ]
  %1180 = phi i32 [ %1183, %1178 ], [ %1177, %1175 ]
  %1181 = getelementptr inbounds i32, i32* %1087, i64 %1179
  %1182 = load i32, i32* %1181, align 4
  %1183 = mul nsw i32 %1182, %1180
  %1184 = add nuw nsw i64 %1179, 1
  %1185 = icmp eq i64 %1184, %1088
  br i1 %1185, label %1186, label %1178, !llvm.loop !412

1186:                                             ; preds = %1178, %1165, %1083
  %1187 = phi i32 [ 1, %1083 ], [ %1173, %1165 ], [ %1183, %1178 ]
  %1188 = icmp sgt i32 %1040, 5
  %1189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1
  br i1 %1188, label %1190, label %1193

1190:                                             ; preds = %1186
  %1191 = getelementptr inbounds %union.anon, %union.anon* %1189, i64 0, i32 0
  %1192 = load i32*, i32** %1191, align 8
  br label %1196

1193:                                             ; preds = %1186
  %1194 = bitcast %union.anon* %1189 to i32*
  %1195 = icmp sgt i32 %1040, 0
  br i1 %1195, label %1196, label %1296

1196:                                             ; preds = %1193, %1190
  %1197 = phi i32* [ %1192, %1190 ], [ %1194, %1193 ]
  %1198 = zext i32 %1040 to i64
  %1199 = icmp ult i32 %1040, 8
  br i1 %1199, label %1285, label %1200

1200:                                             ; preds = %1196
  %1201 = and i64 %1198, 4294967288
  %1202 = add nsw i64 %1201, -8
  %1203 = lshr exact i64 %1202, 3
  %1204 = add nuw nsw i64 %1203, 1
  %1205 = and i64 %1204, 3
  %1206 = icmp ult i64 %1202, 24
  br i1 %1206, label %1252, label %1207

1207:                                             ; preds = %1200
  %1208 = sub nsw i64 %1204, %1205
  br label %1209

1209:                                             ; preds = %1209, %1207
  %1210 = phi i64 [ 0, %1207 ], [ %1249, %1209 ]
  %1211 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1207 ], [ %1247, %1209 ]
  %1212 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1207 ], [ %1248, %1209 ]
  %1213 = phi i64 [ %1208, %1207 ], [ %1250, %1209 ]
  %1214 = getelementptr inbounds i32, i32* %1197, i64 %1210
  %1215 = bitcast i32* %1214 to <4 x i32>*
  %1216 = load <4 x i32>, <4 x i32>* %1215, align 4
  %1217 = getelementptr inbounds i32, i32* %1214, i64 4
  %1218 = bitcast i32* %1217 to <4 x i32>*
  %1219 = load <4 x i32>, <4 x i32>* %1218, align 4
  %1220 = mul nsw <4 x i32> %1216, %1211
  %1221 = mul nsw <4 x i32> %1219, %1212
  %1222 = or i64 %1210, 8
  %1223 = getelementptr inbounds i32, i32* %1197, i64 %1222
  %1224 = bitcast i32* %1223 to <4 x i32>*
  %1225 = load <4 x i32>, <4 x i32>* %1224, align 4
  %1226 = getelementptr inbounds i32, i32* %1223, i64 4
  %1227 = bitcast i32* %1226 to <4 x i32>*
  %1228 = load <4 x i32>, <4 x i32>* %1227, align 4
  %1229 = mul nsw <4 x i32> %1225, %1220
  %1230 = mul nsw <4 x i32> %1228, %1221
  %1231 = or i64 %1210, 16
  %1232 = getelementptr inbounds i32, i32* %1197, i64 %1231
  %1233 = bitcast i32* %1232 to <4 x i32>*
  %1234 = load <4 x i32>, <4 x i32>* %1233, align 4
  %1235 = getelementptr inbounds i32, i32* %1232, i64 4
  %1236 = bitcast i32* %1235 to <4 x i32>*
  %1237 = load <4 x i32>, <4 x i32>* %1236, align 4
  %1238 = mul nsw <4 x i32> %1234, %1229
  %1239 = mul nsw <4 x i32> %1237, %1230
  %1240 = or i64 %1210, 24
  %1241 = getelementptr inbounds i32, i32* %1197, i64 %1240
  %1242 = bitcast i32* %1241 to <4 x i32>*
  %1243 = load <4 x i32>, <4 x i32>* %1242, align 4
  %1244 = getelementptr inbounds i32, i32* %1241, i64 4
  %1245 = bitcast i32* %1244 to <4 x i32>*
  %1246 = load <4 x i32>, <4 x i32>* %1245, align 4
  %1247 = mul nsw <4 x i32> %1243, %1238
  %1248 = mul nsw <4 x i32> %1246, %1239
  %1249 = add i64 %1210, 32
  %1250 = add i64 %1213, -4
  %1251 = icmp eq i64 %1250, 0
  br i1 %1251, label %1252, label %1209, !llvm.loop !413

1252:                                             ; preds = %1209, %1200
  %1253 = phi <4 x i32> [ undef, %1200 ], [ %1247, %1209 ]
  %1254 = phi <4 x i32> [ undef, %1200 ], [ %1248, %1209 ]
  %1255 = phi i64 [ 0, %1200 ], [ %1249, %1209 ]
  %1256 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1200 ], [ %1247, %1209 ]
  %1257 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1200 ], [ %1248, %1209 ]
  %1258 = icmp eq i64 %1205, 0
  br i1 %1258, label %1275, label %1259

1259:                                             ; preds = %1252, %1259
  %1260 = phi i64 [ %1272, %1259 ], [ %1255, %1252 ]
  %1261 = phi <4 x i32> [ %1270, %1259 ], [ %1256, %1252 ]
  %1262 = phi <4 x i32> [ %1271, %1259 ], [ %1257, %1252 ]
  %1263 = phi i64 [ %1273, %1259 ], [ %1205, %1252 ]
  %1264 = getelementptr inbounds i32, i32* %1197, i64 %1260
  %1265 = bitcast i32* %1264 to <4 x i32>*
  %1266 = load <4 x i32>, <4 x i32>* %1265, align 4
  %1267 = getelementptr inbounds i32, i32* %1264, i64 4
  %1268 = bitcast i32* %1267 to <4 x i32>*
  %1269 = load <4 x i32>, <4 x i32>* %1268, align 4
  %1270 = mul nsw <4 x i32> %1266, %1261
  %1271 = mul nsw <4 x i32> %1269, %1262
  %1272 = add i64 %1260, 8
  %1273 = add i64 %1263, -1
  %1274 = icmp eq i64 %1273, 0
  br i1 %1274, label %1275, label %1259, !llvm.loop !414

1275:                                             ; preds = %1259, %1252
  %1276 = phi <4 x i32> [ %1253, %1252 ], [ %1270, %1259 ]
  %1277 = phi <4 x i32> [ %1254, %1252 ], [ %1271, %1259 ]
  %1278 = mul <4 x i32> %1277, %1276
  %1279 = shufflevector <4 x i32> %1278, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1280 = mul <4 x i32> %1278, %1279
  %1281 = shufflevector <4 x i32> %1280, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1282 = mul <4 x i32> %1280, %1281
  %1283 = extractelement <4 x i32> %1282, i32 0
  %1284 = icmp eq i64 %1201, %1198
  br i1 %1284, label %1296, label %1285

1285:                                             ; preds = %1275, %1196
  %1286 = phi i64 [ 0, %1196 ], [ %1201, %1275 ]
  %1287 = phi i32 [ 1, %1196 ], [ %1283, %1275 ]
  br label %1288

1288:                                             ; preds = %1285, %1288
  %1289 = phi i64 [ %1294, %1288 ], [ %1286, %1285 ]
  %1290 = phi i32 [ %1293, %1288 ], [ %1287, %1285 ]
  %1291 = getelementptr inbounds i32, i32* %1197, i64 %1289
  %1292 = load i32, i32* %1291, align 4
  %1293 = mul nsw i32 %1292, %1290
  %1294 = add nuw nsw i64 %1289, 1
  %1295 = icmp eq i64 %1294, %1198
  br i1 %1295, label %1296, label %1288, !llvm.loop !415

1296:                                             ; preds = %1288, %1275, %1193
  %1297 = phi i32 [ 1, %1193 ], [ %1283, %1275 ], [ %1293, %1288 ]
  %1298 = icmp sgt i32 %1076, 5
  %1299 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1
  br i1 %1298, label %1300, label %1303

1300:                                             ; preds = %1296
  %1301 = getelementptr inbounds %union.anon, %union.anon* %1299, i64 0, i32 0
  %1302 = load i32*, i32** %1301, align 8
  br label %1306

1303:                                             ; preds = %1296
  %1304 = bitcast %union.anon* %1299 to i32*
  %1305 = icmp sgt i32 %1076, 0
  br i1 %1305, label %1306, label %1406

1306:                                             ; preds = %1303, %1300
  %1307 = phi i32* [ %1302, %1300 ], [ %1304, %1303 ]
  %1308 = zext i32 %1076 to i64
  %1309 = icmp ult i32 %1076, 8
  br i1 %1309, label %1395, label %1310

1310:                                             ; preds = %1306
  %1311 = and i64 %1308, 4294967288
  %1312 = add nsw i64 %1311, -8
  %1313 = lshr exact i64 %1312, 3
  %1314 = add nuw nsw i64 %1313, 1
  %1315 = and i64 %1314, 3
  %1316 = icmp ult i64 %1312, 24
  br i1 %1316, label %1362, label %1317

1317:                                             ; preds = %1310
  %1318 = sub nsw i64 %1314, %1315
  br label %1319

1319:                                             ; preds = %1319, %1317
  %1320 = phi i64 [ 0, %1317 ], [ %1359, %1319 ]
  %1321 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1317 ], [ %1357, %1319 ]
  %1322 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1317 ], [ %1358, %1319 ]
  %1323 = phi i64 [ %1318, %1317 ], [ %1360, %1319 ]
  %1324 = getelementptr inbounds i32, i32* %1307, i64 %1320
  %1325 = bitcast i32* %1324 to <4 x i32>*
  %1326 = load <4 x i32>, <4 x i32>* %1325, align 4
  %1327 = getelementptr inbounds i32, i32* %1324, i64 4
  %1328 = bitcast i32* %1327 to <4 x i32>*
  %1329 = load <4 x i32>, <4 x i32>* %1328, align 4
  %1330 = mul nsw <4 x i32> %1326, %1321
  %1331 = mul nsw <4 x i32> %1329, %1322
  %1332 = or i64 %1320, 8
  %1333 = getelementptr inbounds i32, i32* %1307, i64 %1332
  %1334 = bitcast i32* %1333 to <4 x i32>*
  %1335 = load <4 x i32>, <4 x i32>* %1334, align 4
  %1336 = getelementptr inbounds i32, i32* %1333, i64 4
  %1337 = bitcast i32* %1336 to <4 x i32>*
  %1338 = load <4 x i32>, <4 x i32>* %1337, align 4
  %1339 = mul nsw <4 x i32> %1335, %1330
  %1340 = mul nsw <4 x i32> %1338, %1331
  %1341 = or i64 %1320, 16
  %1342 = getelementptr inbounds i32, i32* %1307, i64 %1341
  %1343 = bitcast i32* %1342 to <4 x i32>*
  %1344 = load <4 x i32>, <4 x i32>* %1343, align 4
  %1345 = getelementptr inbounds i32, i32* %1342, i64 4
  %1346 = bitcast i32* %1345 to <4 x i32>*
  %1347 = load <4 x i32>, <4 x i32>* %1346, align 4
  %1348 = mul nsw <4 x i32> %1344, %1339
  %1349 = mul nsw <4 x i32> %1347, %1340
  %1350 = or i64 %1320, 24
  %1351 = getelementptr inbounds i32, i32* %1307, i64 %1350
  %1352 = bitcast i32* %1351 to <4 x i32>*
  %1353 = load <4 x i32>, <4 x i32>* %1352, align 4
  %1354 = getelementptr inbounds i32, i32* %1351, i64 4
  %1355 = bitcast i32* %1354 to <4 x i32>*
  %1356 = load <4 x i32>, <4 x i32>* %1355, align 4
  %1357 = mul nsw <4 x i32> %1353, %1348
  %1358 = mul nsw <4 x i32> %1356, %1349
  %1359 = add i64 %1320, 32
  %1360 = add i64 %1323, -4
  %1361 = icmp eq i64 %1360, 0
  br i1 %1361, label %1362, label %1319, !llvm.loop !416

1362:                                             ; preds = %1319, %1310
  %1363 = phi <4 x i32> [ undef, %1310 ], [ %1357, %1319 ]
  %1364 = phi <4 x i32> [ undef, %1310 ], [ %1358, %1319 ]
  %1365 = phi i64 [ 0, %1310 ], [ %1359, %1319 ]
  %1366 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1310 ], [ %1357, %1319 ]
  %1367 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1310 ], [ %1358, %1319 ]
  %1368 = icmp eq i64 %1315, 0
  br i1 %1368, label %1385, label %1369

1369:                                             ; preds = %1362, %1369
  %1370 = phi i64 [ %1382, %1369 ], [ %1365, %1362 ]
  %1371 = phi <4 x i32> [ %1380, %1369 ], [ %1366, %1362 ]
  %1372 = phi <4 x i32> [ %1381, %1369 ], [ %1367, %1362 ]
  %1373 = phi i64 [ %1383, %1369 ], [ %1315, %1362 ]
  %1374 = getelementptr inbounds i32, i32* %1307, i64 %1370
  %1375 = bitcast i32* %1374 to <4 x i32>*
  %1376 = load <4 x i32>, <4 x i32>* %1375, align 4
  %1377 = getelementptr inbounds i32, i32* %1374, i64 4
  %1378 = bitcast i32* %1377 to <4 x i32>*
  %1379 = load <4 x i32>, <4 x i32>* %1378, align 4
  %1380 = mul nsw <4 x i32> %1376, %1371
  %1381 = mul nsw <4 x i32> %1379, %1372
  %1382 = add i64 %1370, 8
  %1383 = add i64 %1373, -1
  %1384 = icmp eq i64 %1383, 0
  br i1 %1384, label %1385, label %1369, !llvm.loop !417

1385:                                             ; preds = %1369, %1362
  %1386 = phi <4 x i32> [ %1363, %1362 ], [ %1380, %1369 ]
  %1387 = phi <4 x i32> [ %1364, %1362 ], [ %1381, %1369 ]
  %1388 = mul <4 x i32> %1387, %1386
  %1389 = shufflevector <4 x i32> %1388, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1390 = mul <4 x i32> %1388, %1389
  %1391 = shufflevector <4 x i32> %1390, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1392 = mul <4 x i32> %1390, %1391
  %1393 = extractelement <4 x i32> %1392, i32 0
  %1394 = icmp eq i64 %1311, %1308
  br i1 %1394, label %1406, label %1395

1395:                                             ; preds = %1385, %1306
  %1396 = phi i64 [ 0, %1306 ], [ %1311, %1385 ]
  %1397 = phi i32 [ 1, %1306 ], [ %1393, %1385 ]
  br label %1398

1398:                                             ; preds = %1395, %1398
  %1399 = phi i64 [ %1404, %1398 ], [ %1396, %1395 ]
  %1400 = phi i32 [ %1403, %1398 ], [ %1397, %1395 ]
  %1401 = getelementptr inbounds i32, i32* %1307, i64 %1399
  %1402 = load i32, i32* %1401, align 4
  %1403 = mul nsw i32 %1402, %1400
  %1404 = add nuw nsw i64 %1399, 1
  %1405 = icmp eq i64 %1404, %1308
  br i1 %1405, label %1406, label %1398, !llvm.loop !418

1406:                                             ; preds = %1398, %1385, %1303
  %1407 = phi i32 [ 1, %1303 ], [ %1393, %1385 ], [ %1403, %1398 ]
  %1408 = icmp eq i32 %1187, %1297
  br i1 %1408, label %1410, label %1409

1409:                                             ; preds = %1406
  tail call void @abort() #12
  unreachable

1410:                                             ; preds = %1406
  %1411 = icmp eq i32 %1187, %1407
  br i1 %1411, label %1412, label %1484

1412:                                             ; preds = %1410
  %1413 = icmp sgt i32 %1187, 0
  br i1 %1413, label %1414, label %1522

1414:                                             ; preds = %1412
  %1415 = sub nsw i32 %966, %968
  %1416 = trunc i32 %1415 to i16
  %1417 = sub nsw i32 %964, %968
  %1418 = trunc i32 %1417 to i16
  %1419 = zext i32 %1187 to i64
  %1420 = icmp ult i32 %1187, 8
  br i1 %1420, label %1421, label %1423

1421:                                             ; preds = %1482, %1423, %1414
  %1422 = phi i64 [ 0, %1423 ], [ 0, %1414 ], [ %1437, %1482 ]
  br label %1485

1423:                                             ; preds = %1414
  %1424 = getelementptr i8, i8* %1077, i64 %1419
  %1425 = getelementptr i16, i16* %1042, i64 %1419
  %1426 = bitcast i16* %1425 to i8*
  %1427 = getelementptr i16, i16* %1005, i64 %1419
  %1428 = bitcast i16* %1427 to i8*
  %1429 = icmp ult i8* %1077, %1426
  %1430 = icmp ult i8* %1041, %1424
  %1431 = and i1 %1429, %1430
  %1432 = icmp ult i8* %1077, %1428
  %1433 = icmp ult i8* %1004, %1424
  %1434 = and i1 %1432, %1433
  %1435 = or i1 %1431, %1434
  br i1 %1435, label %1421, label %1436

1436:                                             ; preds = %1423
  %1437 = and i64 %1419, 4294967288
  %1438 = insertelement <8 x i16> undef, i16 %1416, i32 0
  %1439 = shufflevector <8 x i16> %1438, <8 x i16> undef, <8 x i32> zeroinitializer
  %1440 = insertelement <8 x i16> undef, i16 %1418, i32 0
  %1441 = shufflevector <8 x i16> %1440, <8 x i16> undef, <8 x i32> zeroinitializer
  %1442 = insertelement <8 x i32> undef, i32 %968, i32 0
  %1443 = shufflevector <8 x i32> %1442, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %1444

1444:                                             ; preds = %1444, %1436
  %1445 = phi i64 [ 0, %1436 ], [ %1480, %1444 ]
  %1446 = getelementptr inbounds i16, i16* %1005, i64 %1445
  %1447 = bitcast i16* %1446 to <8 x i16>*
  %1448 = load <8 x i16>, <8 x i16>* %1447, align 2, !alias.scope !419
  %1449 = getelementptr inbounds i16, i16* %1042, i64 %1445
  %1450 = bitcast i16* %1449 to <8 x i16>*
  %1451 = load <8 x i16>, <8 x i16>* %1450, align 2, !alias.scope !422
  %1452 = icmp eq <8 x i16> %1448, %1451
  %1453 = icmp eq <8 x i16> %1448, <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>
  %1454 = and <8 x i1> %1453, %1452
  %1455 = sext <8 x i16> %1451 to <8 x i32>
  %1456 = sext <8 x i16> %1448 to <8 x i32>
  %1457 = mul nsw <8 x i32> %1455, %1456
  %1458 = icmp sgt <8 x i32> %1457, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %1459 = select <8 x i1> %1458, <8 x i32> <i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384>, <8 x i32> <i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383>
  %1460 = add nsw <8 x i32> %1459, %1457
  %1461 = sdiv <8 x i32> %1460, <i32 32768, i32 32768, i32 32768, i32 32768, i32 32768, i32 32768, i32 32768, i32 32768>
  %1462 = trunc <8 x i32> %1461 to <8 x i16>
  %1463 = select <8 x i1> %1454, <8 x i16> <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, <8 x i16> %1462
  %1464 = and <8 x i16> %1463, <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>
  %1465 = lshr <8 x i16> %1463, <i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15>
  %1466 = add nuw nsw <8 x i16> %1465, <i16 127, i16 127, i16 127, i16 127, i16 127, i16 127, i16 127, i16 127>
  %1467 = ashr <8 x i16> %1463, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %1468 = icmp ugt <8 x i16> %1464, %1466
  %1469 = zext <8 x i1> %1468 to <8 x i16>
  %1470 = add nsw <8 x i16> %1467, %1469
  %1471 = icmp slt <8 x i16> %1470, %1439
  %1472 = select <8 x i1> %1471, <8 x i16> %1470, <8 x i16> %1439
  %1473 = icmp sgt <8 x i16> %1472, %1441
  %1474 = select <8 x i1> %1473, <8 x i16> %1472, <8 x i16> %1441
  %1475 = zext <8 x i16> %1474 to <8 x i32>
  %1476 = add <8 x i32> %1443, %1475
  %1477 = trunc <8 x i32> %1476 to <8 x i8>
  %1478 = getelementptr inbounds i8, i8* %1077, i64 %1445
  %1479 = bitcast i8* %1478 to <8 x i8>*
  store <8 x i8> %1477, <8 x i8>* %1479, align 1, !alias.scope !424, !noalias !426
  %1480 = add i64 %1445, 8
  %1481 = icmp eq i64 %1480, %1437
  br i1 %1481, label %1482, label %1444, !llvm.loop !427

1482:                                             ; preds = %1444
  %1483 = icmp eq i64 %1437, %1419
  br i1 %1483, label %1522, label %1421

1484:                                             ; preds = %1410
  tail call void @abort() #12
  unreachable

1485:                                             ; preds = %1421, %1503
  %1486 = phi i64 [ %1520, %1503 ], [ %1422, %1421 ]
  %1487 = getelementptr inbounds i16, i16* %1005, i64 %1486
  %1488 = load i16, i16* %1487, align 2
  %1489 = getelementptr inbounds i16, i16* %1042, i64 %1486
  %1490 = load i16, i16* %1489, align 2
  %1491 = icmp eq i16 %1488, %1490
  %1492 = icmp eq i16 %1488, -32768
  %1493 = and i1 %1492, %1491
  br i1 %1493, label %1503, label %1494

1494:                                             ; preds = %1485
  %1495 = sext i16 %1490 to i32
  %1496 = sext i16 %1488 to i32
  %1497 = mul nsw i32 %1495, %1496
  %1498 = icmp sgt i32 %1497, -1
  %1499 = select i1 %1498, i32 16384, i32 -16383
  %1500 = add nsw i32 %1499, %1497
  %1501 = sdiv i32 %1500, 32768
  %1502 = trunc i32 %1501 to i16
  br label %1503

1503:                                             ; preds = %1494, %1485
  %1504 = phi i16 [ %1502, %1494 ], [ 32767, %1485 ]
  %1505 = and i16 %1504, 255
  %1506 = lshr i16 %1504, 15
  %1507 = add nuw nsw i16 %1506, 127
  %1508 = ashr i16 %1504, 8
  %1509 = icmp ugt i16 %1505, %1507
  %1510 = zext i1 %1509 to i16
  %1511 = add nsw i16 %1508, %1510
  %1512 = icmp slt i16 %1511, %1416
  %1513 = select i1 %1512, i16 %1511, i16 %1416
  %1514 = icmp sgt i16 %1513, %1418
  %1515 = select i1 %1514, i16 %1513, i16 %1418
  %1516 = zext i16 %1515 to i32
  %1517 = add i32 %968, %1516
  %1518 = trunc i32 %1517 to i8
  %1519 = getelementptr inbounds i8, i8* %1077, i64 %1486
  store i8 %1518, i8* %1519, align 1
  %1520 = add nuw nsw i64 %1486, 1
  %1521 = icmp eq i64 %1520, %1419
  br i1 %1521, label %1522, label %1485, !llvm.loop !428

1522:                                             ; preds = %1503, %1482, %1412
  br i1 %1298, label %1523, label %1529

1523:                                             ; preds = %1522
  %1524 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %1525 = load i32*, i32** %1524, align 8
  %1526 = icmp eq i32* %1525, null
  br i1 %1526, label %1529, label %1527

1527:                                             ; preds = %1523
  %1528 = bitcast i32* %1525 to i8*
  tail call void @_ZdaPv(i8* %1528) #10
  br label %1529

1529:                                             ; preds = %1522, %1523, %1527
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1043) #11
  br i1 %1188, label %1530, label %1536

1530:                                             ; preds = %1529
  %1531 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1, i32 0
  %1532 = load i32*, i32** %1531, align 8
  %1533 = icmp eq i32* %1532, null
  br i1 %1533, label %1536, label %1534

1534:                                             ; preds = %1530
  %1535 = bitcast i32* %1532 to i8*
  tail call void @_ZdaPv(i8* %1535) #10
  br label %1536

1536:                                             ; preds = %1529, %1530, %1534
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1006) #11
  br i1 %1078, label %1537, label %1543

1537:                                             ; preds = %1536
  %1538 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1539 = load i32*, i32** %1538, align 8
  %1540 = icmp eq i32* %1539, null
  br i1 %1540, label %1543, label %1541

1541:                                             ; preds = %1537
  %1542 = bitcast i32* %1539 to i8*
  tail call void @_ZdaPv(i8* %1542) #10
  br label %1543

1543:                                             ; preds = %1536, %1537, %1541
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %969) #11
  br label %2129

1544:                                             ; preds = %959
  %1545 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 0
  %1546 = load i32, i32* %1545, align 4
  %1547 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 1
  %1548 = load i32, i32* %1547, align 4
  %1549 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 3, i32 1
  %1550 = load i32, i32* %1549, align 4
  %1551 = bitcast %"class.tflite::RuntimeShape"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1551) #11
  %1552 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %1552, label %1553, label %1555

1553:                                             ; preds = %1544
  %1554 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 0, i32* %1554, align 8, !alias.scope !429
  br label %1584

1555:                                             ; preds = %1544
  %1556 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %1557 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1556, align 8, !noalias !429
  %1558 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1557, i64 0, i32 0
  %1559 = load i32, i32* %1558, align 4, !noalias !429
  %1560 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1557, i64 0, i32 1, i64 0
  %1561 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 %1559, i32* %1561, align 8, !alias.scope !429
  %1562 = icmp sgt i32 %1559, 5
  br i1 %1562, label %1563, label %1570

1563:                                             ; preds = %1555
  %1564 = sext i32 %1559 to i64
  %1565 = shl nsw i64 %1564, 2
  %1566 = tail call i8* @_Znam(i64 %1565) #10, !noalias !429
  %1567 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %1568 = bitcast i32** %1567 to i8**
  store i8* %1566, i8** %1568, align 8, !alias.scope !429
  %1569 = bitcast i8* %1566 to i32*
  br label %1575

1570:                                             ; preds = %1555
  %1571 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  %1572 = bitcast %union.anon* %1571 to i32*
  %1573 = sext i32 %1559 to i64
  %1574 = shl nsw i64 %1573, 2
  br label %1575

1575:                                             ; preds = %1570, %1563
  %1576 = phi i64 [ %1565, %1563 ], [ %1574, %1570 ]
  %1577 = phi i32* [ %1569, %1563 ], [ %1572, %1570 ]
  %1578 = bitcast i32* %1577 to i8*
  %1579 = bitcast i32* %1560 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1578, i8* align 4 %1579, i64 %1576, i1 false) #11
  %1580 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %1581 = bitcast %union.TfLitePtrUnion* %1580 to i16**
  %1582 = load i16*, i16** %1581, align 8
  %1583 = bitcast i16* %1582 to i8*
  br label %1584

1584:                                             ; preds = %1553, %1575
  %1585 = phi i32 [ %1559, %1575 ], [ 0, %1553 ]
  %1586 = phi i8* [ %1583, %1575 ], [ null, %1553 ]
  %1587 = phi i16* [ %1582, %1575 ], [ null, %1553 ]
  %1588 = bitcast %"class.tflite::RuntimeShape"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1588) #11
  %1589 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %1589, label %1590, label %1592

1590:                                             ; preds = %1584
  %1591 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  store i32 0, i32* %1591, align 8, !alias.scope !432
  br label %1621

1592:                                             ; preds = %1584
  %1593 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %1594 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1593, align 8, !noalias !432
  %1595 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1594, i64 0, i32 0
  %1596 = load i32, i32* %1595, align 4, !noalias !432
  %1597 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1594, i64 0, i32 1, i64 0
  %1598 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  store i32 %1596, i32* %1598, align 8, !alias.scope !432
  %1599 = icmp sgt i32 %1596, 5
  br i1 %1599, label %1600, label %1607

1600:                                             ; preds = %1592
  %1601 = sext i32 %1596 to i64
  %1602 = shl nsw i64 %1601, 2
  %1603 = tail call i8* @_Znam(i64 %1602) #10, !noalias !432
  %1604 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1, i32 0
  %1605 = bitcast i32** %1604 to i8**
  store i8* %1603, i8** %1605, align 8, !alias.scope !432
  %1606 = bitcast i8* %1603 to i32*
  br label %1612

1607:                                             ; preds = %1592
  %1608 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1
  %1609 = bitcast %union.anon* %1608 to i32*
  %1610 = sext i32 %1596 to i64
  %1611 = shl nsw i64 %1610, 2
  br label %1612

1612:                                             ; preds = %1607, %1600
  %1613 = phi i64 [ %1602, %1600 ], [ %1611, %1607 ]
  %1614 = phi i32* [ %1606, %1600 ], [ %1609, %1607 ]
  %1615 = bitcast i32* %1614 to i8*
  %1616 = bitcast i32* %1597 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1615, i8* align 4 %1616, i64 %1613, i1 false) #11
  %1617 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %1618 = bitcast %union.TfLitePtrUnion* %1617 to i16**
  %1619 = load i16*, i16** %1618, align 8
  %1620 = bitcast i16* %1619 to i8*
  br label %1621

1621:                                             ; preds = %1590, %1612
  %1622 = phi i32 [ %1596, %1612 ], [ 0, %1590 ]
  %1623 = phi i8* [ %1620, %1612 ], [ null, %1590 ]
  %1624 = phi i16* [ %1619, %1612 ], [ null, %1590 ]
  %1625 = bitcast %"class.tflite::RuntimeShape"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1625) #11
  %1626 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %1626, label %1627, label %1629

1627:                                             ; preds = %1621
  %1628 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 0, i32* %1628, align 8, !alias.scope !435
  br label %1657

1629:                                             ; preds = %1621
  %1630 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %1631 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1630, align 8, !noalias !435
  %1632 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1631, i64 0, i32 0
  %1633 = load i32, i32* %1632, align 4, !noalias !435
  %1634 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1631, i64 0, i32 1, i64 0
  %1635 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 %1633, i32* %1635, align 8, !alias.scope !435
  %1636 = icmp sgt i32 %1633, 5
  br i1 %1636, label %1637, label %1644

1637:                                             ; preds = %1629
  %1638 = sext i32 %1633 to i64
  %1639 = shl nsw i64 %1638, 2
  %1640 = tail call i8* @_Znam(i64 %1639) #10, !noalias !435
  %1641 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %1642 = bitcast i32** %1641 to i8**
  store i8* %1640, i8** %1642, align 8, !alias.scope !435
  %1643 = bitcast i8* %1640 to i32*
  br label %1649

1644:                                             ; preds = %1629
  %1645 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1
  %1646 = bitcast %union.anon* %1645 to i32*
  %1647 = sext i32 %1633 to i64
  %1648 = shl nsw i64 %1647, 2
  br label %1649

1649:                                             ; preds = %1644, %1637
  %1650 = phi i64 [ %1639, %1637 ], [ %1648, %1644 ]
  %1651 = phi i32* [ %1643, %1637 ], [ %1646, %1644 ]
  %1652 = bitcast i32* %1651 to i8*
  %1653 = bitcast i32* %1634 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1652, i8* align 4 %1653, i64 %1650, i1 false) #11
  %1654 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %1655 = bitcast %union.TfLitePtrUnion* %1654 to i8**
  %1656 = load i8*, i8** %1655, align 8
  br label %1657

1657:                                             ; preds = %1627, %1649
  %1658 = phi i32 [ %1633, %1649 ], [ 0, %1627 ]
  %1659 = phi i8* [ %1656, %1649 ], [ null, %1627 ]
  %1660 = icmp sgt i32 %1585, 5
  %1661 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  br i1 %1660, label %1662, label %1665

1662:                                             ; preds = %1657
  %1663 = getelementptr inbounds %union.anon, %union.anon* %1661, i64 0, i32 0
  %1664 = load i32*, i32** %1663, align 8
  br label %1668

1665:                                             ; preds = %1657
  %1666 = bitcast %union.anon* %1661 to i32*
  %1667 = icmp sgt i32 %1585, 0
  br i1 %1667, label %1668, label %1768

1668:                                             ; preds = %1665, %1662
  %1669 = phi i32* [ %1664, %1662 ], [ %1666, %1665 ]
  %1670 = zext i32 %1585 to i64
  %1671 = icmp ult i32 %1585, 8
  br i1 %1671, label %1757, label %1672

1672:                                             ; preds = %1668
  %1673 = and i64 %1670, 4294967288
  %1674 = add nsw i64 %1673, -8
  %1675 = lshr exact i64 %1674, 3
  %1676 = add nuw nsw i64 %1675, 1
  %1677 = and i64 %1676, 3
  %1678 = icmp ult i64 %1674, 24
  br i1 %1678, label %1724, label %1679

1679:                                             ; preds = %1672
  %1680 = sub nsw i64 %1676, %1677
  br label %1681

1681:                                             ; preds = %1681, %1679
  %1682 = phi i64 [ 0, %1679 ], [ %1721, %1681 ]
  %1683 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1679 ], [ %1719, %1681 ]
  %1684 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1679 ], [ %1720, %1681 ]
  %1685 = phi i64 [ %1680, %1679 ], [ %1722, %1681 ]
  %1686 = getelementptr inbounds i32, i32* %1669, i64 %1682
  %1687 = bitcast i32* %1686 to <4 x i32>*
  %1688 = load <4 x i32>, <4 x i32>* %1687, align 4
  %1689 = getelementptr inbounds i32, i32* %1686, i64 4
  %1690 = bitcast i32* %1689 to <4 x i32>*
  %1691 = load <4 x i32>, <4 x i32>* %1690, align 4
  %1692 = mul nsw <4 x i32> %1688, %1683
  %1693 = mul nsw <4 x i32> %1691, %1684
  %1694 = or i64 %1682, 8
  %1695 = getelementptr inbounds i32, i32* %1669, i64 %1694
  %1696 = bitcast i32* %1695 to <4 x i32>*
  %1697 = load <4 x i32>, <4 x i32>* %1696, align 4
  %1698 = getelementptr inbounds i32, i32* %1695, i64 4
  %1699 = bitcast i32* %1698 to <4 x i32>*
  %1700 = load <4 x i32>, <4 x i32>* %1699, align 4
  %1701 = mul nsw <4 x i32> %1697, %1692
  %1702 = mul nsw <4 x i32> %1700, %1693
  %1703 = or i64 %1682, 16
  %1704 = getelementptr inbounds i32, i32* %1669, i64 %1703
  %1705 = bitcast i32* %1704 to <4 x i32>*
  %1706 = load <4 x i32>, <4 x i32>* %1705, align 4
  %1707 = getelementptr inbounds i32, i32* %1704, i64 4
  %1708 = bitcast i32* %1707 to <4 x i32>*
  %1709 = load <4 x i32>, <4 x i32>* %1708, align 4
  %1710 = mul nsw <4 x i32> %1706, %1701
  %1711 = mul nsw <4 x i32> %1709, %1702
  %1712 = or i64 %1682, 24
  %1713 = getelementptr inbounds i32, i32* %1669, i64 %1712
  %1714 = bitcast i32* %1713 to <4 x i32>*
  %1715 = load <4 x i32>, <4 x i32>* %1714, align 4
  %1716 = getelementptr inbounds i32, i32* %1713, i64 4
  %1717 = bitcast i32* %1716 to <4 x i32>*
  %1718 = load <4 x i32>, <4 x i32>* %1717, align 4
  %1719 = mul nsw <4 x i32> %1715, %1710
  %1720 = mul nsw <4 x i32> %1718, %1711
  %1721 = add i64 %1682, 32
  %1722 = add i64 %1685, -4
  %1723 = icmp eq i64 %1722, 0
  br i1 %1723, label %1724, label %1681, !llvm.loop !438

1724:                                             ; preds = %1681, %1672
  %1725 = phi <4 x i32> [ undef, %1672 ], [ %1719, %1681 ]
  %1726 = phi <4 x i32> [ undef, %1672 ], [ %1720, %1681 ]
  %1727 = phi i64 [ 0, %1672 ], [ %1721, %1681 ]
  %1728 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1672 ], [ %1719, %1681 ]
  %1729 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1672 ], [ %1720, %1681 ]
  %1730 = icmp eq i64 %1677, 0
  br i1 %1730, label %1747, label %1731

1731:                                             ; preds = %1724, %1731
  %1732 = phi i64 [ %1744, %1731 ], [ %1727, %1724 ]
  %1733 = phi <4 x i32> [ %1742, %1731 ], [ %1728, %1724 ]
  %1734 = phi <4 x i32> [ %1743, %1731 ], [ %1729, %1724 ]
  %1735 = phi i64 [ %1745, %1731 ], [ %1677, %1724 ]
  %1736 = getelementptr inbounds i32, i32* %1669, i64 %1732
  %1737 = bitcast i32* %1736 to <4 x i32>*
  %1738 = load <4 x i32>, <4 x i32>* %1737, align 4
  %1739 = getelementptr inbounds i32, i32* %1736, i64 4
  %1740 = bitcast i32* %1739 to <4 x i32>*
  %1741 = load <4 x i32>, <4 x i32>* %1740, align 4
  %1742 = mul nsw <4 x i32> %1738, %1733
  %1743 = mul nsw <4 x i32> %1741, %1734
  %1744 = add i64 %1732, 8
  %1745 = add i64 %1735, -1
  %1746 = icmp eq i64 %1745, 0
  br i1 %1746, label %1747, label %1731, !llvm.loop !439

1747:                                             ; preds = %1731, %1724
  %1748 = phi <4 x i32> [ %1725, %1724 ], [ %1742, %1731 ]
  %1749 = phi <4 x i32> [ %1726, %1724 ], [ %1743, %1731 ]
  %1750 = mul <4 x i32> %1749, %1748
  %1751 = shufflevector <4 x i32> %1750, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1752 = mul <4 x i32> %1750, %1751
  %1753 = shufflevector <4 x i32> %1752, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1754 = mul <4 x i32> %1752, %1753
  %1755 = extractelement <4 x i32> %1754, i32 0
  %1756 = icmp eq i64 %1673, %1670
  br i1 %1756, label %1768, label %1757

1757:                                             ; preds = %1747, %1668
  %1758 = phi i64 [ 0, %1668 ], [ %1673, %1747 ]
  %1759 = phi i32 [ 1, %1668 ], [ %1755, %1747 ]
  br label %1760

1760:                                             ; preds = %1757, %1760
  %1761 = phi i64 [ %1766, %1760 ], [ %1758, %1757 ]
  %1762 = phi i32 [ %1765, %1760 ], [ %1759, %1757 ]
  %1763 = getelementptr inbounds i32, i32* %1669, i64 %1761
  %1764 = load i32, i32* %1763, align 4
  %1765 = mul nsw i32 %1764, %1762
  %1766 = add nuw nsw i64 %1761, 1
  %1767 = icmp eq i64 %1766, %1670
  br i1 %1767, label %1768, label %1760, !llvm.loop !440

1768:                                             ; preds = %1760, %1747, %1665
  %1769 = phi i32 [ 1, %1665 ], [ %1755, %1747 ], [ %1765, %1760 ]
  %1770 = icmp sgt i32 %1622, 5
  %1771 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1
  br i1 %1770, label %1772, label %1775

1772:                                             ; preds = %1768
  %1773 = getelementptr inbounds %union.anon, %union.anon* %1771, i64 0, i32 0
  %1774 = load i32*, i32** %1773, align 8
  br label %1778

1775:                                             ; preds = %1768
  %1776 = bitcast %union.anon* %1771 to i32*
  %1777 = icmp sgt i32 %1622, 0
  br i1 %1777, label %1778, label %1878

1778:                                             ; preds = %1775, %1772
  %1779 = phi i32* [ %1774, %1772 ], [ %1776, %1775 ]
  %1780 = zext i32 %1622 to i64
  %1781 = icmp ult i32 %1622, 8
  br i1 %1781, label %1867, label %1782

1782:                                             ; preds = %1778
  %1783 = and i64 %1780, 4294967288
  %1784 = add nsw i64 %1783, -8
  %1785 = lshr exact i64 %1784, 3
  %1786 = add nuw nsw i64 %1785, 1
  %1787 = and i64 %1786, 3
  %1788 = icmp ult i64 %1784, 24
  br i1 %1788, label %1834, label %1789

1789:                                             ; preds = %1782
  %1790 = sub nsw i64 %1786, %1787
  br label %1791

1791:                                             ; preds = %1791, %1789
  %1792 = phi i64 [ 0, %1789 ], [ %1831, %1791 ]
  %1793 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1789 ], [ %1829, %1791 ]
  %1794 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1789 ], [ %1830, %1791 ]
  %1795 = phi i64 [ %1790, %1789 ], [ %1832, %1791 ]
  %1796 = getelementptr inbounds i32, i32* %1779, i64 %1792
  %1797 = bitcast i32* %1796 to <4 x i32>*
  %1798 = load <4 x i32>, <4 x i32>* %1797, align 4
  %1799 = getelementptr inbounds i32, i32* %1796, i64 4
  %1800 = bitcast i32* %1799 to <4 x i32>*
  %1801 = load <4 x i32>, <4 x i32>* %1800, align 4
  %1802 = mul nsw <4 x i32> %1798, %1793
  %1803 = mul nsw <4 x i32> %1801, %1794
  %1804 = or i64 %1792, 8
  %1805 = getelementptr inbounds i32, i32* %1779, i64 %1804
  %1806 = bitcast i32* %1805 to <4 x i32>*
  %1807 = load <4 x i32>, <4 x i32>* %1806, align 4
  %1808 = getelementptr inbounds i32, i32* %1805, i64 4
  %1809 = bitcast i32* %1808 to <4 x i32>*
  %1810 = load <4 x i32>, <4 x i32>* %1809, align 4
  %1811 = mul nsw <4 x i32> %1807, %1802
  %1812 = mul nsw <4 x i32> %1810, %1803
  %1813 = or i64 %1792, 16
  %1814 = getelementptr inbounds i32, i32* %1779, i64 %1813
  %1815 = bitcast i32* %1814 to <4 x i32>*
  %1816 = load <4 x i32>, <4 x i32>* %1815, align 4
  %1817 = getelementptr inbounds i32, i32* %1814, i64 4
  %1818 = bitcast i32* %1817 to <4 x i32>*
  %1819 = load <4 x i32>, <4 x i32>* %1818, align 4
  %1820 = mul nsw <4 x i32> %1816, %1811
  %1821 = mul nsw <4 x i32> %1819, %1812
  %1822 = or i64 %1792, 24
  %1823 = getelementptr inbounds i32, i32* %1779, i64 %1822
  %1824 = bitcast i32* %1823 to <4 x i32>*
  %1825 = load <4 x i32>, <4 x i32>* %1824, align 4
  %1826 = getelementptr inbounds i32, i32* %1823, i64 4
  %1827 = bitcast i32* %1826 to <4 x i32>*
  %1828 = load <4 x i32>, <4 x i32>* %1827, align 4
  %1829 = mul nsw <4 x i32> %1825, %1820
  %1830 = mul nsw <4 x i32> %1828, %1821
  %1831 = add i64 %1792, 32
  %1832 = add i64 %1795, -4
  %1833 = icmp eq i64 %1832, 0
  br i1 %1833, label %1834, label %1791, !llvm.loop !441

1834:                                             ; preds = %1791, %1782
  %1835 = phi <4 x i32> [ undef, %1782 ], [ %1829, %1791 ]
  %1836 = phi <4 x i32> [ undef, %1782 ], [ %1830, %1791 ]
  %1837 = phi i64 [ 0, %1782 ], [ %1831, %1791 ]
  %1838 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1782 ], [ %1829, %1791 ]
  %1839 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1782 ], [ %1830, %1791 ]
  %1840 = icmp eq i64 %1787, 0
  br i1 %1840, label %1857, label %1841

1841:                                             ; preds = %1834, %1841
  %1842 = phi i64 [ %1854, %1841 ], [ %1837, %1834 ]
  %1843 = phi <4 x i32> [ %1852, %1841 ], [ %1838, %1834 ]
  %1844 = phi <4 x i32> [ %1853, %1841 ], [ %1839, %1834 ]
  %1845 = phi i64 [ %1855, %1841 ], [ %1787, %1834 ]
  %1846 = getelementptr inbounds i32, i32* %1779, i64 %1842
  %1847 = bitcast i32* %1846 to <4 x i32>*
  %1848 = load <4 x i32>, <4 x i32>* %1847, align 4
  %1849 = getelementptr inbounds i32, i32* %1846, i64 4
  %1850 = bitcast i32* %1849 to <4 x i32>*
  %1851 = load <4 x i32>, <4 x i32>* %1850, align 4
  %1852 = mul nsw <4 x i32> %1848, %1843
  %1853 = mul nsw <4 x i32> %1851, %1844
  %1854 = add i64 %1842, 8
  %1855 = add i64 %1845, -1
  %1856 = icmp eq i64 %1855, 0
  br i1 %1856, label %1857, label %1841, !llvm.loop !442

1857:                                             ; preds = %1841, %1834
  %1858 = phi <4 x i32> [ %1835, %1834 ], [ %1852, %1841 ]
  %1859 = phi <4 x i32> [ %1836, %1834 ], [ %1853, %1841 ]
  %1860 = mul <4 x i32> %1859, %1858
  %1861 = shufflevector <4 x i32> %1860, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1862 = mul <4 x i32> %1860, %1861
  %1863 = shufflevector <4 x i32> %1862, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1864 = mul <4 x i32> %1862, %1863
  %1865 = extractelement <4 x i32> %1864, i32 0
  %1866 = icmp eq i64 %1783, %1780
  br i1 %1866, label %1878, label %1867

1867:                                             ; preds = %1857, %1778
  %1868 = phi i64 [ 0, %1778 ], [ %1783, %1857 ]
  %1869 = phi i32 [ 1, %1778 ], [ %1865, %1857 ]
  br label %1870

1870:                                             ; preds = %1867, %1870
  %1871 = phi i64 [ %1876, %1870 ], [ %1868, %1867 ]
  %1872 = phi i32 [ %1875, %1870 ], [ %1869, %1867 ]
  %1873 = getelementptr inbounds i32, i32* %1779, i64 %1871
  %1874 = load i32, i32* %1873, align 4
  %1875 = mul nsw i32 %1874, %1872
  %1876 = add nuw nsw i64 %1871, 1
  %1877 = icmp eq i64 %1876, %1780
  br i1 %1877, label %1878, label %1870, !llvm.loop !443

1878:                                             ; preds = %1870, %1857, %1775
  %1879 = phi i32 [ 1, %1775 ], [ %1865, %1857 ], [ %1875, %1870 ]
  %1880 = icmp sgt i32 %1658, 5
  %1881 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1
  br i1 %1880, label %1882, label %1885

1882:                                             ; preds = %1878
  %1883 = getelementptr inbounds %union.anon, %union.anon* %1881, i64 0, i32 0
  %1884 = load i32*, i32** %1883, align 8
  br label %1888

1885:                                             ; preds = %1878
  %1886 = bitcast %union.anon* %1881 to i32*
  %1887 = icmp sgt i32 %1658, 0
  br i1 %1887, label %1888, label %1988

1888:                                             ; preds = %1885, %1882
  %1889 = phi i32* [ %1884, %1882 ], [ %1886, %1885 ]
  %1890 = zext i32 %1658 to i64
  %1891 = icmp ult i32 %1658, 8
  br i1 %1891, label %1977, label %1892

1892:                                             ; preds = %1888
  %1893 = and i64 %1890, 4294967288
  %1894 = add nsw i64 %1893, -8
  %1895 = lshr exact i64 %1894, 3
  %1896 = add nuw nsw i64 %1895, 1
  %1897 = and i64 %1896, 3
  %1898 = icmp ult i64 %1894, 24
  br i1 %1898, label %1944, label %1899

1899:                                             ; preds = %1892
  %1900 = sub nsw i64 %1896, %1897
  br label %1901

1901:                                             ; preds = %1901, %1899
  %1902 = phi i64 [ 0, %1899 ], [ %1941, %1901 ]
  %1903 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1899 ], [ %1939, %1901 ]
  %1904 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1899 ], [ %1940, %1901 ]
  %1905 = phi i64 [ %1900, %1899 ], [ %1942, %1901 ]
  %1906 = getelementptr inbounds i32, i32* %1889, i64 %1902
  %1907 = bitcast i32* %1906 to <4 x i32>*
  %1908 = load <4 x i32>, <4 x i32>* %1907, align 4
  %1909 = getelementptr inbounds i32, i32* %1906, i64 4
  %1910 = bitcast i32* %1909 to <4 x i32>*
  %1911 = load <4 x i32>, <4 x i32>* %1910, align 4
  %1912 = mul nsw <4 x i32> %1908, %1903
  %1913 = mul nsw <4 x i32> %1911, %1904
  %1914 = or i64 %1902, 8
  %1915 = getelementptr inbounds i32, i32* %1889, i64 %1914
  %1916 = bitcast i32* %1915 to <4 x i32>*
  %1917 = load <4 x i32>, <4 x i32>* %1916, align 4
  %1918 = getelementptr inbounds i32, i32* %1915, i64 4
  %1919 = bitcast i32* %1918 to <4 x i32>*
  %1920 = load <4 x i32>, <4 x i32>* %1919, align 4
  %1921 = mul nsw <4 x i32> %1917, %1912
  %1922 = mul nsw <4 x i32> %1920, %1913
  %1923 = or i64 %1902, 16
  %1924 = getelementptr inbounds i32, i32* %1889, i64 %1923
  %1925 = bitcast i32* %1924 to <4 x i32>*
  %1926 = load <4 x i32>, <4 x i32>* %1925, align 4
  %1927 = getelementptr inbounds i32, i32* %1924, i64 4
  %1928 = bitcast i32* %1927 to <4 x i32>*
  %1929 = load <4 x i32>, <4 x i32>* %1928, align 4
  %1930 = mul nsw <4 x i32> %1926, %1921
  %1931 = mul nsw <4 x i32> %1929, %1922
  %1932 = or i64 %1902, 24
  %1933 = getelementptr inbounds i32, i32* %1889, i64 %1932
  %1934 = bitcast i32* %1933 to <4 x i32>*
  %1935 = load <4 x i32>, <4 x i32>* %1934, align 4
  %1936 = getelementptr inbounds i32, i32* %1933, i64 4
  %1937 = bitcast i32* %1936 to <4 x i32>*
  %1938 = load <4 x i32>, <4 x i32>* %1937, align 4
  %1939 = mul nsw <4 x i32> %1935, %1930
  %1940 = mul nsw <4 x i32> %1938, %1931
  %1941 = add i64 %1902, 32
  %1942 = add i64 %1905, -4
  %1943 = icmp eq i64 %1942, 0
  br i1 %1943, label %1944, label %1901, !llvm.loop !444

1944:                                             ; preds = %1901, %1892
  %1945 = phi <4 x i32> [ undef, %1892 ], [ %1939, %1901 ]
  %1946 = phi <4 x i32> [ undef, %1892 ], [ %1940, %1901 ]
  %1947 = phi i64 [ 0, %1892 ], [ %1941, %1901 ]
  %1948 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1892 ], [ %1939, %1901 ]
  %1949 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1892 ], [ %1940, %1901 ]
  %1950 = icmp eq i64 %1897, 0
  br i1 %1950, label %1967, label %1951

1951:                                             ; preds = %1944, %1951
  %1952 = phi i64 [ %1964, %1951 ], [ %1947, %1944 ]
  %1953 = phi <4 x i32> [ %1962, %1951 ], [ %1948, %1944 ]
  %1954 = phi <4 x i32> [ %1963, %1951 ], [ %1949, %1944 ]
  %1955 = phi i64 [ %1965, %1951 ], [ %1897, %1944 ]
  %1956 = getelementptr inbounds i32, i32* %1889, i64 %1952
  %1957 = bitcast i32* %1956 to <4 x i32>*
  %1958 = load <4 x i32>, <4 x i32>* %1957, align 4
  %1959 = getelementptr inbounds i32, i32* %1956, i64 4
  %1960 = bitcast i32* %1959 to <4 x i32>*
  %1961 = load <4 x i32>, <4 x i32>* %1960, align 4
  %1962 = mul nsw <4 x i32> %1958, %1953
  %1963 = mul nsw <4 x i32> %1961, %1954
  %1964 = add i64 %1952, 8
  %1965 = add i64 %1955, -1
  %1966 = icmp eq i64 %1965, 0
  br i1 %1966, label %1967, label %1951, !llvm.loop !445

1967:                                             ; preds = %1951, %1944
  %1968 = phi <4 x i32> [ %1945, %1944 ], [ %1962, %1951 ]
  %1969 = phi <4 x i32> [ %1946, %1944 ], [ %1963, %1951 ]
  %1970 = mul <4 x i32> %1969, %1968
  %1971 = shufflevector <4 x i32> %1970, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1972 = mul <4 x i32> %1970, %1971
  %1973 = shufflevector <4 x i32> %1972, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1974 = mul <4 x i32> %1972, %1973
  %1975 = extractelement <4 x i32> %1974, i32 0
  %1976 = icmp eq i64 %1893, %1890
  br i1 %1976, label %1988, label %1977

1977:                                             ; preds = %1967, %1888
  %1978 = phi i64 [ 0, %1888 ], [ %1893, %1967 ]
  %1979 = phi i32 [ 1, %1888 ], [ %1975, %1967 ]
  br label %1980

1980:                                             ; preds = %1977, %1980
  %1981 = phi i64 [ %1986, %1980 ], [ %1978, %1977 ]
  %1982 = phi i32 [ %1985, %1980 ], [ %1979, %1977 ]
  %1983 = getelementptr inbounds i32, i32* %1889, i64 %1981
  %1984 = load i32, i32* %1983, align 4
  %1985 = mul nsw i32 %1984, %1982
  %1986 = add nuw nsw i64 %1981, 1
  %1987 = icmp eq i64 %1986, %1890
  br i1 %1987, label %1988, label %1980, !llvm.loop !446

1988:                                             ; preds = %1980, %1967, %1885
  %1989 = phi i32 [ 1, %1885 ], [ %1975, %1967 ], [ %1985, %1980 ]
  %1990 = icmp eq i32 %1769, %1879
  br i1 %1990, label %1992, label %1991

1991:                                             ; preds = %1988
  tail call void @abort() #12
  unreachable

1992:                                             ; preds = %1988
  %1993 = icmp eq i32 %1769, %1989
  br i1 %1993, label %1994, label %2066

1994:                                             ; preds = %1992
  %1995 = icmp sgt i32 %1769, 0
  br i1 %1995, label %1996, label %2104

1996:                                             ; preds = %1994
  %1997 = sub nsw i32 %1548, %1550
  %1998 = trunc i32 %1997 to i16
  %1999 = sub nsw i32 %1546, %1550
  %2000 = trunc i32 %1999 to i16
  %2001 = zext i32 %1769 to i64
  %2002 = icmp ult i32 %1769, 8
  br i1 %2002, label %2003, label %2005

2003:                                             ; preds = %2064, %2005, %1996
  %2004 = phi i64 [ 0, %2005 ], [ 0, %1996 ], [ %2019, %2064 ]
  br label %2067

2005:                                             ; preds = %1996
  %2006 = getelementptr i8, i8* %1659, i64 %2001
  %2007 = getelementptr i16, i16* %1624, i64 %2001
  %2008 = bitcast i16* %2007 to i8*
  %2009 = getelementptr i16, i16* %1587, i64 %2001
  %2010 = bitcast i16* %2009 to i8*
  %2011 = icmp ult i8* %1659, %2008
  %2012 = icmp ult i8* %1623, %2006
  %2013 = and i1 %2011, %2012
  %2014 = icmp ult i8* %1659, %2010
  %2015 = icmp ult i8* %1586, %2006
  %2016 = and i1 %2014, %2015
  %2017 = or i1 %2013, %2016
  br i1 %2017, label %2003, label %2018

2018:                                             ; preds = %2005
  %2019 = and i64 %2001, 4294967288
  %2020 = insertelement <8 x i16> undef, i16 %1998, i32 0
  %2021 = shufflevector <8 x i16> %2020, <8 x i16> undef, <8 x i32> zeroinitializer
  %2022 = insertelement <8 x i16> undef, i16 %2000, i32 0
  %2023 = shufflevector <8 x i16> %2022, <8 x i16> undef, <8 x i32> zeroinitializer
  %2024 = insertelement <8 x i32> undef, i32 %1550, i32 0
  %2025 = shufflevector <8 x i32> %2024, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %2026

2026:                                             ; preds = %2026, %2018
  %2027 = phi i64 [ 0, %2018 ], [ %2062, %2026 ]
  %2028 = getelementptr inbounds i16, i16* %1587, i64 %2027
  %2029 = bitcast i16* %2028 to <8 x i16>*
  %2030 = load <8 x i16>, <8 x i16>* %2029, align 2, !alias.scope !447
  %2031 = getelementptr inbounds i16, i16* %1624, i64 %2027
  %2032 = bitcast i16* %2031 to <8 x i16>*
  %2033 = load <8 x i16>, <8 x i16>* %2032, align 2, !alias.scope !450
  %2034 = icmp eq <8 x i16> %2030, %2033
  %2035 = icmp eq <8 x i16> %2030, <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>
  %2036 = and <8 x i1> %2035, %2034
  %2037 = sext <8 x i16> %2033 to <8 x i32>
  %2038 = sext <8 x i16> %2030 to <8 x i32>
  %2039 = mul nsw <8 x i32> %2037, %2038
  %2040 = icmp sgt <8 x i32> %2039, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %2041 = select <8 x i1> %2040, <8 x i32> <i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384>, <8 x i32> <i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383>
  %2042 = add nsw <8 x i32> %2041, %2039
  %2043 = sdiv <8 x i32> %2042, <i32 32768, i32 32768, i32 32768, i32 32768, i32 32768, i32 32768, i32 32768, i32 32768>
  %2044 = trunc <8 x i32> %2043 to <8 x i16>
  %2045 = select <8 x i1> %2036, <8 x i16> <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, <8 x i16> %2044
  %2046 = and <8 x i16> %2045, <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>
  %2047 = lshr <8 x i16> %2045, <i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15>
  %2048 = add nuw nsw <8 x i16> %2047, <i16 127, i16 127, i16 127, i16 127, i16 127, i16 127, i16 127, i16 127>
  %2049 = ashr <8 x i16> %2045, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %2050 = icmp ugt <8 x i16> %2046, %2048
  %2051 = zext <8 x i1> %2050 to <8 x i16>
  %2052 = add nsw <8 x i16> %2049, %2051
  %2053 = icmp slt <8 x i16> %2052, %2021
  %2054 = select <8 x i1> %2053, <8 x i16> %2052, <8 x i16> %2021
  %2055 = icmp sgt <8 x i16> %2054, %2023
  %2056 = select <8 x i1> %2055, <8 x i16> %2054, <8 x i16> %2023
  %2057 = zext <8 x i16> %2056 to <8 x i32>
  %2058 = add <8 x i32> %2025, %2057
  %2059 = trunc <8 x i32> %2058 to <8 x i8>
  %2060 = getelementptr inbounds i8, i8* %1659, i64 %2027
  %2061 = bitcast i8* %2060 to <8 x i8>*
  store <8 x i8> %2059, <8 x i8>* %2061, align 1, !alias.scope !452, !noalias !454
  %2062 = add i64 %2027, 8
  %2063 = icmp eq i64 %2062, %2019
  br i1 %2063, label %2064, label %2026, !llvm.loop !455

2064:                                             ; preds = %2026
  %2065 = icmp eq i64 %2019, %2001
  br i1 %2065, label %2104, label %2003

2066:                                             ; preds = %1992
  tail call void @abort() #12
  unreachable

2067:                                             ; preds = %2003, %2085
  %2068 = phi i64 [ %2102, %2085 ], [ %2004, %2003 ]
  %2069 = getelementptr inbounds i16, i16* %1587, i64 %2068
  %2070 = load i16, i16* %2069, align 2
  %2071 = getelementptr inbounds i16, i16* %1624, i64 %2068
  %2072 = load i16, i16* %2071, align 2
  %2073 = icmp eq i16 %2070, %2072
  %2074 = icmp eq i16 %2070, -32768
  %2075 = and i1 %2074, %2073
  br i1 %2075, label %2085, label %2076

2076:                                             ; preds = %2067
  %2077 = sext i16 %2072 to i32
  %2078 = sext i16 %2070 to i32
  %2079 = mul nsw i32 %2077, %2078
  %2080 = icmp sgt i32 %2079, -1
  %2081 = select i1 %2080, i32 16384, i32 -16383
  %2082 = add nsw i32 %2081, %2079
  %2083 = sdiv i32 %2082, 32768
  %2084 = trunc i32 %2083 to i16
  br label %2085

2085:                                             ; preds = %2076, %2067
  %2086 = phi i16 [ %2084, %2076 ], [ 32767, %2067 ]
  %2087 = and i16 %2086, 255
  %2088 = lshr i16 %2086, 15
  %2089 = add nuw nsw i16 %2088, 127
  %2090 = ashr i16 %2086, 8
  %2091 = icmp ugt i16 %2087, %2089
  %2092 = zext i1 %2091 to i16
  %2093 = add nsw i16 %2090, %2092
  %2094 = icmp slt i16 %2093, %1998
  %2095 = select i1 %2094, i16 %2093, i16 %1998
  %2096 = icmp sgt i16 %2095, %2000
  %2097 = select i1 %2096, i16 %2095, i16 %2000
  %2098 = zext i16 %2097 to i32
  %2099 = add i32 %1550, %2098
  %2100 = trunc i32 %2099 to i8
  %2101 = getelementptr inbounds i8, i8* %1659, i64 %2068
  store i8 %2100, i8* %2101, align 1
  %2102 = add nuw nsw i64 %2068, 1
  %2103 = icmp eq i64 %2102, %2001
  br i1 %2103, label %2104, label %2067, !llvm.loop !456

2104:                                             ; preds = %2085, %2064, %1994
  br i1 %1880, label %2105, label %2111

2105:                                             ; preds = %2104
  %2106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %2107 = load i32*, i32** %2106, align 8
  %2108 = icmp eq i32* %2107, null
  br i1 %2108, label %2111, label %2109

2109:                                             ; preds = %2105
  %2110 = bitcast i32* %2107 to i8*
  tail call void @_ZdaPv(i8* %2110) #10
  br label %2111

2111:                                             ; preds = %2104, %2105, %2109
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1625) #11
  br i1 %1770, label %2112, label %2118

2112:                                             ; preds = %2111
  %2113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1, i32 0
  %2114 = load i32*, i32** %2113, align 8
  %2115 = icmp eq i32* %2114, null
  br i1 %2115, label %2118, label %2116

2116:                                             ; preds = %2112
  %2117 = bitcast i32* %2114 to i8*
  tail call void @_ZdaPv(i8* %2117) #10
  br label %2118

2118:                                             ; preds = %2111, %2112, %2116
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1588) #11
  br i1 %1660, label %2119, label %2125

2119:                                             ; preds = %2118
  %2120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %2121 = load i32*, i32** %2120, align 8
  %2122 = icmp eq i32* %2121, null
  br i1 %2122, label %2125, label %2123

2123:                                             ; preds = %2119
  %2124 = bitcast i32* %2121 to i8*
  tail call void @_ZdaPv(i8* %2124) #10
  br label %2125

2125:                                             ; preds = %2118, %2119, %2123
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1551) #11
  br label %2129

2126:                                             ; preds = %959, %44, %955
  %2127 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %2128 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %2127, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %2128(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.19, i64 0, i64 0)) #11
  br label %2129

2129:                                             ; preds = %1543, %2125, %953, %428, %422, %416, %2126
  %2130 = phi i32 [ 1, %2126 ], [ 1, %416 ], [ 1, %422 ], [ 1, %428 ], [ 0, %953 ], [ 0, %2125 ], [ 0, %1543 ]
  ret i32 %2130
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops20BroadcastMulDispatchIfEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #7 comdat {
  %8 = alloca %"struct.tflite::ArithmeticParams", align 4
  %9 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 0
  %10 = load i8, i8* %9, align 4
  %11 = icmp eq i8 %10, 4
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  tail call void @_ZN6tflite13reference_ops18BroadcastMul4DSlowIfEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* dereferenceable(80) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %1, float* %2, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, float* %4, %"class.tflite::RuntimeShape"* dereferenceable(32) %5, float* %6)
  br label %343

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %14) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %14, i8* align 4 %9, i64 80, i1 false) #11
  %15 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 1
  store i32 %16, i32* %17, align 4
  %18 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 7
  %19 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 2
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 7
  %23 = bitcast i32* %22 to <4 x i32>*
  %24 = load <4 x i32>, <4 x i32>* %23, align 4
  %25 = shufflevector <4 x i32> %24, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %26 = bitcast i32* %18 to <4 x i32>*
  store <4 x i32> %25, <4 x i32>* %26, align 4
  %27 = icmp eq i8 %10, 2
  %28 = select i1 %27, %"struct.tflite::ArithmeticParams"* %0, %"struct.tflite::ArithmeticParams"* %8
  %29 = select i1 %27, float* %2, float* %4
  %30 = select i1 %27, float* %4, float* %2
  %31 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 15, i64 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 15, i64 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 15, i64 2
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 15, i64 3
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 15, i64 4
  %40 = load i32, i32* %39, align 4
  %41 = icmp sgt i32 %40, 1
  %42 = icmp sgt i32 %32, 0
  br i1 %41, label %61, label %43

43:                                               ; preds = %13
  br i1 %42, label %44, label %342

44:                                               ; preds = %43
  %45 = icmp sgt i32 %34, 0
  %46 = icmp sgt i32 %36, 0
  %47 = sext i32 %38 to i64
  %48 = icmp sgt i32 %38, 0
  %49 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 13
  %50 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 14
  %51 = zext i32 %38 to i64
  %52 = getelementptr %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 14
  %53 = bitcast float* %52 to i8*
  %54 = getelementptr i8, i8* %53, i64 1
  %55 = icmp ult i32 %38, 4
  %56 = and i64 %51, 4294967292
  %57 = icmp eq i64 %56, %51
  %58 = and i64 %51, 1
  %59 = icmp eq i64 %58, 0
  %60 = sub nsw i64 0, %51
  br label %224

61:                                               ; preds = %13
  br i1 %42, label %62, label %342

62:                                               ; preds = %61
  %63 = icmp sgt i32 %34, 0
  %64 = icmp sgt i32 %36, 0
  %65 = icmp sgt i32 %38, 0
  %66 = sext i32 %40 to i64
  %67 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 13
  %68 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 14
  %69 = zext i32 %40 to i64
  %70 = icmp ult i32 %40, 8
  %71 = and i64 %69, 4294967288
  %72 = icmp eq i64 %71, %69
  %73 = and i64 %69, 1
  %74 = icmp eq i64 %73, 0
  %75 = sub nsw i64 0, %69
  br label %76

76:                                               ; preds = %85, %62
  %77 = phi i32 [ 0, %62 ], [ %89, %85 ]
  %78 = phi float* [ %30, %62 ], [ %88, %85 ]
  %79 = phi float* [ %29, %62 ], [ %87, %85 ]
  %80 = phi float* [ %6, %62 ], [ %86, %85 ]
  br i1 %63, label %81, label %85

81:                                               ; preds = %76, %101
  %82 = phi i32 [ %105, %101 ], [ 0, %76 ]
  %83 = phi float* [ %103, %101 ], [ %79, %76 ]
  %84 = phi float* [ %102, %101 ], [ %80, %76 ]
  br i1 %64, label %91, label %101

85:                                               ; preds = %101, %76
  %86 = phi float* [ %80, %76 ], [ %102, %101 ]
  %87 = phi float* [ %79, %76 ], [ %103, %101 ]
  %88 = phi float* [ null, %76 ], [ %104, %101 ]
  %89 = add nuw nsw i32 %77, 1
  %90 = icmp eq i32 %89, %32
  br i1 %90, label %342, label %76

91:                                               ; preds = %81, %107
  %92 = phi i64 [ %113, %107 ], [ 0, %81 ]
  %93 = phi i32 [ %111, %107 ], [ 0, %81 ]
  %94 = phi float* [ %109, %107 ], [ %78, %81 ]
  %95 = phi float* [ %110, %107 ], [ %83, %81 ]
  %96 = phi float* [ %108, %107 ], [ %84, %81 ]
  %97 = mul i64 %92, %66
  %98 = getelementptr float, float* %83, i64 %97
  %99 = add i64 %97, %69
  %100 = getelementptr float, float* %83, i64 %99
  br i1 %65, label %114, label %107

101:                                              ; preds = %107, %81
  %102 = phi float* [ %84, %81 ], [ %108, %107 ]
  %103 = phi float* [ %83, %81 ], [ %110, %107 ]
  %104 = phi float* [ %78, %81 ], [ %109, %107 ]
  %105 = add nuw nsw i32 %82, 1
  %106 = icmp eq i32 %105, %34
  br i1 %106, label %85, label %81

107:                                              ; preds = %218, %91
  %108 = phi float* [ %96, %91 ], [ %220, %218 ]
  %109 = phi float* [ %94, %91 ], [ %219, %218 ]
  %110 = getelementptr inbounds float, float* %95, i64 %66
  %111 = add nuw nsw i32 %93, 1
  %112 = icmp eq i32 %111, %36
  %113 = add i64 %92, 1
  br i1 %112, label %101, label %91

114:                                              ; preds = %91, %218
  %115 = phi i64 [ %223, %218 ], [ 0, %91 ]
  %116 = phi i32 [ %221, %218 ], [ 0, %91 ]
  %117 = phi float* [ %219, %218 ], [ %94, %91 ]
  %118 = phi float* [ %220, %218 ], [ %96, %91 ]
  %119 = mul i64 %115, %66
  %120 = getelementptr float, float* %96, i64 %119
  %121 = add i64 %119, %69
  %122 = getelementptr float, float* %96, i64 %121
  %123 = load float, float* %67, align 4
  %124 = load float, float* %68, align 4
  br i1 %70, label %175, label %125

125:                                              ; preds = %114
  %126 = getelementptr float, float* %94, i64 %121
  %127 = getelementptr float, float* %94, i64 %119
  %128 = icmp ult float* %120, %126
  %129 = icmp ult float* %127, %122
  %130 = and i1 %128, %129
  %131 = icmp ult float* %120, %100
  %132 = icmp ult float* %98, %122
  %133 = and i1 %131, %132
  %134 = or i1 %130, %133
  br i1 %134, label %175, label %135

135:                                              ; preds = %125
  %136 = insertelement <4 x float> undef, float %123, i32 0
  %137 = shufflevector <4 x float> %136, <4 x float> undef, <4 x i32> zeroinitializer
  %138 = insertelement <4 x float> undef, float %123, i32 0
  %139 = shufflevector <4 x float> %138, <4 x float> undef, <4 x i32> zeroinitializer
  %140 = insertelement <4 x float> undef, float %124, i32 0
  %141 = shufflevector <4 x float> %140, <4 x float> undef, <4 x i32> zeroinitializer
  %142 = insertelement <4 x float> undef, float %124, i32 0
  %143 = shufflevector <4 x float> %142, <4 x float> undef, <4 x i32> zeroinitializer
  br label %144

144:                                              ; preds = %144, %135
  %145 = phi i64 [ 0, %135 ], [ %172, %144 ]
  %146 = getelementptr inbounds float, float* %95, i64 %145
  %147 = bitcast float* %146 to <4 x float>*
  %148 = load <4 x float>, <4 x float>* %147, align 4, !alias.scope !457
  %149 = getelementptr inbounds float, float* %146, i64 4
  %150 = bitcast float* %149 to <4 x float>*
  %151 = load <4 x float>, <4 x float>* %150, align 4, !alias.scope !457
  %152 = getelementptr inbounds float, float* %117, i64 %145
  %153 = bitcast float* %152 to <4 x float>*
  %154 = load <4 x float>, <4 x float>* %153, align 4, !alias.scope !460
  %155 = getelementptr inbounds float, float* %152, i64 4
  %156 = bitcast float* %155 to <4 x float>*
  %157 = load <4 x float>, <4 x float>* %156, align 4, !alias.scope !460
  %158 = fmul <4 x float> %148, %154
  %159 = fmul <4 x float> %151, %157
  %160 = fcmp olt <4 x float> %158, %137
  %161 = fcmp olt <4 x float> %159, %139
  %162 = select <4 x i1> %160, <4 x float> %137, <4 x float> %158
  %163 = select <4 x i1> %161, <4 x float> %139, <4 x float> %159
  %164 = fcmp ogt <4 x float> %162, %141
  %165 = fcmp ogt <4 x float> %163, %143
  %166 = select <4 x i1> %164, <4 x float> %141, <4 x float> %162
  %167 = select <4 x i1> %165, <4 x float> %143, <4 x float> %163
  %168 = getelementptr inbounds float, float* %118, i64 %145
  %169 = bitcast float* %168 to <4 x float>*
  store <4 x float> %166, <4 x float>* %169, align 4, !alias.scope !462, !noalias !464
  %170 = getelementptr inbounds float, float* %168, i64 4
  %171 = bitcast float* %170 to <4 x float>*
  store <4 x float> %167, <4 x float>* %171, align 4, !alias.scope !462, !noalias !464
  %172 = add i64 %145, 8
  %173 = icmp eq i64 %172, %71
  br i1 %173, label %174, label %144, !llvm.loop !465

174:                                              ; preds = %144
  br i1 %72, label %218, label %175

175:                                              ; preds = %174, %125, %114
  %176 = phi i64 [ 0, %125 ], [ 0, %114 ], [ %71, %174 ]
  %177 = xor i64 %176, -1
  br i1 %74, label %190, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds float, float* %95, i64 %176
  %180 = load float, float* %179, align 4
  %181 = getelementptr inbounds float, float* %117, i64 %176
  %182 = load float, float* %181, align 4
  %183 = fmul float %180, %182
  %184 = fcmp olt float %183, %123
  %185 = select i1 %184, float %123, float %183
  %186 = fcmp ogt float %185, %124
  %187 = select i1 %186, float %124, float %185
  %188 = getelementptr inbounds float, float* %118, i64 %176
  store float %187, float* %188, align 4
  %189 = or i64 %176, 1
  br label %190

190:                                              ; preds = %178, %175
  %191 = phi i64 [ %189, %178 ], [ %176, %175 ]
  %192 = icmp eq i64 %177, %75
  br i1 %192, label %218, label %193

193:                                              ; preds = %190, %193
  %194 = phi i64 [ %216, %193 ], [ %191, %190 ]
  %195 = getelementptr inbounds float, float* %95, i64 %194
  %196 = load float, float* %195, align 4
  %197 = getelementptr inbounds float, float* %117, i64 %194
  %198 = load float, float* %197, align 4
  %199 = fmul float %196, %198
  %200 = fcmp olt float %199, %123
  %201 = select i1 %200, float %123, float %199
  %202 = fcmp ogt float %201, %124
  %203 = select i1 %202, float %124, float %201
  %204 = getelementptr inbounds float, float* %118, i64 %194
  store float %203, float* %204, align 4
  %205 = add nuw nsw i64 %194, 1
  %206 = getelementptr inbounds float, float* %95, i64 %205
  %207 = load float, float* %206, align 4
  %208 = getelementptr inbounds float, float* %117, i64 %205
  %209 = load float, float* %208, align 4
  %210 = fmul float %207, %209
  %211 = fcmp olt float %210, %123
  %212 = select i1 %211, float %123, float %210
  %213 = fcmp ogt float %212, %124
  %214 = select i1 %213, float %124, float %212
  %215 = getelementptr inbounds float, float* %118, i64 %205
  store float %214, float* %215, align 4
  %216 = add nuw nsw i64 %194, 2
  %217 = icmp eq i64 %216, %69
  br i1 %217, label %218, label %193, !llvm.loop !466

218:                                              ; preds = %190, %193, %174
  %219 = getelementptr inbounds float, float* %117, i64 %66
  %220 = getelementptr inbounds float, float* %118, i64 %66
  %221 = add nuw nsw i32 %116, 1
  %222 = icmp eq i32 %221, %38
  %223 = add i64 %115, 1
  br i1 %222, label %107, label %114

224:                                              ; preds = %233, %44
  %225 = phi i32 [ 0, %44 ], [ %237, %233 ]
  %226 = phi float* [ %30, %44 ], [ %236, %233 ]
  %227 = phi float* [ %29, %44 ], [ %235, %233 ]
  %228 = phi float* [ %6, %44 ], [ %234, %233 ]
  br i1 %45, label %229, label %233

229:                                              ; preds = %224, %239
  %230 = phi i32 [ %243, %239 ], [ 0, %224 ]
  %231 = phi float* [ %241, %239 ], [ %227, %224 ]
  %232 = phi float* [ %240, %239 ], [ %228, %224 ]
  br i1 %46, label %245, label %239

233:                                              ; preds = %239, %224
  %234 = phi float* [ %228, %224 ], [ %240, %239 ]
  %235 = phi float* [ %227, %224 ], [ %241, %239 ]
  %236 = phi float* [ null, %224 ], [ %242, %239 ]
  %237 = add nuw nsw i32 %225, 1
  %238 = icmp eq i32 %237, %32
  br i1 %238, label %342, label %224

239:                                              ; preds = %335, %229
  %240 = phi float* [ %232, %229 ], [ %337, %335 ]
  %241 = phi float* [ %231, %229 ], [ %338, %335 ]
  %242 = phi float* [ %226, %229 ], [ %336, %335 ]
  %243 = add nuw nsw i32 %230, 1
  %244 = icmp eq i32 %243, %34
  br i1 %244, label %233, label %229

245:                                              ; preds = %229, %335
  %246 = phi i64 [ %341, %335 ], [ 0, %229 ]
  %247 = phi i32 [ %339, %335 ], [ 0, %229 ]
  %248 = phi float* [ %336, %335 ], [ %226, %229 ]
  %249 = phi float* [ %338, %335 ], [ %231, %229 ]
  %250 = phi float* [ %337, %335 ], [ %232, %229 ]
  %251 = mul i64 %246, %47
  %252 = getelementptr float, float* %232, i64 %251
  %253 = bitcast float* %252 to i8*
  %254 = add i64 %251, %51
  %255 = getelementptr float, float* %232, i64 %254
  %256 = getelementptr float, float* %226, i64 %251
  %257 = getelementptr float, float* %226, i64 %254
  %258 = load float, float* %249, align 4
  br i1 %48, label %259, label %335

259:                                              ; preds = %245
  br i1 %55, label %292, label %260

260:                                              ; preds = %259
  %261 = icmp ult float* %252, %257
  %262 = icmp ult float* %256, %255
  %263 = and i1 %261, %262
  %264 = icmp ugt i8* %54, %253
  %265 = icmp ult float* %50, %255
  %266 = and i1 %264, %265
  %267 = or i1 %263, %266
  br i1 %267, label %292, label %268

268:                                              ; preds = %260
  %269 = insertelement <4 x float> undef, float %258, i32 0
  %270 = shufflevector <4 x float> %269, <4 x float> undef, <4 x i32> zeroinitializer
  %271 = load float, float* %49, align 4, !alias.scope !467
  %272 = insertelement <4 x float> undef, float %271, i32 0
  %273 = shufflevector <4 x float> %272, <4 x float> undef, <4 x i32> zeroinitializer
  %274 = load float, float* %50, align 4, !alias.scope !467
  %275 = insertelement <4 x float> undef, float %274, i32 0
  %276 = shufflevector <4 x float> %275, <4 x float> undef, <4 x i32> zeroinitializer
  br label %277

277:                                              ; preds = %277, %268
  %278 = phi i64 [ 0, %268 ], [ %289, %277 ]
  %279 = getelementptr inbounds float, float* %248, i64 %278
  %280 = bitcast float* %279 to <4 x float>*
  %281 = load <4 x float>, <4 x float>* %280, align 4, !alias.scope !470
  %282 = fmul <4 x float> %270, %281
  %283 = fcmp olt <4 x float> %282, %273
  %284 = select <4 x i1> %283, <4 x float> %273, <4 x float> %282
  %285 = fcmp ogt <4 x float> %284, %276
  %286 = select <4 x i1> %285, <4 x float> %276, <4 x float> %284
  %287 = getelementptr inbounds float, float* %250, i64 %278
  %288 = bitcast float* %287 to <4 x float>*
  store <4 x float> %286, <4 x float>* %288, align 4, !alias.scope !472, !noalias !474
  %289 = add i64 %278, 4
  %290 = icmp eq i64 %289, %56
  br i1 %290, label %291, label %277, !llvm.loop !475

291:                                              ; preds = %277
  br i1 %57, label %335, label %292

292:                                              ; preds = %291, %260, %259
  %293 = phi i64 [ 0, %260 ], [ 0, %259 ], [ %56, %291 ]
  %294 = xor i64 %293, -1
  br i1 %59, label %307, label %295

295:                                              ; preds = %292
  %296 = getelementptr inbounds float, float* %248, i64 %293
  %297 = load float, float* %296, align 4
  %298 = fmul float %258, %297
  %299 = load float, float* %49, align 4
  %300 = load float, float* %50, align 4
  %301 = fcmp olt float %298, %299
  %302 = select i1 %301, float %299, float %298
  %303 = fcmp ogt float %302, %300
  %304 = select i1 %303, float %300, float %302
  %305 = getelementptr inbounds float, float* %250, i64 %293
  store float %304, float* %305, align 4
  %306 = or i64 %293, 1
  br label %307

307:                                              ; preds = %295, %292
  %308 = phi i64 [ %306, %295 ], [ %293, %292 ]
  %309 = icmp eq i64 %294, %60
  br i1 %309, label %335, label %310

310:                                              ; preds = %307, %310
  %311 = phi i64 [ %333, %310 ], [ %308, %307 ]
  %312 = getelementptr inbounds float, float* %248, i64 %311
  %313 = load float, float* %312, align 4
  %314 = fmul float %258, %313
  %315 = load float, float* %49, align 4
  %316 = load float, float* %50, align 4
  %317 = fcmp olt float %314, %315
  %318 = select i1 %317, float %315, float %314
  %319 = fcmp ogt float %318, %316
  %320 = select i1 %319, float %316, float %318
  %321 = getelementptr inbounds float, float* %250, i64 %311
  store float %320, float* %321, align 4
  %322 = add nuw nsw i64 %311, 1
  %323 = getelementptr inbounds float, float* %248, i64 %322
  %324 = load float, float* %323, align 4
  %325 = fmul float %258, %324
  %326 = load float, float* %49, align 4
  %327 = load float, float* %50, align 4
  %328 = fcmp olt float %325, %326
  %329 = select i1 %328, float %326, float %325
  %330 = fcmp ogt float %329, %327
  %331 = select i1 %330, float %327, float %329
  %332 = getelementptr inbounds float, float* %250, i64 %322
  store float %331, float* %332, align 4
  %333 = add nuw nsw i64 %311, 2
  %334 = icmp eq i64 %333, %51
  br i1 %334, label %335, label %310, !llvm.loop !476

335:                                              ; preds = %307, %310, %291, %245
  %336 = getelementptr inbounds float, float* %248, i64 %47
  %337 = getelementptr inbounds float, float* %250, i64 %47
  %338 = getelementptr inbounds float, float* %249, i64 1
  %339 = add nuw nsw i32 %247, 1
  %340 = icmp eq i32 %339, %36
  %341 = add i64 %246, 1
  br i1 %340, label %239, label %245

342:                                              ; preds = %233, %85, %43, %61
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %14) #11
  br label %343

343:                                              ; preds = %342, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite21optimized_integer_ops20BroadcastMulDispatchERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKaS6_S8_S6_Pa(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #7 comdat {
  %8 = alloca %"struct.tflite::ArithmeticParams", align 4
  %9 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 0
  %10 = load i8, i8* %9, align 4
  %11 = icmp eq i8 %10, 4
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  tail call void @_ZN6tflite21reference_integer_ops18BroadcastMul4DSlowIaEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* dereferenceable(80) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %1, i8* %2, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, i8* %4, %"class.tflite::RuntimeShape"* dereferenceable(32) %5, i8* %6)
  br label %273

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %14) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %14, i8* align 4 %9, i64 80, i1 false) #11
  %15 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 1
  store i32 %16, i32* %17, align 4
  %18 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 7
  %19 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 2
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 7
  %23 = bitcast i32* %22 to <4 x i32>*
  %24 = load <4 x i32>, <4 x i32>* %23, align 4
  %25 = shufflevector <4 x i32> %24, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %26 = bitcast i32* %18 to <4 x i32>*
  store <4 x i32> %25, <4 x i32>* %26, align 4
  %27 = icmp eq i8 %10, 2
  %28 = select i1 %27, %"struct.tflite::ArithmeticParams"* %0, %"struct.tflite::ArithmeticParams"* %8
  %29 = select i1 %27, i8* %2, i8* %4
  %30 = select i1 %27, i8* %4, i8* %2
  %31 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 15, i64 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 15, i64 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 15, i64 2
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 15, i64 3
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 15, i64 4
  %40 = load i32, i32* %39, align 4
  %41 = icmp sgt i32 %40, 1
  %42 = icmp sgt i32 %32, 0
  br i1 %41, label %57, label %43

43:                                               ; preds = %13
  br i1 %42, label %44, label %272

44:                                               ; preds = %43
  %45 = icmp sgt i32 %34, 0
  %46 = icmp sgt i32 %36, 0
  %47 = sext i32 %38 to i64
  %48 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 1
  %49 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 2
  %50 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 3
  %51 = icmp sgt i32 %38, 0
  %52 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 4
  %53 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 5
  %54 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 12
  %55 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 11
  %56 = zext i32 %38 to i64
  br label %175

57:                                               ; preds = %13
  br i1 %42, label %58, label %272

58:                                               ; preds = %57
  %59 = icmp sgt i32 %34, 0
  %60 = icmp sgt i32 %36, 0
  %61 = icmp sgt i32 %38, 0
  %62 = sext i32 %40 to i64
  %63 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 2
  %65 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 3
  %66 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 4
  %67 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 5
  %68 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 12
  %69 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 11
  %70 = zext i32 %40 to i64
  br label %71

71:                                               ; preds = %80, %58
  %72 = phi i32 [ 0, %58 ], [ %84, %80 ]
  %73 = phi i8* [ %30, %58 ], [ %83, %80 ]
  %74 = phi i8* [ %29, %58 ], [ %82, %80 ]
  %75 = phi i8* [ %6, %58 ], [ %81, %80 ]
  br i1 %59, label %76, label %80

76:                                               ; preds = %71, %91
  %77 = phi i32 [ %95, %91 ], [ 0, %71 ]
  %78 = phi i8* [ %93, %91 ], [ %74, %71 ]
  %79 = phi i8* [ %92, %91 ], [ %75, %71 ]
  br i1 %60, label %86, label %91

80:                                               ; preds = %91, %71
  %81 = phi i8* [ %75, %71 ], [ %92, %91 ]
  %82 = phi i8* [ %74, %71 ], [ %93, %91 ]
  %83 = phi i8* [ null, %71 ], [ %94, %91 ]
  %84 = add nuw nsw i32 %72, 1
  %85 = icmp eq i32 %84, %32
  br i1 %85, label %272, label %71

86:                                               ; preds = %76, %97
  %87 = phi i32 [ %101, %97 ], [ 0, %76 ]
  %88 = phi i8* [ %99, %97 ], [ %73, %76 ]
  %89 = phi i8* [ %100, %97 ], [ %78, %76 ]
  %90 = phi i8* [ %98, %97 ], [ %79, %76 ]
  br i1 %61, label %103, label %97

91:                                               ; preds = %97, %76
  %92 = phi i8* [ %79, %76 ], [ %98, %97 ]
  %93 = phi i8* [ %78, %76 ], [ %100, %97 ]
  %94 = phi i8* [ %73, %76 ], [ %99, %97 ]
  %95 = add nuw nsw i32 %77, 1
  %96 = icmp eq i32 %95, %34
  br i1 %96, label %80, label %76

97:                                               ; preds = %170, %86
  %98 = phi i8* [ %90, %86 ], [ %172, %170 ]
  %99 = phi i8* [ %88, %86 ], [ %171, %170 ]
  %100 = getelementptr inbounds i8, i8* %89, i64 %62
  %101 = add nuw nsw i32 %87, 1
  %102 = icmp eq i32 %101, %36
  br i1 %102, label %91, label %86

103:                                              ; preds = %86, %170
  %104 = phi i32 [ %173, %170 ], [ 0, %86 ]
  %105 = phi i8* [ %171, %170 ], [ %88, %86 ]
  %106 = phi i8* [ %172, %170 ], [ %90, %86 ]
  br label %107

107:                                              ; preds = %145, %103
  %108 = phi i64 [ 0, %103 ], [ %168, %145 ]
  %109 = load i32, i32* %63, align 4
  %110 = getelementptr inbounds i8, i8* %89, i64 %108
  %111 = load i8, i8* %110, align 1
  %112 = sext i8 %111 to i32
  %113 = add nsw i32 %109, %112
  %114 = load i32, i32* %64, align 4
  %115 = getelementptr inbounds i8, i8* %105, i64 %108
  %116 = load i8, i8* %115, align 1
  %117 = sext i8 %116 to i32
  %118 = add nsw i32 %114, %117
  %119 = load i32, i32* %65, align 4
  %120 = mul nsw i32 %118, %113
  %121 = load i32, i32* %66, align 4
  %122 = load i32, i32* %67, align 4
  %123 = icmp sgt i32 %122, 0
  %124 = sub nsw i32 0, %122
  %125 = select i1 %123, i32 0, i32 %124
  %126 = shl i32 1, %122
  %127 = select i1 %123, i32 %126, i32 1
  %128 = mul nsw i32 %120, %127
  %129 = icmp eq i32 %128, %121
  br i1 %129, label %134, label %130

130:                                              ; preds = %107
  %131 = sext i32 %128 to i64
  %132 = sext i32 %121 to i64
  %133 = mul nsw i64 %131, %132
  br label %138

134:                                              ; preds = %107
  %135 = icmp eq i32 %121, -2147483648
  %136 = sext i32 %121 to i64
  %137 = mul nsw i64 %136, %136
  br i1 %135, label %145, label %138

138:                                              ; preds = %134, %130
  %139 = phi i64 [ %133, %130 ], [ %137, %134 ]
  %140 = icmp sgt i64 %139, -1
  %141 = select i1 %140, i64 1073741824, i64 -1073741823
  %142 = add nsw i64 %141, %139
  %143 = sdiv i64 %142, 2147483648
  %144 = trunc i64 %143 to i32
  br label %145

145:                                              ; preds = %134, %138
  %146 = phi i32 [ %144, %138 ], [ 2147483647, %134 ]
  %147 = zext i32 %125 to i64
  %148 = shl nsw i64 -1, %147
  %149 = trunc i64 %148 to i32
  %150 = xor i32 %149, -1
  %151 = and i32 %146, %150
  %152 = ashr i32 %150, 1
  %153 = lshr i32 %146, 31
  %154 = add nsw i32 %153, %152
  %155 = ashr i32 %146, %125
  %156 = icmp sgt i32 %151, %154
  %157 = zext i1 %156 to i32
  %158 = add i32 %155, %119
  %159 = add i32 %158, %157
  %160 = load i32, i32* %69, align 4
  %161 = icmp slt i32 %160, %159
  %162 = select i1 %161, i32 %159, i32 %160
  %163 = load i32, i32* %68, align 4
  %164 = icmp slt i32 %162, %163
  %165 = select i1 %164, i32 %162, i32 %163
  %166 = trunc i32 %165 to i8
  %167 = getelementptr inbounds i8, i8* %106, i64 %108
  store i8 %166, i8* %167, align 1
  %168 = add nuw nsw i64 %108, 1
  %169 = icmp eq i64 %168, %70
  br i1 %169, label %170, label %107

170:                                              ; preds = %145
  %171 = getelementptr inbounds i8, i8* %105, i64 %62
  %172 = getelementptr inbounds i8, i8* %106, i64 %62
  %173 = add nuw nsw i32 %104, 1
  %174 = icmp eq i32 %173, %38
  br i1 %174, label %97, label %103

175:                                              ; preds = %184, %44
  %176 = phi i32 [ 0, %44 ], [ %188, %184 ]
  %177 = phi i8* [ %30, %44 ], [ %187, %184 ]
  %178 = phi i8* [ %29, %44 ], [ %186, %184 ]
  %179 = phi i8* [ %6, %44 ], [ %185, %184 ]
  br i1 %45, label %180, label %184

180:                                              ; preds = %175, %190
  %181 = phi i32 [ %194, %190 ], [ 0, %175 ]
  %182 = phi i8* [ %192, %190 ], [ %178, %175 ]
  %183 = phi i8* [ %191, %190 ], [ %179, %175 ]
  br i1 %46, label %196, label %190

184:                                              ; preds = %190, %175
  %185 = phi i8* [ %179, %175 ], [ %191, %190 ]
  %186 = phi i8* [ %178, %175 ], [ %192, %190 ]
  %187 = phi i8* [ null, %175 ], [ %193, %190 ]
  %188 = add nuw nsw i32 %176, 1
  %189 = icmp eq i32 %188, %32
  br i1 %189, label %272, label %175

190:                                              ; preds = %266, %180
  %191 = phi i8* [ %183, %180 ], [ %268, %266 ]
  %192 = phi i8* [ %182, %180 ], [ %269, %266 ]
  %193 = phi i8* [ %177, %180 ], [ %267, %266 ]
  %194 = add nuw nsw i32 %181, 1
  %195 = icmp eq i32 %194, %34
  br i1 %195, label %184, label %180

196:                                              ; preds = %180, %266
  %197 = phi i32 [ %270, %266 ], [ 0, %180 ]
  %198 = phi i8* [ %267, %266 ], [ %177, %180 ]
  %199 = phi i8* [ %269, %266 ], [ %182, %180 ]
  %200 = phi i8* [ %268, %266 ], [ %183, %180 ]
  br i1 %51, label %201, label %266

201:                                              ; preds = %196
  %202 = load i32, i32* %48, align 4
  %203 = load i8, i8* %199, align 1
  %204 = sext i8 %203 to i32
  %205 = add nsw i32 %202, %204
  %206 = shl i32 %205, 16
  %207 = ashr exact i32 %206, 16
  br label %208

208:                                              ; preds = %241, %201
  %209 = phi i64 [ 0, %201 ], [ %264, %241 ]
  %210 = load i32, i32* %49, align 4
  %211 = getelementptr inbounds i8, i8* %198, i64 %209
  %212 = load i8, i8* %211, align 1
  %213 = sext i8 %212 to i32
  %214 = add nsw i32 %210, %213
  %215 = load i32, i32* %50, align 4
  %216 = mul nsw i32 %214, %207
  %217 = load i32, i32* %52, align 4
  %218 = load i32, i32* %53, align 4
  %219 = icmp sgt i32 %218, 0
  %220 = sub nsw i32 0, %218
  %221 = select i1 %219, i32 0, i32 %220
  %222 = shl i32 1, %218
  %223 = select i1 %219, i32 %222, i32 1
  %224 = mul nsw i32 %216, %223
  %225 = icmp eq i32 %224, %217
  br i1 %225, label %230, label %226

226:                                              ; preds = %208
  %227 = sext i32 %224 to i64
  %228 = sext i32 %217 to i64
  %229 = mul nsw i64 %227, %228
  br label %234

230:                                              ; preds = %208
  %231 = icmp eq i32 %217, -2147483648
  %232 = sext i32 %217 to i64
  %233 = mul nsw i64 %232, %232
  br i1 %231, label %241, label %234

234:                                              ; preds = %230, %226
  %235 = phi i64 [ %229, %226 ], [ %233, %230 ]
  %236 = icmp sgt i64 %235, -1
  %237 = select i1 %236, i64 1073741824, i64 -1073741823
  %238 = add nsw i64 %237, %235
  %239 = sdiv i64 %238, 2147483648
  %240 = trunc i64 %239 to i32
  br label %241

241:                                              ; preds = %230, %234
  %242 = phi i32 [ %240, %234 ], [ 2147483647, %230 ]
  %243 = zext i32 %221 to i64
  %244 = shl nsw i64 -1, %243
  %245 = trunc i64 %244 to i32
  %246 = xor i32 %245, -1
  %247 = and i32 %242, %246
  %248 = ashr i32 %246, 1
  %249 = lshr i32 %242, 31
  %250 = add nsw i32 %249, %248
  %251 = ashr i32 %242, %221
  %252 = icmp sgt i32 %247, %250
  %253 = zext i1 %252 to i32
  %254 = add i32 %251, %215
  %255 = add i32 %254, %253
  %256 = load i32, i32* %55, align 4
  %257 = icmp slt i32 %256, %255
  %258 = select i1 %257, i32 %255, i32 %256
  %259 = load i32, i32* %54, align 4
  %260 = icmp slt i32 %258, %259
  %261 = select i1 %260, i32 %258, i32 %259
  %262 = trunc i32 %261 to i8
  %263 = getelementptr inbounds i8, i8* %200, i64 %209
  store i8 %262, i8* %263, align 1
  %264 = add nuw nsw i64 %209, 1
  %265 = icmp eq i64 %264, %56
  br i1 %265, label %266, label %208

266:                                              ; preds = %241, %196
  %267 = getelementptr inbounds i8, i8* %198, i64 %47
  %268 = getelementptr inbounds i8, i8* %200, i64 %47
  %269 = getelementptr inbounds i8, i8* %199, i64 1
  %270 = add nuw nsw i32 %197, 1
  %271 = icmp eq i32 %270, %36
  br i1 %271, label %190, label %196

272:                                              ; preds = %184, %80, %43, %57
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %14) #11
  br label %273

273:                                              ; preds = %272, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite21optimized_integer_ops3MulERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKaS6_S8_S6_Pa(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #7 comdat {
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 5
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  br i1 %10, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %union.anon, %union.anon* %11, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  br label %18

15:                                               ; preds = %7
  %16 = bitcast %union.anon* %11 to i32*
  %17 = icmp sgt i32 %9, 0
  br i1 %17, label %18, label %118

18:                                               ; preds = %15, %12
  %19 = phi i32* [ %14, %12 ], [ %16, %15 ]
  %20 = zext i32 %9 to i64
  %21 = icmp ult i32 %9, 8
  br i1 %21, label %107, label %22

22:                                               ; preds = %18
  %23 = and i64 %20, 4294967288
  %24 = add nsw i64 %23, -8
  %25 = lshr exact i64 %24, 3
  %26 = add nuw nsw i64 %25, 1
  %27 = and i64 %26, 3
  %28 = icmp ult i64 %24, 24
  br i1 %28, label %74, label %29

29:                                               ; preds = %22
  %30 = sub nsw i64 %26, %27
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %71, %31 ]
  %33 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %29 ], [ %69, %31 ]
  %34 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %29 ], [ %70, %31 ]
  %35 = phi i64 [ %30, %29 ], [ %72, %31 ]
  %36 = getelementptr inbounds i32, i32* %19, i64 %32
  %37 = bitcast i32* %36 to <4 x i32>*
  %38 = load <4 x i32>, <4 x i32>* %37, align 4
  %39 = getelementptr inbounds i32, i32* %36, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  %41 = load <4 x i32>, <4 x i32>* %40, align 4
  %42 = mul nsw <4 x i32> %38, %33
  %43 = mul nsw <4 x i32> %41, %34
  %44 = or i64 %32, 8
  %45 = getelementptr inbounds i32, i32* %19, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  %47 = load <4 x i32>, <4 x i32>* %46, align 4
  %48 = getelementptr inbounds i32, i32* %45, i64 4
  %49 = bitcast i32* %48 to <4 x i32>*
  %50 = load <4 x i32>, <4 x i32>* %49, align 4
  %51 = mul nsw <4 x i32> %47, %42
  %52 = mul nsw <4 x i32> %50, %43
  %53 = or i64 %32, 16
  %54 = getelementptr inbounds i32, i32* %19, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  %56 = load <4 x i32>, <4 x i32>* %55, align 4
  %57 = getelementptr inbounds i32, i32* %54, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  %59 = load <4 x i32>, <4 x i32>* %58, align 4
  %60 = mul nsw <4 x i32> %56, %51
  %61 = mul nsw <4 x i32> %59, %52
  %62 = or i64 %32, 24
  %63 = getelementptr inbounds i32, i32* %19, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  %65 = load <4 x i32>, <4 x i32>* %64, align 4
  %66 = getelementptr inbounds i32, i32* %63, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  %68 = load <4 x i32>, <4 x i32>* %67, align 4
  %69 = mul nsw <4 x i32> %65, %60
  %70 = mul nsw <4 x i32> %68, %61
  %71 = add i64 %32, 32
  %72 = add i64 %35, -4
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %31, !llvm.loop !477

74:                                               ; preds = %31, %22
  %75 = phi <4 x i32> [ undef, %22 ], [ %69, %31 ]
  %76 = phi <4 x i32> [ undef, %22 ], [ %70, %31 ]
  %77 = phi i64 [ 0, %22 ], [ %71, %31 ]
  %78 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %22 ], [ %69, %31 ]
  %79 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %22 ], [ %70, %31 ]
  %80 = icmp eq i64 %27, 0
  br i1 %80, label %97, label %81

81:                                               ; preds = %74, %81
  %82 = phi i64 [ %94, %81 ], [ %77, %74 ]
  %83 = phi <4 x i32> [ %92, %81 ], [ %78, %74 ]
  %84 = phi <4 x i32> [ %93, %81 ], [ %79, %74 ]
  %85 = phi i64 [ %95, %81 ], [ %27, %74 ]
  %86 = getelementptr inbounds i32, i32* %19, i64 %82
  %87 = bitcast i32* %86 to <4 x i32>*
  %88 = load <4 x i32>, <4 x i32>* %87, align 4
  %89 = getelementptr inbounds i32, i32* %86, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4
  %92 = mul nsw <4 x i32> %88, %83
  %93 = mul nsw <4 x i32> %91, %84
  %94 = add i64 %82, 8
  %95 = add i64 %85, -1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %81, !llvm.loop !478

97:                                               ; preds = %81, %74
  %98 = phi <4 x i32> [ %75, %74 ], [ %92, %81 ]
  %99 = phi <4 x i32> [ %76, %74 ], [ %93, %81 ]
  %100 = mul <4 x i32> %99, %98
  %101 = shufflevector <4 x i32> %100, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %102 = mul <4 x i32> %100, %101
  %103 = shufflevector <4 x i32> %102, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %104 = mul <4 x i32> %102, %103
  %105 = extractelement <4 x i32> %104, i32 0
  %106 = icmp eq i64 %23, %20
  br i1 %106, label %118, label %107

107:                                              ; preds = %97, %18
  %108 = phi i64 [ 0, %18 ], [ %23, %97 ]
  %109 = phi i32 [ 1, %18 ], [ %105, %97 ]
  br label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %116, %110 ], [ %108, %107 ]
  %112 = phi i32 [ %115, %110 ], [ %109, %107 ]
  %113 = getelementptr inbounds i32, i32* %19, i64 %111
  %114 = load i32, i32* %113, align 4
  %115 = mul nsw i32 %114, %112
  %116 = add nuw nsw i64 %111, 1
  %117 = icmp eq i64 %116, %20
  br i1 %117, label %118, label %110, !llvm.loop !479

118:                                              ; preds = %110, %97, %15
  %119 = phi i32 [ 1, %15 ], [ %105, %97 ], [ %115, %110 ]
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  br i1 %122, label %124, label %127

124:                                              ; preds = %118
  %125 = getelementptr inbounds %union.anon, %union.anon* %123, i64 0, i32 0
  %126 = load i32*, i32** %125, align 8
  br label %130

127:                                              ; preds = %118
  %128 = bitcast %union.anon* %123 to i32*
  %129 = icmp sgt i32 %121, 0
  br i1 %129, label %130, label %230

130:                                              ; preds = %127, %124
  %131 = phi i32* [ %126, %124 ], [ %128, %127 ]
  %132 = zext i32 %121 to i64
  %133 = icmp ult i32 %121, 8
  br i1 %133, label %219, label %134

134:                                              ; preds = %130
  %135 = and i64 %132, 4294967288
  %136 = add nsw i64 %135, -8
  %137 = lshr exact i64 %136, 3
  %138 = add nuw nsw i64 %137, 1
  %139 = and i64 %138, 3
  %140 = icmp ult i64 %136, 24
  br i1 %140, label %186, label %141

141:                                              ; preds = %134
  %142 = sub nsw i64 %138, %139
  br label %143

143:                                              ; preds = %143, %141
  %144 = phi i64 [ 0, %141 ], [ %183, %143 ]
  %145 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %141 ], [ %181, %143 ]
  %146 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %141 ], [ %182, %143 ]
  %147 = phi i64 [ %142, %141 ], [ %184, %143 ]
  %148 = getelementptr inbounds i32, i32* %131, i64 %144
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4
  %151 = getelementptr inbounds i32, i32* %148, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4
  %154 = mul nsw <4 x i32> %150, %145
  %155 = mul nsw <4 x i32> %153, %146
  %156 = or i64 %144, 8
  %157 = getelementptr inbounds i32, i32* %131, i64 %156
  %158 = bitcast i32* %157 to <4 x i32>*
  %159 = load <4 x i32>, <4 x i32>* %158, align 4
  %160 = getelementptr inbounds i32, i32* %157, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  %162 = load <4 x i32>, <4 x i32>* %161, align 4
  %163 = mul nsw <4 x i32> %159, %154
  %164 = mul nsw <4 x i32> %162, %155
  %165 = or i64 %144, 16
  %166 = getelementptr inbounds i32, i32* %131, i64 %165
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = getelementptr inbounds i32, i32* %166, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 4
  %172 = mul nsw <4 x i32> %168, %163
  %173 = mul nsw <4 x i32> %171, %164
  %174 = or i64 %144, 24
  %175 = getelementptr inbounds i32, i32* %131, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = getelementptr inbounds i32, i32* %175, i64 4
  %179 = bitcast i32* %178 to <4 x i32>*
  %180 = load <4 x i32>, <4 x i32>* %179, align 4
  %181 = mul nsw <4 x i32> %177, %172
  %182 = mul nsw <4 x i32> %180, %173
  %183 = add i64 %144, 32
  %184 = add i64 %147, -4
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %143, !llvm.loop !480

186:                                              ; preds = %143, %134
  %187 = phi <4 x i32> [ undef, %134 ], [ %181, %143 ]
  %188 = phi <4 x i32> [ undef, %134 ], [ %182, %143 ]
  %189 = phi i64 [ 0, %134 ], [ %183, %143 ]
  %190 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %134 ], [ %181, %143 ]
  %191 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %134 ], [ %182, %143 ]
  %192 = icmp eq i64 %139, 0
  br i1 %192, label %209, label %193

193:                                              ; preds = %186, %193
  %194 = phi i64 [ %206, %193 ], [ %189, %186 ]
  %195 = phi <4 x i32> [ %204, %193 ], [ %190, %186 ]
  %196 = phi <4 x i32> [ %205, %193 ], [ %191, %186 ]
  %197 = phi i64 [ %207, %193 ], [ %139, %186 ]
  %198 = getelementptr inbounds i32, i32* %131, i64 %194
  %199 = bitcast i32* %198 to <4 x i32>*
  %200 = load <4 x i32>, <4 x i32>* %199, align 4
  %201 = getelementptr inbounds i32, i32* %198, i64 4
  %202 = bitcast i32* %201 to <4 x i32>*
  %203 = load <4 x i32>, <4 x i32>* %202, align 4
  %204 = mul nsw <4 x i32> %200, %195
  %205 = mul nsw <4 x i32> %203, %196
  %206 = add i64 %194, 8
  %207 = add i64 %197, -1
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %193, !llvm.loop !481

209:                                              ; preds = %193, %186
  %210 = phi <4 x i32> [ %187, %186 ], [ %204, %193 ]
  %211 = phi <4 x i32> [ %188, %186 ], [ %205, %193 ]
  %212 = mul <4 x i32> %211, %210
  %213 = shufflevector <4 x i32> %212, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %214 = mul <4 x i32> %212, %213
  %215 = shufflevector <4 x i32> %214, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %216 = mul <4 x i32> %214, %215
  %217 = extractelement <4 x i32> %216, i32 0
  %218 = icmp eq i64 %135, %132
  br i1 %218, label %230, label %219

219:                                              ; preds = %209, %130
  %220 = phi i64 [ 0, %130 ], [ %135, %209 ]
  %221 = phi i32 [ 1, %130 ], [ %217, %209 ]
  br label %222

222:                                              ; preds = %219, %222
  %223 = phi i64 [ %228, %222 ], [ %220, %219 ]
  %224 = phi i32 [ %227, %222 ], [ %221, %219 ]
  %225 = getelementptr inbounds i32, i32* %131, i64 %223
  %226 = load i32, i32* %225, align 4
  %227 = mul nsw i32 %226, %224
  %228 = add nuw nsw i64 %223, 1
  %229 = icmp eq i64 %228, %132
  br i1 %229, label %230, label %222, !llvm.loop !482

230:                                              ; preds = %222, %209, %127
  %231 = phi i32 [ 1, %127 ], [ %217, %209 ], [ %227, %222 ]
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %233 = load i32, i32* %232, align 8
  %234 = icmp sgt i32 %233, 5
  %235 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %234, label %236, label %239

236:                                              ; preds = %230
  %237 = getelementptr inbounds %union.anon, %union.anon* %235, i64 0, i32 0
  %238 = load i32*, i32** %237, align 8
  br label %242

239:                                              ; preds = %230
  %240 = bitcast %union.anon* %235 to i32*
  %241 = icmp sgt i32 %233, 0
  br i1 %241, label %242, label %342

242:                                              ; preds = %239, %236
  %243 = phi i32* [ %238, %236 ], [ %240, %239 ]
  %244 = zext i32 %233 to i64
  %245 = icmp ult i32 %233, 8
  br i1 %245, label %331, label %246

246:                                              ; preds = %242
  %247 = and i64 %244, 4294967288
  %248 = add nsw i64 %247, -8
  %249 = lshr exact i64 %248, 3
  %250 = add nuw nsw i64 %249, 1
  %251 = and i64 %250, 3
  %252 = icmp ult i64 %248, 24
  br i1 %252, label %298, label %253

253:                                              ; preds = %246
  %254 = sub nsw i64 %250, %251
  br label %255

255:                                              ; preds = %255, %253
  %256 = phi i64 [ 0, %253 ], [ %295, %255 ]
  %257 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %253 ], [ %293, %255 ]
  %258 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %253 ], [ %294, %255 ]
  %259 = phi i64 [ %254, %253 ], [ %296, %255 ]
  %260 = getelementptr inbounds i32, i32* %243, i64 %256
  %261 = bitcast i32* %260 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4
  %263 = getelementptr inbounds i32, i32* %260, i64 4
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4
  %266 = mul nsw <4 x i32> %262, %257
  %267 = mul nsw <4 x i32> %265, %258
  %268 = or i64 %256, 8
  %269 = getelementptr inbounds i32, i32* %243, i64 %268
  %270 = bitcast i32* %269 to <4 x i32>*
  %271 = load <4 x i32>, <4 x i32>* %270, align 4
  %272 = getelementptr inbounds i32, i32* %269, i64 4
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4
  %275 = mul nsw <4 x i32> %271, %266
  %276 = mul nsw <4 x i32> %274, %267
  %277 = or i64 %256, 16
  %278 = getelementptr inbounds i32, i32* %243, i64 %277
  %279 = bitcast i32* %278 to <4 x i32>*
  %280 = load <4 x i32>, <4 x i32>* %279, align 4
  %281 = getelementptr inbounds i32, i32* %278, i64 4
  %282 = bitcast i32* %281 to <4 x i32>*
  %283 = load <4 x i32>, <4 x i32>* %282, align 4
  %284 = mul nsw <4 x i32> %280, %275
  %285 = mul nsw <4 x i32> %283, %276
  %286 = or i64 %256, 24
  %287 = getelementptr inbounds i32, i32* %243, i64 %286
  %288 = bitcast i32* %287 to <4 x i32>*
  %289 = load <4 x i32>, <4 x i32>* %288, align 4
  %290 = getelementptr inbounds i32, i32* %287, i64 4
  %291 = bitcast i32* %290 to <4 x i32>*
  %292 = load <4 x i32>, <4 x i32>* %291, align 4
  %293 = mul nsw <4 x i32> %289, %284
  %294 = mul nsw <4 x i32> %292, %285
  %295 = add i64 %256, 32
  %296 = add i64 %259, -4
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %255, !llvm.loop !483

298:                                              ; preds = %255, %246
  %299 = phi <4 x i32> [ undef, %246 ], [ %293, %255 ]
  %300 = phi <4 x i32> [ undef, %246 ], [ %294, %255 ]
  %301 = phi i64 [ 0, %246 ], [ %295, %255 ]
  %302 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %246 ], [ %293, %255 ]
  %303 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %246 ], [ %294, %255 ]
  %304 = icmp eq i64 %251, 0
  br i1 %304, label %321, label %305

305:                                              ; preds = %298, %305
  %306 = phi i64 [ %318, %305 ], [ %301, %298 ]
  %307 = phi <4 x i32> [ %316, %305 ], [ %302, %298 ]
  %308 = phi <4 x i32> [ %317, %305 ], [ %303, %298 ]
  %309 = phi i64 [ %319, %305 ], [ %251, %298 ]
  %310 = getelementptr inbounds i32, i32* %243, i64 %306
  %311 = bitcast i32* %310 to <4 x i32>*
  %312 = load <4 x i32>, <4 x i32>* %311, align 4
  %313 = getelementptr inbounds i32, i32* %310, i64 4
  %314 = bitcast i32* %313 to <4 x i32>*
  %315 = load <4 x i32>, <4 x i32>* %314, align 4
  %316 = mul nsw <4 x i32> %312, %307
  %317 = mul nsw <4 x i32> %315, %308
  %318 = add i64 %306, 8
  %319 = add i64 %309, -1
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %305, !llvm.loop !484

321:                                              ; preds = %305, %298
  %322 = phi <4 x i32> [ %299, %298 ], [ %316, %305 ]
  %323 = phi <4 x i32> [ %300, %298 ], [ %317, %305 ]
  %324 = mul <4 x i32> %323, %322
  %325 = shufflevector <4 x i32> %324, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %326 = mul <4 x i32> %324, %325
  %327 = shufflevector <4 x i32> %326, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %328 = mul <4 x i32> %326, %327
  %329 = extractelement <4 x i32> %328, i32 0
  %330 = icmp eq i64 %247, %244
  br i1 %330, label %342, label %331

331:                                              ; preds = %321, %242
  %332 = phi i64 [ 0, %242 ], [ %247, %321 ]
  %333 = phi i32 [ 1, %242 ], [ %329, %321 ]
  br label %334

334:                                              ; preds = %331, %334
  %335 = phi i64 [ %340, %334 ], [ %332, %331 ]
  %336 = phi i32 [ %339, %334 ], [ %333, %331 ]
  %337 = getelementptr inbounds i32, i32* %243, i64 %335
  %338 = load i32, i32* %337, align 4
  %339 = mul nsw i32 %338, %336
  %340 = add nuw nsw i64 %335, 1
  %341 = icmp eq i64 %340, %244
  br i1 %341, label %342, label %334, !llvm.loop !485

342:                                              ; preds = %334, %321, %239
  %343 = phi i32 [ 1, %239 ], [ %329, %321 ], [ %339, %334 ]
  %344 = icmp eq i32 %119, %231
  br i1 %344, label %346, label %345

345:                                              ; preds = %342
  tail call void @abort() #12
  unreachable

346:                                              ; preds = %342
  %347 = icmp eq i32 %119, %343
  br i1 %347, label %349, label %348

348:                                              ; preds = %346
  tail call void @abort() #12
  unreachable

349:                                              ; preds = %346
  %350 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 1
  %351 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 2
  %352 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 3
  %353 = icmp sgt i32 %119, 0
  br i1 %353, label %354, label %423

354:                                              ; preds = %349
  %355 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 4
  %356 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 5
  %357 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 12
  %358 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 11
  %359 = zext i32 %119 to i64
  br label %360

360:                                              ; preds = %398, %354
  %361 = phi i64 [ 0, %354 ], [ %421, %398 ]
  %362 = load i32, i32* %350, align 4
  %363 = getelementptr inbounds i8, i8* %2, i64 %361
  %364 = load i8, i8* %363, align 1
  %365 = sext i8 %364 to i32
  %366 = add nsw i32 %362, %365
  %367 = load i32, i32* %351, align 4
  %368 = getelementptr inbounds i8, i8* %4, i64 %361
  %369 = load i8, i8* %368, align 1
  %370 = sext i8 %369 to i32
  %371 = add nsw i32 %367, %370
  %372 = load i32, i32* %352, align 4
  %373 = mul nsw i32 %371, %366
  %374 = load i32, i32* %355, align 4
  %375 = load i32, i32* %356, align 4
  %376 = icmp sgt i32 %375, 0
  %377 = sub nsw i32 0, %375
  %378 = select i1 %376, i32 0, i32 %377
  %379 = shl i32 1, %375
  %380 = select i1 %376, i32 %379, i32 1
  %381 = mul nsw i32 %373, %380
  %382 = icmp eq i32 %381, %374
  br i1 %382, label %387, label %383

383:                                              ; preds = %360
  %384 = sext i32 %381 to i64
  %385 = sext i32 %374 to i64
  %386 = mul nsw i64 %384, %385
  br label %391

387:                                              ; preds = %360
  %388 = icmp eq i32 %374, -2147483648
  %389 = sext i32 %374 to i64
  %390 = mul nsw i64 %389, %389
  br i1 %388, label %398, label %391

391:                                              ; preds = %387, %383
  %392 = phi i64 [ %386, %383 ], [ %390, %387 ]
  %393 = icmp sgt i64 %392, -1
  %394 = select i1 %393, i64 1073741824, i64 -1073741823
  %395 = add nsw i64 %394, %392
  %396 = sdiv i64 %395, 2147483648
  %397 = trunc i64 %396 to i32
  br label %398

398:                                              ; preds = %391, %387
  %399 = phi i32 [ %397, %391 ], [ 2147483647, %387 ]
  %400 = zext i32 %378 to i64
  %401 = shl nsw i64 -1, %400
  %402 = trunc i64 %401 to i32
  %403 = xor i32 %402, -1
  %404 = and i32 %399, %403
  %405 = ashr i32 %403, 1
  %406 = lshr i32 %399, 31
  %407 = add nsw i32 %406, %405
  %408 = ashr i32 %399, %378
  %409 = icmp sgt i32 %404, %407
  %410 = zext i1 %409 to i32
  %411 = add i32 %408, %372
  %412 = add i32 %411, %410
  %413 = load i32, i32* %358, align 4
  %414 = icmp slt i32 %413, %412
  %415 = select i1 %414, i32 %412, i32 %413
  %416 = load i32, i32* %357, align 4
  %417 = icmp slt i32 %415, %416
  %418 = select i1 %417, i32 %415, i32 %416
  %419 = trunc i32 %418 to i8
  %420 = getelementptr inbounds i8, i8* %6, i64 %361
  store i8 %419, i8* %420, align 1
  %421 = add nuw nsw i64 %361, 1
  %422 = icmp eq i64 %421, %359
  br i1 %422, label %423, label %360

423:                                              ; preds = %398, %349
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops20BroadcastMulDispatchIhEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #7 comdat {
  %8 = alloca %"struct.tflite::ArithmeticParams", align 4
  %9 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 0
  %10 = load i8, i8* %9, align 4
  %11 = icmp eq i8 %10, 4
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  tail call void @_ZN6tflite13reference_ops18BroadcastMul4DSlowERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS6_S8_S6_Ph(%"struct.tflite::ArithmeticParams"* dereferenceable(80) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %1, i8* %2, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, i8* %4, %"class.tflite::RuntimeShape"* dereferenceable(32) %5, i8* %6)
  br label %268

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %14) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %14, i8* align 4 %9, i64 80, i1 false) #11
  %15 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 1
  store i32 %16, i32* %17, align 4
  %18 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 7
  %19 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 2
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 7
  %23 = bitcast i32* %22 to <4 x i32>*
  %24 = load <4 x i32>, <4 x i32>* %23, align 4
  %25 = shufflevector <4 x i32> %24, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %26 = bitcast i32* %18 to <4 x i32>*
  store <4 x i32> %25, <4 x i32>* %26, align 4
  %27 = icmp eq i8 %10, 2
  %28 = select i1 %27, %"struct.tflite::ArithmeticParams"* %0, %"struct.tflite::ArithmeticParams"* %8
  %29 = select i1 %27, i8* %2, i8* %4
  %30 = select i1 %27, i8* %4, i8* %2
  %31 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 15, i64 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 15, i64 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 15, i64 2
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 15, i64 3
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 15, i64 4
  %40 = load i32, i32* %39, align 4
  %41 = icmp sgt i32 %40, 1
  %42 = icmp sgt i32 %32, 0
  br i1 %41, label %57, label %43

43:                                               ; preds = %13
  br i1 %42, label %44, label %267

44:                                               ; preds = %43
  %45 = icmp sgt i32 %34, 0
  %46 = icmp sgt i32 %36, 0
  %47 = sext i32 %38 to i64
  %48 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 1
  %49 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 2
  %50 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 3
  %51 = icmp sgt i32 %38, 0
  %52 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 4
  %53 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 5
  %54 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 12
  %55 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 11
  %56 = zext i32 %38 to i64
  br label %175

57:                                               ; preds = %13
  br i1 %42, label %58, label %267

58:                                               ; preds = %57
  %59 = icmp sgt i32 %34, 0
  %60 = icmp sgt i32 %36, 0
  %61 = icmp sgt i32 %38, 0
  %62 = sext i32 %40 to i64
  %63 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 2
  %65 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 3
  %66 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 4
  %67 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 5
  %68 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 12
  %69 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %28, i64 0, i32 11
  %70 = zext i32 %40 to i64
  br label %71

71:                                               ; preds = %80, %58
  %72 = phi i32 [ 0, %58 ], [ %84, %80 ]
  %73 = phi i8* [ %30, %58 ], [ %83, %80 ]
  %74 = phi i8* [ %29, %58 ], [ %82, %80 ]
  %75 = phi i8* [ %6, %58 ], [ %81, %80 ]
  br i1 %59, label %76, label %80

76:                                               ; preds = %71, %91
  %77 = phi i32 [ %95, %91 ], [ 0, %71 ]
  %78 = phi i8* [ %93, %91 ], [ %74, %71 ]
  %79 = phi i8* [ %92, %91 ], [ %75, %71 ]
  br i1 %60, label %86, label %91

80:                                               ; preds = %91, %71
  %81 = phi i8* [ %75, %71 ], [ %92, %91 ]
  %82 = phi i8* [ %74, %71 ], [ %93, %91 ]
  %83 = phi i8* [ null, %71 ], [ %94, %91 ]
  %84 = add nuw nsw i32 %72, 1
  %85 = icmp eq i32 %84, %32
  br i1 %85, label %267, label %71

86:                                               ; preds = %76, %97
  %87 = phi i32 [ %101, %97 ], [ 0, %76 ]
  %88 = phi i8* [ %99, %97 ], [ %73, %76 ]
  %89 = phi i8* [ %100, %97 ], [ %78, %76 ]
  %90 = phi i8* [ %98, %97 ], [ %79, %76 ]
  br i1 %61, label %103, label %97

91:                                               ; preds = %97, %76
  %92 = phi i8* [ %79, %76 ], [ %98, %97 ]
  %93 = phi i8* [ %78, %76 ], [ %100, %97 ]
  %94 = phi i8* [ %73, %76 ], [ %99, %97 ]
  %95 = add nuw nsw i32 %77, 1
  %96 = icmp eq i32 %95, %34
  br i1 %96, label %80, label %76

97:                                               ; preds = %170, %86
  %98 = phi i8* [ %90, %86 ], [ %172, %170 ]
  %99 = phi i8* [ %88, %86 ], [ %171, %170 ]
  %100 = getelementptr inbounds i8, i8* %89, i64 %62
  %101 = add nuw nsw i32 %87, 1
  %102 = icmp eq i32 %101, %36
  br i1 %102, label %91, label %86

103:                                              ; preds = %86, %170
  %104 = phi i32 [ %173, %170 ], [ 0, %86 ]
  %105 = phi i8* [ %171, %170 ], [ %88, %86 ]
  %106 = phi i8* [ %172, %170 ], [ %90, %86 ]
  br label %107

107:                                              ; preds = %145, %103
  %108 = phi i64 [ 0, %103 ], [ %168, %145 ]
  %109 = load i32, i32* %63, align 4
  %110 = getelementptr inbounds i8, i8* %89, i64 %108
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = add nsw i32 %109, %112
  %114 = load i32, i32* %64, align 4
  %115 = getelementptr inbounds i8, i8* %105, i64 %108
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = add nsw i32 %114, %117
  %119 = load i32, i32* %65, align 4
  %120 = mul nsw i32 %118, %113
  %121 = load i32, i32* %66, align 4
  %122 = load i32, i32* %67, align 4
  %123 = icmp sgt i32 %122, 0
  %124 = sub nsw i32 0, %122
  %125 = select i1 %123, i32 0, i32 %124
  %126 = shl i32 1, %122
  %127 = select i1 %123, i32 %126, i32 1
  %128 = mul nsw i32 %120, %127
  %129 = icmp eq i32 %128, %121
  br i1 %129, label %134, label %130

130:                                              ; preds = %107
  %131 = sext i32 %128 to i64
  %132 = sext i32 %121 to i64
  %133 = mul nsw i64 %131, %132
  br label %138

134:                                              ; preds = %107
  %135 = icmp eq i32 %121, -2147483648
  %136 = sext i32 %121 to i64
  %137 = mul nsw i64 %136, %136
  br i1 %135, label %145, label %138

138:                                              ; preds = %134, %130
  %139 = phi i64 [ %133, %130 ], [ %137, %134 ]
  %140 = icmp sgt i64 %139, -1
  %141 = select i1 %140, i64 1073741824, i64 -1073741823
  %142 = add nsw i64 %141, %139
  %143 = sdiv i64 %142, 2147483648
  %144 = trunc i64 %143 to i32
  br label %145

145:                                              ; preds = %134, %138
  %146 = phi i32 [ %144, %138 ], [ 2147483647, %134 ]
  %147 = zext i32 %125 to i64
  %148 = shl nsw i64 -1, %147
  %149 = trunc i64 %148 to i32
  %150 = xor i32 %149, -1
  %151 = and i32 %146, %150
  %152 = ashr i32 %150, 1
  %153 = lshr i32 %146, 31
  %154 = add nsw i32 %153, %152
  %155 = ashr i32 %146, %125
  %156 = icmp sgt i32 %151, %154
  %157 = zext i1 %156 to i32
  %158 = add i32 %155, %119
  %159 = add i32 %158, %157
  %160 = load i32, i32* %69, align 4
  %161 = icmp slt i32 %160, %159
  %162 = select i1 %161, i32 %159, i32 %160
  %163 = load i32, i32* %68, align 4
  %164 = icmp slt i32 %162, %163
  %165 = select i1 %164, i32 %162, i32 %163
  %166 = trunc i32 %165 to i8
  %167 = getelementptr inbounds i8, i8* %106, i64 %108
  store i8 %166, i8* %167, align 1
  %168 = add nuw nsw i64 %108, 1
  %169 = icmp eq i64 %168, %70
  br i1 %169, label %170, label %107

170:                                              ; preds = %145
  %171 = getelementptr inbounds i8, i8* %105, i64 %62
  %172 = getelementptr inbounds i8, i8* %106, i64 %62
  %173 = add nuw nsw i32 %104, 1
  %174 = icmp eq i32 %173, %38
  br i1 %174, label %97, label %103

175:                                              ; preds = %184, %44
  %176 = phi i32 [ 0, %44 ], [ %188, %184 ]
  %177 = phi i8* [ %30, %44 ], [ %187, %184 ]
  %178 = phi i8* [ %29, %44 ], [ %186, %184 ]
  %179 = phi i8* [ %6, %44 ], [ %185, %184 ]
  br i1 %45, label %180, label %184

180:                                              ; preds = %175, %190
  %181 = phi i32 [ %194, %190 ], [ 0, %175 ]
  %182 = phi i8* [ %192, %190 ], [ %178, %175 ]
  %183 = phi i8* [ %191, %190 ], [ %179, %175 ]
  br i1 %46, label %196, label %190

184:                                              ; preds = %190, %175
  %185 = phi i8* [ %179, %175 ], [ %191, %190 ]
  %186 = phi i8* [ %178, %175 ], [ %192, %190 ]
  %187 = phi i8* [ null, %175 ], [ %193, %190 ]
  %188 = add nuw nsw i32 %176, 1
  %189 = icmp eq i32 %188, %32
  br i1 %189, label %267, label %175

190:                                              ; preds = %261, %180
  %191 = phi i8* [ %183, %180 ], [ %263, %261 ]
  %192 = phi i8* [ %182, %180 ], [ %264, %261 ]
  %193 = phi i8* [ %177, %180 ], [ %262, %261 ]
  %194 = add nuw nsw i32 %181, 1
  %195 = icmp eq i32 %194, %34
  br i1 %195, label %184, label %180

196:                                              ; preds = %180, %261
  %197 = phi i32 [ %265, %261 ], [ 0, %180 ]
  %198 = phi i8* [ %262, %261 ], [ %177, %180 ]
  %199 = phi i8* [ %264, %261 ], [ %182, %180 ]
  %200 = phi i8* [ %263, %261 ], [ %183, %180 ]
  br i1 %51, label %201, label %261

201:                                              ; preds = %196
  %202 = load i32, i32* %48, align 4
  %203 = load i8, i8* %199, align 1
  %204 = zext i8 %203 to i32
  %205 = add nsw i32 %202, %204
  %206 = shl i32 %205, 16
  %207 = ashr exact i32 %206, 16
  br label %208

208:                                              ; preds = %235, %201
  %209 = phi i64 [ 0, %201 ], [ %259, %235 ]
  %210 = load i32, i32* %49, align 4
  %211 = getelementptr inbounds i8, i8* %198, i64 %209
  %212 = load i8, i8* %211, align 1
  %213 = zext i8 %212 to i32
  %214 = add nsw i32 %210, %213
  %215 = load i32, i32* %50, align 4
  %216 = mul nsw i32 %214, %207
  %217 = load i32, i32* %52, align 4
  %218 = load i32, i32* %53, align 4
  %219 = icmp eq i32 %216, %217
  br i1 %219, label %224, label %220

220:                                              ; preds = %208
  %221 = sext i32 %216 to i64
  %222 = sext i32 %217 to i64
  %223 = mul nsw i64 %221, %222
  br label %228

224:                                              ; preds = %208
  %225 = icmp eq i32 %216, -2147483648
  %226 = sext i32 %216 to i64
  %227 = mul nsw i64 %226, %226
  br i1 %225, label %235, label %228

228:                                              ; preds = %224, %220
  %229 = phi i64 [ %223, %220 ], [ %227, %224 ]
  %230 = icmp sgt i64 %229, -1
  %231 = select i1 %230, i64 1073741824, i64 -1073741823
  %232 = add nsw i64 %231, %229
  %233 = sdiv i64 %232, 2147483648
  %234 = trunc i64 %233 to i32
  br label %235

235:                                              ; preds = %224, %228
  %236 = phi i32 [ %234, %228 ], [ 2147483647, %224 ]
  %237 = sub nsw i32 0, %218
  %238 = zext i32 %237 to i64
  %239 = shl nsw i64 -1, %238
  %240 = trunc i64 %239 to i32
  %241 = xor i32 %240, -1
  %242 = and i32 %236, %241
  %243 = ashr i32 %241, 1
  %244 = lshr i32 %236, 31
  %245 = add nsw i32 %244, %243
  %246 = ashr i32 %236, %237
  %247 = icmp sgt i32 %242, %245
  %248 = zext i1 %247 to i32
  %249 = add i32 %246, %215
  %250 = add i32 %249, %248
  %251 = load i32, i32* %55, align 4
  %252 = icmp slt i32 %251, %250
  %253 = select i1 %252, i32 %250, i32 %251
  %254 = load i32, i32* %54, align 4
  %255 = icmp slt i32 %253, %254
  %256 = select i1 %255, i32 %253, i32 %254
  %257 = trunc i32 %256 to i8
  %258 = getelementptr inbounds i8, i8* %200, i64 %209
  store i8 %257, i8* %258, align 1
  %259 = add nuw nsw i64 %209, 1
  %260 = icmp eq i64 %259, %56
  br i1 %260, label %261, label %208

261:                                              ; preds = %235, %196
  %262 = getelementptr inbounds i8, i8* %198, i64 %47
  %263 = getelementptr inbounds i8, i8* %200, i64 %47
  %264 = getelementptr inbounds i8, i8* %199, i64 1
  %265 = add nuw nsw i32 %197, 1
  %266 = icmp eq i32 %265, %36
  br i1 %266, label %190, label %196

267:                                              ; preds = %184, %80, %43, %57
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %14) #11
  br label %268

268:                                              ; preds = %267, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops3MulERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS6_S8_S6_Ph(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #7 comdat {
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 5
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  br i1 %10, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %union.anon, %union.anon* %11, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  br label %18

15:                                               ; preds = %7
  %16 = bitcast %union.anon* %11 to i32*
  %17 = icmp sgt i32 %9, 0
  br i1 %17, label %18, label %118

18:                                               ; preds = %15, %12
  %19 = phi i32* [ %14, %12 ], [ %16, %15 ]
  %20 = zext i32 %9 to i64
  %21 = icmp ult i32 %9, 8
  br i1 %21, label %107, label %22

22:                                               ; preds = %18
  %23 = and i64 %20, 4294967288
  %24 = add nsw i64 %23, -8
  %25 = lshr exact i64 %24, 3
  %26 = add nuw nsw i64 %25, 1
  %27 = and i64 %26, 3
  %28 = icmp ult i64 %24, 24
  br i1 %28, label %74, label %29

29:                                               ; preds = %22
  %30 = sub nsw i64 %26, %27
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %71, %31 ]
  %33 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %29 ], [ %69, %31 ]
  %34 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %29 ], [ %70, %31 ]
  %35 = phi i64 [ %30, %29 ], [ %72, %31 ]
  %36 = getelementptr inbounds i32, i32* %19, i64 %32
  %37 = bitcast i32* %36 to <4 x i32>*
  %38 = load <4 x i32>, <4 x i32>* %37, align 4
  %39 = getelementptr inbounds i32, i32* %36, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  %41 = load <4 x i32>, <4 x i32>* %40, align 4
  %42 = mul nsw <4 x i32> %38, %33
  %43 = mul nsw <4 x i32> %41, %34
  %44 = or i64 %32, 8
  %45 = getelementptr inbounds i32, i32* %19, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  %47 = load <4 x i32>, <4 x i32>* %46, align 4
  %48 = getelementptr inbounds i32, i32* %45, i64 4
  %49 = bitcast i32* %48 to <4 x i32>*
  %50 = load <4 x i32>, <4 x i32>* %49, align 4
  %51 = mul nsw <4 x i32> %47, %42
  %52 = mul nsw <4 x i32> %50, %43
  %53 = or i64 %32, 16
  %54 = getelementptr inbounds i32, i32* %19, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  %56 = load <4 x i32>, <4 x i32>* %55, align 4
  %57 = getelementptr inbounds i32, i32* %54, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  %59 = load <4 x i32>, <4 x i32>* %58, align 4
  %60 = mul nsw <4 x i32> %56, %51
  %61 = mul nsw <4 x i32> %59, %52
  %62 = or i64 %32, 24
  %63 = getelementptr inbounds i32, i32* %19, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  %65 = load <4 x i32>, <4 x i32>* %64, align 4
  %66 = getelementptr inbounds i32, i32* %63, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  %68 = load <4 x i32>, <4 x i32>* %67, align 4
  %69 = mul nsw <4 x i32> %65, %60
  %70 = mul nsw <4 x i32> %68, %61
  %71 = add i64 %32, 32
  %72 = add i64 %35, -4
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %31, !llvm.loop !486

74:                                               ; preds = %31, %22
  %75 = phi <4 x i32> [ undef, %22 ], [ %69, %31 ]
  %76 = phi <4 x i32> [ undef, %22 ], [ %70, %31 ]
  %77 = phi i64 [ 0, %22 ], [ %71, %31 ]
  %78 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %22 ], [ %69, %31 ]
  %79 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %22 ], [ %70, %31 ]
  %80 = icmp eq i64 %27, 0
  br i1 %80, label %97, label %81

81:                                               ; preds = %74, %81
  %82 = phi i64 [ %94, %81 ], [ %77, %74 ]
  %83 = phi <4 x i32> [ %92, %81 ], [ %78, %74 ]
  %84 = phi <4 x i32> [ %93, %81 ], [ %79, %74 ]
  %85 = phi i64 [ %95, %81 ], [ %27, %74 ]
  %86 = getelementptr inbounds i32, i32* %19, i64 %82
  %87 = bitcast i32* %86 to <4 x i32>*
  %88 = load <4 x i32>, <4 x i32>* %87, align 4
  %89 = getelementptr inbounds i32, i32* %86, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4
  %92 = mul nsw <4 x i32> %88, %83
  %93 = mul nsw <4 x i32> %91, %84
  %94 = add i64 %82, 8
  %95 = add i64 %85, -1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %81, !llvm.loop !487

97:                                               ; preds = %81, %74
  %98 = phi <4 x i32> [ %75, %74 ], [ %92, %81 ]
  %99 = phi <4 x i32> [ %76, %74 ], [ %93, %81 ]
  %100 = mul <4 x i32> %99, %98
  %101 = shufflevector <4 x i32> %100, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %102 = mul <4 x i32> %100, %101
  %103 = shufflevector <4 x i32> %102, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %104 = mul <4 x i32> %102, %103
  %105 = extractelement <4 x i32> %104, i32 0
  %106 = icmp eq i64 %23, %20
  br i1 %106, label %118, label %107

107:                                              ; preds = %97, %18
  %108 = phi i64 [ 0, %18 ], [ %23, %97 ]
  %109 = phi i32 [ 1, %18 ], [ %105, %97 ]
  br label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %116, %110 ], [ %108, %107 ]
  %112 = phi i32 [ %115, %110 ], [ %109, %107 ]
  %113 = getelementptr inbounds i32, i32* %19, i64 %111
  %114 = load i32, i32* %113, align 4
  %115 = mul nsw i32 %114, %112
  %116 = add nuw nsw i64 %111, 1
  %117 = icmp eq i64 %116, %20
  br i1 %117, label %118, label %110, !llvm.loop !488

118:                                              ; preds = %110, %97, %15
  %119 = phi i32 [ 1, %15 ], [ %105, %97 ], [ %115, %110 ]
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  br i1 %122, label %124, label %127

124:                                              ; preds = %118
  %125 = getelementptr inbounds %union.anon, %union.anon* %123, i64 0, i32 0
  %126 = load i32*, i32** %125, align 8
  br label %130

127:                                              ; preds = %118
  %128 = bitcast %union.anon* %123 to i32*
  %129 = icmp sgt i32 %121, 0
  br i1 %129, label %130, label %230

130:                                              ; preds = %127, %124
  %131 = phi i32* [ %126, %124 ], [ %128, %127 ]
  %132 = zext i32 %121 to i64
  %133 = icmp ult i32 %121, 8
  br i1 %133, label %219, label %134

134:                                              ; preds = %130
  %135 = and i64 %132, 4294967288
  %136 = add nsw i64 %135, -8
  %137 = lshr exact i64 %136, 3
  %138 = add nuw nsw i64 %137, 1
  %139 = and i64 %138, 3
  %140 = icmp ult i64 %136, 24
  br i1 %140, label %186, label %141

141:                                              ; preds = %134
  %142 = sub nsw i64 %138, %139
  br label %143

143:                                              ; preds = %143, %141
  %144 = phi i64 [ 0, %141 ], [ %183, %143 ]
  %145 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %141 ], [ %181, %143 ]
  %146 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %141 ], [ %182, %143 ]
  %147 = phi i64 [ %142, %141 ], [ %184, %143 ]
  %148 = getelementptr inbounds i32, i32* %131, i64 %144
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4
  %151 = getelementptr inbounds i32, i32* %148, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4
  %154 = mul nsw <4 x i32> %150, %145
  %155 = mul nsw <4 x i32> %153, %146
  %156 = or i64 %144, 8
  %157 = getelementptr inbounds i32, i32* %131, i64 %156
  %158 = bitcast i32* %157 to <4 x i32>*
  %159 = load <4 x i32>, <4 x i32>* %158, align 4
  %160 = getelementptr inbounds i32, i32* %157, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  %162 = load <4 x i32>, <4 x i32>* %161, align 4
  %163 = mul nsw <4 x i32> %159, %154
  %164 = mul nsw <4 x i32> %162, %155
  %165 = or i64 %144, 16
  %166 = getelementptr inbounds i32, i32* %131, i64 %165
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = getelementptr inbounds i32, i32* %166, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 4
  %172 = mul nsw <4 x i32> %168, %163
  %173 = mul nsw <4 x i32> %171, %164
  %174 = or i64 %144, 24
  %175 = getelementptr inbounds i32, i32* %131, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = getelementptr inbounds i32, i32* %175, i64 4
  %179 = bitcast i32* %178 to <4 x i32>*
  %180 = load <4 x i32>, <4 x i32>* %179, align 4
  %181 = mul nsw <4 x i32> %177, %172
  %182 = mul nsw <4 x i32> %180, %173
  %183 = add i64 %144, 32
  %184 = add i64 %147, -4
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %143, !llvm.loop !489

186:                                              ; preds = %143, %134
  %187 = phi <4 x i32> [ undef, %134 ], [ %181, %143 ]
  %188 = phi <4 x i32> [ undef, %134 ], [ %182, %143 ]
  %189 = phi i64 [ 0, %134 ], [ %183, %143 ]
  %190 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %134 ], [ %181, %143 ]
  %191 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %134 ], [ %182, %143 ]
  %192 = icmp eq i64 %139, 0
  br i1 %192, label %209, label %193

193:                                              ; preds = %186, %193
  %194 = phi i64 [ %206, %193 ], [ %189, %186 ]
  %195 = phi <4 x i32> [ %204, %193 ], [ %190, %186 ]
  %196 = phi <4 x i32> [ %205, %193 ], [ %191, %186 ]
  %197 = phi i64 [ %207, %193 ], [ %139, %186 ]
  %198 = getelementptr inbounds i32, i32* %131, i64 %194
  %199 = bitcast i32* %198 to <4 x i32>*
  %200 = load <4 x i32>, <4 x i32>* %199, align 4
  %201 = getelementptr inbounds i32, i32* %198, i64 4
  %202 = bitcast i32* %201 to <4 x i32>*
  %203 = load <4 x i32>, <4 x i32>* %202, align 4
  %204 = mul nsw <4 x i32> %200, %195
  %205 = mul nsw <4 x i32> %203, %196
  %206 = add i64 %194, 8
  %207 = add i64 %197, -1
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %193, !llvm.loop !490

209:                                              ; preds = %193, %186
  %210 = phi <4 x i32> [ %187, %186 ], [ %204, %193 ]
  %211 = phi <4 x i32> [ %188, %186 ], [ %205, %193 ]
  %212 = mul <4 x i32> %211, %210
  %213 = shufflevector <4 x i32> %212, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %214 = mul <4 x i32> %212, %213
  %215 = shufflevector <4 x i32> %214, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %216 = mul <4 x i32> %214, %215
  %217 = extractelement <4 x i32> %216, i32 0
  %218 = icmp eq i64 %135, %132
  br i1 %218, label %230, label %219

219:                                              ; preds = %209, %130
  %220 = phi i64 [ 0, %130 ], [ %135, %209 ]
  %221 = phi i32 [ 1, %130 ], [ %217, %209 ]
  br label %222

222:                                              ; preds = %219, %222
  %223 = phi i64 [ %228, %222 ], [ %220, %219 ]
  %224 = phi i32 [ %227, %222 ], [ %221, %219 ]
  %225 = getelementptr inbounds i32, i32* %131, i64 %223
  %226 = load i32, i32* %225, align 4
  %227 = mul nsw i32 %226, %224
  %228 = add nuw nsw i64 %223, 1
  %229 = icmp eq i64 %228, %132
  br i1 %229, label %230, label %222, !llvm.loop !491

230:                                              ; preds = %222, %209, %127
  %231 = phi i32 [ 1, %127 ], [ %217, %209 ], [ %227, %222 ]
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %233 = load i32, i32* %232, align 8
  %234 = icmp sgt i32 %233, 5
  %235 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %234, label %236, label %239

236:                                              ; preds = %230
  %237 = getelementptr inbounds %union.anon, %union.anon* %235, i64 0, i32 0
  %238 = load i32*, i32** %237, align 8
  br label %242

239:                                              ; preds = %230
  %240 = bitcast %union.anon* %235 to i32*
  %241 = icmp sgt i32 %233, 0
  br i1 %241, label %242, label %342

242:                                              ; preds = %239, %236
  %243 = phi i32* [ %238, %236 ], [ %240, %239 ]
  %244 = zext i32 %233 to i64
  %245 = icmp ult i32 %233, 8
  br i1 %245, label %331, label %246

246:                                              ; preds = %242
  %247 = and i64 %244, 4294967288
  %248 = add nsw i64 %247, -8
  %249 = lshr exact i64 %248, 3
  %250 = add nuw nsw i64 %249, 1
  %251 = and i64 %250, 3
  %252 = icmp ult i64 %248, 24
  br i1 %252, label %298, label %253

253:                                              ; preds = %246
  %254 = sub nsw i64 %250, %251
  br label %255

255:                                              ; preds = %255, %253
  %256 = phi i64 [ 0, %253 ], [ %295, %255 ]
  %257 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %253 ], [ %293, %255 ]
  %258 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %253 ], [ %294, %255 ]
  %259 = phi i64 [ %254, %253 ], [ %296, %255 ]
  %260 = getelementptr inbounds i32, i32* %243, i64 %256
  %261 = bitcast i32* %260 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4
  %263 = getelementptr inbounds i32, i32* %260, i64 4
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4
  %266 = mul nsw <4 x i32> %262, %257
  %267 = mul nsw <4 x i32> %265, %258
  %268 = or i64 %256, 8
  %269 = getelementptr inbounds i32, i32* %243, i64 %268
  %270 = bitcast i32* %269 to <4 x i32>*
  %271 = load <4 x i32>, <4 x i32>* %270, align 4
  %272 = getelementptr inbounds i32, i32* %269, i64 4
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4
  %275 = mul nsw <4 x i32> %271, %266
  %276 = mul nsw <4 x i32> %274, %267
  %277 = or i64 %256, 16
  %278 = getelementptr inbounds i32, i32* %243, i64 %277
  %279 = bitcast i32* %278 to <4 x i32>*
  %280 = load <4 x i32>, <4 x i32>* %279, align 4
  %281 = getelementptr inbounds i32, i32* %278, i64 4
  %282 = bitcast i32* %281 to <4 x i32>*
  %283 = load <4 x i32>, <4 x i32>* %282, align 4
  %284 = mul nsw <4 x i32> %280, %275
  %285 = mul nsw <4 x i32> %283, %276
  %286 = or i64 %256, 24
  %287 = getelementptr inbounds i32, i32* %243, i64 %286
  %288 = bitcast i32* %287 to <4 x i32>*
  %289 = load <4 x i32>, <4 x i32>* %288, align 4
  %290 = getelementptr inbounds i32, i32* %287, i64 4
  %291 = bitcast i32* %290 to <4 x i32>*
  %292 = load <4 x i32>, <4 x i32>* %291, align 4
  %293 = mul nsw <4 x i32> %289, %284
  %294 = mul nsw <4 x i32> %292, %285
  %295 = add i64 %256, 32
  %296 = add i64 %259, -4
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %255, !llvm.loop !492

298:                                              ; preds = %255, %246
  %299 = phi <4 x i32> [ undef, %246 ], [ %293, %255 ]
  %300 = phi <4 x i32> [ undef, %246 ], [ %294, %255 ]
  %301 = phi i64 [ 0, %246 ], [ %295, %255 ]
  %302 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %246 ], [ %293, %255 ]
  %303 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %246 ], [ %294, %255 ]
  %304 = icmp eq i64 %251, 0
  br i1 %304, label %321, label %305

305:                                              ; preds = %298, %305
  %306 = phi i64 [ %318, %305 ], [ %301, %298 ]
  %307 = phi <4 x i32> [ %316, %305 ], [ %302, %298 ]
  %308 = phi <4 x i32> [ %317, %305 ], [ %303, %298 ]
  %309 = phi i64 [ %319, %305 ], [ %251, %298 ]
  %310 = getelementptr inbounds i32, i32* %243, i64 %306
  %311 = bitcast i32* %310 to <4 x i32>*
  %312 = load <4 x i32>, <4 x i32>* %311, align 4
  %313 = getelementptr inbounds i32, i32* %310, i64 4
  %314 = bitcast i32* %313 to <4 x i32>*
  %315 = load <4 x i32>, <4 x i32>* %314, align 4
  %316 = mul nsw <4 x i32> %312, %307
  %317 = mul nsw <4 x i32> %315, %308
  %318 = add i64 %306, 8
  %319 = add i64 %309, -1
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %305, !llvm.loop !493

321:                                              ; preds = %305, %298
  %322 = phi <4 x i32> [ %299, %298 ], [ %316, %305 ]
  %323 = phi <4 x i32> [ %300, %298 ], [ %317, %305 ]
  %324 = mul <4 x i32> %323, %322
  %325 = shufflevector <4 x i32> %324, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %326 = mul <4 x i32> %324, %325
  %327 = shufflevector <4 x i32> %326, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %328 = mul <4 x i32> %326, %327
  %329 = extractelement <4 x i32> %328, i32 0
  %330 = icmp eq i64 %247, %244
  br i1 %330, label %342, label %331

331:                                              ; preds = %321, %242
  %332 = phi i64 [ 0, %242 ], [ %247, %321 ]
  %333 = phi i32 [ 1, %242 ], [ %329, %321 ]
  br label %334

334:                                              ; preds = %331, %334
  %335 = phi i64 [ %340, %334 ], [ %332, %331 ]
  %336 = phi i32 [ %339, %334 ], [ %333, %331 ]
  %337 = getelementptr inbounds i32, i32* %243, i64 %335
  %338 = load i32, i32* %337, align 4
  %339 = mul nsw i32 %338, %336
  %340 = add nuw nsw i64 %335, 1
  %341 = icmp eq i64 %340, %244
  br i1 %341, label %342, label %334, !llvm.loop !494

342:                                              ; preds = %334, %321, %239
  %343 = phi i32 [ 1, %239 ], [ %329, %321 ], [ %339, %334 ]
  %344 = icmp eq i32 %119, %231
  br i1 %344, label %346, label %345

345:                                              ; preds = %342
  tail call void @abort() #12
  unreachable

346:                                              ; preds = %342
  %347 = icmp eq i32 %119, %343
  br i1 %347, label %349, label %348

348:                                              ; preds = %346
  tail call void @abort() #12
  unreachable

349:                                              ; preds = %346
  %350 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 1
  %351 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 2
  %352 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 3
  %353 = icmp sgt i32 %119, 0
  br i1 %353, label %354, label %423

354:                                              ; preds = %349
  %355 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 4
  %356 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 5
  %357 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 12
  %358 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 11
  %359 = zext i32 %119 to i64
  br label %360

360:                                              ; preds = %398, %354
  %361 = phi i64 [ 0, %354 ], [ %421, %398 ]
  %362 = load i32, i32* %350, align 4
  %363 = getelementptr inbounds i8, i8* %2, i64 %361
  %364 = load i8, i8* %363, align 1
  %365 = zext i8 %364 to i32
  %366 = add nsw i32 %362, %365
  %367 = load i32, i32* %351, align 4
  %368 = getelementptr inbounds i8, i8* %4, i64 %361
  %369 = load i8, i8* %368, align 1
  %370 = zext i8 %369 to i32
  %371 = add nsw i32 %367, %370
  %372 = load i32, i32* %352, align 4
  %373 = mul nsw i32 %371, %366
  %374 = load i32, i32* %355, align 4
  %375 = load i32, i32* %356, align 4
  %376 = icmp sgt i32 %375, 0
  %377 = sub nsw i32 0, %375
  %378 = select i1 %376, i32 0, i32 %377
  %379 = shl i32 1, %375
  %380 = select i1 %376, i32 %379, i32 1
  %381 = mul nsw i32 %373, %380
  %382 = icmp eq i32 %381, %374
  br i1 %382, label %387, label %383

383:                                              ; preds = %360
  %384 = sext i32 %381 to i64
  %385 = sext i32 %374 to i64
  %386 = mul nsw i64 %384, %385
  br label %391

387:                                              ; preds = %360
  %388 = icmp eq i32 %374, -2147483648
  %389 = sext i32 %374 to i64
  %390 = mul nsw i64 %389, %389
  br i1 %388, label %398, label %391

391:                                              ; preds = %387, %383
  %392 = phi i64 [ %386, %383 ], [ %390, %387 ]
  %393 = icmp sgt i64 %392, -1
  %394 = select i1 %393, i64 1073741824, i64 -1073741823
  %395 = add nsw i64 %394, %392
  %396 = sdiv i64 %395, 2147483648
  %397 = trunc i64 %396 to i32
  br label %398

398:                                              ; preds = %391, %387
  %399 = phi i32 [ %397, %391 ], [ 2147483647, %387 ]
  %400 = zext i32 %378 to i64
  %401 = shl nsw i64 -1, %400
  %402 = trunc i64 %401 to i32
  %403 = xor i32 %402, -1
  %404 = and i32 %399, %403
  %405 = ashr i32 %403, 1
  %406 = lshr i32 %399, 31
  %407 = add nsw i32 %406, %405
  %408 = ashr i32 %399, %378
  %409 = icmp sgt i32 %404, %407
  %410 = zext i1 %409 to i32
  %411 = add i32 %408, %372
  %412 = add i32 %411, %410
  %413 = load i32, i32* %358, align 4
  %414 = icmp slt i32 %413, %412
  %415 = select i1 %414, i32 %412, i32 %413
  %416 = load i32, i32* %357, align 4
  %417 = icmp slt i32 %415, %416
  %418 = select i1 %417, i32 %415, i32 %416
  %419 = trunc i32 %418 to i8
  %420 = getelementptr inbounds i8, i8* %6, i64 %361
  store i8 %419, i8* %420, align 1
  %421 = add nuw nsw i64 %361, 1
  %422 = icmp eq i64 %421, %359
  br i1 %422, label %423, label %360

423:                                              ; preds = %398, %349
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteMulParams*, %"struct.tflite::ops::builtin::mul::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %8 = alloca %"struct.tflite::ArithmeticParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"class.tflite::RuntimeShape", align 8
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %23) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3mul13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_.op_params, i64 0, i32 0), i64 80, i1 false)
  %24 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  %25 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %7
  %27 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %27, align 8, !alias.scope !495
  br label %53

28:                                               ; preds = %7
  %29 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %30 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %29, align 8, !noalias !495
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 4, !noalias !495
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %30, i64 0, i32 1, i64 0
  %34 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %32, i32* %34, align 8, !alias.scope !495
  %35 = icmp sgt i32 %32, 5
  br i1 %35, label %36, label %43

36:                                               ; preds = %28
  %37 = sext i32 %32 to i64
  %38 = shl nsw i64 %37, 2
  %39 = tail call i8* @_Znam(i64 %38) #10, !noalias !495
  %40 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %41 = bitcast i32** %40 to i8**
  store i8* %39, i8** %41, align 8, !alias.scope !495
  %42 = bitcast i8* %39 to i32*
  br label %48

43:                                               ; preds = %28
  %44 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %45 = bitcast %union.anon* %44 to i32*
  %46 = sext i32 %32 to i64
  %47 = shl nsw i64 %46, 2
  br label %48

48:                                               ; preds = %43, %36
  %49 = phi i64 [ %38, %36 ], [ %47, %43 ]
  %50 = phi i32* [ %42, %36 ], [ %45, %43 ]
  %51 = bitcast i32* %50 to i8*
  %52 = bitcast i32* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %52, i64 %49, i1 false) #11
  br label %53

53:                                               ; preds = %26, %48
  %54 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #11
  %55 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %57, align 8, !alias.scope !498
  br label %83

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %60 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %59, align 8, !noalias !498
  %61 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %60, i64 0, i32 0
  %62 = load i32, i32* %61, align 4, !noalias !498
  %63 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %60, i64 0, i32 1, i64 0
  %64 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %62, i32* %64, align 8, !alias.scope !498
  %65 = icmp sgt i32 %62, 5
  br i1 %65, label %66, label %73

66:                                               ; preds = %58
  %67 = sext i32 %62 to i64
  %68 = shl nsw i64 %67, 2
  %69 = tail call i8* @_Znam(i64 %68) #10, !noalias !498
  %70 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %71 = bitcast i32** %70 to i8**
  store i8* %69, i8** %71, align 8, !alias.scope !498
  %72 = bitcast i8* %69 to i32*
  br label %78

73:                                               ; preds = %58
  %74 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %75 = bitcast %union.anon* %74 to i32*
  %76 = sext i32 %62 to i64
  %77 = shl nsw i64 %76, 2
  br label %78

78:                                               ; preds = %73, %66
  %79 = phi i64 [ %68, %66 ], [ %77, %73 ]
  %80 = phi i32* [ %72, %66 ], [ %75, %73 ]
  %81 = bitcast i32* %80 to i8*
  %82 = bitcast i32* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %81, i8* align 4 %82, i64 %79, i1 false) #11
  br label %83

83:                                               ; preds = %56, %78
  %84 = call zeroext i1 @_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, %"struct.tflite::ArithmeticParams"* nonnull %8)
  %85 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = icmp sgt i32 %86, 5
  br i1 %87, label %88, label %94

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = icmp eq i32* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %88
  %93 = bitcast i32* %90 to i8*
  call void @_ZdaPv(i8* %93) #10
  br label %94

94:                                               ; preds = %83, %88, %92
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #11
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %96 = load i32, i32* %95, align 8
  %97 = icmp sgt i32 %96, 5
  br i1 %97, label %98, label %104

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %100 = load i32*, i32** %99, align 8
  %101 = icmp eq i32* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %98
  %103 = bitcast i32* %100 to i8*
  call void @_ZdaPv(i8* %103) #10
  br label %104

104:                                              ; preds = %94, %98, %102
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  %105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 0
  %106 = load i32, i32* %105, align 8
  switch i32 %106, label %1604 [
    i32 2, label %107
    i32 1, label %870
  ]

107:                                              ; preds = %104
  %108 = getelementptr inbounds %struct.TfLiteMulParams, %struct.TfLiteMulParams* %2, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = add i32 %109, -1
  %111 = icmp ult i32 %110, 3
  br i1 %84, label %112, label %251

112:                                              ; preds = %107
  br i1 %111, label %113, label %120

113:                                              ; preds = %112
  %114 = sext i32 %110 to i64
  %115 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.48, i64 0, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = sext i32 %110 to i64
  %118 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.49, i64 0, i64 %117
  %119 = load i32, i32* %118, align 4
  br label %120

120:                                              ; preds = %112, %113
  %121 = phi i32 [ %116, %113 ], [ -2147483648, %112 ]
  %122 = phi i32 [ %119, %113 ], [ 2147483647, %112 ]
  %123 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 11
  store i32 %121, i32* %123, align 4
  %124 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 12
  store i32 %122, i32* %124, align 4
  %125 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %125) #11
  br i1 %25, label %126, label %128

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %127, align 8, !alias.scope !501
  br label %155

128:                                              ; preds = %120
  %129 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %130 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %129, align 8, !noalias !501
  %131 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %130, i64 0, i32 0
  %132 = load i32, i32* %131, align 4, !noalias !501
  %133 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %130, i64 0, i32 1, i64 0
  %134 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %132, i32* %134, align 8, !alias.scope !501
  %135 = icmp sgt i32 %132, 5
  br i1 %135, label %136, label %143

136:                                              ; preds = %128
  %137 = sext i32 %132 to i64
  %138 = shl nsw i64 %137, 2
  %139 = call i8* @_Znam(i64 %138) #10, !noalias !501
  %140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %141 = bitcast i32** %140 to i8**
  store i8* %139, i8** %141, align 8, !alias.scope !501
  %142 = bitcast i8* %139 to i32*
  br label %148

143:                                              ; preds = %128
  %144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %145 = bitcast %union.anon* %144 to i32*
  %146 = sext i32 %132 to i64
  %147 = shl nsw i64 %146, 2
  br label %148

148:                                              ; preds = %143, %136
  %149 = phi i64 [ %138, %136 ], [ %147, %143 ]
  %150 = phi i32* [ %142, %136 ], [ %145, %143 ]
  %151 = bitcast i32* %150 to i8*
  %152 = bitcast i32* %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %151, i8* align 4 %152, i64 %149, i1 false) #11
  %153 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %154 = load i32*, i32** %153, align 8
  br label %155

155:                                              ; preds = %126, %148
  %156 = phi i32* [ %154, %148 ], [ null, %126 ]
  %157 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %157) #11
  br i1 %55, label %158, label %160

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %159, align 8, !alias.scope !504
  br label %187

160:                                              ; preds = %155
  %161 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %162 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %161, align 8, !noalias !504
  %163 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %162, i64 0, i32 0
  %164 = load i32, i32* %163, align 4, !noalias !504
  %165 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %162, i64 0, i32 1, i64 0
  %166 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %164, i32* %166, align 8, !alias.scope !504
  %167 = icmp sgt i32 %164, 5
  br i1 %167, label %168, label %175

168:                                              ; preds = %160
  %169 = sext i32 %164 to i64
  %170 = shl nsw i64 %169, 2
  %171 = call i8* @_Znam(i64 %170) #10, !noalias !504
  %172 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %173 = bitcast i32** %172 to i8**
  store i8* %171, i8** %173, align 8, !alias.scope !504
  %174 = bitcast i8* %171 to i32*
  br label %180

175:                                              ; preds = %160
  %176 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %177 = bitcast %union.anon* %176 to i32*
  %178 = sext i32 %164 to i64
  %179 = shl nsw i64 %178, 2
  br label %180

180:                                              ; preds = %175, %168
  %181 = phi i64 [ %170, %168 ], [ %179, %175 ]
  %182 = phi i32* [ %174, %168 ], [ %177, %175 ]
  %183 = bitcast i32* %182 to i8*
  %184 = bitcast i32* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %183, i8* align 4 %184, i64 %181, i1 false) #11
  %185 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %186 = load i32*, i32** %185, align 8
  br label %187

187:                                              ; preds = %158, %180
  %188 = phi i32* [ %186, %180 ], [ null, %158 ]
  %189 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %189) #11
  %190 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %192, align 8, !alias.scope !507
  br label %220

193:                                              ; preds = %187
  %194 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %195 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %194, align 8, !noalias !507
  %196 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %195, i64 0, i32 0
  %197 = load i32, i32* %196, align 4, !noalias !507
  %198 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %195, i64 0, i32 1, i64 0
  %199 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %197, i32* %199, align 8, !alias.scope !507
  %200 = icmp sgt i32 %197, 5
  br i1 %200, label %201, label %208

201:                                              ; preds = %193
  %202 = sext i32 %197 to i64
  %203 = shl nsw i64 %202, 2
  %204 = call i8* @_Znam(i64 %203) #10, !noalias !507
  %205 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %206 = bitcast i32** %205 to i8**
  store i8* %204, i8** %206, align 8, !alias.scope !507
  %207 = bitcast i8* %204 to i32*
  br label %213

208:                                              ; preds = %193
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %210 = bitcast %union.anon* %209 to i32*
  %211 = sext i32 %197 to i64
  %212 = shl nsw i64 %211, 2
  br label %213

213:                                              ; preds = %208, %201
  %214 = phi i64 [ %203, %201 ], [ %212, %208 ]
  %215 = phi i32* [ %207, %201 ], [ %210, %208 ]
  %216 = bitcast i32* %215 to i8*
  %217 = bitcast i32* %198 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %216, i8* align 4 %217, i64 %214, i1 false) #11
  %218 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1, i32 0
  %219 = load i32*, i32** %218, align 8
  br label %220

220:                                              ; preds = %191, %213
  %221 = phi i32* [ %219, %213 ], [ null, %191 ]
  call void @_ZN6tflite13reference_ops18BroadcastMul4DSlowIiEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i32* %156, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i32* %188, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i32* %221)
  %222 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %223 = load i32, i32* %222, align 8
  %224 = icmp sgt i32 %223, 5
  br i1 %224, label %225, label %231

225:                                              ; preds = %220
  %226 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %227 = load i32*, i32** %226, align 8
  %228 = icmp eq i32* %227, null
  br i1 %228, label %231, label %229

229:                                              ; preds = %225
  %230 = bitcast i32* %227 to i8*
  call void @_ZdaPv(i8* %230) #10
  br label %231

231:                                              ; preds = %220, %225, %229
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %189) #11
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %233 = load i32, i32* %232, align 8
  %234 = icmp sgt i32 %233, 5
  br i1 %234, label %235, label %241

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %237 = load i32*, i32** %236, align 8
  %238 = icmp eq i32* %237, null
  br i1 %238, label %241, label %239

239:                                              ; preds = %235
  %240 = bitcast i32* %237 to i8*
  call void @_ZdaPv(i8* %240) #10
  br label %241

241:                                              ; preds = %231, %235, %239
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %157) #11
  %242 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %243 = load i32, i32* %242, align 8
  %244 = icmp sgt i32 %243, 5
  br i1 %244, label %245, label %1602

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %247 = load i32*, i32** %246, align 8
  %248 = icmp eq i32* %247, null
  br i1 %248, label %1602, label %249

249:                                              ; preds = %245
  %250 = bitcast i32* %247 to i8*
  call void @_ZdaPv(i8* %250) #10
  br label %1602

251:                                              ; preds = %107
  br i1 %111, label %252, label %259

252:                                              ; preds = %251
  %253 = sext i32 %110 to i64
  %254 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.48, i64 0, i64 %253
  %255 = load i32, i32* %254, align 4
  %256 = sext i32 %110 to i64
  %257 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.49, i64 0, i64 %256
  %258 = load i32, i32* %257, align 4
  br label %259

259:                                              ; preds = %251, %252
  %260 = phi i32 [ %255, %252 ], [ -2147483648, %251 ]
  %261 = phi i32 [ %258, %252 ], [ 2147483647, %251 ]
  %262 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 11
  store i32 %260, i32* %262, align 4
  %263 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 12
  store i32 %261, i32* %263, align 4
  %264 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %264) #11
  br i1 %25, label %265, label %267

265:                                              ; preds = %259
  %266 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %266, align 8, !alias.scope !510
  br label %295

267:                                              ; preds = %259
  %268 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %269 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %268, align 8, !noalias !510
  %270 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %269, i64 0, i32 0
  %271 = load i32, i32* %270, align 4, !noalias !510
  %272 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %269, i64 0, i32 1, i64 0
  %273 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %271, i32* %273, align 8, !alias.scope !510
  %274 = icmp sgt i32 %271, 5
  br i1 %274, label %275, label %282

275:                                              ; preds = %267
  %276 = sext i32 %271 to i64
  %277 = shl nsw i64 %276, 2
  %278 = call i8* @_Znam(i64 %277) #10, !noalias !510
  %279 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %280 = bitcast i32** %279 to i8**
  store i8* %278, i8** %280, align 8, !alias.scope !510
  %281 = bitcast i8* %278 to i32*
  br label %287

282:                                              ; preds = %267
  %283 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %284 = bitcast %union.anon* %283 to i32*
  %285 = sext i32 %271 to i64
  %286 = shl nsw i64 %285, 2
  br label %287

287:                                              ; preds = %282, %275
  %288 = phi i64 [ %277, %275 ], [ %286, %282 ]
  %289 = phi i32* [ %281, %275 ], [ %284, %282 ]
  %290 = bitcast i32* %289 to i8*
  %291 = bitcast i32* %272 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %290, i8* align 4 %291, i64 %288, i1 false) #11
  %292 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %293 = load i32*, i32** %292, align 8
  %294 = bitcast i32* %293 to i8*
  br label %295

295:                                              ; preds = %265, %287
  %296 = phi i32 [ %271, %287 ], [ 0, %265 ]
  %297 = phi i8* [ %294, %287 ], [ null, %265 ]
  %298 = phi i32* [ %293, %287 ], [ null, %265 ]
  %299 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %299) #11
  br i1 %55, label %300, label %302

300:                                              ; preds = %295
  %301 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %301, align 8, !alias.scope !513
  br label %330

302:                                              ; preds = %295
  %303 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %304 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %303, align 8, !noalias !513
  %305 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %304, i64 0, i32 0
  %306 = load i32, i32* %305, align 4, !noalias !513
  %307 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %304, i64 0, i32 1, i64 0
  %308 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %306, i32* %308, align 8, !alias.scope !513
  %309 = icmp sgt i32 %306, 5
  br i1 %309, label %310, label %317

310:                                              ; preds = %302
  %311 = sext i32 %306 to i64
  %312 = shl nsw i64 %311, 2
  %313 = call i8* @_Znam(i64 %312) #10, !noalias !513
  %314 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %315 = bitcast i32** %314 to i8**
  store i8* %313, i8** %315, align 8, !alias.scope !513
  %316 = bitcast i8* %313 to i32*
  br label %322

317:                                              ; preds = %302
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %319 = bitcast %union.anon* %318 to i32*
  %320 = sext i32 %306 to i64
  %321 = shl nsw i64 %320, 2
  br label %322

322:                                              ; preds = %317, %310
  %323 = phi i64 [ %312, %310 ], [ %321, %317 ]
  %324 = phi i32* [ %316, %310 ], [ %319, %317 ]
  %325 = bitcast i32* %324 to i8*
  %326 = bitcast i32* %307 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %325, i8* align 4 %326, i64 %323, i1 false) #11
  %327 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %328 = load i32*, i32** %327, align 8
  %329 = bitcast i32* %328 to i8*
  br label %330

330:                                              ; preds = %300, %322
  %331 = phi i32 [ %306, %322 ], [ 0, %300 ]
  %332 = phi i8* [ %329, %322 ], [ null, %300 ]
  %333 = phi i32* [ %328, %322 ], [ null, %300 ]
  %334 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %334) #11
  %335 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %335, label %336, label %338

336:                                              ; preds = %330
  %337 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %337, align 8, !alias.scope !516
  br label %366

338:                                              ; preds = %330
  %339 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %340 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %339, align 8, !noalias !516
  %341 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %340, i64 0, i32 0
  %342 = load i32, i32* %341, align 4, !noalias !516
  %343 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %340, i64 0, i32 1, i64 0
  %344 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %342, i32* %344, align 8, !alias.scope !516
  %345 = icmp sgt i32 %342, 5
  br i1 %345, label %346, label %353

346:                                              ; preds = %338
  %347 = sext i32 %342 to i64
  %348 = shl nsw i64 %347, 2
  %349 = call i8* @_Znam(i64 %348) #10, !noalias !516
  %350 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %351 = bitcast i32** %350 to i8**
  store i8* %349, i8** %351, align 8, !alias.scope !516
  %352 = bitcast i8* %349 to i32*
  br label %358

353:                                              ; preds = %338
  %354 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %355 = bitcast %union.anon* %354 to i32*
  %356 = sext i32 %342 to i64
  %357 = shl nsw i64 %356, 2
  br label %358

358:                                              ; preds = %353, %346
  %359 = phi i64 [ %348, %346 ], [ %357, %353 ]
  %360 = phi i32* [ %352, %346 ], [ %355, %353 ]
  %361 = bitcast i32* %360 to i8*
  %362 = bitcast i32* %343 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %361, i8* align 4 %362, i64 %359, i1 false) #11
  %363 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1, i32 0
  %364 = load i32*, i32** %363, align 8
  %365 = bitcast i32* %364 to i8*
  br label %366

366:                                              ; preds = %336, %358
  %367 = phi i32 [ %342, %358 ], [ 0, %336 ]
  %368 = phi i8* [ %365, %358 ], [ null, %336 ]
  %369 = phi i32* [ %364, %358 ], [ null, %336 ]
  %370 = icmp sgt i32 %296, 5
  %371 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  br i1 %370, label %372, label %375

372:                                              ; preds = %366
  %373 = getelementptr inbounds %union.anon, %union.anon* %371, i64 0, i32 0
  %374 = load i32*, i32** %373, align 8
  br label %378

375:                                              ; preds = %366
  %376 = bitcast %union.anon* %371 to i32*
  %377 = icmp sgt i32 %296, 0
  br i1 %377, label %378, label %478

378:                                              ; preds = %375, %372
  %379 = phi i32* [ %374, %372 ], [ %376, %375 ]
  %380 = zext i32 %296 to i64
  %381 = icmp ult i32 %296, 8
  br i1 %381, label %467, label %382

382:                                              ; preds = %378
  %383 = and i64 %380, 4294967288
  %384 = add nsw i64 %383, -8
  %385 = lshr exact i64 %384, 3
  %386 = add nuw nsw i64 %385, 1
  %387 = and i64 %386, 3
  %388 = icmp ult i64 %384, 24
  br i1 %388, label %434, label %389

389:                                              ; preds = %382
  %390 = sub nsw i64 %386, %387
  br label %391

391:                                              ; preds = %391, %389
  %392 = phi i64 [ 0, %389 ], [ %431, %391 ]
  %393 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %389 ], [ %429, %391 ]
  %394 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %389 ], [ %430, %391 ]
  %395 = phi i64 [ %390, %389 ], [ %432, %391 ]
  %396 = getelementptr inbounds i32, i32* %379, i64 %392
  %397 = bitcast i32* %396 to <4 x i32>*
  %398 = load <4 x i32>, <4 x i32>* %397, align 4
  %399 = getelementptr inbounds i32, i32* %396, i64 4
  %400 = bitcast i32* %399 to <4 x i32>*
  %401 = load <4 x i32>, <4 x i32>* %400, align 4
  %402 = mul nsw <4 x i32> %398, %393
  %403 = mul nsw <4 x i32> %401, %394
  %404 = or i64 %392, 8
  %405 = getelementptr inbounds i32, i32* %379, i64 %404
  %406 = bitcast i32* %405 to <4 x i32>*
  %407 = load <4 x i32>, <4 x i32>* %406, align 4
  %408 = getelementptr inbounds i32, i32* %405, i64 4
  %409 = bitcast i32* %408 to <4 x i32>*
  %410 = load <4 x i32>, <4 x i32>* %409, align 4
  %411 = mul nsw <4 x i32> %407, %402
  %412 = mul nsw <4 x i32> %410, %403
  %413 = or i64 %392, 16
  %414 = getelementptr inbounds i32, i32* %379, i64 %413
  %415 = bitcast i32* %414 to <4 x i32>*
  %416 = load <4 x i32>, <4 x i32>* %415, align 4
  %417 = getelementptr inbounds i32, i32* %414, i64 4
  %418 = bitcast i32* %417 to <4 x i32>*
  %419 = load <4 x i32>, <4 x i32>* %418, align 4
  %420 = mul nsw <4 x i32> %416, %411
  %421 = mul nsw <4 x i32> %419, %412
  %422 = or i64 %392, 24
  %423 = getelementptr inbounds i32, i32* %379, i64 %422
  %424 = bitcast i32* %423 to <4 x i32>*
  %425 = load <4 x i32>, <4 x i32>* %424, align 4
  %426 = getelementptr inbounds i32, i32* %423, i64 4
  %427 = bitcast i32* %426 to <4 x i32>*
  %428 = load <4 x i32>, <4 x i32>* %427, align 4
  %429 = mul nsw <4 x i32> %425, %420
  %430 = mul nsw <4 x i32> %428, %421
  %431 = add i64 %392, 32
  %432 = add i64 %395, -4
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %391, !llvm.loop !519

434:                                              ; preds = %391, %382
  %435 = phi <4 x i32> [ undef, %382 ], [ %429, %391 ]
  %436 = phi <4 x i32> [ undef, %382 ], [ %430, %391 ]
  %437 = phi i64 [ 0, %382 ], [ %431, %391 ]
  %438 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %382 ], [ %429, %391 ]
  %439 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %382 ], [ %430, %391 ]
  %440 = icmp eq i64 %387, 0
  br i1 %440, label %457, label %441

441:                                              ; preds = %434, %441
  %442 = phi i64 [ %454, %441 ], [ %437, %434 ]
  %443 = phi <4 x i32> [ %452, %441 ], [ %438, %434 ]
  %444 = phi <4 x i32> [ %453, %441 ], [ %439, %434 ]
  %445 = phi i64 [ %455, %441 ], [ %387, %434 ]
  %446 = getelementptr inbounds i32, i32* %379, i64 %442
  %447 = bitcast i32* %446 to <4 x i32>*
  %448 = load <4 x i32>, <4 x i32>* %447, align 4
  %449 = getelementptr inbounds i32, i32* %446, i64 4
  %450 = bitcast i32* %449 to <4 x i32>*
  %451 = load <4 x i32>, <4 x i32>* %450, align 4
  %452 = mul nsw <4 x i32> %448, %443
  %453 = mul nsw <4 x i32> %451, %444
  %454 = add i64 %442, 8
  %455 = add i64 %445, -1
  %456 = icmp eq i64 %455, 0
  br i1 %456, label %457, label %441, !llvm.loop !520

457:                                              ; preds = %441, %434
  %458 = phi <4 x i32> [ %435, %434 ], [ %452, %441 ]
  %459 = phi <4 x i32> [ %436, %434 ], [ %453, %441 ]
  %460 = mul <4 x i32> %459, %458
  %461 = shufflevector <4 x i32> %460, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %462 = mul <4 x i32> %460, %461
  %463 = shufflevector <4 x i32> %462, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %464 = mul <4 x i32> %462, %463
  %465 = extractelement <4 x i32> %464, i32 0
  %466 = icmp eq i64 %383, %380
  br i1 %466, label %478, label %467

467:                                              ; preds = %457, %378
  %468 = phi i64 [ 0, %378 ], [ %383, %457 ]
  %469 = phi i32 [ 1, %378 ], [ %465, %457 ]
  br label %470

470:                                              ; preds = %467, %470
  %471 = phi i64 [ %476, %470 ], [ %468, %467 ]
  %472 = phi i32 [ %475, %470 ], [ %469, %467 ]
  %473 = getelementptr inbounds i32, i32* %379, i64 %471
  %474 = load i32, i32* %473, align 4
  %475 = mul nsw i32 %474, %472
  %476 = add nuw nsw i64 %471, 1
  %477 = icmp eq i64 %476, %380
  br i1 %477, label %478, label %470, !llvm.loop !521

478:                                              ; preds = %470, %457, %375
  %479 = phi i32 [ 1, %375 ], [ %465, %457 ], [ %475, %470 ]
  %480 = icmp sgt i32 %331, 5
  %481 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  br i1 %480, label %482, label %485

482:                                              ; preds = %478
  %483 = getelementptr inbounds %union.anon, %union.anon* %481, i64 0, i32 0
  %484 = load i32*, i32** %483, align 8
  br label %488

485:                                              ; preds = %478
  %486 = bitcast %union.anon* %481 to i32*
  %487 = icmp sgt i32 %331, 0
  br i1 %487, label %488, label %588

488:                                              ; preds = %485, %482
  %489 = phi i32* [ %484, %482 ], [ %486, %485 ]
  %490 = zext i32 %331 to i64
  %491 = icmp ult i32 %331, 8
  br i1 %491, label %577, label %492

492:                                              ; preds = %488
  %493 = and i64 %490, 4294967288
  %494 = add nsw i64 %493, -8
  %495 = lshr exact i64 %494, 3
  %496 = add nuw nsw i64 %495, 1
  %497 = and i64 %496, 3
  %498 = icmp ult i64 %494, 24
  br i1 %498, label %544, label %499

499:                                              ; preds = %492
  %500 = sub nsw i64 %496, %497
  br label %501

501:                                              ; preds = %501, %499
  %502 = phi i64 [ 0, %499 ], [ %541, %501 ]
  %503 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %499 ], [ %539, %501 ]
  %504 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %499 ], [ %540, %501 ]
  %505 = phi i64 [ %500, %499 ], [ %542, %501 ]
  %506 = getelementptr inbounds i32, i32* %489, i64 %502
  %507 = bitcast i32* %506 to <4 x i32>*
  %508 = load <4 x i32>, <4 x i32>* %507, align 4
  %509 = getelementptr inbounds i32, i32* %506, i64 4
  %510 = bitcast i32* %509 to <4 x i32>*
  %511 = load <4 x i32>, <4 x i32>* %510, align 4
  %512 = mul nsw <4 x i32> %508, %503
  %513 = mul nsw <4 x i32> %511, %504
  %514 = or i64 %502, 8
  %515 = getelementptr inbounds i32, i32* %489, i64 %514
  %516 = bitcast i32* %515 to <4 x i32>*
  %517 = load <4 x i32>, <4 x i32>* %516, align 4
  %518 = getelementptr inbounds i32, i32* %515, i64 4
  %519 = bitcast i32* %518 to <4 x i32>*
  %520 = load <4 x i32>, <4 x i32>* %519, align 4
  %521 = mul nsw <4 x i32> %517, %512
  %522 = mul nsw <4 x i32> %520, %513
  %523 = or i64 %502, 16
  %524 = getelementptr inbounds i32, i32* %489, i64 %523
  %525 = bitcast i32* %524 to <4 x i32>*
  %526 = load <4 x i32>, <4 x i32>* %525, align 4
  %527 = getelementptr inbounds i32, i32* %524, i64 4
  %528 = bitcast i32* %527 to <4 x i32>*
  %529 = load <4 x i32>, <4 x i32>* %528, align 4
  %530 = mul nsw <4 x i32> %526, %521
  %531 = mul nsw <4 x i32> %529, %522
  %532 = or i64 %502, 24
  %533 = getelementptr inbounds i32, i32* %489, i64 %532
  %534 = bitcast i32* %533 to <4 x i32>*
  %535 = load <4 x i32>, <4 x i32>* %534, align 4
  %536 = getelementptr inbounds i32, i32* %533, i64 4
  %537 = bitcast i32* %536 to <4 x i32>*
  %538 = load <4 x i32>, <4 x i32>* %537, align 4
  %539 = mul nsw <4 x i32> %535, %530
  %540 = mul nsw <4 x i32> %538, %531
  %541 = add i64 %502, 32
  %542 = add i64 %505, -4
  %543 = icmp eq i64 %542, 0
  br i1 %543, label %544, label %501, !llvm.loop !522

544:                                              ; preds = %501, %492
  %545 = phi <4 x i32> [ undef, %492 ], [ %539, %501 ]
  %546 = phi <4 x i32> [ undef, %492 ], [ %540, %501 ]
  %547 = phi i64 [ 0, %492 ], [ %541, %501 ]
  %548 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %492 ], [ %539, %501 ]
  %549 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %492 ], [ %540, %501 ]
  %550 = icmp eq i64 %497, 0
  br i1 %550, label %567, label %551

551:                                              ; preds = %544, %551
  %552 = phi i64 [ %564, %551 ], [ %547, %544 ]
  %553 = phi <4 x i32> [ %562, %551 ], [ %548, %544 ]
  %554 = phi <4 x i32> [ %563, %551 ], [ %549, %544 ]
  %555 = phi i64 [ %565, %551 ], [ %497, %544 ]
  %556 = getelementptr inbounds i32, i32* %489, i64 %552
  %557 = bitcast i32* %556 to <4 x i32>*
  %558 = load <4 x i32>, <4 x i32>* %557, align 4
  %559 = getelementptr inbounds i32, i32* %556, i64 4
  %560 = bitcast i32* %559 to <4 x i32>*
  %561 = load <4 x i32>, <4 x i32>* %560, align 4
  %562 = mul nsw <4 x i32> %558, %553
  %563 = mul nsw <4 x i32> %561, %554
  %564 = add i64 %552, 8
  %565 = add i64 %555, -1
  %566 = icmp eq i64 %565, 0
  br i1 %566, label %567, label %551, !llvm.loop !523

567:                                              ; preds = %551, %544
  %568 = phi <4 x i32> [ %545, %544 ], [ %562, %551 ]
  %569 = phi <4 x i32> [ %546, %544 ], [ %563, %551 ]
  %570 = mul <4 x i32> %569, %568
  %571 = shufflevector <4 x i32> %570, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %572 = mul <4 x i32> %570, %571
  %573 = shufflevector <4 x i32> %572, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %574 = mul <4 x i32> %572, %573
  %575 = extractelement <4 x i32> %574, i32 0
  %576 = icmp eq i64 %493, %490
  br i1 %576, label %588, label %577

577:                                              ; preds = %567, %488
  %578 = phi i64 [ 0, %488 ], [ %493, %567 ]
  %579 = phi i32 [ 1, %488 ], [ %575, %567 ]
  br label %580

580:                                              ; preds = %577, %580
  %581 = phi i64 [ %586, %580 ], [ %578, %577 ]
  %582 = phi i32 [ %585, %580 ], [ %579, %577 ]
  %583 = getelementptr inbounds i32, i32* %489, i64 %581
  %584 = load i32, i32* %583, align 4
  %585 = mul nsw i32 %584, %582
  %586 = add nuw nsw i64 %581, 1
  %587 = icmp eq i64 %586, %490
  br i1 %587, label %588, label %580, !llvm.loop !524

588:                                              ; preds = %580, %567, %485
  %589 = phi i32 [ 1, %485 ], [ %575, %567 ], [ %585, %580 ]
  %590 = icmp sgt i32 %367, 5
  %591 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  br i1 %590, label %592, label %595

592:                                              ; preds = %588
  %593 = getelementptr inbounds %union.anon, %union.anon* %591, i64 0, i32 0
  %594 = load i32*, i32** %593, align 8
  br label %598

595:                                              ; preds = %588
  %596 = bitcast %union.anon* %591 to i32*
  %597 = icmp sgt i32 %367, 0
  br i1 %597, label %598, label %698

598:                                              ; preds = %595, %592
  %599 = phi i32* [ %594, %592 ], [ %596, %595 ]
  %600 = zext i32 %367 to i64
  %601 = icmp ult i32 %367, 8
  br i1 %601, label %687, label %602

602:                                              ; preds = %598
  %603 = and i64 %600, 4294967288
  %604 = add nsw i64 %603, -8
  %605 = lshr exact i64 %604, 3
  %606 = add nuw nsw i64 %605, 1
  %607 = and i64 %606, 3
  %608 = icmp ult i64 %604, 24
  br i1 %608, label %654, label %609

609:                                              ; preds = %602
  %610 = sub nsw i64 %606, %607
  br label %611

611:                                              ; preds = %611, %609
  %612 = phi i64 [ 0, %609 ], [ %651, %611 ]
  %613 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %609 ], [ %649, %611 ]
  %614 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %609 ], [ %650, %611 ]
  %615 = phi i64 [ %610, %609 ], [ %652, %611 ]
  %616 = getelementptr inbounds i32, i32* %599, i64 %612
  %617 = bitcast i32* %616 to <4 x i32>*
  %618 = load <4 x i32>, <4 x i32>* %617, align 4
  %619 = getelementptr inbounds i32, i32* %616, i64 4
  %620 = bitcast i32* %619 to <4 x i32>*
  %621 = load <4 x i32>, <4 x i32>* %620, align 4
  %622 = mul nsw <4 x i32> %618, %613
  %623 = mul nsw <4 x i32> %621, %614
  %624 = or i64 %612, 8
  %625 = getelementptr inbounds i32, i32* %599, i64 %624
  %626 = bitcast i32* %625 to <4 x i32>*
  %627 = load <4 x i32>, <4 x i32>* %626, align 4
  %628 = getelementptr inbounds i32, i32* %625, i64 4
  %629 = bitcast i32* %628 to <4 x i32>*
  %630 = load <4 x i32>, <4 x i32>* %629, align 4
  %631 = mul nsw <4 x i32> %627, %622
  %632 = mul nsw <4 x i32> %630, %623
  %633 = or i64 %612, 16
  %634 = getelementptr inbounds i32, i32* %599, i64 %633
  %635 = bitcast i32* %634 to <4 x i32>*
  %636 = load <4 x i32>, <4 x i32>* %635, align 4
  %637 = getelementptr inbounds i32, i32* %634, i64 4
  %638 = bitcast i32* %637 to <4 x i32>*
  %639 = load <4 x i32>, <4 x i32>* %638, align 4
  %640 = mul nsw <4 x i32> %636, %631
  %641 = mul nsw <4 x i32> %639, %632
  %642 = or i64 %612, 24
  %643 = getelementptr inbounds i32, i32* %599, i64 %642
  %644 = bitcast i32* %643 to <4 x i32>*
  %645 = load <4 x i32>, <4 x i32>* %644, align 4
  %646 = getelementptr inbounds i32, i32* %643, i64 4
  %647 = bitcast i32* %646 to <4 x i32>*
  %648 = load <4 x i32>, <4 x i32>* %647, align 4
  %649 = mul nsw <4 x i32> %645, %640
  %650 = mul nsw <4 x i32> %648, %641
  %651 = add i64 %612, 32
  %652 = add i64 %615, -4
  %653 = icmp eq i64 %652, 0
  br i1 %653, label %654, label %611, !llvm.loop !525

654:                                              ; preds = %611, %602
  %655 = phi <4 x i32> [ undef, %602 ], [ %649, %611 ]
  %656 = phi <4 x i32> [ undef, %602 ], [ %650, %611 ]
  %657 = phi i64 [ 0, %602 ], [ %651, %611 ]
  %658 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %602 ], [ %649, %611 ]
  %659 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %602 ], [ %650, %611 ]
  %660 = icmp eq i64 %607, 0
  br i1 %660, label %677, label %661

661:                                              ; preds = %654, %661
  %662 = phi i64 [ %674, %661 ], [ %657, %654 ]
  %663 = phi <4 x i32> [ %672, %661 ], [ %658, %654 ]
  %664 = phi <4 x i32> [ %673, %661 ], [ %659, %654 ]
  %665 = phi i64 [ %675, %661 ], [ %607, %654 ]
  %666 = getelementptr inbounds i32, i32* %599, i64 %662
  %667 = bitcast i32* %666 to <4 x i32>*
  %668 = load <4 x i32>, <4 x i32>* %667, align 4
  %669 = getelementptr inbounds i32, i32* %666, i64 4
  %670 = bitcast i32* %669 to <4 x i32>*
  %671 = load <4 x i32>, <4 x i32>* %670, align 4
  %672 = mul nsw <4 x i32> %668, %663
  %673 = mul nsw <4 x i32> %671, %664
  %674 = add i64 %662, 8
  %675 = add i64 %665, -1
  %676 = icmp eq i64 %675, 0
  br i1 %676, label %677, label %661, !llvm.loop !526

677:                                              ; preds = %661, %654
  %678 = phi <4 x i32> [ %655, %654 ], [ %672, %661 ]
  %679 = phi <4 x i32> [ %656, %654 ], [ %673, %661 ]
  %680 = mul <4 x i32> %679, %678
  %681 = shufflevector <4 x i32> %680, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %682 = mul <4 x i32> %680, %681
  %683 = shufflevector <4 x i32> %682, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %684 = mul <4 x i32> %682, %683
  %685 = extractelement <4 x i32> %684, i32 0
  %686 = icmp eq i64 %603, %600
  br i1 %686, label %698, label %687

687:                                              ; preds = %677, %598
  %688 = phi i64 [ 0, %598 ], [ %603, %677 ]
  %689 = phi i32 [ 1, %598 ], [ %685, %677 ]
  br label %690

690:                                              ; preds = %687, %690
  %691 = phi i64 [ %696, %690 ], [ %688, %687 ]
  %692 = phi i32 [ %695, %690 ], [ %689, %687 ]
  %693 = getelementptr inbounds i32, i32* %599, i64 %691
  %694 = load i32, i32* %693, align 4
  %695 = mul nsw i32 %694, %692
  %696 = add nuw nsw i64 %691, 1
  %697 = icmp eq i64 %696, %600
  br i1 %697, label %698, label %690, !llvm.loop !527

698:                                              ; preds = %690, %677, %595
  %699 = phi i32 [ 1, %595 ], [ %685, %677 ], [ %695, %690 ]
  %700 = icmp eq i32 %479, %589
  br i1 %700, label %702, label %701

701:                                              ; preds = %698
  call void @abort() #12
  unreachable

702:                                              ; preds = %698
  %703 = icmp eq i32 %479, %699
  br i1 %703, label %705, label %704

704:                                              ; preds = %702
  call void @abort() #12
  unreachable

705:                                              ; preds = %702
  %706 = icmp sgt i32 %479, 0
  br i1 %706, label %707, label %849

707:                                              ; preds = %705
  %708 = sitofp i32 %260 to float
  %709 = sitofp i32 %261 to float
  %710 = zext i32 %479 to i64
  %711 = icmp ult i32 %479, 4
  br i1 %711, label %797, label %712

712:                                              ; preds = %707
  %713 = getelementptr i32, i32* %369, i64 %710
  %714 = bitcast i32* %713 to i8*
  %715 = getelementptr i32, i32* %298, i64 %710
  %716 = bitcast i32* %715 to i8*
  %717 = getelementptr i32, i32* %333, i64 %710
  %718 = bitcast i32* %717 to i8*
  %719 = icmp ult i8* %368, %716
  %720 = icmp ult i8* %297, %714
  %721 = and i1 %719, %720
  %722 = icmp ult i8* %368, %718
  %723 = icmp ult i8* %332, %714
  %724 = and i1 %722, %723
  %725 = or i1 %721, %724
  br i1 %725, label %797, label %726

726:                                              ; preds = %712
  %727 = and i64 %710, 4294967292
  %728 = insertelement <4 x float> undef, float %708, i32 0
  %729 = shufflevector <4 x float> %728, <4 x float> undef, <4 x i32> zeroinitializer
  %730 = insertelement <4 x float> undef, float %709, i32 0
  %731 = shufflevector <4 x float> %730, <4 x float> undef, <4 x i32> zeroinitializer
  %732 = add nsw i64 %727, -4
  %733 = lshr exact i64 %732, 2
  %734 = add nuw nsw i64 %733, 1
  %735 = and i64 %734, 1
  %736 = icmp eq i64 %732, 0
  br i1 %736, label %776, label %737

737:                                              ; preds = %726
  %738 = sub nuw nsw i64 %734, %735
  br label %739

739:                                              ; preds = %739, %737
  %740 = phi i64 [ 0, %737 ], [ %773, %739 ]
  %741 = phi i64 [ %738, %737 ], [ %774, %739 ]
  %742 = getelementptr inbounds i32, i32* %298, i64 %740
  %743 = bitcast i32* %742 to <4 x i32>*
  %744 = load <4 x i32>, <4 x i32>* %743, align 4, !alias.scope !528
  %745 = getelementptr inbounds i32, i32* %333, i64 %740
  %746 = bitcast i32* %745 to <4 x i32>*
  %747 = load <4 x i32>, <4 x i32>* %746, align 4, !alias.scope !531
  %748 = mul nsw <4 x i32> %747, %744
  %749 = sitofp <4 x i32> %748 to <4 x float>
  %750 = fcmp ogt <4 x float> %729, %749
  %751 = select <4 x i1> %750, <4 x float> %729, <4 x float> %749
  %752 = fcmp ogt <4 x float> %751, %731
  %753 = select <4 x i1> %752, <4 x float> %731, <4 x float> %751
  %754 = fptosi <4 x float> %753 to <4 x i32>
  %755 = getelementptr inbounds i32, i32* %369, i64 %740
  %756 = bitcast i32* %755 to <4 x i32>*
  store <4 x i32> %754, <4 x i32>* %756, align 4, !alias.scope !533, !noalias !535
  %757 = or i64 %740, 4
  %758 = getelementptr inbounds i32, i32* %298, i64 %757
  %759 = bitcast i32* %758 to <4 x i32>*
  %760 = load <4 x i32>, <4 x i32>* %759, align 4, !alias.scope !528
  %761 = getelementptr inbounds i32, i32* %333, i64 %757
  %762 = bitcast i32* %761 to <4 x i32>*
  %763 = load <4 x i32>, <4 x i32>* %762, align 4, !alias.scope !531
  %764 = mul nsw <4 x i32> %763, %760
  %765 = sitofp <4 x i32> %764 to <4 x float>
  %766 = fcmp ogt <4 x float> %729, %765
  %767 = select <4 x i1> %766, <4 x float> %729, <4 x float> %765
  %768 = fcmp ogt <4 x float> %767, %731
  %769 = select <4 x i1> %768, <4 x float> %731, <4 x float> %767
  %770 = fptosi <4 x float> %769 to <4 x i32>
  %771 = getelementptr inbounds i32, i32* %369, i64 %757
  %772 = bitcast i32* %771 to <4 x i32>*
  store <4 x i32> %770, <4 x i32>* %772, align 4, !alias.scope !533, !noalias !535
  %773 = add i64 %740, 8
  %774 = add i64 %741, -2
  %775 = icmp eq i64 %774, 0
  br i1 %775, label %776, label %739, !llvm.loop !536

776:                                              ; preds = %739, %726
  %777 = phi i64 [ 0, %726 ], [ %773, %739 ]
  %778 = icmp eq i64 %735, 0
  br i1 %778, label %795, label %779

779:                                              ; preds = %776
  %780 = getelementptr inbounds i32, i32* %298, i64 %777
  %781 = bitcast i32* %780 to <4 x i32>*
  %782 = load <4 x i32>, <4 x i32>* %781, align 4, !alias.scope !528
  %783 = getelementptr inbounds i32, i32* %333, i64 %777
  %784 = bitcast i32* %783 to <4 x i32>*
  %785 = load <4 x i32>, <4 x i32>* %784, align 4, !alias.scope !531
  %786 = mul nsw <4 x i32> %785, %782
  %787 = sitofp <4 x i32> %786 to <4 x float>
  %788 = fcmp ogt <4 x float> %729, %787
  %789 = select <4 x i1> %788, <4 x float> %729, <4 x float> %787
  %790 = fcmp ogt <4 x float> %789, %731
  %791 = select <4 x i1> %790, <4 x float> %731, <4 x float> %789
  %792 = fptosi <4 x float> %791 to <4 x i32>
  %793 = getelementptr inbounds i32, i32* %369, i64 %777
  %794 = bitcast i32* %793 to <4 x i32>*
  store <4 x i32> %792, <4 x i32>* %794, align 4, !alias.scope !533, !noalias !535
  br label %795

795:                                              ; preds = %776, %779
  %796 = icmp eq i64 %727, %710
  br i1 %796, label %849, label %797

797:                                              ; preds = %795, %712, %707
  %798 = phi i64 [ 0, %712 ], [ 0, %707 ], [ %727, %795 ]
  %799 = xor i64 %798, -1
  %800 = and i64 %710, 1
  %801 = icmp eq i64 %800, 0
  br i1 %801, label %816, label %802

802:                                              ; preds = %797
  %803 = getelementptr inbounds i32, i32* %298, i64 %798
  %804 = load i32, i32* %803, align 4
  %805 = getelementptr inbounds i32, i32* %333, i64 %798
  %806 = load i32, i32* %805, align 4
  %807 = mul nsw i32 %806, %804
  %808 = sitofp i32 %807 to float
  %809 = fcmp olt float %808, %708
  %810 = select i1 %809, float %708, float %808
  %811 = fcmp ogt float %810, %709
  %812 = select i1 %811, float %709, float %810
  %813 = fptosi float %812 to i32
  %814 = getelementptr inbounds i32, i32* %369, i64 %798
  store i32 %813, i32* %814, align 4
  %815 = or i64 %798, 1
  br label %816

816:                                              ; preds = %797, %802
  %817 = phi i64 [ %798, %797 ], [ %815, %802 ]
  %818 = sub nsw i64 0, %710
  %819 = icmp eq i64 %799, %818
  br i1 %819, label %849, label %820

820:                                              ; preds = %816, %820
  %821 = phi i64 [ %847, %820 ], [ %817, %816 ]
  %822 = getelementptr inbounds i32, i32* %298, i64 %821
  %823 = load i32, i32* %822, align 4
  %824 = getelementptr inbounds i32, i32* %333, i64 %821
  %825 = load i32, i32* %824, align 4
  %826 = mul nsw i32 %825, %823
  %827 = sitofp i32 %826 to float
  %828 = fcmp olt float %827, %708
  %829 = select i1 %828, float %708, float %827
  %830 = fcmp ogt float %829, %709
  %831 = select i1 %830, float %709, float %829
  %832 = fptosi float %831 to i32
  %833 = getelementptr inbounds i32, i32* %369, i64 %821
  store i32 %832, i32* %833, align 4
  %834 = add nuw nsw i64 %821, 1
  %835 = getelementptr inbounds i32, i32* %298, i64 %834
  %836 = load i32, i32* %835, align 4
  %837 = getelementptr inbounds i32, i32* %333, i64 %834
  %838 = load i32, i32* %837, align 4
  %839 = mul nsw i32 %838, %836
  %840 = sitofp i32 %839 to float
  %841 = fcmp olt float %840, %708
  %842 = select i1 %841, float %708, float %840
  %843 = fcmp ogt float %842, %709
  %844 = select i1 %843, float %709, float %842
  %845 = fptosi float %844 to i32
  %846 = getelementptr inbounds i32, i32* %369, i64 %834
  store i32 %845, i32* %846, align 4
  %847 = add nuw nsw i64 %821, 2
  %848 = icmp eq i64 %847, %710
  br i1 %848, label %849, label %820, !llvm.loop !537

849:                                              ; preds = %816, %820, %795, %705
  br i1 %590, label %850, label %856

850:                                              ; preds = %849
  %851 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %852 = load i32*, i32** %851, align 8
  %853 = icmp eq i32* %852, null
  br i1 %853, label %856, label %854

854:                                              ; preds = %850
  %855 = bitcast i32* %852 to i8*
  call void @_ZdaPv(i8* %855) #10
  br label %856

856:                                              ; preds = %849, %850, %854
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %334) #11
  br i1 %480, label %857, label %863

857:                                              ; preds = %856
  %858 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %859 = load i32*, i32** %858, align 8
  %860 = icmp eq i32* %859, null
  br i1 %860, label %863, label %861

861:                                              ; preds = %857
  %862 = bitcast i32* %859 to i8*
  call void @_ZdaPv(i8* %862) #10
  br label %863

863:                                              ; preds = %856, %857, %861
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %299) #11
  br i1 %370, label %864, label %1602

864:                                              ; preds = %863
  %865 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %866 = load i32*, i32** %865, align 8
  %867 = icmp eq i32* %866, null
  br i1 %867, label %1602, label %868

868:                                              ; preds = %864
  %869 = bitcast i32* %866 to i8*
  call void @_ZdaPv(i8* %869) #10
  br label %1602

870:                                              ; preds = %104
  %871 = getelementptr inbounds %struct.TfLiteMulParams, %struct.TfLiteMulParams* %2, i64 0, i32 0
  %872 = load i32, i32* %871, align 4
  %873 = add i32 %872, -1
  %874 = icmp ult i32 %873, 3
  br i1 %84, label %875, label %1017

875:                                              ; preds = %870
  br i1 %874, label %876, label %883

876:                                              ; preds = %875
  %877 = sext i32 %873 to i64
  %878 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.52, i64 0, i64 %877
  %879 = load float, float* %878, align 4
  %880 = sext i32 %873 to i64
  %881 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.53, i64 0, i64 %880
  %882 = load float, float* %881, align 4
  br label %883

883:                                              ; preds = %875, %876
  %884 = phi float [ %879, %876 ], [ 0xC7EFFFFFE0000000, %875 ]
  %885 = phi float [ %882, %876 ], [ 0x47EFFFFFE0000000, %875 ]
  %886 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 13
  store float %884, float* %886, align 4
  %887 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 14
  store float %885, float* %887, align 4
  %888 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %888) #11
  br i1 %25, label %889, label %891

889:                                              ; preds = %883
  %890 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %890, align 8, !alias.scope !538
  br label %919

891:                                              ; preds = %883
  %892 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %893 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %892, align 8, !noalias !538
  %894 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %893, i64 0, i32 0
  %895 = load i32, i32* %894, align 4, !noalias !538
  %896 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %893, i64 0, i32 1, i64 0
  %897 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %895, i32* %897, align 8, !alias.scope !538
  %898 = icmp sgt i32 %895, 5
  br i1 %898, label %899, label %906

899:                                              ; preds = %891
  %900 = sext i32 %895 to i64
  %901 = shl nsw i64 %900, 2
  %902 = call i8* @_Znam(i64 %901) #10, !noalias !538
  %903 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %904 = bitcast i32** %903 to i8**
  store i8* %902, i8** %904, align 8, !alias.scope !538
  %905 = bitcast i8* %902 to i32*
  br label %911

906:                                              ; preds = %891
  %907 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %908 = bitcast %union.anon* %907 to i32*
  %909 = sext i32 %895 to i64
  %910 = shl nsw i64 %909, 2
  br label %911

911:                                              ; preds = %906, %899
  %912 = phi i64 [ %901, %899 ], [ %910, %906 ]
  %913 = phi i32* [ %905, %899 ], [ %908, %906 ]
  %914 = bitcast i32* %913 to i8*
  %915 = bitcast i32* %896 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %914, i8* align 4 %915, i64 %912, i1 false) #11
  %916 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %917 = bitcast %union.TfLitePtrUnion* %916 to float**
  %918 = load float*, float** %917, align 8
  br label %919

919:                                              ; preds = %889, %911
  %920 = phi float* [ %918, %911 ], [ null, %889 ]
  %921 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %921) #11
  br i1 %55, label %922, label %924

922:                                              ; preds = %919
  %923 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %923, align 8, !alias.scope !541
  br label %952

924:                                              ; preds = %919
  %925 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %926 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %925, align 8, !noalias !541
  %927 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %926, i64 0, i32 0
  %928 = load i32, i32* %927, align 4, !noalias !541
  %929 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %926, i64 0, i32 1, i64 0
  %930 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %928, i32* %930, align 8, !alias.scope !541
  %931 = icmp sgt i32 %928, 5
  br i1 %931, label %932, label %939

932:                                              ; preds = %924
  %933 = sext i32 %928 to i64
  %934 = shl nsw i64 %933, 2
  %935 = call i8* @_Znam(i64 %934) #10, !noalias !541
  %936 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %937 = bitcast i32** %936 to i8**
  store i8* %935, i8** %937, align 8, !alias.scope !541
  %938 = bitcast i8* %935 to i32*
  br label %944

939:                                              ; preds = %924
  %940 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %941 = bitcast %union.anon* %940 to i32*
  %942 = sext i32 %928 to i64
  %943 = shl nsw i64 %942, 2
  br label %944

944:                                              ; preds = %939, %932
  %945 = phi i64 [ %934, %932 ], [ %943, %939 ]
  %946 = phi i32* [ %938, %932 ], [ %941, %939 ]
  %947 = bitcast i32* %946 to i8*
  %948 = bitcast i32* %929 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %947, i8* align 4 %948, i64 %945, i1 false) #11
  %949 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %950 = bitcast %union.TfLitePtrUnion* %949 to float**
  %951 = load float*, float** %950, align 8
  br label %952

952:                                              ; preds = %922, %944
  %953 = phi float* [ %951, %944 ], [ null, %922 ]
  %954 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %954) #11
  %955 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %955, label %956, label %958

956:                                              ; preds = %952
  %957 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %957, align 8, !alias.scope !544
  br label %986

958:                                              ; preds = %952
  %959 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %960 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %959, align 8, !noalias !544
  %961 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %960, i64 0, i32 0
  %962 = load i32, i32* %961, align 4, !noalias !544
  %963 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %960, i64 0, i32 1, i64 0
  %964 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %962, i32* %964, align 8, !alias.scope !544
  %965 = icmp sgt i32 %962, 5
  br i1 %965, label %966, label %973

966:                                              ; preds = %958
  %967 = sext i32 %962 to i64
  %968 = shl nsw i64 %967, 2
  %969 = call i8* @_Znam(i64 %968) #10, !noalias !544
  %970 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %971 = bitcast i32** %970 to i8**
  store i8* %969, i8** %971, align 8, !alias.scope !544
  %972 = bitcast i8* %969 to i32*
  br label %978

973:                                              ; preds = %958
  %974 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %975 = bitcast %union.anon* %974 to i32*
  %976 = sext i32 %962 to i64
  %977 = shl nsw i64 %976, 2
  br label %978

978:                                              ; preds = %973, %966
  %979 = phi i64 [ %968, %966 ], [ %977, %973 ]
  %980 = phi i32* [ %972, %966 ], [ %975, %973 ]
  %981 = bitcast i32* %980 to i8*
  %982 = bitcast i32* %963 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %981, i8* align 4 %982, i64 %979, i1 false) #11
  %983 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %984 = bitcast %union.TfLitePtrUnion* %983 to float**
  %985 = load float*, float** %984, align 8
  br label %986

986:                                              ; preds = %956, %978
  %987 = phi float* [ %985, %978 ], [ null, %956 ]
  call void @_ZN6tflite13optimized_ops20BroadcastMulDispatchIfEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, float* %920, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %18, float* %953, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %19, float* %987)
  %988 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  %989 = load i32, i32* %988, align 8
  %990 = icmp sgt i32 %989, 5
  br i1 %990, label %991, label %997

991:                                              ; preds = %986
  %992 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %993 = load i32*, i32** %992, align 8
  %994 = icmp eq i32* %993, null
  br i1 %994, label %997, label %995

995:                                              ; preds = %991
  %996 = bitcast i32* %993 to i8*
  call void @_ZdaPv(i8* %996) #10
  br label %997

997:                                              ; preds = %986, %991, %995
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %954) #11
  %998 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  %999 = load i32, i32* %998, align 8
  %1000 = icmp sgt i32 %999, 5
  br i1 %1000, label %1001, label %1007

1001:                                             ; preds = %997
  %1002 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %1003 = load i32*, i32** %1002, align 8
  %1004 = icmp eq i32* %1003, null
  br i1 %1004, label %1007, label %1005

1005:                                             ; preds = %1001
  %1006 = bitcast i32* %1003 to i8*
  call void @_ZdaPv(i8* %1006) #10
  br label %1007

1007:                                             ; preds = %997, %1001, %1005
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %921) #11
  %1008 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %1009 = load i32, i32* %1008, align 8
  %1010 = icmp sgt i32 %1009, 5
  br i1 %1010, label %1011, label %1602

1011:                                             ; preds = %1007
  %1012 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %1013 = load i32*, i32** %1012, align 8
  %1014 = icmp eq i32* %1013, null
  br i1 %1014, label %1602, label %1015

1015:                                             ; preds = %1011
  %1016 = bitcast i32* %1013 to i8*
  call void @_ZdaPv(i8* %1016) #10
  br label %1602

1017:                                             ; preds = %870
  br i1 %874, label %1018, label %1025

1018:                                             ; preds = %1017
  %1019 = sext i32 %873 to i64
  %1020 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.52, i64 0, i64 %1019
  %1021 = load float, float* %1020, align 4
  %1022 = sext i32 %873 to i64
  %1023 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3mul7EvalMulILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.53, i64 0, i64 %1022
  %1024 = load float, float* %1023, align 4
  br label %1025

1025:                                             ; preds = %1017, %1018
  %1026 = phi float [ %1021, %1018 ], [ 0xC7EFFFFFE0000000, %1017 ]
  %1027 = phi float [ %1024, %1018 ], [ 0x47EFFFFFE0000000, %1017 ]
  %1028 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 13
  store float %1026, float* %1028, align 4
  %1029 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 14
  store float %1027, float* %1029, align 4
  %1030 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1030) #11
  br i1 %25, label %1031, label %1033

1031:                                             ; preds = %1025
  %1032 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %1032, align 8, !alias.scope !547
  br label %1062

1033:                                             ; preds = %1025
  %1034 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %1035 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1034, align 8, !noalias !547
  %1036 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1035, i64 0, i32 0
  %1037 = load i32, i32* %1036, align 4, !noalias !547
  %1038 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1035, i64 0, i32 1, i64 0
  %1039 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %1037, i32* %1039, align 8, !alias.scope !547
  %1040 = icmp sgt i32 %1037, 5
  br i1 %1040, label %1041, label %1048

1041:                                             ; preds = %1033
  %1042 = sext i32 %1037 to i64
  %1043 = shl nsw i64 %1042, 2
  %1044 = call i8* @_Znam(i64 %1043) #10, !noalias !547
  %1045 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1046 = bitcast i32** %1045 to i8**
  store i8* %1044, i8** %1046, align 8, !alias.scope !547
  %1047 = bitcast i8* %1044 to i32*
  br label %1053

1048:                                             ; preds = %1033
  %1049 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %1050 = bitcast %union.anon* %1049 to i32*
  %1051 = sext i32 %1037 to i64
  %1052 = shl nsw i64 %1051, 2
  br label %1053

1053:                                             ; preds = %1048, %1041
  %1054 = phi i64 [ %1043, %1041 ], [ %1052, %1048 ]
  %1055 = phi i32* [ %1047, %1041 ], [ %1050, %1048 ]
  %1056 = bitcast i32* %1055 to i8*
  %1057 = bitcast i32* %1038 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1056, i8* align 4 %1057, i64 %1054, i1 false) #11
  %1058 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %1059 = bitcast %union.TfLitePtrUnion* %1058 to float**
  %1060 = load float*, float** %1059, align 8
  %1061 = bitcast float* %1060 to i8*
  br label %1062

1062:                                             ; preds = %1031, %1053
  %1063 = phi i32 [ %1037, %1053 ], [ 0, %1031 ]
  %1064 = phi i8* [ %1061, %1053 ], [ null, %1031 ]
  %1065 = phi float* [ %1060, %1053 ], [ null, %1031 ]
  %1066 = bitcast %"class.tflite::RuntimeShape"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1066) #11
  br i1 %55, label %1067, label %1069

1067:                                             ; preds = %1062
  %1068 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 0, i32* %1068, align 8, !alias.scope !550
  br label %1098

1069:                                             ; preds = %1062
  %1070 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %1071 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1070, align 8, !noalias !550
  %1072 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1071, i64 0, i32 0
  %1073 = load i32, i32* %1072, align 4, !noalias !550
  %1074 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1071, i64 0, i32 1, i64 0
  %1075 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 %1073, i32* %1075, align 8, !alias.scope !550
  %1076 = icmp sgt i32 %1073, 5
  br i1 %1076, label %1077, label %1084

1077:                                             ; preds = %1069
  %1078 = sext i32 %1073 to i64
  %1079 = shl nsw i64 %1078, 2
  %1080 = call i8* @_Znam(i64 %1079) #10, !noalias !550
  %1081 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %1082 = bitcast i32** %1081 to i8**
  store i8* %1080, i8** %1082, align 8, !alias.scope !550
  %1083 = bitcast i8* %1080 to i32*
  br label %1089

1084:                                             ; preds = %1069
  %1085 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  %1086 = bitcast %union.anon* %1085 to i32*
  %1087 = sext i32 %1073 to i64
  %1088 = shl nsw i64 %1087, 2
  br label %1089

1089:                                             ; preds = %1084, %1077
  %1090 = phi i64 [ %1079, %1077 ], [ %1088, %1084 ]
  %1091 = phi i32* [ %1083, %1077 ], [ %1086, %1084 ]
  %1092 = bitcast i32* %1091 to i8*
  %1093 = bitcast i32* %1074 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1092, i8* align 4 %1093, i64 %1090, i1 false) #11
  %1094 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %1095 = bitcast %union.TfLitePtrUnion* %1094 to float**
  %1096 = load float*, float** %1095, align 8
  %1097 = bitcast float* %1096 to i8*
  br label %1098

1098:                                             ; preds = %1067, %1089
  %1099 = phi i32 [ %1073, %1089 ], [ 0, %1067 ]
  %1100 = phi i8* [ %1097, %1089 ], [ null, %1067 ]
  %1101 = phi float* [ %1096, %1089 ], [ null, %1067 ]
  %1102 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1102) #11
  %1103 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %1103, label %1104, label %1106

1104:                                             ; preds = %1098
  %1105 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %1105, align 8, !alias.scope !553
  br label %1135

1106:                                             ; preds = %1098
  %1107 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %1108 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1107, align 8, !noalias !553
  %1109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1108, i64 0, i32 0
  %1110 = load i32, i32* %1109, align 4, !noalias !553
  %1111 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1108, i64 0, i32 1, i64 0
  %1112 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %1110, i32* %1112, align 8, !alias.scope !553
  %1113 = icmp sgt i32 %1110, 5
  br i1 %1113, label %1114, label %1121

1114:                                             ; preds = %1106
  %1115 = sext i32 %1110 to i64
  %1116 = shl nsw i64 %1115, 2
  %1117 = call i8* @_Znam(i64 %1116) #10, !noalias !553
  %1118 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1119 = bitcast i32** %1118 to i8**
  store i8* %1117, i8** %1119, align 8, !alias.scope !553
  %1120 = bitcast i8* %1117 to i32*
  br label %1126

1121:                                             ; preds = %1106
  %1122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %1123 = bitcast %union.anon* %1122 to i32*
  %1124 = sext i32 %1110 to i64
  %1125 = shl nsw i64 %1124, 2
  br label %1126

1126:                                             ; preds = %1121, %1114
  %1127 = phi i64 [ %1116, %1114 ], [ %1125, %1121 ]
  %1128 = phi i32* [ %1120, %1114 ], [ %1123, %1121 ]
  %1129 = bitcast i32* %1128 to i8*
  %1130 = bitcast i32* %1111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1129, i8* align 4 %1130, i64 %1127, i1 false) #11
  %1131 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %1132 = bitcast %union.TfLitePtrUnion* %1131 to float**
  %1133 = load float*, float** %1132, align 8
  %1134 = bitcast float* %1133 to i8*
  br label %1135

1135:                                             ; preds = %1104, %1126
  %1136 = phi i32 [ %1110, %1126 ], [ 0, %1104 ]
  %1137 = phi i8* [ %1134, %1126 ], [ null, %1104 ]
  %1138 = phi float* [ %1133, %1126 ], [ null, %1104 ]
  %1139 = icmp sgt i32 %1063, 5
  %1140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  br i1 %1139, label %1141, label %1144

1141:                                             ; preds = %1135
  %1142 = getelementptr inbounds %union.anon, %union.anon* %1140, i64 0, i32 0
  %1143 = load i32*, i32** %1142, align 8
  br label %1147

1144:                                             ; preds = %1135
  %1145 = bitcast %union.anon* %1140 to i32*
  %1146 = icmp sgt i32 %1063, 0
  br i1 %1146, label %1147, label %1247

1147:                                             ; preds = %1144, %1141
  %1148 = phi i32* [ %1143, %1141 ], [ %1145, %1144 ]
  %1149 = zext i32 %1063 to i64
  %1150 = icmp ult i32 %1063, 8
  br i1 %1150, label %1236, label %1151

1151:                                             ; preds = %1147
  %1152 = and i64 %1149, 4294967288
  %1153 = add nsw i64 %1152, -8
  %1154 = lshr exact i64 %1153, 3
  %1155 = add nuw nsw i64 %1154, 1
  %1156 = and i64 %1155, 3
  %1157 = icmp ult i64 %1153, 24
  br i1 %1157, label %1203, label %1158

1158:                                             ; preds = %1151
  %1159 = sub nsw i64 %1155, %1156
  br label %1160

1160:                                             ; preds = %1160, %1158
  %1161 = phi i64 [ 0, %1158 ], [ %1200, %1160 ]
  %1162 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1158 ], [ %1198, %1160 ]
  %1163 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1158 ], [ %1199, %1160 ]
  %1164 = phi i64 [ %1159, %1158 ], [ %1201, %1160 ]
  %1165 = getelementptr inbounds i32, i32* %1148, i64 %1161
  %1166 = bitcast i32* %1165 to <4 x i32>*
  %1167 = load <4 x i32>, <4 x i32>* %1166, align 4
  %1168 = getelementptr inbounds i32, i32* %1165, i64 4
  %1169 = bitcast i32* %1168 to <4 x i32>*
  %1170 = load <4 x i32>, <4 x i32>* %1169, align 4
  %1171 = mul nsw <4 x i32> %1167, %1162
  %1172 = mul nsw <4 x i32> %1170, %1163
  %1173 = or i64 %1161, 8
  %1174 = getelementptr inbounds i32, i32* %1148, i64 %1173
  %1175 = bitcast i32* %1174 to <4 x i32>*
  %1176 = load <4 x i32>, <4 x i32>* %1175, align 4
  %1177 = getelementptr inbounds i32, i32* %1174, i64 4
  %1178 = bitcast i32* %1177 to <4 x i32>*
  %1179 = load <4 x i32>, <4 x i32>* %1178, align 4
  %1180 = mul nsw <4 x i32> %1176, %1171
  %1181 = mul nsw <4 x i32> %1179, %1172
  %1182 = or i64 %1161, 16
  %1183 = getelementptr inbounds i32, i32* %1148, i64 %1182
  %1184 = bitcast i32* %1183 to <4 x i32>*
  %1185 = load <4 x i32>, <4 x i32>* %1184, align 4
  %1186 = getelementptr inbounds i32, i32* %1183, i64 4
  %1187 = bitcast i32* %1186 to <4 x i32>*
  %1188 = load <4 x i32>, <4 x i32>* %1187, align 4
  %1189 = mul nsw <4 x i32> %1185, %1180
  %1190 = mul nsw <4 x i32> %1188, %1181
  %1191 = or i64 %1161, 24
  %1192 = getelementptr inbounds i32, i32* %1148, i64 %1191
  %1193 = bitcast i32* %1192 to <4 x i32>*
  %1194 = load <4 x i32>, <4 x i32>* %1193, align 4
  %1195 = getelementptr inbounds i32, i32* %1192, i64 4
  %1196 = bitcast i32* %1195 to <4 x i32>*
  %1197 = load <4 x i32>, <4 x i32>* %1196, align 4
  %1198 = mul nsw <4 x i32> %1194, %1189
  %1199 = mul nsw <4 x i32> %1197, %1190
  %1200 = add i64 %1161, 32
  %1201 = add i64 %1164, -4
  %1202 = icmp eq i64 %1201, 0
  br i1 %1202, label %1203, label %1160, !llvm.loop !556

1203:                                             ; preds = %1160, %1151
  %1204 = phi <4 x i32> [ undef, %1151 ], [ %1198, %1160 ]
  %1205 = phi <4 x i32> [ undef, %1151 ], [ %1199, %1160 ]
  %1206 = phi i64 [ 0, %1151 ], [ %1200, %1160 ]
  %1207 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1151 ], [ %1198, %1160 ]
  %1208 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1151 ], [ %1199, %1160 ]
  %1209 = icmp eq i64 %1156, 0
  br i1 %1209, label %1226, label %1210

1210:                                             ; preds = %1203, %1210
  %1211 = phi i64 [ %1223, %1210 ], [ %1206, %1203 ]
  %1212 = phi <4 x i32> [ %1221, %1210 ], [ %1207, %1203 ]
  %1213 = phi <4 x i32> [ %1222, %1210 ], [ %1208, %1203 ]
  %1214 = phi i64 [ %1224, %1210 ], [ %1156, %1203 ]
  %1215 = getelementptr inbounds i32, i32* %1148, i64 %1211
  %1216 = bitcast i32* %1215 to <4 x i32>*
  %1217 = load <4 x i32>, <4 x i32>* %1216, align 4
  %1218 = getelementptr inbounds i32, i32* %1215, i64 4
  %1219 = bitcast i32* %1218 to <4 x i32>*
  %1220 = load <4 x i32>, <4 x i32>* %1219, align 4
  %1221 = mul nsw <4 x i32> %1217, %1212
  %1222 = mul nsw <4 x i32> %1220, %1213
  %1223 = add i64 %1211, 8
  %1224 = add i64 %1214, -1
  %1225 = icmp eq i64 %1224, 0
  br i1 %1225, label %1226, label %1210, !llvm.loop !557

1226:                                             ; preds = %1210, %1203
  %1227 = phi <4 x i32> [ %1204, %1203 ], [ %1221, %1210 ]
  %1228 = phi <4 x i32> [ %1205, %1203 ], [ %1222, %1210 ]
  %1229 = mul <4 x i32> %1228, %1227
  %1230 = shufflevector <4 x i32> %1229, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1231 = mul <4 x i32> %1229, %1230
  %1232 = shufflevector <4 x i32> %1231, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1233 = mul <4 x i32> %1231, %1232
  %1234 = extractelement <4 x i32> %1233, i32 0
  %1235 = icmp eq i64 %1152, %1149
  br i1 %1235, label %1247, label %1236

1236:                                             ; preds = %1226, %1147
  %1237 = phi i64 [ 0, %1147 ], [ %1152, %1226 ]
  %1238 = phi i32 [ 1, %1147 ], [ %1234, %1226 ]
  br label %1239

1239:                                             ; preds = %1236, %1239
  %1240 = phi i64 [ %1245, %1239 ], [ %1237, %1236 ]
  %1241 = phi i32 [ %1244, %1239 ], [ %1238, %1236 ]
  %1242 = getelementptr inbounds i32, i32* %1148, i64 %1240
  %1243 = load i32, i32* %1242, align 4
  %1244 = mul nsw i32 %1243, %1241
  %1245 = add nuw nsw i64 %1240, 1
  %1246 = icmp eq i64 %1245, %1149
  br i1 %1246, label %1247, label %1239, !llvm.loop !558

1247:                                             ; preds = %1239, %1226, %1144
  %1248 = phi i32 [ 1, %1144 ], [ %1234, %1226 ], [ %1244, %1239 ]
  %1249 = icmp sgt i32 %1099, 5
  %1250 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  br i1 %1249, label %1251, label %1254

1251:                                             ; preds = %1247
  %1252 = getelementptr inbounds %union.anon, %union.anon* %1250, i64 0, i32 0
  %1253 = load i32*, i32** %1252, align 8
  br label %1257

1254:                                             ; preds = %1247
  %1255 = bitcast %union.anon* %1250 to i32*
  %1256 = icmp sgt i32 %1099, 0
  br i1 %1256, label %1257, label %1357

1257:                                             ; preds = %1254, %1251
  %1258 = phi i32* [ %1253, %1251 ], [ %1255, %1254 ]
  %1259 = zext i32 %1099 to i64
  %1260 = icmp ult i32 %1099, 8
  br i1 %1260, label %1346, label %1261

1261:                                             ; preds = %1257
  %1262 = and i64 %1259, 4294967288
  %1263 = add nsw i64 %1262, -8
  %1264 = lshr exact i64 %1263, 3
  %1265 = add nuw nsw i64 %1264, 1
  %1266 = and i64 %1265, 3
  %1267 = icmp ult i64 %1263, 24
  br i1 %1267, label %1313, label %1268

1268:                                             ; preds = %1261
  %1269 = sub nsw i64 %1265, %1266
  br label %1270

1270:                                             ; preds = %1270, %1268
  %1271 = phi i64 [ 0, %1268 ], [ %1310, %1270 ]
  %1272 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1268 ], [ %1308, %1270 ]
  %1273 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1268 ], [ %1309, %1270 ]
  %1274 = phi i64 [ %1269, %1268 ], [ %1311, %1270 ]
  %1275 = getelementptr inbounds i32, i32* %1258, i64 %1271
  %1276 = bitcast i32* %1275 to <4 x i32>*
  %1277 = load <4 x i32>, <4 x i32>* %1276, align 4
  %1278 = getelementptr inbounds i32, i32* %1275, i64 4
  %1279 = bitcast i32* %1278 to <4 x i32>*
  %1280 = load <4 x i32>, <4 x i32>* %1279, align 4
  %1281 = mul nsw <4 x i32> %1277, %1272
  %1282 = mul nsw <4 x i32> %1280, %1273
  %1283 = or i64 %1271, 8
  %1284 = getelementptr inbounds i32, i32* %1258, i64 %1283
  %1285 = bitcast i32* %1284 to <4 x i32>*
  %1286 = load <4 x i32>, <4 x i32>* %1285, align 4
  %1287 = getelementptr inbounds i32, i32* %1284, i64 4
  %1288 = bitcast i32* %1287 to <4 x i32>*
  %1289 = load <4 x i32>, <4 x i32>* %1288, align 4
  %1290 = mul nsw <4 x i32> %1286, %1281
  %1291 = mul nsw <4 x i32> %1289, %1282
  %1292 = or i64 %1271, 16
  %1293 = getelementptr inbounds i32, i32* %1258, i64 %1292
  %1294 = bitcast i32* %1293 to <4 x i32>*
  %1295 = load <4 x i32>, <4 x i32>* %1294, align 4
  %1296 = getelementptr inbounds i32, i32* %1293, i64 4
  %1297 = bitcast i32* %1296 to <4 x i32>*
  %1298 = load <4 x i32>, <4 x i32>* %1297, align 4
  %1299 = mul nsw <4 x i32> %1295, %1290
  %1300 = mul nsw <4 x i32> %1298, %1291
  %1301 = or i64 %1271, 24
  %1302 = getelementptr inbounds i32, i32* %1258, i64 %1301
  %1303 = bitcast i32* %1302 to <4 x i32>*
  %1304 = load <4 x i32>, <4 x i32>* %1303, align 4
  %1305 = getelementptr inbounds i32, i32* %1302, i64 4
  %1306 = bitcast i32* %1305 to <4 x i32>*
  %1307 = load <4 x i32>, <4 x i32>* %1306, align 4
  %1308 = mul nsw <4 x i32> %1304, %1299
  %1309 = mul nsw <4 x i32> %1307, %1300
  %1310 = add i64 %1271, 32
  %1311 = add i64 %1274, -4
  %1312 = icmp eq i64 %1311, 0
  br i1 %1312, label %1313, label %1270, !llvm.loop !559

1313:                                             ; preds = %1270, %1261
  %1314 = phi <4 x i32> [ undef, %1261 ], [ %1308, %1270 ]
  %1315 = phi <4 x i32> [ undef, %1261 ], [ %1309, %1270 ]
  %1316 = phi i64 [ 0, %1261 ], [ %1310, %1270 ]
  %1317 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1261 ], [ %1308, %1270 ]
  %1318 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1261 ], [ %1309, %1270 ]
  %1319 = icmp eq i64 %1266, 0
  br i1 %1319, label %1336, label %1320

1320:                                             ; preds = %1313, %1320
  %1321 = phi i64 [ %1333, %1320 ], [ %1316, %1313 ]
  %1322 = phi <4 x i32> [ %1331, %1320 ], [ %1317, %1313 ]
  %1323 = phi <4 x i32> [ %1332, %1320 ], [ %1318, %1313 ]
  %1324 = phi i64 [ %1334, %1320 ], [ %1266, %1313 ]
  %1325 = getelementptr inbounds i32, i32* %1258, i64 %1321
  %1326 = bitcast i32* %1325 to <4 x i32>*
  %1327 = load <4 x i32>, <4 x i32>* %1326, align 4
  %1328 = getelementptr inbounds i32, i32* %1325, i64 4
  %1329 = bitcast i32* %1328 to <4 x i32>*
  %1330 = load <4 x i32>, <4 x i32>* %1329, align 4
  %1331 = mul nsw <4 x i32> %1327, %1322
  %1332 = mul nsw <4 x i32> %1330, %1323
  %1333 = add i64 %1321, 8
  %1334 = add i64 %1324, -1
  %1335 = icmp eq i64 %1334, 0
  br i1 %1335, label %1336, label %1320, !llvm.loop !560

1336:                                             ; preds = %1320, %1313
  %1337 = phi <4 x i32> [ %1314, %1313 ], [ %1331, %1320 ]
  %1338 = phi <4 x i32> [ %1315, %1313 ], [ %1332, %1320 ]
  %1339 = mul <4 x i32> %1338, %1337
  %1340 = shufflevector <4 x i32> %1339, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1341 = mul <4 x i32> %1339, %1340
  %1342 = shufflevector <4 x i32> %1341, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1343 = mul <4 x i32> %1341, %1342
  %1344 = extractelement <4 x i32> %1343, i32 0
  %1345 = icmp eq i64 %1262, %1259
  br i1 %1345, label %1357, label %1346

1346:                                             ; preds = %1336, %1257
  %1347 = phi i64 [ 0, %1257 ], [ %1262, %1336 ]
  %1348 = phi i32 [ 1, %1257 ], [ %1344, %1336 ]
  br label %1349

1349:                                             ; preds = %1346, %1349
  %1350 = phi i64 [ %1355, %1349 ], [ %1347, %1346 ]
  %1351 = phi i32 [ %1354, %1349 ], [ %1348, %1346 ]
  %1352 = getelementptr inbounds i32, i32* %1258, i64 %1350
  %1353 = load i32, i32* %1352, align 4
  %1354 = mul nsw i32 %1353, %1351
  %1355 = add nuw nsw i64 %1350, 1
  %1356 = icmp eq i64 %1355, %1259
  br i1 %1356, label %1357, label %1349, !llvm.loop !561

1357:                                             ; preds = %1349, %1336, %1254
  %1358 = phi i32 [ 1, %1254 ], [ %1344, %1336 ], [ %1354, %1349 ]
  %1359 = icmp sgt i32 %1136, 5
  %1360 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  br i1 %1359, label %1361, label %1364

1361:                                             ; preds = %1357
  %1362 = getelementptr inbounds %union.anon, %union.anon* %1360, i64 0, i32 0
  %1363 = load i32*, i32** %1362, align 8
  br label %1367

1364:                                             ; preds = %1357
  %1365 = bitcast %union.anon* %1360 to i32*
  %1366 = icmp sgt i32 %1136, 0
  br i1 %1366, label %1367, label %1467

1367:                                             ; preds = %1364, %1361
  %1368 = phi i32* [ %1363, %1361 ], [ %1365, %1364 ]
  %1369 = zext i32 %1136 to i64
  %1370 = icmp ult i32 %1136, 8
  br i1 %1370, label %1456, label %1371

1371:                                             ; preds = %1367
  %1372 = and i64 %1369, 4294967288
  %1373 = add nsw i64 %1372, -8
  %1374 = lshr exact i64 %1373, 3
  %1375 = add nuw nsw i64 %1374, 1
  %1376 = and i64 %1375, 3
  %1377 = icmp ult i64 %1373, 24
  br i1 %1377, label %1423, label %1378

1378:                                             ; preds = %1371
  %1379 = sub nsw i64 %1375, %1376
  br label %1380

1380:                                             ; preds = %1380, %1378
  %1381 = phi i64 [ 0, %1378 ], [ %1420, %1380 ]
  %1382 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1378 ], [ %1418, %1380 ]
  %1383 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1378 ], [ %1419, %1380 ]
  %1384 = phi i64 [ %1379, %1378 ], [ %1421, %1380 ]
  %1385 = getelementptr inbounds i32, i32* %1368, i64 %1381
  %1386 = bitcast i32* %1385 to <4 x i32>*
  %1387 = load <4 x i32>, <4 x i32>* %1386, align 4
  %1388 = getelementptr inbounds i32, i32* %1385, i64 4
  %1389 = bitcast i32* %1388 to <4 x i32>*
  %1390 = load <4 x i32>, <4 x i32>* %1389, align 4
  %1391 = mul nsw <4 x i32> %1387, %1382
  %1392 = mul nsw <4 x i32> %1390, %1383
  %1393 = or i64 %1381, 8
  %1394 = getelementptr inbounds i32, i32* %1368, i64 %1393
  %1395 = bitcast i32* %1394 to <4 x i32>*
  %1396 = load <4 x i32>, <4 x i32>* %1395, align 4
  %1397 = getelementptr inbounds i32, i32* %1394, i64 4
  %1398 = bitcast i32* %1397 to <4 x i32>*
  %1399 = load <4 x i32>, <4 x i32>* %1398, align 4
  %1400 = mul nsw <4 x i32> %1396, %1391
  %1401 = mul nsw <4 x i32> %1399, %1392
  %1402 = or i64 %1381, 16
  %1403 = getelementptr inbounds i32, i32* %1368, i64 %1402
  %1404 = bitcast i32* %1403 to <4 x i32>*
  %1405 = load <4 x i32>, <4 x i32>* %1404, align 4
  %1406 = getelementptr inbounds i32, i32* %1403, i64 4
  %1407 = bitcast i32* %1406 to <4 x i32>*
  %1408 = load <4 x i32>, <4 x i32>* %1407, align 4
  %1409 = mul nsw <4 x i32> %1405, %1400
  %1410 = mul nsw <4 x i32> %1408, %1401
  %1411 = or i64 %1381, 24
  %1412 = getelementptr inbounds i32, i32* %1368, i64 %1411
  %1413 = bitcast i32* %1412 to <4 x i32>*
  %1414 = load <4 x i32>, <4 x i32>* %1413, align 4
  %1415 = getelementptr inbounds i32, i32* %1412, i64 4
  %1416 = bitcast i32* %1415 to <4 x i32>*
  %1417 = load <4 x i32>, <4 x i32>* %1416, align 4
  %1418 = mul nsw <4 x i32> %1414, %1409
  %1419 = mul nsw <4 x i32> %1417, %1410
  %1420 = add i64 %1381, 32
  %1421 = add i64 %1384, -4
  %1422 = icmp eq i64 %1421, 0
  br i1 %1422, label %1423, label %1380, !llvm.loop !562

1423:                                             ; preds = %1380, %1371
  %1424 = phi <4 x i32> [ undef, %1371 ], [ %1418, %1380 ]
  %1425 = phi <4 x i32> [ undef, %1371 ], [ %1419, %1380 ]
  %1426 = phi i64 [ 0, %1371 ], [ %1420, %1380 ]
  %1427 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1371 ], [ %1418, %1380 ]
  %1428 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1371 ], [ %1419, %1380 ]
  %1429 = icmp eq i64 %1376, 0
  br i1 %1429, label %1446, label %1430

1430:                                             ; preds = %1423, %1430
  %1431 = phi i64 [ %1443, %1430 ], [ %1426, %1423 ]
  %1432 = phi <4 x i32> [ %1441, %1430 ], [ %1427, %1423 ]
  %1433 = phi <4 x i32> [ %1442, %1430 ], [ %1428, %1423 ]
  %1434 = phi i64 [ %1444, %1430 ], [ %1376, %1423 ]
  %1435 = getelementptr inbounds i32, i32* %1368, i64 %1431
  %1436 = bitcast i32* %1435 to <4 x i32>*
  %1437 = load <4 x i32>, <4 x i32>* %1436, align 4
  %1438 = getelementptr inbounds i32, i32* %1435, i64 4
  %1439 = bitcast i32* %1438 to <4 x i32>*
  %1440 = load <4 x i32>, <4 x i32>* %1439, align 4
  %1441 = mul nsw <4 x i32> %1437, %1432
  %1442 = mul nsw <4 x i32> %1440, %1433
  %1443 = add i64 %1431, 8
  %1444 = add i64 %1434, -1
  %1445 = icmp eq i64 %1444, 0
  br i1 %1445, label %1446, label %1430, !llvm.loop !563

1446:                                             ; preds = %1430, %1423
  %1447 = phi <4 x i32> [ %1424, %1423 ], [ %1441, %1430 ]
  %1448 = phi <4 x i32> [ %1425, %1423 ], [ %1442, %1430 ]
  %1449 = mul <4 x i32> %1448, %1447
  %1450 = shufflevector <4 x i32> %1449, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1451 = mul <4 x i32> %1449, %1450
  %1452 = shufflevector <4 x i32> %1451, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1453 = mul <4 x i32> %1451, %1452
  %1454 = extractelement <4 x i32> %1453, i32 0
  %1455 = icmp eq i64 %1372, %1369
  br i1 %1455, label %1467, label %1456

1456:                                             ; preds = %1446, %1367
  %1457 = phi i64 [ 0, %1367 ], [ %1372, %1446 ]
  %1458 = phi i32 [ 1, %1367 ], [ %1454, %1446 ]
  br label %1459

1459:                                             ; preds = %1456, %1459
  %1460 = phi i64 [ %1465, %1459 ], [ %1457, %1456 ]
  %1461 = phi i32 [ %1464, %1459 ], [ %1458, %1456 ]
  %1462 = getelementptr inbounds i32, i32* %1368, i64 %1460
  %1463 = load i32, i32* %1462, align 4
  %1464 = mul nsw i32 %1463, %1461
  %1465 = add nuw nsw i64 %1460, 1
  %1466 = icmp eq i64 %1465, %1369
  br i1 %1466, label %1467, label %1459, !llvm.loop !564

1467:                                             ; preds = %1459, %1446, %1364
  %1468 = phi i32 [ 1, %1364 ], [ %1454, %1446 ], [ %1464, %1459 ]
  %1469 = icmp eq i32 %1248, %1358
  br i1 %1469, label %1471, label %1470

1470:                                             ; preds = %1467
  call void @abort() #12
  unreachable

1471:                                             ; preds = %1467
  %1472 = icmp eq i32 %1248, %1468
  br i1 %1472, label %1474, label %1473

1473:                                             ; preds = %1471
  call void @abort() #12
  unreachable

1474:                                             ; preds = %1471
  %1475 = icmp sgt i32 %1248, 0
  br i1 %1475, label %1476, label %1581

1476:                                             ; preds = %1474
  %1477 = zext i32 %1248 to i64
  %1478 = icmp ult i32 %1248, 8
  br i1 %1478, label %1535, label %1479

1479:                                             ; preds = %1476
  %1480 = getelementptr float, float* %1138, i64 %1477
  %1481 = bitcast float* %1480 to i8*
  %1482 = getelementptr float, float* %1065, i64 %1477
  %1483 = bitcast float* %1482 to i8*
  %1484 = getelementptr float, float* %1101, i64 %1477
  %1485 = bitcast float* %1484 to i8*
  %1486 = icmp ult i8* %1137, %1483
  %1487 = icmp ult i8* %1064, %1481
  %1488 = and i1 %1486, %1487
  %1489 = icmp ult i8* %1137, %1485
  %1490 = icmp ult i8* %1100, %1481
  %1491 = and i1 %1489, %1490
  %1492 = or i1 %1488, %1491
  br i1 %1492, label %1535, label %1493

1493:                                             ; preds = %1479
  %1494 = and i64 %1477, 4294967288
  %1495 = insertelement <4 x float> undef, float %1026, i32 0
  %1496 = shufflevector <4 x float> %1495, <4 x float> undef, <4 x i32> zeroinitializer
  %1497 = insertelement <4 x float> undef, float %1026, i32 0
  %1498 = shufflevector <4 x float> %1497, <4 x float> undef, <4 x i32> zeroinitializer
  %1499 = insertelement <4 x float> undef, float %1027, i32 0
  %1500 = shufflevector <4 x float> %1499, <4 x float> undef, <4 x i32> zeroinitializer
  %1501 = insertelement <4 x float> undef, float %1027, i32 0
  %1502 = shufflevector <4 x float> %1501, <4 x float> undef, <4 x i32> zeroinitializer
  br label %1503

1503:                                             ; preds = %1503, %1493
  %1504 = phi i64 [ 0, %1493 ], [ %1531, %1503 ]
  %1505 = getelementptr inbounds float, float* %1065, i64 %1504
  %1506 = bitcast float* %1505 to <4 x float>*
  %1507 = load <4 x float>, <4 x float>* %1506, align 4, !alias.scope !565
  %1508 = getelementptr inbounds float, float* %1505, i64 4
  %1509 = bitcast float* %1508 to <4 x float>*
  %1510 = load <4 x float>, <4 x float>* %1509, align 4, !alias.scope !565
  %1511 = getelementptr inbounds float, float* %1101, i64 %1504
  %1512 = bitcast float* %1511 to <4 x float>*
  %1513 = load <4 x float>, <4 x float>* %1512, align 4, !alias.scope !568
  %1514 = getelementptr inbounds float, float* %1511, i64 4
  %1515 = bitcast float* %1514 to <4 x float>*
  %1516 = load <4 x float>, <4 x float>* %1515, align 4, !alias.scope !568
  %1517 = fmul <4 x float> %1507, %1513
  %1518 = fmul <4 x float> %1510, %1516
  %1519 = fcmp olt <4 x float> %1517, %1496
  %1520 = fcmp olt <4 x float> %1518, %1498
  %1521 = select <4 x i1> %1519, <4 x float> %1496, <4 x float> %1517
  %1522 = select <4 x i1> %1520, <4 x float> %1498, <4 x float> %1518
  %1523 = fcmp ogt <4 x float> %1521, %1500
  %1524 = fcmp ogt <4 x float> %1522, %1502
  %1525 = select <4 x i1> %1523, <4 x float> %1500, <4 x float> %1521
  %1526 = select <4 x i1> %1524, <4 x float> %1502, <4 x float> %1522
  %1527 = getelementptr inbounds float, float* %1138, i64 %1504
  %1528 = bitcast float* %1527 to <4 x float>*
  store <4 x float> %1525, <4 x float>* %1528, align 4, !alias.scope !570, !noalias !572
  %1529 = getelementptr inbounds float, float* %1527, i64 4
  %1530 = bitcast float* %1529 to <4 x float>*
  store <4 x float> %1526, <4 x float>* %1530, align 4, !alias.scope !570, !noalias !572
  %1531 = add i64 %1504, 8
  %1532 = icmp eq i64 %1531, %1494
  br i1 %1532, label %1533, label %1503, !llvm.loop !573

1533:                                             ; preds = %1503
  %1534 = icmp eq i64 %1494, %1477
  br i1 %1534, label %1581, label %1535

1535:                                             ; preds = %1533, %1479, %1476
  %1536 = phi i64 [ 0, %1479 ], [ 0, %1476 ], [ %1494, %1533 ]
  %1537 = xor i64 %1536, -1
  %1538 = and i64 %1477, 1
  %1539 = icmp eq i64 %1538, 0
  br i1 %1539, label %1552, label %1540

1540:                                             ; preds = %1535
  %1541 = getelementptr inbounds float, float* %1065, i64 %1536
  %1542 = load float, float* %1541, align 4
  %1543 = getelementptr inbounds float, float* %1101, i64 %1536
  %1544 = load float, float* %1543, align 4
  %1545 = fmul float %1542, %1544
  %1546 = fcmp olt float %1545, %1026
  %1547 = select i1 %1546, float %1026, float %1545
  %1548 = fcmp ogt float %1547, %1027
  %1549 = select i1 %1548, float %1027, float %1547
  %1550 = getelementptr inbounds float, float* %1138, i64 %1536
  store float %1549, float* %1550, align 4
  %1551 = or i64 %1536, 1
  br label %1552

1552:                                             ; preds = %1535, %1540
  %1553 = phi i64 [ %1536, %1535 ], [ %1551, %1540 ]
  %1554 = sub nsw i64 0, %1477
  %1555 = icmp eq i64 %1537, %1554
  br i1 %1555, label %1581, label %1556

1556:                                             ; preds = %1552, %1556
  %1557 = phi i64 [ %1579, %1556 ], [ %1553, %1552 ]
  %1558 = getelementptr inbounds float, float* %1065, i64 %1557
  %1559 = load float, float* %1558, align 4
  %1560 = getelementptr inbounds float, float* %1101, i64 %1557
  %1561 = load float, float* %1560, align 4
  %1562 = fmul float %1559, %1561
  %1563 = fcmp olt float %1562, %1026
  %1564 = select i1 %1563, float %1026, float %1562
  %1565 = fcmp ogt float %1564, %1027
  %1566 = select i1 %1565, float %1027, float %1564
  %1567 = getelementptr inbounds float, float* %1138, i64 %1557
  store float %1566, float* %1567, align 4
  %1568 = add nuw nsw i64 %1557, 1
  %1569 = getelementptr inbounds float, float* %1065, i64 %1568
  %1570 = load float, float* %1569, align 4
  %1571 = getelementptr inbounds float, float* %1101, i64 %1568
  %1572 = load float, float* %1571, align 4
  %1573 = fmul float %1570, %1572
  %1574 = fcmp olt float %1573, %1026
  %1575 = select i1 %1574, float %1026, float %1573
  %1576 = fcmp ogt float %1575, %1027
  %1577 = select i1 %1576, float %1027, float %1575
  %1578 = getelementptr inbounds float, float* %1138, i64 %1568
  store float %1577, float* %1578, align 4
  %1579 = add nuw nsw i64 %1557, 2
  %1580 = icmp eq i64 %1579, %1477
  br i1 %1580, label %1581, label %1556, !llvm.loop !574

1581:                                             ; preds = %1552, %1556, %1533, %1474
  br i1 %1359, label %1582, label %1588

1582:                                             ; preds = %1581
  %1583 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1584 = load i32*, i32** %1583, align 8
  %1585 = icmp eq i32* %1584, null
  br i1 %1585, label %1588, label %1586

1586:                                             ; preds = %1582
  %1587 = bitcast i32* %1584 to i8*
  call void @_ZdaPv(i8* %1587) #10
  br label %1588

1588:                                             ; preds = %1581, %1582, %1586
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1102) #11
  br i1 %1249, label %1589, label %1595

1589:                                             ; preds = %1588
  %1590 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %1591 = load i32*, i32** %1590, align 8
  %1592 = icmp eq i32* %1591, null
  br i1 %1592, label %1595, label %1593

1593:                                             ; preds = %1589
  %1594 = bitcast i32* %1591 to i8*
  call void @_ZdaPv(i8* %1594) #10
  br label %1595

1595:                                             ; preds = %1588, %1589, %1593
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1066) #11
  br i1 %1139, label %1596, label %1602

1596:                                             ; preds = %1595
  %1597 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1598 = load i32*, i32** %1597, align 8
  %1599 = icmp eq i32* %1598, null
  br i1 %1599, label %1602, label %1600

1600:                                             ; preds = %1596
  %1601 = bitcast i32* %1598 to i8*
  call void @_ZdaPv(i8* %1601) #10
  br label %1602

1602:                                             ; preds = %1600, %1596, %1595, %1015, %1011, %1007, %868, %864, %863, %249, %245, %241
  %1603 = phi i8* [ %125, %241 ], [ %125, %245 ], [ %125, %249 ], [ %264, %863 ], [ %264, %864 ], [ %264, %868 ], [ %888, %1007 ], [ %888, %1011 ], [ %888, %1015 ], [ %1030, %1595 ], [ %1030, %1596 ], [ %1030, %1600 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1603) #11
  br label %1604

1604:                                             ; preds = %1602, %104
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %23) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin3mul13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteMulParams*, %"struct.tflite::ops::builtin::mul::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %8 = alloca %"struct.tflite::ArithmeticParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"class.tflite::RuntimeShape", align 8
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = alloca %"class.tflite::RuntimeShape", align 8
  %24 = alloca %"class.tflite::RuntimeShape", align 8
  %25 = alloca %"class.tflite::RuntimeShape", align 8
  %26 = alloca %"class.tflite::RuntimeShape", align 8
  %27 = alloca %"class.tflite::RuntimeShape", align 8
  %28 = alloca %"class.tflite::RuntimeShape", align 8
  %29 = alloca %"class.tflite::RuntimeShape", align 8
  %30 = alloca %"class.tflite::RuntimeShape", align 8
  %31 = alloca %"class.tflite::RuntimeShape", align 8
  %32 = alloca %"class.tflite::RuntimeShape", align 8
  %33 = alloca %"class.tflite::RuntimeShape", align 8
  %34 = alloca %"class.tflite::RuntimeShape", align 8
  %35 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %40, label %955

40:                                               ; preds = %7
  %41 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %36, %42
  br i1 %43, label %44, label %955

44:                                               ; preds = %40
  switch i32 %36, label %2126 [
    i32 3, label %45
    i32 9, label %45
    i32 7, label %45
  ]

45:                                               ; preds = %44, %44, %44
  %46 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %46) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %46, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3mul13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteMulParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_.op_params, i64 0, i32 0), i64 80, i1 false)
  %47 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 11
  store i32 %48, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 12
  store i32 %50, i32* %52, align 4
  %53 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 3, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = sub nsw i32 0, %54
  %56 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 1
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 3, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = sub nsw i32 0, %58
  %60 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 2
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 3, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 3
  store i32 %62, i32* %63, align 4
  %64 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 4
  store i32 %65, i32* %66, align 4
  %67 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 5
  store i32 %68, i32* %69, align 4
  %70 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %70) #11
  %71 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %71, label %72, label %74

72:                                               ; preds = %45
  %73 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %73, align 8, !alias.scope !575
  br label %99

74:                                               ; preds = %45
  %75 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %76 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %75, align 8, !noalias !575
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %76, i64 0, i32 0
  %78 = load i32, i32* %77, align 4, !noalias !575
  %79 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %76, i64 0, i32 1, i64 0
  %80 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %78, i32* %80, align 8, !alias.scope !575
  %81 = icmp sgt i32 %78, 5
  br i1 %81, label %82, label %89

82:                                               ; preds = %74
  %83 = sext i32 %78 to i64
  %84 = shl nsw i64 %83, 2
  %85 = tail call i8* @_Znam(i64 %84) #10, !noalias !575
  %86 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %87 = bitcast i32** %86 to i8**
  store i8* %85, i8** %87, align 8, !alias.scope !575
  %88 = bitcast i8* %85 to i32*
  br label %94

89:                                               ; preds = %74
  %90 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %91 = bitcast %union.anon* %90 to i32*
  %92 = sext i32 %78 to i64
  %93 = shl nsw i64 %92, 2
  br label %94

94:                                               ; preds = %89, %82
  %95 = phi i64 [ %84, %82 ], [ %93, %89 ]
  %96 = phi i32* [ %88, %82 ], [ %91, %89 ]
  %97 = bitcast i32* %96 to i8*
  %98 = bitcast i32* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %97, i8* align 4 %98, i64 %95, i1 false) #11
  br label %99

99:                                               ; preds = %72, %94
  %100 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #11
  %101 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %101, label %102, label %104

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %103, align 8, !alias.scope !578
  br label %129

104:                                              ; preds = %99
  %105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %106 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %105, align 8, !noalias !578
  %107 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 4, !noalias !578
  %109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %106, i64 0, i32 1, i64 0
  %110 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %108, i32* %110, align 8, !alias.scope !578
  %111 = icmp sgt i32 %108, 5
  br i1 %111, label %112, label %119

112:                                              ; preds = %104
  %113 = sext i32 %108 to i64
  %114 = shl nsw i64 %113, 2
  %115 = tail call i8* @_Znam(i64 %114) #10, !noalias !578
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %117 = bitcast i32** %116 to i8**
  store i8* %115, i8** %117, align 8, !alias.scope !578
  %118 = bitcast i8* %115 to i32*
  br label %124

119:                                              ; preds = %104
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %121 = bitcast %union.anon* %120 to i32*
  %122 = sext i32 %108 to i64
  %123 = shl nsw i64 %122, 2
  br label %124

124:                                              ; preds = %119, %112
  %125 = phi i64 [ %114, %112 ], [ %123, %119 ]
  %126 = phi i32* [ %118, %112 ], [ %121, %119 ]
  %127 = bitcast i32* %126 to i8*
  %128 = bitcast i32* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* align 4 %128, i64 %125, i1 false) #11
  br label %129

129:                                              ; preds = %102, %124
  %130 = call zeroext i1 @_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, %"struct.tflite::ArithmeticParams"* nonnull %8)
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = icmp sgt i32 %132, 5
  br i1 %133, label %134, label %140

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %136 = load i32*, i32** %135, align 8
  %137 = icmp eq i32* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast i32* %136 to i8*
  call void @_ZdaPv(i8* %139) #10
  br label %140

140:                                              ; preds = %129, %134, %138
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #11
  %141 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %142 = load i32, i32* %141, align 8
  %143 = icmp sgt i32 %142, 5
  br i1 %143, label %144, label %150

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %146 = load i32*, i32** %145, align 8
  %147 = icmp eq i32* %146, null
  br i1 %147, label %150, label %148

148:                                              ; preds = %144
  %149 = bitcast i32* %146 to i8*
  call void @_ZdaPv(i8* %149) #10
  br label %150

150:                                              ; preds = %140, %144, %148
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %70) #11
  %151 = load i32, i32* %35, align 8
  switch i32 %151, label %692 [
    i32 9, label %152
    i32 7, label %413
  ]

152:                                              ; preds = %150
  br i1 %130, label %153, label %283

153:                                              ; preds = %152
  %154 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %154) #11
  br i1 %71, label %155, label %157

155:                                              ; preds = %153
  %156 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %156, align 8, !alias.scope !581
  br label %185

157:                                              ; preds = %153
  %158 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %159 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %158, align 8, !noalias !581
  %160 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %159, i64 0, i32 0
  %161 = load i32, i32* %160, align 4, !noalias !581
  %162 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %159, i64 0, i32 1, i64 0
  %163 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %161, i32* %163, align 8, !alias.scope !581
  %164 = icmp sgt i32 %161, 5
  br i1 %164, label %165, label %172

165:                                              ; preds = %157
  %166 = sext i32 %161 to i64
  %167 = shl nsw i64 %166, 2
  %168 = call i8* @_Znam(i64 %167) #10, !noalias !581
  %169 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %170 = bitcast i32** %169 to i8**
  store i8* %168, i8** %170, align 8, !alias.scope !581
  %171 = bitcast i8* %168 to i32*
  br label %177

172:                                              ; preds = %157
  %173 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %174 = bitcast %union.anon* %173 to i32*
  %175 = sext i32 %161 to i64
  %176 = shl nsw i64 %175, 2
  br label %177

177:                                              ; preds = %172, %165
  %178 = phi i64 [ %167, %165 ], [ %176, %172 ]
  %179 = phi i32* [ %171, %165 ], [ %174, %172 ]
  %180 = bitcast i32* %179 to i8*
  %181 = bitcast i32* %162 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %180, i8* align 4 %181, i64 %178, i1 false) #11
  %182 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %183 = bitcast %union.TfLitePtrUnion* %182 to i8**
  %184 = load i8*, i8** %183, align 8
  br label %185

185:                                              ; preds = %155, %177
  %186 = phi i8* [ %184, %177 ], [ null, %155 ]
  %187 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %187) #11
  br i1 %101, label %188, label %190

188:                                              ; preds = %185
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %189, align 8, !alias.scope !584
  br label %218

190:                                              ; preds = %185
  %191 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %192 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %191, align 8, !noalias !584
  %193 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %192, i64 0, i32 0
  %194 = load i32, i32* %193, align 4, !noalias !584
  %195 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %192, i64 0, i32 1, i64 0
  %196 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %194, i32* %196, align 8, !alias.scope !584
  %197 = icmp sgt i32 %194, 5
  br i1 %197, label %198, label %205

198:                                              ; preds = %190
  %199 = sext i32 %194 to i64
  %200 = shl nsw i64 %199, 2
  %201 = call i8* @_Znam(i64 %200) #10, !noalias !584
  %202 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %203 = bitcast i32** %202 to i8**
  store i8* %201, i8** %203, align 8, !alias.scope !584
  %204 = bitcast i8* %201 to i32*
  br label %210

205:                                              ; preds = %190
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %207 = bitcast %union.anon* %206 to i32*
  %208 = sext i32 %194 to i64
  %209 = shl nsw i64 %208, 2
  br label %210

210:                                              ; preds = %205, %198
  %211 = phi i64 [ %200, %198 ], [ %209, %205 ]
  %212 = phi i32* [ %204, %198 ], [ %207, %205 ]
  %213 = bitcast i32* %212 to i8*
  %214 = bitcast i32* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %213, i8* align 4 %214, i64 %211, i1 false) #11
  %215 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %216 = bitcast %union.TfLitePtrUnion* %215 to i8**
  %217 = load i8*, i8** %216, align 8
  br label %218

218:                                              ; preds = %188, %210
  %219 = phi i8* [ %217, %210 ], [ null, %188 ]
  %220 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %220) #11
  %221 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %221, label %222, label %224

222:                                              ; preds = %218
  %223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %223, align 8, !alias.scope !587
  br label %252

224:                                              ; preds = %218
  %225 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %226 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %225, align 8, !noalias !587
  %227 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %226, i64 0, i32 0
  %228 = load i32, i32* %227, align 4, !noalias !587
  %229 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %226, i64 0, i32 1, i64 0
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %228, i32* %230, align 8, !alias.scope !587
  %231 = icmp sgt i32 %228, 5
  br i1 %231, label %232, label %239

232:                                              ; preds = %224
  %233 = sext i32 %228 to i64
  %234 = shl nsw i64 %233, 2
  %235 = call i8* @_Znam(i64 %234) #10, !noalias !587
  %236 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %237 = bitcast i32** %236 to i8**
  store i8* %235, i8** %237, align 8, !alias.scope !587
  %238 = bitcast i8* %235 to i32*
  br label %244

239:                                              ; preds = %224
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %241 = bitcast %union.anon* %240 to i32*
  %242 = sext i32 %228 to i64
  %243 = shl nsw i64 %242, 2
  br label %244

244:                                              ; preds = %239, %232
  %245 = phi i64 [ %234, %232 ], [ %243, %239 ]
  %246 = phi i32* [ %238, %232 ], [ %241, %239 ]
  %247 = bitcast i32* %246 to i8*
  %248 = bitcast i32* %229 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %247, i8* align 4 %248, i64 %245, i1 false) #11
  %249 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %250 = bitcast %union.TfLitePtrUnion* %249 to i8**
  %251 = load i8*, i8** %250, align 8
  br label %252

252:                                              ; preds = %222, %244
  %253 = phi i8* [ %251, %244 ], [ null, %222 ]
  call void @_ZN6tflite21optimized_integer_ops20BroadcastMulDispatchERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKaS6_S8_S6_Pa(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i8* %186, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %219, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %253)
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %255 = load i32, i32* %254, align 8
  %256 = icmp sgt i32 %255, 5
  br i1 %256, label %257, label %263

257:                                              ; preds = %252
  %258 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %259 = load i32*, i32** %258, align 8
  %260 = icmp eq i32* %259, null
  br i1 %260, label %263, label %261

261:                                              ; preds = %257
  %262 = bitcast i32* %259 to i8*
  call void @_ZdaPv(i8* %262) #10
  br label %263

263:                                              ; preds = %252, %257, %261
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %220) #11
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %265 = load i32, i32* %264, align 8
  %266 = icmp sgt i32 %265, 5
  br i1 %266, label %267, label %273

267:                                              ; preds = %263
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %269 = load i32*, i32** %268, align 8
  %270 = icmp eq i32* %269, null
  br i1 %270, label %273, label %271

271:                                              ; preds = %267
  %272 = bitcast i32* %269 to i8*
  call void @_ZdaPv(i8* %272) #10
  br label %273

273:                                              ; preds = %263, %267, %271
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %187) #11
  %274 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %275 = load i32, i32* %274, align 8
  %276 = icmp sgt i32 %275, 5
  br i1 %276, label %277, label %953

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %279 = load i32*, i32** %278, align 8
  %280 = icmp eq i32* %279, null
  br i1 %280, label %953, label %281

281:                                              ; preds = %277
  %282 = bitcast i32* %279 to i8*
  call void @_ZdaPv(i8* %282) #10
  br label %953

283:                                              ; preds = %152
  %284 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %284) #11
  br i1 %71, label %285, label %287

285:                                              ; preds = %283
  %286 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %286, align 8, !alias.scope !590
  br label %315

287:                                              ; preds = %283
  %288 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %289 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %288, align 8, !noalias !590
  %290 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %289, i64 0, i32 0
  %291 = load i32, i32* %290, align 4, !noalias !590
  %292 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %289, i64 0, i32 1, i64 0
  %293 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %291, i32* %293, align 8, !alias.scope !590
  %294 = icmp sgt i32 %291, 5
  br i1 %294, label %295, label %302

295:                                              ; preds = %287
  %296 = sext i32 %291 to i64
  %297 = shl nsw i64 %296, 2
  %298 = call i8* @_Znam(i64 %297) #10, !noalias !590
  %299 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %300 = bitcast i32** %299 to i8**
  store i8* %298, i8** %300, align 8, !alias.scope !590
  %301 = bitcast i8* %298 to i32*
  br label %307

302:                                              ; preds = %287
  %303 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %304 = bitcast %union.anon* %303 to i32*
  %305 = sext i32 %291 to i64
  %306 = shl nsw i64 %305, 2
  br label %307

307:                                              ; preds = %302, %295
  %308 = phi i64 [ %297, %295 ], [ %306, %302 ]
  %309 = phi i32* [ %301, %295 ], [ %304, %302 ]
  %310 = bitcast i32* %309 to i8*
  %311 = bitcast i32* %292 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %310, i8* align 4 %311, i64 %308, i1 false) #11
  %312 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %313 = bitcast %union.TfLitePtrUnion* %312 to i8**
  %314 = load i8*, i8** %313, align 8
  br label %315

315:                                              ; preds = %285, %307
  %316 = phi i8* [ %314, %307 ], [ null, %285 ]
  %317 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %317) #11
  br i1 %101, label %318, label %320

318:                                              ; preds = %315
  %319 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %319, align 8, !alias.scope !593
  br label %348

320:                                              ; preds = %315
  %321 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %322 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %321, align 8, !noalias !593
  %323 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %322, i64 0, i32 0
  %324 = load i32, i32* %323, align 4, !noalias !593
  %325 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %322, i64 0, i32 1, i64 0
  %326 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %324, i32* %326, align 8, !alias.scope !593
  %327 = icmp sgt i32 %324, 5
  br i1 %327, label %328, label %335

328:                                              ; preds = %320
  %329 = sext i32 %324 to i64
  %330 = shl nsw i64 %329, 2
  %331 = call i8* @_Znam(i64 %330) #10, !noalias !593
  %332 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %333 = bitcast i32** %332 to i8**
  store i8* %331, i8** %333, align 8, !alias.scope !593
  %334 = bitcast i8* %331 to i32*
  br label %340

335:                                              ; preds = %320
  %336 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %337 = bitcast %union.anon* %336 to i32*
  %338 = sext i32 %324 to i64
  %339 = shl nsw i64 %338, 2
  br label %340

340:                                              ; preds = %335, %328
  %341 = phi i64 [ %330, %328 ], [ %339, %335 ]
  %342 = phi i32* [ %334, %328 ], [ %337, %335 ]
  %343 = bitcast i32* %342 to i8*
  %344 = bitcast i32* %325 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %343, i8* align 4 %344, i64 %341, i1 false) #11
  %345 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %346 = bitcast %union.TfLitePtrUnion* %345 to i8**
  %347 = load i8*, i8** %346, align 8
  br label %348

348:                                              ; preds = %318, %340
  %349 = phi i8* [ %347, %340 ], [ null, %318 ]
  %350 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %350) #11
  %351 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %351, label %352, label %354

352:                                              ; preds = %348
  %353 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %353, align 8, !alias.scope !596
  br label %382

354:                                              ; preds = %348
  %355 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %356 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %355, align 8, !noalias !596
  %357 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %356, i64 0, i32 0
  %358 = load i32, i32* %357, align 4, !noalias !596
  %359 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %356, i64 0, i32 1, i64 0
  %360 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %358, i32* %360, align 8, !alias.scope !596
  %361 = icmp sgt i32 %358, 5
  br i1 %361, label %362, label %369

362:                                              ; preds = %354
  %363 = sext i32 %358 to i64
  %364 = shl nsw i64 %363, 2
  %365 = call i8* @_Znam(i64 %364) #10, !noalias !596
  %366 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %367 = bitcast i32** %366 to i8**
  store i8* %365, i8** %367, align 8, !alias.scope !596
  %368 = bitcast i8* %365 to i32*
  br label %374

369:                                              ; preds = %354
  %370 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %371 = bitcast %union.anon* %370 to i32*
  %372 = sext i32 %358 to i64
  %373 = shl nsw i64 %372, 2
  br label %374

374:                                              ; preds = %369, %362
  %375 = phi i64 [ %364, %362 ], [ %373, %369 ]
  %376 = phi i32* [ %368, %362 ], [ %371, %369 ]
  %377 = bitcast i32* %376 to i8*
  %378 = bitcast i32* %359 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %377, i8* align 4 %378, i64 %375, i1 false) #11
  %379 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %380 = bitcast %union.TfLitePtrUnion* %379 to i8**
  %381 = load i8*, i8** %380, align 8
  br label %382

382:                                              ; preds = %352, %374
  %383 = phi i8* [ %381, %374 ], [ null, %352 ]
  call void @_ZN6tflite21optimized_integer_ops3MulERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKaS6_S8_S6_Pa(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i8* %316, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, i8* %349, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, i8* %383)
  %384 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %385 = load i32, i32* %384, align 8
  %386 = icmp sgt i32 %385, 5
  br i1 %386, label %387, label %393

387:                                              ; preds = %382
  %388 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %389 = load i32*, i32** %388, align 8
  %390 = icmp eq i32* %389, null
  br i1 %390, label %393, label %391

391:                                              ; preds = %387
  %392 = bitcast i32* %389 to i8*
  call void @_ZdaPv(i8* %392) #10
  br label %393

393:                                              ; preds = %382, %387, %391
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %350) #11
  %394 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %395 = load i32, i32* %394, align 8
  %396 = icmp sgt i32 %395, 5
  br i1 %396, label %397, label %403

397:                                              ; preds = %393
  %398 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %399 = load i32*, i32** %398, align 8
  %400 = icmp eq i32* %399, null
  br i1 %400, label %403, label %401

401:                                              ; preds = %397
  %402 = bitcast i32* %399 to i8*
  call void @_ZdaPv(i8* %402) #10
  br label %403

403:                                              ; preds = %393, %397, %401
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %317) #11
  %404 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %405 = load i32, i32* %404, align 8
  %406 = icmp sgt i32 %405, 5
  br i1 %406, label %407, label %953

407:                                              ; preds = %403
  %408 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %409 = load i32*, i32** %408, align 8
  %410 = icmp eq i32* %409, null
  br i1 %410, label %953, label %411

411:                                              ; preds = %407
  %412 = bitcast i32* %409 to i8*
  call void @_ZdaPv(i8* %412) #10
  br label %953

413:                                              ; preds = %150
  %414 = load i32, i32* %56, align 4
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %419, label %416

416:                                              ; preds = %413
  %417 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %418 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %417, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %418(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 202, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i32 %414, double 0.000000e+00) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %46) #11
  br label %2129

419:                                              ; preds = %413
  %420 = load i32, i32* %60, align 4
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %425, label %422

422:                                              ; preds = %419
  %423 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %424 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %423, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %424(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 203, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i32 %420, double 0.000000e+00) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %46) #11
  br label %2129

425:                                              ; preds = %419
  %426 = load i32, i32* %63, align 4
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %431, label %428

428:                                              ; preds = %425
  %429 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %430 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %429, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %430(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 204, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i32 %426, double 0.000000e+00) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %46) #11
  br label %2129

431:                                              ; preds = %425
  br i1 %130, label %432, label %562

432:                                              ; preds = %431
  %433 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %433) #11
  br i1 %71, label %434, label %436

434:                                              ; preds = %432
  %435 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %435, align 8, !alias.scope !599
  br label %464

436:                                              ; preds = %432
  %437 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %438 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %437, align 8, !noalias !599
  %439 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %438, i64 0, i32 0
  %440 = load i32, i32* %439, align 4, !noalias !599
  %441 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %438, i64 0, i32 1, i64 0
  %442 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %440, i32* %442, align 8, !alias.scope !599
  %443 = icmp sgt i32 %440, 5
  br i1 %443, label %444, label %451

444:                                              ; preds = %436
  %445 = sext i32 %440 to i64
  %446 = shl nsw i64 %445, 2
  %447 = call i8* @_Znam(i64 %446) #10, !noalias !599
  %448 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %449 = bitcast i32** %448 to i8**
  store i8* %447, i8** %449, align 8, !alias.scope !599
  %450 = bitcast i8* %447 to i32*
  br label %456

451:                                              ; preds = %436
  %452 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %453 = bitcast %union.anon* %452 to i32*
  %454 = sext i32 %440 to i64
  %455 = shl nsw i64 %454, 2
  br label %456

456:                                              ; preds = %451, %444
  %457 = phi i64 [ %446, %444 ], [ %455, %451 ]
  %458 = phi i32* [ %450, %444 ], [ %453, %451 ]
  %459 = bitcast i32* %458 to i8*
  %460 = bitcast i32* %441 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %459, i8* align 4 %460, i64 %457, i1 false) #11
  %461 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %462 = bitcast %union.TfLitePtrUnion* %461 to i16**
  %463 = load i16*, i16** %462, align 8
  br label %464

464:                                              ; preds = %434, %456
  %465 = phi i16* [ %463, %456 ], [ null, %434 ]
  %466 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %466) #11
  br i1 %101, label %467, label %469

467:                                              ; preds = %464
  %468 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %468, align 8, !alias.scope !602
  br label %497

469:                                              ; preds = %464
  %470 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %471 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %470, align 8, !noalias !602
  %472 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %471, i64 0, i32 0
  %473 = load i32, i32* %472, align 4, !noalias !602
  %474 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %471, i64 0, i32 1, i64 0
  %475 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %473, i32* %475, align 8, !alias.scope !602
  %476 = icmp sgt i32 %473, 5
  br i1 %476, label %477, label %484

477:                                              ; preds = %469
  %478 = sext i32 %473 to i64
  %479 = shl nsw i64 %478, 2
  %480 = call i8* @_Znam(i64 %479) #10, !noalias !602
  %481 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %482 = bitcast i32** %481 to i8**
  store i8* %480, i8** %482, align 8, !alias.scope !602
  %483 = bitcast i8* %480 to i32*
  br label %489

484:                                              ; preds = %469
  %485 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %486 = bitcast %union.anon* %485 to i32*
  %487 = sext i32 %473 to i64
  %488 = shl nsw i64 %487, 2
  br label %489

489:                                              ; preds = %484, %477
  %490 = phi i64 [ %479, %477 ], [ %488, %484 ]
  %491 = phi i32* [ %483, %477 ], [ %486, %484 ]
  %492 = bitcast i32* %491 to i8*
  %493 = bitcast i32* %474 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %492, i8* align 4 %493, i64 %490, i1 false) #11
  %494 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %495 = bitcast %union.TfLitePtrUnion* %494 to i16**
  %496 = load i16*, i16** %495, align 8
  br label %497

497:                                              ; preds = %467, %489
  %498 = phi i16* [ %496, %489 ], [ null, %467 ]
  %499 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %499) #11
  %500 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %500, label %501, label %503

501:                                              ; preds = %497
  %502 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %502, align 8, !alias.scope !605
  br label %531

503:                                              ; preds = %497
  %504 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %505 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %504, align 8, !noalias !605
  %506 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %505, i64 0, i32 0
  %507 = load i32, i32* %506, align 4, !noalias !605
  %508 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %505, i64 0, i32 1, i64 0
  %509 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %507, i32* %509, align 8, !alias.scope !605
  %510 = icmp sgt i32 %507, 5
  br i1 %510, label %511, label %518

511:                                              ; preds = %503
  %512 = sext i32 %507 to i64
  %513 = shl nsw i64 %512, 2
  %514 = call i8* @_Znam(i64 %513) #10, !noalias !605
  %515 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %516 = bitcast i32** %515 to i8**
  store i8* %514, i8** %516, align 8, !alias.scope !605
  %517 = bitcast i8* %514 to i32*
  br label %523

518:                                              ; preds = %503
  %519 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %520 = bitcast %union.anon* %519 to i32*
  %521 = sext i32 %507 to i64
  %522 = shl nsw i64 %521, 2
  br label %523

523:                                              ; preds = %518, %511
  %524 = phi i64 [ %513, %511 ], [ %522, %518 ]
  %525 = phi i32* [ %517, %511 ], [ %520, %518 ]
  %526 = bitcast i32* %525 to i8*
  %527 = bitcast i32* %508 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %526, i8* align 4 %527, i64 %524, i1 false) #11
  %528 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %529 = bitcast %union.TfLitePtrUnion* %528 to i16**
  %530 = load i16*, i16** %529, align 8
  br label %531

531:                                              ; preds = %501, %523
  %532 = phi i16* [ %530, %523 ], [ null, %501 ]
  call void @_ZN6tflite21reference_integer_ops18BroadcastMul4DSlowIsEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, i16* %465, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %18, i16* %498, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %19, i16* %532)
  %533 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  %534 = load i32, i32* %533, align 8
  %535 = icmp sgt i32 %534, 5
  br i1 %535, label %536, label %542

536:                                              ; preds = %531
  %537 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %538 = load i32*, i32** %537, align 8
  %539 = icmp eq i32* %538, null
  br i1 %539, label %542, label %540

540:                                              ; preds = %536
  %541 = bitcast i32* %538 to i8*
  call void @_ZdaPv(i8* %541) #10
  br label %542

542:                                              ; preds = %531, %536, %540
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %499) #11
  %543 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  %544 = load i32, i32* %543, align 8
  %545 = icmp sgt i32 %544, 5
  br i1 %545, label %546, label %552

546:                                              ; preds = %542
  %547 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %548 = load i32*, i32** %547, align 8
  %549 = icmp eq i32* %548, null
  br i1 %549, label %552, label %550

550:                                              ; preds = %546
  %551 = bitcast i32* %548 to i8*
  call void @_ZdaPv(i8* %551) #10
  br label %552

552:                                              ; preds = %542, %546, %550
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %466) #11
  %553 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %554 = load i32, i32* %553, align 8
  %555 = icmp sgt i32 %554, 5
  br i1 %555, label %556, label %953

556:                                              ; preds = %552
  %557 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %558 = load i32*, i32** %557, align 8
  %559 = icmp eq i32* %558, null
  br i1 %559, label %953, label %560

560:                                              ; preds = %556
  %561 = bitcast i32* %558 to i8*
  call void @_ZdaPv(i8* %561) #10
  br label %953

562:                                              ; preds = %431
  %563 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %563) #11
  br i1 %71, label %564, label %566

564:                                              ; preds = %562
  %565 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %565, align 8, !alias.scope !608
  br label %594

566:                                              ; preds = %562
  %567 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %568 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %567, align 8, !noalias !608
  %569 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %568, i64 0, i32 0
  %570 = load i32, i32* %569, align 4, !noalias !608
  %571 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %568, i64 0, i32 1, i64 0
  %572 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %570, i32* %572, align 8, !alias.scope !608
  %573 = icmp sgt i32 %570, 5
  br i1 %573, label %574, label %581

574:                                              ; preds = %566
  %575 = sext i32 %570 to i64
  %576 = shl nsw i64 %575, 2
  %577 = call i8* @_Znam(i64 %576) #10, !noalias !608
  %578 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %579 = bitcast i32** %578 to i8**
  store i8* %577, i8** %579, align 8, !alias.scope !608
  %580 = bitcast i8* %577 to i32*
  br label %586

581:                                              ; preds = %566
  %582 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %583 = bitcast %union.anon* %582 to i32*
  %584 = sext i32 %570 to i64
  %585 = shl nsw i64 %584, 2
  br label %586

586:                                              ; preds = %581, %574
  %587 = phi i64 [ %576, %574 ], [ %585, %581 ]
  %588 = phi i32* [ %580, %574 ], [ %583, %581 ]
  %589 = bitcast i32* %588 to i8*
  %590 = bitcast i32* %571 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %589, i8* align 4 %590, i64 %587, i1 false) #11
  %591 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %592 = bitcast %union.TfLitePtrUnion* %591 to i16**
  %593 = load i16*, i16** %592, align 8
  br label %594

594:                                              ; preds = %564, %586
  %595 = phi i16* [ %593, %586 ], [ null, %564 ]
  %596 = bitcast %"class.tflite::RuntimeShape"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %596) #11
  br i1 %101, label %597, label %599

597:                                              ; preds = %594
  %598 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 0, i32* %598, align 8, !alias.scope !611
  br label %627

599:                                              ; preds = %594
  %600 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %601 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %600, align 8, !noalias !611
  %602 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %601, i64 0, i32 0
  %603 = load i32, i32* %602, align 4, !noalias !611
  %604 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %601, i64 0, i32 1, i64 0
  %605 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 %603, i32* %605, align 8, !alias.scope !611
  %606 = icmp sgt i32 %603, 5
  br i1 %606, label %607, label %614

607:                                              ; preds = %599
  %608 = sext i32 %603 to i64
  %609 = shl nsw i64 %608, 2
  %610 = call i8* @_Znam(i64 %609) #10, !noalias !611
  %611 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %612 = bitcast i32** %611 to i8**
  store i8* %610, i8** %612, align 8, !alias.scope !611
  %613 = bitcast i8* %610 to i32*
  br label %619

614:                                              ; preds = %599
  %615 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  %616 = bitcast %union.anon* %615 to i32*
  %617 = sext i32 %603 to i64
  %618 = shl nsw i64 %617, 2
  br label %619

619:                                              ; preds = %614, %607
  %620 = phi i64 [ %609, %607 ], [ %618, %614 ]
  %621 = phi i32* [ %613, %607 ], [ %616, %614 ]
  %622 = bitcast i32* %621 to i8*
  %623 = bitcast i32* %604 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %622, i8* align 4 %623, i64 %620, i1 false) #11
  %624 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %625 = bitcast %union.TfLitePtrUnion* %624 to i16**
  %626 = load i16*, i16** %625, align 8
  br label %627

627:                                              ; preds = %597, %619
  %628 = phi i16* [ %626, %619 ], [ null, %597 ]
  %629 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %629) #11
  %630 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %630, label %631, label %633

631:                                              ; preds = %627
  %632 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %632, align 8, !alias.scope !614
  br label %661

633:                                              ; preds = %627
  %634 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %635 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %634, align 8, !noalias !614
  %636 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %635, i64 0, i32 0
  %637 = load i32, i32* %636, align 4, !noalias !614
  %638 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %635, i64 0, i32 1, i64 0
  %639 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %637, i32* %639, align 8, !alias.scope !614
  %640 = icmp sgt i32 %637, 5
  br i1 %640, label %641, label %648

641:                                              ; preds = %633
  %642 = sext i32 %637 to i64
  %643 = shl nsw i64 %642, 2
  %644 = call i8* @_Znam(i64 %643) #10, !noalias !614
  %645 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %646 = bitcast i32** %645 to i8**
  store i8* %644, i8** %646, align 8, !alias.scope !614
  %647 = bitcast i8* %644 to i32*
  br label %653

648:                                              ; preds = %633
  %649 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %650 = bitcast %union.anon* %649 to i32*
  %651 = sext i32 %637 to i64
  %652 = shl nsw i64 %651, 2
  br label %653

653:                                              ; preds = %648, %641
  %654 = phi i64 [ %643, %641 ], [ %652, %648 ]
  %655 = phi i32* [ %647, %641 ], [ %650, %648 ]
  %656 = bitcast i32* %655 to i8*
  %657 = bitcast i32* %638 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %656, i8* align 4 %657, i64 %654, i1 false) #11
  %658 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %659 = bitcast %union.TfLitePtrUnion* %658 to i16**
  %660 = load i16*, i16** %659, align 8
  br label %661

661:                                              ; preds = %631, %653
  %662 = phi i16* [ %660, %653 ], [ null, %631 ]
  call void @_ZN6tflite21reference_integer_ops3MulIsEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %20, i16* %595, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %21, i16* %628, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %22, i16* %662)
  %663 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  %664 = load i32, i32* %663, align 8
  %665 = icmp sgt i32 %664, 5
  br i1 %665, label %666, label %672

666:                                              ; preds = %661
  %667 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %668 = load i32*, i32** %667, align 8
  %669 = icmp eq i32* %668, null
  br i1 %669, label %672, label %670

670:                                              ; preds = %666
  %671 = bitcast i32* %668 to i8*
  call void @_ZdaPv(i8* %671) #10
  br label %672

672:                                              ; preds = %661, %666, %670
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %629) #11
  %673 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  %674 = load i32, i32* %673, align 8
  %675 = icmp sgt i32 %674, 5
  br i1 %675, label %676, label %682

676:                                              ; preds = %672
  %677 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %678 = load i32*, i32** %677, align 8
  %679 = icmp eq i32* %678, null
  br i1 %679, label %682, label %680

680:                                              ; preds = %676
  %681 = bitcast i32* %678 to i8*
  call void @_ZdaPv(i8* %681) #10
  br label %682

682:                                              ; preds = %672, %676, %680
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %596) #11
  %683 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  %684 = load i32, i32* %683, align 8
  %685 = icmp sgt i32 %684, 5
  br i1 %685, label %686, label %953

686:                                              ; preds = %682
  %687 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %688 = load i32*, i32** %687, align 8
  %689 = icmp eq i32* %688, null
  br i1 %689, label %953, label %690

690:                                              ; preds = %686
  %691 = bitcast i32* %688 to i8*
  call void @_ZdaPv(i8* %691) #10
  br label %953

692:                                              ; preds = %150
  br i1 %130, label %693, label %823

693:                                              ; preds = %692
  %694 = bitcast %"class.tflite::RuntimeShape"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %694) #11
  br i1 %71, label %695, label %697

695:                                              ; preds = %693
  %696 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 0, i32* %696, align 8, !alias.scope !617
  br label %725

697:                                              ; preds = %693
  %698 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %699 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %698, align 8, !noalias !617
  %700 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %699, i64 0, i32 0
  %701 = load i32, i32* %700, align 4, !noalias !617
  %702 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %699, i64 0, i32 1, i64 0
  %703 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 %701, i32* %703, align 8, !alias.scope !617
  %704 = icmp sgt i32 %701, 5
  br i1 %704, label %705, label %712

705:                                              ; preds = %697
  %706 = sext i32 %701 to i64
  %707 = shl nsw i64 %706, 2
  %708 = call i8* @_Znam(i64 %707) #10, !noalias !617
  %709 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %710 = bitcast i32** %709 to i8**
  store i8* %708, i8** %710, align 8, !alias.scope !617
  %711 = bitcast i8* %708 to i32*
  br label %717

712:                                              ; preds = %697
  %713 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  %714 = bitcast %union.anon* %713 to i32*
  %715 = sext i32 %701 to i64
  %716 = shl nsw i64 %715, 2
  br label %717

717:                                              ; preds = %712, %705
  %718 = phi i64 [ %707, %705 ], [ %716, %712 ]
  %719 = phi i32* [ %711, %705 ], [ %714, %712 ]
  %720 = bitcast i32* %719 to i8*
  %721 = bitcast i32* %702 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %720, i8* align 4 %721, i64 %718, i1 false) #11
  %722 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %723 = bitcast %union.TfLitePtrUnion* %722 to i8**
  %724 = load i8*, i8** %723, align 8
  br label %725

725:                                              ; preds = %695, %717
  %726 = phi i8* [ %724, %717 ], [ null, %695 ]
  %727 = bitcast %"class.tflite::RuntimeShape"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %727) #11
  br i1 %101, label %728, label %730

728:                                              ; preds = %725
  %729 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 0, i32* %729, align 8, !alias.scope !620
  br label %758

730:                                              ; preds = %725
  %731 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %732 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %731, align 8, !noalias !620
  %733 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %732, i64 0, i32 0
  %734 = load i32, i32* %733, align 4, !noalias !620
  %735 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %732, i64 0, i32 1, i64 0
  %736 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 %734, i32* %736, align 8, !alias.scope !620
  %737 = icmp sgt i32 %734, 5
  br i1 %737, label %738, label %745

738:                                              ; preds = %730
  %739 = sext i32 %734 to i64
  %740 = shl nsw i64 %739, 2
  %741 = call i8* @_Znam(i64 %740) #10, !noalias !620
  %742 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %743 = bitcast i32** %742 to i8**
  store i8* %741, i8** %743, align 8, !alias.scope !620
  %744 = bitcast i8* %741 to i32*
  br label %750

745:                                              ; preds = %730
  %746 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1
  %747 = bitcast %union.anon* %746 to i32*
  %748 = sext i32 %734 to i64
  %749 = shl nsw i64 %748, 2
  br label %750

750:                                              ; preds = %745, %738
  %751 = phi i64 [ %740, %738 ], [ %749, %745 ]
  %752 = phi i32* [ %744, %738 ], [ %747, %745 ]
  %753 = bitcast i32* %752 to i8*
  %754 = bitcast i32* %735 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %753, i8* align 4 %754, i64 %751, i1 false) #11
  %755 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %756 = bitcast %union.TfLitePtrUnion* %755 to i8**
  %757 = load i8*, i8** %756, align 8
  br label %758

758:                                              ; preds = %728, %750
  %759 = phi i8* [ %757, %750 ], [ null, %728 ]
  %760 = bitcast %"class.tflite::RuntimeShape"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %760) #11
  %761 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %761, label %762, label %764

762:                                              ; preds = %758
  %763 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 0, i32* %763, align 8, !alias.scope !623
  br label %792

764:                                              ; preds = %758
  %765 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %766 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %765, align 8, !noalias !623
  %767 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %766, i64 0, i32 0
  %768 = load i32, i32* %767, align 4, !noalias !623
  %769 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %766, i64 0, i32 1, i64 0
  %770 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 %768, i32* %770, align 8, !alias.scope !623
  %771 = icmp sgt i32 %768, 5
  br i1 %771, label %772, label %779

772:                                              ; preds = %764
  %773 = sext i32 %768 to i64
  %774 = shl nsw i64 %773, 2
  %775 = call i8* @_Znam(i64 %774) #10, !noalias !623
  %776 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %777 = bitcast i32** %776 to i8**
  store i8* %775, i8** %777, align 8, !alias.scope !623
  %778 = bitcast i8* %775 to i32*
  br label %784

779:                                              ; preds = %764
  %780 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %781 = bitcast %union.anon* %780 to i32*
  %782 = sext i32 %768 to i64
  %783 = shl nsw i64 %782, 2
  br label %784

784:                                              ; preds = %779, %772
  %785 = phi i64 [ %774, %772 ], [ %783, %779 ]
  %786 = phi i32* [ %778, %772 ], [ %781, %779 ]
  %787 = bitcast i32* %786 to i8*
  %788 = bitcast i32* %769 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %787, i8* align 4 %788, i64 %785, i1 false) #11
  %789 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %790 = bitcast %union.TfLitePtrUnion* %789 to i8**
  %791 = load i8*, i8** %790, align 8
  br label %792

792:                                              ; preds = %762, %784
  %793 = phi i8* [ %791, %784 ], [ null, %762 ]
  call void @_ZN6tflite13optimized_ops20BroadcastMulDispatchIhEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %23, i8* %726, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %24, i8* %759, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %25, i8* %793)
  %794 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  %795 = load i32, i32* %794, align 8
  %796 = icmp sgt i32 %795, 5
  br i1 %796, label %797, label %803

797:                                              ; preds = %792
  %798 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %799 = load i32*, i32** %798, align 8
  %800 = icmp eq i32* %799, null
  br i1 %800, label %803, label %801

801:                                              ; preds = %797
  %802 = bitcast i32* %799 to i8*
  call void @_ZdaPv(i8* %802) #10
  br label %803

803:                                              ; preds = %792, %797, %801
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %760) #11
  %804 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  %805 = load i32, i32* %804, align 8
  %806 = icmp sgt i32 %805, 5
  br i1 %806, label %807, label %813

807:                                              ; preds = %803
  %808 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %809 = load i32*, i32** %808, align 8
  %810 = icmp eq i32* %809, null
  br i1 %810, label %813, label %811

811:                                              ; preds = %807
  %812 = bitcast i32* %809 to i8*
  call void @_ZdaPv(i8* %812) #10
  br label %813

813:                                              ; preds = %803, %807, %811
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %727) #11
  %814 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  %815 = load i32, i32* %814, align 8
  %816 = icmp sgt i32 %815, 5
  br i1 %816, label %817, label %953

817:                                              ; preds = %813
  %818 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %819 = load i32*, i32** %818, align 8
  %820 = icmp eq i32* %819, null
  br i1 %820, label %953, label %821

821:                                              ; preds = %817
  %822 = bitcast i32* %819 to i8*
  call void @_ZdaPv(i8* %822) #10
  br label %953

823:                                              ; preds = %692
  %824 = bitcast %"class.tflite::RuntimeShape"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %824) #11
  br i1 %71, label %825, label %827

825:                                              ; preds = %823
  %826 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 0, i32* %826, align 8, !alias.scope !626
  br label %855

827:                                              ; preds = %823
  %828 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %829 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %828, align 8, !noalias !626
  %830 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %829, i64 0, i32 0
  %831 = load i32, i32* %830, align 4, !noalias !626
  %832 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %829, i64 0, i32 1, i64 0
  %833 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 %831, i32* %833, align 8, !alias.scope !626
  %834 = icmp sgt i32 %831, 5
  br i1 %834, label %835, label %842

835:                                              ; preds = %827
  %836 = sext i32 %831 to i64
  %837 = shl nsw i64 %836, 2
  %838 = call i8* @_Znam(i64 %837) #10, !noalias !626
  %839 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %840 = bitcast i32** %839 to i8**
  store i8* %838, i8** %840, align 8, !alias.scope !626
  %841 = bitcast i8* %838 to i32*
  br label %847

842:                                              ; preds = %827
  %843 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1
  %844 = bitcast %union.anon* %843 to i32*
  %845 = sext i32 %831 to i64
  %846 = shl nsw i64 %845, 2
  br label %847

847:                                              ; preds = %842, %835
  %848 = phi i64 [ %837, %835 ], [ %846, %842 ]
  %849 = phi i32* [ %841, %835 ], [ %844, %842 ]
  %850 = bitcast i32* %849 to i8*
  %851 = bitcast i32* %832 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %850, i8* align 4 %851, i64 %848, i1 false) #11
  %852 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %853 = bitcast %union.TfLitePtrUnion* %852 to i8**
  %854 = load i8*, i8** %853, align 8
  br label %855

855:                                              ; preds = %825, %847
  %856 = phi i8* [ %854, %847 ], [ null, %825 ]
  %857 = bitcast %"class.tflite::RuntimeShape"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %857) #11
  br i1 %101, label %858, label %860

858:                                              ; preds = %855
  %859 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 0, i32* %859, align 8, !alias.scope !629
  br label %888

860:                                              ; preds = %855
  %861 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %862 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %861, align 8, !noalias !629
  %863 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %862, i64 0, i32 0
  %864 = load i32, i32* %863, align 4, !noalias !629
  %865 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %862, i64 0, i32 1, i64 0
  %866 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 %864, i32* %866, align 8, !alias.scope !629
  %867 = icmp sgt i32 %864, 5
  br i1 %867, label %868, label %875

868:                                              ; preds = %860
  %869 = sext i32 %864 to i64
  %870 = shl nsw i64 %869, 2
  %871 = call i8* @_Znam(i64 %870) #10, !noalias !629
  %872 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %873 = bitcast i32** %872 to i8**
  store i8* %871, i8** %873, align 8, !alias.scope !629
  %874 = bitcast i8* %871 to i32*
  br label %880

875:                                              ; preds = %860
  %876 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1
  %877 = bitcast %union.anon* %876 to i32*
  %878 = sext i32 %864 to i64
  %879 = shl nsw i64 %878, 2
  br label %880

880:                                              ; preds = %875, %868
  %881 = phi i64 [ %870, %868 ], [ %879, %875 ]
  %882 = phi i32* [ %874, %868 ], [ %877, %875 ]
  %883 = bitcast i32* %882 to i8*
  %884 = bitcast i32* %865 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %883, i8* align 4 %884, i64 %881, i1 false) #11
  %885 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %886 = bitcast %union.TfLitePtrUnion* %885 to i8**
  %887 = load i8*, i8** %886, align 8
  br label %888

888:                                              ; preds = %858, %880
  %889 = phi i8* [ %887, %880 ], [ null, %858 ]
  %890 = bitcast %"class.tflite::RuntimeShape"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %890) #11
  %891 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %891, label %892, label %894

892:                                              ; preds = %888
  %893 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 0, i32* %893, align 8, !alias.scope !632
  br label %922

894:                                              ; preds = %888
  %895 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %896 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %895, align 8, !noalias !632
  %897 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %896, i64 0, i32 0
  %898 = load i32, i32* %897, align 4, !noalias !632
  %899 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %896, i64 0, i32 1, i64 0
  %900 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 %898, i32* %900, align 8, !alias.scope !632
  %901 = icmp sgt i32 %898, 5
  br i1 %901, label %902, label %909

902:                                              ; preds = %894
  %903 = sext i32 %898 to i64
  %904 = shl nsw i64 %903, 2
  %905 = call i8* @_Znam(i64 %904) #10, !noalias !632
  %906 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %907 = bitcast i32** %906 to i8**
  store i8* %905, i8** %907, align 8, !alias.scope !632
  %908 = bitcast i8* %905 to i32*
  br label %914

909:                                              ; preds = %894
  %910 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1
  %911 = bitcast %union.anon* %910 to i32*
  %912 = sext i32 %898 to i64
  %913 = shl nsw i64 %912, 2
  br label %914

914:                                              ; preds = %909, %902
  %915 = phi i64 [ %904, %902 ], [ %913, %909 ]
  %916 = phi i32* [ %908, %902 ], [ %911, %909 ]
  %917 = bitcast i32* %916 to i8*
  %918 = bitcast i32* %899 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %917, i8* align 4 %918, i64 %915, i1 false) #11
  %919 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %920 = bitcast %union.TfLitePtrUnion* %919 to i8**
  %921 = load i8*, i8** %920, align 8
  br label %922

922:                                              ; preds = %892, %914
  %923 = phi i8* [ %921, %914 ], [ null, %892 ]
  call void @_ZN6tflite13optimized_ops3MulERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS6_S8_S6_Ph(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %26, i8* %856, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %27, i8* %889, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %28, i8* %923)
  %924 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  %925 = load i32, i32* %924, align 8
  %926 = icmp sgt i32 %925, 5
  br i1 %926, label %927, label %933

927:                                              ; preds = %922
  %928 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %929 = load i32*, i32** %928, align 8
  %930 = icmp eq i32* %929, null
  br i1 %930, label %933, label %931

931:                                              ; preds = %927
  %932 = bitcast i32* %929 to i8*
  call void @_ZdaPv(i8* %932) #10
  br label %933

933:                                              ; preds = %922, %927, %931
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %890) #11
  %934 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  %935 = load i32, i32* %934, align 8
  %936 = icmp sgt i32 %935, 5
  br i1 %936, label %937, label %943

937:                                              ; preds = %933
  %938 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %939 = load i32*, i32** %938, align 8
  %940 = icmp eq i32* %939, null
  br i1 %940, label %943, label %941

941:                                              ; preds = %937
  %942 = bitcast i32* %939 to i8*
  call void @_ZdaPv(i8* %942) #10
  br label %943

943:                                              ; preds = %933, %937, %941
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %857) #11
  %944 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  %945 = load i32, i32* %944, align 8
  %946 = icmp sgt i32 %945, 5
  br i1 %946, label %947, label %953

947:                                              ; preds = %943
  %948 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %949 = load i32*, i32** %948, align 8
  %950 = icmp eq i32* %949, null
  br i1 %950, label %953, label %951

951:                                              ; preds = %947
  %952 = bitcast i32* %949 to i8*
  call void @_ZdaPv(i8* %952) #10
  br label %953

953:                                              ; preds = %951, %947, %943, %821, %817, %813, %690, %686, %682, %560, %556, %552, %411, %407, %403, %281, %277, %273
  %954 = phi i8* [ %154, %273 ], [ %154, %277 ], [ %154, %281 ], [ %284, %403 ], [ %284, %407 ], [ %284, %411 ], [ %433, %552 ], [ %433, %556 ], [ %433, %560 ], [ %563, %682 ], [ %563, %686 ], [ %563, %690 ], [ %694, %813 ], [ %694, %817 ], [ %694, %821 ], [ %824, %943 ], [ %824, %947 ], [ %824, %951 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %954) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %46) #11
  br label %2129

955:                                              ; preds = %40, %7
  %956 = icmp eq i32 %36, 7
  %957 = icmp eq i32 %38, 7
  %958 = and i1 %956, %957
  br i1 %958, label %959, label %2126

959:                                              ; preds = %955
  %960 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 0
  %961 = load i32, i32* %960, align 8
  switch i32 %961, label %2126 [
    i32 9, label %962
    i32 3, label %1544
  ]

962:                                              ; preds = %959
  %963 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 0
  %964 = load i32, i32* %963, align 4
  %965 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 1
  %966 = load i32, i32* %965, align 4
  %967 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 3, i32 1
  %968 = load i32, i32* %967, align 4
  %969 = bitcast %"class.tflite::RuntimeShape"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %969) #11
  %970 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %970, label %971, label %973

971:                                              ; preds = %962
  %972 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 0, i32* %972, align 8, !alias.scope !635
  br label %1002

973:                                              ; preds = %962
  %974 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %975 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %974, align 8, !noalias !635
  %976 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %975, i64 0, i32 0
  %977 = load i32, i32* %976, align 4, !noalias !635
  %978 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %975, i64 0, i32 1, i64 0
  %979 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 %977, i32* %979, align 8, !alias.scope !635
  %980 = icmp sgt i32 %977, 5
  br i1 %980, label %981, label %988

981:                                              ; preds = %973
  %982 = sext i32 %977 to i64
  %983 = shl nsw i64 %982, 2
  %984 = tail call i8* @_Znam(i64 %983) #10, !noalias !635
  %985 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %986 = bitcast i32** %985 to i8**
  store i8* %984, i8** %986, align 8, !alias.scope !635
  %987 = bitcast i8* %984 to i32*
  br label %993

988:                                              ; preds = %973
  %989 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1
  %990 = bitcast %union.anon* %989 to i32*
  %991 = sext i32 %977 to i64
  %992 = shl nsw i64 %991, 2
  br label %993

993:                                              ; preds = %988, %981
  %994 = phi i64 [ %983, %981 ], [ %992, %988 ]
  %995 = phi i32* [ %987, %981 ], [ %990, %988 ]
  %996 = bitcast i32* %995 to i8*
  %997 = bitcast i32* %978 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %996, i8* align 4 %997, i64 %994, i1 false) #11
  %998 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %999 = bitcast %union.TfLitePtrUnion* %998 to i16**
  %1000 = load i16*, i16** %999, align 8
  %1001 = bitcast i16* %1000 to i8*
  br label %1002

1002:                                             ; preds = %971, %993
  %1003 = phi i32 [ %977, %993 ], [ 0, %971 ]
  %1004 = phi i8* [ %1001, %993 ], [ null, %971 ]
  %1005 = phi i16* [ %1000, %993 ], [ null, %971 ]
  %1006 = bitcast %"class.tflite::RuntimeShape"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1006) #11
  %1007 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %1007, label %1008, label %1010

1008:                                             ; preds = %1002
  %1009 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  store i32 0, i32* %1009, align 8, !alias.scope !638
  br label %1039

1010:                                             ; preds = %1002
  %1011 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %1012 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1011, align 8, !noalias !638
  %1013 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1012, i64 0, i32 0
  %1014 = load i32, i32* %1013, align 4, !noalias !638
  %1015 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1012, i64 0, i32 1, i64 0
  %1016 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  store i32 %1014, i32* %1016, align 8, !alias.scope !638
  %1017 = icmp sgt i32 %1014, 5
  br i1 %1017, label %1018, label %1025

1018:                                             ; preds = %1010
  %1019 = sext i32 %1014 to i64
  %1020 = shl nsw i64 %1019, 2
  %1021 = tail call i8* @_Znam(i64 %1020) #10, !noalias !638
  %1022 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1, i32 0
  %1023 = bitcast i32** %1022 to i8**
  store i8* %1021, i8** %1023, align 8, !alias.scope !638
  %1024 = bitcast i8* %1021 to i32*
  br label %1030

1025:                                             ; preds = %1010
  %1026 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1
  %1027 = bitcast %union.anon* %1026 to i32*
  %1028 = sext i32 %1014 to i64
  %1029 = shl nsw i64 %1028, 2
  br label %1030

1030:                                             ; preds = %1025, %1018
  %1031 = phi i64 [ %1020, %1018 ], [ %1029, %1025 ]
  %1032 = phi i32* [ %1024, %1018 ], [ %1027, %1025 ]
  %1033 = bitcast i32* %1032 to i8*
  %1034 = bitcast i32* %1015 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1033, i8* align 4 %1034, i64 %1031, i1 false) #11
  %1035 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %1036 = bitcast %union.TfLitePtrUnion* %1035 to i16**
  %1037 = load i16*, i16** %1036, align 8
  %1038 = bitcast i16* %1037 to i8*
  br label %1039

1039:                                             ; preds = %1008, %1030
  %1040 = phi i32 [ %1014, %1030 ], [ 0, %1008 ]
  %1041 = phi i8* [ %1038, %1030 ], [ null, %1008 ]
  %1042 = phi i16* [ %1037, %1030 ], [ null, %1008 ]
  %1043 = bitcast %"class.tflite::RuntimeShape"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1043) #11
  %1044 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %1044, label %1045, label %1047

1045:                                             ; preds = %1039
  %1046 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 0, i32* %1046, align 8, !alias.scope !641
  br label %1075

1047:                                             ; preds = %1039
  %1048 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %1049 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1048, align 8, !noalias !641
  %1050 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1049, i64 0, i32 0
  %1051 = load i32, i32* %1050, align 4, !noalias !641
  %1052 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1049, i64 0, i32 1, i64 0
  %1053 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 %1051, i32* %1053, align 8, !alias.scope !641
  %1054 = icmp sgt i32 %1051, 5
  br i1 %1054, label %1055, label %1062

1055:                                             ; preds = %1047
  %1056 = sext i32 %1051 to i64
  %1057 = shl nsw i64 %1056, 2
  %1058 = tail call i8* @_Znam(i64 %1057) #10, !noalias !641
  %1059 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %1060 = bitcast i32** %1059 to i8**
  store i8* %1058, i8** %1060, align 8, !alias.scope !641
  %1061 = bitcast i8* %1058 to i32*
  br label %1067

1062:                                             ; preds = %1047
  %1063 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1
  %1064 = bitcast %union.anon* %1063 to i32*
  %1065 = sext i32 %1051 to i64
  %1066 = shl nsw i64 %1065, 2
  br label %1067

1067:                                             ; preds = %1062, %1055
  %1068 = phi i64 [ %1057, %1055 ], [ %1066, %1062 ]
  %1069 = phi i32* [ %1061, %1055 ], [ %1064, %1062 ]
  %1070 = bitcast i32* %1069 to i8*
  %1071 = bitcast i32* %1052 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1070, i8* align 4 %1071, i64 %1068, i1 false) #11
  %1072 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %1073 = bitcast %union.TfLitePtrUnion* %1072 to i8**
  %1074 = load i8*, i8** %1073, align 8
  br label %1075

1075:                                             ; preds = %1045, %1067
  %1076 = phi i32 [ %1051, %1067 ], [ 0, %1045 ]
  %1077 = phi i8* [ %1074, %1067 ], [ null, %1045 ]
  %1078 = icmp sgt i32 %1003, 5
  %1079 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1
  br i1 %1078, label %1080, label %1083

1080:                                             ; preds = %1075
  %1081 = getelementptr inbounds %union.anon, %union.anon* %1079, i64 0, i32 0
  %1082 = load i32*, i32** %1081, align 8
  br label %1086

1083:                                             ; preds = %1075
  %1084 = bitcast %union.anon* %1079 to i32*
  %1085 = icmp sgt i32 %1003, 0
  br i1 %1085, label %1086, label %1186

1086:                                             ; preds = %1083, %1080
  %1087 = phi i32* [ %1082, %1080 ], [ %1084, %1083 ]
  %1088 = zext i32 %1003 to i64
  %1089 = icmp ult i32 %1003, 8
  br i1 %1089, label %1175, label %1090

1090:                                             ; preds = %1086
  %1091 = and i64 %1088, 4294967288
  %1092 = add nsw i64 %1091, -8
  %1093 = lshr exact i64 %1092, 3
  %1094 = add nuw nsw i64 %1093, 1
  %1095 = and i64 %1094, 3
  %1096 = icmp ult i64 %1092, 24
  br i1 %1096, label %1142, label %1097

1097:                                             ; preds = %1090
  %1098 = sub nsw i64 %1094, %1095
  br label %1099

1099:                                             ; preds = %1099, %1097
  %1100 = phi i64 [ 0, %1097 ], [ %1139, %1099 ]
  %1101 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1097 ], [ %1137, %1099 ]
  %1102 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1097 ], [ %1138, %1099 ]
  %1103 = phi i64 [ %1098, %1097 ], [ %1140, %1099 ]
  %1104 = getelementptr inbounds i32, i32* %1087, i64 %1100
  %1105 = bitcast i32* %1104 to <4 x i32>*
  %1106 = load <4 x i32>, <4 x i32>* %1105, align 4
  %1107 = getelementptr inbounds i32, i32* %1104, i64 4
  %1108 = bitcast i32* %1107 to <4 x i32>*
  %1109 = load <4 x i32>, <4 x i32>* %1108, align 4
  %1110 = mul nsw <4 x i32> %1106, %1101
  %1111 = mul nsw <4 x i32> %1109, %1102
  %1112 = or i64 %1100, 8
  %1113 = getelementptr inbounds i32, i32* %1087, i64 %1112
  %1114 = bitcast i32* %1113 to <4 x i32>*
  %1115 = load <4 x i32>, <4 x i32>* %1114, align 4
  %1116 = getelementptr inbounds i32, i32* %1113, i64 4
  %1117 = bitcast i32* %1116 to <4 x i32>*
  %1118 = load <4 x i32>, <4 x i32>* %1117, align 4
  %1119 = mul nsw <4 x i32> %1115, %1110
  %1120 = mul nsw <4 x i32> %1118, %1111
  %1121 = or i64 %1100, 16
  %1122 = getelementptr inbounds i32, i32* %1087, i64 %1121
  %1123 = bitcast i32* %1122 to <4 x i32>*
  %1124 = load <4 x i32>, <4 x i32>* %1123, align 4
  %1125 = getelementptr inbounds i32, i32* %1122, i64 4
  %1126 = bitcast i32* %1125 to <4 x i32>*
  %1127 = load <4 x i32>, <4 x i32>* %1126, align 4
  %1128 = mul nsw <4 x i32> %1124, %1119
  %1129 = mul nsw <4 x i32> %1127, %1120
  %1130 = or i64 %1100, 24
  %1131 = getelementptr inbounds i32, i32* %1087, i64 %1130
  %1132 = bitcast i32* %1131 to <4 x i32>*
  %1133 = load <4 x i32>, <4 x i32>* %1132, align 4
  %1134 = getelementptr inbounds i32, i32* %1131, i64 4
  %1135 = bitcast i32* %1134 to <4 x i32>*
  %1136 = load <4 x i32>, <4 x i32>* %1135, align 4
  %1137 = mul nsw <4 x i32> %1133, %1128
  %1138 = mul nsw <4 x i32> %1136, %1129
  %1139 = add i64 %1100, 32
  %1140 = add i64 %1103, -4
  %1141 = icmp eq i64 %1140, 0
  br i1 %1141, label %1142, label %1099, !llvm.loop !644

1142:                                             ; preds = %1099, %1090
  %1143 = phi <4 x i32> [ undef, %1090 ], [ %1137, %1099 ]
  %1144 = phi <4 x i32> [ undef, %1090 ], [ %1138, %1099 ]
  %1145 = phi i64 [ 0, %1090 ], [ %1139, %1099 ]
  %1146 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1090 ], [ %1137, %1099 ]
  %1147 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1090 ], [ %1138, %1099 ]
  %1148 = icmp eq i64 %1095, 0
  br i1 %1148, label %1165, label %1149

1149:                                             ; preds = %1142, %1149
  %1150 = phi i64 [ %1162, %1149 ], [ %1145, %1142 ]
  %1151 = phi <4 x i32> [ %1160, %1149 ], [ %1146, %1142 ]
  %1152 = phi <4 x i32> [ %1161, %1149 ], [ %1147, %1142 ]
  %1153 = phi i64 [ %1163, %1149 ], [ %1095, %1142 ]
  %1154 = getelementptr inbounds i32, i32* %1087, i64 %1150
  %1155 = bitcast i32* %1154 to <4 x i32>*
  %1156 = load <4 x i32>, <4 x i32>* %1155, align 4
  %1157 = getelementptr inbounds i32, i32* %1154, i64 4
  %1158 = bitcast i32* %1157 to <4 x i32>*
  %1159 = load <4 x i32>, <4 x i32>* %1158, align 4
  %1160 = mul nsw <4 x i32> %1156, %1151
  %1161 = mul nsw <4 x i32> %1159, %1152
  %1162 = add i64 %1150, 8
  %1163 = add i64 %1153, -1
  %1164 = icmp eq i64 %1163, 0
  br i1 %1164, label %1165, label %1149, !llvm.loop !645

1165:                                             ; preds = %1149, %1142
  %1166 = phi <4 x i32> [ %1143, %1142 ], [ %1160, %1149 ]
  %1167 = phi <4 x i32> [ %1144, %1142 ], [ %1161, %1149 ]
  %1168 = mul <4 x i32> %1167, %1166
  %1169 = shufflevector <4 x i32> %1168, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1170 = mul <4 x i32> %1168, %1169
  %1171 = shufflevector <4 x i32> %1170, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1172 = mul <4 x i32> %1170, %1171
  %1173 = extractelement <4 x i32> %1172, i32 0
  %1174 = icmp eq i64 %1091, %1088
  br i1 %1174, label %1186, label %1175

1175:                                             ; preds = %1165, %1086
  %1176 = phi i64 [ 0, %1086 ], [ %1091, %1165 ]
  %1177 = phi i32 [ 1, %1086 ], [ %1173, %1165 ]
  br label %1178

1178:                                             ; preds = %1175, %1178
  %1179 = phi i64 [ %1184, %1178 ], [ %1176, %1175 ]
  %1180 = phi i32 [ %1183, %1178 ], [ %1177, %1175 ]
  %1181 = getelementptr inbounds i32, i32* %1087, i64 %1179
  %1182 = load i32, i32* %1181, align 4
  %1183 = mul nsw i32 %1182, %1180
  %1184 = add nuw nsw i64 %1179, 1
  %1185 = icmp eq i64 %1184, %1088
  br i1 %1185, label %1186, label %1178, !llvm.loop !646

1186:                                             ; preds = %1178, %1165, %1083
  %1187 = phi i32 [ 1, %1083 ], [ %1173, %1165 ], [ %1183, %1178 ]
  %1188 = icmp sgt i32 %1040, 5
  %1189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1
  br i1 %1188, label %1190, label %1193

1190:                                             ; preds = %1186
  %1191 = getelementptr inbounds %union.anon, %union.anon* %1189, i64 0, i32 0
  %1192 = load i32*, i32** %1191, align 8
  br label %1196

1193:                                             ; preds = %1186
  %1194 = bitcast %union.anon* %1189 to i32*
  %1195 = icmp sgt i32 %1040, 0
  br i1 %1195, label %1196, label %1296

1196:                                             ; preds = %1193, %1190
  %1197 = phi i32* [ %1192, %1190 ], [ %1194, %1193 ]
  %1198 = zext i32 %1040 to i64
  %1199 = icmp ult i32 %1040, 8
  br i1 %1199, label %1285, label %1200

1200:                                             ; preds = %1196
  %1201 = and i64 %1198, 4294967288
  %1202 = add nsw i64 %1201, -8
  %1203 = lshr exact i64 %1202, 3
  %1204 = add nuw nsw i64 %1203, 1
  %1205 = and i64 %1204, 3
  %1206 = icmp ult i64 %1202, 24
  br i1 %1206, label %1252, label %1207

1207:                                             ; preds = %1200
  %1208 = sub nsw i64 %1204, %1205
  br label %1209

1209:                                             ; preds = %1209, %1207
  %1210 = phi i64 [ 0, %1207 ], [ %1249, %1209 ]
  %1211 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1207 ], [ %1247, %1209 ]
  %1212 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1207 ], [ %1248, %1209 ]
  %1213 = phi i64 [ %1208, %1207 ], [ %1250, %1209 ]
  %1214 = getelementptr inbounds i32, i32* %1197, i64 %1210
  %1215 = bitcast i32* %1214 to <4 x i32>*
  %1216 = load <4 x i32>, <4 x i32>* %1215, align 4
  %1217 = getelementptr inbounds i32, i32* %1214, i64 4
  %1218 = bitcast i32* %1217 to <4 x i32>*
  %1219 = load <4 x i32>, <4 x i32>* %1218, align 4
  %1220 = mul nsw <4 x i32> %1216, %1211
  %1221 = mul nsw <4 x i32> %1219, %1212
  %1222 = or i64 %1210, 8
  %1223 = getelementptr inbounds i32, i32* %1197, i64 %1222
  %1224 = bitcast i32* %1223 to <4 x i32>*
  %1225 = load <4 x i32>, <4 x i32>* %1224, align 4
  %1226 = getelementptr inbounds i32, i32* %1223, i64 4
  %1227 = bitcast i32* %1226 to <4 x i32>*
  %1228 = load <4 x i32>, <4 x i32>* %1227, align 4
  %1229 = mul nsw <4 x i32> %1225, %1220
  %1230 = mul nsw <4 x i32> %1228, %1221
  %1231 = or i64 %1210, 16
  %1232 = getelementptr inbounds i32, i32* %1197, i64 %1231
  %1233 = bitcast i32* %1232 to <4 x i32>*
  %1234 = load <4 x i32>, <4 x i32>* %1233, align 4
  %1235 = getelementptr inbounds i32, i32* %1232, i64 4
  %1236 = bitcast i32* %1235 to <4 x i32>*
  %1237 = load <4 x i32>, <4 x i32>* %1236, align 4
  %1238 = mul nsw <4 x i32> %1234, %1229
  %1239 = mul nsw <4 x i32> %1237, %1230
  %1240 = or i64 %1210, 24
  %1241 = getelementptr inbounds i32, i32* %1197, i64 %1240
  %1242 = bitcast i32* %1241 to <4 x i32>*
  %1243 = load <4 x i32>, <4 x i32>* %1242, align 4
  %1244 = getelementptr inbounds i32, i32* %1241, i64 4
  %1245 = bitcast i32* %1244 to <4 x i32>*
  %1246 = load <4 x i32>, <4 x i32>* %1245, align 4
  %1247 = mul nsw <4 x i32> %1243, %1238
  %1248 = mul nsw <4 x i32> %1246, %1239
  %1249 = add i64 %1210, 32
  %1250 = add i64 %1213, -4
  %1251 = icmp eq i64 %1250, 0
  br i1 %1251, label %1252, label %1209, !llvm.loop !647

1252:                                             ; preds = %1209, %1200
  %1253 = phi <4 x i32> [ undef, %1200 ], [ %1247, %1209 ]
  %1254 = phi <4 x i32> [ undef, %1200 ], [ %1248, %1209 ]
  %1255 = phi i64 [ 0, %1200 ], [ %1249, %1209 ]
  %1256 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1200 ], [ %1247, %1209 ]
  %1257 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1200 ], [ %1248, %1209 ]
  %1258 = icmp eq i64 %1205, 0
  br i1 %1258, label %1275, label %1259

1259:                                             ; preds = %1252, %1259
  %1260 = phi i64 [ %1272, %1259 ], [ %1255, %1252 ]
  %1261 = phi <4 x i32> [ %1270, %1259 ], [ %1256, %1252 ]
  %1262 = phi <4 x i32> [ %1271, %1259 ], [ %1257, %1252 ]
  %1263 = phi i64 [ %1273, %1259 ], [ %1205, %1252 ]
  %1264 = getelementptr inbounds i32, i32* %1197, i64 %1260
  %1265 = bitcast i32* %1264 to <4 x i32>*
  %1266 = load <4 x i32>, <4 x i32>* %1265, align 4
  %1267 = getelementptr inbounds i32, i32* %1264, i64 4
  %1268 = bitcast i32* %1267 to <4 x i32>*
  %1269 = load <4 x i32>, <4 x i32>* %1268, align 4
  %1270 = mul nsw <4 x i32> %1266, %1261
  %1271 = mul nsw <4 x i32> %1269, %1262
  %1272 = add i64 %1260, 8
  %1273 = add i64 %1263, -1
  %1274 = icmp eq i64 %1273, 0
  br i1 %1274, label %1275, label %1259, !llvm.loop !648

1275:                                             ; preds = %1259, %1252
  %1276 = phi <4 x i32> [ %1253, %1252 ], [ %1270, %1259 ]
  %1277 = phi <4 x i32> [ %1254, %1252 ], [ %1271, %1259 ]
  %1278 = mul <4 x i32> %1277, %1276
  %1279 = shufflevector <4 x i32> %1278, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1280 = mul <4 x i32> %1278, %1279
  %1281 = shufflevector <4 x i32> %1280, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1282 = mul <4 x i32> %1280, %1281
  %1283 = extractelement <4 x i32> %1282, i32 0
  %1284 = icmp eq i64 %1201, %1198
  br i1 %1284, label %1296, label %1285

1285:                                             ; preds = %1275, %1196
  %1286 = phi i64 [ 0, %1196 ], [ %1201, %1275 ]
  %1287 = phi i32 [ 1, %1196 ], [ %1283, %1275 ]
  br label %1288

1288:                                             ; preds = %1285, %1288
  %1289 = phi i64 [ %1294, %1288 ], [ %1286, %1285 ]
  %1290 = phi i32 [ %1293, %1288 ], [ %1287, %1285 ]
  %1291 = getelementptr inbounds i32, i32* %1197, i64 %1289
  %1292 = load i32, i32* %1291, align 4
  %1293 = mul nsw i32 %1292, %1290
  %1294 = add nuw nsw i64 %1289, 1
  %1295 = icmp eq i64 %1294, %1198
  br i1 %1295, label %1296, label %1288, !llvm.loop !649

1296:                                             ; preds = %1288, %1275, %1193
  %1297 = phi i32 [ 1, %1193 ], [ %1283, %1275 ], [ %1293, %1288 ]
  %1298 = icmp sgt i32 %1076, 5
  %1299 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1
  br i1 %1298, label %1300, label %1303

1300:                                             ; preds = %1296
  %1301 = getelementptr inbounds %union.anon, %union.anon* %1299, i64 0, i32 0
  %1302 = load i32*, i32** %1301, align 8
  br label %1306

1303:                                             ; preds = %1296
  %1304 = bitcast %union.anon* %1299 to i32*
  %1305 = icmp sgt i32 %1076, 0
  br i1 %1305, label %1306, label %1406

1306:                                             ; preds = %1303, %1300
  %1307 = phi i32* [ %1302, %1300 ], [ %1304, %1303 ]
  %1308 = zext i32 %1076 to i64
  %1309 = icmp ult i32 %1076, 8
  br i1 %1309, label %1395, label %1310

1310:                                             ; preds = %1306
  %1311 = and i64 %1308, 4294967288
  %1312 = add nsw i64 %1311, -8
  %1313 = lshr exact i64 %1312, 3
  %1314 = add nuw nsw i64 %1313, 1
  %1315 = and i64 %1314, 3
  %1316 = icmp ult i64 %1312, 24
  br i1 %1316, label %1362, label %1317

1317:                                             ; preds = %1310
  %1318 = sub nsw i64 %1314, %1315
  br label %1319

1319:                                             ; preds = %1319, %1317
  %1320 = phi i64 [ 0, %1317 ], [ %1359, %1319 ]
  %1321 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1317 ], [ %1357, %1319 ]
  %1322 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1317 ], [ %1358, %1319 ]
  %1323 = phi i64 [ %1318, %1317 ], [ %1360, %1319 ]
  %1324 = getelementptr inbounds i32, i32* %1307, i64 %1320
  %1325 = bitcast i32* %1324 to <4 x i32>*
  %1326 = load <4 x i32>, <4 x i32>* %1325, align 4
  %1327 = getelementptr inbounds i32, i32* %1324, i64 4
  %1328 = bitcast i32* %1327 to <4 x i32>*
  %1329 = load <4 x i32>, <4 x i32>* %1328, align 4
  %1330 = mul nsw <4 x i32> %1326, %1321
  %1331 = mul nsw <4 x i32> %1329, %1322
  %1332 = or i64 %1320, 8
  %1333 = getelementptr inbounds i32, i32* %1307, i64 %1332
  %1334 = bitcast i32* %1333 to <4 x i32>*
  %1335 = load <4 x i32>, <4 x i32>* %1334, align 4
  %1336 = getelementptr inbounds i32, i32* %1333, i64 4
  %1337 = bitcast i32* %1336 to <4 x i32>*
  %1338 = load <4 x i32>, <4 x i32>* %1337, align 4
  %1339 = mul nsw <4 x i32> %1335, %1330
  %1340 = mul nsw <4 x i32> %1338, %1331
  %1341 = or i64 %1320, 16
  %1342 = getelementptr inbounds i32, i32* %1307, i64 %1341
  %1343 = bitcast i32* %1342 to <4 x i32>*
  %1344 = load <4 x i32>, <4 x i32>* %1343, align 4
  %1345 = getelementptr inbounds i32, i32* %1342, i64 4
  %1346 = bitcast i32* %1345 to <4 x i32>*
  %1347 = load <4 x i32>, <4 x i32>* %1346, align 4
  %1348 = mul nsw <4 x i32> %1344, %1339
  %1349 = mul nsw <4 x i32> %1347, %1340
  %1350 = or i64 %1320, 24
  %1351 = getelementptr inbounds i32, i32* %1307, i64 %1350
  %1352 = bitcast i32* %1351 to <4 x i32>*
  %1353 = load <4 x i32>, <4 x i32>* %1352, align 4
  %1354 = getelementptr inbounds i32, i32* %1351, i64 4
  %1355 = bitcast i32* %1354 to <4 x i32>*
  %1356 = load <4 x i32>, <4 x i32>* %1355, align 4
  %1357 = mul nsw <4 x i32> %1353, %1348
  %1358 = mul nsw <4 x i32> %1356, %1349
  %1359 = add i64 %1320, 32
  %1360 = add i64 %1323, -4
  %1361 = icmp eq i64 %1360, 0
  br i1 %1361, label %1362, label %1319, !llvm.loop !650

1362:                                             ; preds = %1319, %1310
  %1363 = phi <4 x i32> [ undef, %1310 ], [ %1357, %1319 ]
  %1364 = phi <4 x i32> [ undef, %1310 ], [ %1358, %1319 ]
  %1365 = phi i64 [ 0, %1310 ], [ %1359, %1319 ]
  %1366 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1310 ], [ %1357, %1319 ]
  %1367 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1310 ], [ %1358, %1319 ]
  %1368 = icmp eq i64 %1315, 0
  br i1 %1368, label %1385, label %1369

1369:                                             ; preds = %1362, %1369
  %1370 = phi i64 [ %1382, %1369 ], [ %1365, %1362 ]
  %1371 = phi <4 x i32> [ %1380, %1369 ], [ %1366, %1362 ]
  %1372 = phi <4 x i32> [ %1381, %1369 ], [ %1367, %1362 ]
  %1373 = phi i64 [ %1383, %1369 ], [ %1315, %1362 ]
  %1374 = getelementptr inbounds i32, i32* %1307, i64 %1370
  %1375 = bitcast i32* %1374 to <4 x i32>*
  %1376 = load <4 x i32>, <4 x i32>* %1375, align 4
  %1377 = getelementptr inbounds i32, i32* %1374, i64 4
  %1378 = bitcast i32* %1377 to <4 x i32>*
  %1379 = load <4 x i32>, <4 x i32>* %1378, align 4
  %1380 = mul nsw <4 x i32> %1376, %1371
  %1381 = mul nsw <4 x i32> %1379, %1372
  %1382 = add i64 %1370, 8
  %1383 = add i64 %1373, -1
  %1384 = icmp eq i64 %1383, 0
  br i1 %1384, label %1385, label %1369, !llvm.loop !651

1385:                                             ; preds = %1369, %1362
  %1386 = phi <4 x i32> [ %1363, %1362 ], [ %1380, %1369 ]
  %1387 = phi <4 x i32> [ %1364, %1362 ], [ %1381, %1369 ]
  %1388 = mul <4 x i32> %1387, %1386
  %1389 = shufflevector <4 x i32> %1388, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1390 = mul <4 x i32> %1388, %1389
  %1391 = shufflevector <4 x i32> %1390, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1392 = mul <4 x i32> %1390, %1391
  %1393 = extractelement <4 x i32> %1392, i32 0
  %1394 = icmp eq i64 %1311, %1308
  br i1 %1394, label %1406, label %1395

1395:                                             ; preds = %1385, %1306
  %1396 = phi i64 [ 0, %1306 ], [ %1311, %1385 ]
  %1397 = phi i32 [ 1, %1306 ], [ %1393, %1385 ]
  br label %1398

1398:                                             ; preds = %1395, %1398
  %1399 = phi i64 [ %1404, %1398 ], [ %1396, %1395 ]
  %1400 = phi i32 [ %1403, %1398 ], [ %1397, %1395 ]
  %1401 = getelementptr inbounds i32, i32* %1307, i64 %1399
  %1402 = load i32, i32* %1401, align 4
  %1403 = mul nsw i32 %1402, %1400
  %1404 = add nuw nsw i64 %1399, 1
  %1405 = icmp eq i64 %1404, %1308
  br i1 %1405, label %1406, label %1398, !llvm.loop !652

1406:                                             ; preds = %1398, %1385, %1303
  %1407 = phi i32 [ 1, %1303 ], [ %1393, %1385 ], [ %1403, %1398 ]
  %1408 = icmp eq i32 %1187, %1297
  br i1 %1408, label %1410, label %1409

1409:                                             ; preds = %1406
  tail call void @abort() #12
  unreachable

1410:                                             ; preds = %1406
  %1411 = icmp eq i32 %1187, %1407
  br i1 %1411, label %1412, label %1484

1412:                                             ; preds = %1410
  %1413 = icmp sgt i32 %1187, 0
  br i1 %1413, label %1414, label %1522

1414:                                             ; preds = %1412
  %1415 = sub nsw i32 %966, %968
  %1416 = trunc i32 %1415 to i16
  %1417 = sub nsw i32 %964, %968
  %1418 = trunc i32 %1417 to i16
  %1419 = zext i32 %1187 to i64
  %1420 = icmp ult i32 %1187, 8
  br i1 %1420, label %1421, label %1423

1421:                                             ; preds = %1482, %1423, %1414
  %1422 = phi i64 [ 0, %1423 ], [ 0, %1414 ], [ %1437, %1482 ]
  br label %1485

1423:                                             ; preds = %1414
  %1424 = getelementptr i8, i8* %1077, i64 %1419
  %1425 = getelementptr i16, i16* %1042, i64 %1419
  %1426 = bitcast i16* %1425 to i8*
  %1427 = getelementptr i16, i16* %1005, i64 %1419
  %1428 = bitcast i16* %1427 to i8*
  %1429 = icmp ult i8* %1077, %1426
  %1430 = icmp ult i8* %1041, %1424
  %1431 = and i1 %1429, %1430
  %1432 = icmp ult i8* %1077, %1428
  %1433 = icmp ult i8* %1004, %1424
  %1434 = and i1 %1432, %1433
  %1435 = or i1 %1431, %1434
  br i1 %1435, label %1421, label %1436

1436:                                             ; preds = %1423
  %1437 = and i64 %1419, 4294967288
  %1438 = insertelement <8 x i16> undef, i16 %1416, i32 0
  %1439 = shufflevector <8 x i16> %1438, <8 x i16> undef, <8 x i32> zeroinitializer
  %1440 = insertelement <8 x i16> undef, i16 %1418, i32 0
  %1441 = shufflevector <8 x i16> %1440, <8 x i16> undef, <8 x i32> zeroinitializer
  %1442 = insertelement <8 x i32> undef, i32 %968, i32 0
  %1443 = shufflevector <8 x i32> %1442, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %1444

1444:                                             ; preds = %1444, %1436
  %1445 = phi i64 [ 0, %1436 ], [ %1480, %1444 ]
  %1446 = getelementptr inbounds i16, i16* %1005, i64 %1445
  %1447 = bitcast i16* %1446 to <8 x i16>*
  %1448 = load <8 x i16>, <8 x i16>* %1447, align 2, !alias.scope !653
  %1449 = getelementptr inbounds i16, i16* %1042, i64 %1445
  %1450 = bitcast i16* %1449 to <8 x i16>*
  %1451 = load <8 x i16>, <8 x i16>* %1450, align 2, !alias.scope !656
  %1452 = icmp eq <8 x i16> %1448, %1451
  %1453 = icmp eq <8 x i16> %1448, <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>
  %1454 = and <8 x i1> %1453, %1452
  %1455 = sext <8 x i16> %1451 to <8 x i32>
  %1456 = sext <8 x i16> %1448 to <8 x i32>
  %1457 = mul nsw <8 x i32> %1455, %1456
  %1458 = icmp sgt <8 x i32> %1457, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %1459 = select <8 x i1> %1458, <8 x i32> <i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384>, <8 x i32> <i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383>
  %1460 = add nsw <8 x i32> %1459, %1457
  %1461 = sdiv <8 x i32> %1460, <i32 32768, i32 32768, i32 32768, i32 32768, i32 32768, i32 32768, i32 32768, i32 32768>
  %1462 = trunc <8 x i32> %1461 to <8 x i16>
  %1463 = select <8 x i1> %1454, <8 x i16> <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, <8 x i16> %1462
  %1464 = and <8 x i16> %1463, <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>
  %1465 = lshr <8 x i16> %1463, <i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15>
  %1466 = add nuw nsw <8 x i16> %1465, <i16 127, i16 127, i16 127, i16 127, i16 127, i16 127, i16 127, i16 127>
  %1467 = ashr <8 x i16> %1463, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %1468 = icmp ugt <8 x i16> %1464, %1466
  %1469 = zext <8 x i1> %1468 to <8 x i16>
  %1470 = add nsw <8 x i16> %1467, %1469
  %1471 = icmp slt <8 x i16> %1470, %1439
  %1472 = select <8 x i1> %1471, <8 x i16> %1470, <8 x i16> %1439
  %1473 = icmp sgt <8 x i16> %1472, %1441
  %1474 = select <8 x i1> %1473, <8 x i16> %1472, <8 x i16> %1441
  %1475 = zext <8 x i16> %1474 to <8 x i32>
  %1476 = add <8 x i32> %1443, %1475
  %1477 = trunc <8 x i32> %1476 to <8 x i8>
  %1478 = getelementptr inbounds i8, i8* %1077, i64 %1445
  %1479 = bitcast i8* %1478 to <8 x i8>*
  store <8 x i8> %1477, <8 x i8>* %1479, align 1, !alias.scope !658, !noalias !660
  %1480 = add i64 %1445, 8
  %1481 = icmp eq i64 %1480, %1437
  br i1 %1481, label %1482, label %1444, !llvm.loop !661

1482:                                             ; preds = %1444
  %1483 = icmp eq i64 %1437, %1419
  br i1 %1483, label %1522, label %1421

1484:                                             ; preds = %1410
  tail call void @abort() #12
  unreachable

1485:                                             ; preds = %1421, %1503
  %1486 = phi i64 [ %1520, %1503 ], [ %1422, %1421 ]
  %1487 = getelementptr inbounds i16, i16* %1005, i64 %1486
  %1488 = load i16, i16* %1487, align 2
  %1489 = getelementptr inbounds i16, i16* %1042, i64 %1486
  %1490 = load i16, i16* %1489, align 2
  %1491 = icmp eq i16 %1488, %1490
  %1492 = icmp eq i16 %1488, -32768
  %1493 = and i1 %1492, %1491
  br i1 %1493, label %1503, label %1494

1494:                                             ; preds = %1485
  %1495 = sext i16 %1490 to i32
  %1496 = sext i16 %1488 to i32
  %1497 = mul nsw i32 %1495, %1496
  %1498 = icmp sgt i32 %1497, -1
  %1499 = select i1 %1498, i32 16384, i32 -16383
  %1500 = add nsw i32 %1499, %1497
  %1501 = sdiv i32 %1500, 32768
  %1502 = trunc i32 %1501 to i16
  br label %1503

1503:                                             ; preds = %1494, %1485
  %1504 = phi i16 [ %1502, %1494 ], [ 32767, %1485 ]
  %1505 = and i16 %1504, 255
  %1506 = lshr i16 %1504, 15
  %1507 = add nuw nsw i16 %1506, 127
  %1508 = ashr i16 %1504, 8
  %1509 = icmp ugt i16 %1505, %1507
  %1510 = zext i1 %1509 to i16
  %1511 = add nsw i16 %1508, %1510
  %1512 = icmp slt i16 %1511, %1416
  %1513 = select i1 %1512, i16 %1511, i16 %1416
  %1514 = icmp sgt i16 %1513, %1418
  %1515 = select i1 %1514, i16 %1513, i16 %1418
  %1516 = zext i16 %1515 to i32
  %1517 = add i32 %968, %1516
  %1518 = trunc i32 %1517 to i8
  %1519 = getelementptr inbounds i8, i8* %1077, i64 %1486
  store i8 %1518, i8* %1519, align 1
  %1520 = add nuw nsw i64 %1486, 1
  %1521 = icmp eq i64 %1520, %1419
  br i1 %1521, label %1522, label %1485, !llvm.loop !662

1522:                                             ; preds = %1503, %1482, %1412
  br i1 %1298, label %1523, label %1529

1523:                                             ; preds = %1522
  %1524 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %1525 = load i32*, i32** %1524, align 8
  %1526 = icmp eq i32* %1525, null
  br i1 %1526, label %1529, label %1527

1527:                                             ; preds = %1523
  %1528 = bitcast i32* %1525 to i8*
  tail call void @_ZdaPv(i8* %1528) #10
  br label %1529

1529:                                             ; preds = %1522, %1523, %1527
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1043) #11
  br i1 %1188, label %1530, label %1536

1530:                                             ; preds = %1529
  %1531 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1, i32 0
  %1532 = load i32*, i32** %1531, align 8
  %1533 = icmp eq i32* %1532, null
  br i1 %1533, label %1536, label %1534

1534:                                             ; preds = %1530
  %1535 = bitcast i32* %1532 to i8*
  tail call void @_ZdaPv(i8* %1535) #10
  br label %1536

1536:                                             ; preds = %1529, %1530, %1534
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1006) #11
  br i1 %1078, label %1537, label %1543

1537:                                             ; preds = %1536
  %1538 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1539 = load i32*, i32** %1538, align 8
  %1540 = icmp eq i32* %1539, null
  br i1 %1540, label %1543, label %1541

1541:                                             ; preds = %1537
  %1542 = bitcast i32* %1539 to i8*
  tail call void @_ZdaPv(i8* %1542) #10
  br label %1543

1543:                                             ; preds = %1536, %1537, %1541
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %969) #11
  br label %2129

1544:                                             ; preds = %959
  %1545 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 0
  %1546 = load i32, i32* %1545, align 4
  %1547 = getelementptr inbounds %"struct.tflite::ops::builtin::mul::OpData", %"struct.tflite::ops::builtin::mul::OpData"* %3, i64 0, i32 1
  %1548 = load i32, i32* %1547, align 4
  %1549 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 3, i32 1
  %1550 = load i32, i32* %1549, align 4
  %1551 = bitcast %"class.tflite::RuntimeShape"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1551) #11
  %1552 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %1552, label %1553, label %1555

1553:                                             ; preds = %1544
  %1554 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 0, i32* %1554, align 8, !alias.scope !663
  br label %1584

1555:                                             ; preds = %1544
  %1556 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %1557 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1556, align 8, !noalias !663
  %1558 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1557, i64 0, i32 0
  %1559 = load i32, i32* %1558, align 4, !noalias !663
  %1560 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1557, i64 0, i32 1, i64 0
  %1561 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 %1559, i32* %1561, align 8, !alias.scope !663
  %1562 = icmp sgt i32 %1559, 5
  br i1 %1562, label %1563, label %1570

1563:                                             ; preds = %1555
  %1564 = sext i32 %1559 to i64
  %1565 = shl nsw i64 %1564, 2
  %1566 = tail call i8* @_Znam(i64 %1565) #10, !noalias !663
  %1567 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %1568 = bitcast i32** %1567 to i8**
  store i8* %1566, i8** %1568, align 8, !alias.scope !663
  %1569 = bitcast i8* %1566 to i32*
  br label %1575

1570:                                             ; preds = %1555
  %1571 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  %1572 = bitcast %union.anon* %1571 to i32*
  %1573 = sext i32 %1559 to i64
  %1574 = shl nsw i64 %1573, 2
  br label %1575

1575:                                             ; preds = %1570, %1563
  %1576 = phi i64 [ %1565, %1563 ], [ %1574, %1570 ]
  %1577 = phi i32* [ %1569, %1563 ], [ %1572, %1570 ]
  %1578 = bitcast i32* %1577 to i8*
  %1579 = bitcast i32* %1560 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1578, i8* align 4 %1579, i64 %1576, i1 false) #11
  %1580 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %1581 = bitcast %union.TfLitePtrUnion* %1580 to i16**
  %1582 = load i16*, i16** %1581, align 8
  %1583 = bitcast i16* %1582 to i8*
  br label %1584

1584:                                             ; preds = %1553, %1575
  %1585 = phi i32 [ %1559, %1575 ], [ 0, %1553 ]
  %1586 = phi i8* [ %1583, %1575 ], [ null, %1553 ]
  %1587 = phi i16* [ %1582, %1575 ], [ null, %1553 ]
  %1588 = bitcast %"class.tflite::RuntimeShape"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1588) #11
  %1589 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %1589, label %1590, label %1592

1590:                                             ; preds = %1584
  %1591 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  store i32 0, i32* %1591, align 8, !alias.scope !666
  br label %1621

1592:                                             ; preds = %1584
  %1593 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %1594 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1593, align 8, !noalias !666
  %1595 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1594, i64 0, i32 0
  %1596 = load i32, i32* %1595, align 4, !noalias !666
  %1597 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1594, i64 0, i32 1, i64 0
  %1598 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  store i32 %1596, i32* %1598, align 8, !alias.scope !666
  %1599 = icmp sgt i32 %1596, 5
  br i1 %1599, label %1600, label %1607

1600:                                             ; preds = %1592
  %1601 = sext i32 %1596 to i64
  %1602 = shl nsw i64 %1601, 2
  %1603 = tail call i8* @_Znam(i64 %1602) #10, !noalias !666
  %1604 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1, i32 0
  %1605 = bitcast i32** %1604 to i8**
  store i8* %1603, i8** %1605, align 8, !alias.scope !666
  %1606 = bitcast i8* %1603 to i32*
  br label %1612

1607:                                             ; preds = %1592
  %1608 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1
  %1609 = bitcast %union.anon* %1608 to i32*
  %1610 = sext i32 %1596 to i64
  %1611 = shl nsw i64 %1610, 2
  br label %1612

1612:                                             ; preds = %1607, %1600
  %1613 = phi i64 [ %1602, %1600 ], [ %1611, %1607 ]
  %1614 = phi i32* [ %1606, %1600 ], [ %1609, %1607 ]
  %1615 = bitcast i32* %1614 to i8*
  %1616 = bitcast i32* %1597 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1615, i8* align 4 %1616, i64 %1613, i1 false) #11
  %1617 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %1618 = bitcast %union.TfLitePtrUnion* %1617 to i16**
  %1619 = load i16*, i16** %1618, align 8
  %1620 = bitcast i16* %1619 to i8*
  br label %1621

1621:                                             ; preds = %1590, %1612
  %1622 = phi i32 [ %1596, %1612 ], [ 0, %1590 ]
  %1623 = phi i8* [ %1620, %1612 ], [ null, %1590 ]
  %1624 = phi i16* [ %1619, %1612 ], [ null, %1590 ]
  %1625 = bitcast %"class.tflite::RuntimeShape"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1625) #11
  %1626 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %1626, label %1627, label %1629

1627:                                             ; preds = %1621
  %1628 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 0, i32* %1628, align 8, !alias.scope !669
  br label %1657

1629:                                             ; preds = %1621
  %1630 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %1631 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1630, align 8, !noalias !669
  %1632 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1631, i64 0, i32 0
  %1633 = load i32, i32* %1632, align 4, !noalias !669
  %1634 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1631, i64 0, i32 1, i64 0
  %1635 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 %1633, i32* %1635, align 8, !alias.scope !669
  %1636 = icmp sgt i32 %1633, 5
  br i1 %1636, label %1637, label %1644

1637:                                             ; preds = %1629
  %1638 = sext i32 %1633 to i64
  %1639 = shl nsw i64 %1638, 2
  %1640 = tail call i8* @_Znam(i64 %1639) #10, !noalias !669
  %1641 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %1642 = bitcast i32** %1641 to i8**
  store i8* %1640, i8** %1642, align 8, !alias.scope !669
  %1643 = bitcast i8* %1640 to i32*
  br label %1649

1644:                                             ; preds = %1629
  %1645 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1
  %1646 = bitcast %union.anon* %1645 to i32*
  %1647 = sext i32 %1633 to i64
  %1648 = shl nsw i64 %1647, 2
  br label %1649

1649:                                             ; preds = %1644, %1637
  %1650 = phi i64 [ %1639, %1637 ], [ %1648, %1644 ]
  %1651 = phi i32* [ %1643, %1637 ], [ %1646, %1644 ]
  %1652 = bitcast i32* %1651 to i8*
  %1653 = bitcast i32* %1634 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1652, i8* align 4 %1653, i64 %1650, i1 false) #11
  %1654 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %1655 = bitcast %union.TfLitePtrUnion* %1654 to i8**
  %1656 = load i8*, i8** %1655, align 8
  br label %1657

1657:                                             ; preds = %1627, %1649
  %1658 = phi i32 [ %1633, %1649 ], [ 0, %1627 ]
  %1659 = phi i8* [ %1656, %1649 ], [ null, %1627 ]
  %1660 = icmp sgt i32 %1585, 5
  %1661 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  br i1 %1660, label %1662, label %1665

1662:                                             ; preds = %1657
  %1663 = getelementptr inbounds %union.anon, %union.anon* %1661, i64 0, i32 0
  %1664 = load i32*, i32** %1663, align 8
  br label %1668

1665:                                             ; preds = %1657
  %1666 = bitcast %union.anon* %1661 to i32*
  %1667 = icmp sgt i32 %1585, 0
  br i1 %1667, label %1668, label %1768

1668:                                             ; preds = %1665, %1662
  %1669 = phi i32* [ %1664, %1662 ], [ %1666, %1665 ]
  %1670 = zext i32 %1585 to i64
  %1671 = icmp ult i32 %1585, 8
  br i1 %1671, label %1757, label %1672

1672:                                             ; preds = %1668
  %1673 = and i64 %1670, 4294967288
  %1674 = add nsw i64 %1673, -8
  %1675 = lshr exact i64 %1674, 3
  %1676 = add nuw nsw i64 %1675, 1
  %1677 = and i64 %1676, 3
  %1678 = icmp ult i64 %1674, 24
  br i1 %1678, label %1724, label %1679

1679:                                             ; preds = %1672
  %1680 = sub nsw i64 %1676, %1677
  br label %1681

1681:                                             ; preds = %1681, %1679
  %1682 = phi i64 [ 0, %1679 ], [ %1721, %1681 ]
  %1683 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1679 ], [ %1719, %1681 ]
  %1684 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1679 ], [ %1720, %1681 ]
  %1685 = phi i64 [ %1680, %1679 ], [ %1722, %1681 ]
  %1686 = getelementptr inbounds i32, i32* %1669, i64 %1682
  %1687 = bitcast i32* %1686 to <4 x i32>*
  %1688 = load <4 x i32>, <4 x i32>* %1687, align 4
  %1689 = getelementptr inbounds i32, i32* %1686, i64 4
  %1690 = bitcast i32* %1689 to <4 x i32>*
  %1691 = load <4 x i32>, <4 x i32>* %1690, align 4
  %1692 = mul nsw <4 x i32> %1688, %1683
  %1693 = mul nsw <4 x i32> %1691, %1684
  %1694 = or i64 %1682, 8
  %1695 = getelementptr inbounds i32, i32* %1669, i64 %1694
  %1696 = bitcast i32* %1695 to <4 x i32>*
  %1697 = load <4 x i32>, <4 x i32>* %1696, align 4
  %1698 = getelementptr inbounds i32, i32* %1695, i64 4
  %1699 = bitcast i32* %1698 to <4 x i32>*
  %1700 = load <4 x i32>, <4 x i32>* %1699, align 4
  %1701 = mul nsw <4 x i32> %1697, %1692
  %1702 = mul nsw <4 x i32> %1700, %1693
  %1703 = or i64 %1682, 16
  %1704 = getelementptr inbounds i32, i32* %1669, i64 %1703
  %1705 = bitcast i32* %1704 to <4 x i32>*
  %1706 = load <4 x i32>, <4 x i32>* %1705, align 4
  %1707 = getelementptr inbounds i32, i32* %1704, i64 4
  %1708 = bitcast i32* %1707 to <4 x i32>*
  %1709 = load <4 x i32>, <4 x i32>* %1708, align 4
  %1710 = mul nsw <4 x i32> %1706, %1701
  %1711 = mul nsw <4 x i32> %1709, %1702
  %1712 = or i64 %1682, 24
  %1713 = getelementptr inbounds i32, i32* %1669, i64 %1712
  %1714 = bitcast i32* %1713 to <4 x i32>*
  %1715 = load <4 x i32>, <4 x i32>* %1714, align 4
  %1716 = getelementptr inbounds i32, i32* %1713, i64 4
  %1717 = bitcast i32* %1716 to <4 x i32>*
  %1718 = load <4 x i32>, <4 x i32>* %1717, align 4
  %1719 = mul nsw <4 x i32> %1715, %1710
  %1720 = mul nsw <4 x i32> %1718, %1711
  %1721 = add i64 %1682, 32
  %1722 = add i64 %1685, -4
  %1723 = icmp eq i64 %1722, 0
  br i1 %1723, label %1724, label %1681, !llvm.loop !672

1724:                                             ; preds = %1681, %1672
  %1725 = phi <4 x i32> [ undef, %1672 ], [ %1719, %1681 ]
  %1726 = phi <4 x i32> [ undef, %1672 ], [ %1720, %1681 ]
  %1727 = phi i64 [ 0, %1672 ], [ %1721, %1681 ]
  %1728 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1672 ], [ %1719, %1681 ]
  %1729 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1672 ], [ %1720, %1681 ]
  %1730 = icmp eq i64 %1677, 0
  br i1 %1730, label %1747, label %1731

1731:                                             ; preds = %1724, %1731
  %1732 = phi i64 [ %1744, %1731 ], [ %1727, %1724 ]
  %1733 = phi <4 x i32> [ %1742, %1731 ], [ %1728, %1724 ]
  %1734 = phi <4 x i32> [ %1743, %1731 ], [ %1729, %1724 ]
  %1735 = phi i64 [ %1745, %1731 ], [ %1677, %1724 ]
  %1736 = getelementptr inbounds i32, i32* %1669, i64 %1732
  %1737 = bitcast i32* %1736 to <4 x i32>*
  %1738 = load <4 x i32>, <4 x i32>* %1737, align 4
  %1739 = getelementptr inbounds i32, i32* %1736, i64 4
  %1740 = bitcast i32* %1739 to <4 x i32>*
  %1741 = load <4 x i32>, <4 x i32>* %1740, align 4
  %1742 = mul nsw <4 x i32> %1738, %1733
  %1743 = mul nsw <4 x i32> %1741, %1734
  %1744 = add i64 %1732, 8
  %1745 = add i64 %1735, -1
  %1746 = icmp eq i64 %1745, 0
  br i1 %1746, label %1747, label %1731, !llvm.loop !673

1747:                                             ; preds = %1731, %1724
  %1748 = phi <4 x i32> [ %1725, %1724 ], [ %1742, %1731 ]
  %1749 = phi <4 x i32> [ %1726, %1724 ], [ %1743, %1731 ]
  %1750 = mul <4 x i32> %1749, %1748
  %1751 = shufflevector <4 x i32> %1750, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1752 = mul <4 x i32> %1750, %1751
  %1753 = shufflevector <4 x i32> %1752, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1754 = mul <4 x i32> %1752, %1753
  %1755 = extractelement <4 x i32> %1754, i32 0
  %1756 = icmp eq i64 %1673, %1670
  br i1 %1756, label %1768, label %1757

1757:                                             ; preds = %1747, %1668
  %1758 = phi i64 [ 0, %1668 ], [ %1673, %1747 ]
  %1759 = phi i32 [ 1, %1668 ], [ %1755, %1747 ]
  br label %1760

1760:                                             ; preds = %1757, %1760
  %1761 = phi i64 [ %1766, %1760 ], [ %1758, %1757 ]
  %1762 = phi i32 [ %1765, %1760 ], [ %1759, %1757 ]
  %1763 = getelementptr inbounds i32, i32* %1669, i64 %1761
  %1764 = load i32, i32* %1763, align 4
  %1765 = mul nsw i32 %1764, %1762
  %1766 = add nuw nsw i64 %1761, 1
  %1767 = icmp eq i64 %1766, %1670
  br i1 %1767, label %1768, label %1760, !llvm.loop !674

1768:                                             ; preds = %1760, %1747, %1665
  %1769 = phi i32 [ 1, %1665 ], [ %1755, %1747 ], [ %1765, %1760 ]
  %1770 = icmp sgt i32 %1622, 5
  %1771 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1
  br i1 %1770, label %1772, label %1775

1772:                                             ; preds = %1768
  %1773 = getelementptr inbounds %union.anon, %union.anon* %1771, i64 0, i32 0
  %1774 = load i32*, i32** %1773, align 8
  br label %1778

1775:                                             ; preds = %1768
  %1776 = bitcast %union.anon* %1771 to i32*
  %1777 = icmp sgt i32 %1622, 0
  br i1 %1777, label %1778, label %1878

1778:                                             ; preds = %1775, %1772
  %1779 = phi i32* [ %1774, %1772 ], [ %1776, %1775 ]
  %1780 = zext i32 %1622 to i64
  %1781 = icmp ult i32 %1622, 8
  br i1 %1781, label %1867, label %1782

1782:                                             ; preds = %1778
  %1783 = and i64 %1780, 4294967288
  %1784 = add nsw i64 %1783, -8
  %1785 = lshr exact i64 %1784, 3
  %1786 = add nuw nsw i64 %1785, 1
  %1787 = and i64 %1786, 3
  %1788 = icmp ult i64 %1784, 24
  br i1 %1788, label %1834, label %1789

1789:                                             ; preds = %1782
  %1790 = sub nsw i64 %1786, %1787
  br label %1791

1791:                                             ; preds = %1791, %1789
  %1792 = phi i64 [ 0, %1789 ], [ %1831, %1791 ]
  %1793 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1789 ], [ %1829, %1791 ]
  %1794 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1789 ], [ %1830, %1791 ]
  %1795 = phi i64 [ %1790, %1789 ], [ %1832, %1791 ]
  %1796 = getelementptr inbounds i32, i32* %1779, i64 %1792
  %1797 = bitcast i32* %1796 to <4 x i32>*
  %1798 = load <4 x i32>, <4 x i32>* %1797, align 4
  %1799 = getelementptr inbounds i32, i32* %1796, i64 4
  %1800 = bitcast i32* %1799 to <4 x i32>*
  %1801 = load <4 x i32>, <4 x i32>* %1800, align 4
  %1802 = mul nsw <4 x i32> %1798, %1793
  %1803 = mul nsw <4 x i32> %1801, %1794
  %1804 = or i64 %1792, 8
  %1805 = getelementptr inbounds i32, i32* %1779, i64 %1804
  %1806 = bitcast i32* %1805 to <4 x i32>*
  %1807 = load <4 x i32>, <4 x i32>* %1806, align 4
  %1808 = getelementptr inbounds i32, i32* %1805, i64 4
  %1809 = bitcast i32* %1808 to <4 x i32>*
  %1810 = load <4 x i32>, <4 x i32>* %1809, align 4
  %1811 = mul nsw <4 x i32> %1807, %1802
  %1812 = mul nsw <4 x i32> %1810, %1803
  %1813 = or i64 %1792, 16
  %1814 = getelementptr inbounds i32, i32* %1779, i64 %1813
  %1815 = bitcast i32* %1814 to <4 x i32>*
  %1816 = load <4 x i32>, <4 x i32>* %1815, align 4
  %1817 = getelementptr inbounds i32, i32* %1814, i64 4
  %1818 = bitcast i32* %1817 to <4 x i32>*
  %1819 = load <4 x i32>, <4 x i32>* %1818, align 4
  %1820 = mul nsw <4 x i32> %1816, %1811
  %1821 = mul nsw <4 x i32> %1819, %1812
  %1822 = or i64 %1792, 24
  %1823 = getelementptr inbounds i32, i32* %1779, i64 %1822
  %1824 = bitcast i32* %1823 to <4 x i32>*
  %1825 = load <4 x i32>, <4 x i32>* %1824, align 4
  %1826 = getelementptr inbounds i32, i32* %1823, i64 4
  %1827 = bitcast i32* %1826 to <4 x i32>*
  %1828 = load <4 x i32>, <4 x i32>* %1827, align 4
  %1829 = mul nsw <4 x i32> %1825, %1820
  %1830 = mul nsw <4 x i32> %1828, %1821
  %1831 = add i64 %1792, 32
  %1832 = add i64 %1795, -4
  %1833 = icmp eq i64 %1832, 0
  br i1 %1833, label %1834, label %1791, !llvm.loop !675

1834:                                             ; preds = %1791, %1782
  %1835 = phi <4 x i32> [ undef, %1782 ], [ %1829, %1791 ]
  %1836 = phi <4 x i32> [ undef, %1782 ], [ %1830, %1791 ]
  %1837 = phi i64 [ 0, %1782 ], [ %1831, %1791 ]
  %1838 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1782 ], [ %1829, %1791 ]
  %1839 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1782 ], [ %1830, %1791 ]
  %1840 = icmp eq i64 %1787, 0
  br i1 %1840, label %1857, label %1841

1841:                                             ; preds = %1834, %1841
  %1842 = phi i64 [ %1854, %1841 ], [ %1837, %1834 ]
  %1843 = phi <4 x i32> [ %1852, %1841 ], [ %1838, %1834 ]
  %1844 = phi <4 x i32> [ %1853, %1841 ], [ %1839, %1834 ]
  %1845 = phi i64 [ %1855, %1841 ], [ %1787, %1834 ]
  %1846 = getelementptr inbounds i32, i32* %1779, i64 %1842
  %1847 = bitcast i32* %1846 to <4 x i32>*
  %1848 = load <4 x i32>, <4 x i32>* %1847, align 4
  %1849 = getelementptr inbounds i32, i32* %1846, i64 4
  %1850 = bitcast i32* %1849 to <4 x i32>*
  %1851 = load <4 x i32>, <4 x i32>* %1850, align 4
  %1852 = mul nsw <4 x i32> %1848, %1843
  %1853 = mul nsw <4 x i32> %1851, %1844
  %1854 = add i64 %1842, 8
  %1855 = add i64 %1845, -1
  %1856 = icmp eq i64 %1855, 0
  br i1 %1856, label %1857, label %1841, !llvm.loop !676

1857:                                             ; preds = %1841, %1834
  %1858 = phi <4 x i32> [ %1835, %1834 ], [ %1852, %1841 ]
  %1859 = phi <4 x i32> [ %1836, %1834 ], [ %1853, %1841 ]
  %1860 = mul <4 x i32> %1859, %1858
  %1861 = shufflevector <4 x i32> %1860, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1862 = mul <4 x i32> %1860, %1861
  %1863 = shufflevector <4 x i32> %1862, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1864 = mul <4 x i32> %1862, %1863
  %1865 = extractelement <4 x i32> %1864, i32 0
  %1866 = icmp eq i64 %1783, %1780
  br i1 %1866, label %1878, label %1867

1867:                                             ; preds = %1857, %1778
  %1868 = phi i64 [ 0, %1778 ], [ %1783, %1857 ]
  %1869 = phi i32 [ 1, %1778 ], [ %1865, %1857 ]
  br label %1870

1870:                                             ; preds = %1867, %1870
  %1871 = phi i64 [ %1876, %1870 ], [ %1868, %1867 ]
  %1872 = phi i32 [ %1875, %1870 ], [ %1869, %1867 ]
  %1873 = getelementptr inbounds i32, i32* %1779, i64 %1871
  %1874 = load i32, i32* %1873, align 4
  %1875 = mul nsw i32 %1874, %1872
  %1876 = add nuw nsw i64 %1871, 1
  %1877 = icmp eq i64 %1876, %1780
  br i1 %1877, label %1878, label %1870, !llvm.loop !677

1878:                                             ; preds = %1870, %1857, %1775
  %1879 = phi i32 [ 1, %1775 ], [ %1865, %1857 ], [ %1875, %1870 ]
  %1880 = icmp sgt i32 %1658, 5
  %1881 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1
  br i1 %1880, label %1882, label %1885

1882:                                             ; preds = %1878
  %1883 = getelementptr inbounds %union.anon, %union.anon* %1881, i64 0, i32 0
  %1884 = load i32*, i32** %1883, align 8
  br label %1888

1885:                                             ; preds = %1878
  %1886 = bitcast %union.anon* %1881 to i32*
  %1887 = icmp sgt i32 %1658, 0
  br i1 %1887, label %1888, label %1988

1888:                                             ; preds = %1885, %1882
  %1889 = phi i32* [ %1884, %1882 ], [ %1886, %1885 ]
  %1890 = zext i32 %1658 to i64
  %1891 = icmp ult i32 %1658, 8
  br i1 %1891, label %1977, label %1892

1892:                                             ; preds = %1888
  %1893 = and i64 %1890, 4294967288
  %1894 = add nsw i64 %1893, -8
  %1895 = lshr exact i64 %1894, 3
  %1896 = add nuw nsw i64 %1895, 1
  %1897 = and i64 %1896, 3
  %1898 = icmp ult i64 %1894, 24
  br i1 %1898, label %1944, label %1899

1899:                                             ; preds = %1892
  %1900 = sub nsw i64 %1896, %1897
  br label %1901

1901:                                             ; preds = %1901, %1899
  %1902 = phi i64 [ 0, %1899 ], [ %1941, %1901 ]
  %1903 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1899 ], [ %1939, %1901 ]
  %1904 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1899 ], [ %1940, %1901 ]
  %1905 = phi i64 [ %1900, %1899 ], [ %1942, %1901 ]
  %1906 = getelementptr inbounds i32, i32* %1889, i64 %1902
  %1907 = bitcast i32* %1906 to <4 x i32>*
  %1908 = load <4 x i32>, <4 x i32>* %1907, align 4
  %1909 = getelementptr inbounds i32, i32* %1906, i64 4
  %1910 = bitcast i32* %1909 to <4 x i32>*
  %1911 = load <4 x i32>, <4 x i32>* %1910, align 4
  %1912 = mul nsw <4 x i32> %1908, %1903
  %1913 = mul nsw <4 x i32> %1911, %1904
  %1914 = or i64 %1902, 8
  %1915 = getelementptr inbounds i32, i32* %1889, i64 %1914
  %1916 = bitcast i32* %1915 to <4 x i32>*
  %1917 = load <4 x i32>, <4 x i32>* %1916, align 4
  %1918 = getelementptr inbounds i32, i32* %1915, i64 4
  %1919 = bitcast i32* %1918 to <4 x i32>*
  %1920 = load <4 x i32>, <4 x i32>* %1919, align 4
  %1921 = mul nsw <4 x i32> %1917, %1912
  %1922 = mul nsw <4 x i32> %1920, %1913
  %1923 = or i64 %1902, 16
  %1924 = getelementptr inbounds i32, i32* %1889, i64 %1923
  %1925 = bitcast i32* %1924 to <4 x i32>*
  %1926 = load <4 x i32>, <4 x i32>* %1925, align 4
  %1927 = getelementptr inbounds i32, i32* %1924, i64 4
  %1928 = bitcast i32* %1927 to <4 x i32>*
  %1929 = load <4 x i32>, <4 x i32>* %1928, align 4
  %1930 = mul nsw <4 x i32> %1926, %1921
  %1931 = mul nsw <4 x i32> %1929, %1922
  %1932 = or i64 %1902, 24
  %1933 = getelementptr inbounds i32, i32* %1889, i64 %1932
  %1934 = bitcast i32* %1933 to <4 x i32>*
  %1935 = load <4 x i32>, <4 x i32>* %1934, align 4
  %1936 = getelementptr inbounds i32, i32* %1933, i64 4
  %1937 = bitcast i32* %1936 to <4 x i32>*
  %1938 = load <4 x i32>, <4 x i32>* %1937, align 4
  %1939 = mul nsw <4 x i32> %1935, %1930
  %1940 = mul nsw <4 x i32> %1938, %1931
  %1941 = add i64 %1902, 32
  %1942 = add i64 %1905, -4
  %1943 = icmp eq i64 %1942, 0
  br i1 %1943, label %1944, label %1901, !llvm.loop !678

1944:                                             ; preds = %1901, %1892
  %1945 = phi <4 x i32> [ undef, %1892 ], [ %1939, %1901 ]
  %1946 = phi <4 x i32> [ undef, %1892 ], [ %1940, %1901 ]
  %1947 = phi i64 [ 0, %1892 ], [ %1941, %1901 ]
  %1948 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1892 ], [ %1939, %1901 ]
  %1949 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1892 ], [ %1940, %1901 ]
  %1950 = icmp eq i64 %1897, 0
  br i1 %1950, label %1967, label %1951

1951:                                             ; preds = %1944, %1951
  %1952 = phi i64 [ %1964, %1951 ], [ %1947, %1944 ]
  %1953 = phi <4 x i32> [ %1962, %1951 ], [ %1948, %1944 ]
  %1954 = phi <4 x i32> [ %1963, %1951 ], [ %1949, %1944 ]
  %1955 = phi i64 [ %1965, %1951 ], [ %1897, %1944 ]
  %1956 = getelementptr inbounds i32, i32* %1889, i64 %1952
  %1957 = bitcast i32* %1956 to <4 x i32>*
  %1958 = load <4 x i32>, <4 x i32>* %1957, align 4
  %1959 = getelementptr inbounds i32, i32* %1956, i64 4
  %1960 = bitcast i32* %1959 to <4 x i32>*
  %1961 = load <4 x i32>, <4 x i32>* %1960, align 4
  %1962 = mul nsw <4 x i32> %1958, %1953
  %1963 = mul nsw <4 x i32> %1961, %1954
  %1964 = add i64 %1952, 8
  %1965 = add i64 %1955, -1
  %1966 = icmp eq i64 %1965, 0
  br i1 %1966, label %1967, label %1951, !llvm.loop !679

1967:                                             ; preds = %1951, %1944
  %1968 = phi <4 x i32> [ %1945, %1944 ], [ %1962, %1951 ]
  %1969 = phi <4 x i32> [ %1946, %1944 ], [ %1963, %1951 ]
  %1970 = mul <4 x i32> %1969, %1968
  %1971 = shufflevector <4 x i32> %1970, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1972 = mul <4 x i32> %1970, %1971
  %1973 = shufflevector <4 x i32> %1972, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1974 = mul <4 x i32> %1972, %1973
  %1975 = extractelement <4 x i32> %1974, i32 0
  %1976 = icmp eq i64 %1893, %1890
  br i1 %1976, label %1988, label %1977

1977:                                             ; preds = %1967, %1888
  %1978 = phi i64 [ 0, %1888 ], [ %1893, %1967 ]
  %1979 = phi i32 [ 1, %1888 ], [ %1975, %1967 ]
  br label %1980

1980:                                             ; preds = %1977, %1980
  %1981 = phi i64 [ %1986, %1980 ], [ %1978, %1977 ]
  %1982 = phi i32 [ %1985, %1980 ], [ %1979, %1977 ]
  %1983 = getelementptr inbounds i32, i32* %1889, i64 %1981
  %1984 = load i32, i32* %1983, align 4
  %1985 = mul nsw i32 %1984, %1982
  %1986 = add nuw nsw i64 %1981, 1
  %1987 = icmp eq i64 %1986, %1890
  br i1 %1987, label %1988, label %1980, !llvm.loop !680

1988:                                             ; preds = %1980, %1967, %1885
  %1989 = phi i32 [ 1, %1885 ], [ %1975, %1967 ], [ %1985, %1980 ]
  %1990 = icmp eq i32 %1769, %1879
  br i1 %1990, label %1992, label %1991

1991:                                             ; preds = %1988
  tail call void @abort() #12
  unreachable

1992:                                             ; preds = %1988
  %1993 = icmp eq i32 %1769, %1989
  br i1 %1993, label %1994, label %2066

1994:                                             ; preds = %1992
  %1995 = icmp sgt i32 %1769, 0
  br i1 %1995, label %1996, label %2104

1996:                                             ; preds = %1994
  %1997 = sub nsw i32 %1548, %1550
  %1998 = trunc i32 %1997 to i16
  %1999 = sub nsw i32 %1546, %1550
  %2000 = trunc i32 %1999 to i16
  %2001 = zext i32 %1769 to i64
  %2002 = icmp ult i32 %1769, 8
  br i1 %2002, label %2003, label %2005

2003:                                             ; preds = %2064, %2005, %1996
  %2004 = phi i64 [ 0, %2005 ], [ 0, %1996 ], [ %2019, %2064 ]
  br label %2067

2005:                                             ; preds = %1996
  %2006 = getelementptr i8, i8* %1659, i64 %2001
  %2007 = getelementptr i16, i16* %1624, i64 %2001
  %2008 = bitcast i16* %2007 to i8*
  %2009 = getelementptr i16, i16* %1587, i64 %2001
  %2010 = bitcast i16* %2009 to i8*
  %2011 = icmp ult i8* %1659, %2008
  %2012 = icmp ult i8* %1623, %2006
  %2013 = and i1 %2011, %2012
  %2014 = icmp ult i8* %1659, %2010
  %2015 = icmp ult i8* %1586, %2006
  %2016 = and i1 %2014, %2015
  %2017 = or i1 %2013, %2016
  br i1 %2017, label %2003, label %2018

2018:                                             ; preds = %2005
  %2019 = and i64 %2001, 4294967288
  %2020 = insertelement <8 x i16> undef, i16 %1998, i32 0
  %2021 = shufflevector <8 x i16> %2020, <8 x i16> undef, <8 x i32> zeroinitializer
  %2022 = insertelement <8 x i16> undef, i16 %2000, i32 0
  %2023 = shufflevector <8 x i16> %2022, <8 x i16> undef, <8 x i32> zeroinitializer
  %2024 = insertelement <8 x i32> undef, i32 %1550, i32 0
  %2025 = shufflevector <8 x i32> %2024, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %2026

2026:                                             ; preds = %2026, %2018
  %2027 = phi i64 [ 0, %2018 ], [ %2062, %2026 ]
  %2028 = getelementptr inbounds i16, i16* %1587, i64 %2027
  %2029 = bitcast i16* %2028 to <8 x i16>*
  %2030 = load <8 x i16>, <8 x i16>* %2029, align 2, !alias.scope !681
  %2031 = getelementptr inbounds i16, i16* %1624, i64 %2027
  %2032 = bitcast i16* %2031 to <8 x i16>*
  %2033 = load <8 x i16>, <8 x i16>* %2032, align 2, !alias.scope !684
  %2034 = icmp eq <8 x i16> %2030, %2033
  %2035 = icmp eq <8 x i16> %2030, <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>
  %2036 = and <8 x i1> %2035, %2034
  %2037 = sext <8 x i16> %2033 to <8 x i32>
  %2038 = sext <8 x i16> %2030 to <8 x i32>
  %2039 = mul nsw <8 x i32> %2037, %2038
  %2040 = icmp sgt <8 x i32> %2039, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %2041 = select <8 x i1> %2040, <8 x i32> <i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384>, <8 x i32> <i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383, i32 -16383>
  %2042 = add nsw <8 x i32> %2041, %2039
  %2043 = sdiv <8 x i32> %2042, <i32 32768, i32 32768, i32 32768, i32 32768, i32 32768, i32 32768, i32 32768, i32 32768>
  %2044 = trunc <8 x i32> %2043 to <8 x i16>
  %2045 = select <8 x i1> %2036, <8 x i16> <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, <8 x i16> %2044
  %2046 = and <8 x i16> %2045, <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>
  %2047 = lshr <8 x i16> %2045, <i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15>
  %2048 = add nuw nsw <8 x i16> %2047, <i16 127, i16 127, i16 127, i16 127, i16 127, i16 127, i16 127, i16 127>
  %2049 = ashr <8 x i16> %2045, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %2050 = icmp ugt <8 x i16> %2046, %2048
  %2051 = zext <8 x i1> %2050 to <8 x i16>
  %2052 = add nsw <8 x i16> %2049, %2051
  %2053 = icmp slt <8 x i16> %2052, %2021
  %2054 = select <8 x i1> %2053, <8 x i16> %2052, <8 x i16> %2021
  %2055 = icmp sgt <8 x i16> %2054, %2023
  %2056 = select <8 x i1> %2055, <8 x i16> %2054, <8 x i16> %2023
  %2057 = zext <8 x i16> %2056 to <8 x i32>
  %2058 = add <8 x i32> %2025, %2057
  %2059 = trunc <8 x i32> %2058 to <8 x i8>
  %2060 = getelementptr inbounds i8, i8* %1659, i64 %2027
  %2061 = bitcast i8* %2060 to <8 x i8>*
  store <8 x i8> %2059, <8 x i8>* %2061, align 1, !alias.scope !686, !noalias !688
  %2062 = add i64 %2027, 8
  %2063 = icmp eq i64 %2062, %2019
  br i1 %2063, label %2064, label %2026, !llvm.loop !689

2064:                                             ; preds = %2026
  %2065 = icmp eq i64 %2019, %2001
  br i1 %2065, label %2104, label %2003

2066:                                             ; preds = %1992
  tail call void @abort() #12
  unreachable

2067:                                             ; preds = %2003, %2085
  %2068 = phi i64 [ %2102, %2085 ], [ %2004, %2003 ]
  %2069 = getelementptr inbounds i16, i16* %1587, i64 %2068
  %2070 = load i16, i16* %2069, align 2
  %2071 = getelementptr inbounds i16, i16* %1624, i64 %2068
  %2072 = load i16, i16* %2071, align 2
  %2073 = icmp eq i16 %2070, %2072
  %2074 = icmp eq i16 %2070, -32768
  %2075 = and i1 %2074, %2073
  br i1 %2075, label %2085, label %2076

2076:                                             ; preds = %2067
  %2077 = sext i16 %2072 to i32
  %2078 = sext i16 %2070 to i32
  %2079 = mul nsw i32 %2077, %2078
  %2080 = icmp sgt i32 %2079, -1
  %2081 = select i1 %2080, i32 16384, i32 -16383
  %2082 = add nsw i32 %2081, %2079
  %2083 = sdiv i32 %2082, 32768
  %2084 = trunc i32 %2083 to i16
  br label %2085

2085:                                             ; preds = %2076, %2067
  %2086 = phi i16 [ %2084, %2076 ], [ 32767, %2067 ]
  %2087 = and i16 %2086, 255
  %2088 = lshr i16 %2086, 15
  %2089 = add nuw nsw i16 %2088, 127
  %2090 = ashr i16 %2086, 8
  %2091 = icmp ugt i16 %2087, %2089
  %2092 = zext i1 %2091 to i16
  %2093 = add nsw i16 %2090, %2092
  %2094 = icmp slt i16 %2093, %1998
  %2095 = select i1 %2094, i16 %2093, i16 %1998
  %2096 = icmp sgt i16 %2095, %2000
  %2097 = select i1 %2096, i16 %2095, i16 %2000
  %2098 = zext i16 %2097 to i32
  %2099 = add i32 %1550, %2098
  %2100 = trunc i32 %2099 to i8
  %2101 = getelementptr inbounds i8, i8* %1659, i64 %2068
  store i8 %2100, i8* %2101, align 1
  %2102 = add nuw nsw i64 %2068, 1
  %2103 = icmp eq i64 %2102, %2001
  br i1 %2103, label %2104, label %2067, !llvm.loop !690

2104:                                             ; preds = %2085, %2064, %1994
  br i1 %1880, label %2105, label %2111

2105:                                             ; preds = %2104
  %2106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %2107 = load i32*, i32** %2106, align 8
  %2108 = icmp eq i32* %2107, null
  br i1 %2108, label %2111, label %2109

2109:                                             ; preds = %2105
  %2110 = bitcast i32* %2107 to i8*
  tail call void @_ZdaPv(i8* %2110) #10
  br label %2111

2111:                                             ; preds = %2104, %2105, %2109
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1625) #11
  br i1 %1770, label %2112, label %2118

2112:                                             ; preds = %2111
  %2113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1, i32 0
  %2114 = load i32*, i32** %2113, align 8
  %2115 = icmp eq i32* %2114, null
  br i1 %2115, label %2118, label %2116

2116:                                             ; preds = %2112
  %2117 = bitcast i32* %2114 to i8*
  tail call void @_ZdaPv(i8* %2117) #10
  br label %2118

2118:                                             ; preds = %2111, %2112, %2116
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1588) #11
  br i1 %1660, label %2119, label %2125

2119:                                             ; preds = %2118
  %2120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %2121 = load i32*, i32** %2120, align 8
  %2122 = icmp eq i32* %2121, null
  br i1 %2122, label %2125, label %2123

2123:                                             ; preds = %2119
  %2124 = bitcast i32* %2121 to i8*
  tail call void @_ZdaPv(i8* %2124) #10
  br label %2125

2125:                                             ; preds = %2118, %2119, %2123
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1551) #11
  br label %2129

2126:                                             ; preds = %959, %44, %955
  %2127 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %2128 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %2127, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %2128(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.19, i64 0, i64 0)) #11
  br label %2129

2129:                                             ; preds = %1543, %2125, %953, %428, %422, %416, %2126
  %2130 = phi i32 [ 1, %2126 ], [ 1, %416 ], [ 1, %422 ], [ 1, %428 ], [ 0, %953 ], [ 0, %2125 ], [ 0, %1543 ]
  ret i32 %2130
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!4 = distinct !{!4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!7 = distinct !{!7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!10 = distinct !{!10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!13 = distinct !{!13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!16 = distinct !{!16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!19 = distinct !{!19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!22 = distinct !{!22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!25 = distinct !{!25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.isvectorized", i32 1}
!28 = distinct !{!28, !29}
!29 = !{!"llvm.loop.unroll.disable"}
!30 = distinct !{!30, !31, !27}
!31 = !{!"llvm.loop.unroll.runtime.disable"}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = !{!38}
!38 = distinct !{!38, !34}
!39 = !{!33, !36}
!40 = distinct !{!40, !27}
!41 = distinct !{!41, !27}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!44 = distinct !{!44, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!47 = distinct !{!47, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!50 = distinct !{!50, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!53 = distinct !{!53, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!56 = distinct !{!56, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!59 = distinct !{!59, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!60 = distinct !{!60, !27}
!61 = distinct !{!61, !29}
!62 = distinct !{!62, !31, !27}
!63 = !{!64}
!64 = distinct !{!64, !65}
!65 = distinct !{!65, !"LVerDomain"}
!66 = !{!67}
!67 = distinct !{!67, !65}
!68 = !{!69}
!69 = distinct !{!69, !65}
!70 = !{!64, !67}
!71 = distinct !{!71, !27}
!72 = distinct !{!72, !27}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!75 = distinct !{!75, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!78 = distinct !{!78, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!79 = !{!80}
!80 = distinct !{!80, !81, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!81 = distinct !{!81, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!82 = !{!83}
!83 = distinct !{!83, !84, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!84 = distinct !{!84, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!85 = !{!86}
!86 = distinct !{!86, !87, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!87 = distinct !{!87, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!88 = !{!89}
!89 = distinct !{!89, !90, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!90 = distinct !{!90, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!93 = distinct !{!93, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!94 = !{!95}
!95 = distinct !{!95, !96, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!96 = distinct !{!96, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!99 = distinct !{!99, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!100 = !{!101}
!101 = distinct !{!101, !102, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!102 = distinct !{!102, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!105 = distinct !{!105, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!106 = !{!107}
!107 = distinct !{!107, !108, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!108 = distinct !{!108, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!109 = !{!110}
!110 = distinct !{!110, !111, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!111 = distinct !{!111, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!112 = !{!113}
!113 = distinct !{!113, !114, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!114 = distinct !{!114, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!115 = !{!116}
!116 = distinct !{!116, !117, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!117 = distinct !{!117, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!118 = !{!119}
!119 = distinct !{!119, !120, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!120 = distinct !{!120, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!121 = !{!122}
!122 = distinct !{!122, !123, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!123 = distinct !{!123, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!124 = !{!125}
!125 = distinct !{!125, !126, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!126 = distinct !{!126, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!127 = !{!128}
!128 = distinct !{!128, !129, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!129 = distinct !{!129, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!130 = !{!131}
!131 = distinct !{!131, !132, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!132 = distinct !{!132, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!133 = distinct !{!133, !27}
!134 = distinct !{!134, !29}
!135 = distinct !{!135, !31, !27}
!136 = !{!137}
!137 = distinct !{!137, !138, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!138 = distinct !{!138, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!139 = !{!140}
!140 = distinct !{!140, !141, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!141 = distinct !{!141, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!142 = !{!143}
!143 = distinct !{!143, !144, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!144 = distinct !{!144, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!145 = distinct !{!145, !27}
!146 = distinct !{!146, !29}
!147 = distinct !{!147, !31, !27}
!148 = distinct !{!148, !27}
!149 = distinct !{!149, !29}
!150 = distinct !{!150, !31, !27}
!151 = distinct !{!151, !27}
!152 = distinct !{!152, !29}
!153 = distinct !{!153, !31, !27}
!154 = !{!155}
!155 = distinct !{!155, !156}
!156 = distinct !{!156, !"LVerDomain"}
!157 = !{!158}
!158 = distinct !{!158, !156}
!159 = !{!160}
!160 = distinct !{!160, !156}
!161 = !{!158, !155}
!162 = distinct !{!162, !27}
!163 = distinct !{!163, !27}
!164 = !{!165}
!165 = distinct !{!165, !166, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!166 = distinct !{!166, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!167 = !{!168}
!168 = distinct !{!168, !169, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!169 = distinct !{!169, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!170 = !{!171}
!171 = distinct !{!171, !172, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!172 = distinct !{!172, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!173 = distinct !{!173, !27}
!174 = distinct !{!174, !29}
!175 = distinct !{!175, !31, !27}
!176 = distinct !{!176, !27}
!177 = distinct !{!177, !29}
!178 = distinct !{!178, !31, !27}
!179 = distinct !{!179, !27}
!180 = distinct !{!180, !29}
!181 = distinct !{!181, !31, !27}
!182 = !{!183}
!183 = distinct !{!183, !184}
!184 = distinct !{!184, !"LVerDomain"}
!185 = !{!186}
!186 = distinct !{!186, !184}
!187 = !{!188}
!188 = distinct !{!188, !184}
!189 = !{!186, !183}
!190 = distinct !{!190, !27}
!191 = distinct !{!191, !27}
!192 = distinct !{!192, !29}
!193 = !{!194}
!194 = distinct !{!194, !195, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!195 = distinct !{!195, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!196 = distinct !{!196, !29}
!197 = !{!198}
!198 = distinct !{!198, !199, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!199 = distinct !{!199, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!200 = distinct !{!200, !29}
!201 = !{!202}
!202 = distinct !{!202, !203, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!203 = distinct !{!203, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!204 = distinct !{!204, !27}
!205 = distinct !{!205, !29}
!206 = distinct !{!206, !31, !27}
!207 = !{!208}
!208 = distinct !{!208, !209, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!209 = distinct !{!209, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!210 = distinct !{!210, !27}
!211 = distinct !{!211, !29}
!212 = distinct !{!212, !31, !27}
!213 = !{!214}
!214 = distinct !{!214, !215, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!215 = distinct !{!215, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!216 = distinct !{!216, !27}
!217 = distinct !{!217, !29}
!218 = distinct !{!218, !31, !27}
!219 = !{!220}
!220 = distinct !{!220, !221, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!221 = distinct !{!221, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!222 = distinct !{!222, !27}
!223 = distinct !{!223, !29}
!224 = distinct !{!224, !31, !27}
!225 = !{!226}
!226 = distinct !{!226, !227, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!227 = distinct !{!227, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!228 = distinct !{!228, !27}
!229 = distinct !{!229, !29}
!230 = distinct !{!230, !31, !27}
!231 = distinct !{!231, !27}
!232 = distinct !{!232, !29}
!233 = distinct !{!233, !31, !27}
!234 = distinct !{!234, !27}
!235 = distinct !{!235, !29}
!236 = distinct !{!236, !31, !27}
!237 = distinct !{!237, !27}
!238 = distinct !{!238, !29}
!239 = distinct !{!239, !31, !27}
!240 = !{!241}
!241 = distinct !{!241, !242, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!242 = distinct !{!242, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!243 = distinct !{!243, !27}
!244 = distinct !{!244, !29}
!245 = distinct !{!245, !31, !27}
!246 = distinct !{!246, !27}
!247 = distinct !{!247, !29}
!248 = distinct !{!248, !31, !27}
!249 = distinct !{!249, !27}
!250 = distinct !{!250, !29}
!251 = distinct !{!251, !31, !27}
!252 = distinct !{!252, !27}
!253 = distinct !{!253, !29}
!254 = distinct !{!254, !31, !27}
!255 = !{!256}
!256 = distinct !{!256, !257, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!257 = distinct !{!257, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!258 = distinct !{!258, !27}
!259 = distinct !{!259, !29}
!260 = distinct !{!260, !31, !27}
!261 = !{!262}
!262 = distinct !{!262, !263, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!263 = distinct !{!263, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!264 = !{!265}
!265 = distinct !{!265, !266, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!266 = distinct !{!266, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!267 = !{!268}
!268 = distinct !{!268, !269, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!269 = distinct !{!269, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!270 = !{!271}
!271 = distinct !{!271, !272, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!272 = distinct !{!272, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!273 = !{!274}
!274 = distinct !{!274, !275, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!275 = distinct !{!275, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!276 = !{!277}
!277 = distinct !{!277, !278, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!278 = distinct !{!278, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!279 = !{!280}
!280 = distinct !{!280, !281, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!281 = distinct !{!281, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!282 = !{!283}
!283 = distinct !{!283, !284, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!284 = distinct !{!284, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!285 = distinct !{!285, !27}
!286 = distinct !{!286, !29}
!287 = distinct !{!287, !31, !27}
!288 = distinct !{!288, !27}
!289 = distinct !{!289, !29}
!290 = distinct !{!290, !31, !27}
!291 = distinct !{!291, !27}
!292 = distinct !{!292, !29}
!293 = distinct !{!293, !31, !27}
!294 = !{!295}
!295 = distinct !{!295, !296}
!296 = distinct !{!296, !"LVerDomain"}
!297 = !{!298}
!298 = distinct !{!298, !296}
!299 = !{!300}
!300 = distinct !{!300, !296}
!301 = !{!295, !298}
!302 = distinct !{!302, !27}
!303 = distinct !{!303, !27}
!304 = !{!305}
!305 = distinct !{!305, !306, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!306 = distinct !{!306, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!307 = !{!308}
!308 = distinct !{!308, !309, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!309 = distinct !{!309, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!310 = !{!311}
!311 = distinct !{!311, !312, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!312 = distinct !{!312, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!313 = !{!314}
!314 = distinct !{!314, !315, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!315 = distinct !{!315, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!316 = !{!317}
!317 = distinct !{!317, !318, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!318 = distinct !{!318, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!319 = !{!320}
!320 = distinct !{!320, !321, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!321 = distinct !{!321, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!322 = distinct !{!322, !27}
!323 = distinct !{!323, !29}
!324 = distinct !{!324, !31, !27}
!325 = distinct !{!325, !27}
!326 = distinct !{!326, !29}
!327 = distinct !{!327, !31, !27}
!328 = distinct !{!328, !27}
!329 = distinct !{!329, !29}
!330 = distinct !{!330, !31, !27}
!331 = !{!332}
!332 = distinct !{!332, !333}
!333 = distinct !{!333, !"LVerDomain"}
!334 = !{!335}
!335 = distinct !{!335, !333}
!336 = !{!337}
!337 = distinct !{!337, !333}
!338 = !{!332, !335}
!339 = distinct !{!339, !27}
!340 = distinct !{!340, !27}
!341 = !{!342}
!342 = distinct !{!342, !343, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!343 = distinct !{!343, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!344 = !{!345}
!345 = distinct !{!345, !346, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!346 = distinct !{!346, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!347 = !{!348}
!348 = distinct !{!348, !349, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!349 = distinct !{!349, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!350 = !{!351}
!351 = distinct !{!351, !352, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!352 = distinct !{!352, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!353 = !{!354}
!354 = distinct !{!354, !355, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!355 = distinct !{!355, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!356 = !{!357}
!357 = distinct !{!357, !358, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!358 = distinct !{!358, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!359 = !{!360}
!360 = distinct !{!360, !361, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!361 = distinct !{!361, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!362 = !{!363}
!363 = distinct !{!363, !364, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!364 = distinct !{!364, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!365 = !{!366}
!366 = distinct !{!366, !367, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!367 = distinct !{!367, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!368 = !{!369}
!369 = distinct !{!369, !370, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!370 = distinct !{!370, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!371 = !{!372}
!372 = distinct !{!372, !373, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!373 = distinct !{!373, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!374 = !{!375}
!375 = distinct !{!375, !376, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!376 = distinct !{!376, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!377 = !{!378}
!378 = distinct !{!378, !379, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!379 = distinct !{!379, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!380 = !{!381}
!381 = distinct !{!381, !382, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!382 = distinct !{!382, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!383 = !{!384}
!384 = distinct !{!384, !385, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!385 = distinct !{!385, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!386 = !{!387}
!387 = distinct !{!387, !388, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!388 = distinct !{!388, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!389 = !{!390}
!390 = distinct !{!390, !391, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!391 = distinct !{!391, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!392 = !{!393}
!393 = distinct !{!393, !394, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!394 = distinct !{!394, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!395 = !{!396}
!396 = distinct !{!396, !397, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!397 = distinct !{!397, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!398 = !{!399}
!399 = distinct !{!399, !400, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!400 = distinct !{!400, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!401 = !{!402}
!402 = distinct !{!402, !403, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!403 = distinct !{!403, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!404 = !{!405}
!405 = distinct !{!405, !406, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!406 = distinct !{!406, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!407 = !{!408}
!408 = distinct !{!408, !409, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!409 = distinct !{!409, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!410 = distinct !{!410, !27}
!411 = distinct !{!411, !29}
!412 = distinct !{!412, !31, !27}
!413 = distinct !{!413, !27}
!414 = distinct !{!414, !29}
!415 = distinct !{!415, !31, !27}
!416 = distinct !{!416, !27}
!417 = distinct !{!417, !29}
!418 = distinct !{!418, !31, !27}
!419 = !{!420}
!420 = distinct !{!420, !421}
!421 = distinct !{!421, !"LVerDomain"}
!422 = !{!423}
!423 = distinct !{!423, !421}
!424 = !{!425}
!425 = distinct !{!425, !421}
!426 = !{!423, !420}
!427 = distinct !{!427, !27}
!428 = distinct !{!428, !27}
!429 = !{!430}
!430 = distinct !{!430, !431, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!431 = distinct !{!431, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!432 = !{!433}
!433 = distinct !{!433, !434, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!434 = distinct !{!434, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!435 = !{!436}
!436 = distinct !{!436, !437, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!437 = distinct !{!437, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!438 = distinct !{!438, !27}
!439 = distinct !{!439, !29}
!440 = distinct !{!440, !31, !27}
!441 = distinct !{!441, !27}
!442 = distinct !{!442, !29}
!443 = distinct !{!443, !31, !27}
!444 = distinct !{!444, !27}
!445 = distinct !{!445, !29}
!446 = distinct !{!446, !31, !27}
!447 = !{!448}
!448 = distinct !{!448, !449}
!449 = distinct !{!449, !"LVerDomain"}
!450 = !{!451}
!451 = distinct !{!451, !449}
!452 = !{!453}
!453 = distinct !{!453, !449}
!454 = !{!451, !448}
!455 = distinct !{!455, !27}
!456 = distinct !{!456, !27}
!457 = !{!458}
!458 = distinct !{!458, !459}
!459 = distinct !{!459, !"LVerDomain"}
!460 = !{!461}
!461 = distinct !{!461, !459}
!462 = !{!463}
!463 = distinct !{!463, !459}
!464 = !{!461, !458}
!465 = distinct !{!465, !27}
!466 = distinct !{!466, !27}
!467 = !{!468}
!468 = distinct !{!468, !469}
!469 = distinct !{!469, !"LVerDomain"}
!470 = !{!471}
!471 = distinct !{!471, !469}
!472 = !{!473}
!473 = distinct !{!473, !469}
!474 = !{!471, !468}
!475 = distinct !{!475, !27}
!476 = distinct !{!476, !27}
!477 = distinct !{!477, !27}
!478 = distinct !{!478, !29}
!479 = distinct !{!479, !31, !27}
!480 = distinct !{!480, !27}
!481 = distinct !{!481, !29}
!482 = distinct !{!482, !31, !27}
!483 = distinct !{!483, !27}
!484 = distinct !{!484, !29}
!485 = distinct !{!485, !31, !27}
!486 = distinct !{!486, !27}
!487 = distinct !{!487, !29}
!488 = distinct !{!488, !31, !27}
!489 = distinct !{!489, !27}
!490 = distinct !{!490, !29}
!491 = distinct !{!491, !31, !27}
!492 = distinct !{!492, !27}
!493 = distinct !{!493, !29}
!494 = distinct !{!494, !31, !27}
!495 = !{!496}
!496 = distinct !{!496, !497, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!497 = distinct !{!497, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!498 = !{!499}
!499 = distinct !{!499, !500, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!500 = distinct !{!500, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!501 = !{!502}
!502 = distinct !{!502, !503, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!503 = distinct !{!503, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!504 = !{!505}
!505 = distinct !{!505, !506, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!506 = distinct !{!506, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!507 = !{!508}
!508 = distinct !{!508, !509, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!509 = distinct !{!509, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!510 = !{!511}
!511 = distinct !{!511, !512, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!512 = distinct !{!512, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!513 = !{!514}
!514 = distinct !{!514, !515, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!515 = distinct !{!515, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!516 = !{!517}
!517 = distinct !{!517, !518, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!518 = distinct !{!518, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!519 = distinct !{!519, !27}
!520 = distinct !{!520, !29}
!521 = distinct !{!521, !31, !27}
!522 = distinct !{!522, !27}
!523 = distinct !{!523, !29}
!524 = distinct !{!524, !31, !27}
!525 = distinct !{!525, !27}
!526 = distinct !{!526, !29}
!527 = distinct !{!527, !31, !27}
!528 = !{!529}
!529 = distinct !{!529, !530}
!530 = distinct !{!530, !"LVerDomain"}
!531 = !{!532}
!532 = distinct !{!532, !530}
!533 = !{!534}
!534 = distinct !{!534, !530}
!535 = !{!529, !532}
!536 = distinct !{!536, !27}
!537 = distinct !{!537, !27}
!538 = !{!539}
!539 = distinct !{!539, !540, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!540 = distinct !{!540, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!541 = !{!542}
!542 = distinct !{!542, !543, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!543 = distinct !{!543, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!544 = !{!545}
!545 = distinct !{!545, !546, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!546 = distinct !{!546, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!547 = !{!548}
!548 = distinct !{!548, !549, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!549 = distinct !{!549, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!550 = !{!551}
!551 = distinct !{!551, !552, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!552 = distinct !{!552, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!553 = !{!554}
!554 = distinct !{!554, !555, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!555 = distinct !{!555, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!556 = distinct !{!556, !27}
!557 = distinct !{!557, !29}
!558 = distinct !{!558, !31, !27}
!559 = distinct !{!559, !27}
!560 = distinct !{!560, !29}
!561 = distinct !{!561, !31, !27}
!562 = distinct !{!562, !27}
!563 = distinct !{!563, !29}
!564 = distinct !{!564, !31, !27}
!565 = !{!566}
!566 = distinct !{!566, !567}
!567 = distinct !{!567, !"LVerDomain"}
!568 = !{!569}
!569 = distinct !{!569, !567}
!570 = !{!571}
!571 = distinct !{!571, !567}
!572 = !{!566, !569}
!573 = distinct !{!573, !27}
!574 = distinct !{!574, !27}
!575 = !{!576}
!576 = distinct !{!576, !577, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!577 = distinct !{!577, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!578 = !{!579}
!579 = distinct !{!579, !580, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!580 = distinct !{!580, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!581 = !{!582}
!582 = distinct !{!582, !583, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!583 = distinct !{!583, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!584 = !{!585}
!585 = distinct !{!585, !586, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!586 = distinct !{!586, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!587 = !{!588}
!588 = distinct !{!588, !589, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!589 = distinct !{!589, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!590 = !{!591}
!591 = distinct !{!591, !592, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!592 = distinct !{!592, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!593 = !{!594}
!594 = distinct !{!594, !595, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!595 = distinct !{!595, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!596 = !{!597}
!597 = distinct !{!597, !598, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!598 = distinct !{!598, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!599 = !{!600}
!600 = distinct !{!600, !601, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!601 = distinct !{!601, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!602 = !{!603}
!603 = distinct !{!603, !604, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!604 = distinct !{!604, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!605 = !{!606}
!606 = distinct !{!606, !607, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!607 = distinct !{!607, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!608 = !{!609}
!609 = distinct !{!609, !610, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!610 = distinct !{!610, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!611 = !{!612}
!612 = distinct !{!612, !613, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!613 = distinct !{!613, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!614 = !{!615}
!615 = distinct !{!615, !616, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!616 = distinct !{!616, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!617 = !{!618}
!618 = distinct !{!618, !619, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!619 = distinct !{!619, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!620 = !{!621}
!621 = distinct !{!621, !622, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!622 = distinct !{!622, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!623 = !{!624}
!624 = distinct !{!624, !625, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!625 = distinct !{!625, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!626 = !{!627}
!627 = distinct !{!627, !628, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!628 = distinct !{!628, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!629 = !{!630}
!630 = distinct !{!630, !631, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!631 = distinct !{!631, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!632 = !{!633}
!633 = distinct !{!633, !634, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!634 = distinct !{!634, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!635 = !{!636}
!636 = distinct !{!636, !637, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!637 = distinct !{!637, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!638 = !{!639}
!639 = distinct !{!639, !640, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!640 = distinct !{!640, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!641 = !{!642}
!642 = distinct !{!642, !643, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!643 = distinct !{!643, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!644 = distinct !{!644, !27}
!645 = distinct !{!645, !29}
!646 = distinct !{!646, !31, !27}
!647 = distinct !{!647, !27}
!648 = distinct !{!648, !29}
!649 = distinct !{!649, !31, !27}
!650 = distinct !{!650, !27}
!651 = distinct !{!651, !29}
!652 = distinct !{!652, !31, !27}
!653 = !{!654}
!654 = distinct !{!654, !655}
!655 = distinct !{!655, !"LVerDomain"}
!656 = !{!657}
!657 = distinct !{!657, !655}
!658 = !{!659}
!659 = distinct !{!659, !655}
!660 = !{!657, !654}
!661 = distinct !{!661, !27}
!662 = distinct !{!662, !27}
!663 = !{!664}
!664 = distinct !{!664, !665, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!665 = distinct !{!665, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!666 = !{!667}
!667 = distinct !{!667, !668, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!668 = distinct !{!668, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!669 = !{!670}
!670 = distinct !{!670, !671, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!671 = distinct !{!671, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!672 = distinct !{!672, !27}
!673 = distinct !{!673, !29}
!674 = distinct !{!674, !31, !27}
!675 = distinct !{!675, !27}
!676 = distinct !{!676, !29}
!677 = distinct !{!677, !31, !27}
!678 = distinct !{!678, !27}
!679 = distinct !{!679, !29}
!680 = distinct !{!680, !31, !27}
!681 = !{!682}
!682 = distinct !{!682, !683}
!683 = distinct !{!683, !"LVerDomain"}
!684 = !{!685}
!685 = distinct !{!685, !683}
!686 = !{!687}
!687 = distinct !{!687, !683}
!688 = !{!685, !682}
!689 = distinct !{!689, !27}
!690 = distinct !{!690, !27}
