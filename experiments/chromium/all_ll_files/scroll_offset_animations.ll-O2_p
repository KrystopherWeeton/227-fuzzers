; ModuleID = '../../cc/animation/scroll_offset_animations.cc'
source_filename = "../../cc/animation/scroll_offset_animations.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.cc::ScrollOffsetAnimationUpdate" = type <{ %"struct.cc::ElementId", %"class.gfx::Vector2dF", i8, [7 x i8] }>
%"struct.cc::ElementId" = type { i64 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.cc::ScrollOffsetAnimations" = type { %"class.std::__1::unordered_map", %"class.cc::AnimationHost"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.cc::AnimationHost" = type { %"class.cc::MutatorHost", %"class.cc::LayerTreeMutatorClient", %"class.std::__1::unordered_map.14", %"class.std::__1::vector", %"class.std::__1::unordered_map.43", %"class.cc::MutatorHostClient"*, %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.73", i32, i8, %"class.std::__1::unique_ptr.80", i64, i8, i8, i8, i8, i8, %"class.std::__1::vector.86", %"class.base::WeakPtrFactory" }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.cc::LayerTreeMutatorClient" = type { i32 (...)** }
%"class.std::__1::unordered_map.14" = type { %"class.std::__1::__hash_table.15" }
%"class.std::__1::__hash_table.15" = type <{ %"class.std::__1::unique_ptr.16", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.34", [4 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::__hash_node_base.19"** }
%"struct.std::__1::__hash_node_base.19" = type { %"struct.std::__1::__hash_node_base.19"* }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__bucket_list_deallocator.21" }
%"class.std::__1::__bucket_list_deallocator.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::__hash_node_base.19" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.38" }
%class.scoped_refptr = type { %"class.cc::Animation"* }
%"class.cc::Animation" = type opaque
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.scoped_refptr* }
%"class.std::__1::unordered_map.43" = type { %"class.std::__1::__hash_table.44" }
%"class.std::__1::__hash_table.44" = type <{ %"class.std::__1::unique_ptr.45", %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.60", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47", %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.std::__1::__hash_node_base.48"** }
%"struct.std::__1::__hash_node_base.48" = type { %"struct.std::__1::__hash_node_base.48"* }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::__bucket_list_deallocator.50" }
%"class.std::__1::__bucket_list_deallocator.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.std::__1::__hash_node_base.48" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.cc::ScrollOffsetAnimations"* }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.cc::ScrollOffsetAnimationsImpl"* }
%"class.cc::ScrollOffsetAnimationsImpl" = type { %"class.cc::AnimationDelegate", %"class.cc::AnimationHost"*, %class.scoped_refptr.76, %class.scoped_refptr }
%"class.cc::AnimationDelegate" = type { i32 (...)** }
%class.scoped_refptr.76 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.cc::LayerTreeMutator"* }
%"class.cc::LayerTreeMutator" = type { i32 (...)** }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"struct.cc::MutatorHost::PendingThroughputTrackerInfo"*, %"struct.cc::MutatorHost::PendingThroughputTrackerInfo"*, %"class.std::__1::__compressed_pair.88" }
%"struct.cc::MutatorHost::PendingThroughputTrackerInfo" = type <{ i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.cc::MutatorHost::PendingThroughputTrackerInfo"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.93 }
%class.scoped_refptr.93 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.95" }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i8 }
%"struct.cc::ElementIdHash" = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"struct.cc::ElementId"* }
%"class.std::__1::tuple.101" = type { i8 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.cc::ElementId", %"struct.cc::ScrollOffsetAnimationUpdate" }

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2cc9ElementIdENS2_27ScrollOffsetAnimationUpdateEEENS_22__unordered_map_hasherIS3_S5_NS2_13ElementIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_S9_S7_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSK_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2cc9ElementIdENS2_27ScrollOffsetAnimationUpdateEEENS_22__unordered_map_hasherIS3_S5_NS2_13ElementIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_S9_S7_Lb1EEENS_9allocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2cc9ElementIdENS2_27ScrollOffsetAnimationUpdateEEENS_22__unordered_map_hasherIS3_S5_NS2_13ElementIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_S9_S7_Lb1EEENS_9allocatorIS5_EEE8__rehashEm = comdat any

@_ZN2cc9ElementId17kInvalidElementIdE = external local_unnamed_addr constant i64, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN2cc27ScrollOffsetAnimationUpdateC1Ev = hidden unnamed_addr alias void (%"struct.cc::ScrollOffsetAnimationUpdate"*), void (%"struct.cc::ScrollOffsetAnimationUpdate"*)* @_ZN2cc27ScrollOffsetAnimationUpdateC2Ev
@_ZN2cc27ScrollOffsetAnimationUpdateC1ENS_9ElementIdE = hidden unnamed_addr alias void (%"struct.cc::ScrollOffsetAnimationUpdate"*, i64), void (%"struct.cc::ScrollOffsetAnimationUpdate"*, i64)* @_ZN2cc27ScrollOffsetAnimationUpdateC2ENS_9ElementIdE
@_ZN2cc22ScrollOffsetAnimationsC1EPNS_13AnimationHostE = hidden unnamed_addr alias void (%"class.cc::ScrollOffsetAnimations"*, %"class.cc::AnimationHost"*), void (%"class.cc::ScrollOffsetAnimations"*, %"class.cc::AnimationHost"*)* @_ZN2cc22ScrollOffsetAnimationsC2EPNS_13AnimationHostE
@_ZN2cc22ScrollOffsetAnimationsD1Ev = hidden unnamed_addr alias void (%"class.cc::ScrollOffsetAnimations"*), void (%"class.cc::ScrollOffsetAnimations"*)* @_ZN2cc22ScrollOffsetAnimationsD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc27ScrollOffsetAnimationUpdateC2Ev(%"struct.cc::ScrollOffsetAnimationUpdate"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::ScrollOffsetAnimationUpdate", %"struct.cc::ScrollOffsetAnimationUpdate"* %0, i64 0, i32 0, i32 0
  %3 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %3, i64* %2, align 8
  %4 = getelementptr inbounds %"struct.cc::ScrollOffsetAnimationUpdate", %"struct.cc::ScrollOffsetAnimationUpdate"* %0, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %"struct.cc::ScrollOffsetAnimationUpdate", %"struct.cc::ScrollOffsetAnimationUpdate"* %0, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %5, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc27ScrollOffsetAnimationUpdateC2ENS_9ElementIdE(%"struct.cc::ScrollOffsetAnimationUpdate"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::ScrollOffsetAnimationUpdate", %"struct.cc::ScrollOffsetAnimationUpdate"* %0, i64 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"struct.cc::ScrollOffsetAnimationUpdate", %"struct.cc::ScrollOffsetAnimationUpdate"* %0, i64 0, i32 1, i32 0
  %5 = bitcast float* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 9, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc22ScrollOffsetAnimationsC2EPNS_13AnimationHostE(%"class.cc::ScrollOffsetAnimations"* nocapture, %"class.cc::AnimationHost"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %0, i64 0, i32 0, i32 0, i32 3
  %4 = bitcast %"class.std::__1::__compressed_pair.11"* %3 to i32*
  %5 = bitcast %"class.cc::ScrollOffsetAnimations"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %4, align 4
  %6 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %0, i64 0, i32 1
  store %"class.cc::AnimationHost"* %1, %"class.cc::AnimationHost"** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc22ScrollOffsetAnimationsD2Ev(%"class.cc::ScrollOffsetAnimations"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  %10 = icmp eq %"struct.std::__1::__hash_node_base"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %12, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc22ScrollOffsetAnimations21GetUpdateForElementIdENS_9ElementIdE(%"struct.cc::ScrollOffsetAnimationUpdate"* noalias nocapture sret, %"class.cc::ScrollOffsetAnimations"*, i64) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %1, i64 0, i32 0, i32 0, i32 2
  %5 = bitcast %"class.std::__1::__compressed_pair.9"* %4 to %"struct.cc::ElementIdHash"*
  %6 = tail call i64 @_ZNK2cc13ElementIdHashclENS_9ElementIdE(%"struct.cc::ElementIdHash"* %5, i64 %2) #10
  %7 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %58, label %10

10:                                               ; preds = %3
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #10, !range !2
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %18, %16, %13
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base"* %25, null
  br i1 %26, label %58, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base"* %29, null
  br i1 %30, label %58, label %31

31:                                               ; preds = %27
  %32 = add i64 %8, -1
  br label %33

33:                                               ; preds = %54, %31
  %34 = phi %"struct.std::__1::__hash_node_base"* [ %29, %31 ], [ %56, %54 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %6, %37
  br i1 %38, label %49, label %39

39:                                               ; preds = %33
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %32
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %44, %42, %40
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %54, label %58

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %2
  br i1 %53, label %62, label %54

54:                                               ; preds = %49, %46
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base"* %56, null
  br i1 %57, label %58, label %33

58:                                               ; preds = %46, %54, %20, %3, %27
  %59 = getelementptr inbounds %"struct.cc::ScrollOffsetAnimationUpdate", %"struct.cc::ScrollOffsetAnimationUpdate"* %0, i64 0, i32 0, i32 0
  store i64 %2, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.cc::ScrollOffsetAnimationUpdate", %"struct.cc::ScrollOffsetAnimationUpdate"* %0, i64 0, i32 1, i32 0
  %61 = bitcast float* %60 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 9, i1 false) #10
  br label %66

62:                                               ; preds = %49
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 3
  %64 = bitcast %"struct.cc::ScrollOffsetAnimationUpdate"* %0 to i8*
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 24, i1 false)
  br label %66

66:                                               ; preds = %62, %58
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc22ScrollOffsetAnimations19AddAdjustmentUpdateENS_9ElementIdEN3gfx9Vector2dFE(%"class.cc::ScrollOffsetAnimations"*, i64, <2 x float>) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.101", align 1
  %6 = alloca %"struct.cc::ElementId", align 8
  %7 = alloca <2 x float>, align 8
  %8 = bitcast <2 x float>* %7 to %"class.gfx::Vector2dF"*
  %9 = alloca %"struct.cc::ScrollOffsetAnimationUpdate", align 8
  %10 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %6, i64 0, i32 0
  store i64 %1, i64* %10, align 8
  store <2 x float> %2, <2 x float>* %7, align 8
  %11 = bitcast %"struct.cc::ScrollOffsetAnimationUpdate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"struct.cc::ScrollOffsetAnimationUpdate", %"struct.cc::ScrollOffsetAnimationUpdate"* %9, i64 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.cc::ScrollOffsetAnimationUpdate", %"struct.cc::ScrollOffsetAnimationUpdate"* %9, i64 0, i32 1
  %14 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %13, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %14, align 8
  %15 = getelementptr inbounds %"struct.cc::ScrollOffsetAnimationUpdate", %"struct.cc::ScrollOffsetAnimationUpdate"* %9, i64 0, i32 1, i32 1
  store float 0xFFFFFFFFE0000000, float* %15, align 4
  %16 = getelementptr inbounds %"struct.cc::ScrollOffsetAnimationUpdate", %"struct.cc::ScrollOffsetAnimationUpdate"* %9, i64 0, i32 2
  %17 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = bitcast %"class.std::__1::__compressed_pair.9"* %17 to %"struct.cc::ElementIdHash"*
  %19 = bitcast i8* %16 to i64*
  store i64 -6148914691236517206, i64* %19, align 8
  %20 = tail call i64 @_ZNK2cc13ElementIdHashclENS_9ElementIdE(%"struct.cc::ElementIdHash"* %18, i64 %1) #10, !noalias !3
  %21 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8, !noalias !3
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %72, label %24

24:                                               ; preds = %3
  %25 = tail call i64 @llvm.ctpop.i64(i64 %22) #10, !range !2
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %32, %30, %27
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %36, align 8, !noalias !3
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8, !noalias !3
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %72, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %42, align 8, !noalias !3
  %44 = icmp eq %"struct.std::__1::__hash_node_base"* %43, null
  br i1 %44, label %72, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  br label %47

47:                                               ; preds = %68, %45
  %48 = phi %"struct.std::__1::__hash_node_base"* [ %43, %45 ], [ %70, %68 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i64*
  %51 = load i64, i64* %50, align 8, !noalias !3
  %52 = icmp eq i64 %20, %51
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %46
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %22
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %22
  br label %60

60:                                               ; preds = %58, %56, %54
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %68, label %72

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i64*
  %66 = load i64, i64* %65, align 8, !noalias !3
  %67 = icmp eq i64 %66, %1
  br i1 %67, label %75, label %68

68:                                               ; preds = %63, %60
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %69, align 8, !noalias !3
  %71 = icmp eq %"struct.std::__1::__hash_node_base"* %70, null
  br i1 %71, label %72, label %47

72:                                               ; preds = %68, %60, %41, %34, %3
  store i64 %1, i64* %12, align 8, !alias.scope !3
  %73 = getelementptr inbounds %"struct.cc::ScrollOffsetAnimationUpdate", %"struct.cc::ScrollOffsetAnimationUpdate"* %9, i64 0, i32 1, i32 0
  %74 = bitcast float* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 9, i1 false) #10, !alias.scope !3
  br label %78

75:                                               ; preds = %63
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 3
  %77 = bitcast %"struct.std::__1::__hash_node_base"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %77, i64 24, i1 false) #10
  br label %78

78:                                               ; preds = %72, %75
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* %13, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %8) #10
  %79 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %0, i64 0, i32 0, i32 0
  %80 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #10
  %81 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"struct.cc::ElementId"* %6, %"struct.cc::ElementId"** %81, align 8
  %82 = getelementptr inbounds %"class.std::__1::tuple.101", %"class.std::__1::tuple.101"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %82) #10
  %83 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2cc9ElementIdENS2_27ScrollOffsetAnimationUpdateEEENS_22__unordered_map_hasherIS3_S5_NS2_13ElementIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_S9_S7_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSK_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %79, %"struct.cc::ElementId"* nonnull dereferenceable(8) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.101"* nonnull dereferenceable(1) %5) #10
  %84 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %83, 0
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %84, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %82) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #10
  %86 = bitcast %"struct.std::__1::__hash_node_base"* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* nonnull align 8 %11, i64 17, i1 false)
  %87 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %0, i64 0, i32 1
  %88 = load %"class.cc::AnimationHost"*, %"class.cc::AnimationHost"** %87, align 8
  call void @_ZN2cc13AnimationHost14SetNeedsCommitEv(%"class.cc::AnimationHost"* %88) #10
  %89 = load %"class.cc::AnimationHost"*, %"class.cc::AnimationHost"** %87, align 8
  call void @_ZN2cc13AnimationHost22SetNeedsPushPropertiesEv(%"class.cc::AnimationHost"* %89) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  ret void
}

declare void @_ZN2cc13AnimationHost14SetNeedsCommitEv(%"class.cc::AnimationHost"*) local_unnamed_addr #4

declare void @_ZN2cc13AnimationHost22SetNeedsPushPropertiesEv(%"class.cc::AnimationHost"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc22ScrollOffsetAnimations17AddTakeoverUpdateENS_9ElementIdE(%"class.cc::ScrollOffsetAnimations"*, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.101", align 1
  %5 = alloca %"struct.cc::ElementId", align 8
  %6 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %5, i64 0, i32 0
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = bitcast %"class.std::__1::__compressed_pair.9"* %7 to %"struct.cc::ElementIdHash"*
  %9 = tail call i64 @_ZNK2cc13ElementIdHashclENS_9ElementIdE(%"struct.cc::ElementIdHash"* %8, i64 %1) #10, !noalias !6
  %10 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8, !noalias !6
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %72, label %13

13:                                               ; preds = %2
  %14 = tail call i64 @llvm.ctpop.i64(i64 %11) #10, !range !2
  %15 = icmp ugt i64 %14, 1
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = add i64 %11, -1
  %18 = and i64 %17, %9
  br label %23

19:                                               ; preds = %13
  %20 = icmp ult i64 %9, %11
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = urem i64 %9, %11
  br label %23

23:                                               ; preds = %21, %19, %16
  %24 = phi i64 [ %18, %16 ], [ %22, %21 ], [ %9, %19 ]
  %25 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %25, align 8, !noalias !6
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, i64 %24
  %28 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, align 8, !noalias !6
  %29 = icmp eq %"struct.std::__1::__hash_node_base"* %28, null
  br i1 %29, label %72, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %28, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %31, align 8, !noalias !6
  %33 = icmp eq %"struct.std::__1::__hash_node_base"* %32, null
  br i1 %33, label %72, label %34

34:                                               ; preds = %30
  %35 = add i64 %11, -1
  br label %36

36:                                               ; preds = %57, %34
  %37 = phi %"struct.std::__1::__hash_node_base"* [ %32, %34 ], [ %59, %57 ]
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base"* %38 to i64*
  %40 = load i64, i64* %39, align 8, !noalias !6
  %41 = icmp eq i64 %9, %40
  br i1 %41, label %52, label %42

42:                                               ; preds = %36
  br i1 %15, label %45, label %43

43:                                               ; preds = %42
  %44 = and i64 %40, %35
  br label %49

45:                                               ; preds = %42
  %46 = icmp ult i64 %40, %11
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = urem i64 %40, %11
  br label %49

49:                                               ; preds = %47, %45, %43
  %50 = phi i64 [ %44, %43 ], [ %48, %47 ], [ %40, %45 ]
  %51 = icmp eq i64 %50, %24
  br i1 %51, label %57, label %72

52:                                               ; preds = %36
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 2
  %54 = bitcast %"struct.std::__1::__hash_node_base"* %53 to i64*
  %55 = load i64, i64* %54, align 8, !noalias !6
  %56 = icmp eq i64 %55, %1
  br i1 %56, label %61, label %57

57:                                               ; preds = %52, %49
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 0, i32 0
  %59 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %58, align 8, !noalias !6
  %60 = icmp eq %"struct.std::__1::__hash_node_base"* %59, null
  br i1 %60, label %72, label %36

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 3
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to i8*
  %64 = bitcast %"struct.std::__1::__hash_node_base"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 4
  %67 = bitcast %"struct.std::__1::__hash_node_base"* %66 to float*
  %68 = load float, float* %67, align 8
  %69 = getelementptr inbounds i8, i8* %63, i64 12
  %70 = bitcast i8* %69 to float*
  %71 = load float, float* %70, align 4
  br label %72

72:                                               ; preds = %49, %57, %2, %23, %30, %61
  %73 = phi float [ %68, %61 ], [ 0.000000e+00, %30 ], [ 0.000000e+00, %23 ], [ 0.000000e+00, %2 ], [ 0.000000e+00, %57 ], [ 0.000000e+00, %49 ]
  %74 = phi float [ %71, %61 ], [ 0.000000e+00, %30 ], [ 0.000000e+00, %23 ], [ 0.000000e+00, %2 ], [ 0.000000e+00, %57 ], [ 0.000000e+00, %49 ]
  %75 = phi i64 [ %65, %61 ], [ %1, %30 ], [ %1, %23 ], [ %1, %2 ], [ %1, %57 ], [ %1, %49 ]
  %76 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %0, i64 0, i32 0, i32 0
  %77 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #10
  %78 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"struct.cc::ElementId"* %5, %"struct.cc::ElementId"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::tuple.101", %"class.std::__1::tuple.101"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %79) #10
  %80 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2cc9ElementIdENS2_27ScrollOffsetAnimationUpdateEEENS_22__unordered_map_hasherIS3_S5_NS2_13ElementIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_S9_S7_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSK_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %76, %"struct.cc::ElementId"* nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.101"* nonnull dereferenceable(1) %4) #10
  %81 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %80, 0
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %81, i64 3
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %82 to %"struct.cc::ScrollOffsetAnimationUpdate"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %79) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #10
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %75, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %81, i64 4
  %86 = bitcast %"struct.std::__1::__hash_node_base"* %85 to float*
  store float %73, float* %86, align 8
  %87 = getelementptr inbounds %"struct.cc::ScrollOffsetAnimationUpdate", %"struct.cc::ScrollOffsetAnimationUpdate"* %83, i64 0, i32 1, i32 1
  store float %74, float* %87, align 4
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %81, i64 5
  %89 = bitcast %"struct.std::__1::__hash_node_base"* %88 to i8*
  store i8 1, i8* %89, align 8
  %90 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %0, i64 0, i32 1
  %91 = load %"class.cc::AnimationHost"*, %"class.cc::AnimationHost"** %90, align 8
  call void @_ZN2cc13AnimationHost14SetNeedsCommitEv(%"class.cc::AnimationHost"* %91) #10
  %92 = load %"class.cc::AnimationHost"*, %"class.cc::AnimationHost"** %90, align 8
  call void @_ZN2cc13AnimationHost22SetNeedsPushPropertiesEv(%"class.cc::AnimationHost"* %92) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc22ScrollOffsetAnimations20HasUpdatesForTestingEv(%"class.cc::ScrollOffsetAnimations"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp ne i64 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc22ScrollOffsetAnimations16PushPropertiesToEPNS_26ScrollOffsetAnimationsImplE(%"class.cc::ScrollOffsetAnimations"* nocapture, %"class.cc::ScrollOffsetAnimationsImpl"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %82, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.std::__1::__hash_node_base"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %67

11:                                               ; preds = %6
  %12 = inttoptr i64 %9 to %"struct.std::__1::__hash_node_base"*
  br label %18

13:                                               ; preds = %78
  %14 = load i64, i64* %3, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %82, label %16

16:                                               ; preds = %13
  %17 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %7, align 8
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi %"struct.std::__1::__hash_node_base"* [ %17, %16 ], [ %12, %11 ]
  %20 = icmp eq %"struct.std::__1::__hash_node_base"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %18, %21
  %22 = phi %"struct.std::__1::__hash_node_base"* [ %24, %21 ], [ %19, %18 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #11
  %26 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %18
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %7, align 8
  %28 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %49, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.cc::ScrollOffsetAnimations", %"class.cc::ScrollOffsetAnimations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = add i64 %29, -1
  %34 = and i64 %29, 3
  %35 = icmp ult i64 %33, 3
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  %37 = sub i64 %29, %34
  br label %50

38:                                               ; preds = %50, %31
  %39 = phi i64 [ 0, %31 ], [ %64, %50 ]
  %40 = icmp eq i64 %34, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %38, %41
  %42 = phi i64 [ %46, %41 ], [ %39, %38 ]
  %43 = phi i64 [ %47, %41 ], [ %34, %38 ]
  %44 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, i64 %42
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %45, align 8
  %46 = add nuw i64 %42, 1
  %47 = add i64 %43, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %41, !llvm.loop !9

49:                                               ; preds = %38, %41, %27
  store i64 0, i64* %3, align 8
  br label %82

50:                                               ; preds = %50, %36
  %51 = phi i64 [ 0, %36 ], [ %64, %50 ]
  %52 = phi i64 [ %37, %36 ], [ %65, %50 ]
  %53 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %54, align 8
  %55 = or i64 %51, 1
  %56 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %57, align 8
  %58 = or i64 %51, 2
  %59 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %59, i64 %58
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %60, align 8
  %61 = or i64 %51, 3
  %62 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %62, i64 %61
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %63, align 8
  %64 = add nuw i64 %51, 4
  %65 = add i64 %52, -4
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %38, label %50

67:                                               ; preds = %6, %78
  %68 = phi i64 [ %80, %78 ], [ %9, %6 ]
  %69 = inttoptr i64 %68 to %"struct.std::__1::__hash_node"*
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %69, i64 0, i32 2, i32 0, i32 1, i32 2
  %71 = load i8, i8* %70, align 8, !range !11
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %74, label %73

73:                                               ; preds = %67
  tail call void @_ZN2cc26ScrollOffsetAnimationsImpl20ScrollAnimationAbortEb(%"class.cc::ScrollOffsetAnimationsImpl"* %1, i1 zeroext true) #10
  br label %78

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %69, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %69, i64 0, i32 2, i32 0, i32 1, i32 1
  tail call void @_ZN2cc26ScrollOffsetAnimationsImpl30ScrollAnimationApplyAdjustmentENS_9ElementIdERKN3gfx9Vector2dFE(%"class.cc::ScrollOffsetAnimationsImpl"* %1, i64 %76, %"class.gfx::Vector2dF"* dereferenceable(8) %77) #10
  br label %78

78:                                               ; preds = %74, %73
  %79 = inttoptr i64 %68 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %13, label %67

82:                                               ; preds = %49, %13, %2
  ret void
}

declare void @_ZN2cc26ScrollOffsetAnimationsImpl20ScrollAnimationAbortEb(%"class.cc::ScrollOffsetAnimationsImpl"*, i1 zeroext) local_unnamed_addr #4

declare void @_ZN2cc26ScrollOffsetAnimationsImpl30ScrollAnimationApplyAdjustmentENS_9ElementIdERKN3gfx9Vector2dFE(%"class.cc::ScrollOffsetAnimationsImpl"*, i64, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i64 @_ZNK2cc13ElementIdHashclENS_9ElementIdE(%"struct.cc::ElementIdHash"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2cc9ElementIdENS2_27ScrollOffsetAnimationUpdateEEENS_22__unordered_map_hasherIS3_S5_NS2_13ElementIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_S9_S7_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSK_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"struct.cc::ElementId"* dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.101"* dereferenceable(1)) local_unnamed_addr #2 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::__compressed_pair.9"* %6 to %"struct.cc::ElementIdHash"*
  %8 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %1, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = tail call i64 @_ZNK2cc13ElementIdHashclENS_9ElementIdE(%"struct.cc::ElementIdHash"* %7, i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %59, label %14

14:                                               ; preds = %5
  %15 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !2
  %16 = icmp ugt i64 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = add i64 %12, -1
  %19 = and i64 %18, %10
  br label %24

20:                                               ; preds = %14
  %21 = icmp ult i64 %10, %12
  br i1 %21, label %24, label %22

22:                                               ; preds = %20
  %23 = urem i64 %10, %12
  br label %24

24:                                               ; preds = %17, %20, %22
  %25 = phi i64 [ %19, %17 ], [ %23, %22 ], [ %10, %20 ]
  %26 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, i64 %25
  %29 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base"* %29, null
  br i1 %30, label %59, label %31

31:                                               ; preds = %24
  %32 = add i64 %12, -1
  %33 = load i64, i64* %8, align 8
  br label %34

34:                                               ; preds = %31, %54
  %35 = phi %"struct.std::__1::__hash_node_base"* [ %37, %54 ], [ %29, %31 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %59, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 1
  %41 = bitcast %"struct.std::__1::__hash_node_base"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, %10
  br i1 %43, label %54, label %44

44:                                               ; preds = %39
  br i1 %16, label %47, label %45

45:                                               ; preds = %44
  %46 = and i64 %42, %32
  br label %51

47:                                               ; preds = %44
  %48 = icmp ult i64 %42, %12
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = urem i64 %42, %12
  br label %51

51:                                               ; preds = %45, %47, %49
  %52 = phi i64 [ %46, %45 ], [ %50, %49 ], [ %42, %47 ]
  %53 = icmp eq i64 %52, %25
  br i1 %53, label %54, label %59

54:                                               ; preds = %39, %51
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 2
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %33
  br i1 %58, label %156, label %34

59:                                               ; preds = %34, %51, %24, %5
  %60 = phi i64 [ %25, %24 ], [ -6148914691236517206, %5 ], [ %25, %51 ], [ %25, %34 ]
  %61 = tail call i8* @_Znwm(i64 48) #11, !noalias !12
  %62 = getelementptr inbounds i8, i8* %61, i64 16
  %63 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %64 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %63, align 8, !noalias !12
  %65 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %64, i64 0, i32 0
  %66 = bitcast i8* %62 to i64*
  %67 = load i64, i64* %65, align 8, !noalias !12
  store i64 %67, i64* %66, align 8, !noalias !12
  %68 = getelementptr inbounds i8, i8* %61, i64 24
  %69 = bitcast i8* %68 to i64*
  %70 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8, !noalias !12
  store i64 %70, i64* %69, align 8, !noalias !12
  %71 = getelementptr inbounds i8, i8* %61, i64 32
  %72 = bitcast i8* %71 to float*
  store float 0.000000e+00, float* %72, align 4, !noalias !12
  %73 = getelementptr inbounds i8, i8* %61, i64 36
  %74 = bitcast i8* %73 to float*
  store float 0.000000e+00, float* %74, align 4, !noalias !12
  %75 = getelementptr inbounds i8, i8* %61, i64 8
  %76 = bitcast i8* %75 to i64*
  store i64 %10, i64* %76, align 8, !noalias !12
  %77 = bitcast i8* %61 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %77, align 8, !noalias !12
  %78 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 1
  %81 = uitofp i64 %80 to float
  %82 = uitofp i64 %12 to float
  %83 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %84 = load float, float* %83, align 4
  %85 = fmul float %84, %82
  %86 = fcmp olt float %85, %81
  %87 = or i1 %13, %86
  br i1 %87, label %88, label %111

88:                                               ; preds = %59
  %89 = shl i64 %12, 1
  %90 = icmp ult i64 %12, 3
  %91 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !2
  %92 = icmp ugt i64 %91, 1
  %93 = or i1 %90, %92
  %94 = zext i1 %93 to i64
  %95 = or i64 %89, %94
  %96 = fdiv float %81, %84
  %97 = tail call float @llvm.ceil.f32(float %96) #10
  %98 = fptoui float %97 to i64
  %99 = icmp ult i64 %95, %98
  %100 = select i1 %99, i64 %98, i64 %95
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2cc9ElementIdENS2_27ScrollOffsetAnimationUpdateEEENS_22__unordered_map_hasherIS3_S5_NS2_13ElementIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_S9_S7_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %100)
  %101 = load i64, i64* %11, align 8
  %102 = tail call i64 @llvm.ctpop.i64(i64 %101) #10, !range !2
  %103 = icmp ugt i64 %102, 1
  br i1 %103, label %107, label %104

104:                                              ; preds = %88
  %105 = add i64 %101, -1
  %106 = and i64 %105, %10
  br label %111

107:                                              ; preds = %88
  %108 = icmp ult i64 %10, %101
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = urem i64 %10, %101
  br label %111

111:                                              ; preds = %109, %107, %104, %59
  %112 = phi i64 [ %12, %59 ], [ %101, %104 ], [ %101, %107 ], [ %101, %109 ]
  %113 = phi i64 [ %60, %59 ], [ %106, %104 ], [ %10, %107 ], [ %110, %109 ]
  %114 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %114, align 8
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %115, i64 %113
  %117 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %116, align 8
  %118 = icmp eq %"struct.std::__1::__hash_node_base"* %117, null
  br i1 %118, label %119, label %145

119:                                              ; preds = %111
  %120 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %121 = bitcast %"struct.std::__1::__hash_node_base"* %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast i8* %61 to i64*
  store i64 %122, i64* %123, align 8
  %124 = bitcast %"struct.std::__1::__hash_node_base"* %120 to i8**
  store i8* %61, i8** %124, align 8
  store %"struct.std::__1::__hash_node_base"* %120, %"struct.std::__1::__hash_node_base"** %116, align 8
  %125 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %77, align 8
  %126 = icmp eq %"struct.std::__1::__hash_node_base"* %125, null
  br i1 %126, label %152, label %127

127:                                              ; preds = %119
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %125, i64 1
  %129 = bitcast %"struct.std::__1::__hash_node_base"* %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = tail call i64 @llvm.ctpop.i64(i64 %112) #10, !range !2
  %132 = icmp ugt i64 %131, 1
  br i1 %132, label %136, label %133

133:                                              ; preds = %127
  %134 = add i64 %112, -1
  %135 = and i64 %130, %134
  br label %140

136:                                              ; preds = %127
  %137 = icmp ult i64 %130, %112
  br i1 %137, label %140, label %138

138:                                              ; preds = %136
  %139 = urem i64 %130, %112
  br label %140

140:                                              ; preds = %133, %136, %138
  %141 = phi i64 [ %135, %133 ], [ %139, %138 ], [ %130, %136 ]
  %142 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %114, align 8
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, i64 %141
  %144 = bitcast %"struct.std::__1::__hash_node_base"** %143 to i8**
  br label %150

145:                                              ; preds = %111
  %146 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast i8* %61 to i64*
  store i64 %147, i64* %148, align 8
  %149 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i8**
  br label %150

150:                                              ; preds = %140, %145
  %151 = phi i8** [ %149, %145 ], [ %144, %140 ]
  store i8* %61, i8** %151, align 8
  br label %152

152:                                              ; preds = %150, %119
  %153 = bitcast i8* %61 to %"struct.std::__1::__hash_node_base"*
  %154 = load i64, i64* %78, align 8
  %155 = add i64 %154, 1
  store i64 %155, i64* %78, align 8
  br label %156

156:                                              ; preds = %54, %152
  %157 = phi i8 [ 1, %152 ], [ 0, %54 ]
  %158 = phi %"struct.std::__1::__hash_node_base"* [ %153, %152 ], [ %37, %54 ]
  %159 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %158, 0
  %160 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %159, i8 %157, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %160
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2cc9ElementIdENS2_27ScrollOffsetAnimationUpdateEEENS_22__unordered_map_hasherIS3_S5_NS2_13ElementIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_S9_S7_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2cc9ElementIdENS2_27ScrollOffsetAnimationUpdateEEENS_22__unordered_map_hasherIS3_S5_NS2_13ElementIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_S9_S7_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2cc9ElementIdENS2_27ScrollOffsetAnimationUpdateEEENS_22__unordered_map_hasherIS3_S5_NS2_13ElementIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_S9_S7_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2cc9ElementIdENS2_27ScrollOffsetAnimationUpdateEEENS_22__unordered_map_hasherIS3_S5_NS2_13ElementIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_S9_S7_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !15

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i64*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = load i64, i64* %102, align 8
  %112 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = icmp eq i64 %111, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #11
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK2cc22ScrollOffsetAnimations21GetUpdateForElementIdENS_9ElementIdE: argument 0"}
!5 = distinct !{!5, !"_ZNK2cc22ScrollOffsetAnimations21GetUpdateForElementIdENS_9ElementIdE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK2cc22ScrollOffsetAnimations21GetUpdateForElementIdENS_9ElementIdE: argument 0"}
!8 = distinct !{!8, !"_ZNK2cc22ScrollOffsetAnimations21GetUpdateForElementIdENS_9ElementIdE"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = !{i8 0, i8 2}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2cc9ElementIdENS2_27ScrollOffsetAnimationUpdateEEENS_22__unordered_map_hasherIS3_S5_NS2_13ElementIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_S9_S7_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS3_EEENSK_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSD_ISS_EEEEEEmOT_DpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2cc9ElementIdENS2_27ScrollOffsetAnimationUpdateEEENS_22__unordered_map_hasherIS3_S5_NS2_13ElementIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_S9_S7_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS3_EEENSK_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSD_ISS_EEEEEEmOT_DpOT0_"}
!15 = distinct !{!15, !10}
