; ModuleID = '../../third_party/pdfium/fxjs/js_resources.cpp'
source_filename = "../../third_party/pdfium/fxjs/js_resources.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"Alert\00", align 1
@.str.2 = private unnamed_addr constant [51 x i8] c"Incorrect number of parameters passed to function.\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"The input value is invalid.\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"The input value is too long.\00", align 1
@.str.5 = private unnamed_addr constant [60 x i8] c"The input value can't be parsed as a valid date/time (%ls).\00", align 1
@.str.6 = private unnamed_addr constant [84 x i8] c"The input value must be greater than or equal to %ls and less than or equal to %ls.\00", align 1
@.str.7 = private unnamed_addr constant [54 x i8] c"The input value must be greater than or equal to %ls.\00", align 1
@.str.8 = private unnamed_addr constant [51 x i8] c"The input value must be less than or equal to %ls.\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"Operation not supported.\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"System is busy.\00", align 1
@.str.11 = private unnamed_addr constant [33 x i8] c"Duplicate formfield event found.\00", align 1
@.str.12 = private unnamed_addr constant [51 x i8] c"The second parameter can't be converted to a Date.\00", align 1
@.str.13 = private unnamed_addr constant [41 x i8] c"The second parameter is an invalid Date.\00", align 1
@.str.14 = private unnamed_addr constant [24 x i8] c"Global value not found.\00", align 1
@.str.15 = private unnamed_addr constant [36 x i8] c"Cannot assign to readonly property.\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"Incorrect parameter type.\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"Incorrect parameter value.\00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"Permission denied.\00", align 1
@.str.19 = private unnamed_addr constant [25 x i8] c"Object no longer exists.\00", align 1
@.str.20 = private unnamed_addr constant [29 x i8] c"Object is of the wrong type.\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"Unknown property.\00", align 1
@.str.22 = private unnamed_addr constant [38 x i8] c"Set not possible, invalid or unknown.\00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"User gesture required.\00", align 1
@.str.24 = private unnamed_addr constant [21 x i8] c"Too many occurances.\00", align 1
@.str.25 = private unnamed_addr constant [16 x i8] c"Unknown method.\00", align 1
@.str.26 = private unnamed_addr constant [2 x i32] [i32 46, i32 0], align 4
@.str.27 = private unnamed_addr constant [3 x i32] [i32 58, i32 32, i32 0], align 4
@switch.table._Z17JSGetStringFromID9JSMessage = private unnamed_addr constant [25 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z17JSGetStringFromID9JSMessage(%"class.fxcrt::WideString"* noalias sret, i32) local_unnamed_addr #0 {
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = add i32 %1, -1
  %5 = icmp ult i32 %4, 25
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds [25 x i8*], [25 x i8*]* @switch.table._Z17JSGetStringFromID9JSMessage, i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8
  br label %10

10:                                               ; preds = %6, %2
  %11 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %2 ], [ %9, %6 ]
  %12 = tail call i64 @strlen(i8* nonnull %11) #5
  %13 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 1
  store i64 %12, i64* %14, align 8
  call void @_ZN5fxcrt10WideString9FromASCIIENS_18StringViewTemplateIcEE(%"class.fxcrt::WideString"* sret %0, %"class.fxcrt::StringViewTemplate"* nonnull %3) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5fxcrt10WideString9FromASCIIENS_18StringViewTemplateIcEE(%"class.fxcrt::WideString"* sret, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z19JSFormatErrorStringPKcS0_RKN5fxcrt10WideStringE(%"class.fxcrt::WideString"* noalias sret, i8*, i8*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #0 {
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = alloca %"class.fxcrt::WideString", align 8
  %7 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %8 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %8, align 8
  %9 = icmp eq i8* %1, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %4
  %11 = tail call i64 @strlen(i8* nonnull %1) #5
  br label %12

12:                                               ; preds = %4, %10
  %13 = phi i64 [ %11, %10 ], [ 0, %4 ]
  %14 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* %1, i8** %14, align 8
  %15 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 1
  store i64 %13, i64* %15, align 8
  call void @_ZN5fxcrt10WideString11FromDefANSIENS_18StringViewTemplateIcEE(%"class.fxcrt::WideString"* sret %0, %"class.fxcrt::StringViewTemplate"* nonnull %5) #6
  %16 = icmp eq i8* %2, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %12
  %18 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEPKw(%"class.fxcrt::WideString"* %0, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str.26, i64 0, i64 0)) #6
  %19 = bitcast %"class.fxcrt::WideString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #6
  %20 = call i64 @strlen(i8* nonnull %2) #5
  %21 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %2, i8** %21, align 8
  %22 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %7, i64 0, i32 0, i32 1
  store i64 %20, i64* %22, align 8
  call void @_ZN5fxcrt10WideString11FromDefANSIENS_18StringViewTemplateIcEE(%"class.fxcrt::WideString"* nonnull sret %6, %"class.fxcrt::StringViewTemplate"* nonnull %7) #6
  %23 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %0, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %6) #6
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #6
  br label %24

24:                                               ; preds = %12, %17
  %25 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEPKw(%"class.fxcrt::WideString"* %0, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.27, i64 0, i64 0)) #6
  %26 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %0, %"class.fxcrt::WideString"* dereferenceable(8) %3) #6
  ret void
}

declare void @_ZN5fxcrt10WideString11FromDefANSIENS_18StringViewTemplateIcEE(%"class.fxcrt::WideString"* sret, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEPKw(%"class.fxcrt::WideString"*, i32*) local_unnamed_addr #2

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
