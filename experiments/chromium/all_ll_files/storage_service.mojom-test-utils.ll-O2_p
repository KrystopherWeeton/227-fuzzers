; ModuleID = 'gen/components/services/storage/public/mojom/storage_service.mojom-test-utils.cc'
source_filename = "gen/components/services/storage/public/mojom/storage_service.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.storage::mojom::StorageServiceAsyncWaiter" = type { %"class.storage::mojom::StorageService"* }
%"class.storage::mojom::StorageService" = type { i32 (...)** }
%"class.storage::mojom::StorageServiceInterceptorForTesting" = type { %"class.storage::mojom::StorageService" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.base::FilePath" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.5, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.7", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.4", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.5 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.6" }>
%"class.base::RefCountedThreadSafe.6" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i32 }

$_ZN7storage5mojom14StorageServiceD2Ev = comdat any

$_ZN7storage5mojom35StorageServiceInterceptorForTestingD0Ev = comdat any

@_ZTVN7storage5mojom35StorageServiceInterceptorForTestingE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.storage::mojom::StorageService"*)* @_ZN7storage5mojom14StorageServiceD2Ev to i8*), i8* bitcast (void (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)* @_ZN7storage5mojom35StorageServiceInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)* @_ZN7storage5mojom35StorageServiceInterceptorForTesting34EnableAggressiveDomStorageFlushingEv to i8*), i8* bitcast (void (%"class.storage::mojom::StorageServiceInterceptorForTesting"*, %"class.base::FilePath"*, %"class.mojo::PendingRemote"*)* @_ZN7storage5mojom35StorageServiceInterceptorForTesting16SetDataDirectoryERKN4base8FilePathEN4mojo13PendingRemoteINS0_9DirectoryEEE to i8*), i8* bitcast (void (%"class.storage::mojom::StorageServiceInterceptorForTesting"*, %"class.absl::optional"*, %"class.mojo::PendingReceiver"*)* @_ZN7storage5mojom35StorageServiceInterceptorForTesting13BindPartitionERKN4absl8optionalIN4base8FilePathEEEN4mojo15PendingReceiverINS0_9PartitionEEE to i8*), i8* bitcast (void (%"class.storage::mojom::StorageServiceInterceptorForTesting"*, %"class.mojo::ScopedHandleBase"*)* @_ZN7storage5mojom35StorageServiceInterceptorForTesting11BindTestApiEN4mojo16ScopedHandleBaseINS2_17MessagePipeHandleEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN7storage5mojom25StorageServiceAsyncWaiterC1EPNS0_14StorageServiceE = hidden unnamed_addr alias void (%"class.storage::mojom::StorageServiceAsyncWaiter"*, %"class.storage::mojom::StorageService"*), void (%"class.storage::mojom::StorageServiceAsyncWaiter"*, %"class.storage::mojom::StorageService"*)* @_ZN7storage5mojom25StorageServiceAsyncWaiterC2EPNS0_14StorageServiceE
@_ZN7storage5mojom25StorageServiceAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.storage::mojom::StorageServiceAsyncWaiter"*), void (%"class.storage::mojom::StorageServiceAsyncWaiter"*)* @_ZN7storage5mojom25StorageServiceAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage5mojom35StorageServiceInterceptorForTesting34EnableAggressiveDomStorageFlushingEv(%"class.storage::mojom::StorageServiceInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.storage::mojom::StorageServiceInterceptorForTesting"* %0 to %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)***
  %3 = load %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)**, %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)*, %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)** %3, i64 6
  %5 = load %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)*, %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.storage::mojom::StorageService"* %5(%"class.storage::mojom::StorageServiceInterceptorForTesting"* %0) #7
  %7 = bitcast %"class.storage::mojom::StorageService"* %6 to void (%"class.storage::mojom::StorageService"*)***
  %8 = load void (%"class.storage::mojom::StorageService"*)**, void (%"class.storage::mojom::StorageService"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.storage::mojom::StorageService"*)*, void (%"class.storage::mojom::StorageService"*)** %8, i64 2
  %10 = load void (%"class.storage::mojom::StorageService"*)*, void (%"class.storage::mojom::StorageService"*)** %9, align 8
  tail call void %10(%"class.storage::mojom::StorageService"* %6) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage5mojom35StorageServiceInterceptorForTesting16SetDataDirectoryERKN4base8FilePathEN4mojo13PendingRemoteINS0_9DirectoryEEE(%"class.storage::mojom::StorageServiceInterceptorForTesting"*, %"class.base::FilePath"* dereferenceable(24), %"class.mojo::PendingRemote"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::PendingRemote", align 4
  %5 = bitcast %"class.storage::mojom::StorageServiceInterceptorForTesting"* %0 to %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)***
  %6 = load %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)**, %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)*, %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)** %6, i64 6
  %8 = load %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)*, %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.storage::mojom::StorageService"* %8(%"class.storage::mojom::StorageServiceInterceptorForTesting"* %0) #7
  %10 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %2, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %10, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %11) #7
  %12 = bitcast %"class.storage::mojom::StorageService"* %9 to void (%"class.storage::mojom::StorageService"*, %"class.base::FilePath"*, %"class.mojo::PendingRemote"*)***
  %13 = load void (%"class.storage::mojom::StorageService"*, %"class.base::FilePath"*, %"class.mojo::PendingRemote"*)**, void (%"class.storage::mojom::StorageService"*, %"class.base::FilePath"*, %"class.mojo::PendingRemote"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.storage::mojom::StorageService"*, %"class.base::FilePath"*, %"class.mojo::PendingRemote"*)*, void (%"class.storage::mojom::StorageService"*, %"class.base::FilePath"*, %"class.mojo::PendingRemote"*)** %13, i64 3
  %15 = load void (%"class.storage::mojom::StorageService"*, %"class.base::FilePath"*, %"class.mojo::PendingRemote"*)*, void (%"class.storage::mojom::StorageService"*, %"class.base::FilePath"*, %"class.mojo::PendingRemote"*)** %14, align 8
  call void %15(%"class.storage::mojom::StorageService"* %9, %"class.base::FilePath"* dereferenceable(24) %1, %"class.mojo::PendingRemote"* nonnull %4) #7
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %10) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage5mojom35StorageServiceInterceptorForTesting13BindPartitionERKN4absl8optionalIN4base8FilePathEEEN4mojo15PendingReceiverINS0_9PartitionEEE(%"class.storage::mojom::StorageServiceInterceptorForTesting"*, %"class.absl::optional"* dereferenceable(32), %"class.mojo::PendingReceiver"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::PendingReceiver", align 8
  %5 = bitcast %"class.storage::mojom::StorageServiceInterceptorForTesting"* %0 to %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)***
  %6 = load %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)**, %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)*, %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)** %6, i64 6
  %8 = load %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)*, %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.storage::mojom::StorageService"* %8(%"class.storage::mojom::StorageServiceInterceptorForTesting"* %0) #7
  %10 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %2, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %10, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %11) #7
  %12 = bitcast %"class.storage::mojom::StorageService"* %9 to void (%"class.storage::mojom::StorageService"*, %"class.absl::optional"*, %"class.mojo::PendingReceiver"*)***
  %13 = load void (%"class.storage::mojom::StorageService"*, %"class.absl::optional"*, %"class.mojo::PendingReceiver"*)**, void (%"class.storage::mojom::StorageService"*, %"class.absl::optional"*, %"class.mojo::PendingReceiver"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.storage::mojom::StorageService"*, %"class.absl::optional"*, %"class.mojo::PendingReceiver"*)*, void (%"class.storage::mojom::StorageService"*, %"class.absl::optional"*, %"class.mojo::PendingReceiver"*)** %13, i64 4
  %15 = load void (%"class.storage::mojom::StorageService"*, %"class.absl::optional"*, %"class.mojo::PendingReceiver"*)*, void (%"class.storage::mojom::StorageService"*, %"class.absl::optional"*, %"class.mojo::PendingReceiver"*)** %14, align 8
  call void %15(%"class.storage::mojom::StorageService"* %9, %"class.absl::optional"* dereferenceable(32) %1, %"class.mojo::PendingReceiver"* nonnull %4) #7
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %10) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage5mojom35StorageServiceInterceptorForTesting11BindTestApiEN4mojo16ScopedHandleBaseINS2_17MessagePipeHandleEEE(%"class.storage::mojom::StorageServiceInterceptorForTesting"*, %"class.mojo::ScopedHandleBase"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::ScopedHandleBase", align 4
  %4 = bitcast %"class.storage::mojom::StorageServiceInterceptorForTesting"* %0 to %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)***
  %5 = load %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)**, %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)*, %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)** %5, i64 6
  %7 = load %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)*, %"class.storage::mojom::StorageService"* (%"class.storage::mojom::StorageServiceInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.storage::mojom::StorageService"* %7(%"class.storage::mojom::StorageServiceInterceptorForTesting"* %0) #7
  %9 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4, !noalias !2
  store i32 %11, i32* %9, align 4, !alias.scope !2
  store i32 0, i32* %10, align 4, !noalias !2
  %12 = bitcast %"class.storage::mojom::StorageService"* %8 to void (%"class.storage::mojom::StorageService"*, %"class.mojo::ScopedHandleBase"*)***
  %13 = load void (%"class.storage::mojom::StorageService"*, %"class.mojo::ScopedHandleBase"*)**, void (%"class.storage::mojom::StorageService"*, %"class.mojo::ScopedHandleBase"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.storage::mojom::StorageService"*, %"class.mojo::ScopedHandleBase"*)*, void (%"class.storage::mojom::StorageService"*, %"class.mojo::ScopedHandleBase"*)** %13, i64 5
  %15 = load void (%"class.storage::mojom::StorageService"*, %"class.mojo::ScopedHandleBase"*)*, void (%"class.storage::mojom::StorageService"*, %"class.mojo::ScopedHandleBase"*)** %14, align 8
  call void %15(%"class.storage::mojom::StorageService"* %8, %"class.mojo::ScopedHandleBase"* nonnull %3) #7
  %16 = load i32, i32* %9, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %2
  %19 = call i32 @MojoClose(i32 %16) #7
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7storage5mojom25StorageServiceAsyncWaiterC2EPNS0_14StorageServiceE(%"class.storage::mojom::StorageServiceAsyncWaiter"* nocapture, %"class.storage::mojom::StorageService"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.storage::mojom::StorageServiceAsyncWaiter", %"class.storage::mojom::StorageServiceAsyncWaiter"* %0, i64 0, i32 0
  store %"class.storage::mojom::StorageService"* %1, %"class.storage::mojom::StorageService"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7storage5mojom25StorageServiceAsyncWaiterD2Ev(%"class.storage::mojom::StorageServiceAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7storage5mojom14StorageServiceD2Ev(%"class.storage::mojom::StorageService"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7storage5mojom35StorageServiceInterceptorForTestingD0Ev(%"class.storage::mojom::StorageServiceInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare i32 @MojoClose(i32) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!4 = distinct !{!4, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
