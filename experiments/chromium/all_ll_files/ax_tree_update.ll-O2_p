; ModuleID = '../../ui/accessibility/ax_tree_update.cc'
source_filename = "../../ui/accessibility/ax_tree_update.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::AXTreeUpdate" = type { i8, [7 x i8], %"struct.ui::AXTreeData", i32, i32, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.72" }
%"struct.ui::AXTreeData" = type <{ i32 (...)**, %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.std::__1::basic_string", i8, [3 x i8], float, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"*, %"class.std::__1::__compressed_pair.67" }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.2", %"class.std::__1::vector.9", %"class.std::__1::vector.17", %"class.std::__1::vector.25", %"class.std::__1::vector.33", %"class.std::__1::vector.41", %"class.std::__1::vector.49", %"class.std::__1::vector.57", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"*, %"class.std::__1::__compressed_pair.12" }
%"struct.std::__1::pair.11" = type opaque
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::pair.11"* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"*, %"class.std::__1::__compressed_pair.20" }
%"struct.std::__1::pair.19" = type opaque
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::pair.19"* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.std::__1::pair.27"*, %"struct.std::__1::pair.27"*, %"class.std::__1::__compressed_pair.28" }
%"struct.std::__1::pair.27" = type opaque
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::pair.27"* }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"*, %"class.std::__1::__compressed_pair.36" }
%"struct.std::__1::pair.35" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::pair.35"* }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.std::__1::pair.43"*, %"struct.std::__1::pair.43"*, %"class.std::__1::__compressed_pair.44" }
%"struct.std::__1::pair.43" = type opaque
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::pair.43"* }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"struct.std::__1::pair.51"*, %"struct.std::__1::pair.51"*, %"class.std::__1::__compressed_pair.52" }
%"struct.std::__1::pair.51" = type opaque
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::pair.51"* }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { i32*, i32*, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.ui::AXNodeData"* }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"*, %"class.std::__1::__compressed_pair.74" }
%"struct.ui::AXEventIntent" = type { i32 (...)**, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.ui::AXEventIntent"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.89" }
%"struct.std::__1::pair.89" = type { i32, i32 }

$_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@.str = private unnamed_addr constant [24 x i8] c"AXTreeUpdate tree data:\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"AXTreeUpdate: clear node \00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"AXTreeUpdate: root id \00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"event_from=\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"event_from_action=\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"event_intents=[\0A\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"]\0A\00", align 1

@_ZN2ui12AXTreeUpdateC1Ev = hidden unnamed_addr alias void (%"struct.ui::AXTreeUpdate"*), void (%"struct.ui::AXTreeUpdate"*)* @_ZN2ui12AXTreeUpdateC2Ev
@_ZN2ui12AXTreeUpdateC1ERKS0_ = hidden unnamed_addr alias void (%"struct.ui::AXTreeUpdate"*, %"struct.ui::AXTreeUpdate"*), void (%"struct.ui::AXTreeUpdate"*, %"struct.ui::AXTreeUpdate"*)* @_ZN2ui12AXTreeUpdateC2ERKS0_
@_ZN2ui12AXTreeUpdateD1Ev = hidden unnamed_addr alias void (%"struct.ui::AXTreeUpdate"*), void (%"struct.ui::AXTreeUpdate"*)* @_ZN2ui12AXTreeUpdateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12AXTreeUpdateC2Ev(%"struct.ui::AXTreeUpdate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 2
  tail call void @_ZN2ui10AXTreeDataC1Ev(%"struct.ui::AXTreeData"* %3) #8
  %4 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 3
  %5 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 64, i1 false)
  ret void
}

declare void @_ZN2ui10AXTreeDataC1Ev(%"struct.ui::AXTreeData"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12AXTreeUpdateC2ERKS0_(%"struct.ui::AXTreeUpdate"*, %"struct.ui::AXTreeUpdate"* dereferenceable(320)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  store i8 %5, i8* %3, align 8
  %6 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 2
  tail call void @_ZN2ui10AXTreeDataC1ERKS0_(%"struct.ui::AXTreeData"* %6, %"struct.ui::AXTreeData"* dereferenceable(248) %7) #8
  %8 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 3
  %10 = bitcast i32* %9 to i64*
  %11 = bitcast i32* %8 to i64*
  %12 = load i64, i64* %10, align 8
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 5
  %14 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 5
  %15 = bitcast %"class.std::__1::vector"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #8
  %16 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 5, i32 0, i32 1
  %17 = bitcast %"struct.ui::AXNodeData"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector"* %14 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = sdiv exact i64 %21, 264
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %52, label %24

24:                                               ; preds = %2
  %25 = icmp ugt i64 %22, 69874030582233150
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #9
  unreachable

28:                                               ; preds = %24
  %29 = tail call i8* @_Znwm(i64 %21) #10
  %30 = bitcast i8* %29 to %"struct.ui::AXNodeData"*
  %31 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 5, i32 0, i32 1
  %32 = bitcast %"struct.ui::AXNodeData"** %31 to i8**
  store i8* %29, i8** %32, align 8
  %33 = bitcast %"class.std::__1::vector"* %13 to i8**
  store i8* %29, i8** %33, align 8
  %34 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %30, i64 %22
  %35 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store %"struct.ui::AXNodeData"* %34, %"struct.ui::AXNodeData"** %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %14, i64 0, i32 0, i32 0
  %37 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %36, align 8
  %38 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %16, align 8
  %39 = bitcast %"struct.ui::AXNodeData"** %31 to i64*
  %40 = ptrtoint i8* %29 to i64
  %41 = icmp eq %"struct.ui::AXNodeData"* %37, %38
  br i1 %41, label %50, label %42

42:                                               ; preds = %28, %42
  %43 = phi %"struct.ui::AXNodeData"* [ %46, %42 ], [ %30, %28 ]
  %44 = phi %"struct.ui::AXNodeData"* [ %45, %42 ], [ %37, %28 ]
  tail call void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"* %43, %"struct.ui::AXNodeData"* dereferenceable(264) %44) #8
  %45 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %44, i64 1
  %46 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %43, i64 1
  %47 = icmp eq %"struct.ui::AXNodeData"* %45, %38
  br i1 %47, label %48, label %42

48:                                               ; preds = %42
  %49 = ptrtoint %"struct.ui::AXNodeData"* %46 to i64
  br label %50

50:                                               ; preds = %48, %28
  %51 = phi i64 [ %40, %28 ], [ %49, %48 ]
  store i64 %51, i64* %39, align 8
  br label %52

52:                                               ; preds = %2, %50
  %53 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 6
  %54 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 6
  %55 = bitcast i32* %54 to i64*
  %56 = bitcast i32* %53 to i64*
  %57 = load i64, i64* %55, align 8
  store i64 %57, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 8
  %59 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 8
  %60 = bitcast %"class.std::__1::vector.72"* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #8
  %61 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 8, i32 0, i32 1
  %62 = bitcast %"struct.ui::AXEventIntent"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.std::__1::vector.72"* %59 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %63, %65
  %67 = sdiv exact i64 %66, 24
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %97, label %69

69:                                               ; preds = %52
  %70 = icmp ugt i64 %67, 768614336404564650
  br i1 %70, label %71, label %73

71:                                               ; preds = %69
  %72 = bitcast %"class.std::__1::vector.72"* %58 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %72) #9
  unreachable

73:                                               ; preds = %69
  %74 = tail call i8* @_Znwm(i64 %66) #10
  %75 = bitcast i8* %74 to %"struct.ui::AXEventIntent"*
  %76 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 8, i32 0, i32 1
  %77 = bitcast %"struct.ui::AXEventIntent"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.72"* %58 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"struct.ui::AXEventIntent", %"struct.ui::AXEventIntent"* %75, i64 %67
  %80 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  store %"struct.ui::AXEventIntent"* %79, %"struct.ui::AXEventIntent"** %80, align 8
  %81 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %59, i64 0, i32 0, i32 0
  %82 = load %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"** %81, align 8
  %83 = load %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"** %61, align 8
  %84 = bitcast %"struct.ui::AXEventIntent"** %76 to i64*
  %85 = ptrtoint i8* %74 to i64
  %86 = icmp eq %"struct.ui::AXEventIntent"* %82, %83
  br i1 %86, label %95, label %87

87:                                               ; preds = %73, %87
  %88 = phi %"struct.ui::AXEventIntent"* [ %91, %87 ], [ %75, %73 ]
  %89 = phi %"struct.ui::AXEventIntent"* [ %90, %87 ], [ %82, %73 ]
  tail call void @_ZN2ui13AXEventIntentC1ERKS0_(%"struct.ui::AXEventIntent"* %88, %"struct.ui::AXEventIntent"* dereferenceable(24) %89) #8
  %90 = getelementptr inbounds %"struct.ui::AXEventIntent", %"struct.ui::AXEventIntent"* %89, i64 1
  %91 = getelementptr inbounds %"struct.ui::AXEventIntent", %"struct.ui::AXEventIntent"* %88, i64 1
  %92 = icmp eq %"struct.ui::AXEventIntent"* %90, %83
  br i1 %92, label %93, label %87

93:                                               ; preds = %87
  %94 = ptrtoint %"struct.ui::AXEventIntent"* %91 to i64
  br label %95

95:                                               ; preds = %93, %73
  %96 = phi i64 [ %85, %73 ], [ %94, %93 ]
  store i64 %96, i64* %84, align 8
  br label %97

97:                                               ; preds = %52, %95
  ret void
}

declare void @_ZN2ui10AXTreeDataC1ERKS0_(%"struct.ui::AXTreeData"*, %"struct.ui::AXTreeData"* dereferenceable(248)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12AXTreeUpdateD2Ev(%"struct.ui::AXTreeUpdate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 8
  %3 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"** %3, align 8
  %5 = icmp eq %"struct.ui::AXEventIntent"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.ui::AXEventIntent"* %4 to i8*
  %8 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 8, i32 0, i32 1
  %9 = load %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"** %8, align 8
  %10 = icmp eq %"struct.ui::AXEventIntent"* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"struct.ui::AXEventIntent"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.ui::AXEventIntent", %"struct.ui::AXEventIntent"* %12, i64 -1
  tail call void @_ZN2ui13AXEventIntentD1Ev(%"struct.ui::AXEventIntent"* %13) #8
  %14 = icmp eq %"struct.ui::AXEventIntent"* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector.72"* %2 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %"struct.ui::AXEventIntent"* %4, %"struct.ui::AXEventIntent"** %8, align 8
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %1, %18
  %21 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 5
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %21, i64 0, i32 0, i32 0
  %23 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %22, align 8
  %24 = icmp eq %"struct.ui::AXNodeData"* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"struct.ui::AXNodeData"* %23 to i8*
  %27 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 5, i32 0, i32 1
  %28 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %27, align 8
  %29 = icmp eq %"struct.ui::AXNodeData"* %28, %23
  br i1 %29, label %40, label %30

30:                                               ; preds = %25, %30
  %31 = phi %"struct.ui::AXNodeData"* [ %32, %30 ], [ %28, %25 ]
  %32 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %31, i64 -1
  %33 = bitcast %"struct.ui::AXNodeData"* %32 to void (%"struct.ui::AXNodeData"*)***
  %34 = load void (%"struct.ui::AXNodeData"*)**, void (%"struct.ui::AXNodeData"*)*** %33, align 8
  %35 = load void (%"struct.ui::AXNodeData"*)*, void (%"struct.ui::AXNodeData"*)** %34, align 8
  tail call void %35(%"struct.ui::AXNodeData"* %32) #8
  %36 = icmp eq %"struct.ui::AXNodeData"* %32, %23
  br i1 %36, label %37, label %30

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector"* %21 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %25
  %41 = phi i8* [ %39, %37 ], [ %26, %25 ]
  store %"struct.ui::AXNodeData"* %23, %"struct.ui::AXNodeData"** %27, align 8
  tail call void @_ZdlPv(i8* %41) #10
  br label %42

42:                                               ; preds = %20, %40
  %43 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 2
  tail call void @_ZN2ui10AXTreeDataD1Ev(%"struct.ui::AXTreeData"* %43) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui10AXTreeDataD1Ev(%"struct.ui::AXTreeData"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui12AXTreeUpdate8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"struct.ui::AXTreeUpdate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::map", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #8
  %26 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 0
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %71, label %29

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #8
  %31 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #8
  %33 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 2
  call void @_ZNK2ui10AXTreeData8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"struct.ui::AXTreeData"* %33) #8
  %34 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %5, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0)) #8, !noalias !3
  %35 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 %35, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #8, !noalias !3
  %36 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #8, !noalias !6
  %37 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 %37, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #8, !noalias !6
  %38 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = zext i8 %40 to i64
  %47 = select i1 %41, i8* %43, i8* %30
  %48 = select i1 %41, i64 %45, i64 %46
  %49 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %47, i64 %48) #8
  %50 = load i8, i8* %39, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %29
  %53 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %53) #10
  br label %54

54:                                               ; preds = %29, %52
  %55 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #10
  br label %62

62:                                               ; preds = %54, %59
  %63 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #10
  br label %70

70:                                               ; preds = %62, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #8
  br label %71

71:                                               ; preds = %2, %70
  %72 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %116, label %75

75:                                               ; preds = %71
  %76 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #8
  %77 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #8
  %78 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #8
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* nonnull sret %8, i32 %73) #8
  %79 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %8, i64 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0)) #8, !noalias !9
  %80 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %80, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #8, !noalias !9
  %81 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #8, !noalias !12
  %82 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %76, i8* align 8 %82, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #8, !noalias !12
  %83 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = zext i8 %85 to i64
  %92 = select i1 %86, i8* %88, i8* %76
  %93 = select i1 %86, i64 %90, i64 %91
  %94 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %92, i64 %93) #8
  %95 = load i8, i8* %84, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %75
  %98 = load i8*, i8** %87, align 8
  call void @_ZdlPv(i8* %98) #10
  br label %99

99:                                               ; preds = %75, %97
  %100 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  call void @_ZdlPv(i8* %106) #10
  br label %107

107:                                              ; preds = %99, %104
  %108 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %114) #10
  br label %115

115:                                              ; preds = %107, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #8
  br label %116

116:                                              ; preds = %71, %115
  %117 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 4
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %161, label %120

120:                                              ; preds = %116
  %121 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #8
  %122 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #8
  %123 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #8
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* nonnull sret %11, i32 %118) #8
  %124 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %11, i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0)) #8, !noalias !15
  %125 = bitcast %"class.std::__1::basic_string"* %124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %122, i8* align 8 %125, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 24, i1 false) #8, !noalias !15
  %126 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #8, !noalias !18
  %127 = bitcast %"class.std::__1::basic_string"* %126 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %121, i8* align 8 %127, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 24, i1 false) #8, !noalias !18
  %128 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %135 = load i64, i64* %134, align 8
  %136 = zext i8 %130 to i64
  %137 = select i1 %131, i8* %133, i8* %121
  %138 = select i1 %131, i64 %135, i64 %136
  %139 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %137, i64 %138) #8
  %140 = load i8, i8* %129, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %120
  %143 = load i8*, i8** %132, align 8
  call void @_ZdlPv(i8* %143) #10
  br label %144

144:                                              ; preds = %120, %142
  %145 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %145, i64 0, i32 1, i32 0
  %147 = load i8, i8* %146, align 1
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %149, label %152

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  call void @_ZdlPv(i8* %151) #10
  br label %152

152:                                              ; preds = %144, %149
  %153 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %153, i64 0, i32 1, i32 0
  %155 = load i8, i8* %154, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  call void @_ZdlPv(i8* %159) #10
  br label %160

160:                                              ; preds = %152, %157
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #8
  br label %161

161:                                              ; preds = %116, %160
  %162 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 6
  %163 = load i32, i32* %162, align 8
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %231, label %165

165:                                              ; preds = %161
  %166 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %166) #8
  %167 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #8
  %168 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #8
  %169 = call i8* @_ZN2ui8ToStringEN2ax5mojom9EventFromE(i32 %163) #8
  %170 = call i64 @strlen(i8* %169) #8
  %171 = icmp ugt i64 %170, -17
  br i1 %171, label %172, label %174

172:                                              ; preds = %165
  %173 = bitcast %"class.std::__1::basic_string"* %14 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %173) #9
  unreachable

174:                                              ; preds = %165
  %175 = icmp ult i64 %170, 23
  br i1 %175, label %184, label %176

176:                                              ; preds = %174
  %177 = add nuw i64 %170, 16
  %178 = and i64 %177, -16
  %179 = call i8* @_Znwm(i64 %178) #10
  %180 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %179, i8** %180, align 8
  %181 = or i64 %178, -9223372036854775808
  %182 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %181, i64* %182, align 8
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %170, i64* %183, align 8
  br label %189

184:                                              ; preds = %174
  %185 = trunc i64 %170 to i8
  %186 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %187 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %186, i64 0, i32 1, i32 0
  store i8 %185, i8* %187, align 1
  %188 = icmp eq i64 %170, 0
  br i1 %188, label %191, label %189

189:                                              ; preds = %184, %176
  %190 = phi i8* [ %179, %176 ], [ %168, %184 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %190, i8* align 1 %169, i64 %170, i1 false) #8
  br label %191

191:                                              ; preds = %184, %189
  %192 = phi i8* [ %168, %184 ], [ %190, %189 ]
  %193 = getelementptr inbounds i8, i8* %192, i64 %170
  store i8 0, i8* %193, align 1
  %194 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %14, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)) #8, !noalias !21
  %195 = bitcast %"class.std::__1::basic_string"* %194 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %167, i8* align 8 %195, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %195, i8 0, i64 24, i1 false) #8, !noalias !21
  %196 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #8, !noalias !24
  %197 = bitcast %"class.std::__1::basic_string"* %196 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %166, i8* align 8 %197, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %197, i8 0, i64 24, i1 false) #8, !noalias !24
  %198 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %199 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %198, i64 0, i32 1, i32 0
  %200 = load i8, i8* %199, align 1
  %201 = icmp slt i8 %200, 0
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  %204 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %205 = load i64, i64* %204, align 8
  %206 = zext i8 %200 to i64
  %207 = select i1 %201, i8* %203, i8* %166
  %208 = select i1 %201, i64 %205, i64 %206
  %209 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %207, i64 %208) #8
  %210 = load i8, i8* %199, align 1
  %211 = icmp slt i8 %210, 0
  br i1 %211, label %212, label %214

212:                                              ; preds = %191
  %213 = load i8*, i8** %202, align 8
  call void @_ZdlPv(i8* %213) #10
  br label %214

214:                                              ; preds = %191, %212
  %215 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %216 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %215, i64 0, i32 1, i32 0
  %217 = load i8, i8* %216, align 1
  %218 = icmp slt i8 %217, 0
  br i1 %218, label %219, label %222

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load i8*, i8** %220, align 8
  call void @_ZdlPv(i8* %221) #10
  br label %222

222:                                              ; preds = %214, %219
  %223 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %223, i64 0, i32 1, i32 0
  %225 = load i8, i8* %224, align 1
  %226 = icmp slt i8 %225, 0
  br i1 %226, label %227, label %230

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load i8*, i8** %228, align 8
  call void @_ZdlPv(i8* %229) #10
  br label %230

230:                                              ; preds = %222, %227
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #8
  br label %231

231:                                              ; preds = %161, %230
  %232 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 7
  %233 = load i32, i32* %232, align 4
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %301, label %235

235:                                              ; preds = %231
  %236 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #8
  %237 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %237) #8
  %238 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %238) #8
  %239 = call i8* @_ZN2ui8ToStringEN2ax5mojom6ActionE(i32 %233) #8
  %240 = call i64 @strlen(i8* %239) #8
  %241 = icmp ugt i64 %240, -17
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::basic_string"* %17 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %243) #9
  unreachable

244:                                              ; preds = %235
  %245 = icmp ult i64 %240, 23
  br i1 %245, label %254, label %246

246:                                              ; preds = %244
  %247 = add nuw i64 %240, 16
  %248 = and i64 %247, -16
  %249 = call i8* @_Znwm(i64 %248) #10
  %250 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %249, i8** %250, align 8
  %251 = or i64 %248, -9223372036854775808
  %252 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %251, i64* %252, align 8
  %253 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %240, i64* %253, align 8
  br label %259

254:                                              ; preds = %244
  %255 = trunc i64 %240 to i8
  %256 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %257 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %256, i64 0, i32 1, i32 0
  store i8 %255, i8* %257, align 1
  %258 = icmp eq i64 %240, 0
  br i1 %258, label %261, label %259

259:                                              ; preds = %254, %246
  %260 = phi i8* [ %249, %246 ], [ %238, %254 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %260, i8* align 1 %239, i64 %240, i1 false) #8
  br label %261

261:                                              ; preds = %254, %259
  %262 = phi i8* [ %238, %254 ], [ %260, %259 ]
  %263 = getelementptr inbounds i8, i8* %262, i64 %240
  store i8 0, i8* %263, align 1
  %264 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %17, i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #8, !noalias !27
  %265 = bitcast %"class.std::__1::basic_string"* %264 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %237, i8* align 8 %265, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %265, i8 0, i64 24, i1 false) #8, !noalias !27
  %266 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #8, !noalias !30
  %267 = bitcast %"class.std::__1::basic_string"* %266 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %236, i8* align 8 %267, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %267, i8 0, i64 24, i1 false) #8, !noalias !30
  %268 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %269 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %268, i64 0, i32 1, i32 0
  %270 = load i8, i8* %269, align 1
  %271 = icmp slt i8 %270, 0
  %272 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load i8*, i8** %272, align 8
  %274 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %275 = load i64, i64* %274, align 8
  %276 = zext i8 %270 to i64
  %277 = select i1 %271, i8* %273, i8* %236
  %278 = select i1 %271, i64 %275, i64 %276
  %279 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %277, i64 %278) #8
  %280 = load i8, i8* %269, align 1
  %281 = icmp slt i8 %280, 0
  br i1 %281, label %282, label %284

282:                                              ; preds = %261
  %283 = load i8*, i8** %272, align 8
  call void @_ZdlPv(i8* %283) #10
  br label %284

284:                                              ; preds = %261, %282
  %285 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %286 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %285, i64 0, i32 1, i32 0
  %287 = load i8, i8* %286, align 1
  %288 = icmp slt i8 %287, 0
  br i1 %288, label %289, label %292

289:                                              ; preds = %284
  %290 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = load i8*, i8** %290, align 8
  call void @_ZdlPv(i8* %291) #10
  br label %292

292:                                              ; preds = %284, %289
  %293 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %294 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %293, i64 0, i32 1, i32 0
  %295 = load i8, i8* %294, align 1
  %296 = icmp slt i8 %295, 0
  br i1 %296, label %297, label %300

297:                                              ; preds = %292
  %298 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = load i8*, i8** %298, align 8
  call void @_ZdlPv(i8* %299) #10
  br label %300

300:                                              ; preds = %292, %297
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %238) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %237) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #8
  br label %301

301:                                              ; preds = %231, %300
  %302 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 8, i32 0, i32 0
  %303 = load %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"** %302, align 8
  %304 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 8, i32 0, i32 1
  %305 = load %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"** %304, align 8
  %306 = icmp eq %"struct.ui::AXEventIntent"* %303, %305
  br i1 %306, label %359, label %307

307:                                              ; preds = %301
  %308 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0)) #8
  %309 = load %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"** %302, align 8
  %310 = load %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"** %304, align 8
  %311 = icmp eq %"struct.ui::AXEventIntent"* %309, %310
  br i1 %311, label %326, label %312

312:                                              ; preds = %307
  %313 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %314 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %315 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %316 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %317 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %316, i64 0, i32 1, i32 0
  %318 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %320 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %321 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %320, i64 0, i32 1, i32 0
  %322 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %324 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %323, i64 0, i32 1, i32 0
  %325 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %328

326:                                              ; preds = %356, %307
  %327 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #8
  br label %359

328:                                              ; preds = %312, %356
  %329 = phi %"struct.ui::AXEventIntent"* [ %309, %312 ], [ %357, %356 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %313) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %314) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %315) #8
  call void @_ZNK2ui13AXEventIntent8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %20, %"struct.ui::AXEventIntent"* %329) #8
  %330 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %20, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)) #8, !noalias !33
  %331 = bitcast %"class.std::__1::basic_string"* %330 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %314, i8* align 8 %331, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %331, i8 0, i64 24, i1 false) #8, !noalias !33
  %332 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #8, !noalias !36
  %333 = bitcast %"class.std::__1::basic_string"* %332 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %313, i8* align 8 %333, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %333, i8 0, i64 24, i1 false) #8, !noalias !36
  %334 = load i8, i8* %317, align 1
  %335 = icmp slt i8 %334, 0
  %336 = load i8*, i8** %318, align 8
  %337 = load i64, i64* %319, align 8
  %338 = zext i8 %334 to i64
  %339 = select i1 %335, i8* %336, i8* %313
  %340 = select i1 %335, i64 %337, i64 %338
  %341 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %339, i64 %340) #8
  %342 = load i8, i8* %317, align 1
  %343 = icmp slt i8 %342, 0
  br i1 %343, label %344, label %346

344:                                              ; preds = %328
  %345 = load i8*, i8** %318, align 8
  call void @_ZdlPv(i8* %345) #10
  br label %346

346:                                              ; preds = %328, %344
  %347 = load i8, i8* %321, align 1
  %348 = icmp slt i8 %347, 0
  br i1 %348, label %349, label %351

349:                                              ; preds = %346
  %350 = load i8*, i8** %322, align 8
  call void @_ZdlPv(i8* %350) #10
  br label %351

351:                                              ; preds = %346, %349
  %352 = load i8, i8* %324, align 1
  %353 = icmp slt i8 %352, 0
  br i1 %353, label %354, label %356

354:                                              ; preds = %351
  %355 = load i8*, i8** %325, align 8
  call void @_ZdlPv(i8* %355) #10
  br label %356

356:                                              ; preds = %351, %354
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %315) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %314) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %313) #8
  %357 = getelementptr inbounds %"struct.ui::AXEventIntent", %"struct.ui::AXEventIntent"* %329, i64 1
  %358 = icmp eq %"struct.ui::AXEventIntent"* %357, %310
  br i1 %358, label %326, label %328

359:                                              ; preds = %326, %301
  %360 = bitcast %"class.std::__1::map"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %360) #8
  %361 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %21, i64 0, i32 0, i32 0
  %362 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %21, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %363 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %21, i64 0, i32 0, i32 2, i32 0, i32 0
  %364 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  %365 = bitcast %"class.std::__1::__tree_node_base"** %362 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %365, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %364, %"class.std::__1::__tree_end_node"** %361, align 8
  %366 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 5, i32 0, i32 0
  %367 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %366, align 8
  %368 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 5, i32 0, i32 1
  %369 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %368, align 8
  %370 = icmp eq %"struct.ui::AXNodeData"* %367, %369
  br i1 %370, label %390, label %371

371:                                              ; preds = %359
  %372 = bitcast %"class.std::__1::__tree_end_node"* %364 to %"class.std::__1::__tree_node"**
  %373 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %374 = bitcast %"class.std::__1::map"* %21 to i64*
  %375 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %376 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %377 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %378 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %379 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %380 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %379, i64 0, i32 1, i32 0
  %381 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %382 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %383 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %384 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %383, i64 0, i32 1, i32 0
  %385 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %386 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %387 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %388 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %387, i64 0, i32 1, i32 0
  %389 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %393

390:                                              ; preds = %524, %359
  %391 = phi %"class.std::__1::__tree_node"* [ null, %359 ], [ %527, %524 ]
  %392 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %21, i64 0, i32 0
  call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* nonnull %392, %"class.std::__1::__tree_node"* %391) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %360) #8
  ret void

393:                                              ; preds = %524, %371
  %394 = phi %"class.std::__1::__tree_node"* [ null, %371 ], [ %527, %524 ]
  %395 = phi %"struct.ui::AXNodeData"* [ %367, %371 ], [ %525, %524 ]
  %396 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %395, i64 0, i32 1
  %397 = icmp eq %"class.std::__1::__tree_node"* %394, null
  br i1 %397, label %426, label %398

398:                                              ; preds = %393
  %399 = load i32, i32* %396, align 4
  br label %400

400:                                              ; preds = %422, %398
  %401 = phi %"class.std::__1::__tree_node"* [ %425, %422 ], [ %394, %398 ]
  %402 = phi %"class.std::__1::__tree_node_base"** [ %424, %422 ], [ %362, %398 ]
  %403 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %401, i64 0, i32 1, i32 0, i32 0
  %404 = load i32, i32* %403, align 4
  %405 = icmp slt i32 %399, %404
  br i1 %405, label %406, label %412

406:                                              ; preds = %400
  %407 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %401, i64 0, i32 0, i32 0, i32 0
  %408 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %407, align 8
  %409 = icmp eq %"class.std::__1::__tree_node_base"* %408, null
  br i1 %409, label %410, label %422

410:                                              ; preds = %406
  %411 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %401, i64 0, i32 0, i32 0
  br label %426

412:                                              ; preds = %400
  %413 = icmp slt i32 %404, %399
  br i1 %413, label %414, label %420

414:                                              ; preds = %412
  %415 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %401, i64 0, i32 0, i32 1
  %416 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %415, align 8
  %417 = icmp eq %"class.std::__1::__tree_node_base"* %416, null
  br i1 %417, label %418, label %422

418:                                              ; preds = %414
  %419 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %401, i64 0, i32 0, i32 0
  br label %426

420:                                              ; preds = %412
  %421 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %401, i64 0, i32 0, i32 0
  br label %426

422:                                              ; preds = %414, %406
  %423 = phi %"class.std::__1::__tree_node_base"* [ %408, %406 ], [ %416, %414 ]
  %424 = phi %"class.std::__1::__tree_node_base"** [ %407, %406 ], [ %415, %414 ]
  %425 = bitcast %"class.std::__1::__tree_node_base"* %423 to %"class.std::__1::__tree_node"*
  br label %400

426:                                              ; preds = %393, %420, %418, %410
  %427 = phi %"class.std::__1::__tree_end_node"* [ %411, %410 ], [ %419, %418 ], [ %421, %420 ], [ %364, %393 ]
  %428 = phi %"class.std::__1::__tree_node_base"** [ %407, %410 ], [ %415, %418 ], [ %402, %420 ], [ %373, %393 ]
  %429 = bitcast %"class.std::__1::__tree_node_base"** %428 to %"class.std::__1::__tree_node"**
  %430 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %429, align 8
  %431 = icmp eq %"class.std::__1::__tree_node"* %430, null
  br i1 %431, label %432, label %456

432:                                              ; preds = %426
  %433 = call i8* @_Znwm(i64 40) #10, !noalias !39
  %434 = getelementptr inbounds i8, i8* %433, i64 28
  %435 = bitcast i8* %434 to i32*
  %436 = load i32, i32* %396, align 4, !noalias !39
  store i32 %436, i32* %435, align 4, !noalias !39
  %437 = getelementptr inbounds i8, i8* %433, i64 32
  %438 = bitcast i8* %437 to i32*
  store i32 0, i32* %438, align 4, !noalias !39
  %439 = bitcast i8* %433 to %"class.std::__1::__tree_node"*
  %440 = bitcast i8* %433 to %"class.std::__1::__tree_node_base"*
  %441 = getelementptr inbounds i8, i8* %433, i64 16
  %442 = bitcast i8* %441 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %433, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %427, %"class.std::__1::__tree_end_node"** %442, align 8
  %443 = bitcast %"class.std::__1::__tree_node_base"** %428 to i8**
  store i8* %433, i8** %443, align 8
  %444 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %361, align 8
  %445 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %444, i64 0, i32 0
  %446 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %445, align 8
  %447 = icmp eq %"class.std::__1::__tree_node_base"* %446, null
  br i1 %447, label %451, label %448

448:                                              ; preds = %432
  %449 = ptrtoint %"class.std::__1::__tree_node_base"* %446 to i64
  store i64 %449, i64* %374, align 8
  %450 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %428, align 8
  br label %451

451:                                              ; preds = %448, %432
  %452 = phi %"class.std::__1::__tree_node_base"* [ %440, %432 ], [ %450, %448 ]
  %453 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %362, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %453, %"class.std::__1::__tree_node_base"* %452) #8
  %454 = load i64, i64* %363, align 8
  %455 = add i64 %454, 1
  store i64 %455, i64* %363, align 8
  br label %456

456:                                              ; preds = %426, %451
  %457 = phi %"class.std::__1::__tree_node"* [ %439, %451 ], [ %430, %426 ]
  %458 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %457, i64 0, i32 1, i32 0, i32 1
  %459 = load i32, i32* %458, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %375) #8
  %460 = shl nsw i32 %459, 1
  %461 = sext i32 %460 to i64
  %462 = icmp ugt i32 %460, -17
  br i1 %462, label %463, label %465

463:                                              ; preds = %456
  %464 = bitcast %"class.std::__1::basic_string"* %22 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %464) #9
  unreachable

465:                                              ; preds = %456
  %466 = icmp ult i32 %460, 23
  br i1 %466, label %472, label %467

467:                                              ; preds = %465
  %468 = add nuw nsw i64 %461, 16
  %469 = and i64 %468, -16
  %470 = call i8* @_Znwm(i64 %469) #10
  store i8* %470, i8** %376, align 8
  %471 = or i64 %469, -9223372036854775808
  store i64 %471, i64* %377, align 8
  store i64 %461, i64* %378, align 8
  br label %475

472:                                              ; preds = %465
  %473 = trunc i32 %460 to i8
  store i8 %473, i8* %380, align 1
  %474 = icmp eq i32 %459, 0
  br i1 %474, label %477, label %475

475:                                              ; preds = %472, %467
  %476 = phi i8* [ %470, %467 ], [ %375, %472 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %476, i8 32, i64 %461, i1 false) #8
  br label %477

477:                                              ; preds = %472, %475
  %478 = phi i8* [ %375, %472 ], [ %476, %475 ]
  %479 = getelementptr inbounds i8, i8* %478, i64 %461
  store i8 0, i8* %479, align 1
  %480 = load i8, i8* %380, align 1
  %481 = icmp slt i8 %480, 0
  %482 = load i8*, i8** %376, align 8
  %483 = load i64, i64* %378, align 8
  %484 = zext i8 %480 to i64
  %485 = select i1 %481, i8* %482, i8* %375
  %486 = select i1 %481, i64 %483, i64 %484
  %487 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %485, i64 %486) #8
  %488 = load i8, i8* %380, align 1
  %489 = icmp slt i8 %488, 0
  br i1 %489, label %490, label %492

490:                                              ; preds = %477
  %491 = load i8*, i8** %376, align 8
  call void @_ZdlPv(i8* %491) #10
  br label %492

492:                                              ; preds = %477, %490
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %375) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %381) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %382) #8
  %493 = bitcast %"struct.ui::AXNodeData"* %395 to void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)***
  %494 = load void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)**, void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)*** %493, align 8
  %495 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)*, void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)** %494, i64 2
  %496 = load void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)*, void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)** %495, align 8
  call void %496(%"class.std::__1::basic_string"* nonnull sret %24, %"struct.ui::AXNodeData"* %395) #8
  %497 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #8, !noalias !42
  %498 = bitcast %"class.std::__1::basic_string"* %497 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %381, i8* align 8 %498, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %498, i8 0, i64 24, i1 false) #8, !noalias !42
  %499 = load i8, i8* %384, align 1
  %500 = icmp slt i8 %499, 0
  %501 = load i8*, i8** %385, align 8
  %502 = load i64, i64* %386, align 8
  %503 = zext i8 %499 to i64
  %504 = select i1 %500, i8* %501, i8* %381
  %505 = select i1 %500, i64 %502, i64 %503
  %506 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %504, i64 %505) #8
  %507 = load i8, i8* %384, align 1
  %508 = icmp slt i8 %507, 0
  br i1 %508, label %509, label %511

509:                                              ; preds = %492
  %510 = load i8*, i8** %385, align 8
  call void @_ZdlPv(i8* %510) #10
  br label %511

511:                                              ; preds = %492, %509
  %512 = load i8, i8* %388, align 1
  %513 = icmp slt i8 %512, 0
  br i1 %513, label %514, label %516

514:                                              ; preds = %511
  %515 = load i8*, i8** %389, align 8
  call void @_ZdlPv(i8* %515) #10
  br label %516

516:                                              ; preds = %511, %514
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %382) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %381) #8
  %517 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %395, i64 0, i32 12, i32 0, i32 0
  %518 = load i32*, i32** %517, align 8
  %519 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %395, i64 0, i32 12, i32 0, i32 1
  %520 = load i32*, i32** %519, align 8
  %521 = icmp eq i32* %518, %520
  br i1 %521, label %524, label %522

522:                                              ; preds = %516
  %523 = add nsw i32 %459, 1
  br label %528

524:                                              ; preds = %588, %516
  %525 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %395, i64 1
  %526 = icmp eq %"struct.ui::AXNodeData"* %525, %369
  %527 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %372, align 8
  br i1 %526, label %390, label %393

528:                                              ; preds = %522, %588
  %529 = phi i32* [ %518, %522 ], [ %591, %588 ]
  %530 = load i32, i32* %529, align 4
  %531 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %372, align 8
  %532 = icmp eq %"class.std::__1::__tree_node"* %531, null
  br i1 %532, label %559, label %533

533:                                              ; preds = %528, %555
  %534 = phi %"class.std::__1::__tree_node"* [ %558, %555 ], [ %531, %528 ]
  %535 = phi %"class.std::__1::__tree_node_base"** [ %557, %555 ], [ %362, %528 ]
  %536 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %534, i64 0, i32 1, i32 0, i32 0
  %537 = load i32, i32* %536, align 4
  %538 = icmp slt i32 %530, %537
  br i1 %538, label %539, label %545

539:                                              ; preds = %533
  %540 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %534, i64 0, i32 0, i32 0, i32 0
  %541 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %540, align 8
  %542 = icmp eq %"class.std::__1::__tree_node_base"* %541, null
  br i1 %542, label %543, label %555

543:                                              ; preds = %539
  %544 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %534, i64 0, i32 0, i32 0
  br label %559

545:                                              ; preds = %533
  %546 = icmp slt i32 %537, %530
  br i1 %546, label %547, label %553

547:                                              ; preds = %545
  %548 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %534, i64 0, i32 0, i32 1
  %549 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %548, align 8
  %550 = icmp eq %"class.std::__1::__tree_node_base"* %549, null
  br i1 %550, label %551, label %555

551:                                              ; preds = %547
  %552 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %534, i64 0, i32 0, i32 0
  br label %559

553:                                              ; preds = %545
  %554 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %534, i64 0, i32 0, i32 0
  br label %559

555:                                              ; preds = %547, %539
  %556 = phi %"class.std::__1::__tree_node_base"* [ %541, %539 ], [ %549, %547 ]
  %557 = phi %"class.std::__1::__tree_node_base"** [ %540, %539 ], [ %548, %547 ]
  %558 = bitcast %"class.std::__1::__tree_node_base"* %556 to %"class.std::__1::__tree_node"*
  br label %533

559:                                              ; preds = %528, %553, %551, %543
  %560 = phi %"class.std::__1::__tree_end_node"* [ %544, %543 ], [ %552, %551 ], [ %554, %553 ], [ %364, %528 ]
  %561 = phi %"class.std::__1::__tree_node_base"** [ %540, %543 ], [ %548, %551 ], [ %535, %553 ], [ %373, %528 ]
  %562 = bitcast %"class.std::__1::__tree_node_base"** %561 to %"class.std::__1::__tree_node"**
  %563 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %562, align 8
  %564 = icmp eq %"class.std::__1::__tree_node"* %563, null
  br i1 %564, label %565, label %588

565:                                              ; preds = %559
  %566 = call i8* @_Znwm(i64 40) #10, !noalias !45
  %567 = getelementptr inbounds i8, i8* %566, i64 28
  %568 = bitcast i8* %567 to i32*
  store i32 %530, i32* %568, align 4, !noalias !45
  %569 = getelementptr inbounds i8, i8* %566, i64 32
  %570 = bitcast i8* %569 to i32*
  store i32 0, i32* %570, align 4, !noalias !45
  %571 = bitcast i8* %566 to %"class.std::__1::__tree_node"*
  %572 = bitcast i8* %566 to %"class.std::__1::__tree_node_base"*
  %573 = getelementptr inbounds i8, i8* %566, i64 16
  %574 = bitcast i8* %573 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %566, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %560, %"class.std::__1::__tree_end_node"** %574, align 8
  %575 = bitcast %"class.std::__1::__tree_node_base"** %561 to i8**
  store i8* %566, i8** %575, align 8
  %576 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %361, align 8
  %577 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %576, i64 0, i32 0
  %578 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %577, align 8
  %579 = icmp eq %"class.std::__1::__tree_node_base"* %578, null
  br i1 %579, label %583, label %580

580:                                              ; preds = %565
  %581 = ptrtoint %"class.std::__1::__tree_node_base"* %578 to i64
  store i64 %581, i64* %374, align 8
  %582 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %561, align 8
  br label %583

583:                                              ; preds = %580, %565
  %584 = phi %"class.std::__1::__tree_node_base"* [ %572, %565 ], [ %582, %580 ]
  %585 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %362, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %585, %"class.std::__1::__tree_node_base"* %584) #8
  %586 = load i64, i64* %363, align 8
  %587 = add i64 %586, 1
  store i64 %587, i64* %363, align 8
  br label %588

588:                                              ; preds = %559, %583
  %589 = phi %"class.std::__1::__tree_node"* [ %571, %583 ], [ %563, %559 ]
  %590 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %589, i64 0, i32 1, i32 0, i32 1
  store i32 %523, i32* %590, align 4
  %591 = getelementptr inbounds i32, i32* %529, i64 1
  %592 = icmp eq i32* %591, %520
  br i1 %592, label %524, label %528
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK2ui10AXTreeData8ToStringEv(%"class.std::__1::basic_string"* sret, %"struct.ui::AXTreeData"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

declare i8* @_ZN2ui8ToStringEN2ax5mojom9EventFromE(i32) local_unnamed_addr #1

declare i8* @_ZN2ui8ToStringEN2ax5mojom6ActionE(i32) local_unnamed_addr #1

declare void @_ZNK2ui13AXEventIntent8ToStringEv(%"class.std::__1::basic_string"* sret, %"struct.ui::AXEventIntent"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui22TreeUpdatesCanBeMergedERKNS_12AXTreeUpdateES2_(%"struct.ui::AXTreeUpdate"* dereferenceable(320), %"struct.ui::AXTreeUpdate"* dereferenceable(320)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %20

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 2
  %13 = tail call zeroext i1 @_ZN2uineERKNS_10AXTreeDataES2_(%"struct.ui::AXTreeData"* dereferenceable(248) %11, %"struct.ui::AXTreeData"* dereferenceable(248) %12) #8
  br i1 %13, label %20, label %14

14:                                               ; preds = %6, %10
  %15 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br label %20

20:                                               ; preds = %14, %10, %2
  %21 = phi i1 [ false, %2 ], [ false, %10 ], [ %19, %14 ]
  ret i1 %21
}

declare zeroext i1 @_ZN2uineERKNS_10AXTreeDataES2_(%"struct.ui::AXTreeData"* dereferenceable(248), %"struct.ui::AXTreeData"* dereferenceable(248)) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2ui13AXEventIntentD1Ev(%"struct.ui::AXEventIntent"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"* dereferenceable(264)) unnamed_addr #1

declare void @_ZN2ui13AXEventIntentC1ERKS0_(%"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"* dereferenceable(24)) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #8
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #8
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_: argument 0"}
!41 = distinct !{!41, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_: argument 0"}
!47 = distinct !{!47, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_"}
