; ModuleID = '../../third_party/ots/src/src/glyf.cc'
source_filename = "../../third_party/ots/src/src/glyf.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.ots::OpenTypeGLYF" = type { %"class.ots::Table.base", %"class.ots::OpenTypeMAXP"*, %"class.std::__1::vector" }
%"class.ots::Table.base" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8 }>
%"struct.ots::Font" = type { %"struct.ots::FontFile"*, i32, i16, i16, i16, i16, %"class.std::__1::map.15" }
%"struct.ots::FontFile" = type { %"class.ots::OTSContext"*, %"class.std::__1::map", %"class.std::__1::map.4" }
%"class.ots::OTSContext" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.15" = type { %"class.std::__1::__tree.16" }
%"class.std::__1::__tree.16" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.ots::OpenTypeMAXP" = type { %"class.ots::Table.base", i16, i8, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::pair" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::pair"* }
%"class.ots::Buffer" = type { i8*, i64, i64 }
%"class.ots::Table" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.ots::OpenTypeGLYF::ComponentPointCount" = type { i32, %"class.std::__1::vector.29" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"struct.ots::OpenTypeGLYF::GidAtLevel"*, %"struct.ots::OpenTypeGLYF::GidAtLevel"*, %"class.std::__1::__compressed_pair.31" }
%"struct.ots::OpenTypeGLYF::GidAtLevel" = type { i16, i32 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.ots::OpenTypeGLYF::GidAtLevel"* }
%"class.ots::OpenTypeHEAD" = type <{ %"class.ots::Table.base", [3 x i8], i32, i16, i16, [4 x i8], i64, i64, i16, i16, i16, i16, i16, i16, i16, [2 x i8] }>
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { i32*, i32*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { i32* }
%"class.ots::OTSStream" = type <{ i32 (...)**, i32, [4 x i8] }>

$_ZN3ots12OpenTypeGLYFD2Ev = comdat any

$_ZN3ots12OpenTypeGLYFD0Ev = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

@.str = private unnamed_addr constant [16 x i8] c"Can't read flag\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"Bad glyph flag (%d), bit 6 must be set to zero for flag %d\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"Count too high (%d + 1 >= %d)\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"Can't read repeat value\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"Zero repeat\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"Count too high (%d >= %d)\00", align 1
@.str.6 = private unnamed_addr constant [56 x i8] c"Bad glyph flag (%d), reserved bit 7 must be set to zero\00", align 1
@.str.7 = private unnamed_addr constant [60 x i8] c"Glyph coordinates length bigger than glyph length (%d > %d)\00", align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"Can't read contour index %d\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"Bad contour index %d\00", align 1
@.str.10 = private unnamed_addr constant [38 x i8] c"Decreasing contour index %d + 1 <= %d\00", align 1
@.str.11 = private unnamed_addr constant [66 x i8] c"Number of contour points exceeds maxp maxPoints, adjusting limit.\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"Can't read bytecode length\00", align 1
@.str.13 = private unnamed_addr constant [65 x i8] c"Bytecode length is bigger than maxp.maxSizeOfInstructions %d: %d\00", align 1
@.str.14 = private unnamed_addr constant [33 x i8] c"Can't read bytecode of length %d\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"Failed to parse glyph flags %d\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"Glyph too short %d\00", align 1
@.str.17 = private unnamed_addr constant [36 x i8] c"Extra bytes at end of the glyph: %d\00", align 1
@.str.18 = private unnamed_addr constant [47 x i8] c"Can't read composite glyph flags or glyphIndex\00", align 1
@.str.19 = private unnamed_addr constant [45 x i8] c"Invalid glyph id used in composite glyph: %d\00", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c"Can't read argument1 or argument2\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"Can't read scale\00", align 1
@.str.22 = private unnamed_addr constant [28 x i8] c"Can't read xscale or yscale\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"Can't read transform\00", align 1
@.str.24 = private unnamed_addr constant [29 x i8] c"Can't read instructions size\00", align 1
@.str.25 = private unnamed_addr constant [56 x i8] c"Missing maxp or loca or head table needed by glyf table\00", align 1
@.str.26 = private unnamed_addr constant [37 x i8] c"Invalid glyph offsets size %ld != %d\00", align 1
@.str.27 = private unnamed_addr constant [27 x i8] c"Can't read glyph %d header\00", align 1
@.str.28 = private unnamed_addr constant [38 x i8] c"Bad number of contours %d in glyph %d\00", align 1
@.str.29 = private unnamed_addr constant [31 x i8] c"bad xmin/xmax/ymin/ymax values\00", align 1
@.str.30 = private unnamed_addr constant [61 x i8] c"Bad bounding box values bl=(%d, %d), tr=(%d, %d) in glyph %d\00", align 1
@.str.31 = private unnamed_addr constant [25 x i8] c"Failed to parse glyph %d\00", align 1
@.str.32 = private unnamed_addr constant [45 x i8] c"Error validating component points and depth.\00", align 1
@.str.33 = private unnamed_addr constant [67 x i8] c"Illegal composite points value exceeding 0xFFFF for base glyph %d.\00", align 1
@.str.34 = private unnamed_addr constant [99 x i8] c"Number of composite points in glyph %d exceeds maxp maxCompositePoints: %d vs %d, adjusting limit.\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] zeroinitializer, align 1
@_ZZN3ots12OpenTypeGLYF5ParseEPKhmE5kZero = internal constant i8 0, align 1
@.str.36 = private unnamed_addr constant [25 x i8] c"Can't read glyph header.\00", align 1
@.str.37 = private unnamed_addr constant [36 x i8] c"Bad number of contours %d in glyph.\00", align 1
@.str.38 = private unnamed_addr constant [62 x i8] c"Illegal component depth exceeding 0xFFFF in base glyph id %d.\00", align 1
@.str.39 = private unnamed_addr constant [80 x i8] c"Component depth exceeds maxp maxComponentDepth in glyph %d, adjust limit to %d.\00", align 1
@.str.40 = private unnamed_addr constant [33 x i8] c"Failed to parse component glyph.\00", align 1
@.str.41 = private unnamed_addr constant [32 x i8] c"Glyph %d offset %d too high %ld\00", align 1
@.str.42 = private unnamed_addr constant [26 x i8] c"Glyph %d length (%d < 0)!\00", align 1
@.str.43 = private unnamed_addr constant [28 x i8] c"Glyph %d length %d too high\00", align 1
@.str.44 = private unnamed_addr constant [25 x i8] c"Falied to write glyph %d\00", align 1
@_ZTVN3ots12OpenTypeGLYFE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ots::OpenTypeGLYF"*)* @_ZN3ots12OpenTypeGLYFD2Ev to i8*), i8* bitcast (void (%"class.ots::OpenTypeGLYF"*)* @_ZN3ots12OpenTypeGLYFD0Ev to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeGLYF"*, i8*, i64)* @_ZN3ots12OpenTypeGLYF5ParseEPKhm to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeGLYF"*, %"class.ots::OTSStream"*)* @_ZN3ots12OpenTypeGLYF9SerializeEPNS_9OTSStreamE to i8*), i8* bitcast (i1 (%"class.ots::Table"*)* @_ZN3ots5Table15ShouldSerializeEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeGLYF24ParseFlagsForSimpleGlyphERNS_6BufferEjPjS3_(%"class.ots::OpenTypeGLYF"*, %"class.ots::Buffer"* nocapture dereferenceable(24), i32, i32* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  %9 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %8, %10
  br i1 %11, label %12, label %15

12:                                               ; preds = %5
  %13 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %14 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %13, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)) #9
  br label %96

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %7
  %19 = load i8, i8* %18, align 1
  store i64 %8, i64* %6, align 8
  %20 = zext i8 %19 to i32
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %15
  %24 = lshr i32 %20, 3
  %25 = and i32 %24, 2
  %26 = xor i32 %25, 2
  br label %27

27:                                               ; preds = %23, %15
  %28 = phi i32 [ 1, %15 ], [ %26, %23 ]
  %29 = and i32 %20, 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = add nuw nsw i32 %28, 1
  br label %38

33:                                               ; preds = %27
  %34 = and i32 %20, 32
  %35 = icmp eq i32 %34, 0
  %36 = add nuw nsw i32 %28, 2
  %37 = select i1 %35, i32 %36, i32 %28
  br label %38

38:                                               ; preds = %33, %31
  %39 = phi i32 [ %32, %31 ], [ %37, %33 ]
  %40 = and i32 %20, 64
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %48, label %42

42:                                               ; preds = %38
  %43 = load i32, i32* %3, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %42
  %46 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %47 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %46, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 %20, i32 %43) #9
  br label %96

48:                                               ; preds = %42, %38
  %49 = and i8 %19, 8
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %81, label %51

51:                                               ; preds = %48
  %52 = load i32, i32* %3, align 4
  %53 = add i32 %52, 1
  %54 = icmp ult i32 %53, %2
  br i1 %54, label %58, label %55

55:                                               ; preds = %51
  %56 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %57 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %56, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i32 %52, i32 %2) #9
  br label %96

58:                                               ; preds = %51
  %59 = add i64 %7, 2
  %60 = icmp ugt i64 %59, %10
  br i1 %60, label %61, label %64

61:                                               ; preds = %58
  %62 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %63 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %62, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %96

64:                                               ; preds = %58
  %65 = getelementptr inbounds i8, i8* %17, i64 %8
  %66 = load i8, i8* %65, align 1
  store i64 %59, i64* %6, align 8
  %67 = zext i8 %66 to i32
  %68 = icmp eq i8 %66, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %71 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %70, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)) #9
  br label %96

72:                                               ; preds = %64
  %73 = mul nsw i32 %39, %67
  %74 = add nsw i32 %73, %39
  %75 = load i32, i32* %3, align 4
  %76 = add i32 %75, %67
  store i32 %76, i32* %3, align 4
  %77 = icmp ult i32 %76, %2
  br i1 %77, label %81, label %78

78:                                               ; preds = %72
  %79 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %80 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %79, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i32 %76, i32 %2) #9
  br label %96

81:                                               ; preds = %72, %48
  %82 = phi i32 [ %39, %48 ], [ %74, %72 ]
  %83 = icmp slt i8 %19, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %81
  %85 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %86 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %85, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.6, i64 0, i64 0), i32 %20) #9
  br label %96

87:                                               ; preds = %81
  %88 = load i32, i32* %4, align 4
  %89 = add i32 %88, %82
  store i32 %89, i32* %4, align 4
  %90 = load i64, i64* %9, align 8
  %91 = zext i32 %89 to i64
  %92 = icmp ult i64 %90, %91
  br i1 %92, label %93, label %96

93:                                               ; preds = %87
  %94 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %95 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %94, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.7, i64 0, i64 0), i32 %89, i64 %90) #9
  br label %96

96:                                               ; preds = %61, %78, %69, %45, %55, %84, %93, %87, %12
  %97 = phi i1 [ %14, %12 ], [ %47, %45 ], [ %57, %55 ], [ %86, %84 ], [ %95, %93 ], [ true, %87 ], [ %63, %61 ], [ %80, %78 ], [ %71, %69 ]
  ret i1 %97
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeGLYF16ParseSimpleGlyphERNS_6BufferEs(%"class.ots::OpenTypeGLYF"*, %"class.ots::Buffer"* nocapture dereferenceable(24), i16 signext) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = sext i16 %2 to i32
  %7 = icmp sgt i16 %2, 0
  br i1 %7, label %8, label %46

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 2
  %10 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 1
  %11 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 0
  %12 = load i64, i64* %9, align 8
  %13 = load i64, i64* %10, align 8
  br label %14

14:                                               ; preds = %42, %8
  %15 = phi i64 [ %12, %8 ], [ %18, %42 ]
  %16 = phi i32 [ 0, %8 ], [ %44, %42 ]
  %17 = phi i16 [ 0, %8 ], [ %43, %42 ]
  %18 = add i64 %15, 2
  %19 = icmp ugt i64 %18, %13
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %22 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %21, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i32 %16) #9
  br label %229

23:                                               ; preds = %14
  %24 = load i8*, i8** %11, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 %15
  %26 = bitcast i8* %25 to i16*
  %27 = load i16, i16* %26, align 1
  %28 = tail call i16 @llvm.bswap.i16(i16 %27) #9
  store i64 %18, i64* %9, align 8
  %29 = icmp eq i16 %27, -1
  br i1 %29, label %30, label %33

30:                                               ; preds = %23
  %31 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %32 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %31, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i32 %16) #9
  br label %229

33:                                               ; preds = %23
  %34 = icmp ne i32 %16, 0
  %35 = icmp ult i16 %28, %17
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %42

37:                                               ; preds = %33
  %38 = zext i16 %28 to i32
  %39 = zext i16 %17 to i32
  %40 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %41 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %40, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0), i32 %38, i32 %39) #9
  br label %229

42:                                               ; preds = %33
  %43 = add nuw i16 %28, 1
  %44 = add nuw nsw i32 %16, 1
  %45 = icmp eq i32 %44, %6
  br i1 %45, label %46, label %14

46:                                               ; preds = %42, %3
  %47 = phi i16 [ 0, %3 ], [ %43, %42 ]
  %48 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 1
  %49 = load %"class.ots::OpenTypeMAXP"*, %"class.ots::OpenTypeMAXP"** %48, align 8
  %50 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %49, i64 0, i32 2
  %51 = load i8, i8* %50, align 4, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %62, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %49, i64 0, i32 3
  %55 = load i16, i16* %54, align 2
  %56 = icmp ugt i16 %47, %55
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %59 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %58, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.11, i64 0, i64 0)) #9
  %60 = load %"class.ots::OpenTypeMAXP"*, %"class.ots::OpenTypeMAXP"** %48, align 8
  %61 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %60, i64 0, i32 3
  store i16 %47, i16* %61, align 2
  br label %62

62:                                               ; preds = %46, %57, %53
  %63 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 2
  %66 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = icmp ugt i64 %65, %67
  br i1 %68, label %69, label %72

69:                                               ; preds = %62
  %70 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %71 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %70, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0)) #9
  br label %229

72:                                               ; preds = %62
  %73 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 %64
  %76 = bitcast i8* %75 to i16*
  %77 = load i16, i16* %76, align 1
  %78 = tail call i16 @llvm.bswap.i16(i16 %77) #9
  store i64 %65, i64* %63, align 8
  %79 = load %"class.ots::OpenTypeMAXP"*, %"class.ots::OpenTypeMAXP"** %48, align 8
  %80 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %79, i64 0, i32 2
  %81 = load i8, i8* %80, align 4, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %97, label %83

83:                                               ; preds = %72
  %84 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %79, i64 0, i32 13
  %85 = load i16, i16* %84, align 2
  %86 = icmp ult i16 %85, %78
  br i1 %86, label %87, label %97

87:                                               ; preds = %83
  store i16 %78, i16* %84, align 2
  %88 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %89 = load %"class.ots::OpenTypeMAXP"*, %"class.ots::OpenTypeMAXP"** %48, align 8
  %90 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %89, i64 0, i32 13
  %91 = load i16, i16* %90, align 2
  %92 = zext i16 %91 to i32
  %93 = zext i16 %78 to i32
  %94 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %88, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.13, i64 0, i64 0), i32 %92, i32 %93) #9
  %95 = load i64, i64* %63, align 8
  %96 = load i64, i64* %66, align 8
  br label %97

97:                                               ; preds = %72, %87, %83
  %98 = phi i64 [ %67, %72 ], [ %96, %87 ], [ %67, %83 ]
  %99 = phi i64 [ %65, %72 ], [ %95, %87 ], [ %65, %83 ]
  %100 = zext i16 %78 to i64
  %101 = add i64 %99, %100
  %102 = icmp ugt i64 %101, %98
  %103 = sub i64 %98, %100
  %104 = icmp ugt i64 %99, %103
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %110

106:                                              ; preds = %97
  %107 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %108 = zext i16 %78 to i32
  %109 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %107, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0), i32 %108) #9
  br label %229

110:                                              ; preds = %97
  store i64 %101, i64* %63, align 8
  %111 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111) #9
  store i32 0, i32* %4, align 4
  %112 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #9
  store i32 0, i32* %5, align 4
  %113 = zext i16 %47 to i32
  %114 = icmp eq i16 %47, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %110
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #9
  br label %132

116:                                              ; preds = %110, %118
  %117 = call zeroext i1 @_ZN3ots12OpenTypeGLYF24ParseFlagsForSimpleGlyphERNS_6BufferEjPjS3_(%"class.ots::OpenTypeGLYF"* %0, %"class.ots::Buffer"* dereferenceable(24) %1, i32 %113, i32* nonnull %5, i32* nonnull %4)
  br i1 %117, label %118, label %122

118:                                              ; preds = %116
  %119 = load i32, i32* %5, align 4
  %120 = add i32 %119, 1
  store i32 %120, i32* %5, align 4
  %121 = icmp ult i32 %120, %113
  br i1 %121, label %116, label %126

122:                                              ; preds = %116
  %123 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %124 = load i32, i32* %5, align 4
  %125 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %123, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i64 0, i64 0), i32 %124) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #9
  br label %227

126:                                              ; preds = %118
  %127 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #9
  %128 = zext i32 %127 to i64
  %129 = icmp ugt i32 %127, 1073741824
  br i1 %129, label %130, label %132

130:                                              ; preds = %126
  %131 = load i64, i64* %66, align 8
  br label %141

132:                                              ; preds = %115, %126
  %133 = phi i64 [ 0, %115 ], [ %128, %126 ]
  %134 = load i64, i64* %63, align 8
  %135 = add i64 %134, %133
  %136 = load i64, i64* %66, align 8
  %137 = icmp ult i64 %136, %135
  %138 = sub i64 %136, %133
  %139 = icmp ugt i64 %134, %138
  %140 = or i1 %137, %139
  br i1 %140, label %141, label %145

141:                                              ; preds = %130, %132
  %142 = phi i64 [ %131, %130 ], [ %136, %132 ]
  %143 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %144 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %143, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0), i64 %142) #9
  br label %227

145:                                              ; preds = %132
  store i64 %135, i64* %63, align 8
  %146 = sub i64 %136, %135
  %147 = icmp ugt i64 %146, 3
  br i1 %147, label %148, label %152

148:                                              ; preds = %145
  %149 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %150 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %149, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.17, i64 0, i64 0), i64 %146) #9
  %151 = load i64, i64* %63, align 8
  br label %152

152:                                              ; preds = %148, %145
  %153 = phi i64 [ %151, %148 ], [ %135, %145 ]
  %154 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 2
  %155 = bitcast %"class.ots::Buffer"* %1 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 2, i32 0, i32 1
  %158 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %157, align 8
  %159 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %160 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %159, align 8
  %161 = icmp ult %"struct.std::__1::pair"* %158, %160
  %162 = ptrtoint %"struct.std::__1::pair"* %160 to i64
  br i1 %161, label %163, label %169

163:                                              ; preds = %152
  %164 = bitcast %"struct.std::__1::pair"* %158 to i64*
  store i64 %156, i64* %164, align 8
  %165 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %158, i64 0, i32 1
  store i64 %153, i64* %165, align 8
  %166 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %158, i64 1
  %167 = ptrtoint %"struct.std::__1::pair"* %166 to i64
  %168 = bitcast %"struct.std::__1::pair"** %157 to i64*
  store i64 %167, i64* %168, align 8
  br label %227

169:                                              ; preds = %152
  %170 = ptrtoint %"struct.std::__1::pair"* %158 to i64
  %171 = bitcast %"struct.std::__1::pair"** %157 to i64*
  %172 = bitcast %"class.std::__1::vector"* %154 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 %170, %173
  %175 = ashr exact i64 %174, 4
  %176 = add nsw i64 %175, 1
  %177 = icmp ugt i64 %176, 1152921504606846975
  br i1 %177, label %178, label %180

178:                                              ; preds = %169
  %179 = bitcast %"class.std::__1::vector"* %154 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %179) #10
  unreachable

180:                                              ; preds = %169
  %181 = bitcast %"struct.std::__1::pair"** %159 to i64*
  %182 = sub i64 %162, %173
  %183 = ashr exact i64 %182, 4
  %184 = icmp ult i64 %183, 576460752303423487
  br i1 %184, label %185, label %193

185:                                              ; preds = %180
  %186 = ashr exact i64 %182, 3
  %187 = icmp ult i64 %186, %176
  %188 = select i1 %187, i64 %176, i64 %186
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %198, label %190

190:                                              ; preds = %185
  %191 = icmp ugt i64 %188, 1152921504606846975
  br i1 %191, label %192, label %193

192:                                              ; preds = %190
  tail call void @abort() #10
  unreachable

193:                                              ; preds = %190, %180
  %194 = phi i64 [ %188, %190 ], [ 1152921504606846975, %180 ]
  %195 = shl i64 %194, 4
  %196 = tail call i8* @_Znwm(i64 %195) #11
  %197 = bitcast i8* %196 to %"struct.std::__1::pair"*
  br label %198

198:                                              ; preds = %193, %185
  %199 = phi i64 [ %194, %193 ], [ 0, %185 ]
  %200 = phi %"struct.std::__1::pair"* [ %197, %193 ], [ null, %185 ]
  %201 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %200, i64 %175
  %202 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %200, i64 %199
  %203 = ptrtoint %"struct.std::__1::pair"* %202 to i64
  %204 = bitcast %"struct.std::__1::pair"* %201 to i64*
  store i64 %156, i64* %204, align 8
  %205 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %200, i64 %175, i32 1
  store i64 %153, i64* %205, align 8
  %206 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %201, i64 1
  %207 = ptrtoint %"struct.std::__1::pair"* %206 to i64
  %208 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %154, i64 0, i32 0, i32 0
  %209 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %208, align 8
  %210 = load i64, i64* %171, align 8
  %211 = ptrtoint %"struct.std::__1::pair"* %209 to i64
  %212 = sub i64 %210, %211
  %213 = ashr exact i64 %212, 4
  %214 = sub nsw i64 0, %213
  %215 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %201, i64 %214
  %216 = ptrtoint %"struct.std::__1::pair"* %215 to i64
  %217 = icmp sgt i64 %212, 0
  br i1 %217, label %218, label %222

218:                                              ; preds = %198
  %219 = bitcast %"struct.std::__1::pair"* %215 to i8*
  %220 = bitcast %"struct.std::__1::pair"* %209 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %219, i8* align 8 %220, i64 %212, i1 false) #9
  %221 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %208, align 8
  br label %222

222:                                              ; preds = %218, %198
  %223 = phi %"struct.std::__1::pair"* [ %209, %198 ], [ %221, %218 ]
  store i64 %216, i64* %172, align 8
  store i64 %207, i64* %171, align 8
  store i64 %203, i64* %181, align 8
  %224 = icmp eq %"struct.std::__1::pair"* %223, null
  br i1 %224, label %227, label %225

225:                                              ; preds = %222
  %226 = bitcast %"struct.std::__1::pair"* %223 to i8*
  tail call void @_ZdlPv(i8* %226) #11
  br label %227

227:                                              ; preds = %225, %222, %163, %122, %141
  %228 = phi i1 [ %144, %141 ], [ %125, %122 ], [ true, %163 ], [ true, %222 ], [ true, %225 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111) #9
  br label %229

229:                                              ; preds = %69, %106, %227, %20, %37, %30
  %230 = phi i1 [ %22, %20 ], [ %41, %37 ], [ %32, %30 ], [ %228, %227 ], [ %109, %106 ], [ %71, %69 ]
  ret i1 %230
}

declare zeroext i1 @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeGLYF19ParseCompositeGlyphERNS_6BufferEPNS0_19ComponentPointCountE(%"class.ots::OpenTypeGLYF"*, %"class.ots::Buffer"* dereferenceable(24), %"struct.ots::OpenTypeGLYF::ComponentPointCount"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 2
  %5 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 0
  %7 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::ComponentPointCount", %"struct.ots::OpenTypeGLYF::ComponentPointCount"* %2, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::ComponentPointCount", %"struct.ots::OpenTypeGLYF::ComponentPointCount"* %2, i64 0, i32 1, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::ComponentPointCount", %"struct.ots::OpenTypeGLYF::ComponentPointCount"* %2, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"struct.ots::OpenTypeGLYF::GidAtLevel"** %9 to i64*
  %12 = bitcast %"class.std::__1::vector.29"* %8 to i64*
  %13 = bitcast %"struct.ots::OpenTypeGLYF::GidAtLevel"** %10 to i64*
  %14 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %8, i64 0, i32 0, i32 0
  br label %15

15:                                               ; preds = %174, %3
  %16 = load i64, i64* %4, align 8
  %17 = add i64 %16, 2
  %18 = load i64, i64* %5, align 8
  %19 = icmp ugt i64 %17, %18
  br i1 %19, label %28, label %20

20:                                               ; preds = %15
  %21 = load i8*, i8** %6, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 %16
  %23 = bitcast i8* %22 to i16*
  %24 = load i16, i16* %23, align 1
  %25 = tail call i16 @llvm.bswap.i16(i16 %24) #9
  store i64 %17, i64* %4, align 8
  %26 = add i64 %16, 4
  %27 = icmp ugt i64 %26, %18
  br i1 %27, label %28, label %31

28:                                               ; preds = %20, %15
  %29 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %30 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %29, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.18, i64 0, i64 0)) #9
  br label %301

31:                                               ; preds = %20
  %32 = getelementptr inbounds i8, i8* %21, i64 %17
  %33 = bitcast i8* %32 to i16*
  %34 = load i16, i16* %33, align 1
  %35 = tail call i16 @llvm.bswap.i16(i16 %34) #9
  store i64 %26, i64* %4, align 8
  %36 = load %"class.ots::OpenTypeMAXP"*, %"class.ots::OpenTypeMAXP"** %7, align 8
  %37 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %36, i64 0, i32 1
  %38 = load i16, i16* %37, align 2
  %39 = icmp ult i16 %35, %38
  br i1 %39, label %44, label %40

40:                                               ; preds = %31
  %41 = zext i16 %35 to i32
  %42 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %43 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %42, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.19, i64 0, i64 0), i32 %41) #9
  br label %301

44:                                               ; preds = %31
  %45 = and i16 %25, 1
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %56, label %47

47:                                               ; preds = %44
  %48 = add i64 %16, 6
  %49 = icmp ugt i64 %48, %18
  br i1 %49, label %53, label %50

50:                                               ; preds = %47
  store i64 %48, i64* %4, align 8
  %51 = add i64 %16, 8
  %52 = icmp ugt i64 %51, %18
  br i1 %52, label %53, label %65

53:                                               ; preds = %47, %50
  %54 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %55 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %54, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i64 0, i64 0)) #9
  br label %301

56:                                               ; preds = %44
  %57 = add i64 %16, 5
  %58 = icmp ugt i64 %57, %18
  br i1 %58, label %62, label %59

59:                                               ; preds = %56
  store i64 %57, i64* %4, align 8
  %60 = add i64 %16, 6
  %61 = icmp ugt i64 %60, %18
  br i1 %61, label %62, label %65

62:                                               ; preds = %56, %59
  %63 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %64 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %63, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i64 0, i64 0)) #9
  br label %301

65:                                               ; preds = %59, %50
  %66 = phi i64 [ %51, %50 ], [ %60, %59 ]
  store i64 %66, i64* %4, align 8
  %67 = zext i16 %25 to i32
  %68 = and i32 %67, 8
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %76, label %70

70:                                               ; preds = %65
  %71 = add i64 %66, 2
  %72 = icmp ugt i64 %71, %18
  br i1 %72, label %73, label %106

73:                                               ; preds = %70
  %74 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %75 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %74, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i64 0, i64 0)) #9
  br label %301

76:                                               ; preds = %65
  %77 = and i32 %67, 64
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %88, label %79

79:                                               ; preds = %76
  %80 = add i64 %66, 2
  %81 = icmp ugt i64 %80, %18
  br i1 %81, label %85, label %82

82:                                               ; preds = %79
  store i64 %80, i64* %4, align 8
  %83 = add i64 %66, 4
  %84 = icmp ugt i64 %83, %18
  br i1 %84, label %85, label %106

85:                                               ; preds = %79, %82
  %86 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %87 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %86, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.22, i64 0, i64 0)) #9
  br label %301

88:                                               ; preds = %76
  %89 = trunc i16 %25 to i8
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %108

91:                                               ; preds = %88
  %92 = add i64 %66, 2
  %93 = icmp ugt i64 %92, %18
  br i1 %93, label %103, label %94

94:                                               ; preds = %91
  store i64 %92, i64* %4, align 8
  %95 = add i64 %66, 4
  %96 = icmp ugt i64 %95, %18
  br i1 %96, label %103, label %97

97:                                               ; preds = %94
  store i64 %95, i64* %4, align 8
  %98 = add i64 %66, 6
  %99 = icmp ugt i64 %98, %18
  br i1 %99, label %103, label %100

100:                                              ; preds = %97
  store i64 %98, i64* %4, align 8
  %101 = add i64 %66, 8
  %102 = icmp ugt i64 %101, %18
  br i1 %102, label %103, label %106

103:                                              ; preds = %91, %94, %97, %100
  %104 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %105 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %104, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0)) #9
  br label %301

106:                                              ; preds = %100, %82, %70
  %107 = phi i64 [ %71, %70 ], [ %83, %82 ], [ %101, %100 ]
  store i64 %107, i64* %4, align 8
  br label %108

108:                                              ; preds = %106, %88
  %109 = load %"struct.ots::OpenTypeGLYF::GidAtLevel"*, %"struct.ots::OpenTypeGLYF::GidAtLevel"** %9, align 8
  %110 = load %"struct.ots::OpenTypeGLYF::GidAtLevel"*, %"struct.ots::OpenTypeGLYF::GidAtLevel"** %10, align 8
  %111 = icmp ult %"struct.ots::OpenTypeGLYF::GidAtLevel"* %109, %110
  %112 = ptrtoint %"struct.ots::OpenTypeGLYF::GidAtLevel"* %110 to i64
  br i1 %111, label %113, label %119

113:                                              ; preds = %108
  %114 = bitcast %"struct.ots::OpenTypeGLYF::GidAtLevel"* %109 to i64*
  %115 = zext i16 %35 to i64
  %116 = or i64 %115, 4294967296
  store i64 %116, i64* %114, align 4
  %117 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::GidAtLevel", %"struct.ots::OpenTypeGLYF::GidAtLevel"* %109, i64 1
  %118 = ptrtoint %"struct.ots::OpenTypeGLYF::GidAtLevel"* %117 to i64
  store i64 %118, i64* %11, align 8
  br label %174

119:                                              ; preds = %108
  %120 = ptrtoint %"struct.ots::OpenTypeGLYF::GidAtLevel"* %109 to i64
  %121 = load i64, i64* %12, align 8
  %122 = sub i64 %120, %121
  %123 = ashr exact i64 %122, 3
  %124 = add nsw i64 %123, 1
  %125 = icmp ugt i64 %124, 2305843009213693951
  br i1 %125, label %126, label %128

126:                                              ; preds = %119
  %127 = bitcast %"class.std::__1::vector.29"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %127) #10
  unreachable

128:                                              ; preds = %119
  %129 = sub i64 %112, %121
  %130 = ashr exact i64 %129, 3
  %131 = icmp ult i64 %130, 1152921504606846975
  br i1 %131, label %132, label %140

132:                                              ; preds = %128
  %133 = ashr exact i64 %129, 2
  %134 = icmp ult i64 %133, %124
  %135 = select i1 %134, i64 %124, i64 %133
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %145, label %137

137:                                              ; preds = %132
  %138 = icmp ugt i64 %135, 2305843009213693951
  br i1 %138, label %139, label %140

139:                                              ; preds = %137
  tail call void @abort() #10
  unreachable

140:                                              ; preds = %137, %128
  %141 = phi i64 [ %135, %137 ], [ 2305843009213693951, %128 ]
  %142 = shl i64 %141, 3
  %143 = tail call i8* @_Znwm(i64 %142) #11
  %144 = bitcast i8* %143 to %"struct.ots::OpenTypeGLYF::GidAtLevel"*
  br label %145

145:                                              ; preds = %140, %132
  %146 = phi i64 [ %141, %140 ], [ 0, %132 ]
  %147 = phi %"struct.ots::OpenTypeGLYF::GidAtLevel"* [ %144, %140 ], [ null, %132 ]
  %148 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::GidAtLevel", %"struct.ots::OpenTypeGLYF::GidAtLevel"* %147, i64 %123
  %149 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::GidAtLevel", %"struct.ots::OpenTypeGLYF::GidAtLevel"* %147, i64 %146
  %150 = ptrtoint %"struct.ots::OpenTypeGLYF::GidAtLevel"* %149 to i64
  %151 = bitcast %"struct.ots::OpenTypeGLYF::GidAtLevel"* %148 to i64*
  %152 = zext i16 %35 to i64
  %153 = or i64 %152, 4294967296
  store i64 %153, i64* %151, align 4
  %154 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::GidAtLevel", %"struct.ots::OpenTypeGLYF::GidAtLevel"* %148, i64 1
  %155 = ptrtoint %"struct.ots::OpenTypeGLYF::GidAtLevel"* %154 to i64
  %156 = load %"struct.ots::OpenTypeGLYF::GidAtLevel"*, %"struct.ots::OpenTypeGLYF::GidAtLevel"** %14, align 8
  %157 = load i64, i64* %11, align 8
  %158 = ptrtoint %"struct.ots::OpenTypeGLYF::GidAtLevel"* %156 to i64
  %159 = sub i64 %157, %158
  %160 = ashr exact i64 %159, 3
  %161 = sub nsw i64 0, %160
  %162 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::GidAtLevel", %"struct.ots::OpenTypeGLYF::GidAtLevel"* %148, i64 %161
  %163 = ptrtoint %"struct.ots::OpenTypeGLYF::GidAtLevel"* %162 to i64
  %164 = icmp sgt i64 %159, 0
  br i1 %164, label %165, label %169

165:                                              ; preds = %145
  %166 = bitcast %"struct.ots::OpenTypeGLYF::GidAtLevel"* %162 to i8*
  %167 = bitcast %"struct.ots::OpenTypeGLYF::GidAtLevel"* %156 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %166, i8* align 4 %167, i64 %159, i1 false) #9
  %168 = load %"struct.ots::OpenTypeGLYF::GidAtLevel"*, %"struct.ots::OpenTypeGLYF::GidAtLevel"** %14, align 8
  br label %169

169:                                              ; preds = %165, %145
  %170 = phi %"struct.ots::OpenTypeGLYF::GidAtLevel"* [ %156, %145 ], [ %168, %165 ]
  store i64 %163, i64* %12, align 8
  store i64 %155, i64* %11, align 8
  store i64 %150, i64* %13, align 8
  %171 = icmp eq %"struct.ots::OpenTypeGLYF::GidAtLevel"* %170, null
  br i1 %171, label %174, label %172

172:                                              ; preds = %169
  %173 = bitcast %"struct.ots::OpenTypeGLYF::GidAtLevel"* %170 to i8*
  tail call void @_ZdlPv(i8* %173) #11
  br label %174

174:                                              ; preds = %113, %169, %172
  %175 = and i32 %67, 32
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %15

177:                                              ; preds = %174
  %178 = and i32 %67, 256
  %179 = icmp eq i32 %178, 0
  %180 = load i64, i64* %4, align 8
  br i1 %179, label %226, label %181

181:                                              ; preds = %177
  %182 = add i64 %180, 2
  %183 = load i64, i64* %5, align 8
  %184 = icmp ugt i64 %182, %183
  br i1 %184, label %185, label %188

185:                                              ; preds = %181
  %186 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %187 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %186, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24, i64 0, i64 0)) #9
  br label %301

188:                                              ; preds = %181
  %189 = load i8*, i8** %6, align 8
  %190 = getelementptr inbounds i8, i8* %189, i64 %180
  %191 = bitcast i8* %190 to i16*
  %192 = load i16, i16* %191, align 1
  %193 = tail call i16 @llvm.bswap.i16(i16 %192) #9
  store i64 %182, i64* %4, align 8
  %194 = load %"class.ots::OpenTypeMAXP"*, %"class.ots::OpenTypeMAXP"** %7, align 8
  %195 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %194, i64 0, i32 2
  %196 = load i8, i8* %195, align 4, !range !2
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %212, label %198

198:                                              ; preds = %188
  %199 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %194, i64 0, i32 13
  %200 = load i16, i16* %199, align 2
  %201 = icmp ult i16 %200, %193
  br i1 %201, label %202, label %212

202:                                              ; preds = %198
  store i16 %193, i16* %199, align 2
  %203 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %204 = load %"class.ots::OpenTypeMAXP"*, %"class.ots::OpenTypeMAXP"** %7, align 8
  %205 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %204, i64 0, i32 13
  %206 = load i16, i16* %205, align 2
  %207 = zext i16 %206 to i32
  %208 = zext i16 %193 to i32
  %209 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %203, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.13, i64 0, i64 0), i32 %207, i32 %208) #9
  %210 = load i64, i64* %4, align 8
  %211 = load i64, i64* %5, align 8
  br label %212

212:                                              ; preds = %188, %202, %198
  %213 = phi i64 [ %183, %188 ], [ %211, %202 ], [ %183, %198 ]
  %214 = phi i64 [ %182, %188 ], [ %210, %202 ], [ %182, %198 ]
  %215 = zext i16 %193 to i64
  %216 = add i64 %214, %215
  %217 = icmp ugt i64 %216, %213
  %218 = sub i64 %213, %215
  %219 = icmp ugt i64 %214, %218
  %220 = or i1 %217, %219
  br i1 %220, label %221, label %225

221:                                              ; preds = %212
  %222 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %223 = zext i16 %193 to i32
  %224 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %222, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0), i32 %223) #9
  br label %301

225:                                              ; preds = %212
  store i64 %216, i64* %4, align 8
  br label %226

226:                                              ; preds = %177, %225
  %227 = phi i64 [ %216, %225 ], [ %180, %177 ]
  %228 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 2
  %229 = bitcast %"class.ots::Buffer"* %1 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 2, i32 0, i32 1
  %232 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %231, align 8
  %233 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %234 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %233, align 8
  %235 = icmp ult %"struct.std::__1::pair"* %232, %234
  %236 = ptrtoint %"struct.std::__1::pair"* %234 to i64
  br i1 %235, label %237, label %243

237:                                              ; preds = %226
  %238 = bitcast %"struct.std::__1::pair"* %232 to i64*
  store i64 %230, i64* %238, align 8
  %239 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %232, i64 0, i32 1
  store i64 %227, i64* %239, align 8
  %240 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %232, i64 1
  %241 = ptrtoint %"struct.std::__1::pair"* %240 to i64
  %242 = bitcast %"struct.std::__1::pair"** %231 to i64*
  store i64 %241, i64* %242, align 8
  br label %301

243:                                              ; preds = %226
  %244 = ptrtoint %"struct.std::__1::pair"* %232 to i64
  %245 = bitcast %"struct.std::__1::pair"** %231 to i64*
  %246 = bitcast %"class.std::__1::vector"* %228 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = sub i64 %244, %247
  %249 = ashr exact i64 %248, 4
  %250 = add nsw i64 %249, 1
  %251 = icmp ugt i64 %250, 1152921504606846975
  br i1 %251, label %252, label %254

252:                                              ; preds = %243
  %253 = bitcast %"class.std::__1::vector"* %228 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %253) #10
  unreachable

254:                                              ; preds = %243
  %255 = bitcast %"struct.std::__1::pair"** %233 to i64*
  %256 = sub i64 %236, %247
  %257 = ashr exact i64 %256, 4
  %258 = icmp ult i64 %257, 576460752303423487
  br i1 %258, label %259, label %267

259:                                              ; preds = %254
  %260 = ashr exact i64 %256, 3
  %261 = icmp ult i64 %260, %250
  %262 = select i1 %261, i64 %250, i64 %260
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %272, label %264

264:                                              ; preds = %259
  %265 = icmp ugt i64 %262, 1152921504606846975
  br i1 %265, label %266, label %267

266:                                              ; preds = %264
  tail call void @abort() #10
  unreachable

267:                                              ; preds = %264, %254
  %268 = phi i64 [ %262, %264 ], [ 1152921504606846975, %254 ]
  %269 = shl i64 %268, 4
  %270 = tail call i8* @_Znwm(i64 %269) #11
  %271 = bitcast i8* %270 to %"struct.std::__1::pair"*
  br label %272

272:                                              ; preds = %267, %259
  %273 = phi i64 [ %268, %267 ], [ 0, %259 ]
  %274 = phi %"struct.std::__1::pair"* [ %271, %267 ], [ null, %259 ]
  %275 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %274, i64 %249
  %276 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %274, i64 %273
  %277 = ptrtoint %"struct.std::__1::pair"* %276 to i64
  %278 = bitcast %"struct.std::__1::pair"* %275 to i64*
  store i64 %230, i64* %278, align 8
  %279 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %274, i64 %249, i32 1
  store i64 %227, i64* %279, align 8
  %280 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %275, i64 1
  %281 = ptrtoint %"struct.std::__1::pair"* %280 to i64
  %282 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %228, i64 0, i32 0, i32 0
  %283 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %282, align 8
  %284 = load i64, i64* %245, align 8
  %285 = ptrtoint %"struct.std::__1::pair"* %283 to i64
  %286 = sub i64 %284, %285
  %287 = ashr exact i64 %286, 4
  %288 = sub nsw i64 0, %287
  %289 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %275, i64 %288
  %290 = ptrtoint %"struct.std::__1::pair"* %289 to i64
  %291 = icmp sgt i64 %286, 0
  br i1 %291, label %292, label %296

292:                                              ; preds = %272
  %293 = bitcast %"struct.std::__1::pair"* %289 to i8*
  %294 = bitcast %"struct.std::__1::pair"* %283 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %293, i8* align 8 %294, i64 %286, i1 false) #9
  %295 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %282, align 8
  br label %296

296:                                              ; preds = %292, %272
  %297 = phi %"struct.std::__1::pair"* [ %283, %272 ], [ %295, %292 ]
  store i64 %290, i64* %246, align 8
  store i64 %281, i64* %245, align 8
  store i64 %277, i64* %255, align 8
  %298 = icmp eq %"struct.std::__1::pair"* %297, null
  br i1 %298, label %301, label %299

299:                                              ; preds = %296
  %300 = bitcast %"struct.std::__1::pair"* %297 to i8*
  tail call void @_ZdlPv(i8* %300) #11
  br label %301

301:                                              ; preds = %185, %221, %299, %296, %237, %103, %85, %73, %62, %53, %40, %28
  %302 = phi i1 [ %43, %40 ], [ %75, %73 ], [ %87, %85 ], [ %105, %103 ], [ %55, %53 ], [ %64, %62 ], [ %30, %28 ], [ true, %237 ], [ true, %296 ], [ true, %299 ], [ %187, %185 ], [ %224, %221 ]
  ret i1 %302
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeGLYF5ParseEPKhm(%"class.ots::OpenTypeGLYF"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.ots::Buffer", align 8
  %5 = alloca %"struct.ots::OpenTypeGLYF::ComponentPointCount", align 8
  %6 = alloca %"class.ots::Buffer", align 8
  %7 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %8 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 0, i32 3
  %9 = load %"struct.ots::Font"*, %"struct.ots::Font"** %8, align 8
  %10 = tail call %"class.ots::Table"* @_ZNK3ots4Font13GetTypedTableEj(%"struct.ots::Font"* %9, i32 1835104368) #9
  %11 = load %"struct.ots::Font"*, %"struct.ots::Font"** %8, align 8
  %12 = tail call %"class.ots::Table"* @_ZNK3ots4Font13GetTypedTableEj(%"struct.ots::Font"* %11, i32 1819239265) #9
  %13 = load %"struct.ots::Font"*, %"struct.ots::Font"** %8, align 8
  %14 = tail call %"class.ots::Table"* @_ZNK3ots4Font13GetTypedTableEj(%"struct.ots::Font"* %13, i32 1751474532) #9
  %15 = bitcast %"class.ots::Table"* %14 to %"class.ots::OpenTypeHEAD"*
  %16 = icmp ne %"class.ots::Table"* %10, null
  %17 = icmp ne %"class.ots::Table"* %12, null
  %18 = and i1 %16, %17
  %19 = icmp ne %"class.ots::Table"* %14, null
  %20 = and i1 %18, %19
  br i1 %20, label %23, label %21

21:                                               ; preds = %3
  %22 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.25, i64 0, i64 0)) #9
  br label %522

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 1
  %25 = bitcast %"class.ots::OpenTypeMAXP"** %24 to %"class.ots::Table"**
  store %"class.ots::Table"* %10, %"class.ots::Table"** %25, align 8
  %26 = getelementptr inbounds %"class.ots::Table", %"class.ots::Table"* %10, i64 0, i32 5, i64 1
  %27 = bitcast i8* %26 to i16*
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = getelementptr inbounds %"class.ots::Table", %"class.ots::Table"* %12, i64 1
  %31 = bitcast %"class.ots::Table"* %30 to %"class.std::__1::vector.36"*
  %32 = getelementptr inbounds %"class.ots::Table", %"class.ots::Table"* %12, i64 1, i32 1
  %33 = bitcast i32* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.ots::Table"* %30 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 2
  %39 = add nuw nsw i32 %29, 1
  %40 = zext i32 %39 to i64
  %41 = icmp eq i64 %38, %40
  br i1 %41, label %44, label %42

42:                                               ; preds = %23
  %43 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.26, i64 0, i64 0), i64 %38, i32 %39) #9
  br label %522

44:                                               ; preds = %23
  %45 = shl nuw nsw i32 %39, 2
  %46 = zext i32 %45 to i64
  %47 = tail call i8* @_Znwm(i64 %46) #11
  %48 = bitcast i8* %47 to i32*
  %49 = getelementptr inbounds i32, i32* %48, i64 %38
  %50 = ptrtoint i8* %47 to i64
  %51 = add nsw i64 %38, -1
  %52 = getelementptr i32, i32* %48, i64 %51
  %53 = ptrtoint i32* %52 to i64
  %54 = sub i64 4, %50
  %55 = add i64 %54, %53
  %56 = and i64 %55, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %47, i8 0, i64 %56, i1 false) #9
  %57 = icmp eq i16 %28, 0
  br i1 %57, label %389, label %58

58:                                               ; preds = %44
  %59 = bitcast %"class.ots::Buffer"* %4 to i8*
  %60 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %4, i64 0, i32 0
  %61 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %4, i64 0, i32 1
  %62 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %4, i64 0, i32 2
  %63 = bitcast %"class.ots::Table"* %30 to i32**
  %64 = bitcast i64* %61 to i8*
  %65 = bitcast %"struct.ots::OpenTypeGLYF::ComponentPointCount"* %5 to i8*
  %66 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::ComponentPointCount", %"struct.ots::OpenTypeGLYF::ComponentPointCount"* %5, i64 0, i32 0
  %67 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::ComponentPointCount", %"struct.ots::OpenTypeGLYF::ComponentPointCount"* %5, i64 0, i32 1
  %68 = bitcast %"class.std::__1::vector.29"* %67 to i8*
  %69 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::ComponentPointCount", %"struct.ots::OpenTypeGLYF::ComponentPointCount"* %5, i64 0, i32 1, i32 0, i32 1
  %70 = bitcast %"struct.ots::OpenTypeGLYF::GidAtLevel"** %69 to i64*
  %71 = bitcast %"class.std::__1::vector.29"* %67 to i64*
  %72 = bitcast %"class.ots::Buffer"* %6 to i8*
  %73 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %6, i64 0, i32 0
  %74 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %6, i64 0, i32 1
  %75 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %6, i64 0, i32 2
  %76 = bitcast i64* %74 to i8*
  %77 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::ComponentPointCount", %"struct.ots::OpenTypeGLYF::ComponentPointCount"* %5, i64 0, i32 1, i32 0, i32 0
  %78 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 2
  %79 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %81 = bitcast %"struct.std::__1::pair"** %79 to i64*
  %82 = bitcast %"class.std::__1::vector"* %78 to i64*
  %83 = bitcast %"struct.std::__1::pair"** %80 to i64*
  %84 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %78, i64 0, i32 0, i32 0
  %85 = zext i16 %28 to i64
  %86 = bitcast %"class.ots::Buffer"* %4 to i8*
  %87 = bitcast %"class.ots::Buffer"* %6 to i8*
  %88 = getelementptr inbounds i8, i8* %1, i64 2
  %89 = getelementptr inbounds i8, i8* %1, i64 4
  %90 = getelementptr inbounds i8, i8* %1, i64 6
  %91 = getelementptr inbounds i8, i8* %1, i64 8
  %92 = bitcast %"struct.ots::OpenTypeGLYF::ComponentPointCount"* %5 to i64*
  br label %93

93:                                               ; preds = %383, %58
  %94 = phi i64 [ 0, %58 ], [ %101, %383 ]
  %95 = phi i1 [ undef, %58 ], [ %385, %383 ]
  %96 = phi i32 [ 0, %58 ], [ %102, %383 ]
  %97 = phi i32 [ 0, %58 ], [ %384, %383 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false)
  %98 = load i32*, i32** %63, align 8, !noalias !3
  %99 = getelementptr inbounds i32, i32* %98, i64 %94
  %100 = load i32, i32* %99, align 4, !noalias !3
  %101 = add nuw nsw i64 %94, 1
  %102 = add nuw nsw i32 %96, 1
  %103 = getelementptr inbounds i32, i32* %98, i64 %101
  %104 = load i32, i32* %103, align 4, !noalias !3
  %105 = sub i32 %104, %100
  %106 = icmp eq i32 %105, 0
  %107 = zext i32 %100 to i64
  br i1 %106, label %108, label %110

108:                                              ; preds = %93
  %109 = getelementptr inbounds i8, i8* %1, i64 %107
  store i8* %109, i8** %60, align 8, !alias.scope !3
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #9, !alias.scope !3
  br label %129

110:                                              ; preds = %93
  %111 = icmp ult i64 %107, %2
  br i1 %111, label %115, label %112

112:                                              ; preds = %110
  %113 = trunc i64 %94 to i32
  %114 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.41, i64 0, i64 0), i32 %113, i32 %100, i64 %2) #9, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #9, !alias.scope !3
  br label %387

115:                                              ; preds = %110
  %116 = icmp ult i32 %104, %100
  br i1 %116, label %117, label %120

117:                                              ; preds = %115
  %118 = trunc i64 %94 to i32
  %119 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.42, i64 0, i64 0), i32 %118, i32 %105) #9, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #9, !alias.scope !3
  br label %387

120:                                              ; preds = %115
  %121 = zext i32 %104 to i64
  %122 = icmp ugt i64 %121, %2
  br i1 %122, label %123, label %126

123:                                              ; preds = %120
  %124 = trunc i64 %94 to i32
  %125 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.43, i64 0, i64 0), i32 %124, i32 %105) #9, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #9, !alias.scope !3
  br label %387

126:                                              ; preds = %120
  %127 = getelementptr inbounds i8, i8* %1, i64 %107
  %128 = zext i32 %105 to i64
  store i8* %127, i8** %60, align 8, !alias.scope !3
  store i64 %128, i64* %61, align 8, !alias.scope !3
  store i64 0, i64* %62, align 8, !alias.scope !3
  br label %129

129:                                              ; preds = %108, %126
  %130 = phi i64 [ 0, %108 ], [ %128, %126 ]
  %131 = phi i8* [ %109, %108 ], [ %127, %126 ]
  %132 = icmp eq i8* %131, null
  br i1 %132, label %387, label %133

133:                                              ; preds = %129
  %134 = icmp eq i64 %130, 0
  br i1 %134, label %135, label %137

135:                                              ; preds = %133
  %136 = getelementptr inbounds i32, i32* %48, i64 %94
  store i32 %97, i32* %136, align 4
  br label %383

137:                                              ; preds = %133
  %138 = icmp eq i64 %130, 1
  %139 = trunc i64 %94 to i32
  br i1 %138, label %163, label %140

140:                                              ; preds = %137
  %141 = bitcast i8* %131 to i16*
  %142 = load i16, i16* %141, align 1
  %143 = call i16 @llvm.bswap.i16(i16 %142) #9
  store i64 2, i64* %62, align 8
  %144 = icmp ult i64 %130, 4
  br i1 %144, label %163, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds i8, i8* %88, i64 %107
  %147 = bitcast i8* %146 to i16*
  %148 = load i16, i16* %147, align 1
  %149 = call i16 @llvm.bswap.i16(i16 %148) #9
  store i64 4, i64* %62, align 8
  %150 = icmp ult i64 %130, 6
  br i1 %150, label %163, label %151

151:                                              ; preds = %145
  %152 = getelementptr inbounds i8, i8* %89, i64 %107
  %153 = bitcast i8* %152 to i16*
  %154 = load i16, i16* %153, align 1
  %155 = call i16 @llvm.bswap.i16(i16 %154) #9
  store i64 6, i64* %62, align 8
  %156 = icmp ult i64 %130, 8
  br i1 %156, label %163, label %157

157:                                              ; preds = %151
  %158 = getelementptr inbounds i8, i8* %90, i64 %107
  %159 = bitcast i8* %158 to i16*
  %160 = load i16, i16* %159, align 1
  %161 = call i16 @llvm.bswap.i16(i16 %160) #9
  store i64 8, i64* %62, align 8
  %162 = icmp ult i64 %130, 10
  br i1 %162, label %163, label %166

163:                                              ; preds = %157, %151, %145, %140, %137
  %164 = trunc i64 %94 to i32
  %165 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 %164) #9
  br label %387

166:                                              ; preds = %157
  %167 = getelementptr inbounds i8, i8* %91, i64 %107
  %168 = bitcast i8* %167 to i16*
  %169 = load i16, i16* %168, align 1
  %170 = call i16 @llvm.bswap.i16(i16 %169) #9
  store i64 10, i64* %62, align 8
  %171 = icmp slt i16 %143, -1
  br i1 %171, label %172, label %176

172:                                              ; preds = %166
  %173 = trunc i64 %94 to i32
  %174 = sext i16 %143 to i32
  %175 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.28, i64 0, i64 0), i32 %174, i32 %173) #9
  br label %387

176:                                              ; preds = %166
  %177 = icmp eq i16 %148, -129
  %178 = icmp eq i16 %160, 384
  %179 = and i1 %177, %178
  %180 = icmp eq i16 %154, -129
  %181 = and i1 %180, %179
  %182 = icmp eq i16 %169, 384
  %183 = and i1 %181, %182
  br i1 %183, label %184, label %186

184:                                              ; preds = %176
  %185 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29, i64 0, i64 0)) #9
  br label %197

186:                                              ; preds = %176
  %187 = icmp sgt i16 %149, %161
  %188 = icmp sgt i16 %155, %170
  %189 = or i1 %187, %188
  br i1 %189, label %190, label %197

190:                                              ; preds = %186
  %191 = trunc i64 %94 to i32
  %192 = sext i16 %149 to i32
  %193 = sext i16 %155 to i32
  %194 = sext i16 %161 to i32
  %195 = sext i16 %170 to i32
  %196 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.30, i64 0, i64 0), i32 %192, i32 %193, i32 %194, i32 %195, i32 %191) #9
  br label %387

197:                                              ; preds = %186, %184
  %198 = icmp eq i16 %142, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %197
  store i64 0, i64* %62, align 8
  br label %304

200:                                              ; preds = %197
  %201 = icmp sgt i16 %143, 0
  br i1 %201, label %202, label %207

202:                                              ; preds = %200
  %203 = call zeroext i1 @_ZN3ots12OpenTypeGLYF16ParseSimpleGlyphERNS_6BufferEs(%"class.ots::OpenTypeGLYF"* %0, %"class.ots::Buffer"* nonnull dereferenceable(24) %4, i16 signext %143)
  br i1 %203, label %304, label %204

204:                                              ; preds = %202
  %205 = trunc i64 %94 to i32
  %206 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.31, i64 0, i64 0), i32 %205) #9
  br label %387

207:                                              ; preds = %200
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #9
  store i64 -6148914691236517206, i64* %92, align 8
  store i32 0, i32* %66, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #9
  %208 = call zeroext i1 @_ZN3ots12OpenTypeGLYF19ParseCompositeGlyphERNS_6BufferEPNS0_19ComponentPointCountE(%"class.ots::OpenTypeGLYF"* %0, %"class.ots::Buffer"* nonnull dereferenceable(24) %4, %"struct.ots::OpenTypeGLYF::ComponentPointCount"* nonnull %5)
  br i1 %208, label %209, label %215

209:                                              ; preds = %207
  %210 = load i64, i64* %70, align 8
  %211 = load i64, i64* %71, align 8
  %212 = icmp eq i64 %210, %211
  br i1 %212, label %294, label %213

213:                                              ; preds = %209
  %214 = trunc i32 %96 to i16
  br label %217

215:                                              ; preds = %207
  %216 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.31, i64 0, i64 0), i32 %139) #9
  br label %294

217:                                              ; preds = %213, %290
  %218 = phi i64 [ %210, %213 ], [ %291, %290 ]
  %219 = inttoptr i64 %218 to %"struct.ots::OpenTypeGLYF::GidAtLevel"*
  %220 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::GidAtLevel", %"struct.ots::OpenTypeGLYF::GidAtLevel"* %219, i64 -1
  %221 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::GidAtLevel", %"struct.ots::OpenTypeGLYF::GidAtLevel"* %220, i64 0, i32 0
  %222 = load i16, i16* %221, align 4
  %223 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::GidAtLevel", %"struct.ots::OpenTypeGLYF::GidAtLevel"* %219, i64 -1, i32 1
  %224 = load i32, i32* %223, align 4
  store %"struct.ots::OpenTypeGLYF::GidAtLevel"* %220, %"struct.ots::OpenTypeGLYF::GidAtLevel"** %69, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #9
  %225 = zext i16 %222 to i64
  %226 = zext i16 %222 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 24, i1 false)
  %227 = load i32*, i32** %63, align 8, !noalias !6
  %228 = getelementptr inbounds i32, i32* %227, i64 %226
  %229 = load i32, i32* %228, align 4, !noalias !6
  %230 = add nuw nsw i64 %225, 1
  %231 = getelementptr inbounds i32, i32* %227, i64 %230
  %232 = load i32, i32* %231, align 4, !noalias !6
  %233 = sub i32 %232, %229
  %234 = icmp eq i32 %233, 0
  %235 = zext i32 %229 to i64
  br i1 %234, label %236, label %238

236:                                              ; preds = %217
  %237 = getelementptr inbounds i8, i8* %1, i64 %235
  store i8* %237, i8** %73, align 8, !alias.scope !6
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 16, i1 false) #9, !alias.scope !6
  br label %257

238:                                              ; preds = %217
  %239 = icmp ult i64 %235, %2
  br i1 %239, label %243, label %240

240:                                              ; preds = %238
  %241 = zext i16 %222 to i32
  %242 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.41, i64 0, i64 0), i32 %241, i32 %229, i64 %2) #9, !noalias !6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 0, i64 24, i1 false) #9, !alias.scope !6
  br label %288

243:                                              ; preds = %238
  %244 = icmp ult i32 %232, %229
  br i1 %244, label %245, label %248

245:                                              ; preds = %243
  %246 = zext i16 %222 to i32
  %247 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.42, i64 0, i64 0), i32 %246, i32 %233) #9, !noalias !6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 0, i64 24, i1 false) #9, !alias.scope !6
  br label %288

248:                                              ; preds = %243
  %249 = zext i32 %232 to i64
  %250 = icmp ugt i64 %249, %2
  br i1 %250, label %251, label %254

251:                                              ; preds = %248
  %252 = zext i16 %222 to i32
  %253 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.43, i64 0, i64 0), i32 %252, i32 %233) #9, !noalias !6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 0, i64 24, i1 false) #9, !alias.scope !6
  br label %288

254:                                              ; preds = %248
  %255 = getelementptr inbounds i8, i8* %1, i64 %235
  %256 = zext i32 %233 to i64
  store i8* %255, i8** %73, align 8, !alias.scope !6
  store i64 %256, i64* %74, align 8, !alias.scope !6
  store i64 0, i64* %75, align 8, !alias.scope !6
  br label %257

257:                                              ; preds = %236, %254
  %258 = phi i64 [ 0, %236 ], [ %256, %254 ]
  %259 = phi i8* [ %237, %236 ], [ %255, %254 ]
  %260 = icmp eq i8* %259, null
  br i1 %260, label %288, label %261

261:                                              ; preds = %257
  %262 = icmp eq i64 %258, 0
  br i1 %262, label %290, label %263

263:                                              ; preds = %261
  %264 = call zeroext i1 @_ZN3ots12OpenTypeGLYF32TraverseComponentsCountingPointsERNS_6BufferEtjPNS0_19ComponentPointCountE(%"class.ots::OpenTypeGLYF"* %0, %"class.ots::Buffer"* nonnull dereferenceable(24) %6, i16 zeroext %214, i32 %224, %"struct.ots::OpenTypeGLYF::ComponentPointCount"* nonnull %5)
  br i1 %264, label %267, label %265

265:                                              ; preds = %263
  %266 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.32, i64 0, i64 0)) #9
  br label %288

267:                                              ; preds = %263
  %268 = load i32, i32* %66, align 8
  %269 = icmp ugt i32 %268, 65535
  br i1 %269, label %270, label %272

270:                                              ; preds = %267
  %271 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.33, i64 0, i64 0), i32 %139) #9
  br label %288

272:                                              ; preds = %267
  %273 = load %"class.ots::OpenTypeMAXP"*, %"class.ots::OpenTypeMAXP"** %24, align 8
  %274 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %273, i64 0, i32 2
  %275 = load i8, i8* %274, align 4, !range !2
  %276 = icmp eq i8 %275, 0
  br i1 %276, label %290, label %277

277:                                              ; preds = %272
  %278 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %273, i64 0, i32 5
  %279 = load i16, i16* %278, align 2
  %280 = zext i16 %279 to i32
  %281 = icmp ugt i32 %268, %280
  br i1 %281, label %282, label %290

282:                                              ; preds = %277
  %283 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.34, i64 0, i64 0), i32 %139, i32 %268, i32 %280) #9
  %284 = load i32, i32* %66, align 8
  %285 = trunc i32 %284 to i16
  %286 = load %"class.ots::OpenTypeMAXP"*, %"class.ots::OpenTypeMAXP"** %24, align 8
  %287 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %286, i64 0, i32 5
  store i16 %285, i16* %287, align 2
  br label %290

288:                                              ; preds = %257, %240, %245, %251, %270, %265
  %289 = phi i1 [ %266, %265 ], [ %271, %270 ], [ false, %251 ], [ false, %245 ], [ false, %240 ], [ false, %257 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #9
  br label %294

290:                                              ; preds = %282, %277, %272, %261
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #9
  %291 = load i64, i64* %70, align 8
  %292 = load i64, i64* %71, align 8
  %293 = icmp eq i64 %291, %292
  br i1 %293, label %294, label %217

294:                                              ; preds = %290, %209, %288, %215
  %295 = phi i32 [ 1, %215 ], [ 1, %288 ], [ 0, %209 ], [ 0, %290 ]
  %296 = phi i1 [ %216, %215 ], [ %289, %288 ], [ %95, %209 ], [ %95, %290 ]
  %297 = load %"struct.ots::OpenTypeGLYF::GidAtLevel"*, %"struct.ots::OpenTypeGLYF::GidAtLevel"** %77, align 8
  %298 = icmp eq %"struct.ots::OpenTypeGLYF::GidAtLevel"* %297, null
  br i1 %298, label %302, label %299

299:                                              ; preds = %294
  %300 = ptrtoint %"struct.ots::OpenTypeGLYF::GidAtLevel"* %297 to i64
  store i64 %300, i64* %70, align 8
  %301 = bitcast %"struct.ots::OpenTypeGLYF::GidAtLevel"* %297 to i8*
  call void @_ZdlPv(i8* %301) #11
  br label %302

302:                                              ; preds = %294, %299
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #9
  %303 = icmp eq i32 %295, 0
  br i1 %303, label %304, label %387

304:                                              ; preds = %202, %302, %199
  %305 = phi i1 [ %95, %199 ], [ %95, %202 ], [ %296, %302 ]
  %306 = load i64, i64* %62, align 8
  %307 = getelementptr inbounds i32, i32* %48, i64 %94
  store i32 %97, i32* %307, align 4
  %308 = trunc i64 %306 to i32
  %309 = sub i32 0, %308
  %310 = and i32 %309, 3
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %380, label %312

312:                                              ; preds = %304
  %313 = zext i32 %310 to i64
  %314 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %79, align 8
  %315 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %80, align 8
  %316 = icmp ult %"struct.std::__1::pair"* %314, %315
  %317 = ptrtoint %"struct.std::__1::pair"* %315 to i64
  br i1 %316, label %318, label %323

318:                                              ; preds = %312
  %319 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %314, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0), i8** %319, align 8
  %320 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %314, i64 0, i32 1
  store i64 %313, i64* %320, align 8
  %321 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %314, i64 1
  %322 = ptrtoint %"struct.std::__1::pair"* %321 to i64
  store i64 %322, i64* %81, align 8
  br label %377

323:                                              ; preds = %312
  %324 = ptrtoint %"struct.std::__1::pair"* %314 to i64
  %325 = load i64, i64* %82, align 8
  %326 = sub i64 %324, %325
  %327 = ashr exact i64 %326, 4
  %328 = add nsw i64 %327, 1
  %329 = icmp ugt i64 %328, 1152921504606846975
  br i1 %329, label %330, label %332

330:                                              ; preds = %323
  %331 = bitcast %"class.std::__1::vector"* %78 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %331) #10
  unreachable

332:                                              ; preds = %323
  %333 = sub i64 %317, %325
  %334 = ashr exact i64 %333, 4
  %335 = icmp ult i64 %334, 576460752303423487
  br i1 %335, label %336, label %344

336:                                              ; preds = %332
  %337 = ashr exact i64 %333, 3
  %338 = icmp ult i64 %337, %328
  %339 = select i1 %338, i64 %328, i64 %337
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %349, label %341

341:                                              ; preds = %336
  %342 = icmp ugt i64 %339, 1152921504606846975
  br i1 %342, label %343, label %344

343:                                              ; preds = %341
  call void @abort() #10
  unreachable

344:                                              ; preds = %341, %332
  %345 = phi i64 [ %339, %341 ], [ 1152921504606846975, %332 ]
  %346 = shl i64 %345, 4
  %347 = call i8* @_Znwm(i64 %346) #11
  %348 = bitcast i8* %347 to %"struct.std::__1::pair"*
  br label %349

349:                                              ; preds = %344, %336
  %350 = phi i64 [ %345, %344 ], [ 0, %336 ]
  %351 = phi %"struct.std::__1::pair"* [ %348, %344 ], [ null, %336 ]
  %352 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %351, i64 %327
  %353 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %351, i64 %350
  %354 = ptrtoint %"struct.std::__1::pair"* %353 to i64
  %355 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %352, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0), i8** %355, align 8
  %356 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %351, i64 %327, i32 1
  store i64 %313, i64* %356, align 8
  %357 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %352, i64 1
  %358 = ptrtoint %"struct.std::__1::pair"* %357 to i64
  %359 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %84, align 8
  %360 = load i64, i64* %81, align 8
  %361 = ptrtoint %"struct.std::__1::pair"* %359 to i64
  %362 = sub i64 %360, %361
  %363 = ashr exact i64 %362, 4
  %364 = sub nsw i64 0, %363
  %365 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %352, i64 %364
  %366 = ptrtoint %"struct.std::__1::pair"* %365 to i64
  %367 = icmp sgt i64 %362, 0
  br i1 %367, label %368, label %372

368:                                              ; preds = %349
  %369 = bitcast %"struct.std::__1::pair"* %365 to i8*
  %370 = bitcast %"struct.std::__1::pair"* %359 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %369, i8* align 8 %370, i64 %362, i1 false) #9
  %371 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %84, align 8
  br label %372

372:                                              ; preds = %368, %349
  %373 = phi %"struct.std::__1::pair"* [ %359, %349 ], [ %371, %368 ]
  store i64 %366, i64* %82, align 8
  store i64 %358, i64* %81, align 8
  store i64 %354, i64* %83, align 8
  %374 = icmp eq %"struct.std::__1::pair"* %373, null
  br i1 %374, label %377, label %375

375:                                              ; preds = %372
  %376 = bitcast %"struct.std::__1::pair"* %373 to i8*
  call void @_ZdlPv(i8* %376) #11
  br label %377

377:                                              ; preds = %318, %372, %375
  %378 = trunc i64 %306 to i32
  %379 = add i32 %310, %378
  br label %380

380:                                              ; preds = %304, %377
  %381 = phi i32 [ %308, %304 ], [ %379, %377 ]
  %382 = add i32 %97, %381
  br label %383

383:                                              ; preds = %135, %380
  %384 = phi i32 [ %97, %135 ], [ %382, %380 ]
  %385 = phi i1 [ %95, %135 ], [ %305, %380 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #9
  %386 = icmp eq i64 %101, %85
  br i1 %386, label %389, label %93

387:                                              ; preds = %129, %302, %112, %117, %123, %172, %190, %204, %163
  %388 = phi i1 [ %165, %163 ], [ %206, %204 ], [ %196, %190 ], [ %175, %172 ], [ false, %123 ], [ false, %117 ], [ false, %112 ], [ %296, %302 ], [ false, %129 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #9
  br label %520

389:                                              ; preds = %383, %44
  %390 = phi i32 [ 0, %44 ], [ %384, %383 ]
  %391 = zext i16 %28 to i64
  %392 = getelementptr inbounds i32, i32* %48, i64 %391
  store i32 %390, i32* %392, align 4
  %393 = ptrtoint i8* %47 to i64
  %394 = icmp eq i32* %49, %48
  br i1 %394, label %455, label %395

395:                                              ; preds = %389
  %396 = getelementptr inbounds i8, i8* %47, i64 4
  %397 = bitcast i8* %396 to i32*
  %398 = icmp eq i32* %49, %397
  br i1 %398, label %455, label %399

399:                                              ; preds = %395
  %400 = add i64 %37, -8
  %401 = lshr i64 %400, 2
  %402 = add nuw nsw i64 %401, 1
  %403 = and i64 %402, 3
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %418, label %405

405:                                              ; preds = %399, %405
  %406 = phi i32* [ %415, %405 ], [ %397, %399 ]
  %407 = phi i64 [ %414, %405 ], [ %393, %399 ]
  %408 = phi i64 [ %416, %405 ], [ %403, %399 ]
  %409 = ptrtoint i32* %406 to i64
  %410 = inttoptr i64 %407 to i32*
  %411 = load i32, i32* %410, align 4
  %412 = load i32, i32* %406, align 4
  %413 = icmp ult i32 %411, %412
  %414 = select i1 %413, i64 %409, i64 %407
  %415 = getelementptr inbounds i32, i32* %406, i64 1
  %416 = add i64 %408, -1
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %418, label %405, !llvm.loop !9

418:                                              ; preds = %405, %399
  %419 = phi i64 [ undef, %399 ], [ %414, %405 ]
  %420 = phi i32* [ %397, %399 ], [ %415, %405 ]
  %421 = phi i64 [ %393, %399 ], [ %414, %405 ]
  %422 = icmp ult i64 %400, 12
  br i1 %422, label %455, label %423

423:                                              ; preds = %418, %423
  %424 = phi i32* [ %453, %423 ], [ %420, %418 ]
  %425 = phi i64 [ %452, %423 ], [ %421, %418 ]
  %426 = ptrtoint i32* %424 to i64
  %427 = inttoptr i64 %425 to i32*
  %428 = load i32, i32* %427, align 4
  %429 = load i32, i32* %424, align 4
  %430 = icmp ult i32 %428, %429
  %431 = select i1 %430, i64 %426, i64 %425
  %432 = getelementptr inbounds i32, i32* %424, i64 1
  %433 = ptrtoint i32* %432 to i64
  %434 = inttoptr i64 %431 to i32*
  %435 = load i32, i32* %434, align 4
  %436 = load i32, i32* %432, align 4
  %437 = icmp ult i32 %435, %436
  %438 = select i1 %437, i64 %433, i64 %431
  %439 = getelementptr inbounds i32, i32* %424, i64 2
  %440 = ptrtoint i32* %439 to i64
  %441 = inttoptr i64 %438 to i32*
  %442 = load i32, i32* %441, align 4
  %443 = load i32, i32* %439, align 4
  %444 = icmp ult i32 %442, %443
  %445 = select i1 %444, i64 %440, i64 %438
  %446 = getelementptr inbounds i32, i32* %424, i64 3
  %447 = ptrtoint i32* %446 to i64
  %448 = inttoptr i64 %445 to i32*
  %449 = load i32, i32* %448, align 4
  %450 = load i32, i32* %446, align 4
  %451 = icmp ult i32 %449, %450
  %452 = select i1 %451, i64 %447, i64 %445
  %453 = getelementptr inbounds i32, i32* %424, i64 4
  %454 = icmp eq i32* %453, %49
  br i1 %454, label %455, label %423

455:                                              ; preds = %418, %423, %389, %395
  %456 = phi i64 [ %393, %389 ], [ %393, %395 ], [ %419, %418 ], [ %452, %423 ]
  %457 = inttoptr i64 %456 to i32*
  %458 = load i32, i32* %457, align 4
  %459 = icmp ugt i32 %458, 131069
  br i1 %459, label %460, label %465

460:                                              ; preds = %455
  %461 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %15, i64 0, i32 14
  %462 = load i16, i16* %461, align 4
  %463 = icmp eq i16 %462, 1
  br i1 %463, label %465, label %464

464:                                              ; preds = %460
  store i16 1, i16* %461, align 4
  br label %465

465:                                              ; preds = %464, %460, %455
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.36"* %31, i32* nonnull %48, i32* %49) #9
  %466 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 2
  %467 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %466, i64 0, i32 0, i32 0
  %468 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %467, align 8
  %469 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 2, i32 0, i32 1
  %470 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %469, align 8
  %471 = icmp eq %"struct.std::__1::pair"* %468, %470
  %472 = ptrtoint %"struct.std::__1::pair"* %468 to i64
  %473 = ptrtoint %"struct.std::__1::pair"* %470 to i64
  br i1 %471, label %474, label %520

474:                                              ; preds = %465
  %475 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %476 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %475, align 8
  %477 = icmp ult %"struct.std::__1::pair"* %468, %476
  br i1 %477, label %478, label %483

478:                                              ; preds = %474
  %479 = bitcast %"struct.std::__1::pair"* %468 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i8* @_ZZN3ots12OpenTypeGLYF5ParseEPKhmE5kZero to i64), i64 1>, <2 x i64>* %479, align 8
  %480 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %468, i64 1
  %481 = ptrtoint %"struct.std::__1::pair"* %480 to i64
  %482 = bitcast %"struct.std::__1::pair"** %469 to i64*
  store i64 %481, i64* %482, align 8
  br label %520

483:                                              ; preds = %474
  %484 = ptrtoint %"struct.std::__1::pair"* %476 to i64
  %485 = bitcast %"struct.std::__1::pair"** %469 to i64*
  %486 = bitcast %"class.std::__1::vector"* %466 to i64*
  %487 = bitcast %"struct.std::__1::pair"** %475 to i64*
  %488 = sub i64 %484, %472
  %489 = ashr exact i64 %488, 4
  %490 = icmp ult i64 %489, 576460752303423487
  br i1 %490, label %491, label %497

491:                                              ; preds = %483
  %492 = ashr exact i64 %488, 3
  %493 = icmp eq i64 %488, 0
  %494 = select i1 %493, i64 1, i64 %492
  %495 = icmp ugt i64 %494, 1152921504606846975
  br i1 %495, label %496, label %497

496:                                              ; preds = %491
  call void @abort() #10
  unreachable

497:                                              ; preds = %483, %491
  %498 = phi i64 [ %494, %491 ], [ 1152921504606846975, %483 ]
  %499 = shl i64 %498, 4
  %500 = call i8* @_Znwm(i64 %499) #11
  %501 = bitcast i8* %500 to %"struct.std::__1::pair"*
  %502 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %501, i64 %498
  %503 = ptrtoint %"struct.std::__1::pair"* %502 to i64
  %504 = bitcast i8* %500 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i8* @_ZZN3ots12OpenTypeGLYF5ParseEPKhmE5kZero to i64), i64 1>, <2 x i64>* %504, align 8
  %505 = getelementptr inbounds i8, i8* %500, i64 16
  %506 = ptrtoint i8* %505 to i64
  %507 = sub i64 %473, %472
  %508 = ashr exact i64 %507, 4
  %509 = sub nsw i64 0, %508
  %510 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %501, i64 %509
  %511 = ptrtoint %"struct.std::__1::pair"* %510 to i64
  %512 = icmp sgt i64 %507, 0
  br i1 %512, label %513, label %516

513:                                              ; preds = %497
  %514 = bitcast %"struct.std::__1::pair"* %510 to i8*
  %515 = bitcast %"struct.std::__1::pair"* %468 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %514, i8* align 8 %515, i64 %507, i1 false) #9
  br label %516

516:                                              ; preds = %513, %497
  store i64 %511, i64* %486, align 8
  store i64 %506, i64* %485, align 8
  store i64 %503, i64* %487, align 8
  %517 = icmp eq %"struct.std::__1::pair"* %468, null
  br i1 %517, label %520, label %518

518:                                              ; preds = %516
  %519 = bitcast %"struct.std::__1::pair"* %468 to i8*
  call void @_ZdlPv(i8* %519) #11
  br label %520

520:                                              ; preds = %518, %516, %478, %387, %465
  %521 = phi i1 [ %388, %387 ], [ true, %465 ], [ true, %478 ], [ true, %516 ], [ true, %518 ]
  call void @_ZdlPv(i8* nonnull %47) #11
  br label %522

522:                                              ; preds = %42, %520, %21
  %523 = phi i1 [ %22, %21 ], [ %43, %42 ], [ %521, %520 ]
  ret i1 %523
}

declare %"class.ots::Table"* @_ZNK3ots4Font13GetTypedTableEj(%"struct.ots::Font"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3ots12OpenTypeGLYF21GetGlyphBufferSectionEPKhmRKNSt3__16vectorIjNS3_9allocatorIjEEEEj(%"class.ots::Buffer"* noalias nocapture sret, %"class.ots::OpenTypeGLYF"*, i8*, i64, %"class.std::__1::vector.36"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %7 = zext i32 %5 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %4, i64 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds i32, i32* %9, i64 %7
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %5, 1
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i32, i32* %9, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = sub i32 %15, %11
  %17 = icmp eq i32 %16, 0
  %18 = zext i32 %11 to i64
  br i1 %17, label %19, label %24

19:                                               ; preds = %6
  %20 = getelementptr inbounds i8, i8* %2, i64 %18
  %21 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %0, i64 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %0, i64 0, i32 1
  %23 = bitcast i64* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false)
  br label %49

24:                                               ; preds = %6
  %25 = icmp ult i64 %18, %3
  br i1 %25, label %30, label %26

26:                                               ; preds = %24
  %27 = bitcast %"class.ots::OpenTypeGLYF"* %1 to %"class.ots::Table"*
  %28 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %27, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.41, i64 0, i64 0), i32 %5, i32 %11, i64 %3) #9
  %29 = bitcast %"class.ots::Buffer"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false)
  br label %49

30:                                               ; preds = %24
  %31 = icmp ult i32 %15, %11
  br i1 %31, label %32, label %36

32:                                               ; preds = %30
  %33 = bitcast %"class.ots::OpenTypeGLYF"* %1 to %"class.ots::Table"*
  %34 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %33, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.42, i64 0, i64 0), i32 %5, i32 %16) #9
  %35 = bitcast %"class.ots::Buffer"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false)
  br label %49

36:                                               ; preds = %30
  %37 = zext i32 %15 to i64
  %38 = icmp ugt i64 %37, %3
  br i1 %38, label %39, label %43

39:                                               ; preds = %36
  %40 = bitcast %"class.ots::OpenTypeGLYF"* %1 to %"class.ots::Table"*
  %41 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %40, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.43, i64 0, i64 0), i32 %5, i32 %16) #9
  %42 = bitcast %"class.ots::Buffer"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false)
  br label %49

43:                                               ; preds = %36
  %44 = getelementptr inbounds i8, i8* %2, i64 %18
  %45 = zext i32 %16 to i64
  %46 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %0, i64 0, i32 0
  store i8* %44, i8** %46, align 8
  %47 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %0, i64 0, i32 1
  store i64 %45, i64* %47, align 8
  %48 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %0, i64 0, i32 2
  store i64 0, i64* %48, align 8
  br label %49

49:                                               ; preds = %43, %39, %32, %26, %19
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeGLYF32TraverseComponentsCountingPointsERNS_6BufferEtjPNS0_19ComponentPointCountE(%"class.ots::OpenTypeGLYF"*, %"class.ots::Buffer"* nocapture dereferenceable(24), i16 zeroext, i32, %"struct.ots::OpenTypeGLYF::ComponentPointCount"*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 2
  %9 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %8, %10
  br i1 %11, label %24, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %7
  %16 = bitcast i8* %15 to i16*
  %17 = load i16, i16* %16, align 1
  %18 = tail call i16 @llvm.bswap.i16(i16 %17) #9
  store i64 %8, i64* %6, align 8
  %19 = add i64 %7, 10
  %20 = icmp ugt i64 %19, %10
  %21 = add i64 %10, -8
  %22 = icmp ugt i64 %8, %21
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %27

24:                                               ; preds = %12, %5
  %25 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %26 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %25, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.36, i64 0, i64 0)) #9
  br label %223

27:                                               ; preds = %12
  store i64 %19, i64* %6, align 8
  %28 = icmp slt i16 %18, -1
  br i1 %28, label %29, label %33

29:                                               ; preds = %27
  %30 = sext i16 %18 to i32
  %31 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %32 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %31, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.37, i64 0, i64 0), i32 %30) #9
  br label %223

33:                                               ; preds = %27
  %34 = icmp eq i16 %17, 0
  br i1 %34, label %223, label %35

35:                                               ; preds = %33
  %36 = icmp ugt i32 %3, 65535
  br i1 %36, label %37, label %41

37:                                               ; preds = %35
  %38 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %39 = zext i16 %2 to i32
  %40 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %38, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.38, i64 0, i64 0), i32 %39) #9
  br label %223

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 1
  %43 = load %"class.ots::OpenTypeMAXP"*, %"class.ots::OpenTypeMAXP"** %42, align 8
  %44 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %43, i64 0, i32 2
  %45 = load i8, i8* %44, align 4, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %57, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %43, i64 0, i32 15
  %49 = load i16, i16* %48, align 2
  %50 = zext i16 %49 to i32
  %51 = icmp ult i32 %50, %3
  br i1 %51, label %52, label %57

52:                                               ; preds = %47
  %53 = trunc i32 %3 to i16
  store i16 %53, i16* %48, align 2
  %54 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %55 = zext i16 %2 to i32
  %56 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %54, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.39, i64 0, i64 0), i32 %55, i32 %3) #9
  br label %57

57:                                               ; preds = %41, %47, %52
  %58 = icmp sgt i16 %18, 0
  br i1 %58, label %70, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::ComponentPointCount", %"struct.ots::OpenTypeGLYF::ComponentPointCount"* %4, i64 0, i32 1
  %61 = add nuw nsw i32 %3, 1
  %62 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::ComponentPointCount", %"struct.ots::OpenTypeGLYF::ComponentPointCount"* %4, i64 0, i32 1, i32 0, i32 1
  %63 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::ComponentPointCount", %"struct.ots::OpenTypeGLYF::ComponentPointCount"* %4, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %64 = bitcast %"struct.ots::OpenTypeGLYF::GidAtLevel"** %62 to i64*
  %65 = bitcast %"class.std::__1::vector.29"* %60 to i64*
  %66 = bitcast %"struct.ots::OpenTypeGLYF::GidAtLevel"** %63 to i64*
  %67 = zext i32 %61 to i64
  %68 = shl nuw i64 %67, 32
  %69 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %60, i64 0, i32 0, i32 0
  br label %96

70:                                               ; preds = %57
  %71 = sext i16 %18 to i32
  %72 = load i64, i64* %6, align 8
  %73 = load i64, i64* %9, align 8
  br label %74

74:                                               ; preds = %79, %70
  %75 = phi i64 [ %72, %70 ], [ %77, %79 ]
  %76 = phi i32 [ 0, %70 ], [ %84, %79 ]
  %77 = add i64 %75, 2
  %78 = icmp ugt i64 %77, %73
  br i1 %78, label %86, label %79

79:                                               ; preds = %74
  %80 = load i8*, i8** %13, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 %75
  %82 = bitcast i8* %81 to i16*
  %83 = load i16, i16* %82, align 1
  store i64 %77, i64* %6, align 8
  %84 = add nuw nsw i32 %76, 1
  %85 = icmp eq i32 %84, %71
  br i1 %85, label %89, label %74

86:                                               ; preds = %74
  %87 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %88 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %87, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i32 %76) #9
  br label %223

89:                                               ; preds = %79
  %90 = tail call i16 @llvm.bswap.i16(i16 %83) #9
  %91 = add i16 %90, 1
  %92 = zext i16 %91 to i32
  %93 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::ComponentPointCount", %"struct.ots::OpenTypeGLYF::ComponentPointCount"* %4, i64 0, i32 0
  %94 = load i32, i32* %93, align 8
  %95 = add i32 %94, %92
  store i32 %95, i32* %93, align 8
  br label %223

96:                                               ; preds = %59, %220
  %97 = load i64, i64* %6, align 8
  %98 = add i64 %97, 2
  %99 = load i64, i64* %9, align 8
  %100 = icmp ugt i64 %98, %99
  br i1 %100, label %109, label %101

101:                                              ; preds = %96
  %102 = load i8*, i8** %13, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %97
  %104 = bitcast i8* %103 to i16*
  %105 = load i16, i16* %104, align 1
  %106 = tail call i16 @llvm.bswap.i16(i16 %105) #9
  store i64 %98, i64* %6, align 8
  %107 = add i64 %97, 4
  %108 = icmp ugt i64 %107, %99
  br i1 %108, label %109, label %112

109:                                              ; preds = %101, %96
  %110 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %111 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %110, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.18, i64 0, i64 0)) #9
  br label %223

112:                                              ; preds = %101
  %113 = getelementptr inbounds i8, i8* %102, i64 %98
  %114 = bitcast i8* %113 to i16*
  %115 = load i16, i16* %114, align 1
  %116 = tail call i16 @llvm.bswap.i16(i16 %115) #9
  store i64 %107, i64* %6, align 8
  %117 = zext i16 %106 to i32
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  %120 = select i1 %119, i64 2, i64 4
  %121 = and i32 %117, 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %112
  %124 = add nuw nsw i64 %120, 2
  br label %135

125:                                              ; preds = %112
  %126 = and i32 %117, 64
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %125
  %129 = add nuw nsw i64 %120, 4
  br label %135

130:                                              ; preds = %125
  %131 = lshr i16 %106, 4
  %132 = and i16 %131, 8
  %133 = zext i16 %132 to i64
  %134 = or i64 %120, %133
  br label %135

135:                                              ; preds = %130, %128, %123
  %136 = phi i64 [ %129, %128 ], [ %124, %123 ], [ %134, %130 ]
  %137 = add i64 %107, %136
  %138 = icmp ugt i64 %137, %99
  %139 = sub i64 %99, %136
  %140 = icmp ugt i64 %107, %139
  %141 = or i1 %140, %138
  br i1 %141, label %142, label %145

142:                                              ; preds = %135
  %143 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %144 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %143, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.40, i64 0, i64 0)) #9
  br label %223

145:                                              ; preds = %135
  store i64 %137, i64* %6, align 8
  %146 = load %"class.ots::OpenTypeMAXP"*, %"class.ots::OpenTypeMAXP"** %42, align 8
  %147 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %146, i64 0, i32 1
  %148 = load i16, i16* %147, align 2
  %149 = icmp ult i16 %116, %148
  br i1 %149, label %154, label %150

150:                                              ; preds = %145
  %151 = zext i16 %116 to i32
  %152 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %153 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %152, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.19, i64 0, i64 0), i32 %151) #9
  br label %223

154:                                              ; preds = %145
  %155 = load %"struct.ots::OpenTypeGLYF::GidAtLevel"*, %"struct.ots::OpenTypeGLYF::GidAtLevel"** %62, align 8
  %156 = load %"struct.ots::OpenTypeGLYF::GidAtLevel"*, %"struct.ots::OpenTypeGLYF::GidAtLevel"** %63, align 8
  %157 = icmp ult %"struct.ots::OpenTypeGLYF::GidAtLevel"* %155, %156
  %158 = ptrtoint %"struct.ots::OpenTypeGLYF::GidAtLevel"* %156 to i64
  br i1 %157, label %159, label %165

159:                                              ; preds = %154
  %160 = bitcast %"struct.ots::OpenTypeGLYF::GidAtLevel"* %155 to i64*
  %161 = zext i16 %116 to i64
  %162 = or i64 %68, %161
  store i64 %162, i64* %160, align 4
  %163 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::GidAtLevel", %"struct.ots::OpenTypeGLYF::GidAtLevel"* %155, i64 1
  %164 = ptrtoint %"struct.ots::OpenTypeGLYF::GidAtLevel"* %163 to i64
  store i64 %164, i64* %64, align 8
  br label %220

165:                                              ; preds = %154
  %166 = ptrtoint %"struct.ots::OpenTypeGLYF::GidAtLevel"* %155 to i64
  %167 = load i64, i64* %65, align 8
  %168 = sub i64 %166, %167
  %169 = ashr exact i64 %168, 3
  %170 = add nsw i64 %169, 1
  %171 = icmp ugt i64 %170, 2305843009213693951
  br i1 %171, label %172, label %174

172:                                              ; preds = %165
  %173 = bitcast %"class.std::__1::vector.29"* %60 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %173) #10
  unreachable

174:                                              ; preds = %165
  %175 = sub i64 %158, %167
  %176 = ashr exact i64 %175, 3
  %177 = icmp ult i64 %176, 1152921504606846975
  br i1 %177, label %178, label %186

178:                                              ; preds = %174
  %179 = ashr exact i64 %175, 2
  %180 = icmp ult i64 %179, %170
  %181 = select i1 %180, i64 %170, i64 %179
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %191, label %183

183:                                              ; preds = %178
  %184 = icmp ugt i64 %181, 2305843009213693951
  br i1 %184, label %185, label %186

185:                                              ; preds = %183
  tail call void @abort() #10
  unreachable

186:                                              ; preds = %183, %174
  %187 = phi i64 [ %181, %183 ], [ 2305843009213693951, %174 ]
  %188 = shl i64 %187, 3
  %189 = tail call i8* @_Znwm(i64 %188) #11
  %190 = bitcast i8* %189 to %"struct.ots::OpenTypeGLYF::GidAtLevel"*
  br label %191

191:                                              ; preds = %186, %178
  %192 = phi i64 [ %187, %186 ], [ 0, %178 ]
  %193 = phi %"struct.ots::OpenTypeGLYF::GidAtLevel"* [ %190, %186 ], [ null, %178 ]
  %194 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::GidAtLevel", %"struct.ots::OpenTypeGLYF::GidAtLevel"* %193, i64 %169
  %195 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::GidAtLevel", %"struct.ots::OpenTypeGLYF::GidAtLevel"* %193, i64 %192
  %196 = ptrtoint %"struct.ots::OpenTypeGLYF::GidAtLevel"* %195 to i64
  %197 = bitcast %"struct.ots::OpenTypeGLYF::GidAtLevel"* %194 to i64*
  %198 = zext i16 %116 to i64
  %199 = or i64 %68, %198
  store i64 %199, i64* %197, align 4
  %200 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::GidAtLevel", %"struct.ots::OpenTypeGLYF::GidAtLevel"* %194, i64 1
  %201 = ptrtoint %"struct.ots::OpenTypeGLYF::GidAtLevel"* %200 to i64
  %202 = load %"struct.ots::OpenTypeGLYF::GidAtLevel"*, %"struct.ots::OpenTypeGLYF::GidAtLevel"** %69, align 8
  %203 = load i64, i64* %64, align 8
  %204 = ptrtoint %"struct.ots::OpenTypeGLYF::GidAtLevel"* %202 to i64
  %205 = sub i64 %203, %204
  %206 = ashr exact i64 %205, 3
  %207 = sub nsw i64 0, %206
  %208 = getelementptr inbounds %"struct.ots::OpenTypeGLYF::GidAtLevel", %"struct.ots::OpenTypeGLYF::GidAtLevel"* %194, i64 %207
  %209 = ptrtoint %"struct.ots::OpenTypeGLYF::GidAtLevel"* %208 to i64
  %210 = icmp sgt i64 %205, 0
  br i1 %210, label %211, label %215

211:                                              ; preds = %191
  %212 = bitcast %"struct.ots::OpenTypeGLYF::GidAtLevel"* %208 to i8*
  %213 = bitcast %"struct.ots::OpenTypeGLYF::GidAtLevel"* %202 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %212, i8* align 4 %213, i64 %205, i1 false) #9
  %214 = load %"struct.ots::OpenTypeGLYF::GidAtLevel"*, %"struct.ots::OpenTypeGLYF::GidAtLevel"** %69, align 8
  br label %215

215:                                              ; preds = %211, %191
  %216 = phi %"struct.ots::OpenTypeGLYF::GidAtLevel"* [ %202, %191 ], [ %214, %211 ]
  store i64 %209, i64* %65, align 8
  store i64 %201, i64* %64, align 8
  store i64 %196, i64* %66, align 8
  %217 = icmp eq %"struct.ots::OpenTypeGLYF::GidAtLevel"* %216, null
  br i1 %217, label %220, label %218

218:                                              ; preds = %215
  %219 = bitcast %"struct.ots::OpenTypeGLYF::GidAtLevel"* %216 to i8*
  tail call void @_ZdlPv(i8* %219) #11
  br label %220

220:                                              ; preds = %159, %215, %218
  %221 = and i16 %106, 32
  %222 = icmp eq i16 %221, 0
  br i1 %222, label %223, label %96

223:                                              ; preds = %220, %109, %150, %142, %86, %89, %33, %37, %29, %24
  %224 = phi i1 [ %32, %29 ], [ %40, %37 ], [ %26, %24 ], [ true, %33 ], [ true, %89 ], [ %88, %86 ], [ %111, %109 ], [ %153, %150 ], [ %144, %142 ], [ true, %220 ]
  ret i1 %224
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeGLYF9SerializeEPNS_9OTSStreamE(%"class.ots::OpenTypeGLYF"*, %"class.ots::OTSStream"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %135, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.ots::OTSStream"* %1 to i64 (%"class.ots::OTSStream"*)***
  %14 = bitcast i32* %3 to i8*
  %15 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %16 = bitcast i32* %4 to i8*
  %17 = bitcast %"class.ots::OTSStream"* %1 to i1 (%"class.ots::OTSStream"*, i8*, i64)***
  br label %18

18:                                               ; preds = %12, %124
  %19 = phi i64 [ %10, %12 ], [ %128, %124 ]
  %20 = phi i64 [ 0, %12 ], [ %126, %124 ]
  %21 = phi i32 [ 0, %12 ], [ %125, %124 ]
  %22 = inttoptr i64 %19 to %"struct.std::__1::pair"*
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 %20, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 %20, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %132, label %28

28:                                               ; preds = %18
  %29 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %13, align 8
  %30 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %29, i64 4
  %31 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %30, align 8
  %32 = tail call i64 %31(%"class.ots::OTSStream"* %1) #9
  %33 = and i64 %32, 3
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %45, label %35

35:                                               ; preds = %28
  %36 = sub nuw nsw i64 4, %33
  %37 = icmp ult i64 %36, %26
  %38 = select i1 %37, i64 %36, i64 %26
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #9
  store i32 0, i32* %3, align 4
  %39 = getelementptr inbounds i8, i8* %14, i64 %33
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %24, i64 %38, i1 false) #9
  %40 = load i32, i32* %3, align 4
  %41 = tail call i32 @llvm.bswap.i32(i32 %40) #9
  %42 = load i32, i32* %15, align 8
  %43 = add i32 %42, %41
  store i32 %43, i32* %15, align 8
  %44 = sub i64 %26, %38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #9
  br label %45

45:                                               ; preds = %35, %28
  %46 = phi i64 [ %26, %28 ], [ %44, %35 ]
  %47 = phi i64 [ 0, %28 ], [ %38, %35 ]
  %48 = icmp ugt i64 %46, 3
  br i1 %48, label %49, label %109

49:                                               ; preds = %45
  %50 = load i32, i32* %15, align 8
  %51 = add i64 %46, -4
  %52 = lshr i64 %51, 2
  %53 = add nuw nsw i64 %52, 1
  %54 = and i64 %53, 3
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %70, label %56

56:                                               ; preds = %49, %56
  %57 = phi i32 [ %65, %56 ], [ %50, %49 ]
  %58 = phi i64 [ %67, %56 ], [ %47, %49 ]
  %59 = phi i64 [ %66, %56 ], [ %46, %49 ]
  %60 = phi i64 [ %68, %56 ], [ %54, %49 ]
  %61 = getelementptr inbounds i8, i8* %24, i64 %58
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 1
  %64 = tail call i32 @llvm.bswap.i32(i32 %63) #9
  %65 = add i32 %64, %57
  store i32 %65, i32* %15, align 8
  %66 = add i64 %59, -4
  %67 = add i64 %58, 4
  %68 = add i64 %60, -1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %56, !llvm.loop !11

70:                                               ; preds = %56, %49
  %71 = phi i32 [ %50, %49 ], [ %65, %56 ]
  %72 = phi i64 [ %47, %49 ], [ %67, %56 ]
  %73 = phi i64 [ %46, %49 ], [ %66, %56 ]
  %74 = phi i64 [ undef, %49 ], [ %67, %56 ]
  %75 = icmp ult i64 %51, 12
  br i1 %75, label %106, label %76

76:                                               ; preds = %70, %76
  %77 = phi i32 [ %102, %76 ], [ %71, %70 ]
  %78 = phi i64 [ %104, %76 ], [ %72, %70 ]
  %79 = phi i64 [ %103, %76 ], [ %73, %70 ]
  %80 = getelementptr inbounds i8, i8* %24, i64 %78
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* %81, align 1
  %83 = tail call i32 @llvm.bswap.i32(i32 %82) #9
  %84 = add i32 %83, %77
  store i32 %84, i32* %15, align 8
  %85 = add i64 %78, 4
  %86 = getelementptr inbounds i8, i8* %24, i64 %85
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 1
  %89 = tail call i32 @llvm.bswap.i32(i32 %88) #9
  %90 = add i32 %89, %84
  store i32 %90, i32* %15, align 8
  %91 = add i64 %78, 8
  %92 = getelementptr inbounds i8, i8* %24, i64 %91
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 1
  %95 = tail call i32 @llvm.bswap.i32(i32 %94) #9
  %96 = add i32 %95, %90
  store i32 %96, i32* %15, align 8
  %97 = add i64 %78, 12
  %98 = getelementptr inbounds i8, i8* %24, i64 %97
  %99 = bitcast i8* %98 to i32*
  %100 = load i32, i32* %99, align 1
  %101 = tail call i32 @llvm.bswap.i32(i32 %100) #9
  %102 = add i32 %101, %96
  store i32 %102, i32* %15, align 8
  %103 = add i64 %79, -16
  %104 = add i64 %78, 16
  %105 = icmp ugt i64 %103, 3
  br i1 %105, label %76, label %106

106:                                              ; preds = %76, %70
  %107 = phi i64 [ %74, %70 ], [ %104, %76 ]
  %108 = and i64 %46, 3
  br label %109

109:                                              ; preds = %106, %45
  %110 = phi i64 [ %46, %45 ], [ %108, %106 ]
  %111 = phi i64 [ %47, %45 ], [ %107, %106 ]
  %112 = icmp eq i64 %110, 0
  br i1 %112, label %119, label %113

113:                                              ; preds = %109
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  store i32 0, i32* %4, align 4
  %114 = getelementptr inbounds i8, i8* %24, i64 %111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %16, i8* align 1 %114, i64 %110, i1 false) #9
  %115 = load i32, i32* %4, align 4
  %116 = tail call i32 @llvm.bswap.i32(i32 %115) #9
  %117 = load i32, i32* %15, align 8
  %118 = add i32 %117, %116
  store i32 %118, i32* %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  br label %119

119:                                              ; preds = %109, %113
  %120 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %17, align 8
  %121 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %120, i64 2
  %122 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %121, align 8
  %123 = tail call zeroext i1 %122(%"class.ots::OTSStream"* %1, i8* %24, i64 %26) #9
  br i1 %123, label %124, label %132

124:                                              ; preds = %119
  %125 = add i32 %21, 1
  %126 = zext i32 %125 to i64
  %127 = load i64, i64* %7, align 8
  %128 = load i64, i64* %9, align 8
  %129 = sub i64 %127, %128
  %130 = ashr exact i64 %129, 4
  %131 = icmp ugt i64 %130, %126
  br i1 %131, label %18, label %135

132:                                              ; preds = %18, %119
  %133 = bitcast %"class.ots::OpenTypeGLYF"* %0 to %"class.ots::Table"*
  %134 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %133, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.44, i64 0, i64 0), i32 %21) #9
  br label %135

135:                                              ; preds = %124, %2, %132
  %136 = phi i1 [ %134, %132 ], [ true, %2 ], [ true, %124 ]
  ret i1 %136
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypeGLYFD2Ev(%"class.ots::OpenTypeGLYF"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3ots12OpenTypeGLYFE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %8 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.std::__1::pair"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypeGLYFD0Ev(%"class.ots::OpenTypeGLYF"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3ots12OpenTypeGLYFE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %8 = getelementptr inbounds %"class.ots::OpenTypeGLYF", %"class.ots::OpenTypeGLYF"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.std::__1::pair"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.ots::OpenTypeGLYF"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  ret void
}

declare zeroext i1 @_ZN3ots5Table15ShouldSerializeEv(%"class.ots::Table"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.36"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.36"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #9
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #9
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #11
  %55 = bitcast %"class.std::__1::vector.36"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #9
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.36"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #10
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.36"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #10
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #11
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.36"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #9
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #8

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3ots12OpenTypeGLYF21GetGlyphBufferSectionEPKhmRKNSt3__16vectorIjNS3_9allocatorIjEEEEj: argument 0"}
!5 = distinct !{!5, !"_ZN3ots12OpenTypeGLYF21GetGlyphBufferSectionEPKhmRKNSt3__16vectorIjNS3_9allocatorIjEEEEj"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3ots12OpenTypeGLYF21GetGlyphBufferSectionEPKhmRKNSt3__16vectorIjNS3_9allocatorIjEEEEj: argument 0"}
!8 = distinct !{!8, !"_ZN3ots12OpenTypeGLYF21GetGlyphBufferSectionEPKhmRKNSt3__16vectorIjNS3_9allocatorIjEEEEj"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
