; ModuleID = '../../extensions/common/permissions/api_permission.cc'
source_filename = "../../extensions/common/permissions/api_permission.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::APIPermission" = type { i32 (...)**, %"class.extensions::APIPermissionInfo"* }
%"class.extensions::APIPermissionInfo" = type { i8*, i32, i32, %"class.extensions::APIPermission"* (%"class.extensions::APIPermissionInfo"*)* }
%"struct.extensions::APIPermissionInfo::InitInfo" = type { i32, i8*, i32, %"class.extensions::APIPermission"* (%"class.extensions::APIPermissionInfo"*)* }
%"class.(anonymous namespace)::SimpleAPIPermission" = type { %"class.extensions::APIPermission" }
%"class.extensions::PermissionIDSet" = type { i32 (...)**, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i64 }
%"struct.extensions::APIPermission::CheckParam" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.13" }
%"union.absl::variant_internal::DestructibleUnionImpl.13" = type { %"union.absl::variant_internal::DestructibleUnionImpl.14" }
%"union.absl::variant_internal::DestructibleUnionImpl.14" = type { %"union.absl::variant_internal::DestructibleUnionImpl.15" }
%"union.absl::variant_internal::DestructibleUnionImpl.15" = type { %"union.absl::variant_internal::DestructibleUnionImpl.16" }
%"union.absl::variant_internal::DestructibleUnionImpl.16" = type { %"class.std::__1::basic_string" }
%"class.std::__1::vector.45" = type opaque

$_ZZN7logging15CheckOpValueStrIPKN10extensions17APIPermissionInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

@_ZTVN10extensions13APIPermissionE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::APIPermission"*)* @_ZN10extensions13APIPermissionD2Ev to i8*), i8* bitcast (void (%"class.extensions::APIPermission"*)* @_ZN10extensions13APIPermissionD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN12_GLOBAL__N_119SimpleAPIPermissionE = internal unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::APIPermission"*)* @_ZN10extensions13APIPermissionD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SimpleAPIPermission"*)* @_ZN12_GLOBAL__N_119SimpleAPIPermissionD0Ev to i8*), i8* bitcast (void (%"class.extensions::PermissionIDSet"*, %"class.(anonymous namespace)::SimpleAPIPermission"*)* @_ZNK12_GLOBAL__N_119SimpleAPIPermission14GetPermissionsEv to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::SimpleAPIPermission"*, %"struct.extensions::APIPermission::CheckParam"*)* @_ZNK12_GLOBAL__N_119SimpleAPIPermission5CheckEPKN10extensions13APIPermission10CheckParamE to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::SimpleAPIPermission"*, %"class.extensions::APIPermission"*)* @_ZNK12_GLOBAL__N_119SimpleAPIPermission8ContainsEPKN10extensions13APIPermissionE to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::SimpleAPIPermission"*, %"class.extensions::APIPermission"*)* @_ZNK12_GLOBAL__N_119SimpleAPIPermission5EqualEPKN10extensions13APIPermissionE to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::SimpleAPIPermission"*, %"class.base::Value"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.45"*)* @_ZN12_GLOBAL__N_119SimpleAPIPermission9FromValueEPKN4base5ValueEPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEPNS5_6vectorISB_NS9_ISB_EEEE to i8*), i8* bitcast (%"class.base::Value"* (%"class.(anonymous namespace)::SimpleAPIPermission"*)* @_ZNK12_GLOBAL__N_119SimpleAPIPermission7ToValueEv to i8*), i8* bitcast (%"class.extensions::APIPermission"* (%"class.(anonymous namespace)::SimpleAPIPermission"*)* @_ZNK12_GLOBAL__N_119SimpleAPIPermission5CloneEv to i8*), i8* bitcast (%"class.extensions::APIPermission"* (%"class.(anonymous namespace)::SimpleAPIPermission"*, %"class.extensions::APIPermission"*)* @_ZNK12_GLOBAL__N_119SimpleAPIPermission4DiffEPKN10extensions13APIPermissionE to i8*), i8* bitcast (%"class.extensions::APIPermission"* (%"class.(anonymous namespace)::SimpleAPIPermission"*, %"class.extensions::APIPermission"*)* @_ZNK12_GLOBAL__N_119SimpleAPIPermission5UnionEPKN10extensions13APIPermissionE to i8*), i8* bitcast (%"class.extensions::APIPermission"* (%"class.(anonymous namespace)::SimpleAPIPermission"*, %"class.extensions::APIPermission"*)* @_ZNK12_GLOBAL__N_119SimpleAPIPermission9IntersectEPKN10extensions13APIPermissionE to i8*)] }, align 8
@.str = private unnamed_addr constant [22 x i8] c"info() == rhs->info()\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"../../extensions/common/permissions/api_permission.cc\00", align 1

@_ZN10extensions13APIPermissionD1Ev = hidden unnamed_addr alias void (%"class.extensions::APIPermission"*), void (%"class.extensions::APIPermission"*)* @_ZN10extensions13APIPermissionD2Ev
@_ZN10extensions17APIPermissionInfoC1ERKNS0_8InitInfoE = hidden unnamed_addr alias void (%"class.extensions::APIPermissionInfo"*, %"struct.extensions::APIPermissionInfo::InitInfo"*), void (%"class.extensions::APIPermissionInfo"*, %"struct.extensions::APIPermissionInfo::InitInfo"*)* @_ZN10extensions17APIPermissionInfoC2ERKNS0_8InitInfoE
@_ZN10extensions17APIPermissionInfoD1Ev = hidden unnamed_addr alias void (%"class.extensions::APIPermissionInfo"*), void (%"class.extensions::APIPermissionInfo"*)* @_ZN10extensions17APIPermissionInfoD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions13APIPermissionC2EPKNS_17APIPermissionInfoE(%"class.extensions::APIPermission"* nocapture, %"class.extensions::APIPermissionInfo"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::APIPermission", %"class.extensions::APIPermission"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN10extensions13APIPermissionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.extensions::APIPermission", %"class.extensions::APIPermission"* %0, i64 0, i32 1
  store %"class.extensions::APIPermissionInfo"* %1, %"class.extensions::APIPermissionInfo"** %4, align 8
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN10extensions13APIPermissionD0Ev(%"class.extensions::APIPermission"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK10extensions13APIPermission2idEv(%"class.extensions::APIPermission"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.extensions::APIPermission", %"class.extensions::APIPermission"* %0, i64 0, i32 1
  %3 = load %"class.extensions::APIPermissionInfo"*, %"class.extensions::APIPermissionInfo"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::APIPermissionInfo", %"class.extensions::APIPermissionInfo"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK10extensions13APIPermission4nameEv(%"class.extensions::APIPermission"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.extensions::APIPermission", %"class.extensions::APIPermission"* %0, i64 0, i32 1
  %3 = load %"class.extensions::APIPermissionInfo"*, %"class.extensions::APIPermissionInfo"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::APIPermissionInfo", %"class.extensions::APIPermissionInfo"* %3, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  ret i8* %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10extensions17APIPermissionInfoC2ERKNS0_8InitInfoE(%"class.extensions::APIPermissionInfo"* nocapture, %"struct.extensions::APIPermissionInfo::InitInfo"* nocapture readonly dereferenceable(32)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::APIPermissionInfo::InitInfo", %"struct.extensions::APIPermissionInfo::InitInfo"* %1, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.extensions::APIPermissionInfo"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.extensions::APIPermissionInfo", %"class.extensions::APIPermissionInfo"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.extensions::APIPermissionInfo::InitInfo", %"struct.extensions::APIPermissionInfo::InitInfo"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.extensions::APIPermissionInfo", %"class.extensions::APIPermissionInfo"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"struct.extensions::APIPermissionInfo::InitInfo", %"struct.extensions::APIPermissionInfo::InitInfo"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %10, align 4
  %13 = getelementptr inbounds %"class.extensions::APIPermissionInfo", %"class.extensions::APIPermissionInfo"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.extensions::APIPermissionInfo::InitInfo", %"struct.extensions::APIPermissionInfo::InitInfo"* %1, i64 0, i32 3
  %15 = bitcast %"class.extensions::APIPermission"* (%"class.extensions::APIPermissionInfo"*)** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.extensions::APIPermission"* (%"class.extensions::APIPermissionInfo"*)** %13 to i64*
  store i64 %16, i64* %17, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions17APIPermissionInfoD2Ev(%"class.extensions::APIPermissionInfo"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::APIPermission"* @_ZNK10extensions17APIPermissionInfo19CreateAPIPermissionEv(%"class.extensions::APIPermissionInfo"*) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.extensions::APIPermissionInfo", %"class.extensions::APIPermissionInfo"* %0, i64 0, i32 3
  %3 = load %"class.extensions::APIPermission"* (%"class.extensions::APIPermissionInfo"*)*, %"class.extensions::APIPermission"* (%"class.extensions::APIPermissionInfo"*)** %2, align 8
  %4 = icmp eq %"class.extensions::APIPermission"* (%"class.extensions::APIPermissionInfo"*)* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.extensions::APIPermission"* %3(%"class.extensions::APIPermissionInfo"* %0) #14
  %7 = ptrtoint %"class.extensions::APIPermission"* %6 to i64
  br label %15

8:                                                ; preds = %1
  %9 = ptrtoint %"class.extensions::APIPermissionInfo"* %0 to i64
  %10 = tail call i8* @_Znwm(i64 16) #15
  %11 = bitcast i8* %10 to i32 (...)***
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  %13 = bitcast i8* %12 to i64*
  store i64 %9, i64* %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN12_GLOBAL__N_119SimpleAPIPermissionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %14 = ptrtoint i8* %10 to i64
  br label %15

15:                                               ; preds = %8, %5
  %16 = phi i64 [ %14, %8 ], [ %7, %5 ]
  %17 = inttoptr i64 %16 to %"class.extensions::APIPermission"*
  ret %"class.extensions::APIPermission"* %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions13APIPermissionD2Ev(%"class.extensions::APIPermission"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119SimpleAPIPermissionD0Ev(%"class.(anonymous namespace)::SimpleAPIPermission"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::SimpleAPIPermission"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_119SimpleAPIPermission14GetPermissionsEv(%"class.extensions::PermissionIDSet"* noalias sret, %"class.(anonymous namespace)::SimpleAPIPermission"* nocapture readonly) unnamed_addr #6 align 2 {
  %3 = bitcast %"class.extensions::PermissionIDSet"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 32, i1 false)
  tail call void @_ZN10extensions15PermissionIDSetC1Ev(%"class.extensions::PermissionIDSet"* %0) #14
  %4 = getelementptr inbounds %"class.(anonymous namespace)::SimpleAPIPermission", %"class.(anonymous namespace)::SimpleAPIPermission"* %1, i64 0, i32 0, i32 1
  %5 = load %"class.extensions::APIPermissionInfo"*, %"class.extensions::APIPermissionInfo"** %4, align 8
  %6 = getelementptr inbounds %"class.extensions::APIPermissionInfo", %"class.extensions::APIPermissionInfo"* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  tail call void @_ZN10extensions15PermissionIDSet6insertENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionIDSet"* %0, i32 %7) #14
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_119SimpleAPIPermission5CheckEPKN10extensions13APIPermission10CheckParamE(%"class.(anonymous namespace)::SimpleAPIPermission"* nocapture readnone, %"struct.extensions::APIPermission::CheckParam"* readnone) unnamed_addr #5 align 2 {
  %3 = icmp eq %"struct.extensions::APIPermission::CheckParam"* %1, null
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_119SimpleAPIPermission8ContainsEPKN10extensions13APIPermissionE(%"class.(anonymous namespace)::SimpleAPIPermission"* nocapture readonly, %"class.extensions::APIPermission"* nocapture readonly) unnamed_addr #6 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.extensions::APIPermissionInfo"*, align 8
  %6 = alloca %"class.extensions::APIPermissionInfo"*, align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %10 = bitcast %"class.extensions::APIPermissionInfo"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.(anonymous namespace)::SimpleAPIPermission", %"class.(anonymous namespace)::SimpleAPIPermission"* %0, i64 0, i32 0, i32 1
  %12 = load %"class.extensions::APIPermissionInfo"*, %"class.extensions::APIPermissionInfo"** %11, align 8
  store %"class.extensions::APIPermissionInfo"* %12, %"class.extensions::APIPermissionInfo"** %5, align 8
  %13 = bitcast %"class.extensions::APIPermissionInfo"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.extensions::APIPermission", %"class.extensions::APIPermission"* %1, i64 0, i32 1
  %15 = load %"class.extensions::APIPermissionInfo"*, %"class.extensions::APIPermissionInfo"** %14, align 8
  store %"class.extensions::APIPermissionInfo"* %15, %"class.extensions::APIPermissionInfo"** %6, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = icmp eq %"class.extensions::APIPermissionInfo"* %12, %15
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* null, i8** %19, align 8
  br label %25

20:                                               ; preds = %2
  %21 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %10, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN10extensions17APIPermissionInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #14
  %22 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %13, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN10extensions17APIPermissionInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #14
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %18, %20
  %26 = phi i8* [ %24, %20 ], [ null, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  store i8* %26, i8** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #14
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 34, %"class.logging::CheckOpResult"* nonnull %4) #14
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  br label %31

31:                                               ; preds = %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_119SimpleAPIPermission5EqualEPKN10extensions13APIPermissionE(%"class.(anonymous namespace)::SimpleAPIPermission"* readonly, %"class.extensions::APIPermission"* readonly) unnamed_addr #6 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.extensions::APIPermissionInfo"*, align 8
  %6 = alloca %"class.extensions::APIPermissionInfo"*, align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.(anonymous namespace)::SimpleAPIPermission", %"class.(anonymous namespace)::SimpleAPIPermission"* %0, i64 0, i32 0
  %9 = icmp eq %"class.extensions::APIPermission"* %8, %1
  br i1 %9, label %35, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = bitcast %"class.extensions::APIPermissionInfo"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.(anonymous namespace)::SimpleAPIPermission", %"class.(anonymous namespace)::SimpleAPIPermission"* %0, i64 0, i32 0, i32 1
  %15 = load %"class.extensions::APIPermissionInfo"*, %"class.extensions::APIPermissionInfo"** %14, align 8
  store %"class.extensions::APIPermissionInfo"* %15, %"class.extensions::APIPermissionInfo"** %5, align 8
  %16 = bitcast %"class.extensions::APIPermissionInfo"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.extensions::APIPermission", %"class.extensions::APIPermission"* %1, i64 0, i32 1
  %18 = load %"class.extensions::APIPermissionInfo"*, %"class.extensions::APIPermissionInfo"** %17, align 8
  store %"class.extensions::APIPermissionInfo"* %18, %"class.extensions::APIPermissionInfo"** %6, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp eq %"class.extensions::APIPermissionInfo"* %15, %18
  br i1 %20, label %21, label %23

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* null, i8** %22, align 8
  br label %28

23:                                               ; preds = %10
  %24 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %13, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN10extensions17APIPermissionInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #14
  %25 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %16, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN10extensions17APIPermissionInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* %24, i8* %25) #14
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %21, %23
  %29 = phi i8* [ %27, %23 ], [ null, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %29, i8** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 40, %"class.logging::CheckOpResult"* nonnull %4) #14
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #14
  br label %34

34:                                               ; preds = %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  br label %35

35:                                               ; preds = %2, %34
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_119SimpleAPIPermission9FromValueEPKN4base5ValueEPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEPNS5_6vectorISB_NS9_ISB_EEEE(%"class.(anonymous namespace)::SimpleAPIPermission"* nocapture readnone, %"class.base::Value"* readnone, %"class.std::__1::basic_string"* nocapture readnone, %"class.std::__1::vector.45"* nocapture readnone) unnamed_addr #5 align 2 {
  %5 = icmp eq %"class.base::Value"* %1, null
  ret i1 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %"class.base::Value"* @_ZNK12_GLOBAL__N_119SimpleAPIPermission7ToValueEv(%"class.(anonymous namespace)::SimpleAPIPermission"* nocapture readnone) unnamed_addr #5 align 2 {
  ret %"class.base::Value"* null
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.extensions::APIPermission"* @_ZNK12_GLOBAL__N_119SimpleAPIPermission5CloneEv(%"class.(anonymous namespace)::SimpleAPIPermission"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SimpleAPIPermission", %"class.(anonymous namespace)::SimpleAPIPermission"* %0, i64 0, i32 0, i32 1
  %3 = bitcast %"class.extensions::APIPermissionInfo"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = tail call i8* @_Znwm(i64 16) #15
  %6 = bitcast i8* %5 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i64*
  store i64 %4, i64* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN12_GLOBAL__N_119SimpleAPIPermissionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = bitcast i8* %5 to %"class.extensions::APIPermission"*
  ret %"class.extensions::APIPermission"* %9
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.extensions::APIPermission"* @_ZNK12_GLOBAL__N_119SimpleAPIPermission4DiffEPKN10extensions13APIPermissionE(%"class.(anonymous namespace)::SimpleAPIPermission"* nocapture readonly, %"class.extensions::APIPermission"* nocapture readonly) unnamed_addr #6 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.extensions::APIPermissionInfo"*, align 8
  %6 = alloca %"class.extensions::APIPermissionInfo"*, align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %10 = bitcast %"class.extensions::APIPermissionInfo"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.(anonymous namespace)::SimpleAPIPermission", %"class.(anonymous namespace)::SimpleAPIPermission"* %0, i64 0, i32 0, i32 1
  %12 = load %"class.extensions::APIPermissionInfo"*, %"class.extensions::APIPermissionInfo"** %11, align 8
  store %"class.extensions::APIPermissionInfo"* %12, %"class.extensions::APIPermissionInfo"** %5, align 8
  %13 = bitcast %"class.extensions::APIPermissionInfo"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.extensions::APIPermission", %"class.extensions::APIPermission"* %1, i64 0, i32 1
  %15 = load %"class.extensions::APIPermissionInfo"*, %"class.extensions::APIPermissionInfo"** %14, align 8
  store %"class.extensions::APIPermissionInfo"* %15, %"class.extensions::APIPermissionInfo"** %6, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = icmp eq %"class.extensions::APIPermissionInfo"* %12, %15
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* null, i8** %19, align 8
  br label %25

20:                                               ; preds = %2
  %21 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %10, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN10extensions17APIPermissionInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #14
  %22 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %13, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN10extensions17APIPermissionInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #14
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %18, %20
  %26 = phi i8* [ %24, %20 ], [ null, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  store i8* %26, i8** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #14
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 57, %"class.logging::CheckOpResult"* nonnull %4) #14
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  br label %31

31:                                               ; preds = %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  ret %"class.extensions::APIPermission"* null
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.extensions::APIPermission"* @_ZNK12_GLOBAL__N_119SimpleAPIPermission5UnionEPKN10extensions13APIPermissionE(%"class.(anonymous namespace)::SimpleAPIPermission"* nocapture readonly, %"class.extensions::APIPermission"* nocapture readonly) unnamed_addr #6 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.extensions::APIPermissionInfo"*, align 8
  %6 = alloca %"class.extensions::APIPermissionInfo"*, align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %10 = bitcast %"class.extensions::APIPermissionInfo"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.(anonymous namespace)::SimpleAPIPermission", %"class.(anonymous namespace)::SimpleAPIPermission"* %0, i64 0, i32 0, i32 1
  %12 = load %"class.extensions::APIPermissionInfo"*, %"class.extensions::APIPermissionInfo"** %11, align 8
  store %"class.extensions::APIPermissionInfo"* %12, %"class.extensions::APIPermissionInfo"** %5, align 8
  %13 = bitcast %"class.extensions::APIPermissionInfo"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.extensions::APIPermission", %"class.extensions::APIPermission"* %1, i64 0, i32 1
  %15 = load %"class.extensions::APIPermissionInfo"*, %"class.extensions::APIPermissionInfo"** %14, align 8
  store %"class.extensions::APIPermissionInfo"* %15, %"class.extensions::APIPermissionInfo"** %6, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = icmp eq %"class.extensions::APIPermissionInfo"* %12, %15
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* null, i8** %19, align 8
  br label %25

20:                                               ; preds = %2
  %21 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %10, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN10extensions17APIPermissionInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #14
  %22 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %13, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN10extensions17APIPermissionInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #14
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %18, %20
  %26 = phi i8* [ %24, %20 ], [ null, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  store i8* %26, i8** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #14
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 63, %"class.logging::CheckOpResult"* nonnull %4) #14
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  br label %31

31:                                               ; preds = %28, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  %32 = bitcast %"class.extensions::APIPermissionInfo"** %11 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = call i8* @_Znwm(i64 16) #15
  %35 = bitcast i8* %34 to i32 (...)***
  %36 = getelementptr inbounds i8, i8* %34, i64 8
  %37 = bitcast i8* %36 to i64*
  store i64 %33, i64* %37, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN12_GLOBAL__N_119SimpleAPIPermissionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %38 = bitcast i8* %34 to %"class.extensions::APIPermission"*
  ret %"class.extensions::APIPermission"* %38
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.extensions::APIPermission"* @_ZNK12_GLOBAL__N_119SimpleAPIPermission9IntersectEPKN10extensions13APIPermissionE(%"class.(anonymous namespace)::SimpleAPIPermission"* nocapture readonly, %"class.extensions::APIPermission"* nocapture readonly) unnamed_addr #6 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.extensions::APIPermissionInfo"*, align 8
  %6 = alloca %"class.extensions::APIPermissionInfo"*, align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %10 = bitcast %"class.extensions::APIPermissionInfo"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.(anonymous namespace)::SimpleAPIPermission", %"class.(anonymous namespace)::SimpleAPIPermission"* %0, i64 0, i32 0, i32 1
  %12 = load %"class.extensions::APIPermissionInfo"*, %"class.extensions::APIPermissionInfo"** %11, align 8
  store %"class.extensions::APIPermissionInfo"* %12, %"class.extensions::APIPermissionInfo"** %5, align 8
  %13 = bitcast %"class.extensions::APIPermissionInfo"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.extensions::APIPermission", %"class.extensions::APIPermission"* %1, i64 0, i32 1
  %15 = load %"class.extensions::APIPermissionInfo"*, %"class.extensions::APIPermissionInfo"** %14, align 8
  store %"class.extensions::APIPermissionInfo"* %15, %"class.extensions::APIPermissionInfo"** %6, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = icmp eq %"class.extensions::APIPermissionInfo"* %12, %15
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* null, i8** %19, align 8
  br label %25

20:                                               ; preds = %2
  %21 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %10, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN10extensions17APIPermissionInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #14
  %22 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %13, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN10extensions17APIPermissionInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #14
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %18, %20
  %26 = phi i8* [ %24, %20 ], [ null, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  store i8* %26, i8** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #14
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 69, %"class.logging::CheckOpResult"* nonnull %4) #14
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  br label %31

31:                                               ; preds = %28, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  %32 = bitcast %"class.extensions::APIPermissionInfo"** %11 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = call i8* @_Znwm(i64 16) #15
  %35 = bitcast i8* %34 to i32 (...)***
  %36 = getelementptr inbounds i8, i8* %34, i64 8
  %37 = bitcast i8* %36 to i64*
  store i64 %33, i64* %37, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN12_GLOBAL__N_119SimpleAPIPermissionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %38 = bitcast i8* %34 to %"class.extensions::APIPermission"*
  ret %"class.extensions::APIPermission"* %38
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN10extensions15PermissionIDSetC1Ev(%"class.extensions::PermissionIDSet"*) unnamed_addr #10

declare void @_ZN10extensions15PermissionIDSet6insertENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionIDSet"*, i32) local_unnamed_addr #10

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #10

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #11

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #10

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN10extensions17APIPermissionInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #12 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #14
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
