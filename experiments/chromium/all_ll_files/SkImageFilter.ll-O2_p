; ModuleID = '../../third_party/skia/src/core/SkImageFilter.cpp'
source_filename = "../../third_party/skia/src/core/SkImageFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkImageFilterCacheKey = type { i32, %class.SkMatrix, %struct.SkIRect, i32, %struct.SkIRect }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkPaint = type <{ %class.sk_sp.249, %class.sk_sp.250, %class.sk_sp.251, %class.sk_sp.252, %class.sk_sp, %struct.SkRGBA4f, float, float, %union.anon.253, [4 x i8] }>
%class.sk_sp.249 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.250 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.251 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.252 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.253 = type { %struct.anon.254 }
%struct.anon.254 = type { i32 }
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp*, [16 x i8] }
%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%"class.skif::ParameterSpace" = type { %struct.SkRect }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkImageFilterCache = type { %class.SkRefCnt.base, [4 x i8] }
%"class.SkImageFilter_Base::Common" = type { %"class.SkImageFilter_Base::CropRect", %class.SkSTArray }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %class.sk_sp*, i64 }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.3*, i32, [4 x i8], void (%class.sk_sp.9*, %class.SkReadBuffer*)**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.9*, %class.SkReadBuffer*)* }
%class.sk_sp.9 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.10*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.15*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.3*, i8*, i64, i8*)*, i8* }
%class.sk_sp.10 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.11", [7 x i8] }>
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%class.sk_sp.15 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.16, i32, i32 }
%class.sk_sp.16 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.17*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.17*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.17*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.17 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.18, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.18 = type { %"struct.std::__1::atomic" }
%"class.skif::FilterResult.21" = type { %class.sk_sp.19, %"class.skif::LayerSpace.20" }
%class.sk_sp.19 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%"class.skif::LayerSpace.20" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%"class.skif::FilterResult" = type { %class.sk_sp.19, %"class.skif::LayerSpace.20" }
%"class.skif::DeviceSpace" = type { %struct.SkIRect }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.sk_sp.210 = type { %class.SkSpecialSurface* }
%class.SkSpecialSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, [4 x i8] }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.211, [384 x i64], %class.sk_sp.212, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.213", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.219" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.211 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.212 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc, i32, %class.SkAutoTMalloc, %"class.std::__1::vector", %class.SkGlyphRunList, %"class.std::__1::vector.239" }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.222" }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %struct.SkPoint* }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.229" }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.227, %class.SkSpan.228, %class.SkFont }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.226" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.226" = type { %struct.SkPoint* }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.227 = type { i32*, i64 }
%class.SkSpan.228 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp.3, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %class.SkGlyphRun* }
%class.SkGlyphRunList = type { %class.SkSpan.232, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.232 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt.233, %struct.SkRect, i32, %"struct.std::__1::atomic.234" }
%class.SkNVRefCnt.233 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.234" = type { %"struct.std::__1::__atomic_base.235" }
%"struct.std::__1::__atomic_base.235" = type { %"struct.std::__1::__atomic_base.236" }
%"struct.std::__1::__atomic_base.236" = type { %"struct.std::__1::__cxx_atomic_impl.237" }
%"struct.std::__1::__cxx_atomic_impl.237" = type { %"struct.std::__1::__cxx_atomic_base_impl.238" }
%"struct.std::__1::__cxx_atomic_base_impl.238" = type { i32 }
%"class.std::__1::vector.239" = type { %"class.std::__1::__vector_base.240" }
%"class.std::__1::__vector_base.240" = type { i16*, i16*, %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { i16* }
%"class.skif::FilterResult.22" = type { %class.sk_sp.19, %"class.skif::LayerSpace.20" }
%"class.skif::FilterResult.23" = type { %class.sk_sp.19, %"class.skif::LayerSpace.20" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.25", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.196" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.24 }
%class.sk_sp.24 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.28, %class.SkTHashMap.30, %class.SkTHashMap.39, %class.SkTArray.48, %class.SkTArray.50, i32, i8, [3 x i8] }>
%class.SkTArray.28 = type { %"class.std::__1::unique_ptr.29"*, i64 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.50, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.51 }
%class.sk_sp.51 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap.30 = type { %class.SkTHashTable.31 }
%class.SkTHashTable.31 = type { i32, i32, %class.SkAutoTArray.32 }
%class.SkAutoTArray.32 = type { %"class.std::__1::unique_ptr.33" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.260" }
%"struct.std::__1::pair.260" = type { i32, i32 }
%class.SkTHashMap.39 = type { %class.SkTHashTable.40 }
%class.SkTHashTable.40 = type { i32, i32, %class.SkAutoTArray.41 }
%class.SkAutoTArray.41 = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.261" }
%"struct.std::__1::pair.261" = type { i32, %class.SkTArray.262* }
%class.SkTArray.262 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.48 = type { %"class.std::__1::unique_ptr.49"*, i64 }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.262, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.50 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.64 }
%class.SkFibBlockSizes.64 = type { i32 }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.71, %class.SkTArray.80, %class.GrOpsTask*, %class.SkSTArray.161, %class.SkSTArray.164, %"class.std::__1::unique_ptr.166", %class.sk_sp.182, %class.GrTokenTracker, i8, i8, %class.SkTArray.183, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.71 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.72", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.75, i8, [7 x i8] }>
%class.sk_sp.75 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.76, i8*, i64 }
%class.GrBuffer = type { i32 (...)** }
%class.GrNonAtomicRef.76 = type { i32 }
%class.SkTArray.80 = type { %class.sk_sp.81*, i64 }
%class.sk_sp.81 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray.82, %class.SkTArray.128, i32, i32, %class.SkSTArray.135, %class.SkSTArray.135, %class.GrTextureResolveRenderTask* }
%class.SkSTArray.82 = type { %class.SkAlignedSTStorage.83, %class.SkTArray.84 }
%class.SkAlignedSTStorage.83 = type { [8 x i8] }
%class.SkTArray.84 = type { %class.sk_sp.85*, i64 }
%class.sk_sp.85 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.86, %class.sk_sp.87, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.123" }
%class.SkNVRefCnt.86 = type { %"struct.std::__1::atomic" }
%class.sk_sp.87 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.88 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.17, i8* }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.88 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.89, void (i8*)*, i8* }
%class.SkNVRefCnt.89 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.90, i32, [4 x i8] }
%union.anon.90 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.87, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.120, %class.sk_sp.122, %class.sk_sp.122 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.100, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.111, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.92 }
%class.SkTHashTable.92 = type { i32, i32, %class.SkAutoTArray.93 }
%class.SkAutoTArray.93 = type { %"class.std::__1::unique_ptr.94" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.100 = type { %class.SkTHashTable.101 }
%class.SkTHashTable.101 = type { i32, i32, %class.SkAutoTArray.102 }
%class.SkAutoTArray.102 = type { %"class.std::__1::unique_ptr.103" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.109, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.109 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.110, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.110 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.111 = type { %class.SkTHashTable.112 }
%class.SkTHashTable.112 = type { i32, i32, %class.SkAutoTArray.113 }
%class.SkAutoTArray.113 = type { %"class.std::__1::unique_ptr.114" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.120 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.121, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.121 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.122 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.123" = type { %"struct.std::__1::__atomic_base.124" }
%"struct.std::__1::__atomic_base.124" = type { %"struct.std::__1::__atomic_base.125" }
%"struct.std::__1::__atomic_base.125" = type { %"struct.std::__1::__cxx_atomic_impl.126" }
%"struct.std::__1::__cxx_atomic_impl.126" = type { %"struct.std::__1::__cxx_atomic_base_impl.127" }
%"struct.std::__1::__cxx_atomic_base_impl.127" = type { i64 }
%class.SkTArray.128 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.129", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.135 = type { %class.SkAlignedSTStorage.136, %class.SkTArray.137 }
%class.SkAlignedSTStorage.136 = type { [8 x i8] }
%class.SkTArray.137 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.138, %class.sk_sp.158, %class.SkTArray.160, %struct.SkRect, %struct.SkIRect }
%class.GrSwizzle = type { i16 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.138 = type { %class.SkAlignedSTStorage.139, %class.SkTArray.140 }
%class.SkAlignedSTStorage.139 = type { [2000 x i8] }
%class.SkTArray.140 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.141", %class.GrOp* }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.141", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.85, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.149" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.147 }
%union.anon.147 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.148, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.148 = type { i32 }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %class.GrFragmentProcessor* }
%class.sk_sp.158 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.159, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.159 = type { %"struct.std::__1::atomic" }
%class.SkTArray.160 = type { %class.GrSurfaceProxy**, i64 }
%class.SkSTArray.161 = type { %class.SkAlignedSTStorage.162, %class.SkTArray.163 }
%class.SkAlignedSTStorage.162 = type { [32 x i8] }
%class.SkTArray.163 = type { i32*, i64 }
%class.SkSTArray.164 = type { %class.SkAlignedSTStorage.165, %class.SkTArray.80 }
%class.SkAlignedSTStorage.165 = type { [32 x i8] }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.169, %"class.std::__1::unique_ptr.173", %class.GrPathRenderer* }
%class.SkSTArray.169 = type { %class.SkAlignedSTStorage.170, %class.SkTArray.171 }
%class.SkAlignedSTStorage.170 = type { [64 x i8] }
%class.SkTArray.171 = type { %class.sk_sp.172*, i64 }
%class.sk_sp.172 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.182 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.183 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.184, i32, %class.GrRenderTask** }
%class.SkTHashMap.184 = type { %class.SkTHashTable.185 }
%class.SkTHashTable.185 = type { i32, i32, %class.SkAutoTArray.186 }
%class.SkAutoTArray.186 = type { %"class.std::__1::unique_ptr.187" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %class.GrProxyProvider* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.152, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.152 = type { %class.SkAlignedSTStorage.153, %class.SkTArray.154 }
%class.SkAlignedSTStorage.153 = type { [8 x i8] }
%class.SkTArray.154 = type { %"class.std::__1::unique_ptr.149"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GrImageInfo = type { %class.GrColorInfo, %struct.SkISize }
%class.GrColorInfo = type { %class.sk_sp.16, %class.sk_sp.202, i32, i32 }
%class.sk_sp.202 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.GrSurfaceFillContext = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.206, i8, [7 x i8] }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.sk_sp.206 = type { %class.GrOpsTask* }
%struct.SkSize = type { float, float }

$_ZN13SkAutoSTArrayILi2E5sk_spI13SkImageFilterEE5resetEi = comdat any

$_ZNK4skif7Mapping13deviceToLayerI7SkIRectEENS_10LayerSpaceIT_EERKNS_11DeviceSpaceIS4_EE = comdat any

$_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE = comdat any

$_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE1EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE = comdat any

$_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE2EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE = comdat any

$_ZN13SkImageFilterD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkFlattenable7flattenER13SkWriteBuffer = comdat any

$_ZNK13SkImageFilter18getFlattenableTypeEv = comdat any

$_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter = comdat any

$_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv = comdat any

$_ZNK18SkImageFilter_Base23affectsTransparentBlackEv = comdat any

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZN8SkTArrayI5sk_spI13SkImageFilterELb1EE12checkReallocEiNS3_11ReallocTypeE = comdat any

@__const._ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_.mapping = private unnamed_addr constant %"class.skif::Mapping" { %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, align 4
@_ZTV18SkImageFilter_Base = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkImageFilter_Base*)* @_ZN18SkImageFilter_BaseD2Ev to i8*), i8* bitcast (void (%class.SkImageFilter_Base*)* @_ZN18SkImageFilter_BaseD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkImageFilter_Base*, %class.SkWriteBuffer*)* @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)* @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv to i8*), i8* bitcast (void (%"class.skif::FilterResult.21"*, %class.SkImageFilter_Base*, %"class.skif::Context"*)* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*)] }, align 8
@__const._ZNK18SkImageFilter_Base11filterImageERKN4skif7ContextE.key = private unnamed_addr constant %struct.SkImageFilterCacheKey { i32 -1431655766, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, i32 -1431655766, %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 } }, align 4
@__const._ZN18SkImageFilter_Base17ImageToColorSpaceEP14SkSpecialImage11SkColorTypeP12SkColorSpaceRK14SkSurfaceProps.p = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.249 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.250 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.251 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.252 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon.253 { %struct.anon.254 { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTV13SkImageFilter = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkImageFilter*)* @_ZN13SkImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkFlattenable*, %class.SkWriteBuffer*)* @_ZNK13SkFlattenable7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)* @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect to i8*)] }, align 8
@_ZZL27next_image_filter_unique_idvE6nextID = internal global { { i32 } } { { i32 } { i32 1 } }, align 4
@switch.table._ZN18SkImageFilter_Base10DrawWithFPEP18GrRecordingContextNSt3__110unique_ptrI19GrFragmentProcessorNS2_14default_deleteIS4_EEEERK7SkIRect11SkColorTypePK12SkColorSpaceRK14SkSurfaceProps11GrProtected = private unnamed_addr constant [21 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 9, i32 10, i32 0, i32 0, i32 11, i32 15, i32 14, i32 16, i32 7, i32 13, i32 19, i32 17, i32 18, i32 20], align 4

@_ZN18SkImageFilter_BaseD1Ev = hidden unnamed_addr alias void (%class.SkImageFilter_Base*), void (%class.SkImageFilter_Base*)* @_ZN18SkImageFilter_BaseD2Ev

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK13SkImageFilter11countInputsEv(%class.SkImageFilter* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %0, i64 1
  %3 = bitcast %class.SkImageFilter* %2 to i32*
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %0, i64 1, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast %"struct.std::__1::atomic"* %3 to %class.sk_sp**
  %5 = load %class.sk_sp*, %class.sk_sp** %4, align 8
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 %6, i32 0
  %8 = load %class.SkImageFilter*, %class.SkImageFilter** %7, align 8
  ret %class.SkImageFilter* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13SkImageFilter17isColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter*, %class.SkColorFilter**) local_unnamed_addr #1 align 2 {
  %3 = bitcast %class.SkImageFilter* %0 to %class.SkImageFilter_Base*
  %4 = bitcast %class.SkImageFilter* %0 to i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)***
  %5 = load i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)**, i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)*** %4, align 8
  %6 = getelementptr inbounds i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)*, i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)** %5, i64 11
  %7 = load i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)*, i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)** %6, align 8
  %8 = tail call zeroext i1 %7(%class.SkImageFilter_Base* %3, %class.SkColorFilter** %1) #10
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter*, %struct.SkIRect* nocapture readonly dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect* readonly) local_unnamed_addr #1 align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca %"class.skif::Mapping", align 4
  %8 = alloca %"class.skif::LayerSpace", align 4
  %9 = alloca { i64, i64 }, align 8
  %10 = alloca %"class.skif::ParameterSpace", align 4
  %11 = alloca %"class.skif::LayerSpace", align 4
  %12 = alloca %"class.skif::LayerSpace", align 4
  %13 = alloca %"class.SkImageFilter_Base::CropRect", align 4
  %14 = alloca %struct.SkIRect, align 8
  %15 = bitcast %"class.skif::Mapping"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %15) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %15, i8* align 4 bitcast (%"class.skif::Mapping"* @__const._ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_.mapping to i8*), i64 80, i1 false)
  %16 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #10
  %17 = bitcast %class.SkMatrix* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %15, i8* align 4 %17, i64 40, i1 false) #10
  %18 = getelementptr inbounds %"class.skif::Mapping", %"class.skif::Mapping"* %7, i64 0, i32 1
  %19 = bitcast %class.SkMatrix* %18 to i8*
  %20 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 40, i1 false) #10
  %21 = icmp eq i32 %3, 1
  br i1 %21, label %22, label %100

22:                                               ; preds = %5
  %23 = bitcast %"class.skif::LayerSpace"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #10
  %24 = bitcast %struct.SkIRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 4 %24, i64 16, i1 false) #10
  %25 = bitcast %class.SkImageFilter* %0 to %class.SkImageFilter_Base*
  %26 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %25, i64 0, i32 5, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %82, label %29

29:                                               ; preds = %22
  %30 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #10
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %32 = bitcast %"class.skif::ParameterSpace"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #10
  %33 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %25, i64 0, i32 5
  %34 = bitcast %"class.SkImageFilter_Base::CropRect"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* align 4 %34, i64 16, i1 false)
  %35 = getelementptr inbounds %"class.skif::ParameterSpace", %"class.skif::ParameterSpace"* %10, i64 0, i32 0
  %36 = call { <2 x float>, <2 x float> } @_ZN4skif7Mapping3mapI6SkRectEET_RKS3_RK8SkMatrix(%struct.SkRect* nonnull dereferenceable(16) %35, %class.SkMatrix* dereferenceable(40) %18) #10
  %37 = extractvalue { <2 x float>, <2 x float> } %36, 0
  %38 = extractvalue { <2 x float>, <2 x float> } %36, 1
  %39 = extractelement <2 x float> %37, i32 0
  %40 = call float @llvm.floor.f32(float %39) #10
  %41 = fcmp olt float %40, 0x41DFFFFFE0000000
  %42 = select i1 %41, float %40, float 0x41DFFFFFE0000000
  %43 = fcmp ogt float %42, 0xC1DFFFFFE0000000
  %44 = select i1 %43, float %42, float 0xC1DFFFFFE0000000
  %45 = fptosi float %44 to i32
  %46 = extractelement <2 x float> %37, i32 1
  %47 = call float @llvm.floor.f32(float %46) #10
  %48 = fcmp olt float %47, 0x41DFFFFFE0000000
  %49 = select i1 %48, float %47, float 0x41DFFFFFE0000000
  %50 = fcmp ogt float %49, 0xC1DFFFFFE0000000
  %51 = select i1 %50, float %49, float 0xC1DFFFFFE0000000
  %52 = fptosi float %51 to i32
  %53 = extractelement <2 x float> %38, i32 0
  %54 = call float @llvm.ceil.f32(float %53) #10
  %55 = fcmp olt float %54, 0x41DFFFFFE0000000
  %56 = select i1 %55, float %54, float 0x41DFFFFFE0000000
  %57 = fcmp ogt float %56, 0xC1DFFFFFE0000000
  %58 = select i1 %57, float %56, float 0xC1DFFFFFE0000000
  %59 = fptosi float %58 to i32
  %60 = extractelement <2 x float> %38, i32 1
  %61 = call float @llvm.ceil.f32(float %60) #10
  %62 = fcmp olt float %61, 0x41DFFFFFE0000000
  %63 = select i1 %62, float %61, float 0x41DFFFFFE0000000
  %64 = fcmp ogt float %63, 0xC1DFFFFFE0000000
  %65 = select i1 %64, float %63, float 0xC1DFFFFFE0000000
  %66 = fptosi float %65 to i32
  %67 = zext i32 %52 to i64
  %68 = shl nuw i64 %67, 32
  %69 = zext i32 %45 to i64
  %70 = or i64 %68, %69
  %71 = zext i32 %66 to i64
  %72 = shl nuw i64 %71, 32
  %73 = zext i32 %59 to i64
  %74 = or i64 %72, %73
  %75 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  store i64 %70, i64* %75, align 8
  store i64 %74, i64* %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #10
  %76 = getelementptr inbounds %"class.skif::LayerSpace", %"class.skif::LayerSpace"* %8, i64 0, i32 0
  %77 = bitcast { i64, i64 }* %9 to %struct.SkIRect*
  %78 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %76, %struct.SkIRect* nonnull dereferenceable(16) %76, %struct.SkIRect* nonnull dereferenceable(16) %77) #10
  br i1 %78, label %81, label %79

79:                                               ; preds = %29
  %80 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 16, i1 false)
  br label %96

81:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #10
  br label %82

82:                                               ; preds = %22, %81
  %83 = bitcast %"class.skif::LayerSpace"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #10
  %84 = icmp eq %struct.SkIRect* %4, null
  %85 = select i1 %84, %struct.SkIRect* %1, %struct.SkIRect* %4
  %86 = bitcast %struct.SkIRect* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %83, i8* align 4 %86, i64 16, i1 false) #10
  %87 = bitcast %class.SkImageFilter* %0 to { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)***
  %88 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)**, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*** %87, align 8
  %89 = getelementptr inbounds { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)** %88, i64 15
  %90 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)** %89, align 8
  %91 = call { i64, i64 } %90(%class.SkImageFilter_Base* %25, %"class.skif::Mapping"* nonnull dereferenceable(80) %7, %"class.skif::LayerSpace"* nonnull dereferenceable(16) %8, %"class.skif::LayerSpace"* nonnull dereferenceable(16) %11, i1 zeroext true) #10
  %92 = extractvalue { i64, i64 } %91, 0
  %93 = extractvalue { i64, i64 } %91, 1
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %92, i64* %94, align 8
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %93, i64* %95, align 8
  br label %96

96:                                               ; preds = %79, %82
  %97 = phi i8* [ %30, %79 ], [ %83, %82 ]
  %98 = phi i64 [ 0, %79 ], [ %93, %82 ]
  %99 = phi i64 [ 0, %79 ], [ %92, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #10
  br label %129

100:                                              ; preds = %5
  %101 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %102 = bitcast %"class.skif::LayerSpace"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #10
  %103 = bitcast %struct.SkIRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %102, i8* align 4 %103, i64 16, i1 false) #10
  %104 = bitcast %class.SkImageFilter* %0 to %class.SkImageFilter_Base*
  %105 = bitcast %class.SkImageFilter* %0 to { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)***
  %106 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)**, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)*** %105, align 8
  %107 = getelementptr inbounds { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)** %106, i64 16
  %108 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)** %107, align 8
  %109 = call { i64, i64 } %108(%class.SkImageFilter_Base* %104, %"class.skif::Mapping"* nonnull dereferenceable(80) %7, %"class.skif::LayerSpace"* nonnull dereferenceable(16) %12) #10
  %110 = extractvalue { i64, i64 } %109, 0
  %111 = extractvalue { i64, i64 } %109, 1
  %112 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %113 = bitcast %"class.SkImageFilter_Base::CropRect"* %13 to i8*
  %114 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %113) #10
  %115 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %104, i64 0, i32 5
  %116 = bitcast %"class.SkImageFilter_Base::CropRect"* %115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %113, i8* align 4 %116, i64 20, i1 false) #10
  %117 = bitcast %struct.SkIRect* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #10
  %118 = bitcast %struct.SkIRect* %14 to i64*
  store i64 %110, i64* %118, align 8
  %119 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %14, i64 0, i32 2
  %120 = bitcast i32* %119 to i64*
  store i64 %111, i64* %120, align 8
  %121 = bitcast %class.SkImageFilter* %0 to i1 (%class.SkImageFilter_Base*)***
  %122 = load i1 (%class.SkImageFilter_Base*)**, i1 (%class.SkImageFilter_Base*)*** %121, align 8
  %123 = getelementptr inbounds i1 (%class.SkImageFilter_Base*)*, i1 (%class.SkImageFilter_Base*)** %122, i64 13
  %124 = load i1 (%class.SkImageFilter_Base*)*, i1 (%class.SkImageFilter_Base*)** %123, align 8
  %125 = call zeroext i1 %124(%class.SkImageFilter_Base* %104) #10
  call void @_ZNK18SkImageFilter_Base8CropRect7applyToERK7SkIRectRK8SkMatrixbPS1_(%"class.SkImageFilter_Base::CropRect"* nonnull %13, %struct.SkIRect* nonnull dereferenceable(16) %14, %class.SkMatrix* dereferenceable(40) %2, i1 zeroext %125, %struct.SkIRect* nonnull %101)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %113) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #10
  %126 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = load i64, i64* %112, align 8
  br label %129

129:                                              ; preds = %100, %96
  %130 = phi i64 [ %128, %100 ], [ %98, %96 ]
  %131 = phi i64 [ %127, %100 ], [ %99, %96 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %15) #10
  %132 = insertvalue { i64, i64 } undef, i64 %131, 0
  %133 = insertvalue { i64, i64 } %132, i64 %130, 1
  ret { i64, i64 } %133
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18SkImageFilter_Base8CropRect7applyToERK7SkIRectRK8SkMatrixbPS1_(%"class.SkImageFilter_Base::CropRect"*, %struct.SkIRect* nocapture readonly dereferenceable(16), %class.SkMatrix* dereferenceable(40), i1 zeroext, %struct.SkIRect* nocapture) local_unnamed_addr #1 align 2 {
  %6 = alloca %struct.SkRect, align 4
  %7 = bitcast %struct.SkIRect* %4 to i8*
  %8 = bitcast %struct.SkIRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 16, i1 false)
  %9 = getelementptr inbounds %"class.SkImageFilter_Base::CropRect", %"class.SkImageFilter_Base::CropRect"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %132, label %12

12:                                               ; preds = %5
  %13 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #10
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 0
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  %17 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %18 = getelementptr inbounds %"class.SkImageFilter_Base::CropRect", %"class.SkImageFilter_Base::CropRect"* %0, i64 0, i32 0
  %19 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 -1, i64 16, i1 false)
  %20 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %2, %struct.SkRect* nonnull %6, %struct.SkRect* dereferenceable(16) %18, i32 1) #10
  %21 = load float, float* %14, align 4
  %22 = call float @llvm.floor.f32(float %21) #10
  %23 = fcmp olt float %22, 0x41DFFFFFE0000000
  %24 = select i1 %23, float %22, float 0x41DFFFFFE0000000
  %25 = fcmp ogt float %24, 0xC1DFFFFFE0000000
  %26 = select i1 %25, float %24, float 0xC1DFFFFFE0000000
  %27 = fptosi float %26 to i32
  %28 = load float, float* %15, align 4
  %29 = call float @llvm.floor.f32(float %28) #10
  %30 = fcmp olt float %29, 0x41DFFFFFE0000000
  %31 = select i1 %30, float %29, float 0x41DFFFFFE0000000
  %32 = fcmp ogt float %31, 0xC1DFFFFFE0000000
  %33 = select i1 %32, float %31, float 0xC1DFFFFFE0000000
  %34 = fptosi float %33 to i32
  %35 = load float, float* %16, align 4
  %36 = call float @llvm.ceil.f32(float %35) #10
  %37 = fcmp olt float %36, 0x41DFFFFFE0000000
  %38 = select i1 %37, float %36, float 0x41DFFFFFE0000000
  %39 = fcmp ogt float %38, 0xC1DFFFFFE0000000
  %40 = select i1 %39, float %38, float 0xC1DFFFFFE0000000
  %41 = fptosi float %40 to i32
  %42 = load float, float* %17, align 4
  %43 = call float @llvm.ceil.f32(float %42) #10
  %44 = fcmp olt float %43, 0x41DFFFFFE0000000
  %45 = select i1 %44, float %43, float 0x41DFFFFFE0000000
  %46 = fcmp ogt float %45, 0xC1DFFFFFE0000000
  %47 = select i1 %46, float %45, float 0xC1DFFFFFE0000000
  %48 = fptosi float %47 to i32
  %49 = zext i32 %48 to i64
  %50 = shl nuw i64 %49, 32
  %51 = zext i32 %41 to i64
  %52 = or i64 %50, %51
  %53 = load i32, i32* %9, align 4
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %64, label %56

56:                                               ; preds = %12
  br i1 %3, label %61, label %57

57:                                               ; preds = %56
  %58 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %59, %27
  br i1 %60, label %61, label %77

61:                                               ; preds = %57, %56
  %62 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  store i32 %27, i32* %62, align 4
  %63 = load i32, i32* %9, align 4
  br label %77

64:                                               ; preds = %12
  %65 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = sub i32 %41, %27
  %68 = sext i32 %66 to i64
  %69 = sext i32 %67 to i64
  %70 = add nsw i64 %68, %69
  %71 = icmp slt i64 %70, 2147483647
  %72 = select i1 %71, i64 %70, i64 2147483647
  %73 = icmp sgt i64 %72, -2147483647
  %74 = select i1 %73, i64 %72, i64 -2147483647
  %75 = and i64 %74, 4294967295
  %76 = or i64 %75, %50
  br label %77

77:                                               ; preds = %57, %61, %64
  %78 = phi i32 [ %53, %64 ], [ %63, %61 ], [ %53, %57 ]
  %79 = phi i64 [ %76, %64 ], [ %52, %61 ], [ %52, %57 ]
  %80 = and i32 %78, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %90, label %82

82:                                               ; preds = %77
  br i1 %3, label %87, label %83

83:                                               ; preds = %82
  %84 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = icmp slt i32 %85, %34
  br i1 %86, label %87, label %104

87:                                               ; preds = %83, %82
  %88 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  store i32 %34, i32* %88, align 4
  %89 = load i32, i32* %9, align 4
  br label %104

90:                                               ; preds = %77
  %91 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = sub i32 %48, %34
  %94 = sext i32 %92 to i64
  %95 = sext i32 %93 to i64
  %96 = add nsw i64 %94, %95
  %97 = icmp slt i64 %96, 2147483647
  %98 = select i1 %97, i64 %96, i64 2147483647
  %99 = icmp sgt i64 %98, -2147483647
  %100 = select i1 %99, i64 %98, i64 -2147483647
  %101 = shl nsw i64 %100, 32
  %102 = and i64 %79, 4294967295
  %103 = or i64 %101, %102
  br label %104

104:                                              ; preds = %83, %87, %90
  %105 = phi i32 [ %78, %90 ], [ %89, %87 ], [ %78, %83 ]
  %106 = phi i64 [ %103, %90 ], [ %79, %87 ], [ %79, %83 ]
  %107 = and i32 %105, 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %118, label %109

109:                                              ; preds = %104
  %110 = trunc i64 %106 to i32
  br i1 %3, label %115, label %111

111:                                              ; preds = %109
  %112 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = icmp sgt i32 %113, %110
  br i1 %114, label %115, label %118

115:                                              ; preds = %109, %111
  %116 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  store i32 %110, i32* %116, align 4
  %117 = load i32, i32* %9, align 4
  br label %118

118:                                              ; preds = %104, %111, %115
  %119 = phi i32 [ %105, %104 ], [ %105, %111 ], [ %117, %115 ]
  %120 = and i32 %119, 8
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %131, label %122

122:                                              ; preds = %118
  %123 = lshr i64 %106, 32
  %124 = trunc i64 %123 to i32
  br i1 %3, label %129, label %125

125:                                              ; preds = %122
  %126 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 3
  %127 = load i32, i32* %126, align 4
  %128 = icmp sgt i32 %127, %124
  br i1 %128, label %129, label %131

129:                                              ; preds = %122, %125
  %130 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 3
  store i32 %124, i32* %130, align 4
  br label %131

131:                                              ; preds = %118, %125, %129
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #10
  br label %132

132:                                              ; preds = %5, %131
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect(%class.SkImageFilter* nocapture readonly, %struct.SkRect* dereferenceable(16)) unnamed_addr #1 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRect*
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %7 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %0, i64 1
  %8 = bitcast %class.SkImageFilter* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %2
  %12 = bitcast %struct.SkRect* %1 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %15 = bitcast float* %14 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 4
  br label %72

17:                                               ; preds = %2
  %18 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #10
  %19 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1, i64 0
  %20 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %0, i64 1, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %"struct.std::__1::atomic"* %20 to %class.sk_sp**
  %22 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -1, i64 16, i1 false)
  %23 = load %class.sk_sp*, %class.sk_sp** %21, align 8
  %24 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %23, i64 0, i32 0
  %25 = load %class.SkImageFilter*, %class.SkImageFilter** %24, align 8
  %26 = icmp eq %class.SkImageFilter* %25, null
  br i1 %26, label %38, label %27

27:                                               ; preds = %17
  %28 = bitcast %class.SkImageFilter* %25 to { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)***
  %29 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)**, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*** %28, align 8
  %30 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %29, i64 7
  %31 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %30, align 8
  %32 = tail call { <2 x float>, <2 x float> } %31(%class.SkImageFilter* nonnull %25, %struct.SkRect* dereferenceable(16) %1) #10
  %33 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %34 = extractvalue { <2 x float>, <2 x float> } %32, 0
  store <2 x float> %34, <2 x float>* %33, align 8
  %35 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %36 = extractvalue { <2 x float>, <2 x float> } %32, 1
  store <2 x float> %36, <2 x float>* %35, align 8
  %37 = load i32, i32* %8, align 8
  br label %40

38:                                               ; preds = %17
  %39 = bitcast %struct.SkRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 4 %39, i64 16, i1 false)
  br label %40

40:                                               ; preds = %38, %27
  %41 = phi i32 [ %9, %38 ], [ %37, %27 ]
  %42 = icmp sgt i32 %41, 1
  br i1 %42, label %43, label %47

43:                                               ; preds = %40
  %44 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  %45 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %46 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  br label %52

47:                                               ; preds = %67, %40
  %48 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %49 = load <2 x float>, <2 x float>* %48, align 8
  %50 = bitcast float* %19 to <2 x float>*
  %51 = load <2 x float>, <2 x float>* %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #10
  br label %72

52:                                               ; preds = %43, %67
  %53 = phi i64 [ 1, %43 ], [ %68, %67 ]
  %54 = load %class.sk_sp*, %class.sk_sp** %21, align 8
  %55 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %54, i64 %53, i32 0
  %56 = load %class.SkImageFilter*, %class.SkImageFilter** %55, align 8
  %57 = icmp eq %class.SkImageFilter* %56, null
  br i1 %57, label %66, label %58

58:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #10
  %59 = bitcast %class.SkImageFilter* %56 to { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)***
  %60 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)**, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*** %59, align 8
  %61 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %60, i64 7
  %62 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %61, align 8
  %63 = call { <2 x float>, <2 x float> } %62(%class.SkImageFilter* nonnull %56, %struct.SkRect* dereferenceable(16) %1) #10
  %64 = extractvalue { <2 x float>, <2 x float> } %63, 0
  store <2 x float> %64, <2 x float>* %45, align 8
  %65 = extractvalue { <2 x float>, <2 x float> } %63, 1
  store <2 x float> %65, <2 x float>* %46, align 8
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* nonnull %4, %struct.SkRect* nonnull dereferenceable(16) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #10
  br label %67

66:                                               ; preds = %52
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* nonnull %4, %struct.SkRect* dereferenceable(16) %1) #10
  br label %67

67:                                               ; preds = %66, %58
  %68 = add nuw nsw i64 %53, 1
  %69 = load i32, i32* %8, align 8
  %70 = sext i32 %69 to i64
  %71 = icmp slt i64 %68, %70
  br i1 %71, label %52, label %47

72:                                               ; preds = %47, %11
  %73 = phi <2 x float> [ %13, %11 ], [ %49, %47 ]
  %74 = phi <2 x float> [ %16, %11 ], [ %51, %47 ]
  %75 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %73, 0
  %76 = insertvalue { <2 x float>, <2 x float> } %75, <2 x float> %74, 1
  ret { <2 x float>, <2 x float> } %76
}

declare void @_ZN6SkRect4joinERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13SkImageFilter20canComputeFastBoundsEv(%class.SkImageFilter*) local_unnamed_addr #1 align 2 {
  %2 = bitcast %class.SkImageFilter* %0 to %class.SkImageFilter_Base*
  %3 = bitcast %class.SkImageFilter* %0 to i1 (%class.SkImageFilter_Base*)***
  %4 = load i1 (%class.SkImageFilter_Base*)**, i1 (%class.SkImageFilter_Base*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%class.SkImageFilter_Base*)*, i1 (%class.SkImageFilter_Base*)** %4, i64 13
  %6 = load i1 (%class.SkImageFilter_Base*)*, i1 (%class.SkImageFilter_Base*)** %5, align 8
  %7 = tail call zeroext i1 %6(%class.SkImageFilter_Base* %2) #10
  br i1 %7, label %32, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %0, i64 1
  %10 = bitcast %class.SkImageFilter* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %32

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %0, i64 1, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::atomic"* %14 to %class.sk_sp**
  br label %16

16:                                               ; preds = %13, %27
  %17 = phi i32 [ %11, %13 ], [ %28, %27 ]
  %18 = phi i64 [ 0, %13 ], [ %29, %27 ]
  %19 = load %class.sk_sp*, %class.sk_sp** %15, align 8
  %20 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %19, i64 %18, i32 0
  %21 = load %class.SkImageFilter*, %class.SkImageFilter** %20, align 8
  %22 = icmp eq %class.SkImageFilter* %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %16
  %24 = tail call zeroext i1 @_ZNK13SkImageFilter20canComputeFastBoundsEv(%class.SkImageFilter* nonnull %21)
  br i1 %24, label %25, label %32

25:                                               ; preds = %23
  %26 = load i32, i32* %10, align 8
  br label %27

27:                                               ; preds = %25, %16
  %28 = phi i32 [ %26, %25 ], [ %17, %16 ]
  %29 = add nuw nsw i64 %18, 1
  %30 = sext i32 %28 to i64
  %31 = icmp slt i64 %29, %30
  br i1 %31, label %16, label %32

32:                                               ; preds = %23, %27, %8, %1
  %33 = phi i1 [ false, %1 ], [ true, %8 ], [ false, %23 ], [ true, %27 ]
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13SkImageFilter14asAColorFilterEPP13SkColorFilter(%class.SkImageFilter*, %class.SkColorFilter**) local_unnamed_addr #1 align 2 {
  %3 = bitcast %class.SkImageFilter* %0 to %class.SkImageFilter_Base*
  %4 = bitcast %class.SkImageFilter* %0 to i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)***
  %5 = load i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)**, i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)*** %4, align 8
  %6 = getelementptr inbounds i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)*, i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)** %5, i64 11
  %7 = load i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)*, i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)** %6, align 8
  %8 = tail call zeroext i1 %7(%class.SkImageFilter_Base* %3, %class.SkColorFilter** %1) #10
  br i1 %8, label %9, label %31

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %0, i64 1, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::atomic"* %10 to %class.sk_sp**
  %12 = load %class.sk_sp*, %class.sk_sp** %11, align 8
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %12, i64 0, i32 0
  %14 = load %class.SkImageFilter*, %class.SkImageFilter** %13, align 8
  %15 = icmp eq %class.SkImageFilter* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %9
  %17 = load %class.SkColorFilter*, %class.SkColorFilter** %1, align 8
  %18 = tail call i32 @_ZNK13SkColorFilter11filterColorEj(%class.SkColorFilter* %17, i32 0) #10
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %16, %9
  %21 = bitcast %class.SkColorFilter** %1 to %class.SkRefCntBase**
  %22 = load %class.SkRefCntBase*, %class.SkRefCntBase** %21, align 8
  %23 = getelementptr inbounds %class.SkRefCntBase, %class.SkRefCntBase* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 -1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %31

26:                                               ; preds = %20
  %27 = bitcast %class.SkRefCntBase* %22 to void (%class.SkRefCntBase*)***
  %28 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, i64 2
  %30 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, align 8
  tail call void %30(%class.SkRefCntBase* %22) #10
  br label %31

31:                                               ; preds = %16, %26, %20, %2
  %32 = phi i1 [ false, %2 ], [ true, %16 ], [ false, %20 ], [ false, %26 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkImageFilter19makeWithLocalMatrixERK8SkMatrix(%class.sk_sp* noalias sret, %class.SkImageFilter*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = icmp eq %class.SkImageFilter* %1, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic, !noalias !2
  br label %9

9:                                                ; preds = %3, %6
  %10 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  store %class.SkImageFilter* %1, %class.SkImageFilter** %10, align 8, !alias.scope !2
  call void @_ZN24SkLocalMatrixImageFilter4MakeERK8SkMatrix5sk_spI13SkImageFilterE(%class.sk_sp* sret %0, %class.SkMatrix* dereferenceable(40) %2, %class.sk_sp* nonnull %4) #10
  %11 = load %class.SkImageFilter*, %class.SkImageFilter** %10, align 8
  %12 = icmp eq %class.SkImageFilter* %11, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 -1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %23

17:                                               ; preds = %13
  %18 = bitcast %class.SkImageFilter* %11 to %class.SkRefCntBase*
  %19 = bitcast %class.SkImageFilter* %11 to void (%class.SkRefCntBase*)***
  %20 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %20, i64 2
  %22 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %21, align 8
  call void %22(%class.SkRefCntBase* nonnull %18) #10
  br label %23

23:                                               ; preds = %9, %13, %17
  ret void
}

declare void @_ZN24SkLocalMatrixImageFilter4MakeERK8SkMatrix5sk_spI13SkImageFilterE(%class.sk_sp* sret, %class.SkMatrix* dereferenceable(40), %class.sk_sp*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base*, %class.sk_sp* readonly, i32, %struct.SkRect* readonly) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTV18SkImageFilter_Base, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 2
  %8 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 2, i32 1
  store %class.sk_sp* null, %class.sk_sp** %8, align 8
  %9 = getelementptr inbounds %class.SkAutoSTArray, %class.SkAutoSTArray* %7, i64 0, i32 0
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 3
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 5
  %12 = icmp ne %struct.SkRect* %3, null
  %13 = bitcast %"class.SkImageFilter_Base::CropRect"* %11 to i8*
  br i1 %12, label %14, label %16

14:                                               ; preds = %4
  %15 = bitcast %struct.SkRect* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* nonnull align 4 %15, i64 16, i1 false) #10
  br label %17

16:                                               ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 16, i1 false) #10
  br label %17

17:                                               ; preds = %14, %16
  %18 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 5, i32 1
  %19 = select i1 %12, i32 15, i32 0
  store i32 %19, i32* %18, align 4
  br label %20

20:                                               ; preds = %20, %17
  %21 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZL27next_image_filter_unique_idvE6nextID, i64 0, i32 0, i32 0), i32 1 monotonic
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %20, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 6
  store i32 %21, i32* %24, align 8
  tail call void @_ZN13SkAutoSTArrayILi2E5sk_spI13SkImageFilterEE5resetEi(%class.SkAutoSTArray* %7, i32 %2)
  %25 = icmp sgt i32 %2, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %23
  %27 = zext i32 %2 to i64
  br label %29

28:                                               ; preds = %63, %23
  ret void

29:                                               ; preds = %63, %26
  %30 = phi i64 [ 0, %26 ], [ %64, %63 ]
  %31 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 %30, i32 0
  %32 = load %class.SkImageFilter*, %class.SkImageFilter** %31, align 8
  %33 = icmp eq %class.SkImageFilter* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %32, i64 3
  %36 = bitcast %class.SkImageFilter* %35 to i8*
  %37 = load i8, i8* %36, align 8, !range !7
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %29, %34
  store i8 1, i8* %10, align 8
  br label %40

40:                                               ; preds = %34, %39
  %41 = load %class.sk_sp*, %class.sk_sp** %8, align 8
  %42 = icmp eq %class.sk_sp* %41, %1
  br i1 %42, label %63, label %43

43:                                               ; preds = %40
  %44 = load %class.SkImageFilter*, %class.SkImageFilter** %31, align 8
  %45 = icmp eq %class.SkImageFilter* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 1 monotonic
  br label %49

49:                                               ; preds = %46, %43
  %50 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %41, i64 %30, i32 0
  %51 = load %class.SkImageFilter*, %class.SkImageFilter** %50, align 8
  store %class.SkImageFilter* %44, %class.SkImageFilter** %50, align 8
  %52 = icmp eq %class.SkImageFilter* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %class.SkImageFilter* %51 to %class.SkRefCntBase*
  %59 = bitcast %class.SkImageFilter* %51 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8
  tail call void %62(%class.SkRefCntBase* nonnull %58) #10
  br label %63

63:                                               ; preds = %40, %49, %53, %57
  %64 = add nuw nsw i64 %30, 1
  %65 = icmp eq i64 %64, %27
  br i1 %65, label %28, label %29
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkAutoSTArrayILi2E5sk_spI13SkImageFilterEE5resetEi(%class.SkAutoSTArray*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %class.SkAutoSTArray, %class.SkAutoSTArray* %0, i64 0, i32 1
  %4 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  %5 = getelementptr inbounds %class.SkAutoSTArray, %class.SkAutoSTArray* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %31

8:                                                ; preds = %2
  %9 = sext i32 %6 to i64
  %10 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 %9
  br label %11

11:                                               ; preds = %8, %27
  %12 = phi %class.sk_sp* [ %13, %27 ], [ %10, %8 ]
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %12, i64 -1
  %14 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %13, i64 0, i32 0
  %15 = load %class.SkImageFilter*, %class.SkImageFilter** %14, align 8
  %16 = icmp eq %class.SkImageFilter* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %class.SkImageFilter* %15 to %class.SkRefCntBase*
  %23 = bitcast %class.SkImageFilter* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  tail call void %26(%class.SkRefCntBase* nonnull %22) #10
  br label %27

27:                                               ; preds = %11, %17, %21
  %28 = icmp ugt %class.sk_sp* %13, %4
  br i1 %28, label %11, label %29

29:                                               ; preds = %27
  %30 = load i32, i32* %5, align 8
  br label %31

31:                                               ; preds = %29, %2
  %32 = phi i32 [ %30, %29 ], [ %6, %2 ]
  %33 = icmp eq i32 %32, %1
  br i1 %33, label %34, label %37

34:                                               ; preds = %31
  %35 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  %36 = bitcast %class.sk_sp* %35 to i8*
  br label %59

37:                                               ; preds = %31
  %38 = icmp sgt i32 %32, 2
  br i1 %38, label %39, label %42

39:                                               ; preds = %37
  %40 = bitcast %class.sk_sp** %3 to i8**
  %41 = load i8*, i8** %40, align 8
  tail call void @_Z7sk_freePv(i8* %41) #10
  br label %42

42:                                               ; preds = %39, %37
  %43 = icmp sgt i32 %1, 2
  br i1 %43, label %44, label %49

44:                                               ; preds = %42
  %45 = sext i32 %1 to i64
  %46 = tail call i8* @_Z15sk_malloc_throwmm(i64 %45, i64 8) #10
  %47 = bitcast %class.sk_sp** %3 to i8**
  store i8* %46, i8** %47, align 8
  %48 = bitcast i8* %46 to %class.sk_sp*
  br label %56

49:                                               ; preds = %42
  %50 = icmp sgt i32 %1, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %49
  %52 = getelementptr inbounds %class.SkAutoSTArray, %class.SkAutoSTArray* %0, i64 0, i32 2, i64 0
  %53 = bitcast %class.sk_sp** %3 to i8**
  store i8* %52, i8** %53, align 8
  %54 = bitcast i8* %52 to %class.sk_sp*
  br label %56

55:                                               ; preds = %49
  store %class.sk_sp* null, %class.sk_sp** %3, align 8
  br label %56

56:                                               ; preds = %51, %55, %44
  %57 = phi i8* [ %52, %51 ], [ null, %55 ], [ %46, %44 ]
  %58 = phi %class.sk_sp* [ %54, %51 ], [ null, %55 ], [ %48, %44 ]
  store i32 %1, i32* %5, align 8
  br label %59

59:                                               ; preds = %34, %56
  %60 = phi i8* [ %36, %34 ], [ %57, %56 ]
  %61 = phi %class.sk_sp* [ %35, %34 ], [ %58, %56 ]
  %62 = sext i32 %1 to i64
  %63 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %61, i64 %62
  %64 = icmp sgt i32 %1, 0
  br i1 %64, label %65, label %76

65:                                               ; preds = %59
  %66 = ptrtoint %class.sk_sp* %61 to i64
  %67 = getelementptr %class.sk_sp, %class.sk_sp* %61, i64 1
  %68 = icmp ugt %class.sk_sp* %63, %67
  %69 = select i1 %68, %class.sk_sp* %63, %class.sk_sp* %67
  %70 = bitcast %class.sk_sp* %69 to i8*
  %71 = xor i64 %66, -1
  %72 = getelementptr i8, i8* %70, i64 %71
  %73 = ptrtoint i8* %72 to i64
  %74 = add i64 %73, 8
  %75 = and i64 %74, -8
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 %75, i1 false)
  br label %76

76:                                               ; preds = %65, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTV18SkImageFilter_Base, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call %class.SkImageFilterCache* @_ZN18SkImageFilterCache3GetEv() #10
  %4 = bitcast %class.SkImageFilter_Base* %0 to %class.SkImageFilter*
  %5 = bitcast %class.SkImageFilterCache* %3 to void (%class.SkImageFilterCache*, %class.SkImageFilter*)***
  %6 = load void (%class.SkImageFilterCache*, %class.SkImageFilter*)**, void (%class.SkImageFilterCache*, %class.SkImageFilter*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkImageFilterCache*, %class.SkImageFilter*)*, void (%class.SkImageFilterCache*, %class.SkImageFilter*)** %6, i64 6
  %8 = load void (%class.SkImageFilterCache*, %class.SkImageFilter*)*, void (%class.SkImageFilterCache*, %class.SkImageFilter*)** %7, align 8
  tail call void %8(%class.SkImageFilterCache* %3, %class.SkImageFilter* %4) #10
  %9 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 2, i32 1
  %10 = load %class.sk_sp*, %class.sk_sp** %9, align 8
  %11 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 2, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %37

14:                                               ; preds = %1
  %15 = sext i32 %12 to i64
  %16 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %10, i64 %15
  br label %17

17:                                               ; preds = %33, %14
  %18 = phi %class.sk_sp* [ %19, %33 ], [ %16, %14 ]
  %19 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %18, i64 -1
  %20 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %19, i64 0, i32 0
  %21 = load %class.SkImageFilter*, %class.SkImageFilter** %20, align 8
  %22 = icmp eq %class.SkImageFilter* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = bitcast %class.SkImageFilter* %21 to %class.SkRefCntBase*
  %29 = bitcast %class.SkImageFilter* %21 to void (%class.SkRefCntBase*)***
  %30 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, i64 2
  %32 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, align 8
  tail call void %32(%class.SkRefCntBase* nonnull %28) #10
  br label %33

33:                                               ; preds = %27, %23, %17
  %34 = icmp ugt %class.sk_sp* %19, %10
  br i1 %34, label %17, label %35

35:                                               ; preds = %33
  %36 = load i32, i32* %11, align 8
  br label %37

37:                                               ; preds = %35, %1
  %38 = phi i32 [ %36, %35 ], [ %12, %1 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %37
  %41 = icmp sgt i32 %38, 2
  br i1 %41, label %42, label %45

42:                                               ; preds = %40
  %43 = bitcast %class.sk_sp** %9 to i8**
  %44 = load i8*, i8** %43, align 8
  tail call void @_Z7sk_freePv(i8* %44) #10
  br label %45

45:                                               ; preds = %42, %40
  store %class.sk_sp* null, %class.sk_sp** %9, align 8
  store i32 0, i32* %11, align 8
  br label %46

46:                                               ; preds = %37, %45
  ret void
}

declare %class.SkImageFilterCache* @_ZN18SkImageFilterCache3GetEv() local_unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN18SkImageFilter_BaseD0Ev(%class.SkImageFilter_Base* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"*, %class.SkReadBuffer* dereferenceable(136), i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %struct.SkRect, align 4
  %5 = alloca %struct.SkRect, align 8
  %6 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #10
  %7 = icmp sgt i32 %6, -1
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #10
  br label %9

9:                                                ; preds = %3, %8
  %10 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %11 = load i8, i8* %10, align 8, !range !7
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %105

13:                                               ; preds = %9
  %14 = icmp slt i32 %2, 0
  %15 = icmp eq i32 %6, %2
  %16 = or i1 %14, %15
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #10
  %18 = load i8, i8* %10, align 8, !range !7
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %105

20:                                               ; preds = %13, %17
  %21 = icmp sgt i32 %6, 0
  br i1 %21, label %22, label %51

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %24 = bitcast i8* %23 to %class.SkTArray*
  %25 = bitcast i8* %23 to %class.sk_sp**
  %26 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %0, i64 0, i32 1, i32 0, i32 0, i64 24
  %27 = bitcast i8* %26 to i64*
  br label %30

28:                                               ; preds = %36
  %29 = icmp eq i32 %50, %6
  br i1 %29, label %51, label %30

30:                                               ; preds = %28, %22
  %31 = phi i32 [ 0, %22 ], [ %50, %28 ]
  %32 = tail call zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* %1) #10
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = tail call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 3) #10, !noalias !8
  %35 = ptrtoint %class.SkFlattenable* %34 to i64
  br label %36

36:                                               ; preds = %33, %30
  %37 = phi i64 [ %35, %33 ], [ 0, %30 ]
  tail call void @_ZN8SkTArrayI5sk_spI13SkImageFilterELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %24, i32 1, i32 1) #10
  %38 = load %class.sk_sp*, %class.sk_sp** %25, align 8
  %39 = load i64, i64* %27, align 8
  %40 = lshr i64 %39, 1
  %41 = and i64 %40, 2147483647
  %42 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %38, i64 %41
  %43 = add i64 %39, 2
  %44 = and i64 %43, 4294967294
  %45 = and i64 %39, -4294967295
  %46 = or i64 %44, %45
  store i64 %46, i64* %27, align 8
  %47 = bitcast %class.sk_sp* %42 to i64*
  store i64 %37, i64* %47, align 8
  %48 = load i8, i8* %10, align 8, !range !7
  %49 = icmp eq i8 %48, 0
  %50 = add nuw nsw i32 %31, 1
  br i1 %49, label %28, label %105

51:                                               ; preds = %28, %20
  %52 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #10
  %53 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 1
  %54 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 3
  %55 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %55, i8 -1, i64 16, i1 false)
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* nonnull %4) #10
  %56 = load i8, i8* %10, align 8, !range !7
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %103

58:                                               ; preds = %51
  %59 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 0
  %60 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 2
  %61 = load float, float* %59, align 4
  %62 = load float, float* %60, align 4
  %63 = fcmp ugt float %61, %62
  br i1 %63, label %78, label %64

64:                                               ; preds = %58
  %65 = load float, float* %53, align 4
  %66 = load float, float* %54, align 4
  %67 = fcmp ugt float %65, %66
  br i1 %67, label %78, label %68

68:                                               ; preds = %64
  %69 = fsub float %62, %61
  %70 = bitcast float %69 to i32
  %71 = and i32 %70, 2139095040
  %72 = icmp eq i32 %71, 2139095040
  br i1 %72, label %78, label %73

73:                                               ; preds = %68
  %74 = fsub float %66, %65
  %75 = bitcast float %74 to i32
  %76 = and i32 %75, 2139095040
  %77 = icmp eq i32 %76, 2139095040
  br i1 %77, label %78, label %81

78:                                               ; preds = %68, %64, %58, %73
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #10
  %79 = load i8, i8* %10, align 8, !range !7
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %103

81:                                               ; preds = %73, %78
  %82 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #10
  %83 = load i8, i8* %10, align 8, !range !7
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %103

85:                                               ; preds = %81
  %86 = icmp eq i32 %82, 0
  switch i32 %82, label %87 [
    i32 15, label %90
    i32 0, label %90
  ]

87:                                               ; preds = %85
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #10
  %88 = load i8, i8* %10, align 8, !range !7
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %103

90:                                               ; preds = %85, %85, %87
  %91 = bitcast %struct.SkRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91)
  %92 = select i1 %86, %struct.SkRect* null, %struct.SkRect* %4
  %93 = icmp ne %struct.SkRect* %92, null
  br i1 %93, label %94, label %96

94:                                               ; preds = %90
  %95 = bitcast %struct.SkRect* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %91, i8* nonnull align 4 %95, i64 16, i1 false)
  br label %97

96:                                               ; preds = %90
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 0, i64 16, i1 false)
  br label %97

97:                                               ; preds = %94, %96
  %98 = select i1 %93, i32 15, i32 0
  %99 = bitcast %"class.SkImageFilter_Base::Common"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* nonnull align 8 %91, i64 16, i1 false)
  %100 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %0, i64 0, i32 0, i32 1
  store i32 %98, i32* %100, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91)
  %101 = load i8, i8* %10, align 8, !range !7
  %102 = icmp eq i8 %101, 0
  br label %103

103:                                              ; preds = %97, %87, %81, %51, %78
  %104 = phi i1 [ false, %78 ], [ false, %51 ], [ %102, %97 ], [ false, %87 ], [ false, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #10
  br label %105

105:                                              ; preds = %36, %17, %9, %103
  %106 = phi i1 [ %104, %103 ], [ false, %9 ], [ false, %17 ], [ false, %36 ]
  ret i1 %106
}

declare i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer*) local_unnamed_addr #3

declare zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer*) local_unnamed_addr #3

declare void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer*, %struct.SkRect*) local_unnamed_addr #3

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 2, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %6 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %6, i64 7
  %8 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, i32 %4) #10
  %9 = load i32, i32* %3, align 8
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 2, i32 1
  %13 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i1)***
  %14 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkFlattenable*)***
  br label %26

15:                                               ; preds = %40, %2
  %16 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 5, i32 0
  %17 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %struct.SkRect*)***
  %18 = load void (%class.SkWriteBuffer*, %struct.SkRect*)**, void (%class.SkWriteBuffer*, %struct.SkRect*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %18, i64 22
  %20 = load void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %19, align 8
  tail call void %20(%class.SkWriteBuffer* %1, %struct.SkRect* dereferenceable(16) %16) #10
  %21 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 5, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %5, align 8
  %24 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %23, i64 9
  %25 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %24, align 8
  tail call void %25(%class.SkWriteBuffer* %1, i32 %22) #10
  ret void

26:                                               ; preds = %11, %40
  %27 = phi i64 [ 0, %11 ], [ %41, %40 ]
  %28 = load %class.sk_sp*, %class.sk_sp** %12, align 8
  %29 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %28, i64 %27, i32 0
  %30 = load %class.SkImageFilter*, %class.SkImageFilter** %29, align 8
  %31 = icmp ne %class.SkImageFilter* %30, null
  %32 = load void (%class.SkWriteBuffer*, i1)**, void (%class.SkWriteBuffer*, i1)*** %13, align 8
  %33 = getelementptr inbounds void (%class.SkWriteBuffer*, i1)*, void (%class.SkWriteBuffer*, i1)** %32, i64 4
  %34 = load void (%class.SkWriteBuffer*, i1)*, void (%class.SkWriteBuffer*, i1)** %33, align 8
  tail call void %34(%class.SkWriteBuffer* %1, i1 zeroext %31) #10
  br i1 %31, label %35, label %40

35:                                               ; preds = %26
  %36 = bitcast %class.SkImageFilter* %30 to %class.SkFlattenable*
  %37 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)**, void (%class.SkWriteBuffer*, %class.SkFlattenable*)*** %14, align 8
  %38 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %37, i64 11
  %39 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %38, align 8
  tail call void %39(%class.SkWriteBuffer* %1, %class.SkFlattenable* nonnull %36) #10
  br label %40

40:                                               ; preds = %35, %26
  %41 = add nuw nsw i64 %27, 1
  %42 = load i32, i32* %3, align 8
  %43 = sext i32 %42 to i64
  %44 = icmp slt i64 %41, %43
  br i1 %44, label %26, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18SkImageFilter_Base11filterImageERKN4skif7ContextE(%"class.skif::FilterResult.21"* noalias sret, %class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #1 align 2 {
  %4 = alloca %struct.SkImageFilterCacheKey, align 4
  %5 = alloca %"class.skif::FilterResult.21", align 8
  %6 = getelementptr inbounds %"class.skif::FilterResult.21", %"class.skif::FilterResult.21"* %0, i64 0, i32 0, i32 0
  %7 = bitcast %"class.skif::FilterResult.21"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #10
  %8 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %9 = load %class.SkSpecialImage*, %class.SkSpecialImage** %8, align 8
  %10 = icmp eq %class.SkSpecialImage* %9, null
  br i1 %10, label %153, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1, i32 0, i64 0
  %13 = load float, float* %12, align 4
  %14 = fmul float %13, 0.000000e+00
  %15 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1, i32 0, i64 1
  %16 = load float, float* %15, align 4
  %17 = fmul float %14, %16
  %18 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1, i32 0, i64 2
  %19 = load float, float* %18, align 4
  %20 = fmul float %17, %19
  %21 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1, i32 0, i64 3
  %22 = load float, float* %21, align 4
  %23 = fmul float %20, %22
  %24 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1, i32 0, i64 4
  %25 = load float, float* %24, align 4
  %26 = fmul float %23, %25
  %27 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1, i32 0, i64 5
  %28 = load float, float* %27, align 4
  %29 = fmul float %26, %28
  %30 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1, i32 0, i64 6
  %31 = load float, float* %30, align 4
  %32 = fmul float %29, %31
  %33 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1, i32 0, i64 7
  %34 = load float, float* %33, align 4
  %35 = fmul float %32, %34
  %36 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1, i32 0, i64 8
  %37 = load float, float* %36, align 4
  %38 = fmul float %35, %37
  %39 = fcmp oeq float %38, 0.000000e+00
  br i1 %39, label %40, label %153

40:                                               ; preds = %11
  %41 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %1, i64 0, i32 3
  %42 = load i8, i8* %41, align 8, !range !7
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %9, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %9, i64 0, i32 2
  %48 = bitcast %struct.SkIRect* %47 to i64*
  %49 = load i64, i64* %48, align 4
  %50 = and i64 %49, -4294967296
  %51 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %9, i64 0, i32 2, i32 2
  %52 = bitcast i32* %51 to i64*
  %53 = load i64, i64* %52, align 4
  %54 = and i64 %49, 4294967295
  br label %55

55:                                               ; preds = %40, %44
  %56 = phi i32 [ %46, %44 ], [ 0, %40 ]
  %57 = phi i64 [ %50, %44 ], [ 0, %40 ]
  %58 = phi i64 [ %54, %44 ], [ 0, %40 ]
  %59 = phi i64 [ %53, %44 ], [ 0, %40 ]
  %60 = bitcast %struct.SkImageFilterCacheKey* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %60) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %60, i8* align 4 bitcast (%struct.SkImageFilterCacheKey* @__const._ZNK18SkImageFilter_Base11filterImageERKN4skif7ContextE.key to i8*), i64 60, i1 false)
  %61 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %1, i64 0, i32 6
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 1, i32 0
  %65 = getelementptr inbounds %struct.SkImageFilterCacheKey, %struct.SkImageFilterCacheKey* %4, i64 0, i32 0
  store i32 %62, i32* %65, align 4
  %66 = getelementptr inbounds %struct.SkImageFilterCacheKey, %struct.SkImageFilterCacheKey* %4, i64 0, i32 1
  %67 = bitcast %class.SkMatrix* %66 to i8*
  %68 = bitcast %class.SkMatrix* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %68, i64 40, i1 false) #10
  %69 = getelementptr inbounds %struct.SkImageFilterCacheKey, %struct.SkImageFilterCacheKey* %4, i64 0, i32 2
  %70 = bitcast %struct.SkIRect* %69 to i8*
  %71 = bitcast %struct.SkIRect* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* align 4 %71, i64 16, i1 false) #10
  %72 = getelementptr inbounds %struct.SkImageFilterCacheKey, %struct.SkImageFilterCacheKey* %4, i64 0, i32 3
  store i32 %56, i32* %72, align 4
  %73 = getelementptr inbounds %struct.SkImageFilterCacheKey, %struct.SkImageFilterCacheKey* %4, i64 0, i32 4
  %74 = bitcast %struct.SkIRect* %73 to i64*
  %75 = or i64 %58, %57
  store i64 %75, i64* %74, align 4
  %76 = getelementptr inbounds %struct.SkImageFilterCacheKey, %struct.SkImageFilterCacheKey* %4, i64 0, i32 4, i32 2
  %77 = bitcast i32* %76 to i64*
  store i64 %59, i64* %77, align 4
  %78 = getelementptr inbounds %struct.SkImageFilterCacheKey, %struct.SkImageFilterCacheKey* %4, i64 0, i32 1, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = trunc i32 %79 to i8
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %55
  %83 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %66) #10
  %84 = zext i8 %83 to i32
  store i32 %84, i32* %78, align 4
  br label %85

85:                                               ; preds = %55, %82
  %86 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 2
  %87 = load %class.SkImageFilterCache*, %class.SkImageFilterCache** %86, align 8
  %88 = icmp eq %class.SkImageFilterCache* %87, null
  br i1 %88, label %95, label %89

89:                                               ; preds = %85
  %90 = bitcast %class.SkImageFilterCache* %87 to i1 (%class.SkImageFilterCache*, %struct.SkImageFilterCacheKey*, %"class.skif::FilterResult.21"*)***
  %91 = load i1 (%class.SkImageFilterCache*, %struct.SkImageFilterCacheKey*, %"class.skif::FilterResult.21"*)**, i1 (%class.SkImageFilterCache*, %struct.SkImageFilterCacheKey*, %"class.skif::FilterResult.21"*)*** %90, align 8
  %92 = getelementptr inbounds i1 (%class.SkImageFilterCache*, %struct.SkImageFilterCacheKey*, %"class.skif::FilterResult.21"*)*, i1 (%class.SkImageFilterCache*, %struct.SkImageFilterCacheKey*, %"class.skif::FilterResult.21"*)** %91, i64 3
  %93 = load i1 (%class.SkImageFilterCache*, %struct.SkImageFilterCacheKey*, %"class.skif::FilterResult.21"*)*, i1 (%class.SkImageFilterCache*, %struct.SkImageFilterCacheKey*, %"class.skif::FilterResult.21"*)** %92, align 8
  %94 = call zeroext i1 %93(%class.SkImageFilterCache* nonnull %87, %struct.SkImageFilterCacheKey* nonnull dereferenceable(80) %4, %"class.skif::FilterResult.21"* %0) #10
  br i1 %94, label %152, label %95

95:                                               ; preds = %85, %89
  %96 = bitcast %"class.skif::FilterResult.21"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #10
  %97 = bitcast %class.SkImageFilter_Base* %1 to void (%"class.skif::FilterResult.21"*, %class.SkImageFilter_Base*, %"class.skif::Context"*)***
  %98 = load void (%"class.skif::FilterResult.21"*, %class.SkImageFilter_Base*, %"class.skif::Context"*)**, void (%"class.skif::FilterResult.21"*, %class.SkImageFilter_Base*, %"class.skif::Context"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.skif::FilterResult.21"*, %class.SkImageFilter_Base*, %"class.skif::Context"*)*, void (%"class.skif::FilterResult.21"*, %class.SkImageFilter_Base*, %"class.skif::Context"*)** %98, i64 14
  %100 = load void (%"class.skif::FilterResult.21"*, %class.SkImageFilter_Base*, %"class.skif::Context"*)*, void (%"class.skif::FilterResult.21"*, %class.SkImageFilter_Base*, %"class.skif::Context"*)** %99, align 8
  call void %100(%"class.skif::FilterResult.21"* nonnull sret %5, %class.SkImageFilter_Base* %1, %"class.skif::Context"* dereferenceable(136) %2) #10
  %101 = getelementptr inbounds %"class.skif::FilterResult.21", %"class.skif::FilterResult.21"* %5, i64 0, i32 0, i32 0
  %102 = bitcast %"class.skif::FilterResult.21"* %5 to i64*
  %103 = load i64, i64* %102, align 8
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %101, align 8
  %104 = load %class.SkSpecialImage*, %class.SkSpecialImage** %6, align 8
  %105 = bitcast %"class.skif::FilterResult.21"* %0 to i64*
  store i64 %103, i64* %105, align 8
  %106 = icmp eq %class.SkSpecialImage* %104, null
  br i1 %106, label %107, label %113

107:                                              ; preds = %95
  %108 = getelementptr inbounds %"class.skif::FilterResult.21", %"class.skif::FilterResult.21"* %0, i64 0, i32 1
  %109 = getelementptr inbounds %"class.skif::FilterResult.21", %"class.skif::FilterResult.21"* %5, i64 0, i32 1
  %110 = bitcast %"class.skif::LayerSpace.20"* %109 to i64*
  %111 = bitcast %"class.skif::LayerSpace.20"* %108 to i64*
  %112 = load i64, i64* %110, align 8
  store i64 %112, i64* %111, align 8
  br label %141

113:                                              ; preds = %95
  %114 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %104, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = atomicrmw add i32* %114, i32 -1 acq_rel
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %117, label %123

117:                                              ; preds = %113
  %118 = bitcast %class.SkSpecialImage* %104 to %class.SkRefCntBase*
  %119 = bitcast %class.SkSpecialImage* %104 to void (%class.SkRefCntBase*)***
  %120 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %119, align 8
  %121 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %120, i64 2
  %122 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %121, align 8
  call void %122(%class.SkRefCntBase* nonnull %118) #10
  br label %123

123:                                              ; preds = %113, %117
  %124 = load %class.SkSpecialImage*, %class.SkSpecialImage** %101, align 8
  %125 = getelementptr inbounds %"class.skif::FilterResult.21", %"class.skif::FilterResult.21"* %0, i64 0, i32 1
  %126 = getelementptr inbounds %"class.skif::FilterResult.21", %"class.skif::FilterResult.21"* %5, i64 0, i32 1
  %127 = bitcast %"class.skif::LayerSpace.20"* %126 to i64*
  %128 = bitcast %"class.skif::LayerSpace.20"* %125 to i64*
  %129 = load i64, i64* %127, align 8
  store i64 %129, i64* %128, align 8
  %130 = icmp eq %class.SkSpecialImage* %124, null
  br i1 %130, label %141, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %124, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = atomicrmw add i32* %132, i32 -1 acq_rel
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %141

135:                                              ; preds = %131
  %136 = bitcast %class.SkSpecialImage* %124 to %class.SkRefCntBase*
  %137 = bitcast %class.SkSpecialImage* %124 to void (%class.SkRefCntBase*)***
  %138 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %137, align 8
  %139 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %138, i64 2
  %140 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %139, align 8
  call void %140(%class.SkRefCntBase* nonnull %136) #10
  br label %141

141:                                              ; preds = %107, %123, %131, %135
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #10
  %142 = load %class.SkSpecialImage*, %class.SkSpecialImage** %8, align 8
  %143 = call zeroext i1 @_ZNK14SkSpecialImage15isTextureBackedEv(%class.SkSpecialImage* %142) #10
  %144 = load %class.SkImageFilterCache*, %class.SkImageFilterCache** %86, align 8
  %145 = icmp eq %class.SkImageFilterCache* %144, null
  br i1 %145, label %152, label %146

146:                                              ; preds = %141
  %147 = bitcast %class.SkImageFilter_Base* %1 to %class.SkImageFilter*
  %148 = bitcast %class.SkImageFilterCache* %144 to void (%class.SkImageFilterCache*, %struct.SkImageFilterCacheKey*, %class.SkImageFilter*, %"class.skif::FilterResult.21"*)***
  %149 = load void (%class.SkImageFilterCache*, %struct.SkImageFilterCacheKey*, %class.SkImageFilter*, %"class.skif::FilterResult.21"*)**, void (%class.SkImageFilterCache*, %struct.SkImageFilterCacheKey*, %class.SkImageFilter*, %"class.skif::FilterResult.21"*)*** %148, align 8
  %150 = getelementptr inbounds void (%class.SkImageFilterCache*, %struct.SkImageFilterCacheKey*, %class.SkImageFilter*, %"class.skif::FilterResult.21"*)*, void (%class.SkImageFilterCache*, %struct.SkImageFilterCacheKey*, %class.SkImageFilter*, %"class.skif::FilterResult.21"*)** %149, i64 4
  %151 = load void (%class.SkImageFilterCache*, %struct.SkImageFilterCacheKey*, %class.SkImageFilter*, %"class.skif::FilterResult.21"*)*, void (%class.SkImageFilterCache*, %struct.SkImageFilterCacheKey*, %class.SkImageFilter*, %"class.skif::FilterResult.21"*)** %150, align 8
  call void %151(%class.SkImageFilterCache* nonnull %144, %struct.SkImageFilterCacheKey* nonnull dereferenceable(80) %4, %class.SkImageFilter* %147, %"class.skif::FilterResult.21"* dereferenceable(16) %0) #10
  br label %152

152:                                              ; preds = %146, %141, %89
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %60) #10
  br label %153

153:                                              ; preds = %3, %152, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK18SkImageFilter_Base14getInputBoundsERKN4skif7MappingERKNS0_11DeviceSpaceI7SkIRectEEPKNS0_14ParameterSpaceI6SkRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::DeviceSpace"*, %"class.skif::ParameterSpace"*) local_unnamed_addr #1 align 2 {
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"class.skif::LayerSpace"*
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca %"class.skif::ParameterSpace", align 4
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"class.skif::LayerSpace"*
  %11 = alloca { i64, i64 }, align 8
  %12 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #10
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %14 = tail call { i64, i64 } @_ZNK4skif7Mapping13deviceToLayerI7SkIRectEENS_10LayerSpaceIT_EERKNS_11DeviceSpaceIS4_EE(%"class.skif::Mapping"* %1, %"class.skif::DeviceSpace"* %2)
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %16 = extractvalue { i64, i64 } %14, 0
  store i64 %16, i64* %15, align 8
  %17 = extractvalue { i64, i64 } %14, 1
  store i64 %17, i64* %13, align 8
  %18 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 5, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %72, label %21

21:                                               ; preds = %4
  %22 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #10
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %24 = bitcast %"class.skif::ParameterSpace"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #10
  %25 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 5, i32 0
  %26 = bitcast %struct.SkRect* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* align 4 %26, i64 16, i1 false) #10
  %27 = getelementptr inbounds %"class.skif::ParameterSpace", %"class.skif::ParameterSpace"* %8, i64 0, i32 0
  %28 = getelementptr inbounds %"class.skif::Mapping", %"class.skif::Mapping"* %1, i64 0, i32 1
  %29 = call { <2 x float>, <2 x float> } @_ZN4skif7Mapping3mapI6SkRectEET_RKS3_RK8SkMatrix(%struct.SkRect* nonnull dereferenceable(16) %27, %class.SkMatrix* dereferenceable(40) %28) #10
  %30 = extractvalue { <2 x float>, <2 x float> } %29, 0
  %31 = extractvalue { <2 x float>, <2 x float> } %29, 1
  %32 = extractelement <2 x float> %30, i32 0
  %33 = call float @llvm.floor.f32(float %32) #10
  %34 = fcmp olt float %33, 0x41DFFFFFE0000000
  %35 = select i1 %34, float %33, float 0x41DFFFFFE0000000
  %36 = fcmp ogt float %35, 0xC1DFFFFFE0000000
  %37 = select i1 %36, float %35, float 0xC1DFFFFFE0000000
  %38 = fptosi float %37 to i32
  %39 = extractelement <2 x float> %30, i32 1
  %40 = call float @llvm.floor.f32(float %39) #10
  %41 = fcmp olt float %40, 0x41DFFFFFE0000000
  %42 = select i1 %41, float %40, float 0x41DFFFFFE0000000
  %43 = fcmp ogt float %42, 0xC1DFFFFFE0000000
  %44 = select i1 %43, float %42, float 0xC1DFFFFFE0000000
  %45 = fptosi float %44 to i32
  %46 = extractelement <2 x float> %31, i32 0
  %47 = call float @llvm.ceil.f32(float %46) #10
  %48 = fcmp olt float %47, 0x41DFFFFFE0000000
  %49 = select i1 %48, float %47, float 0x41DFFFFFE0000000
  %50 = fcmp ogt float %49, 0xC1DFFFFFE0000000
  %51 = select i1 %50, float %49, float 0xC1DFFFFFE0000000
  %52 = fptosi float %51 to i32
  %53 = extractelement <2 x float> %31, i32 1
  %54 = call float @llvm.ceil.f32(float %53) #10
  %55 = fcmp olt float %54, 0x41DFFFFFE0000000
  %56 = select i1 %55, float %54, float 0x41DFFFFFE0000000
  %57 = fcmp ogt float %56, 0xC1DFFFFFE0000000
  %58 = select i1 %57, float %56, float 0xC1DFFFFFE0000000
  %59 = fptosi float %58 to i32
  %60 = zext i32 %45 to i64
  %61 = shl nuw i64 %60, 32
  %62 = zext i32 %38 to i64
  %63 = or i64 %61, %62
  %64 = zext i32 %59 to i64
  %65 = shl nuw i64 %64, 32
  %66 = zext i32 %52 to i64
  %67 = or i64 %65, %66
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 %63, i64* %68, align 8
  store i64 %67, i64* %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #10
  %69 = bitcast { i64, i64 }* %5 to %struct.SkIRect*
  %70 = bitcast { i64, i64 }* %7 to %struct.SkIRect*
  %71 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %69, %struct.SkIRect* nonnull dereferenceable(16) %69, %struct.SkIRect* nonnull dereferenceable(16) %70) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #10
  br i1 %71, label %72, label %148

72:                                               ; preds = %4, %21
  %73 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #10
  %74 = icmp ne %"class.skif::ParameterSpace"* %3, null
  %75 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 16, i1 false)
  br i1 %74, label %76, label %120

76:                                               ; preds = %72
  %77 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %78 = getelementptr inbounds %"class.skif::ParameterSpace", %"class.skif::ParameterSpace"* %3, i64 0, i32 0
  %79 = getelementptr inbounds %"class.skif::Mapping", %"class.skif::Mapping"* %1, i64 0, i32 1
  %80 = call { <2 x float>, <2 x float> } @_ZN4skif7Mapping3mapI6SkRectEET_RKS3_RK8SkMatrix(%struct.SkRect* dereferenceable(16) %78, %class.SkMatrix* dereferenceable(40) %79) #10
  %81 = extractvalue { <2 x float>, <2 x float> } %80, 0
  %82 = extractvalue { <2 x float>, <2 x float> } %80, 1
  %83 = extractelement <2 x float> %81, i32 0
  %84 = call float @llvm.floor.f32(float %83) #10
  %85 = fcmp olt float %84, 0x41DFFFFFE0000000
  %86 = select i1 %85, float %84, float 0x41DFFFFFE0000000
  %87 = fcmp ogt float %86, 0xC1DFFFFFE0000000
  %88 = select i1 %87, float %86, float 0xC1DFFFFFE0000000
  %89 = fptosi float %88 to i32
  %90 = extractelement <2 x float> %81, i32 1
  %91 = call float @llvm.floor.f32(float %90) #10
  %92 = fcmp olt float %91, 0x41DFFFFFE0000000
  %93 = select i1 %92, float %91, float 0x41DFFFFFE0000000
  %94 = fcmp ogt float %93, 0xC1DFFFFFE0000000
  %95 = select i1 %94, float %93, float 0xC1DFFFFFE0000000
  %96 = fptosi float %95 to i32
  %97 = extractelement <2 x float> %82, i32 0
  %98 = call float @llvm.ceil.f32(float %97) #10
  %99 = fcmp olt float %98, 0x41DFFFFFE0000000
  %100 = select i1 %99, float %98, float 0x41DFFFFFE0000000
  %101 = fcmp ogt float %100, 0xC1DFFFFFE0000000
  %102 = select i1 %101, float %100, float 0xC1DFFFFFE0000000
  %103 = fptosi float %102 to i32
  %104 = extractelement <2 x float> %82, i32 1
  %105 = call float @llvm.ceil.f32(float %104) #10
  %106 = fcmp olt float %105, 0x41DFFFFFE0000000
  %107 = select i1 %106, float %105, float 0x41DFFFFFE0000000
  %108 = fcmp ogt float %107, 0xC1DFFFFFE0000000
  %109 = select i1 %108, float %107, float 0xC1DFFFFFE0000000
  %110 = fptosi float %109 to i32
  %111 = zext i32 %96 to i64
  %112 = shl nuw i64 %111, 32
  %113 = zext i32 %89 to i64
  %114 = or i64 %112, %113
  %115 = zext i32 %110 to i64
  %116 = shl nuw i64 %115, 32
  %117 = zext i32 %103 to i64
  %118 = or i64 %116, %117
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  store i64 %114, i64* %119, align 8
  store i64 %118, i64* %77, align 8
  br label %121

120:                                              ; preds = %72
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %12, i64 16, i1 false)
  br label %121

121:                                              ; preds = %120, %76
  %122 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %122) #10
  %123 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %124 = bitcast %class.SkImageFilter_Base* %0 to { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)***
  %125 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)**, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*** %124, align 8
  %126 = getelementptr inbounds { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)** %125, i64 15
  %127 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)** %126, align 8
  %128 = call { i64, i64 } %127(%class.SkImageFilter_Base* %0, %"class.skif::Mapping"* dereferenceable(80) %1, %"class.skif::LayerSpace"* nonnull dereferenceable(16) %6, %"class.skif::LayerSpace"* nonnull dereferenceable(16) %10, i1 zeroext true) #10
  %129 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  %130 = extractvalue { i64, i64 } %128, 0
  store i64 %130, i64* %129, align 8
  %131 = extractvalue { i64, i64 } %128, 1
  store i64 %131, i64* %123, align 8
  br i1 %74, label %132, label %145

132:                                              ; preds = %121
  %133 = bitcast %class.SkImageFilter_Base* %0 to i1 (%class.SkImageFilter_Base*)***
  %134 = load i1 (%class.SkImageFilter_Base*)**, i1 (%class.SkImageFilter_Base*)*** %133, align 8
  %135 = getelementptr inbounds i1 (%class.SkImageFilter_Base*)*, i1 (%class.SkImageFilter_Base*)** %134, i64 13
  %136 = load i1 (%class.SkImageFilter_Base*)*, i1 (%class.SkImageFilter_Base*)** %135, align 8
  %137 = call zeroext i1 %136(%class.SkImageFilter_Base* %0) #10
  br i1 %137, label %145, label %138

138:                                              ; preds = %132
  %139 = bitcast { i64, i64 }* %11 to %struct.SkIRect*
  %140 = bitcast { i64, i64 }* %9 to %struct.SkIRect*
  %141 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %139, %struct.SkIRect* nonnull dereferenceable(16) %139, %struct.SkIRect* nonnull dereferenceable(16) %140) #10
  br i1 %141, label %142, label %145

142:                                              ; preds = %138
  %143 = load i64, i64* %129, align 8
  %144 = load i64, i64* %123, align 8
  br label %145

145:                                              ; preds = %121, %132, %142, %138
  %146 = phi i64 [ 0, %138 ], [ %143, %142 ], [ %130, %132 ], [ %130, %121 ]
  %147 = phi i64 [ 0, %138 ], [ %144, %142 ], [ %131, %132 ], [ %131, %121 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %122) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #10
  br label %148

148:                                              ; preds = %21, %145
  %149 = phi i64 [ %146, %145 ], [ 0, %21 ]
  %150 = phi i64 [ %147, %145 ], [ 0, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #10
  %151 = insertvalue { i64, i64 } undef, i64 %149, 0
  %152 = insertvalue { i64, i64 } %151, i64 %150, 1
  ret { i64, i64 } %152
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK4skif7Mapping13deviceToLayerI7SkIRectEENS_10LayerSpaceIT_EERKNS_11DeviceSpaceIS4_EE(%"class.skif::Mapping"*, %"class.skif::DeviceSpace"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.SkMatrix, align 16
  %4 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #10
  %5 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %6 = bitcast %class.SkMatrix* %3 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %6, align 16
  %7 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %8 = bitcast float* %7 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %8, align 16
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %9, align 16
  store i32 16, i32* %5, align 4
  %10 = getelementptr inbounds %"class.skif::Mapping", %"class.skif::Mapping"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.skif::Mapping", %"class.skif::Mapping"* %0, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = trunc i32 %12 to i8
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %10) #10
  %17 = zext i8 %16 to i32
  store i32 %17, i32* %11, align 4
  br label %18

18:                                               ; preds = %15, %2
  %19 = phi i32 [ %17, %15 ], [ %12, %2 ]
  %20 = and i32 %19, 15
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %3) #10
  br label %32

24:                                               ; preds = %18
  %25 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %10, %class.SkMatrix* nonnull %3) #10
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = bitcast %"class.skif::DeviceSpace"* %1 to i64*
  %28 = load i64, i64* %27, align 4
  %29 = getelementptr inbounds %"class.skif::DeviceSpace", %"class.skif::DeviceSpace"* %1, i64 0, i32 0, i32 2
  %30 = bitcast i32* %29 to i64*
  %31 = load i64, i64* %30, align 4
  br label %37

32:                                               ; preds = %22, %24
  %33 = getelementptr inbounds %"class.skif::DeviceSpace", %"class.skif::DeviceSpace"* %1, i64 0, i32 0
  %34 = call { i64, i64 } @_ZN4skif7Mapping3mapI7SkIRectEET_RKS3_RK8SkMatrix(%struct.SkIRect* dereferenceable(16) %33, %class.SkMatrix* nonnull dereferenceable(40) %3) #10
  %35 = extractvalue { i64, i64 } %34, 0
  %36 = extractvalue { i64, i64 } %34, 1
  br label %37

37:                                               ; preds = %32, %26
  %38 = phi i64 [ %35, %32 ], [ %28, %26 ]
  %39 = phi i64 [ %36, %32 ], [ %31, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #10
  %40 = insertvalue { i64, i64 } undef, i64 %38, 0
  %41 = insertvalue { i64, i64 } %40, i64 %39, 1
  ret { i64, i64 } %41
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK18SkImageFilter_Base15getOutputBoundsERKN4skif7MappingERKNS0_14ParameterSpaceI6SkRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::ParameterSpace"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.skif::LayerSpace"*
  %6 = alloca %struct.SkIRect, align 4
  %7 = alloca %"class.SkImageFilter_Base::CropRect", align 4
  %8 = alloca %struct.SkIRect, align 8
  %9 = alloca %"class.skif::LayerSpace", align 4
  %10 = getelementptr inbounds %"class.skif::ParameterSpace", %"class.skif::ParameterSpace"* %2, i64 0, i32 0
  %11 = getelementptr inbounds %"class.skif::Mapping", %"class.skif::Mapping"* %1, i64 0, i32 1
  %12 = tail call { <2 x float>, <2 x float> } @_ZN4skif7Mapping3mapI6SkRectEET_RKS3_RK8SkMatrix(%struct.SkRect* dereferenceable(16) %10, %class.SkMatrix* dereferenceable(40) %11) #10
  %13 = extractvalue { <2 x float>, <2 x float> } %12, 0
  %14 = extractvalue { <2 x float>, <2 x float> } %12, 1
  %15 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #10
  %16 = extractelement <2 x float> %13, i32 0
  %17 = tail call float @llvm.floor.f32(float %16) #10
  %18 = fcmp olt float %17, 0x41DFFFFFE0000000
  %19 = select i1 %18, float %17, float 0x41DFFFFFE0000000
  %20 = fcmp ogt float %19, 0xC1DFFFFFE0000000
  %21 = select i1 %20, float %19, float 0xC1DFFFFFE0000000
  %22 = fptosi float %21 to i32
  %23 = extractelement <2 x float> %13, i32 1
  %24 = tail call float @llvm.floor.f32(float %23) #10
  %25 = fcmp olt float %24, 0x41DFFFFFE0000000
  %26 = select i1 %25, float %24, float 0x41DFFFFFE0000000
  %27 = fcmp ogt float %26, 0xC1DFFFFFE0000000
  %28 = select i1 %27, float %26, float 0xC1DFFFFFE0000000
  %29 = fptosi float %28 to i32
  %30 = extractelement <2 x float> %14, i32 0
  %31 = tail call float @llvm.ceil.f32(float %30) #10
  %32 = fcmp olt float %31, 0x41DFFFFFE0000000
  %33 = select i1 %32, float %31, float 0x41DFFFFFE0000000
  %34 = fcmp ogt float %33, 0xC1DFFFFFE0000000
  %35 = select i1 %34, float %33, float 0xC1DFFFFFE0000000
  %36 = fptosi float %35 to i32
  %37 = extractelement <2 x float> %14, i32 1
  %38 = tail call float @llvm.ceil.f32(float %37) #10
  %39 = fcmp olt float %38, 0x41DFFFFFE0000000
  %40 = select i1 %39, float %38, float 0x41DFFFFFE0000000
  %41 = fcmp ogt float %40, 0xC1DFFFFFE0000000
  %42 = select i1 %41, float %40, float 0xC1DFFFFFE0000000
  %43 = fptosi float %42 to i32
  %44 = zext i32 %29 to i64
  %45 = shl nuw i64 %44, 32
  %46 = zext i32 %22 to i64
  %47 = or i64 %45, %46
  %48 = zext i32 %43 to i64
  %49 = shl nuw i64 %48, 32
  %50 = zext i32 %36 to i64
  %51 = or i64 %49, %50
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %47, i64* %52, align 8
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %51, i64* %53, align 8
  %54 = bitcast %class.SkImageFilter_Base* %0 to { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)***
  %55 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)**, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)*** %54, align 8
  %56 = getelementptr inbounds { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)** %55, i64 16
  %57 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)** %56, align 8
  %58 = call { i64, i64 } %57(%class.SkImageFilter_Base* %0, %"class.skif::Mapping"* dereferenceable(80) %1, %"class.skif::LayerSpace"* nonnull dereferenceable(16) %5) #10
  %59 = extractvalue { i64, i64 } %58, 0
  %60 = extractvalue { i64, i64 } %58, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  %61 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #10
  %62 = bitcast %"class.SkImageFilter_Base::CropRect"* %7 to i8*
  %63 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %63, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %62) #10
  %64 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 5
  %65 = bitcast %"class.SkImageFilter_Base::CropRect"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %62, i8* align 4 %65, i64 20, i1 false) #10
  %66 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #10
  %67 = bitcast %struct.SkIRect* %8 to i64*
  store i64 %59, i64* %67, align 8
  %68 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 2
  %69 = bitcast i32* %68 to i64*
  store i64 %60, i64* %69, align 8
  %70 = bitcast %class.SkImageFilter_Base* %0 to i1 (%class.SkImageFilter_Base*)***
  %71 = load i1 (%class.SkImageFilter_Base*)**, i1 (%class.SkImageFilter_Base*)*** %70, align 8
  %72 = getelementptr inbounds i1 (%class.SkImageFilter_Base*)*, i1 (%class.SkImageFilter_Base*)** %71, i64 13
  %73 = load i1 (%class.SkImageFilter_Base*)*, i1 (%class.SkImageFilter_Base*)** %72, align 8
  %74 = call zeroext i1 %73(%class.SkImageFilter_Base* %0) #10
  call void @_ZNK18SkImageFilter_Base8CropRect7applyToERK7SkIRectRK8SkMatrixbPS1_(%"class.SkImageFilter_Base::CropRect"* nonnull %7, %struct.SkIRect* nonnull dereferenceable(16) %8, %class.SkMatrix* dereferenceable(40) %11, i1 zeroext %74, %struct.SkIRect* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %62) #10
  %75 = bitcast %"class.skif::LayerSpace"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %75, i8* nonnull align 4 %61, i64 16, i1 false) #10
  %76 = getelementptr inbounds %"class.skif::LayerSpace", %"class.skif::LayerSpace"* %9, i64 0, i32 0
  %77 = getelementptr inbounds %"class.skif::Mapping", %"class.skif::Mapping"* %1, i64 0, i32 0
  %78 = call { i64, i64 } @_ZN4skif7Mapping3mapI7SkIRectEET_RKS3_RK8SkMatrix(%struct.SkIRect* nonnull dereferenceable(16) %76, %class.SkMatrix* dereferenceable(40) %77) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #10
  ret { i64, i64 } %78
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE(%"class.skif::FilterResult.21"* noalias nocapture sret, %class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136)) unnamed_addr #1 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.SkIPoint*
  %6 = alloca %class.sk_sp.19, align 8
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = bitcast i64* %4 to i32*
  store i32 -1431655766, i32* %8, align 8
  %9 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %5, i64 0, i32 1
  store i32 -1431655766, i32* %9, align 4
  %10 = bitcast %class.sk_sp.19* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %6, i64 0, i32 0
  store %class.SkSpecialImage* inttoptr (i64 -6148914691236517206 to %class.SkSpecialImage*), %class.SkSpecialImage** %11, align 8
  %12 = bitcast %class.SkImageFilter_Base* %1 to void (%class.sk_sp.19*, %class.SkImageFilter_Base*, %"class.skif::Context"*, %struct.SkIPoint*)***
  %13 = load void (%class.sk_sp.19*, %class.SkImageFilter_Base*, %"class.skif::Context"*, %struct.SkIPoint*)**, void (%class.sk_sp.19*, %class.SkImageFilter_Base*, %"class.skif::Context"*, %struct.SkIPoint*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.sk_sp.19*, %class.SkImageFilter_Base*, %"class.skif::Context"*, %struct.SkIPoint*)*, void (%class.sk_sp.19*, %class.SkImageFilter_Base*, %"class.skif::Context"*, %struct.SkIPoint*)** %13, i64 8
  %15 = load void (%class.sk_sp.19*, %class.SkImageFilter_Base*, %"class.skif::Context"*, %struct.SkIPoint*)*, void (%class.sk_sp.19*, %class.SkImageFilter_Base*, %"class.skif::Context"*, %struct.SkIPoint*)** %14, align 8
  call void %15(%class.sk_sp.19* nonnull sret %6, %class.SkImageFilter_Base* %1, %"class.skif::Context"* dereferenceable(136) %2, %struct.SkIPoint* nonnull %5) #10
  %16 = bitcast %class.sk_sp.19* %6 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = bitcast %"class.skif::FilterResult.21"* %0 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.skif::FilterResult.21", %"class.skif::FilterResult.21"* %0, i64 0, i32 1
  %21 = bitcast %"class.skif::LayerSpace.20"* %20 to i64*
  store i64 %18, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK18SkImageFilter_Base19canHandleComplexCTMEv(%class.SkImageFilter_Base*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 5, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %30

5:                                                ; preds = %1
  %6 = bitcast %class.SkImageFilter_Base* %0 to i1 (%class.SkImageFilter_Base*)***
  %7 = load i1 (%class.SkImageFilter_Base*)**, i1 (%class.SkImageFilter_Base*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkImageFilter_Base*)*, i1 (%class.SkImageFilter_Base*)** %7, i64 12
  %9 = load i1 (%class.SkImageFilter_Base*)*, i1 (%class.SkImageFilter_Base*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkImageFilter_Base* %0) #10
  br i1 %10, label %11, label %30

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 2, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %30

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 2, i32 1
  %17 = zext i32 %13 to i64
  br label %18

18:                                               ; preds = %27, %15
  %19 = phi i64 [ 0, %15 ], [ %28, %27 ]
  %20 = load %class.sk_sp*, %class.sk_sp** %16, align 8
  %21 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %20, i64 %19, i32 0
  %22 = bitcast %class.SkImageFilter** %21 to %class.SkImageFilter_Base**
  %23 = load %class.SkImageFilter_Base*, %class.SkImageFilter_Base** %22, align 8
  %24 = icmp eq %class.SkImageFilter_Base* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %18
  %26 = tail call zeroext i1 @_ZNK18SkImageFilter_Base19canHandleComplexCTMEv(%class.SkImageFilter_Base* nonnull %23)
  br i1 %26, label %27, label %30

27:                                               ; preds = %25, %18
  %28 = add nuw nsw i64 %19, 1
  %29 = icmp eq i64 %28, %17
  br i1 %29, label %30, label %18

30:                                               ; preds = %25, %27, %11, %1, %5
  %31 = phi i1 [ false, %5 ], [ false, %1 ], [ true, %11 ], [ true, %27 ], [ false, %25 ]
  ret i1 %31
}

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136), %struct.SkIRect* dereferenceable(16), %struct.SkIRect*) local_unnamed_addr #1 align 2 {
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %struct.SkIRect*
  %7 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %1, i64 0, i32 0, i32 1
  %10 = bitcast %class.SkImageFilter_Base* %0 to { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)***
  %11 = load { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)**, { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)*** %10, align 8
  %12 = getelementptr inbounds { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)*, { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)** %11, i64 10
  %13 = load { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)*, { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)** %12, align 8
  %14 = tail call { i64, i64 } %13(%class.SkImageFilter_Base* %0, %struct.SkIRect* dereferenceable(16) %2, %class.SkMatrix* dereferenceable(40) %9, i32 0, %struct.SkIRect* null) #10
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %16 = extractvalue { i64, i64 } %14, 0
  store i64 %16, i64* %15, align 8
  %17 = extractvalue { i64, i64 } %14, 1
  store i64 %17, i64* %8, align 8
  %18 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 5
  %19 = bitcast %class.SkImageFilter_Base* %0 to i1 (%class.SkImageFilter_Base*)***
  %20 = load i1 (%class.SkImageFilter_Base*)**, i1 (%class.SkImageFilter_Base*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%class.SkImageFilter_Base*)*, i1 (%class.SkImageFilter_Base*)** %20, i64 13
  %22 = load i1 (%class.SkImageFilter_Base*)*, i1 (%class.SkImageFilter_Base*)** %21, align 8
  %23 = tail call zeroext i1 %22(%class.SkImageFilter_Base* %0) #10
  call void @_ZNK18SkImageFilter_Base8CropRect7applyToERK7SkIRectRK8SkMatrixbPS1_(%"class.SkImageFilter_Base::CropRect"* %18, %struct.SkIRect* nonnull dereferenceable(16) %6, %class.SkMatrix* dereferenceable(40) %9, i1 zeroext %23, %struct.SkIRect* %3)
  %24 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %1, i64 0, i32 1, i32 0
  %25 = tail call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* %3, %struct.SkIRect* dereferenceable(16) %3, %struct.SkIRect* dereferenceable(16) %24) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18SkImageFilter_Base19applyCropRectAndPadERKN4skif7ContextEP14SkSpecialImageP8SkIPointP7SkIRect(%class.sk_sp.19* noalias sret, %class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136), %class.SkSpecialImage*, %struct.SkIPoint* nocapture, %struct.SkIRect*) local_unnamed_addr #1 align 2 {
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca %struct.SkSamplingOptions, align 4
  %10 = alloca %class.sk_sp.210, align 8
  %11 = alloca i64, align 8
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %struct.SkIRect*
  %14 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  %15 = bitcast { i64, i64 }* %12 to i32*
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 1
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %18 = bitcast i64* %17 to i32*
  %19 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 3
  %20 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %4, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %4, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %3, i64 0, i32 2, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %3, i64 0, i32 2, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = sub i32 %25, %27
  %29 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %3, i64 0, i32 2, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %3, i64 0, i32 2, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = sub i32 %30, %32
  %34 = sext i32 %21 to i64
  %35 = sext i32 %28 to i64
  %36 = add nsw i64 %35, %34
  %37 = icmp slt i64 %36, 2147483647
  %38 = select i1 %37, i64 %36, i64 2147483647
  %39 = icmp sgt i64 %38, -2147483647
  %40 = select i1 %39, i64 %38, i64 -2147483647
  %41 = sext i32 %23 to i64
  %42 = sext i32 %33 to i64
  %43 = add nsw i64 %42, %41
  %44 = icmp slt i64 %43, 2147483647
  %45 = select i1 %44, i64 %43, i64 2147483647
  %46 = icmp sgt i64 %45, -2147483647
  %47 = select i1 %46, i64 %45, i64 -2147483647
  %48 = zext i32 %23 to i64
  %49 = shl nuw i64 %48, 32
  %50 = zext i32 %21 to i64
  %51 = or i64 %49, %50
  %52 = shl nsw i64 %47, 32
  %53 = and i64 %40, 4294967295
  %54 = or i64 %52, %53
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 %51, i64* %55, align 8
  store i64 %54, i64* %17, align 8
  %56 = bitcast { i64, i64 }* %7 to %struct.SkIRect*
  %57 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #10
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %59 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  %60 = bitcast %class.SkImageFilter_Base* %1 to { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)***
  %61 = load { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)**, { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)*** %60, align 8
  %62 = getelementptr inbounds { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)*, { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)** %61, i64 10
  %63 = load { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)*, { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)** %62, align 8
  %64 = call { i64, i64 } %63(%class.SkImageFilter_Base* %1, %struct.SkIRect* nonnull dereferenceable(16) %13, %class.SkMatrix* dereferenceable(40) %59, i32 0, %struct.SkIRect* null) #10
  %65 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %66 = extractvalue { i64, i64 } %64, 0
  store i64 %66, i64* %65, align 8
  %67 = extractvalue { i64, i64 } %64, 1
  store i64 %67, i64* %58, align 8
  %68 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %1, i64 0, i32 5
  %69 = bitcast %class.SkImageFilter_Base* %1 to i1 (%class.SkImageFilter_Base*)***
  %70 = load i1 (%class.SkImageFilter_Base*)**, i1 (%class.SkImageFilter_Base*)*** %69, align 8
  %71 = getelementptr inbounds i1 (%class.SkImageFilter_Base*)*, i1 (%class.SkImageFilter_Base*)** %70, i64 13
  %72 = load i1 (%class.SkImageFilter_Base*)*, i1 (%class.SkImageFilter_Base*)** %71, align 8
  %73 = call zeroext i1 %72(%class.SkImageFilter_Base* %1) #10
  call void @_ZNK18SkImageFilter_Base8CropRect7applyToERK7SkIRectRK8SkMatrixbPS1_(%"class.SkImageFilter_Base::CropRect"* %68, %struct.SkIRect* nonnull dereferenceable(16) %56, %class.SkMatrix* dereferenceable(40) %59, i1 zeroext %73, %struct.SkIRect* %5) #10
  %74 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 1, i32 0
  %75 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* %5, %struct.SkIRect* dereferenceable(16) %5, %struct.SkIRect* dereferenceable(16) %74) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #10
  br i1 %75, label %78, label %76

76:                                               ; preds = %6
  %77 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %77, align 8
  br label %202

78:                                               ; preds = %6
  %79 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = sub nsw i64 %81, %84
  %86 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 3
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = sext i32 %90 to i64
  %92 = sub nsw i64 %88, %91
  %93 = icmp slt i64 %85, 1
  %94 = icmp slt i64 %92, 1
  %95 = or i1 %93, %94
  br i1 %95, label %131, label %96

96:                                               ; preds = %78
  %97 = or i64 %92, %85
  %98 = add nsw i64 %97, 2147483648
  %99 = icmp ugt i64 %98, 4294967295
  br i1 %99, label %131, label %100

100:                                              ; preds = %96
  %101 = load i32, i32* %18, align 8
  %102 = sext i32 %101 to i64
  %103 = load i32, i32* %15, align 8
  %104 = sext i32 %103 to i64
  %105 = sub nsw i64 %102, %104
  %106 = load i32, i32* %19, align 4
  %107 = sext i32 %106 to i64
  %108 = load i32, i32* %16, align 4
  %109 = sext i32 %108 to i64
  %110 = sub nsw i64 %107, %109
  %111 = icmp slt i64 %105, 1
  %112 = icmp slt i64 %110, 1
  %113 = or i1 %111, %112
  br i1 %113, label %131, label %114

114:                                              ; preds = %100
  %115 = or i64 %110, %105
  %116 = add nsw i64 %115, 2147483648
  %117 = icmp ugt i64 %116, 4294967295
  %118 = icmp sgt i32 %103, %83
  %119 = or i1 %118, %117
  %120 = icmp sgt i32 %108, %90
  %121 = or i1 %120, %119
  %122 = icmp slt i32 %101, %80
  %123 = or i1 %122, %121
  %124 = icmp sge i32 %106, %87
  %125 = xor i1 %123, true
  %126 = and i1 %124, %125
  br i1 %126, label %127, label %131

127:                                              ; preds = %114
  %128 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = atomicrmw add i32* %128, i32 1 monotonic
  %130 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %0, i64 0, i32 0
  store %class.SkSpecialImage* %3, %class.SkSpecialImage** %130, align 8
  br label %202

131:                                              ; preds = %78, %96, %100, %114
  %132 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %0, i64 0, i32 0
  store %class.SkSpecialImage* inttoptr (i64 -6148914691236517206 to %class.SkSpecialImage*), %class.SkSpecialImage** %132, align 8
  %133 = sub i32 %80, %83
  %134 = sub i32 %87, %90
  %135 = load i32, i32* %20, align 4
  %136 = sext i32 %135 to i64
  %137 = sub nsw i64 %136, %84
  %138 = icmp slt i64 %137, 2147483647
  %139 = select i1 %138, i64 %137, i64 2147483647
  %140 = load i32, i32* %22, align 4
  %141 = sext i32 %140 to i64
  %142 = sub nsw i64 %141, %91
  %143 = icmp slt i64 %142, 2147483647
  %144 = select i1 %143, i64 %142, i64 2147483647
  %145 = bitcast i64* %11 to %struct.SkISize*
  %146 = bitcast %class.sk_sp.210* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #10, !noalias !13
  %147 = getelementptr inbounds %class.sk_sp.210, %class.sk_sp.210* %10, i64 0, i32 0
  store %class.SkSpecialSurface* inttoptr (i64 -6148914691236517206 to %class.SkSpecialSurface*), %class.SkSpecialSurface** %147, align 8, !noalias !13
  %148 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #10, !noalias !13
  %149 = zext i32 %134 to i64
  %150 = shl nuw i64 %149, 32
  %151 = zext i32 %133 to i64
  %152 = or i64 %150, %151
  store i64 %152, i64* %11, align 8, !noalias !13
  %153 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %154 = load %class.SkSpecialImage*, %class.SkSpecialImage** %153, align 8, !noalias !16
  %155 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %154, i64 0, i32 1
  %156 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %157 = load i32, i32* %156, align 8, !noalias !16
  %158 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %159 = load %class.SkColorSpace*, %class.SkColorSpace** %158, align 8, !noalias !16
  call void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.210* nonnull sret %10, %class.SkSpecialImage* %154, i32 %157, %class.SkColorSpace* %159, %struct.SkISize* nonnull dereferenceable(8) %145, i32 2, %class.SkSurfaceProps* dereferenceable(8) %155) #10, !noalias !13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #10, !noalias !13
  %160 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %147, align 8, !noalias !13
  %161 = icmp eq %class.SkSpecialSurface* %160, null
  br i1 %161, label %162, label %163

162:                                              ; preds = %131
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %132, align 8, !alias.scope !13
  br label %194

163:                                              ; preds = %131
  %164 = icmp sgt i64 %144, -2147483647
  %165 = select i1 %164, i64 %144, i64 -2147483647
  %166 = trunc i64 %165 to i32
  %167 = icmp sgt i64 %139, -2147483647
  %168 = select i1 %167, i64 %139, i64 -2147483647
  %169 = trunc i64 %168 to i32
  %170 = call %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface* nonnull %160) #10, !noalias !13
  %171 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRGBA4f*
  %172 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172) #10, !noalias !13
  %173 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #10, !noalias !13
  %174 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %175 = extractvalue { <2 x float>, <2 x float> } %173, 0
  store <2 x float> %175, <2 x float>* %174, align 8, !noalias !13
  %176 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %177 = extractvalue { <2 x float>, <2 x float> } %173, 1
  store <2 x float> %177, <2 x float>* %176, align 8, !noalias !13
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %170, %struct.SkRGBA4f* nonnull dereferenceable(16) %171, i32 1) #10, !noalias !13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172) #10, !noalias !13
  %178 = sitofp i32 %169 to float
  %179 = sitofp i32 %166 to float
  %180 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %180) #10, !noalias !13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %180, i8 0, i64 20, i1 false) #10, !noalias !13
  call void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage* %3, %class.SkCanvas* %170, float %178, float %179, %struct.SkSamplingOptions* nonnull dereferenceable(20) %9, %class.SkPaint* null) #10, !noalias !13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %180) #10, !noalias !13
  %181 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %147, align 8, !noalias !13
  call void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.19* sret %0, %class.SkSpecialSurface* %181) #10
  %182 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %147, align 8, !noalias !13
  %183 = icmp eq %class.SkSpecialSurface* %182, null
  br i1 %183, label %194, label %184

184:                                              ; preds = %163
  %185 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %182, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = atomicrmw add i32* %185, i32 -1 acq_rel
  %187 = icmp eq i32 %186, 1
  br i1 %187, label %188, label %194

188:                                              ; preds = %184
  %189 = bitcast %class.SkSpecialSurface* %182 to %class.SkRefCntBase*
  %190 = bitcast %class.SkSpecialSurface* %182 to void (%class.SkRefCntBase*)***
  %191 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %190, align 8
  %192 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %191, i64 2
  %193 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %192, align 8
  call void %193(%class.SkRefCntBase* nonnull %189) #10
  br label %194

194:                                              ; preds = %162, %163, %184, %188
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #10, !noalias !13
  %195 = load i32, i32* %82, align 4
  %196 = load i32, i32* %89, align 4
  %197 = zext i32 %196 to i64
  %198 = shl nuw i64 %197, 32
  %199 = zext i32 %195 to i64
  %200 = or i64 %198, %199
  %201 = bitcast %struct.SkIPoint* %4 to i64*
  store i64 %200, i64* %201, align 4
  br label %202

202:                                              ; preds = %194, %127, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base* nocapture readonly, %struct.SkIRect* nocapture readonly dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #1 align 2 {
  %6 = alloca %struct.SkIRect, align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %struct.SkIRect*
  %9 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 2, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = bitcast %struct.SkIRect* %1 to i64*
  %14 = load i64, i64* %13, align 4
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %16 = bitcast i32* %15 to i64*
  %17 = load i64, i64* %16, align 4
  br label %53

18:                                               ; preds = %5
  %19 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #10
  %20 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %21 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  %22 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 2, i32 1
  %23 = bitcast { i64, i64 }* %7 to i8*
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %26 = bitcast %struct.SkIRect* %1 to i8*
  %27 = bitcast { i64, i64 }* %7 to i8*
  br label %33

28:                                               ; preds = %48
  %29 = bitcast %struct.SkIRect* %6 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast i32* %20 to i64*
  %32 = load i64, i64* %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #10
  br label %53

33:                                               ; preds = %18, %48
  %34 = phi i64 [ 0, %18 ], [ %49, %48 ]
  %35 = load %class.sk_sp*, %class.sk_sp** %22, align 8
  %36 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %35, i64 %34, i32 0
  %37 = load %class.SkImageFilter*, %class.SkImageFilter** %36, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #10
  %38 = icmp eq %class.SkImageFilter* %37, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false)
  br i1 %38, label %43, label %39

39:                                               ; preds = %33
  %40 = call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* nonnull %37, %struct.SkIRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 %3, %struct.SkIRect* %4)
  %41 = extractvalue { i64, i64 } %40, 0
  store i64 %41, i64* %25, align 8
  %42 = extractvalue { i64, i64 } %40, 1
  store i64 %42, i64* %24, align 8
  br label %44

43:                                               ; preds = %33
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 4 %26, i64 16, i1 false)
  br label %44

44:                                               ; preds = %43, %39
  %45 = icmp eq i64 %34, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* nonnull align 8 %23, i64 16, i1 false)
  br label %48

47:                                               ; preds = %44
  call void @_ZN7SkIRect4joinERKS_(%struct.SkIRect* nonnull %6, %struct.SkIRect* nonnull dereferenceable(16) %8) #10
  br label %48

48:                                               ; preds = %47, %46
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #10
  %49 = add nuw nsw i64 %34, 1
  %50 = load i32, i32* %9, align 8
  %51 = sext i32 %50 to i64
  %52 = icmp slt i64 %49, %51
  br i1 %52, label %33, label %28

53:                                               ; preds = %28, %12
  %54 = phi i64 [ %14, %12 ], [ %30, %28 ]
  %55 = phi i64 [ %17, %12 ], [ %32, %28 ]
  %56 = insertvalue { i64, i64 } undef, i64 %54, 0
  %57 = insertvalue { i64, i64 } %56, i64 %55, 1
  ret { i64, i64 } %57
}

declare void @_ZN7SkIRect4joinERKS_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base* nocapture readnone, %struct.SkIRect* nocapture readonly dereferenceable(16), %class.SkMatrix* nocapture readnone dereferenceable(40), i32, %struct.SkIRect* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = bitcast %struct.SkIRect* %1 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %9 = bitcast i32* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = insertvalue { i64, i64 } undef, i64 %7, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK18SkImageFilter_Base21visitInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_(%class.SkImageFilter_Base* nocapture readonly, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16), %"class.skif::LayerSpace"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.skif::LayerSpace", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 2, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %4
  %11 = bitcast %"class.skif::LayerSpace"* %2 to i64*
  %12 = load i64, i64* %11, align 4
  %13 = getelementptr inbounds %"class.skif::LayerSpace", %"class.skif::LayerSpace"* %2, i64 0, i32 0, i32 2
  %14 = bitcast i32* %13 to i64*
  %15 = load i64, i64* %14, align 4
  br label %58

16:                                               ; preds = %4
  %17 = bitcast %"class.skif::LayerSpace"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.skif::LayerSpace", %"class.skif::LayerSpace"* %5, i64 0, i32 0, i32 2
  %19 = bitcast %"class.skif::LayerSpace"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  %20 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 2, i32 1
  %21 = bitcast { i64, i64 }* %6 to i8*
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %24 = bitcast %"class.skif::LayerSpace"* %2 to i8*
  %25 = getelementptr inbounds %"class.skif::LayerSpace", %"class.skif::LayerSpace"* %5, i64 0, i32 0
  %26 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %27 = bitcast { i64, i64 }* %6 to i8*
  br label %33

28:                                               ; preds = %53
  %29 = bitcast %"class.skif::LayerSpace"* %5 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast i32* %18 to i64*
  %32 = load i64, i64* %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #10
  br label %58

33:                                               ; preds = %16, %53
  %34 = phi i64 [ 0, %16 ], [ %54, %53 ]
  %35 = load %class.sk_sp*, %class.sk_sp** %20, align 8
  %36 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %35, i64 %34, i32 0
  %37 = load %class.SkImageFilter*, %class.SkImageFilter** %36, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #10
  %38 = icmp eq %class.SkImageFilter* %37, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false)
  br i1 %38, label %48, label %39

39:                                               ; preds = %33
  %40 = bitcast %class.SkImageFilter* %37 to %class.SkImageFilter_Base*
  %41 = bitcast %class.SkImageFilter* %37 to { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)***
  %42 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)**, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*** %41, align 8
  %43 = getelementptr inbounds { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)** %42, i64 15
  %44 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)** %43, align 8
  %45 = call { i64, i64 } %44(%class.SkImageFilter_Base* nonnull %40, %"class.skif::Mapping"* dereferenceable(80) %1, %"class.skif::LayerSpace"* dereferenceable(16) %2, %"class.skif::LayerSpace"* dereferenceable(16) %3, i1 zeroext true) #10
  %46 = extractvalue { i64, i64 } %45, 0
  store i64 %46, i64* %23, align 8
  %47 = extractvalue { i64, i64 } %45, 1
  store i64 %47, i64* %22, align 8
  br label %49

48:                                               ; preds = %33
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 4 %24, i64 16, i1 false)
  br label %49

49:                                               ; preds = %48, %39
  %50 = icmp eq i64 %34, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %49
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* nonnull align 8 %21, i64 16, i1 false)
  br label %53

52:                                               ; preds = %49
  call void @_ZN7SkIRect4joinERKS_(%struct.SkIRect* nonnull %25, %struct.SkIRect* nonnull dereferenceable(16) %26) #10
  br label %53

53:                                               ; preds = %52, %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #10
  %54 = add nuw nsw i64 %34, 1
  %55 = load i32, i32* %7, align 8
  %56 = sext i32 %55 to i64
  %57 = icmp slt i64 %54, %56
  br i1 %57, label %33, label %28

58:                                               ; preds = %28, %10
  %59 = phi i64 [ %12, %10 ], [ %30, %28 ]
  %60 = phi i64 [ %15, %10 ], [ %32, %28 ]
  %61 = insertvalue { i64, i64 } undef, i64 %59, 0
  %62 = insertvalue { i64, i64 } %61, i64 %60, 1
  ret { i64, i64 } %62
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK18SkImageFilter_Base22visitOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base* nocapture readonly, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.skif::LayerSpace", align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 2, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %15

9:                                                ; preds = %3
  %10 = bitcast %"class.skif::LayerSpace"* %2 to i64*
  %11 = load i64, i64* %10, align 4
  %12 = getelementptr inbounds %"class.skif::LayerSpace", %"class.skif::LayerSpace"* %2, i64 0, i32 0, i32 2
  %13 = bitcast i32* %12 to i64*
  %14 = load i64, i64* %13, align 4
  br label %57

15:                                               ; preds = %3
  %16 = bitcast %"class.skif::LayerSpace"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.skif::LayerSpace", %"class.skif::LayerSpace"* %4, i64 0, i32 0, i32 2
  %18 = bitcast %"class.skif::LayerSpace"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  %19 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %0, i64 0, i32 2, i32 1
  %20 = bitcast { i64, i64 }* %5 to i8*
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %23 = bitcast %"class.skif::LayerSpace"* %2 to i8*
  %24 = getelementptr inbounds %"class.skif::LayerSpace", %"class.skif::LayerSpace"* %4, i64 0, i32 0
  %25 = bitcast { i64, i64 }* %5 to %struct.SkIRect*
  %26 = bitcast { i64, i64 }* %5 to i8*
  br label %32

27:                                               ; preds = %52
  %28 = bitcast %"class.skif::LayerSpace"* %4 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i32* %17 to i64*
  %31 = load i64, i64* %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #10
  br label %57

32:                                               ; preds = %15, %52
  %33 = phi i64 [ 0, %15 ], [ %53, %52 ]
  %34 = load %class.sk_sp*, %class.sk_sp** %19, align 8
  %35 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %34, i64 %33, i32 0
  %36 = load %class.SkImageFilter*, %class.SkImageFilter** %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #10
  %37 = icmp eq %class.SkImageFilter* %36, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  br i1 %37, label %47, label %38

38:                                               ; preds = %32
  %39 = bitcast %class.SkImageFilter* %36 to %class.SkImageFilter_Base*
  %40 = bitcast %class.SkImageFilter* %36 to { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)***
  %41 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)**, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)*** %40, align 8
  %42 = getelementptr inbounds { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)** %41, i64 16
  %43 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)** %42, align 8
  %44 = call { i64, i64 } %43(%class.SkImageFilter_Base* nonnull %39, %"class.skif::Mapping"* dereferenceable(80) %1, %"class.skif::LayerSpace"* dereferenceable(16) %2) #10
  %45 = extractvalue { i64, i64 } %44, 0
  store i64 %45, i64* %22, align 8
  %46 = extractvalue { i64, i64 } %44, 1
  store i64 %46, i64* %21, align 8
  br label %48

47:                                               ; preds = %32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 4 %23, i64 16, i1 false)
  br label %48

48:                                               ; preds = %47, %38
  %49 = icmp eq i64 %33, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %48
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* nonnull align 8 %20, i64 16, i1 false)
  br label %52

51:                                               ; preds = %48
  call void @_ZN7SkIRect4joinERKS_(%struct.SkIRect* nonnull %24, %struct.SkIRect* nonnull dereferenceable(16) %25) #10
  br label %52

52:                                               ; preds = %51, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #10
  %53 = add nuw nsw i64 %33, 1
  %54 = load i32, i32* %6, align 8
  %55 = sext i32 %54 to i64
  %56 = icmp slt i64 %53, %55
  br i1 %56, label %32, label %27

57:                                               ; preds = %27, %9
  %58 = phi i64 [ %11, %9 ], [ %29, %27 ]
  %59 = phi i64 [ %14, %9 ], [ %31, %27 ]
  %60 = insertvalue { i64, i64 } undef, i64 %58, 0
  %61 = insertvalue { i64, i64 } %60, i64 %59, 1
  ret { i64, i64 } %61
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* nocapture readonly dereferenceable(16), %"class.skif::LayerSpace"* nocapture readonly dereferenceable(16), i1 zeroext) unnamed_addr #1 align 2 {
  %6 = alloca %struct.SkIRect, align 4
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %struct.SkIRect*
  %9 = alloca %struct.SkIRect, align 4
  %10 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = bitcast %"class.skif::LayerSpace"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %10, i8* align 4 %11, i64 16, i1 false)
  %12 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #10
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %14 = bitcast %struct.SkIRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  %15 = bitcast %"class.skif::LayerSpace"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %14, i8* align 4 %15, i64 16, i1 false)
  %16 = getelementptr inbounds %"class.skif::Mapping", %"class.skif::Mapping"* %1, i64 0, i32 1
  %17 = bitcast %class.SkImageFilter_Base* %0 to { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)***
  %18 = load { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)**, { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)*** %17, align 8
  %19 = getelementptr inbounds { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)*, { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)** %18, i64 10
  %20 = load { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)*, { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)** %19, align 8
  %21 = call { i64, i64 } %20(%class.SkImageFilter_Base* %0, %struct.SkIRect* nonnull dereferenceable(16) %9, %class.SkMatrix* dereferenceable(40) %16, i32 1, %struct.SkIRect* nonnull %6) #10
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %23 = extractvalue { i64, i64 } %21, 0
  store i64 %23, i64* %22, align 8
  %24 = extractvalue { i64, i64 } %21, 1
  store i64 %24, i64* %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  br i1 %4, label %25, label %32

25:                                               ; preds = %5
  %26 = load { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)**, { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)*** %17, align 8
  %27 = getelementptr inbounds { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)*, { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)** %26, i64 9
  %28 = load { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)*, { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)** %27, align 8
  %29 = call { i64, i64 } %28(%class.SkImageFilter_Base* %0, %struct.SkIRect* nonnull dereferenceable(16) %8, %class.SkMatrix* dereferenceable(40) %16, i32 1, %struct.SkIRect* nonnull %8) #10
  %30 = extractvalue { i64, i64 } %29, 0
  %31 = extractvalue { i64, i64 } %29, 1
  br label %32

32:                                               ; preds = %5, %25
  %33 = phi i64 [ %30, %25 ], [ %23, %5 ]
  %34 = phi i64 [ %31, %25 ], [ %24, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  %35 = insertvalue { i64, i64 } undef, i64 %33, 0
  %36 = insertvalue { i64, i64 } %35, i64 %34, 1
  ret { i64, i64 } %36
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* nocapture readonly dereferenceable(16)) unnamed_addr #1 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %struct.SkIRect*
  %6 = alloca %struct.SkIRect, align 4
  %7 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %9 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = bitcast %"class.skif::LayerSpace"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %9, i8* align 4 %10, i64 16, i1 false)
  %11 = getelementptr inbounds %"class.skif::Mapping", %"class.skif::Mapping"* %1, i64 0, i32 1
  %12 = bitcast %class.SkImageFilter_Base* %0 to { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)***
  %13 = load { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)**, { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)*** %12, align 8
  %14 = getelementptr inbounds { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)*, { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)** %13, i64 9
  %15 = load { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)*, { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)** %14, align 8
  %16 = call { i64, i64 } %15(%class.SkImageFilter_Base* %0, %struct.SkIRect* nonnull dereferenceable(16) %6, %class.SkMatrix* dereferenceable(40) %11, i32 0, %struct.SkIRect* null) #10
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %18 = extractvalue { i64, i64 } %16, 0
  store i64 %18, i64* %17, align 8
  %19 = extractvalue { i64, i64 } %16, 1
  store i64 %19, i64* %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  %20 = load { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)**, { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)*** %12, align 8
  %21 = getelementptr inbounds { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)*, { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)** %20, i64 10
  %22 = load { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)*, { i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)** %21, align 8
  %23 = call { i64, i64 } %22(%class.SkImageFilter_Base* %0, %struct.SkIRect* nonnull dereferenceable(16) %5, %class.SkMatrix* dereferenceable(40) %11, i32 0, %struct.SkIRect* null) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret { i64, i64 } %23
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* noalias sret, %class.SkImageFilter_Base*, i32, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"class.skif::FilterResult.21"*
  %7 = alloca %"class.skif::Context", align 8
  %8 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %1, i64 0, i32 2, i32 1
  %9 = load %class.sk_sp*, %class.sk_sp** %8, align 8
  %10 = sext i32 %2 to i64
  %11 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 %10, i32 0
  %12 = load %class.SkImageFilter*, %class.SkImageFilter** %11, align 8
  %13 = icmp eq %class.SkImageFilter* %12, null
  br i1 %13, label %14, label %28

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 5, i32 0, i32 0
  %17 = load %class.SkSpecialImage*, %class.SkSpecialImage** %16, align 8
  %18 = icmp eq %class.SkSpecialImage* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %17, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  br label %22

22:                                               ; preds = %14, %19
  store %class.SkSpecialImage* %17, %class.SkSpecialImage** %15, align 8
  %23 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 5, i32 1
  %25 = bitcast %"class.skif::LayerSpace.20"* %24 to i64*
  %26 = bitcast %"class.skif::LayerSpace.20"* %23 to i64*
  %27 = load i64, i64* %25, align 8
  store i64 %27, i64* %26, align 8
  br label %89

28:                                               ; preds = %4
  %29 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #10
  %30 = bitcast <2 x i64>* %5 to %class.SkSpecialImage**
  %31 = bitcast %class.SkImageFilter* %12 to %class.SkImageFilter_Base*
  %32 = bitcast %"class.skif::Context"* %7 to i8*
  %33 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %32) #10
  %34 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 0
  %35 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 1
  %36 = bitcast %class.SkImageFilter_Base* %1 to { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)***
  %37 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)**, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*** %36, align 8, !noalias !19
  %38 = getelementptr inbounds { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)** %37, i64 15
  %39 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)** %38, align 8, !noalias !19
  %40 = tail call { i64, i64 } %39(%class.SkImageFilter_Base* %1, %"class.skif::Mapping"* dereferenceable(80) %34, %"class.skif::LayerSpace"* dereferenceable(16) %35, %"class.skif::LayerSpace"* dereferenceable(16) %35, i1 zeroext false) #10, !noalias !19
  %41 = extractvalue { i64, i64 } %40, 0
  %42 = extractvalue { i64, i64 } %40, 1
  %43 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 2
  %44 = bitcast %class.SkImageFilterCache** %43 to i64*
  %45 = load i64, i64* %44, align 8, !noalias !22
  %46 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 3
  %47 = load i32, i32* %46, align 8, !noalias !22
  %48 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 4
  %49 = bitcast %class.SkColorSpace** %48 to i64*
  %50 = load i64, i64* %49, align 8, !noalias !22
  %51 = bitcast %"class.skif::Context"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 4 %51, i64 80, i1 false) #10
  %52 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 1
  %53 = bitcast %"class.skif::LayerSpace"* %52 to i64*
  store i64 %41, i64* %53, align 8, !alias.scope !19
  %54 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 1, i32 0, i32 2
  %55 = bitcast i32* %54 to i64*
  store i64 %42, i64* %55, align 8, !alias.scope !19
  %56 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 2
  %57 = bitcast %class.SkImageFilterCache** %56 to i64*
  store i64 %45, i64* %57, align 8, !alias.scope !22
  %58 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 3
  store i32 %47, i32* %58, align 8, !alias.scope !22
  %59 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 4
  %60 = bitcast %class.SkColorSpace** %59 to i64*
  store i64 %50, i64* %60, align 8, !alias.scope !22
  %61 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 5, i32 0, i32 0
  %62 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 5, i32 0, i32 0
  %63 = load %class.SkSpecialImage*, %class.SkSpecialImage** %62, align 8, !noalias !22
  %64 = icmp eq %class.SkSpecialImage* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %28
  %66 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %63, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 1 monotonic, !noalias !22
  br label %68

68:                                               ; preds = %28, %65
  store %class.SkSpecialImage* %63, %class.SkSpecialImage** %61, align 8, !alias.scope !22
  %69 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 5, i32 1
  %70 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 5, i32 1
  %71 = bitcast %"class.skif::LayerSpace.20"* %70 to i64*
  %72 = bitcast %"class.skif::LayerSpace.20"* %69 to i64*
  %73 = load i64, i64* %71, align 8, !noalias !22
  store i64 %73, i64* %72, align 8, !alias.scope !22
  call void @_ZNK18SkImageFilter_Base11filterImageERKN4skif7ContextE(%"class.skif::FilterResult.21"* nonnull sret %6, %class.SkImageFilter_Base* nonnull %31, %"class.skif::Context"* nonnull dereferenceable(136) %7)
  %74 = load %class.SkSpecialImage*, %class.SkSpecialImage** %61, align 8
  %75 = icmp eq %class.SkSpecialImage* %74, null
  br i1 %75, label %86, label %76

76:                                               ; preds = %68
  %77 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %74, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %86

80:                                               ; preds = %76
  %81 = bitcast %class.SkSpecialImage* %74 to %class.SkRefCntBase*
  %82 = bitcast %class.SkSpecialImage* %74 to void (%class.SkRefCntBase*)***
  %83 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %82, align 8
  %84 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, i64 2
  %85 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %84, align 8
  call void %85(%class.SkRefCntBase* nonnull %81) #10
  br label %86

86:                                               ; preds = %80, %76, %68
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %32) #10
  %87 = load <2 x i64>, <2 x i64>* %5, align 16
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %30, align 16
  %88 = bitcast %"class.skif::FilterResult"* %0 to <2 x i64>*
  store <2 x i64> %87, <2 x i64>* %88, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #10
  br label %89

89:                                               ; preds = %86, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18SkImageFilter_Base10mapContextERKN4skif7ContextE(%"class.skif::Context"* noalias nocapture sret, %class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0
  %5 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 1
  %6 = bitcast %class.SkImageFilter_Base* %1 to { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)***
  %7 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)**, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*** %6, align 8
  %8 = getelementptr inbounds { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)** %7, i64 15
  %9 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)** %8, align 8
  %10 = tail call { i64, i64 } %9(%class.SkImageFilter_Base* %1, %"class.skif::Mapping"* dereferenceable(80) %4, %"class.skif::LayerSpace"* dereferenceable(16) %5, %"class.skif::LayerSpace"* dereferenceable(16) %5, i1 zeroext false) #10
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = extractvalue { i64, i64 } %10, 1
  %13 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 2
  %14 = bitcast %class.SkImageFilterCache** %13 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !25
  %16 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %17 = load i32, i32* %16, align 8, !noalias !25
  %18 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %19 = bitcast %class.SkColorSpace** %18 to i64*
  %20 = load i64, i64* %19, align 8, !noalias !25
  %21 = bitcast %"class.skif::Context"* %0 to i8*
  %22 = bitcast %"class.skif::Context"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 4 %22, i64 80, i1 false) #10
  %23 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %0, i64 0, i32 1
  %24 = bitcast %"class.skif::LayerSpace"* %23 to i64*
  store i64 %11, i64* %24, align 8
  %25 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %0, i64 0, i32 1, i32 0, i32 2
  %26 = bitcast i32* %25 to i64*
  store i64 %12, i64* %26, align 8
  %27 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %0, i64 0, i32 2
  %28 = bitcast %class.SkImageFilterCache** %27 to i64*
  store i64 %15, i64* %28, align 8, !alias.scope !25
  %29 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %0, i64 0, i32 3
  store i32 %17, i32* %29, align 8, !alias.scope !25
  %30 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %0, i64 0, i32 4
  %31 = bitcast %class.SkColorSpace** %30 to i64*
  store i64 %20, i64* %31, align 8, !alias.scope !25
  %32 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %0, i64 0, i32 5, i32 0, i32 0
  %33 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %34 = load %class.SkSpecialImage*, %class.SkSpecialImage** %33, align 8, !noalias !25
  %35 = icmp eq %class.SkSpecialImage* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %3
  %37 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %34, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic, !noalias !25
  br label %39

39:                                               ; preds = %3, %36
  store %class.SkSpecialImage* %34, %class.SkSpecialImage** %32, align 8, !alias.scope !25
  %40 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %0, i64 0, i32 5, i32 1
  %41 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 1
  %42 = bitcast %"class.skif::LayerSpace.20"* %41 to i64*
  %43 = bitcast %"class.skif::LayerSpace.20"* %40 to i64*
  %44 = load i64, i64* %42, align 8, !noalias !25
  store i64 %44, i64* %43, align 8, !alias.scope !25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE1EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult.22"* noalias sret, %class.SkImageFilter_Base*, i32, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"class.skif::FilterResult.21"*
  %7 = alloca %"class.skif::Context", align 8
  %8 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %1, i64 0, i32 2, i32 1
  %9 = load %class.sk_sp*, %class.sk_sp** %8, align 8
  %10 = sext i32 %2 to i64
  %11 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 %10, i32 0
  %12 = load %class.SkImageFilter*, %class.SkImageFilter** %11, align 8
  %13 = icmp eq %class.SkImageFilter* %12, null
  br i1 %13, label %14, label %28

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.skif::FilterResult.22", %"class.skif::FilterResult.22"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 5, i32 0, i32 0
  %17 = load %class.SkSpecialImage*, %class.SkSpecialImage** %16, align 8
  %18 = icmp eq %class.SkSpecialImage* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %17, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  br label %22

22:                                               ; preds = %14, %19
  store %class.SkSpecialImage* %17, %class.SkSpecialImage** %15, align 8
  %23 = getelementptr inbounds %"class.skif::FilterResult.22", %"class.skif::FilterResult.22"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 5, i32 1
  %25 = bitcast %"class.skif::LayerSpace.20"* %24 to i64*
  %26 = bitcast %"class.skif::LayerSpace.20"* %23 to i64*
  %27 = load i64, i64* %25, align 8
  store i64 %27, i64* %26, align 8
  br label %89

28:                                               ; preds = %4
  %29 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #10
  %30 = bitcast <2 x i64>* %5 to %class.SkSpecialImage**
  %31 = bitcast %class.SkImageFilter* %12 to %class.SkImageFilter_Base*
  %32 = bitcast %"class.skif::Context"* %7 to i8*
  %33 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %32) #10
  %34 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 0
  %35 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 1
  %36 = bitcast %class.SkImageFilter_Base* %1 to { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)***
  %37 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)**, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*** %36, align 8, !noalias !28
  %38 = getelementptr inbounds { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)** %37, i64 15
  %39 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)** %38, align 8, !noalias !28
  %40 = tail call { i64, i64 } %39(%class.SkImageFilter_Base* %1, %"class.skif::Mapping"* dereferenceable(80) %34, %"class.skif::LayerSpace"* dereferenceable(16) %35, %"class.skif::LayerSpace"* dereferenceable(16) %35, i1 zeroext false) #10, !noalias !28
  %41 = extractvalue { i64, i64 } %40, 0
  %42 = extractvalue { i64, i64 } %40, 1
  %43 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 2
  %44 = bitcast %class.SkImageFilterCache** %43 to i64*
  %45 = load i64, i64* %44, align 8, !noalias !31
  %46 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 3
  %47 = load i32, i32* %46, align 8, !noalias !31
  %48 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 4
  %49 = bitcast %class.SkColorSpace** %48 to i64*
  %50 = load i64, i64* %49, align 8, !noalias !31
  %51 = bitcast %"class.skif::Context"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 4 %51, i64 80, i1 false) #10
  %52 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 1
  %53 = bitcast %"class.skif::LayerSpace"* %52 to i64*
  store i64 %41, i64* %53, align 8, !alias.scope !28
  %54 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 1, i32 0, i32 2
  %55 = bitcast i32* %54 to i64*
  store i64 %42, i64* %55, align 8, !alias.scope !28
  %56 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 2
  %57 = bitcast %class.SkImageFilterCache** %56 to i64*
  store i64 %45, i64* %57, align 8, !alias.scope !31
  %58 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 3
  store i32 %47, i32* %58, align 8, !alias.scope !31
  %59 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 4
  %60 = bitcast %class.SkColorSpace** %59 to i64*
  store i64 %50, i64* %60, align 8, !alias.scope !31
  %61 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 5, i32 0, i32 0
  %62 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 5, i32 0, i32 0
  %63 = load %class.SkSpecialImage*, %class.SkSpecialImage** %62, align 8, !noalias !31
  %64 = icmp eq %class.SkSpecialImage* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %28
  %66 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %63, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 1 monotonic, !noalias !31
  br label %68

68:                                               ; preds = %28, %65
  store %class.SkSpecialImage* %63, %class.SkSpecialImage** %61, align 8, !alias.scope !31
  %69 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 5, i32 1
  %70 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 5, i32 1
  %71 = bitcast %"class.skif::LayerSpace.20"* %70 to i64*
  %72 = bitcast %"class.skif::LayerSpace.20"* %69 to i64*
  %73 = load i64, i64* %71, align 8, !noalias !31
  store i64 %73, i64* %72, align 8, !alias.scope !31
  call void @_ZNK18SkImageFilter_Base11filterImageERKN4skif7ContextE(%"class.skif::FilterResult.21"* nonnull sret %6, %class.SkImageFilter_Base* nonnull %31, %"class.skif::Context"* nonnull dereferenceable(136) %7)
  %74 = load %class.SkSpecialImage*, %class.SkSpecialImage** %61, align 8
  %75 = icmp eq %class.SkSpecialImage* %74, null
  br i1 %75, label %86, label %76

76:                                               ; preds = %68
  %77 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %74, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %86

80:                                               ; preds = %76
  %81 = bitcast %class.SkSpecialImage* %74 to %class.SkRefCntBase*
  %82 = bitcast %class.SkSpecialImage* %74 to void (%class.SkRefCntBase*)***
  %83 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %82, align 8
  %84 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, i64 2
  %85 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %84, align 8
  call void %85(%class.SkRefCntBase* nonnull %81) #10
  br label %86

86:                                               ; preds = %80, %76, %68
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %32) #10
  %87 = load <2 x i64>, <2 x i64>* %5, align 16
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %30, align 16
  %88 = bitcast %"class.skif::FilterResult.22"* %0 to <2 x i64>*
  store <2 x i64> %87, <2 x i64>* %88, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #10
  br label %89

89:                                               ; preds = %86, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE2EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult.23"* noalias sret, %class.SkImageFilter_Base*, i32, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"class.skif::FilterResult.21"*
  %7 = alloca %"class.skif::Context", align 8
  %8 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %1, i64 0, i32 2, i32 1
  %9 = load %class.sk_sp*, %class.sk_sp** %8, align 8
  %10 = sext i32 %2 to i64
  %11 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 %10, i32 0
  %12 = load %class.SkImageFilter*, %class.SkImageFilter** %11, align 8
  %13 = icmp eq %class.SkImageFilter* %12, null
  br i1 %13, label %14, label %28

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.skif::FilterResult.23", %"class.skif::FilterResult.23"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 5, i32 0, i32 0
  %17 = load %class.SkSpecialImage*, %class.SkSpecialImage** %16, align 8
  %18 = icmp eq %class.SkSpecialImage* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %17, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  br label %22

22:                                               ; preds = %14, %19
  store %class.SkSpecialImage* %17, %class.SkSpecialImage** %15, align 8
  %23 = getelementptr inbounds %"class.skif::FilterResult.23", %"class.skif::FilterResult.23"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 5, i32 1
  %25 = bitcast %"class.skif::LayerSpace.20"* %24 to i64*
  %26 = bitcast %"class.skif::LayerSpace.20"* %23 to i64*
  %27 = load i64, i64* %25, align 8
  store i64 %27, i64* %26, align 8
  br label %89

28:                                               ; preds = %4
  %29 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #10
  %30 = bitcast <2 x i64>* %5 to %class.SkSpecialImage**
  %31 = bitcast %class.SkImageFilter* %12 to %class.SkImageFilter_Base*
  %32 = bitcast %"class.skif::Context"* %7 to i8*
  %33 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %32) #10
  %34 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 0
  %35 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 1
  %36 = bitcast %class.SkImageFilter_Base* %1 to { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)***
  %37 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)**, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*** %36, align 8, !noalias !34
  %38 = getelementptr inbounds { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)** %37, i64 15
  %39 = load { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)*, { i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)** %38, align 8, !noalias !34
  %40 = tail call { i64, i64 } %39(%class.SkImageFilter_Base* %1, %"class.skif::Mapping"* dereferenceable(80) %34, %"class.skif::LayerSpace"* dereferenceable(16) %35, %"class.skif::LayerSpace"* dereferenceable(16) %35, i1 zeroext false) #10, !noalias !34
  %41 = extractvalue { i64, i64 } %40, 0
  %42 = extractvalue { i64, i64 } %40, 1
  %43 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 2
  %44 = bitcast %class.SkImageFilterCache** %43 to i64*
  %45 = load i64, i64* %44, align 8, !noalias !37
  %46 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 3
  %47 = load i32, i32* %46, align 8, !noalias !37
  %48 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 4
  %49 = bitcast %class.SkColorSpace** %48 to i64*
  %50 = load i64, i64* %49, align 8, !noalias !37
  %51 = bitcast %"class.skif::Context"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 4 %51, i64 80, i1 false) #10
  %52 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 1
  %53 = bitcast %"class.skif::LayerSpace"* %52 to i64*
  store i64 %41, i64* %53, align 8, !alias.scope !34
  %54 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 1, i32 0, i32 2
  %55 = bitcast i32* %54 to i64*
  store i64 %42, i64* %55, align 8, !alias.scope !34
  %56 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 2
  %57 = bitcast %class.SkImageFilterCache** %56 to i64*
  store i64 %45, i64* %57, align 8, !alias.scope !37
  %58 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 3
  store i32 %47, i32* %58, align 8, !alias.scope !37
  %59 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 4
  %60 = bitcast %class.SkColorSpace** %59 to i64*
  store i64 %50, i64* %60, align 8, !alias.scope !37
  %61 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 5, i32 0, i32 0
  %62 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 5, i32 0, i32 0
  %63 = load %class.SkSpecialImage*, %class.SkSpecialImage** %62, align 8, !noalias !37
  %64 = icmp eq %class.SkSpecialImage* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %28
  %66 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %63, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 1 monotonic, !noalias !37
  br label %68

68:                                               ; preds = %28, %65
  store %class.SkSpecialImage* %63, %class.SkSpecialImage** %61, align 8, !alias.scope !37
  %69 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 5, i32 1
  %70 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %3, i64 0, i32 5, i32 1
  %71 = bitcast %"class.skif::LayerSpace.20"* %70 to i64*
  %72 = bitcast %"class.skif::LayerSpace.20"* %69 to i64*
  %73 = load i64, i64* %71, align 8, !noalias !37
  store i64 %73, i64* %72, align 8, !alias.scope !37
  call void @_ZNK18SkImageFilter_Base11filterImageERKN4skif7ContextE(%"class.skif::FilterResult.21"* nonnull sret %6, %class.SkImageFilter_Base* nonnull %31, %"class.skif::Context"* nonnull dereferenceable(136) %7)
  %74 = load %class.SkSpecialImage*, %class.SkSpecialImage** %61, align 8
  %75 = icmp eq %class.SkSpecialImage* %74, null
  br i1 %75, label %86, label %76

76:                                               ; preds = %68
  %77 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %74, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %86

80:                                               ; preds = %76
  %81 = bitcast %class.SkSpecialImage* %74 to %class.SkRefCntBase*
  %82 = bitcast %class.SkSpecialImage* %74 to void (%class.SkRefCntBase*)***
  %83 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %82, align 8
  %84 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, i64 2
  %85 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %84, align 8
  call void %85(%class.SkRefCntBase* nonnull %81) #10
  br label %86

86:                                               ; preds = %80, %76, %68
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %32) #10
  %87 = load <2 x i64>, <2 x i64>* %5, align 16
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %30, align 16
  %88 = bitcast %"class.skif::FilterResult.23"* %0 to <2 x i64>*
  store <2 x i64> %87, <2 x i64>* %88, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #10
  br label %89

89:                                               ; preds = %86, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkImageFilter_Base10DrawWithFPEP18GrRecordingContextNSt3__110unique_ptrI19GrFragmentProcessorNS2_14default_deleteIS4_EEEERK7SkIRect11SkColorTypePK12SkColorSpaceRK14SkSurfaceProps11GrProtected(%class.sk_sp.19* noalias sret, %class.GrRecordingContext*, %class.GrFragmentProcessor*, %struct.SkIRect* nocapture readonly dereferenceable(16), i32, %class.SkColorSpace*, %class.SkSurfaceProps* dereferenceable(8), i1 zeroext) local_unnamed_addr #1 align 2 {
  %9 = alloca %class.SkMatrix, align 16
  %10 = alloca { <2 x float>, <2 x float> }, align 8
  %11 = alloca %class.sk_sp.16, align 8
  %12 = alloca %class.GrImageInfo, align 8
  %13 = alloca %class.GrImageInfo, align 8
  %14 = alloca { i64, i64 }, align 8
  %15 = bitcast { i64, i64 }* %14 to %struct.SkIRect*
  %16 = alloca { <2 x float>, <2 x float> }, align 8
  %17 = bitcast { <2 x float>, <2 x float> }* %16 to %struct.SkRect*
  %18 = alloca %class.GrSurfaceProxyView, align 8
  %19 = alloca %class.sk_sp.16, align 8
  %20 = bitcast %class.GrImageInfo* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #10
  %21 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %12, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %12, i64 0, i32 0, i32 1, i32 0
  %23 = bitcast %class.GrImageInfo* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 32, i1 false)
  %24 = icmp ult i32 %4, 21
  br i1 %24, label %26, label %25

25:                                               ; preds = %8
  tail call void @llvm.trap() #10
  unreachable

26:                                               ; preds = %8
  %27 = sext i32 %4 to i64
  %28 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZN18SkImageFilter_Base10DrawWithFPEP18GrRecordingContextNSt3__110unique_ptrI19GrFragmentProcessorNS2_14default_deleteIS4_EEEERK7SkIRect11SkColorTypePK12SkColorSpaceRK14SkSurfaceProps11GrProtected, i64 0, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq %class.SkColorSpace* %5, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 1 monotonic, !noalias !40
  br label %34

34:                                               ; preds = %26, %31
  %35 = ptrtoint %class.SkColorSpace* %5 to i64
  %36 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = sub i32 %37, %39
  %41 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = sub i32 %42, %44
  %46 = zext i32 %45 to i64
  %47 = shl nuw i64 %46, 32
  %48 = zext i32 %40 to i64
  %49 = or i64 %47, %48
  %50 = bitcast %class.sk_sp.16* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  %51 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %12, i64 0, i32 0
  %52 = bitcast %class.sk_sp.16* %11 to i64*
  store i64 %35, i64* %52, align 8
  call void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo* nonnull %51, i32 %29, i32 2, %class.sk_sp.16* nonnull %11) #10
  %53 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %11, i64 0, i32 0
  %54 = load %class.SkColorSpace*, %class.SkColorSpace** %53, align 8
  %55 = icmp eq %class.SkColorSpace* %54, null
  br i1 %55, label %62, label %56

56:                                               ; preds = %34
  %57 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  %61 = bitcast %class.SkColorSpace* %54 to i8*
  call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %60, %56, %34
  %63 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %12, i64 0, i32 1
  %64 = bitcast %struct.SkISize* %63 to i64*
  store i64 %49, i64* %64, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  %65 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %13, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* nonnull %65, %class.GrColorInfo* nonnull dereferenceable(24) %51) #10
  %66 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %13, i64 0, i32 1
  %67 = bitcast %struct.SkISize* %66 to i64*
  %68 = load i64, i64* %64, align 8
  store i64 %68, i64* %67, align 8
  %69 = call %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext* %1, %class.GrImageInfo* nonnull %13, i32 0, i32 1, i1 zeroext false, i1 zeroext %7, i32 1, i1 zeroext true) #10
  %70 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %13, i64 0, i32 0, i32 1, i32 0
  %71 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %70, align 8
  %72 = icmp eq %class.GrColorSpaceXform* %71, null
  br i1 %72, label %83, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %71, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 -1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %83

77:                                               ; preds = %73
  %78 = bitcast %class.GrColorSpaceXform* %71 to %class.SkRefCntBase*
  %79 = bitcast %class.GrColorSpaceXform* %71 to void (%class.SkRefCntBase*)***
  %80 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %79, align 8
  %81 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %80, i64 2
  %82 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %81, align 8
  call void %82(%class.SkRefCntBase* nonnull %78) #10
  br label %83

83:                                               ; preds = %77, %73, %62
  %84 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %13, i64 0, i32 0, i32 0, i32 0
  %85 = load %class.SkColorSpace*, %class.SkColorSpace** %84, align 8
  %86 = icmp eq %class.SkColorSpace* %85, null
  br i1 %86, label %93, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %93

91:                                               ; preds = %87
  %92 = bitcast %class.SkColorSpace* %85 to i8*
  call void @_ZdlPv(i8* %92) #12
  br label %93

93:                                               ; preds = %83, %87, %91
  %94 = icmp eq %class.GrSurfaceFillContext* %69, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %93
  %96 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %96, align 8
  br label %190

97:                                               ; preds = %93
  %98 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #10
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  %100 = load i32, i32* %36, align 4
  %101 = load i32, i32* %38, align 4
  %102 = sub i32 %100, %101
  %103 = load i32, i32* %41, align 4
  %104 = load i32, i32* %43, align 4
  %105 = sub i32 %103, %104
  %106 = zext i32 %105 to i64
  %107 = shl nuw i64 %106, 32
  %108 = zext i32 %102 to i64
  %109 = or i64 %107, %108
  %110 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  store i64 0, i64* %110, align 8
  store i64 %109, i64* %99, align 8
  %111 = bitcast { <2 x float>, <2 x float> }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #10
  %112 = sitofp i32 %101 to float
  %113 = insertelement <2 x float> undef, float %112, i32 0
  %114 = sitofp i32 %104 to float
  %115 = insertelement <2 x float> %113, float %114, i32 1
  %116 = sitofp i32 %100 to float
  %117 = insertelement <2 x float> undef, float %116, i32 0
  %118 = sitofp i32 %103 to float
  %119 = insertelement <2 x float> %117, float %118, i32 1
  %120 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 0
  store <2 x float> %115, <2 x float>* %120, align 8
  %121 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 1
  store <2 x float> %119, <2 x float>* %121, align 8
  %122 = bitcast { <2 x float>, <2 x float> }* %10 to %struct.SkRect*
  %123 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %123) #10
  %124 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 1
  %125 = bitcast { <2 x float>, <2 x float> }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %125) #10
  %126 = sitofp i32 %102 to float
  %127 = insertelement <2 x float> undef, float %126, i32 0
  %128 = sitofp i32 %105 to float
  %129 = insertelement <2 x float> %127, float %128, i32 1
  %130 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %130, align 8
  %131 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 1
  store <2 x float> %129, <2 x float>* %131, align 8
  %132 = bitcast %class.SkMatrix* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %132, align 16, !alias.scope !43
  %133 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 4
  %134 = bitcast float* %133 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %134, align 16, !alias.scope !43
  %135 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %135, align 16, !alias.scope !43
  store i32 16, i32* %124, align 4, !alias.scope !43
  %136 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %9, %struct.SkRect* nonnull dereferenceable(16) %122, %struct.SkRect* nonnull dereferenceable(16) %17, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125) #10
  %137 = call %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* nonnull dereferenceable(40) %9, %class.GrFragmentProcessor* %2) #10
  call void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext* nonnull %69, %struct.SkIRect* nonnull dereferenceable(16) %15, %class.GrFragmentProcessor* %137) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %123) #10
  %138 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 0, i32 0
  %139 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %69, i64 0, i32 0, i32 2, i32 0, i32 0
  %140 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %139, align 8, !noalias !48
  %141 = icmp eq %class.GrSurfaceProxy* %140, null
  br i1 %141, label %145, label %142

142:                                              ; preds = %97
  %143 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %140, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = atomicrmw add i32* %143, i32 1 monotonic, !noalias !48
  br label %145

145:                                              ; preds = %97, %142
  store %class.GrSurfaceProxy* %140, %class.GrSurfaceProxy** %138, align 8, !alias.scope !48
  %146 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 1
  %147 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %69, i64 0, i32 0, i32 2, i32 1
  %148 = load i32, i32* %147, align 8, !noalias !48
  store i32 %148, i32* %146, align 8, !alias.scope !48
  %149 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 2, i32 0
  %150 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %69, i64 0, i32 0, i32 2, i32 2, i32 0
  %151 = load i16, i16* %150, align 2, !noalias !48
  store i16 %151, i16* %149, align 4, !alias.scope !48
  %152 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %69, i64 0, i32 0, i32 3, i32 2
  %153 = load i32, i32* %152, align 8
  %154 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %19, i64 0, i32 0
  %155 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %69, i64 0, i32 0, i32 3, i32 0, i32 0
  %156 = load %class.SkColorSpace*, %class.SkColorSpace** %155, align 8, !noalias !51
  %157 = icmp eq %class.SkColorSpace* %156, null
  br i1 %157, label %161, label %158

158:                                              ; preds = %145
  %159 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %156, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = atomicrmw add i32* %159, i32 1 monotonic, !noalias !51
  br label %161

161:                                              ; preds = %145, %158
  store %class.SkColorSpace* %156, %class.SkColorSpace** %154, align 8, !alias.scope !51
  call void @_ZN14SkSpecialImage19MakeDeferredFromGpuEP18GrRecordingContextRK7SkIRectj18GrSurfaceProxyView11GrColorType5sk_spI12SkColorSpaceERK14SkSurfaceProps11SkAlphaType(%class.sk_sp.19* sret %0, %class.GrRecordingContext* %1, %struct.SkIRect* nonnull dereferenceable(16) %15, i32 0, %class.GrSurfaceProxyView* nonnull %18, i32 %153, %class.sk_sp.16* nonnull %19, %class.SkSurfaceProps* dereferenceable(8) %6, i32 2) #10
  %162 = load %class.SkColorSpace*, %class.SkColorSpace** %154, align 8
  %163 = icmp eq %class.SkColorSpace* %162, null
  br i1 %163, label %170, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = atomicrmw add i32* %165, i32 -1 acq_rel
  %167 = icmp eq i32 %166, 1
  br i1 %167, label %168, label %170

168:                                              ; preds = %164
  %169 = bitcast %class.SkColorSpace* %162 to i8*
  call void @_ZdlPv(i8* %169) #12
  br label %170

170:                                              ; preds = %161, %164, %168
  %171 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %138, align 8
  %172 = icmp eq %class.GrSurfaceProxy* %171, null
  br i1 %172, label %185, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %171, i64 0, i32 1
  %175 = getelementptr inbounds %class.SkNVRefCnt.86, %class.SkNVRefCnt.86* %174, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = atomicrmw add i32* %175, i32 -1 acq_rel
  %177 = icmp eq i32 %176, 1
  br i1 %177, label %178, label %185

178:                                              ; preds = %173
  %179 = getelementptr inbounds %class.SkNVRefCnt.86, %class.SkNVRefCnt.86* %174, i64 -2
  %180 = bitcast %class.SkNVRefCnt.86* %179 to %class.GrSurfaceProxy*
  %181 = bitcast %class.SkNVRefCnt.86* %179 to void (%class.GrSurfaceProxy*)***
  %182 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %181, align 8
  %183 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %182, i64 1
  %184 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %183, align 8
  call void %184(%class.GrSurfaceProxy* nonnull %180) #10
  br label %185

185:                                              ; preds = %170, %173, %178
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #10
  %186 = bitcast %class.GrSurfaceFillContext* %69 to void (%class.GrSurfaceFillContext*)***
  %187 = load void (%class.GrSurfaceFillContext*)**, void (%class.GrSurfaceFillContext*)*** %186, align 8
  %188 = getelementptr inbounds void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %187, i64 1
  %189 = load void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %188, align 8
  call void %189(%class.GrSurfaceFillContext* nonnull %69) #10
  br label %190

190:                                              ; preds = %95, %185
  %191 = phi %class.GrFragmentProcessor* [ %2, %95 ], [ null, %185 ]
  %192 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %22, align 8
  %193 = icmp eq %class.GrColorSpaceXform* %192, null
  br i1 %193, label %204, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %192, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = atomicrmw add i32* %195, i32 -1 acq_rel
  %197 = icmp eq i32 %196, 1
  br i1 %197, label %198, label %204

198:                                              ; preds = %194
  %199 = bitcast %class.GrColorSpaceXform* %192 to %class.SkRefCntBase*
  %200 = bitcast %class.GrColorSpaceXform* %192 to void (%class.SkRefCntBase*)***
  %201 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %200, align 8
  %202 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %201, i64 2
  %203 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %202, align 8
  call void %203(%class.SkRefCntBase* nonnull %199) #10
  br label %204

204:                                              ; preds = %198, %194, %190
  %205 = load %class.SkColorSpace*, %class.SkColorSpace** %21, align 8
  %206 = icmp eq %class.SkColorSpace* %205, null
  br i1 %206, label %213, label %207

207:                                              ; preds = %204
  %208 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %205, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = atomicrmw add i32* %208, i32 -1 acq_rel
  %210 = icmp eq i32 %209, 1
  br i1 %210, label %211, label %213

211:                                              ; preds = %207
  %212 = bitcast %class.SkColorSpace* %205 to i8*
  call void @_ZdlPv(i8* %212) #12
  br label %213

213:                                              ; preds = %204, %207, %211
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #10
  %214 = icmp eq %class.GrFragmentProcessor* %191, null
  br i1 %214, label %220, label %215

215:                                              ; preds = %213
  %216 = bitcast %class.GrFragmentProcessor* %191 to void (%class.GrFragmentProcessor*)***
  %217 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %216, align 8
  %218 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %217, i64 1
  %219 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %218, align 8
  call void %219(%class.GrFragmentProcessor* nonnull %191) #10
  br label %220

220:                                              ; preds = %213, %215
  ret void
}

declare %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext*, %class.GrImageInfo*, i32, i32, i1 zeroext, i1 zeroext, i32, i1 zeroext) local_unnamed_addr #3

declare void @_ZN14SkSpecialImage19MakeDeferredFromGpuEP18GrRecordingContextRK7SkIRectj18GrSurfaceProxyView11GrColorType5sk_spI12SkColorSpaceERK14SkSurfaceProps11SkAlphaType(%class.sk_sp.19* sret, %class.GrRecordingContext*, %struct.SkIRect* dereferenceable(16), i32, %class.GrSurfaceProxyView*, i32, %class.sk_sp.16*, %class.SkSurfaceProps* dereferenceable(8), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkImageFilter_Base17ImageToColorSpaceEP14SkSpecialImage11SkColorTypeP12SkColorSpaceRK14SkSurfaceProps(%class.sk_sp.19* noalias sret, %class.SkSpecialImage*, i32, %class.SkColorSpace*, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %6 = alloca %class.sk_sp.202, align 8
  %7 = alloca %class.sk_sp.210, align 8
  %8 = alloca i64, align 8
  %9 = alloca %class.SkPaint, align 8
  %10 = alloca %struct.SkSamplingOptions, align 4
  %11 = bitcast %class.sk_sp.202* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %class.sk_sp.202, %class.sk_sp.202* %6, i64 0, i32 0
  store %class.GrColorSpaceXform* inttoptr (i64 -6148914691236517206 to %class.GrColorSpaceXform*), %class.GrColorSpaceXform** %12, align 8
  %13 = tail call %class.SkColorSpace* @_ZNK14SkSpecialImage13getColorSpaceEv(%class.SkSpecialImage* %1) #10
  %14 = bitcast %class.SkSpecialImage* %1 to i32 (%class.SkSpecialImage*)***
  %15 = load i32 (%class.SkSpecialImage*)**, i32 (%class.SkSpecialImage*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %15, i64 3
  %17 = load i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %16, align 8
  %18 = tail call i32 %17(%class.SkSpecialImage* %1) #10
  call void @_ZN17GrColorSpaceXform4MakeEP12SkColorSpace11SkAlphaTypeS1_S2_(%class.sk_sp.202* nonnull sret %6, %class.SkColorSpace* %13, i32 %18, %class.SkColorSpace* %3, i32 2) #10
  %19 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %12, align 8
  %20 = icmp eq %class.GrColorSpaceXform* %19, null
  br i1 %20, label %21, label %28

21:                                               ; preds = %5
  %22 = icmp eq %class.SkSpecialImage* %1, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic, !noalias !54
  br label %26

26:                                               ; preds = %23, %21
  %27 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %0, i64 0, i32 0
  store %class.SkSpecialImage* %1, %class.SkSpecialImage** %27, align 8, !alias.scope !54
  br label %90

28:                                               ; preds = %5
  %29 = bitcast i64* %8 to %struct.SkISize*
  %30 = bitcast %class.sk_sp.210* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  %31 = getelementptr inbounds %class.sk_sp.210, %class.sk_sp.210* %7, i64 0, i32 0
  store %class.SkSpecialSurface* inttoptr (i64 -6148914691236517206 to %class.SkSpecialSurface*), %class.SkSpecialSurface** %31, align 8
  %32 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  %33 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %1, i64 0, i32 2, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %1, i64 0, i32 2, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = sub i32 %34, %36
  %38 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %1, i64 0, i32 2, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %1, i64 0, i32 2, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = sub i32 %39, %41
  %43 = zext i32 %42 to i64
  %44 = shl nuw i64 %43, 32
  %45 = zext i32 %37 to i64
  %46 = or i64 %44, %45
  store i64 %46, i64* %8, align 8
  call void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.210* nonnull sret %7, %class.SkSpecialImage* %1, i32 %2, %class.SkColorSpace* %3, %struct.SkISize* nonnull dereferenceable(8) %29, i32 2, %class.SkSurfaceProps* dereferenceable(8) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  %47 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %31, align 8
  %48 = icmp eq %class.SkSpecialSurface* %47, null
  br i1 %48, label %49, label %56

49:                                               ; preds = %28
  %50 = icmp eq %class.SkSpecialImage* %1, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 1 monotonic, !noalias !57
  br label %54

54:                                               ; preds = %51, %49
  %55 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %0, i64 0, i32 0
  store %class.SkSpecialImage* %1, %class.SkSpecialImage** %55, align 8, !alias.scope !57
  br label %77

56:                                               ; preds = %28
  %57 = call %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface* nonnull %47) #10
  %58 = bitcast %class.SkPaint* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %58) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* align 8 bitcast (%class.SkPaint* @__const._ZN18SkImageFilter_Base17ImageToColorSpaceEP14SkSpecialImage11SkColorTypeP12SkColorSpaceRK14SkSurfaceProps.p to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %9) #10
  %59 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %9, i64 0, i32 8, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, -261121
  %62 = or i32 %61, 1024
  store i32 %62, i32* %59, align 8
  %63 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %63) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %63, i8 0, i64 20, i1 false)
  call void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage* %1, %class.SkCanvas* %57, float 0.000000e+00, float 0.000000e+00, %struct.SkSamplingOptions* nonnull dereferenceable(20) %10, %class.SkPaint* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %63) #10
  %64 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %31, align 8
  call void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.19* sret %0, %class.SkSpecialSurface* %64) #10
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %58) #10
  %65 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %31, align 8
  %66 = bitcast %class.SkSpecialSurface* %65 to %class.SkRefCntBase*
  %67 = icmp eq %class.SkSpecialSurface* %65, null
  br i1 %67, label %77, label %68

68:                                               ; preds = %56
  %69 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %65, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %77

72:                                               ; preds = %68
  %73 = bitcast %class.SkSpecialSurface* %65 to void (%class.SkRefCntBase*)***
  %74 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %73, align 8
  %75 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, i64 2
  %76 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, align 8
  call void %76(%class.SkRefCntBase* nonnull %66) #10
  br label %77

77:                                               ; preds = %72, %68, %56, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  %78 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %12, align 8
  %79 = bitcast %class.GrColorSpaceXform* %78 to %class.SkRefCntBase*
  %80 = icmp eq %class.GrColorSpaceXform* %78, null
  br i1 %80, label %90, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %78, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 -1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %90

85:                                               ; preds = %81
  %86 = bitcast %class.GrColorSpaceXform* %78 to void (%class.SkRefCntBase*)***
  %87 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %86, align 8
  %88 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %87, i64 2
  %89 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, align 8
  call void %89(%class.SkRefCntBase* nonnull %79) #10
  br label %90

90:                                               ; preds = %26, %77, %81, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  ret void
}

declare void @_ZN17GrColorSpaceXform4MakeEP12SkColorSpace11SkAlphaTypeS1_S2_(%class.sk_sp.202* sret, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) local_unnamed_addr #3

declare %class.SkColorSpace* @_ZNK14SkSpecialImage13getColorSpaceEv(%class.SkSpecialImage*) local_unnamed_addr #3

declare void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.210* sret, %class.SkSpecialImage*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #3

declare %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface*) local_unnamed_addr #3

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #3

declare void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.19* sret, %class.SkSpecialSurface*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN18SkImageFilter_Base25DetermineRepeatedSrcBoundERK7SkIRectRK8SkIPointRK7SkISizeS2_(%struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkIPoint* nocapture readonly dereferenceable(8), %struct.SkISize* nocapture readonly dereferenceable(8), %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %5 = bitcast %struct.SkIRect* %0 to i64*
  %6 = load i64, i64* %5, align 4
  %7 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 2
  %8 = bitcast i32* %7 to i64*
  %9 = load i64, i64* %8, align 4
  %10 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = sub nsw i32 0, %11
  %13 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sub nsw i32 0, %14
  %16 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %2, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = sub nsw i32 %17, %11
  %19 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %2, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %20, %14
  %22 = shl i64 %6, 32
  %23 = ashr exact i64 %22, 32
  %24 = sext i32 %12 to i64
  %25 = add nsw i64 %23, %24
  %26 = icmp slt i64 %25, 2147483647
  %27 = select i1 %26, i64 %25, i64 2147483647
  %28 = icmp sgt i64 %27, -2147483647
  %29 = select i1 %28, i64 %27, i64 -2147483647
  %30 = trunc i64 %29 to i32
  %31 = ashr i64 %6, 32
  %32 = sext i32 %15 to i64
  %33 = add nsw i64 %31, %32
  %34 = icmp slt i64 %33, 2147483647
  %35 = select i1 %34, i64 %33, i64 2147483647
  %36 = icmp sgt i64 %35, -2147483647
  %37 = select i1 %36, i64 %35, i64 -2147483647
  %38 = trunc i64 %37 to i32
  %39 = shl i64 %9, 32
  %40 = ashr exact i64 %39, 32
  %41 = sext i32 %18 to i64
  %42 = add nsw i64 %40, %41
  %43 = icmp slt i64 %42, 2147483647
  %44 = select i1 %43, i64 %42, i64 2147483647
  %45 = icmp sgt i64 %44, -2147483647
  %46 = select i1 %45, i64 %44, i64 -2147483647
  %47 = ashr i64 %9, 32
  %48 = sext i32 %21 to i64
  %49 = add nsw i64 %47, %48
  %50 = icmp slt i64 %49, 2147483647
  %51 = select i1 %50, i64 %49, i64 2147483647
  %52 = icmp sgt i64 %51, -2147483647
  %53 = select i1 %52, i64 %51, i64 -2147483647
  %54 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp sgt i32 %55, %30
  br i1 %56, label %57, label %60

57:                                               ; preds = %4
  %58 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %59 = load i32, i32* %58, align 4
  br label %66

60:                                               ; preds = %4
  %61 = and i64 %46, 4294967295
  %62 = trunc i64 %46 to i32
  %63 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = icmp slt i32 %64, %62
  br i1 %65, label %66, label %69

66:                                               ; preds = %57, %60
  %67 = phi i32 [ %59, %57 ], [ %64, %60 ]
  %68 = zext i32 %67 to i64
  br label %69

69:                                               ; preds = %66, %60
  %70 = phi i32 [ %55, %66 ], [ %30, %60 ]
  %71 = phi i64 [ %68, %66 ], [ %61, %60 ]
  %72 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = icmp sgt i32 %73, %38
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %77 = load i32, i32* %76, align 4
  br label %83

78:                                               ; preds = %69
  %79 = trunc i64 %53 to i32
  %80 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = icmp slt i32 %81, %79
  br i1 %82, label %83, label %86

83:                                               ; preds = %75, %78
  %84 = phi i32 [ %77, %75 ], [ %81, %78 ]
  %85 = zext i32 %84 to i64
  br label %86

86:                                               ; preds = %83, %78
  %87 = phi i32 [ %73, %83 ], [ %38, %78 ]
  %88 = phi i64 [ %85, %83 ], [ %53, %78 ]
  %89 = shl i64 %88, 32
  %90 = or i64 %89, %71
  %91 = zext i32 %87 to i64
  %92 = shl nuw i64 %91, 32
  %93 = zext i32 %70 to i64
  %94 = or i64 %92, %93
  %95 = insertvalue { i64, i64 } undef, i64 %94, 0
  %96 = insertvalue { i64, i64 } %95, i64 %90, 1
  ret { i64, i64 } %96
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkImageFilter_Base10PurgeCacheEv() local_unnamed_addr #1 align 2 {
  %1 = tail call %class.SkImageFilterCache* @_ZN18SkImageFilterCache3GetEv() #10
  %2 = bitcast %class.SkImageFilterCache* %1 to void (%class.SkImageFilterCache*)***
  %3 = load void (%class.SkImageFilterCache*)**, void (%class.SkImageFilterCache*)*** %2, align 8
  %4 = getelementptr inbounds void (%class.SkImageFilterCache*)*, void (%class.SkImageFilterCache*)** %3, i64 5
  %5 = load void (%class.SkImageFilterCache*)*, void (%class.SkImageFilterCache*)** %4, align 8
  tail call void %5(%class.SkImageFilterCache* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18SkImageFilter_Base8applyCTMERK8SkMatrixPS0_(%class.sk_sp* noalias sret, %class.SkImageFilter_Base*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix*) local_unnamed_addr #1 align 2 {
  %5 = alloca %class.SkMatrix, align 16
  %6 = alloca %struct.SkSize, align 4
  %7 = alloca %struct.SkSamplingOptions, align 4
  %8 = alloca %class.sk_sp, align 8
  %9 = icmp eq %class.SkImageFilter_Base* %1, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic, !noalias !60
  br label %13

13:                                               ; preds = %4, %10
  %14 = ptrtoint %class.SkImageFilter_Base* %1 to i64
  %15 = bitcast %class.sk_sp* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 4, !noalias !65
  %18 = trunc i32 %17 to i8
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %2) #10
  %22 = zext i8 %21 to i32
  store i32 %22, i32* %16, align 4, !noalias !65
  br label %23

23:                                               ; preds = %20, %13
  %24 = phi i32 [ %22, %20 ], [ %17, %13 ]
  %25 = and i32 %24, 12
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = tail call zeroext i1 @_ZNK18SkImageFilter_Base19canHandleComplexCTMEv(%class.SkImageFilter_Base* %1) #10, !noalias !65
  br i1 %28, label %29, label %33

29:                                               ; preds = %23, %27
  %30 = bitcast %class.SkMatrix* %3 to i8*
  %31 = bitcast %class.SkMatrix* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 4 %31, i64 40, i1 false) #10, !noalias !65
  %32 = bitcast %class.sk_sp* %0 to i64*
  store i64 %14, i64* %32, align 8, !alias.scope !65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  br label %113

33:                                               ; preds = %27
  %34 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %34) #10, !noalias !65
  %35 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %36 = bitcast %class.SkMatrix* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %36, align 16, !noalias !65
  %37 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %38 = bitcast float* %37 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %38, align 16, !noalias !65
  %39 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %39, align 16, !noalias !65
  store i32 16, i32* %35, align 4, !noalias !65
  %40 = bitcast %struct.SkSize* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10, !noalias !65
  %41 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %6, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %41, align 4, !noalias !65
  %42 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %6, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %42, align 4, !noalias !65
  %43 = call zeroext i1 @_ZNK8SkMatrix14decomposeScaleEP6SkSizePS_(%class.SkMatrix* %2, %struct.SkSize* nonnull %6, %class.SkMatrix* nonnull %5) #10, !noalias !65
  br i1 %43, label %44, label %56

44:                                               ; preds = %33
  %45 = load float, float* %41, align 4, !noalias !65
  %46 = load float, float* %42, align 4, !noalias !65
  %47 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* %3, float %45, float %46) #10
  %48 = load float, float* %41, align 4, !noalias !65
  %49 = load float, float* %42, align 4, !noalias !65
  %50 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix* nonnull %5, float %48, float %49) #10
  %51 = load float, float* %41, align 4, !noalias !65
  %52 = fdiv float 1.000000e+00, %51
  %53 = load float, float* %42, align 4, !noalias !65
  %54 = fdiv float 1.000000e+00, %53
  %55 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix* nonnull %5, float %52, float %54) #10
  br label %74

56:                                               ; preds = %33
  %57 = load i32, i32* %16, align 4, !noalias !65
  %58 = and i32 %57, 192
  %59 = icmp eq i32 %58, 128
  br i1 %59, label %60, label %63

60:                                               ; preds = %56
  %61 = call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %2) #10
  %62 = zext i8 %61 to i32
  store i32 %62, i32* %16, align 4, !noalias !65
  br label %63

63:                                               ; preds = %60, %56
  %64 = phi i32 [ %62, %60 ], [ %57, %56 ]
  %65 = and i32 %64, 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %71, label %67

67:                                               ; preds = %63
  %68 = bitcast %class.SkMatrix* %3 to i8*
  %69 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %69, i64 40, i1 false) #10, !noalias !65
  %70 = bitcast %class.sk_sp* %0 to i64*
  store i64 %14, i64* %70, align 8, !alias.scope !65
  br label %100

71:                                               ; preds = %63
  %72 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %34, i8* align 4 %72, i64 40, i1 false) #10, !noalias !65
  %73 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* %3) #10
  br label %74

74:                                               ; preds = %71, %44
  %75 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %75) #10, !noalias !65
  store i8 0, i8* %75, align 4, !noalias !65
  %76 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %76, align 4, !noalias !65
  %77 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %77, align 4, !noalias !65
  %78 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 2
  store i32 1, i32* %78, align 4, !noalias !65
  %79 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 3
  store i32 0, i32* %79, align 4, !noalias !65
  %80 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  br i1 %9, label %84, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 1 monotonic
  br label %84

84:                                               ; preds = %81, %74
  %85 = bitcast %class.sk_sp* %8 to %class.SkImageFilter_Base**
  store %class.SkImageFilter_Base* %1, %class.SkImageFilter_Base** %85, align 8, !noalias !65
  call void @_ZN19SkMatrixImageFilter4MakeERK8SkMatrixRK17SkSamplingOptions5sk_spI13SkImageFilterE(%class.sk_sp* sret %0, %class.SkMatrix* nonnull dereferenceable(40) %5, %struct.SkSamplingOptions* nonnull dereferenceable(20) %7, %class.sk_sp* nonnull %8) #10
  %86 = load %class.SkImageFilter*, %class.SkImageFilter** %80, align 8, !noalias !65
  %87 = icmp eq %class.SkImageFilter* %86, null
  br i1 %87, label %98, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %86, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 -1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  %93 = bitcast %class.SkImageFilter* %86 to %class.SkRefCntBase*
  %94 = bitcast %class.SkImageFilter* %86 to void (%class.SkRefCntBase*)***
  %95 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %94, align 8
  %96 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, i64 2
  %97 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %96, align 8
  call void %97(%class.SkRefCntBase* nonnull %93) #10
  br label %98

98:                                               ; preds = %92, %88, %84
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %75) #10, !noalias !65
  %99 = bitcast %class.SkImageFilter_Base* %1 to %class.SkImageFilter*
  br label %100

100:                                              ; preds = %67, %98
  %101 = phi %class.SkImageFilter* [ %99, %98 ], [ null, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10, !noalias !65
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %34) #10, !noalias !65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  %102 = icmp eq %class.SkImageFilter* %101, null
  br i1 %102, label %113, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %101, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = atomicrmw add i32* %104, i32 -1 acq_rel
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %107, label %113

107:                                              ; preds = %103
  %108 = bitcast %class.SkImageFilter* %101 to %class.SkRefCntBase*
  %109 = bitcast %class.SkImageFilter* %101 to void (%class.SkRefCntBase*)***
  %110 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %109, align 8
  %111 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %110, i64 2
  %112 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %111, align 8
  call void %112(%class.SkRefCntBase* nonnull %108) #10
  br label %113

113:                                              ; preds = %29, %100, %103, %107
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkImageFilterD0Ev(%class.SkImageFilter*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #1 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #10
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13SkFlattenable7flattenER13SkWriteBuffer(%class.SkFlattenable*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkImageFilter18getFlattenableTypeEv(%class.SkImageFilter*) unnamed_addr #1 comdat align 2 {
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter_Base*, %class.SkColorFilter**) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv(%class.SkImageFilter_Base*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv(%class.SkImageFilter_Base*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK13SkColorFilter11filterColorEj(%class.SkColorFilter*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #3

declare %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer*, i32) local_unnamed_addr #3

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #3

declare zeroext i1 @_ZNK14SkSpecialImage15isTextureBackedEv(%class.SkSpecialImage*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #3

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #3

declare void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo*, i32, i32, %class.sk_sp.16*) unnamed_addr #3

declare void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo*, %class.GrColorInfo* dereferenceable(24)) unnamed_addr #3

declare zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* dereferenceable(40), %class.GrFragmentProcessor*) local_unnamed_addr #3

declare void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext*, %struct.SkIRect* dereferenceable(16), %class.GrFragmentProcessor*) local_unnamed_addr #3

declare zeroext i1 @_ZNK8SkMatrix14decomposeScaleEP6SkSizePS_(%class.SkMatrix*, %struct.SkSize*, %class.SkMatrix*) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #3

declare void @_ZN19SkMatrixImageFilter4MakeERK8SkMatrixRK17SkSamplingOptions5sk_spI13SkImageFilterE(%class.sk_sp* sret, %class.SkMatrix* dereferenceable(40), %struct.SkSamplingOptions* dereferenceable(20), %class.sk_sp*) local_unnamed_addr #3

declare zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZN4skif7Mapping3mapI6SkRectEET_RKS3_RK8SkMatrix(%struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI5sk_spI13SkImageFilterELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %65

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %65, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #10
  %45 = load i64, i64* %4, align 8
  %46 = shl i64 %45, 2
  %47 = and i64 %46, 17179869176
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %35
  %50 = bitcast %class.SkTArray* %0 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %51, i64 %47, i1 false) #10
  %52 = load i64, i64* %4, align 8
  br label %53

53:                                               ; preds = %35, %49
  %54 = phi i64 [ %45, %35 ], [ %52, %49 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  %57 = bitcast %class.SkTArray* %0 to i8**
  br i1 %56, label %61, label %58

58:                                               ; preds = %53
  %59 = load i8*, i8** %57, align 8
  tail call void @_Z7sk_freePv(i8* %59) #10
  %60 = load i64, i64* %4, align 8
  br label %61

61:                                               ; preds = %53, %58
  %62 = phi i64 [ %60, %58 ], [ %54, %53 ]
  store i8* %44, i8** %57, align 8
  %63 = and i64 %62, -4294967298
  %64 = or i64 %63, 1
  store i64 %64, i64* %4, align 8
  br label %65

65:                                               ; preds = %61, %32, %21
  ret void
}

declare { i64, i64 } @_ZN4skif7Mapping3mapI7SkIRectEET_RKS3_RK8SkMatrix(%struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #3

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_Z9sk_ref_spI13SkImageFilterE5sk_spIT_EPS2_: argument 0"}
!4 = distinct !{!4, !"_Z9sk_ref_spI13SkImageFilterE5sk_spIT_EPS2_"}
!5 = distinct !{!5, !6, !"_ZNK13SkImageFilter5refMeEv: argument 0"}
!6 = distinct !{!6, !"_ZNK13SkImageFilter5refMeEv"}
!7 = !{i8 0, i8 2}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN12SkReadBuffer15readFlattenableI13SkImageFilterEE5sk_spIT_Ev: argument 0"}
!10 = distinct !{!10, !"_ZN12SkReadBuffer15readFlattenableI13SkImageFilterEE5sk_spIT_Ev"}
!11 = distinct !{!11, !12, !"_ZN12SkReadBuffer15readImageFilterEv: argument 0"}
!12 = distinct !{!12, !"_ZN12SkReadBuffer15readImageFilterEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZL9pad_imageP14SkSpecialImageRKN4skif7ContextEiiii: argument 0"}
!15 = distinct !{!15, !"_ZL9pad_imageP14SkSpecialImageRKN4skif7ContextEiiii"}
!16 = !{!17, !14}
!17 = distinct !{!17, !18, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps: argument 0"}
!18 = distinct !{!18, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK18SkImageFilter_Base10mapContextERKN4skif7ContextE: argument 0"}
!21 = distinct !{!21, !"_ZNK18SkImageFilter_Base10mapContextERKN4skif7ContextE"}
!22 = !{!23, !20}
!23 = distinct !{!23, !24, !"_ZNK4skif7Context20withNewDesiredOutputERKNS_10LayerSpaceI7SkIRectEE: argument 0"}
!24 = distinct !{!24, !"_ZNK4skif7Context20withNewDesiredOutputERKNS_10LayerSpaceI7SkIRectEE"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK4skif7Context20withNewDesiredOutputERKNS_10LayerSpaceI7SkIRectEE: argument 0"}
!27 = distinct !{!27, !"_ZNK4skif7Context20withNewDesiredOutputERKNS_10LayerSpaceI7SkIRectEE"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK18SkImageFilter_Base10mapContextERKN4skif7ContextE: argument 0"}
!30 = distinct !{!30, !"_ZNK18SkImageFilter_Base10mapContextERKN4skif7ContextE"}
!31 = !{!32, !29}
!32 = distinct !{!32, !33, !"_ZNK4skif7Context20withNewDesiredOutputERKNS_10LayerSpaceI7SkIRectEE: argument 0"}
!33 = distinct !{!33, !"_ZNK4skif7Context20withNewDesiredOutputERKNS_10LayerSpaceI7SkIRectEE"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK18SkImageFilter_Base10mapContextERKN4skif7ContextE: argument 0"}
!36 = distinct !{!36, !"_ZNK18SkImageFilter_Base10mapContextERKN4skif7ContextE"}
!37 = !{!38, !35}
!38 = distinct !{!38, !39, !"_ZNK4skif7Context20withNewDesiredOutputERKNS_10LayerSpaceI7SkIRectEE: argument 0"}
!39 = distinct !{!39, !"_ZNK4skif7Context20withNewDesiredOutputERKNS_10LayerSpaceI7SkIRectEE"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPKS2_: argument 0"}
!42 = distinct !{!42, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPKS2_"}
!43 = !{!44, !46}
!44 = distinct !{!44, !45, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!45 = distinct !{!45, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!46 = distinct !{!46, !47, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!47 = distinct !{!47, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!50 = distinct !{!50, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNK11GrColorInfo13refColorSpaceEv: argument 0"}
!53 = distinct !{!53, !"_ZNK11GrColorInfo13refColorSpaceEv"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_Z9sk_ref_spI14SkSpecialImageE5sk_spIT_EPS2_: argument 0"}
!56 = distinct !{!56, !"_Z9sk_ref_spI14SkSpecialImageE5sk_spIT_EPS2_"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_Z9sk_ref_spI14SkSpecialImageE5sk_spIT_EPS2_: argument 0"}
!59 = distinct !{!59, !"_Z9sk_ref_spI14SkSpecialImageE5sk_spIT_EPS2_"}
!60 = !{!61, !63}
!61 = distinct !{!61, !62, !"_Z9sk_ref_spI13SkImageFilterE5sk_spIT_EPS2_: argument 0"}
!62 = distinct !{!62, !"_Z9sk_ref_spI13SkImageFilterE5sk_spIT_EPS2_"}
!63 = distinct !{!63, !64, !"_ZNK13SkImageFilter5refMeEv: argument 0"}
!64 = distinct !{!64, !"_ZNK13SkImageFilter5refMeEv"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZL19apply_ctm_to_filter5sk_spI13SkImageFilterERK8SkMatrixPS2_: argument 0"}
!67 = distinct !{!67, !"_ZL19apply_ctm_to_filter5sk_spI13SkImageFilterERK8SkMatrixPS2_"}
