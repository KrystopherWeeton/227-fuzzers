; ModuleID = '../../components/policy/core/common/preg_parser.cc'
source_filename = "../../components/policy/core/common/preg_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.policy::RegistryDict" = type { %"class.std::__1::map", %"class.std::__1::map.18" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i64 }
%"class.std::__1::map.18" = type { %"class.std::__1::__tree.19" }
%"class.std::__1::__tree.19" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.policy::PolicyLoadStatusSampler" = type { i32 (...)**, %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.base::MemoryMappedFile" = type { %"class.base::File", i8*, i64 }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.logging::ErrnoLogMessage" = type <{ %"class.logging::LogMessage", i32, [4 x i8] }>
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.41" }
%"class.base::BasicStringPiece" = type { i16*, i64 }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i8* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.5 }
%struct.anon.5 = type { %"struct.std::__1::__padding.6", i8 }
%"struct.std::__1::__padding.6" = type { [1 x i8] }
%"class.std::__1::allocator.8" = type { i8 }
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.56" }
%"union.absl::variant_internal::DestructibleUnionImpl.56" = type { %"union.absl::variant_internal::DestructibleUnionImpl.57" }
%"union.absl::variant_internal::DestructibleUnionImpl.57" = type { %"union.absl::variant_internal::DestructibleUnionImpl.58" }
%"union.absl::variant_internal::DestructibleUnionImpl.58" = type { %"union.absl::variant_internal::DestructibleUnionImpl.59" }
%"union.absl::variant_internal::DestructibleUnionImpl.59" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

@_ZN6policy11preg_parser15kPRegFileHeaderE = hidden constant [8 x i8] c"PReg\01\00\00\00", align 1
@.str = private unnamed_addr constant [51 x i8] c"../../components/policy/core/common/preg_parser.cc\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"Failed to map \00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"file '%s'\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"PReg \00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c" too large: \00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"Bad PReg \00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"Error parsing PReg \00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c" at offset \00", align 1
@_ZN12_GLOBAL__N_122kRegistryPathSeparatorE = internal constant [2 x i16] [i16 92, i16 0], align 2
@.str.9 = private unnamed_addr constant [39 x i8] c"Encountered a key which has more than \00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c" components.\00", align 1
@_ZN12_GLOBAL__N_120kActionTriggerPrefixE = internal constant [3 x i8] c"**\00", align 1
@_ZN12_GLOBAL__N_126kActionTriggerDeleteValuesE = internal constant [13 x i8] c"deletevalues\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c";\00", align 1
@_ZN12_GLOBAL__N_124kActionTriggerDeleteKeysE = internal constant [11 x i8] c"deletekeys\00", align 1
@_ZN12_GLOBAL__N_117kActionTriggerDelE = internal constant [5 x i8] c"del.\00", align 1
@_ZN12_GLOBAL__N_121kActionTriggerDelValsE = internal constant [8 x i8] c"delvals\00", align 1
@_ZN12_GLOBAL__N_123kActionTriggerSecureKeyE = internal constant [10 x i8] c"securekey\00", align 1
@_ZN12_GLOBAL__N_118kActionTriggerSoftE = internal constant [5 x i8] c"soft\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"Bad action trigger \00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"Bad data size \00", align 1
@.str.16 = private unnamed_addr constant [32 x i8] c"Unsupported registry data type \00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"String '\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"' is not a valid UTF8 string\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6policy11preg_parser8ReadFileERKN4base8FilePathERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEPNS_12RegistryDictEPNS_23PolicyLoadStatusSamplerE(%"class.base::FilePath"* dereferenceable(24), %"class.std::__1::basic_string.1"* dereferenceable(24), %"class.policy::RegistryDict"*, %"class.policy::PolicyLoadStatusSampler"*) local_unnamed_addr #0 {
  %5 = alloca %"class.base::MemoryMappedFile", align 8
  %6 = alloca %"class.logging::ErrnoLogMessage", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.base::MemoryMappedFile"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 72, i1 false)
  call void @_ZN4base16MemoryMappedFileC1Ev(%"class.base::MemoryMappedFile"* nonnull %5) #10
  %9 = call zeroext i1 @_ZN4base16MemoryMappedFile10InitializeERKNS_8FilePathENS0_6AccessE(%"class.base::MemoryMappedFile"* nonnull %5, %"class.base::FilePath"* dereferenceable(24) %0, i32 0) #10
  br i1 %9, label %10, label %12

10:                                               ; preds = %4
  %11 = call zeroext i1 @_ZNK4base16MemoryMappedFile7IsValidEv(%"class.base::MemoryMappedFile"* nonnull %5) #10
  br i1 %11, label %34, label %12

12:                                               ; preds = %10, %4
  %13 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %13, label %14, label %33

14:                                               ; preds = %12
  %15 = bitcast %"class.logging::ErrnoLogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 312, i8* nonnull %15) #10
  %16 = call i32 @_ZN7logging22GetLastSystemErrorCodeEv() #10
  call void @_ZN7logging15ErrnoLogMessageC1EPKciii(%"class.logging::ErrnoLogMessage"* nonnull %6, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 308, i32 2, i32 %16) #10
  %17 = getelementptr inbounds %"class.logging::ErrnoLogMessage", %"class.logging::ErrnoLogMessage"* %6, i64 0, i32 0, i32 2
  %18 = bitcast %"class.std::__1::basic_ostringstream"* %17 to %"class.std::__1::basic_ostream"*
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i64 14) #10
  %20 = bitcast %"class.base::FilePath"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.base::FilePath"* %0 to i8*
  %29 = zext i8 %22 to i64
  %30 = select i1 %23, i8* %25, i8* %28
  %31 = select i1 %23, i64 %27, i64 %29
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* %30, i64 %31) #10
  call void @_ZN7logging15ErrnoLogMessageD1Ev(%"class.logging::ErrnoLogMessage"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 312, i8* nonnull %15) #10
  br label %33

33:                                               ; preds = %12, %14
  call void @_ZN6policy23PolicyLoadStatusSampler3AddENS_16PolicyLoadStatusE(%"class.policy::PolicyLoadStatusSampler"* %3, i32 6) #10
  br label %57

34:                                               ; preds = %10
  %35 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %5, i64 0, i32 1
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %5, i64 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #10
  %40 = bitcast %"class.base::FilePath"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast %"class.base::FilePath"* %0 to i8*
  %47 = select i1 %43, i8* %45, i8* %46
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8* %47) #10
  %48 = call zeroext i1 @_ZN6policy11preg_parser16ReadDataInternalEPKhmRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEPNS_12RegistryDictEPNS_23PolicyLoadStatusSamplerERKNS4_IcNS5_IcEENS7_IcEEEE(i8* %36, i64 %38, %"class.std::__1::basic_string.1"* dereferenceable(24) %1, %"class.policy::RegistryDict"* %2, %"class.policy::PolicyLoadStatusSampler"* %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7)
  %49 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %34
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #11
  br label %56

56:                                               ; preds = %34, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #10
  br label %57

57:                                               ; preds = %56, %33
  %58 = phi i1 [ %48, %56 ], [ false, %33 ]
  call void @_ZN4base16MemoryMappedFileD1Ev(%"class.base::MemoryMappedFile"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #10
  ret i1 %58
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base16MemoryMappedFileC1Ev(%"class.base::MemoryMappedFile"*) unnamed_addr #2

declare zeroext i1 @_ZNK4base16MemoryMappedFile7IsValidEv(%"class.base::MemoryMappedFile"*) local_unnamed_addr #2

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare i32 @_ZN7logging22GetLastSystemErrorCodeEv() local_unnamed_addr #2

declare void @_ZN7logging15ErrnoLogMessageC1EPKciii(%"class.logging::ErrnoLogMessage"*, i8*, i32, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging15ErrnoLogMessageD1Ev(%"class.logging::ErrnoLogMessage"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6policy23PolicyLoadStatusSampler3AddENS_16PolicyLoadStatusE(%"class.policy::PolicyLoadStatusSampler"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6policy11preg_parser16ReadDataInternalEPKhmRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEPNS_12RegistryDictEPNS_23PolicyLoadStatusSamplerERKNS4_IcNS5_IcEENS7_IcEEEE(i8*, i64, %"class.std::__1::basic_string.1"* dereferenceable(24), %"class.policy::RegistryDict"*, %"class.policy::PolicyLoadStatusSampler"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.logging::LogMessage", align 8
  %9 = alloca %"class.logging::LogMessage", align 8
  %10 = alloca %"class.std::__1::vector.39", align 8
  %11 = alloca %"class.logging::LogMessage", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::vector.77", align 8
  %18 = alloca %"class.std::__1::vector.77", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.logging::LogMessage", align 8
  %21 = alloca %"class.logging::LogMessage", align 8
  %22 = alloca %"class.logging::LogMessage", align 8
  %23 = alloca %"class.std::__1::basic_string.1", align 8
  %24 = alloca %"class.std::__1::basic_string.1", align 8
  %25 = alloca %"class.std::__1::vector", align 8
  %26 = alloca %"class.std::__1::basic_string.1", align 8
  %27 = alloca %"class.logging::LogMessage", align 8
  %28 = icmp ugt i64 %1, 16777216
  br i1 %28, label %29, label %51

29:                                               ; preds = %6
  %30 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %30, label %31, label %852

31:                                               ; preds = %29
  %32 = bitcast %"class.logging::LogMessage"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %32) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %21, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 329, i32 2) #10
  %33 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %21, i64 0, i32 2
  %34 = bitcast %"class.std::__1::basic_ostringstream"* %33 to %"class.std::__1::basic_ostream"*
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %34, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 5) #10
  %36 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %45 = zext i8 %38 to i64
  %46 = select i1 %39, i8* %41, i8* %44
  %47 = select i1 %39, i64 %43, i64 %45
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %35, i8* %46, i64 %47) #10
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %48, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i64 12) #10
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %49, i64 %1) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %32) #10
  br label %852

51:                                               ; preds = %6
  %52 = icmp eq i8* %0, null
  %53 = icmp ult i64 %1, 8
  %54 = or i1 %52, %53
  br i1 %54, label %58, label %55

55:                                               ; preds = %51
  %56 = tail call i32 @bcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN6policy11preg_parser15kPRegFileHeaderE, i64 0, i64 0), i8* nonnull %0, i64 8)
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %55, %51
  %59 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %59, label %60, label %852

60:                                               ; preds = %58
  %61 = bitcast %"class.logging::LogMessage"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %61) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %22, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 338, i32 2) #10
  %62 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %22, i64 0, i32 2
  %63 = bitcast %"class.std::__1::basic_ostringstream"* %62 to %"class.std::__1::basic_ostream"*
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %63, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i64 9) #10
  %65 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %74 = zext i8 %67 to i64
  %75 = select i1 %68, i8* %70, i8* %73
  %76 = select i1 %68, i64 %72, i64 %74
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %64, i8* %75, i64 %76) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %61) #10
  br label %852

78:                                               ; preds = %55
  %79 = getelementptr inbounds i8, i8* %0, i64 8
  %80 = getelementptr inbounds i8, i8* %0, i64 %1
  %81 = ptrtoint i8* %80 to i64
  %82 = bitcast %"class.std::__1::basic_string.1"* %23 to i8*
  %83 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %86 = bitcast %"class.std::__1::basic_string.1"* %24 to i8*
  %87 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %89 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %90 = bitcast %"class.std::__1::vector"* %25 to i8*
  %91 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 1
  %93 = bitcast %"class.std::__1::basic_string.1"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %93, i64 0, i32 1, i32 1
  %95 = bitcast %"class.std::__1::basic_string.1"* %23 to i16*
  %96 = bitcast %"class.std::__1::basic_string.1"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %96, i64 0, i32 1, i32 1
  %98 = bitcast %"class.std::__1::basic_string.1"* %24 to i16*
  %99 = bitcast i8** %92 to i64*
  %100 = bitcast %"class.std::__1::vector"* %25 to i64*
  %101 = bitcast %"class.std::__1::basic_string.1"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %101, i64 0, i32 1, i32 1
  %103 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %104 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = bitcast %"class.std::__1::basic_string.1"* %2 to i16*
  %106 = bitcast %"class.std::__1::basic_string.1"* %26 to i8*
  %107 = bitcast %"class.std::__1::basic_string.1"* %23 to %"class.std::__1::allocator.8"*
  %108 = bitcast %"class.std::__1::vector.39"* %10 to i8*
  %109 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %10, i64 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %10, i64 0, i32 0, i32 1
  %111 = bitcast %"class.std::__1::basic_string.1"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %111, i64 0, i32 1, i32 1
  %113 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = bitcast %"class.std::__1::basic_string.1"* %26 to i16*
  %115 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %116 = bitcast %"class.base::BasicStringPiece"** %110 to i64*
  %117 = bitcast %"class.std::__1::vector.39"* %10 to i64*
  %118 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %125 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %130 = bitcast %"class.logging::LogMessage"* %8 to i8*
  %131 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %8, i64 0, i32 2
  %132 = bitcast %"class.std::__1::basic_ostringstream"* %131 to %"class.std::__1::basic_ostream"*
  %133 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = bitcast %"class.logging::LogMessage"* %9 to i8*
  %136 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %9, i64 0, i32 2
  %137 = bitcast %"class.std::__1::basic_ostringstream"* %136 to %"class.std::__1::basic_ostream"*
  %138 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %141 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %144 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %145 = bitcast %"class.std::__1::basic_string"* %13 to %"class.std::__1::allocator"*
  %146 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %150 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %150, i64 0, i32 1, i32 0
  %152 = bitcast %"class.logging::LogMessage"* %20 to i8*
  %153 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %20, i64 0, i32 2
  %154 = bitcast %"class.std::__1::basic_ostringstream"* %153 to %"class.std::__1::basic_ostream"*
  %155 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %156 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = bitcast %"class.std::__1::vector.77"* %18 to i8*
  %160 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  %162 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %18, i64 0, i32 0, i32 0
  %163 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %18, i64 0, i32 0, i32 1
  %164 = bitcast %"class.std::__1::vector.77"* %18 to i8**
  %165 = bitcast %"class.std::__1::vector.77"* %17 to i8*
  %166 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %17, i64 0, i32 0, i32 0
  %167 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %17, i64 0, i32 0, i32 1
  %168 = bitcast %"class.std::__1::vector.77"* %17 to i8**
  %169 = bitcast %"class.logging::LogMessage"* %11 to i8*
  %170 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %11, i64 0, i32 2
  %171 = bitcast %"class.std::__1::basic_ostringstream"* %170 to %"class.std::__1::basic_ostream"*
  %172 = bitcast %"class.std::__1::basic_string.1"* %26 to i8**
  %173 = bitcast %"class.std::__1::basic_string.1"* %24 to i8**
  %174 = bitcast %"class.std::__1::basic_string.1"* %23 to i8**
  br label %175

175:                                              ; preds = %823, %78
  %176 = phi i8* [ %79, %78 ], [ %808, %823 ]
  %177 = icmp eq i8* %176, %80
  br i1 %177, label %854, label %178

178:                                              ; preds = %175
  %179 = icmp ult i8* %176, %80
  br i1 %179, label %180, label %825

180:                                              ; preds = %178
  %181 = ptrtoint i8* %176 to i64
  %182 = sub i64 %81, %181
  %183 = icmp slt i64 %182, 2
  br i1 %183, label %825, label %184

184:                                              ; preds = %180
  %185 = load i8, i8* %176, align 1
  %186 = zext i8 %185 to i32
  %187 = getelementptr inbounds i8, i8* %176, i64 1
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = shl nuw nsw i32 %189, 8
  %191 = or i32 %190, %186
  %192 = getelementptr inbounds i8, i8* %176, i64 2
  %193 = icmp eq i32 %191, 91
  br i1 %193, label %194, label %825

194:                                              ; preds = %184
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 24, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 24, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 24, i1 false) #10
  %195 = icmp ult i8* %192, %80
  br i1 %195, label %196, label %802

196:                                              ; preds = %194, %236
  %197 = phi i8* [ %209, %236 ], [ %192, %194 ]
  %198 = ptrtoint i8* %197 to i64
  %199 = sub i64 %81, %198
  %200 = icmp slt i64 %199, 2
  br i1 %200, label %802, label %201

201:                                              ; preds = %196
  %202 = load i8, i8* %197, align 1
  %203 = zext i8 %202 to i32
  %204 = getelementptr inbounds i8, i8* %197, i64 1
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i32
  %207 = shl nuw nsw i32 %206, 8
  %208 = or i32 %207, %203
  %209 = getelementptr inbounds i8, i8* %197, i64 2
  %210 = icmp eq i32 %208, 0
  br i1 %210, label %241, label %211

211:                                              ; preds = %201
  %212 = trunc i32 %208 to i16
  %213 = load i8, i8* %94, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %217, label %215

215:                                              ; preds = %211
  %216 = zext i8 %213 to i64
  br label %222

217:                                              ; preds = %211
  %218 = load i64, i64* %85, align 8
  %219 = and i64 %218, 9223372036854775807
  %220 = add nsw i64 %219, -1
  %221 = load i64, i64* %84, align 8
  br label %222

222:                                              ; preds = %217, %215
  %223 = phi i64 [ 10, %215 ], [ %220, %217 ]
  %224 = phi i64 [ %216, %215 ], [ %221, %217 ]
  %225 = icmp eq i64 %224, %223
  br i1 %225, label %226, label %229

226:                                              ; preds = %222
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.1"* nonnull %23, i64 %223, i64 1, i64 %223, i64 %223, i64 0, i64 0) #10
  %227 = load i8, i8* %94, align 1
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %233, label %230

229:                                              ; preds = %222
  br i1 %214, label %233, label %230

230:                                              ; preds = %229, %226
  %231 = trunc i64 %224 to i8
  %232 = add i8 %231, 1
  store i8 %232, i8* %94, align 1
  br label %236

233:                                              ; preds = %229, %226
  %234 = load i16*, i16** %83, align 8
  %235 = add i64 %224, 1
  store i64 %235, i64* %84, align 8
  br label %236

236:                                              ; preds = %233, %230
  %237 = phi i16* [ %95, %230 ], [ %234, %233 ]
  %238 = getelementptr inbounds i16, i16* %237, i64 %224
  store i16 %212, i16* %238, align 2
  %239 = getelementptr inbounds i16, i16* %238, i64 1
  store i16 0, i16* %239, align 2
  %240 = icmp ult i8* %209, %80
  br i1 %240, label %196, label %802

241:                                              ; preds = %201
  %242 = icmp ult i8* %209, %80
  br i1 %242, label %243, label %802

243:                                              ; preds = %241
  %244 = ptrtoint i8* %209 to i64
  %245 = sub i64 %81, %244
  %246 = icmp slt i64 %245, 2
  br i1 %246, label %802, label %247

247:                                              ; preds = %243
  %248 = load i8, i8* %209, align 1
  %249 = zext i8 %248 to i32
  %250 = getelementptr inbounds i8, i8* %197, i64 3
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i32
  %253 = shl nuw nsw i32 %252, 8
  %254 = or i32 %253, %249
  %255 = getelementptr inbounds i8, i8* %197, i64 4
  %256 = icmp eq i32 %254, 59
  br i1 %256, label %257, label %413

257:                                              ; preds = %247
  %258 = icmp ult i8* %255, %80
  br i1 %258, label %259, label %802

259:                                              ; preds = %257, %299
  %260 = phi i8* [ %272, %299 ], [ %255, %257 ]
  %261 = ptrtoint i8* %260 to i64
  %262 = sub i64 %81, %261
  %263 = icmp slt i64 %262, 2
  br i1 %263, label %802, label %264

264:                                              ; preds = %259
  %265 = load i8, i8* %260, align 1
  %266 = zext i8 %265 to i32
  %267 = getelementptr inbounds i8, i8* %260, i64 1
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i32
  %270 = shl nuw nsw i32 %269, 8
  %271 = or i32 %270, %266
  %272 = getelementptr inbounds i8, i8* %260, i64 2
  %273 = icmp eq i32 %271, 0
  br i1 %273, label %304, label %274

274:                                              ; preds = %264
  %275 = trunc i32 %271 to i16
  %276 = load i8, i8* %97, align 1
  %277 = icmp slt i8 %276, 0
  br i1 %277, label %280, label %278

278:                                              ; preds = %274
  %279 = zext i8 %276 to i64
  br label %285

280:                                              ; preds = %274
  %281 = load i64, i64* %89, align 8
  %282 = and i64 %281, 9223372036854775807
  %283 = add nsw i64 %282, -1
  %284 = load i64, i64* %88, align 8
  br label %285

285:                                              ; preds = %280, %278
  %286 = phi i64 [ 10, %278 ], [ %283, %280 ]
  %287 = phi i64 [ %279, %278 ], [ %284, %280 ]
  %288 = icmp eq i64 %287, %286
  br i1 %288, label %289, label %292

289:                                              ; preds = %285
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.1"* nonnull %24, i64 %286, i64 1, i64 %286, i64 %286, i64 0, i64 0) #10
  %290 = load i8, i8* %97, align 1
  %291 = icmp slt i8 %290, 0
  br i1 %291, label %296, label %293

292:                                              ; preds = %285
  br i1 %277, label %296, label %293

293:                                              ; preds = %292, %289
  %294 = trunc i64 %287 to i8
  %295 = add i8 %294, 1
  store i8 %295, i8* %97, align 1
  br label %299

296:                                              ; preds = %292, %289
  %297 = load i16*, i16** %87, align 8
  %298 = add i64 %287, 1
  store i64 %298, i64* %88, align 8
  br label %299

299:                                              ; preds = %296, %293
  %300 = phi i16* [ %98, %293 ], [ %297, %296 ]
  %301 = getelementptr inbounds i16, i16* %300, i64 %287
  store i16 %275, i16* %301, align 2
  %302 = getelementptr inbounds i16, i16* %301, i64 1
  store i16 0, i16* %302, align 2
  %303 = icmp ult i8* %272, %80
  br i1 %303, label %259, label %802

304:                                              ; preds = %264
  %305 = icmp ult i8* %272, %80
  br i1 %305, label %306, label %802

306:                                              ; preds = %304
  %307 = ptrtoint i8* %272 to i64
  %308 = sub i64 %81, %307
  %309 = icmp slt i64 %308, 2
  br i1 %309, label %802, label %310

310:                                              ; preds = %306
  %311 = load i8, i8* %272, align 1
  %312 = zext i8 %311 to i32
  %313 = getelementptr inbounds i8, i8* %260, i64 3
  %314 = load i8, i8* %313, align 1
  %315 = zext i8 %314 to i32
  %316 = shl nuw nsw i32 %315, 8
  %317 = or i32 %316, %312
  %318 = getelementptr inbounds i8, i8* %260, i64 4
  %319 = icmp eq i32 %317, 59
  br i1 %319, label %320, label %413

320:                                              ; preds = %310
  %321 = icmp ult i8* %318, %80
  br i1 %321, label %322, label %802

322:                                              ; preds = %320
  %323 = ptrtoint i8* %318 to i64
  %324 = sub i64 %81, %323
  %325 = icmp slt i64 %324, 4
  br i1 %325, label %802, label %326

326:                                              ; preds = %322
  %327 = getelementptr inbounds i8, i8* %260, i64 8
  %328 = bitcast i8* %318 to i32*
  %329 = load i32, i32* %328, align 1
  %330 = icmp ult i8* %327, %80
  br i1 %330, label %331, label %802

331:                                              ; preds = %326
  %332 = ptrtoint i8* %327 to i64
  %333 = sub i64 %81, %332
  %334 = icmp slt i64 %333, 2
  br i1 %334, label %802, label %335

335:                                              ; preds = %331
  %336 = load i8, i8* %327, align 1
  %337 = zext i8 %336 to i32
  %338 = getelementptr inbounds i8, i8* %260, i64 9
  %339 = load i8, i8* %338, align 1
  %340 = zext i8 %339 to i32
  %341 = shl nuw nsw i32 %340, 8
  %342 = or i32 %341, %337
  %343 = getelementptr inbounds i8, i8* %260, i64 10
  %344 = icmp eq i32 %342, 59
  br i1 %344, label %345, label %413

345:                                              ; preds = %335
  %346 = icmp ult i8* %343, %80
  br i1 %346, label %347, label %802

347:                                              ; preds = %345
  %348 = ptrtoint i8* %343 to i64
  %349 = sub i64 %81, %348
  %350 = icmp slt i64 %349, 4
  br i1 %350, label %802, label %351

351:                                              ; preds = %347
  %352 = getelementptr inbounds i8, i8* %260, i64 14
  %353 = bitcast i8* %343 to i32*
  %354 = load i32, i32* %353, align 1
  %355 = icmp ult i8* %352, %80
  br i1 %355, label %356, label %802

356:                                              ; preds = %351
  %357 = ptrtoint i8* %352 to i64
  %358 = sub i64 %81, %357
  %359 = icmp slt i64 %358, 2
  br i1 %359, label %802, label %360

360:                                              ; preds = %356
  %361 = load i8, i8* %352, align 1
  %362 = zext i8 %361 to i32
  %363 = getelementptr inbounds i8, i8* %260, i64 15
  %364 = load i8, i8* %363, align 1
  %365 = zext i8 %364 to i32
  %366 = shl nuw nsw i32 %365, 8
  %367 = or i32 %366, %362
  %368 = getelementptr inbounds i8, i8* %260, i64 16
  %369 = icmp eq i32 %367, 59
  br i1 %369, label %370, label %413

370:                                              ; preds = %360
  %371 = icmp ugt i32 %354, 16777216
  br i1 %371, label %802, label %372

372:                                              ; preds = %370
  %373 = zext i32 %354 to i64
  %374 = load i64, i64* %99, align 8
  %375 = load i64, i64* %100, align 8
  %376 = sub i64 %374, %375
  %377 = icmp ult i64 %376, %373
  %378 = inttoptr i64 %375 to i8*
  br i1 %377, label %379, label %382

379:                                              ; preds = %372
  %380 = sub i64 %373, %376
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* nonnull %25, i64 %380) #10
  %381 = load i8*, i8** %91, align 8
  br label %386

382:                                              ; preds = %372
  %383 = icmp ugt i64 %376, %373
  br i1 %383, label %384, label %386

384:                                              ; preds = %382
  %385 = getelementptr inbounds i8, i8* %378, i64 %373
  store i8* %385, i8** %92, align 8
  br label %386

386:                                              ; preds = %379, %382, %384
  %387 = phi i8* [ %381, %379 ], [ %378, %382 ], [ %378, %384 ]
  %388 = icmp eq i32 %354, 0
  br i1 %388, label %397, label %389

389:                                              ; preds = %386
  %390 = icmp ult i8* %368, %80
  br i1 %390, label %391, label %806

391:                                              ; preds = %389
  %392 = ptrtoint i8* %368 to i64
  %393 = sub i64 %81, %392
  %394 = icmp slt i64 %393, %373
  br i1 %394, label %802, label %395

395:                                              ; preds = %391
  %396 = getelementptr inbounds i8, i8* %368, i64 %373
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %387, i8* align 1 %368, i64 %373, i1 false) #10
  br label %397

397:                                              ; preds = %395, %386
  %398 = phi i8* [ %396, %395 ], [ %368, %386 ]
  %399 = icmp ult i8* %398, %80
  br i1 %399, label %400, label %802

400:                                              ; preds = %397
  %401 = ptrtoint i8* %398 to i64
  %402 = sub i64 %81, %401
  %403 = icmp slt i64 %402, 2
  br i1 %403, label %802, label %404

404:                                              ; preds = %400
  %405 = load i8, i8* %398, align 1
  %406 = zext i8 %405 to i32
  %407 = getelementptr inbounds i8, i8* %398, i64 1
  %408 = load i8, i8* %407, align 1
  %409 = zext i8 %408 to i32
  %410 = shl nuw nsw i32 %409, 8
  %411 = or i32 %410, %406
  %412 = getelementptr inbounds i8, i8* %398, i64 2
  br label %413

413:                                              ; preds = %247, %310, %335, %404, %360
  %414 = phi i32 [ %329, %360 ], [ %329, %404 ], [ %329, %335 ], [ 0, %310 ], [ 0, %247 ]
  %415 = phi i8* [ %368, %360 ], [ %412, %404 ], [ %343, %335 ], [ %318, %310 ], [ %255, %247 ]
  %416 = phi i32 [ %367, %360 ], [ %411, %404 ], [ %342, %335 ], [ %317, %310 ], [ %254, %247 ]
  %417 = icmp eq i32 %416, 93
  br i1 %417, label %418, label %802

418:                                              ; preds = %413
  %419 = load i8, i8* %102, align 1
  %420 = icmp slt i8 %419, 0
  %421 = load i64, i64* %103, align 8
  %422 = zext i8 %419 to i64
  %423 = select i1 %420, i64 %421, i64 %422
  %424 = icmp eq i64 %423, 0
  br i1 %424, label %458, label %425

425:                                              ; preds = %418
  %426 = load i8, i8* %94, align 1
  %427 = icmp slt i8 %426, 0
  %428 = load i16*, i16** %83, align 8
  %429 = select i1 %427, i16* %428, i16* %95
  %430 = load i64, i64* %84, align 8
  %431 = zext i8 %426 to i64
  %432 = select i1 %427, i64 %430, i64 %431
  %433 = load i16*, i16** %104, align 8
  %434 = select i1 %420, i16* %433, i16* %105
  %435 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %429, i64 %432, i16* %434, i64 %423, i32 1) #10
  br i1 %435, label %436, label %802

436:                                              ; preds = %425
  %437 = load i8, i8* %94, align 1
  %438 = icmp slt i8 %437, 0
  %439 = load i64, i64* %84, align 8
  %440 = zext i8 %437 to i64
  %441 = select i1 %438, i64 %439, i64 %440
  %442 = load i8, i8* %102, align 1
  %443 = icmp slt i8 %442, 0
  %444 = load i64, i64* %103, align 8
  %445 = zext i8 %442 to i64
  %446 = select i1 %443, i64 %444, i64 %445
  %447 = icmp eq i64 %441, %446
  br i1 %447, label %458, label %448

448:                                              ; preds = %436
  %449 = icmp ugt i64 %441, %446
  br i1 %449, label %452, label %450

450:                                              ; preds = %448
  %451 = bitcast %"class.std::__1::basic_string.1"* %23 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* nonnull %451) #12
  unreachable

452:                                              ; preds = %448
  %453 = load i16*, i16** %83, align 8
  %454 = select i1 %438, i16* %453, i16* %95
  %455 = getelementptr inbounds i16, i16* %454, i64 %446
  %456 = load i16, i16* %455, align 2
  %457 = icmp eq i16 %456, 92
  br i1 %457, label %458, label %802

458:                                              ; preds = %436, %418, %452
  %459 = phi i64 [ %446, %436 ], [ 0, %418 ], [ %446, %452 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #10
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string.1"* nonnull %26, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %23, i64 %459, i64 -1, %"class.std::__1::allocator.8"* nonnull dereferenceable(1) %107) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #10
  %460 = load i8, i8* %112, align 1
  %461 = load i16*, i16** %113, align 8
  %462 = load i64, i64* %115, align 8
  %463 = zext i8 %460 to i64
  %464 = icmp slt i8 %460, 0
  %465 = select i1 %464, i16* %461, i16* %114
  %466 = select i1 %464, i64 %462, i64 %463
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.39"* nonnull sret %10, i16* %465, i64 %466, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZN12_GLOBAL__N_122kRegistryPathSeparatorE, i64 0, i64 0), i64 1, i32 0, i32 1) #10
  %467 = load i64, i64* %116, align 8
  %468 = load i64, i64* %117, align 8
  %469 = sub i64 %467, %468
  %470 = ashr exact i64 %469, 4
  %471 = icmp ugt i64 %470, 1024
  %472 = inttoptr i64 %468 to %"class.base::BasicStringPiece"*
  %473 = inttoptr i64 %467 to %"class.base::BasicStringPiece"*
  br i1 %471, label %474, label %480

474:                                              ; preds = %458
  %475 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %475, label %476, label %790

476:                                              ; preds = %474
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %169) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %11, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 229, i32 2) #10
  %477 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %171, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.9, i64 0, i64 0), i64 38) #10
  %478 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %477, i64 1024) #10
  %479 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %478, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i64 12) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %169) #10
  br label %790

480:                                              ; preds = %458
  %481 = icmp eq %"class.base::BasicStringPiece"* %472, %473
  br i1 %481, label %482, label %490

482:                                              ; preds = %512, %480
  %483 = phi %"class.policy::RegistryDict"* [ %3, %480 ], [ %513, %512 ]
  %484 = load i8, i8* %97, align 1
  %485 = icmp slt i8 %484, 0
  %486 = load i64, i64* %88, align 8
  %487 = zext i8 %484 to i64
  %488 = select i1 %485, i64 %486, i64 %487
  %489 = icmp eq i64 %488, 0
  br i1 %489, label %790, label %516

490:                                              ; preds = %480, %512
  %491 = phi %"class.policy::RegistryDict"* [ %513, %512 ], [ %3, %480 ]
  %492 = phi %"class.base::BasicStringPiece"* [ %514, %512 ], [ %472, %480 ]
  %493 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %492, i64 0, i32 1
  %494 = load i64, i64* %493, align 8
  %495 = icmp eq i64 %494, 0
  br i1 %495, label %512, label %496

496:                                              ; preds = %490
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #10
  %497 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %492, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 -86, i64 24, i1 false) #10
  %498 = load i16*, i16** %497, align 8
  %499 = load i64, i64* %493, align 8
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %12, i16* %498, i64 %499) #10
  %500 = call %"class.policy::RegistryDict"* @_ZN6policy12RegistryDict6GetKeyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::RegistryDict"* %491, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12) #10
  %501 = icmp eq %"class.policy::RegistryDict"* %500, null
  br i1 %501, label %502, label %505

502:                                              ; preds = %496
  %503 = call i8* @_Znwm(i64 48) #11
  %504 = bitcast i8* %503 to %"class.policy::RegistryDict"*
  call void @_ZN6policy12RegistryDictC1Ev(%"class.policy::RegistryDict"* nonnull %504) #10
  call void @_ZN6policy12RegistryDict6SetKeyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.policy::RegistryDict"* %491, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, %"class.policy::RegistryDict"* nonnull %504) #10
  br label %505

505:                                              ; preds = %502, %496
  %506 = phi %"class.policy::RegistryDict"* [ %500, %496 ], [ %504, %502 ]
  %507 = load i8, i8* %121, align 1
  %508 = icmp slt i8 %507, 0
  br i1 %508, label %509, label %511

509:                                              ; preds = %505
  %510 = load i8*, i8** %119, align 8
  call void @_ZdlPv(i8* %510) #11
  br label %511

511:                                              ; preds = %509, %505
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #10
  br label %512

512:                                              ; preds = %511, %490
  %513 = phi %"class.policy::RegistryDict"* [ %506, %511 ], [ %491, %490 ]
  %514 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %492, i64 1
  %515 = icmp eq %"class.base::BasicStringPiece"* %514, %473
  br i1 %515, label %482, label %490

516:                                              ; preds = %482
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 -86, i64 24, i1 false) #10
  %517 = load i16*, i16** %87, align 8
  %518 = select i1 %485, i16* %517, i16* %98
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %13, i16* %518, i64 %488) #10
  %519 = load i8, i8* %126, align 1
  %520 = icmp slt i8 %519, 0
  %521 = load i8*, i8** %123, align 8
  %522 = select i1 %520, i8* %521, i8* %122
  %523 = load i64, i64* %124, align 8
  %524 = zext i8 %519 to i64
  %525 = select i1 %520, i64 %523, i64 %524
  %526 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %522, i64 %525, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN12_GLOBAL__N_120kActionTriggerPrefixE, i64 0, i64 0), i64 2, i32 0) #10
  br i1 %526, label %582, label %527

527:                                              ; preds = %516
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 0, i64 24, i1 false) #10
  switch i32 %414, label %563 [
    i32 1, label %528
    i32 2, label %528
    i32 4, label %541
    i32 5, label %541
  ]

528:                                              ; preds = %527, %527
  %529 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_121DecodePRegStringValueERKNSt3__16vectorIhNS0_9allocatorIhEEEEPNS0_12basic_stringIcNS0_11char_traitsIcEENS2_IcEEEE(%"class.std::__1::vector"* nonnull dereferenceable(24) %25, %"class.std::__1::basic_string"* nonnull %7) #10
  br i1 %529, label %530, label %568

530:                                              ; preds = %528
  %531 = call i8* @_Znwm(i64 32) #11
  %532 = bitcast i8* %531 to %"class.base::Value"*
  %533 = load i8, i8* %134, align 1
  %534 = icmp slt i8 %533, 0
  %535 = load i8*, i8** %128, align 8
  %536 = select i1 %534, i8* %535, i8* %127
  %537 = load i64, i64* %129, align 8
  %538 = zext i8 %533 to i64
  %539 = select i1 %534, i64 %537, i64 %538
  call void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %532, i8* %536, i64 %539) #10
  %540 = ptrtoint i8* %531 to i64
  br label %568

541:                                              ; preds = %527, %527
  %542 = load i64, i64* %99, align 8
  %543 = load i64, i64* %100, align 8
  %544 = sub i64 %542, %543
  %545 = icmp eq i64 %544, 4
  br i1 %545, label %546, label %555

546:                                              ; preds = %541
  %547 = inttoptr i64 %543 to i32*
  %548 = load i32, i32* %547, align 4
  %549 = icmp eq i32 %414, 5
  %550 = call i32 @llvm.bswap.i32(i32 %548) #10
  %551 = select i1 %549, i32 %550, i32 %548
  %552 = call i8* @_Znwm(i64 32) #11
  %553 = bitcast i8* %552 to %"class.base::Value"*
  call void @_ZN4base5ValueC1Ei(%"class.base::Value"* nonnull %553, i32 %551) #10
  %554 = ptrtoint i8* %552 to i64
  br label %568

555:                                              ; preds = %541
  %556 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %556, label %557, label %568

557:                                              ; preds = %555
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %130) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 181, i32 2) #10
  %558 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %132, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), i64 14) #10
  %559 = load i64, i64* %99, align 8
  %560 = load i64, i64* %100, align 8
  %561 = sub i64 %559, %560
  %562 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %558, i64 %561) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %130) #10
  br label %568

563:                                              ; preds = %527
  %564 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %564, label %565, label %568

565:                                              ; preds = %563
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %135) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %9, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 192, i32 2) #10
  %566 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %137, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i64 0, i64 0), i64 31) #10
  %567 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %566, i32 %414) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %135) #10
  br label %568

568:                                              ; preds = %565, %563, %557, %555, %546, %530, %528
  %569 = phi i64 [ 0, %565 ], [ 0, %563 ], [ %554, %546 ], [ 0, %557 ], [ 0, %555 ], [ %540, %530 ], [ 0, %528 ]
  %570 = phi i1 [ false, %565 ], [ false, %563 ], [ true, %546 ], [ false, %557 ], [ false, %555 ], [ true, %530 ], [ false, %528 ]
  %571 = load i8, i8* %134, align 1
  %572 = icmp slt i8 %571, 0
  br i1 %572, label %573, label %575

573:                                              ; preds = %568
  %574 = load i8*, i8** %128, align 8
  call void @_ZdlPv(i8* %574) #11
  br label %575

575:                                              ; preds = %573, %568
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #10
  %576 = inttoptr i64 %569 to %"class.base::Value"*
  br i1 %570, label %577, label %578

577:                                              ; preds = %575
  call void @_ZN6policy12RegistryDict8SetValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrIN4base5ValueENS1_14default_deleteISC_EEEE(%"class.policy::RegistryDict"* %483, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13, %"class.base::Value"* %576) #10
  br label %784

578:                                              ; preds = %575
  %579 = icmp eq i64 %569, 0
  br i1 %579, label %784, label %580

580:                                              ; preds = %578
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %576) #10
  %581 = inttoptr i64 %569 to i8*
  call void @_ZdlPv(i8* %581) #11
  br label %784

582:                                              ; preds = %516
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %138, i8 0, i64 24, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 -86, i64 24, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #10
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %16, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13, i64 2, i64 -1, %"class.std::__1::allocator"* nonnull dereferenceable(1) %145) #10
  %583 = load i8, i8* %147, align 1
  %584 = icmp slt i8 %583, 0
  %585 = load i8*, i8** %148, align 8
  %586 = select i1 %584, i8* %585, i8* %144
  %587 = load i64, i64* %149, align 8
  %588 = zext i8 %583 to i64
  %589 = select i1 %584, i64 %587, i64 %588
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %15, i8* %586, i64 %589) #10
  %590 = load i8, i8* %147, align 1
  %591 = icmp slt i8 %590, 0
  br i1 %591, label %592, label %594

592:                                              ; preds = %582
  %593 = load i8*, i8** %148, align 8
  call void @_ZdlPv(i8* %593) #11
  br label %594

594:                                              ; preds = %592, %582
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #10
  %595 = load i8, i8* %151, align 1
  %596 = icmp slt i8 %595, 0
  %597 = load i64, i64* %143, align 8
  %598 = zext i8 %595 to i64
  %599 = select i1 %596, i64 %597, i64 %598
  %600 = icmp eq i64 %599, 12
  br i1 %600, label %601, label %656

601:                                              ; preds = %594
  %602 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %15, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN12_GLOBAL__N_126kActionTriggerDeleteValuesE, i64 0, i64 0), i64 12) #10
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %608, label %604

604:                                              ; preds = %601
  %605 = load i8, i8* %151, align 1
  %606 = load i64, i64* %143, align 8
  %607 = zext i8 %605 to i64
  br label %656

608:                                              ; preds = %601
  %609 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_121DecodePRegStringValueERKNSt3__16vectorIhNS0_9allocatorIhEEEEPNS0_12basic_stringIcNS0_11char_traitsIcEENS2_IcEEEE(%"class.std::__1::vector"* nonnull dereferenceable(24) %25, %"class.std::__1::basic_string"* nonnull %14) #10
  br i1 %609, label %610, label %773

610:                                              ; preds = %608
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %165) #10
  %611 = load i8, i8* %161, align 1
  %612 = icmp slt i8 %611, 0
  %613 = load i8*, i8** %139, align 8
  %614 = select i1 %612, i8* %613, i8* %138
  %615 = load i64, i64* %140, align 8
  %616 = zext i8 %611 to i64
  %617 = select i1 %612, i64 %615, i64 %616
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.77"* nonnull sret %17, i8* %614, i64 %617, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i64 1, i32 0, i32 1) #10
  %618 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %166, align 8
  %619 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %167, align 8
  %620 = icmp eq %"class.std::__1::basic_string"* %618, %619
  br i1 %620, label %623, label %647

621:                                              ; preds = %653
  %622 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %166, align 8
  br label %623

623:                                              ; preds = %621, %610
  %624 = phi %"class.std::__1::basic_string"* [ %622, %621 ], [ %618, %610 ]
  %625 = icmp eq %"class.std::__1::basic_string"* %624, null
  br i1 %625, label %646, label %626

626:                                              ; preds = %623
  %627 = bitcast %"class.std::__1::basic_string"* %624 to i8*
  %628 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %167, align 8
  %629 = icmp eq %"class.std::__1::basic_string"* %628, %624
  br i1 %629, label %644, label %630

630:                                              ; preds = %626, %640
  %631 = phi %"class.std::__1::basic_string"* [ %632, %640 ], [ %628, %626 ]
  %632 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %631, i64 -1
  %633 = bitcast %"class.std::__1::basic_string"* %632 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %634 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %633, i64 0, i32 1, i32 0
  %635 = load i8, i8* %634, align 1
  %636 = icmp slt i8 %635, 0
  br i1 %636, label %637, label %640

637:                                              ; preds = %630
  %638 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %632, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %639 = load i8*, i8** %638, align 8
  call void @_ZdlPv(i8* %639) #11
  br label %640

640:                                              ; preds = %637, %630
  %641 = icmp eq %"class.std::__1::basic_string"* %632, %624
  br i1 %641, label %642, label %630

642:                                              ; preds = %640
  %643 = load i8*, i8** %168, align 8
  br label %644

644:                                              ; preds = %642, %626
  %645 = phi i8* [ %643, %642 ], [ %627, %626 ]
  store %"class.std::__1::basic_string"* %624, %"class.std::__1::basic_string"** %167, align 8
  call void @_ZdlPv(i8* %645) #11
  br label %646

646:                                              ; preds = %644, %623
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %165) #10
  br label %773

647:                                              ; preds = %610, %653
  %648 = phi %"class.std::__1::basic_string"* [ %654, %653 ], [ %618, %610 ]
  %649 = call %"class.base::Value"* @_ZN6policy12RegistryDict11RemoveValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::RegistryDict"* %483, %"class.std::__1::basic_string"* dereferenceable(24) %648) #10
  %650 = icmp eq %"class.base::Value"* %649, null
  br i1 %650, label %653, label %651

651:                                              ; preds = %647
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %649) #10
  %652 = bitcast %"class.base::Value"* %649 to i8*
  call void @_ZdlPv(i8* %652) #11
  br label %653

653:                                              ; preds = %651, %647
  %654 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %648, i64 1
  %655 = icmp eq %"class.std::__1::basic_string"* %654, %619
  br i1 %655, label %621, label %647

656:                                              ; preds = %604, %594
  %657 = phi i64 [ %607, %604 ], [ %598, %594 ]
  %658 = phi i64 [ %606, %604 ], [ %597, %594 ]
  %659 = phi i8 [ %605, %604 ], [ %595, %594 ]
  %660 = icmp slt i8 %659, 0
  %661 = load i8*, i8** %142, align 8
  %662 = select i1 %660, i8* %661, i8* %141
  %663 = select i1 %660, i64 %658, i64 %657
  %664 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %662, i64 %663, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN12_GLOBAL__N_124kActionTriggerDeleteKeysE, i64 0, i64 0), i64 10, i32 0) #10
  br i1 %664, label %665, label %713

665:                                              ; preds = %656
  %666 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_121DecodePRegStringValueERKNSt3__16vectorIhNS0_9allocatorIhEEEEPNS0_12basic_stringIcNS0_11char_traitsIcEENS2_IcEEEE(%"class.std::__1::vector"* nonnull dereferenceable(24) %25, %"class.std::__1::basic_string"* nonnull %14) #10
  br i1 %666, label %667, label %773

667:                                              ; preds = %665
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %159) #10
  %668 = load i8, i8* %161, align 1
  %669 = icmp slt i8 %668, 0
  %670 = load i8*, i8** %139, align 8
  %671 = select i1 %669, i8* %670, i8* %138
  %672 = load i64, i64* %140, align 8
  %673 = zext i8 %668 to i64
  %674 = select i1 %669, i64 %672, i64 %673
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.77"* nonnull sret %18, i8* %671, i64 %674, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i64 1, i32 0, i32 1) #10
  %675 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %162, align 8
  %676 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %163, align 8
  %677 = icmp eq %"class.std::__1::basic_string"* %675, %676
  br i1 %677, label %680, label %704

678:                                              ; preds = %710
  %679 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %162, align 8
  br label %680

680:                                              ; preds = %678, %667
  %681 = phi %"class.std::__1::basic_string"* [ %679, %678 ], [ %675, %667 ]
  %682 = icmp eq %"class.std::__1::basic_string"* %681, null
  br i1 %682, label %703, label %683

683:                                              ; preds = %680
  %684 = bitcast %"class.std::__1::basic_string"* %681 to i8*
  %685 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %163, align 8
  %686 = icmp eq %"class.std::__1::basic_string"* %685, %681
  br i1 %686, label %701, label %687

687:                                              ; preds = %683, %697
  %688 = phi %"class.std::__1::basic_string"* [ %689, %697 ], [ %685, %683 ]
  %689 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %688, i64 -1
  %690 = bitcast %"class.std::__1::basic_string"* %689 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %691 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %690, i64 0, i32 1, i32 0
  %692 = load i8, i8* %691, align 1
  %693 = icmp slt i8 %692, 0
  br i1 %693, label %694, label %697

694:                                              ; preds = %687
  %695 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %689, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %696 = load i8*, i8** %695, align 8
  call void @_ZdlPv(i8* %696) #11
  br label %697

697:                                              ; preds = %694, %687
  %698 = icmp eq %"class.std::__1::basic_string"* %689, %681
  br i1 %698, label %699, label %687

699:                                              ; preds = %697
  %700 = load i8*, i8** %164, align 8
  br label %701

701:                                              ; preds = %699, %683
  %702 = phi i8* [ %700, %699 ], [ %684, %683 ]
  store %"class.std::__1::basic_string"* %681, %"class.std::__1::basic_string"** %163, align 8
  call void @_ZdlPv(i8* %702) #11
  br label %703

703:                                              ; preds = %701, %680
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %159) #10
  br label %773

704:                                              ; preds = %667, %710
  %705 = phi %"class.std::__1::basic_string"* [ %711, %710 ], [ %675, %667 ]
  %706 = call %"class.policy::RegistryDict"* @_ZN6policy12RegistryDict9RemoveKeyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::RegistryDict"* %483, %"class.std::__1::basic_string"* dereferenceable(24) %705) #10
  %707 = icmp eq %"class.policy::RegistryDict"* %706, null
  br i1 %707, label %710, label %708

708:                                              ; preds = %704
  call void @_ZN6policy12RegistryDictD1Ev(%"class.policy::RegistryDict"* nonnull %706) #10
  %709 = bitcast %"class.policy::RegistryDict"* %706 to i8*
  call void @_ZdlPv(i8* %709) #11
  br label %710

710:                                              ; preds = %708, %704
  %711 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %705, i64 1
  %712 = icmp eq %"class.std::__1::basic_string"* %711, %676
  br i1 %712, label %678, label %704

713:                                              ; preds = %656
  %714 = load i8, i8* %151, align 1
  %715 = icmp slt i8 %714, 0
  %716 = load i8*, i8** %142, align 8
  %717 = select i1 %715, i8* %716, i8* %141
  %718 = load i64, i64* %143, align 8
  %719 = zext i8 %714 to i64
  %720 = select i1 %715, i64 %718, i64 %719
  %721 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %717, i64 %720, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN12_GLOBAL__N_117kActionTriggerDelE, i64 0, i64 0), i64 4, i32 0) #10
  br i1 %721, label %722, label %733

722:                                              ; preds = %713
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %155) #10
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %19, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13, i64 6, i64 -1, %"class.std::__1::allocator"* nonnull dereferenceable(1) %145) #10
  %723 = call %"class.base::Value"* @_ZN6policy12RegistryDict11RemoveValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::RegistryDict"* %483, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %19) #10
  %724 = icmp eq %"class.base::Value"* %723, null
  br i1 %724, label %727, label %725

725:                                              ; preds = %722
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %723) #10
  %726 = bitcast %"class.base::Value"* %723 to i8*
  call void @_ZdlPv(i8* %726) #11
  br label %727

727:                                              ; preds = %725, %722
  %728 = load i8, i8* %157, align 1
  %729 = icmp slt i8 %728, 0
  br i1 %729, label %730, label %732

730:                                              ; preds = %727
  %731 = load i8*, i8** %158, align 8
  call void @_ZdlPv(i8* %731) #11
  br label %732

732:                                              ; preds = %730, %727
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %155) #10
  br label %773

733:                                              ; preds = %713
  %734 = load i8, i8* %151, align 1
  %735 = icmp slt i8 %734, 0
  %736 = load i8*, i8** %142, align 8
  %737 = select i1 %735, i8* %736, i8* %141
  %738 = load i64, i64* %143, align 8
  %739 = zext i8 %734 to i64
  %740 = select i1 %735, i64 %738, i64 %739
  %741 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %737, i64 %740, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN12_GLOBAL__N_121kActionTriggerDelValsE, i64 0, i64 0), i64 7, i32 0) #10
  br i1 %741, label %742, label %743

742:                                              ; preds = %733
  call void @_ZN6policy12RegistryDict11ClearValuesEv(%"class.policy::RegistryDict"* %483) #10
  br label %773

743:                                              ; preds = %733
  %744 = load i8, i8* %151, align 1
  %745 = icmp slt i8 %744, 0
  %746 = load i8*, i8** %142, align 8
  %747 = select i1 %745, i8* %746, i8* %141
  %748 = load i64, i64* %143, align 8
  %749 = zext i8 %744 to i64
  %750 = select i1 %745, i64 %748, i64 %749
  %751 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %747, i64 %750, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN12_GLOBAL__N_123kActionTriggerSecureKeyE, i64 0, i64 0), i64 9, i32 0) #10
  br i1 %751, label %773, label %752

752:                                              ; preds = %743
  %753 = load i8, i8* %151, align 1
  %754 = icmp slt i8 %753, 0
  %755 = load i8*, i8** %142, align 8
  %756 = select i1 %754, i8* %755, i8* %141
  %757 = load i64, i64* %143, align 8
  %758 = zext i8 %753 to i64
  %759 = select i1 %754, i64 %757, i64 %758
  %760 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %756, i64 %759, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN12_GLOBAL__N_118kActionTriggerSoftE, i64 0, i64 0), i64 4, i32 0) #10
  br i1 %760, label %773, label %761

761:                                              ; preds = %752
  %762 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %762, label %763, label %773

763:                                              ; preds = %761
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %152) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %20, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 290, i32 2) #10
  %764 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %154, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0), i64 19) #10
  %765 = load i8, i8* %126, align 1
  %766 = icmp slt i8 %765, 0
  %767 = load i8*, i8** %123, align 8
  %768 = load i64, i64* %124, align 8
  %769 = zext i8 %765 to i64
  %770 = select i1 %766, i8* %767, i8* %122
  %771 = select i1 %766, i64 %768, i64 %769
  %772 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %764, i8* %770, i64 %771) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %152) #10
  br label %773

773:                                              ; preds = %763, %761, %752, %743, %742, %732, %703, %665, %646, %608
  %774 = load i8, i8* %151, align 1
  %775 = icmp slt i8 %774, 0
  br i1 %775, label %776, label %778

776:                                              ; preds = %773
  %777 = load i8*, i8** %142, align 8
  call void @_ZdlPv(i8* %777) #11
  br label %778

778:                                              ; preds = %776, %773
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #10
  %779 = load i8, i8* %161, align 1
  %780 = icmp slt i8 %779, 0
  br i1 %780, label %781, label %783

781:                                              ; preds = %778
  %782 = load i8*, i8** %139, align 8
  call void @_ZdlPv(i8* %782) #11
  br label %783

783:                                              ; preds = %781, %778
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #10
  br label %784

784:                                              ; preds = %783, %580, %578, %577
  %785 = load i8, i8* %126, align 1
  %786 = icmp slt i8 %785, 0
  br i1 %786, label %787, label %789

787:                                              ; preds = %784
  %788 = load i8*, i8** %123, align 8
  call void @_ZdlPv(i8* %788) #11
  br label %789

789:                                              ; preds = %787, %784
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #10
  br label %790

790:                                              ; preds = %789, %482, %476, %474
  %791 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %109, align 8
  %792 = icmp eq %"class.base::BasicStringPiece"* %791, null
  br i1 %792, label %796, label %793

793:                                              ; preds = %790
  %794 = ptrtoint %"class.base::BasicStringPiece"* %791 to i64
  store i64 %794, i64* %116, align 8
  %795 = bitcast %"class.base::BasicStringPiece"* %791 to i8*
  call void @_ZdlPv(i8* %795) #11
  br label %796

796:                                              ; preds = %790, %793
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #10
  %797 = load i8, i8* %112, align 1
  %798 = icmp slt i8 %797, 0
  br i1 %798, label %799, label %801

799:                                              ; preds = %796
  %800 = load i8*, i8** %172, align 8
  call void @_ZdlPv(i8* %800) #11
  br label %801

801:                                              ; preds = %796, %799
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #10
  br label %802

802:                                              ; preds = %236, %196, %299, %259, %243, %241, %304, %306, %326, %331, %351, %356, %425, %400, %397, %347, %345, %322, %320, %257, %194, %452, %801, %413, %370, %391
  %803 = phi i8* [ %368, %391 ], [ %415, %413 ], [ %415, %452 ], [ %415, %801 ], [ %368, %370 ], [ %192, %194 ], [ %255, %257 ], [ %318, %320 ], [ %318, %322 ], [ %343, %345 ], [ %343, %347 ], [ %398, %397 ], [ %398, %400 ], [ %415, %425 ], [ %209, %243 ], [ %209, %241 ], [ %272, %306 ], [ %272, %304 ], [ %327, %331 ], [ %327, %326 ], [ %352, %356 ], [ %352, %351 ], [ %260, %259 ], [ %272, %299 ], [ %197, %196 ], [ %209, %236 ]
  %804 = phi i32 [ 3, %391 ], [ 3, %413 ], [ 0, %452 ], [ 0, %801 ], [ 3, %370 ], [ 3, %194 ], [ 3, %257 ], [ 3, %320 ], [ 3, %322 ], [ 3, %345 ], [ 3, %347 ], [ 3, %397 ], [ 3, %400 ], [ 0, %425 ], [ 3, %243 ], [ 3, %241 ], [ 3, %306 ], [ 3, %304 ], [ 3, %331 ], [ 3, %326 ], [ 3, %356 ], [ 3, %351 ], [ 3, %259 ], [ 3, %299 ], [ 3, %196 ], [ 3, %236 ]
  %805 = load i8*, i8** %91, align 8
  br label %806

806:                                              ; preds = %802, %389
  %807 = phi i8* [ %805, %802 ], [ %387, %389 ]
  %808 = phi i8* [ %803, %802 ], [ %368, %389 ]
  %809 = phi i32 [ %804, %802 ], [ 3, %389 ]
  %810 = icmp eq i8* %807, null
  br i1 %810, label %813, label %811

811:                                              ; preds = %806
  %812 = ptrtoint i8* %807 to i64
  store i64 %812, i64* %99, align 8
  call void @_ZdlPv(i8* nonnull %807) #11
  br label %813

813:                                              ; preds = %806, %811
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #10
  %814 = load i8, i8* %97, align 1
  %815 = icmp slt i8 %814, 0
  br i1 %815, label %816, label %818

816:                                              ; preds = %813
  %817 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %817) #11
  br label %818

818:                                              ; preds = %813, %816
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #10
  %819 = load i8, i8* %94, align 1
  %820 = icmp slt i8 %819, 0
  br i1 %820, label %821, label %823

821:                                              ; preds = %818
  %822 = load i8*, i8** %174, align 8
  call void @_ZdlPv(i8* %822) #11
  br label %823

823:                                              ; preds = %818, %821
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #10
  %824 = icmp eq i32 %809, 0
  br i1 %824, label %175, label %825

825:                                              ; preds = %180, %178, %184, %823
  %826 = phi i8* [ %808, %823 ], [ %192, %184 ], [ %176, %178 ], [ %176, %180 ]
  %827 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %827, label %828, label %852

828:                                              ; preds = %825
  %829 = bitcast %"class.logging::LogMessage"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %829) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %27, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 401, i32 2) #10
  %830 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %27, i64 0, i32 2
  %831 = bitcast %"class.std::__1::basic_ostringstream"* %830 to %"class.std::__1::basic_ostream"*
  %832 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %831, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i64 19) #10
  %833 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %834 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %833, i64 0, i32 1, i32 0
  %835 = load i8, i8* %834, align 1
  %836 = icmp slt i8 %835, 0
  %837 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %838 = load i8*, i8** %837, align 8
  %839 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %840 = load i64, i64* %839, align 8
  %841 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %842 = zext i8 %835 to i64
  %843 = select i1 %836, i8* %838, i8* %841
  %844 = select i1 %836, i64 %840, i64 %842
  %845 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %832, i8* %843, i64 %844) #10
  %846 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %845, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i64 11) #10
  %847 = getelementptr inbounds i8, i8* %826, i64 -1
  %848 = ptrtoint i8* %847 to i64
  %849 = ptrtoint i8* %0 to i64
  %850 = sub i64 %848, %849
  %851 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %846, i64 %850) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %27) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %829) #10
  br label %852

852:                                              ; preds = %828, %825, %60, %58, %31, %29
  %853 = phi i32 [ 7, %29 ], [ 7, %31 ], [ 8, %58 ], [ 8, %60 ], [ 8, %825 ], [ 8, %828 ]
  call void @_ZN6policy23PolicyLoadStatusSampler3AddENS_16PolicyLoadStatusE(%"class.policy::PolicyLoadStatusSampler"* %4, i32 %853) #10
  br label %854

854:                                              ; preds = %175, %852
  %855 = phi i1 [ false, %852 ], [ true, %175 ]
  ret i1 %855
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base16MemoryMappedFileD1Ev(%"class.base::MemoryMappedFile"*) unnamed_addr #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base16MemoryMappedFile10InitializeERKNS_8FilePathENS0_6AccessE(%"class.base::MemoryMappedFile"*, %"class.base::FilePath"* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.1"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 9223372036854775791, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #12
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i16* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i16* %23 to i8*
  %25 = icmp ult i64 %1, 4611686018427387879
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 11
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #12
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 9223372036854775791, %22 ], [ 11, %26 ]
  %39 = shl i64 %38, 1
  %40 = tail call i8* @_Znwm(i64 %39) #11
  %41 = bitcast i8* %40 to i16*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 16
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 1
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i16, i16* %23, i64 %4
  %49 = bitcast i16* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -16
  %55 = sub i64 %4, %54
  %56 = getelementptr i16, i16* %23, i64 %54
  %57 = getelementptr i16, i16* %41, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %23, i64 %66
  %69 = getelementptr i16, i16* %41, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !2
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !2
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !5, !noalias !2
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !5, !noalias !2
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %23, i64 %78
  %80 = getelementptr i16, i16* %41, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !2
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !2
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !5, !noalias !2
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !5, !noalias !2
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %23, i64 %89
  %91 = getelementptr i16, i16* %41, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !2
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !2
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !5, !noalias !2
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !5, !noalias !2
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %23, i64 %100
  %102 = getelementptr i16, i16* %41, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !2
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !2
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !5, !noalias !2
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !5, !noalias !2
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !7

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %23, i64 %118
  %121 = getelementptr i16, i16* %41, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !2
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !2
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !5, !noalias !2
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !5, !noalias !2
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !9

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i16* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i16* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !11

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !12

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i16, i16* %41, i64 %4
  %194 = getelementptr inbounds i16, i16* %193, i64 %6
  %195 = getelementptr inbounds i16, i16* %23, i64 %4
  %196 = getelementptr inbounds i16, i16* %195, i64 %5
  %197 = icmp ult i64 %190, 16
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i16* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 1
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 1
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i16, i16* %23, i64 %3
  %208 = bitcast i16* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -16
  %214 = sub i64 %190, %213
  %215 = getelementptr i16, i16* %196, i64 %213
  %216 = getelementptr i16, i16* %194, i64 %213
  %217 = add i64 %213, -16
  %218 = lshr exact i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 48
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i16, i16* %196, i64 %225
  %228 = getelementptr i16, i16* %194, i64 %225
  %229 = bitcast i16* %227 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !13
  %231 = getelementptr i16, i16* %227, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !13
  %234 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !16, !noalias !13
  %235 = getelementptr i16, i16* %228, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !16, !noalias !13
  %237 = or i64 %225, 16
  %238 = getelementptr i16, i16* %196, i64 %237
  %239 = getelementptr i16, i16* %194, i64 %237
  %240 = bitcast i16* %238 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !13
  %242 = getelementptr i16, i16* %238, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !13
  %245 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %245, align 2, !alias.scope !16, !noalias !13
  %246 = getelementptr i16, i16* %239, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %247, align 2, !alias.scope !16, !noalias !13
  %248 = or i64 %225, 32
  %249 = getelementptr i16, i16* %196, i64 %248
  %250 = getelementptr i16, i16* %194, i64 %248
  %251 = bitcast i16* %249 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !13
  %253 = getelementptr i16, i16* %249, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !13
  %256 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !16, !noalias !13
  %257 = getelementptr i16, i16* %250, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !16, !noalias !13
  %259 = or i64 %225, 48
  %260 = getelementptr i16, i16* %196, i64 %259
  %261 = getelementptr i16, i16* %194, i64 %259
  %262 = bitcast i16* %260 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !13
  %264 = getelementptr i16, i16* %260, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !13
  %267 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !16, !noalias !13
  %268 = getelementptr i16, i16* %261, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !16, !noalias !13
  %270 = add i64 %225, 64
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !18

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i16, i16* %196, i64 %277
  %280 = getelementptr i16, i16* %194, i64 %277
  %281 = bitcast i16* %279 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !13
  %283 = getelementptr i16, i16* %279, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !13
  %286 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !16, !noalias !13
  %287 = getelementptr i16, i16* %280, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !16, !noalias !13
  %289 = add i64 %277, 16
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !19

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i16* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i16* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i16* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i16* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i16, i16* %303, align 2
  store i16 %306, i16* %304, align 2
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i16, i16* %304, i64 1
  %309 = getelementptr inbounds i16, i16* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !20

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i16* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i16* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i16* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i16* [ %344, %317 ], [ %315, %312 ]
  %321 = load i16, i16* %319, align 2
  store i16 %321, i16* %320, align 2
  %322 = getelementptr inbounds i16, i16* %320, i64 1
  %323 = getelementptr inbounds i16, i16* %319, i64 1
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %320, i64 2
  %326 = getelementptr inbounds i16, i16* %319, i64 2
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %320, i64 3
  %329 = getelementptr inbounds i16, i16* %319, i64 3
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %320, i64 4
  %332 = getelementptr inbounds i16, i16* %319, i64 4
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %320, i64 5
  %335 = getelementptr inbounds i16, i16* %319, i64 5
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %320, i64 6
  %338 = getelementptr inbounds i16, i16* %319, i64 6
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %320, i64 7
  %341 = getelementptr inbounds i16, i16* %319, i64 7
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i16, i16* %320, i64 8
  %345 = getelementptr inbounds i16, i16* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !21

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 10
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #11
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16*, i64, i16*, i64, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.39"* sret, i16*, i64, i16*, i64, i32, i32) local_unnamed_addr #2

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.policy::RegistryDict"* @_ZN6policy12RegistryDict6GetKeyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::RegistryDict"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN6policy12RegistryDictC1Ev(%"class.policy::RegistryDict"*) unnamed_addr #2

declare void @_ZN6policy12RegistryDict6SetKeyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.policy::RegistryDict"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.policy::RegistryDict"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

declare void @_ZN6policy12RegistryDict8SetValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrIN4base5ValueENS1_14default_deleteISC_EEEE(%"class.policy::RegistryDict"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Value"*) local_unnamed_addr #2

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_121DecodePRegStringValueERKNSt3__16vectorIhNS0_9allocatorIhEEEEPNS0_12basic_stringIcNS0_11char_traitsIcEENS2_IcEEEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"*) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string.1", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = lshr i64 %11, 1
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %10 to i16*
  br i1 %13, label %15, label %26

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %23, align 8
  br label %136

24:                                               ; preds = %15
  %25 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  store i8 0, i8* %25, align 1
  store i8 0, i8* %17, align 1
  br label %136

26:                                               ; preds = %2
  %27 = bitcast %"class.std::__1::basic_string.1"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #10
  %31 = getelementptr inbounds i16, i16* %14, i64 %12
  %32 = getelementptr inbounds i16, i16* %31, i64 -1
  %33 = icmp eq i16* %32, %14
  %34 = bitcast %"class.std::__1::basic_string.1"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br i1 %33, label %35, label %37

35:                                               ; preds = %26
  %36 = bitcast %"class.std::__1::basic_string.1"* %3 to i16*
  br label %76

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  %39 = bitcast %"class.std::__1::basic_string.1"* %3 to i16*
  br label %40

40:                                               ; preds = %66, %37
  %41 = phi i8 [ 0, %37 ], [ %72, %66 ]
  %42 = phi i16* [ %14, %37 ], [ %70, %66 ]
  %43 = load i16, i16* %42, align 2
  %44 = icmp slt i8 %41, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %40
  %46 = zext i8 %41 to i64
  br label %52

47:                                               ; preds = %40
  %48 = load i64, i64* %30, align 8
  %49 = and i64 %48, 9223372036854775807
  %50 = add nsw i64 %49, -1
  %51 = load i64, i64* %29, align 8
  br label %52

52:                                               ; preds = %47, %45
  %53 = phi i64 [ 10, %45 ], [ %50, %47 ]
  %54 = phi i64 [ %46, %45 ], [ %51, %47 ]
  %55 = icmp eq i64 %54, %53
  br i1 %55, label %56, label %59

56:                                               ; preds = %52
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.1"* nonnull %3, i64 %53, i64 1, i64 %53, i64 %53, i64 0, i64 0) #10
  %57 = load i8, i8* %38, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %63, label %60

59:                                               ; preds = %52
  br i1 %44, label %63, label %60

60:                                               ; preds = %59, %56
  %61 = trunc i64 %54 to i8
  %62 = add i8 %61, 1
  store i8 %62, i8* %38, align 1
  br label %66

63:                                               ; preds = %59, %56
  %64 = load i16*, i16** %28, align 8
  %65 = add i64 %54, 1
  store i64 %65, i64* %29, align 8
  br label %66

66:                                               ; preds = %63, %60
  %67 = phi i16* [ %39, %60 ], [ %64, %63 ]
  %68 = getelementptr inbounds i16, i16* %67, i64 %54
  store i16 %43, i16* %68, align 2
  %69 = getelementptr inbounds i16, i16* %68, i64 1
  store i16 0, i16* %69, align 2
  %70 = getelementptr inbounds i16, i16* %42, i64 1
  %71 = icmp eq i16* %70, %32
  %72 = load i8, i8* %38, align 1
  br i1 %71, label %73, label %40

73:                                               ; preds = %66
  %74 = load i16*, i16** %28, align 8
  %75 = load i64, i64* %29, align 8
  br label %76

76:                                               ; preds = %35, %73
  %77 = phi i16* [ %36, %35 ], [ %39, %73 ]
  %78 = phi i64 [ 0, %35 ], [ %75, %73 ]
  %79 = phi i16* [ null, %35 ], [ %74, %73 ]
  %80 = phi i8 [ 0, %35 ], [ %72, %73 ]
  %81 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #10
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  %83 = icmp slt i8 %80, 0
  %84 = select i1 %83, i16* %79, i16* %77
  %85 = zext i8 %80 to i64
  %86 = select i1 %83, i64 %78, i64 %85
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %4, i16* %84, i64 %86) #10
  %87 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %76
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #11
  br label %94

94:                                               ; preds = %91, %76
  %95 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* nonnull align 8 %81, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #10
  %96 = load i8, i8* %88, align 1
  %97 = icmp slt i8 %96, 0
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = select i1 %97, i8* %99, i8* %95
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = zext i8 %96 to i64
  %104 = select i1 %97, i64 %102, i64 %103
  %105 = call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %100, i64 %104) #10
  br i1 %105, label %128, label %106

106:                                              ; preds = %94
  %107 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %107, label %108, label %122

108:                                              ; preds = %106
  %109 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %109) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 151, i32 2) #10
  %110 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %111 = bitcast %"class.std::__1::basic_ostringstream"* %110 to %"class.std::__1::basic_ostream"*
  %112 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %111, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0), i64 8) #10
  %113 = load i8, i8* %88, align 1
  %114 = icmp slt i8 %113, 0
  %115 = load i8*, i8** %98, align 8
  %116 = load i64, i64* %101, align 8
  %117 = zext i8 %113 to i64
  %118 = select i1 %114, i8* %115, i8* %95
  %119 = select i1 %114, i64 %116, i64 %117
  %120 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %112, i8* %118, i64 %119) #10
  %121 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %120, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i64 0, i64 0), i64 28) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %109) #10
  br label %122

122:                                              ; preds = %106, %108
  %123 = load i8, i8* %88, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %122
  %126 = load i8*, i8** %98, align 8
  store i8 0, i8* %126, align 1
  store i64 0, i64* %101, align 8
  br label %128

127:                                              ; preds = %122
  store i8 0, i8* %95, align 1
  store i8 0, i8* %88, align 1
  br label %128

128:                                              ; preds = %127, %125, %94
  %129 = phi i1 [ true, %94 ], [ false, %125 ], [ false, %127 ]
  %130 = load i8, i8* %82, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %128
  %133 = bitcast %"class.std::__1::basic_string.1"* %3 to i8**
  %134 = load i8*, i8** %133, align 8
  call void @_ZdlPv(i8* %134) #11
  br label %135

135:                                              ; preds = %128, %132
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  br label %136

136:                                              ; preds = %24, %20, %135
  %137 = phi i1 [ %129, %135 ], [ true, %20 ], [ true, %24 ]
  ret i1 %137
}

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.77"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN6policy12RegistryDict11RemoveValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::RegistryDict"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.policy::RegistryDict"* @_ZN6policy12RegistryDict9RemoveKeyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::RegistryDict"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN6policy12RegistryDict11ClearValuesEv(%"class.policy::RegistryDict"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

declare void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #8

declare void @_ZN4base5ValueC1Ei(%"class.base::Value"*, i32) unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6policy12RegistryDictD1Ev(%"class.policy::RegistryDict"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !22
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #10
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #12
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #11
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #10
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #10
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #11
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.8"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string.1"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #12
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string.1"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #12
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #12
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #11
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !23
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !23
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !26, !noalias !23
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !26, !noalias !23
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !23
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !23
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !26, !noalias !23
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !26, !noalias !23
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !23
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !23
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !26, !noalias !23
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !26, !noalias !23
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !23
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !23
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !26, !noalias !23
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !26, !noalias !23
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !28

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !23
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !23
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !26, !noalias !23
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !26, !noalias !23
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !29

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !30

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !31

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{i8 0, i8 2}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !8}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !10}
!31 = distinct !{!31, !8}
