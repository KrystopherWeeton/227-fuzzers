; ModuleID = '../../third_party/libxml/src/globals.c'
source_filename = "../../third_party/libxml/src/globals.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._xmlMutex = type opaque
%struct._xmlNode = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNs*, i8*, %struct._xmlAttr*, %struct._xmlNs*, i8*, i16, i16 }
%struct._xmlDoc = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i32, i32, %struct._xmlDtd*, %struct._xmlDtd*, %struct._xmlNs*, i8*, i8*, i8*, i8*, i8*, i32, %struct._xmlDict*, i8*, i32, i32 }
%struct._xmlDtd = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct._xmlDict = type opaque
%struct._xmlAttr = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlAttr*, %struct._xmlAttr*, %struct._xmlDoc*, %struct._xmlNs*, i32, i8* }
%struct._xmlNs = type { %struct._xmlNs*, i32, i8*, i8*, i8*, %struct._xmlDoc* }
%struct._xmlParserInputBuffer = type { i8*, i32 (i8*, i8*, i32)*, i32 (i8*)*, %struct._xmlCharEncodingHandler*, %struct._xmlBuf*, %struct._xmlBuf*, i32, i32, i64 }
%struct._xmlCharEncodingHandler = type { i8*, i32 (i8*, i32*, i8*, i32*)*, i32 (i8*, i32*, i8*, i32*)*, %struct._uconv_t*, %struct._uconv_t* }
%struct._uconv_t = type { %struct.UConverter*, %struct.UConverter*, [1024 x i16], i16*, i16* }
%struct.UConverter = type opaque
%struct._xmlBuf = type opaque
%struct._xmlOutputBuffer = type { i8*, i32 (i8*, i8*, i32)*, i32 (i8*)*, %struct._xmlCharEncodingHandler*, %struct._xmlBuf*, %struct._xmlBuf*, i32, i32 }
%struct._xmlError = type { i32, i32, i8*, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, i8* }
%struct._xmlSAXHandlerV1 = type { void (i8*, i8*, i8*, i8*)*, i32 (i8*)*, i32 (i8*)*, i32 (i8*)*, %struct._xmlParserInput* (i8*, i8*, i8*)*, %struct._xmlEntity* (i8*, i8*)*, void (i8*, i8*, i32, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i32, i32, i8*, %struct._xmlEnumeration*)*, void (i8*, i8*, i32, %struct._xmlElementContent*)*, void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, %struct._xmlSAXLocator*)*, void (i8*)*, void (i8*)*, void (i8*, i8*, i8**)*, void (i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*, ...)*, void (i8*, i8*, ...)*, void (i8*, i8*, ...)*, %struct._xmlEntity* (i8*, i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*)*, i32 }
%struct._xmlParserInput = type { %struct._xmlParserInputBuffer*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, i64, void (i8*)*, i8*, i8*, i32, i32 }
%struct._xmlEnumeration = type { %struct._xmlEnumeration*, i8* }
%struct._xmlElementContent = type { i32, i32, i8*, %struct._xmlElementContent*, %struct._xmlElementContent*, %struct._xmlElementContent*, i8* }
%struct._xmlSAXLocator = type { i8* (i8*)*, i8* (i8*)*, i32 (i8*)*, i32 (i8*)* }
%struct._xmlEntity = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDtd*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i8*, i8*, i32, i32, i8*, i8*, %struct._xmlEntity*, i8*, i32, i32, i32 }
%struct._xmlGlobalState = type { i8*, %struct._xmlSAXLocator, %struct._xmlSAXHandlerV1, %struct._xmlSAXHandlerV1, %struct._xmlSAXHandlerV1, void (i8*)*, i8* (i64)*, i8* (i8*)*, i8* (i8*, i64)*, void (i8*, i8*, ...)*, void (i8*, %struct._xmlError*)*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, void (%struct._xmlNode*)*, void (%struct._xmlNode*)*, i8* (i64)*, %struct._xmlError, %struct._xmlParserInputBuffer* (i8*, i32)*, %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)*, i8* }

@xmlThrDefMutex = internal unnamed_addr global %struct._xmlMutex* null, align 8
@xmlFree = hidden local_unnamed_addr global void (i8*)* @free, align 8
@xmlMalloc = hidden local_unnamed_addr global i8* (i64)* @malloc, align 8
@xmlMallocAtomic = hidden local_unnamed_addr global i8* (i64)* @malloc, align 8
@xmlRealloc = hidden local_unnamed_addr global i8* (i8*, i64)* @realloc, align 8
@xmlMemStrdup = hidden local_unnamed_addr global i8* (i8*)* @xmlPosixStrdup, align 8
@.str = private unnamed_addr constant [6 x i8] c"20912\00", align 1
@xmlParserVersion = hidden global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), align 8
@xmlBufferAllocScheme = hidden global i32 1, align 4
@xmlDefaultBufferSize = hidden global i32 4096, align 4
@oldXMLWDcompatibility = hidden global i32 0, align 4
@xmlParserDebugEntities = hidden global i32 0, align 4
@xmlDoValidityCheckingDefaultValue = hidden global i32 0, align 4
@xmlGetWarningsDefaultValue = hidden global i32 1, align 4
@xmlLoadExtDtdDefaultValue = hidden global i32 0, align 4
@xmlPedanticParserDefaultValue = hidden global i32 0, align 4
@xmlLineNumbersDefaultValue = hidden global i32 0, align 4
@xmlKeepBlanksDefaultValue = hidden global i32 1, align 4
@xmlSubstituteEntitiesDefaultValue = hidden global i32 0, align 4
@xmlRegisterNodeDefaultValue = hidden global void (%struct._xmlNode*)* null, align 8
@xmlDeregisterNodeDefaultValue = hidden global void (%struct._xmlNode*)* null, align 8
@xmlParserInputBufferCreateFilenameValue = hidden global %struct._xmlParserInputBuffer* (i8*, i32)* null, align 8
@xmlOutputBufferCreateFilenameValue = hidden global %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)* null, align 8
@xmlGenericError = hidden global void (i8*, i8*, ...)* @xmlGenericErrorDefaultFunc, align 8
@xmlStructuredError = hidden global void (i8*, %struct._xmlError*)* null, align 8
@xmlGenericErrorContext = hidden global i8* null, align 8
@xmlStructuredErrorContext = hidden global i8* null, align 8
@xmlIndentTreeOutput = hidden global i32 1, align 4
@.str.1 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@xmlTreeIndentString = hidden global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), align 8
@xmlSaveNoEmptyTags = hidden global i32 0, align 4
@xmlDefaultSAXHandler = hidden global %struct._xmlSAXHandlerV1 { void (i8*, i8*, i8*, i8*)* @xmlSAX2InternalSubset, i32 (i8*)* @xmlSAX2IsStandalone, i32 (i8*)* @xmlSAX2HasInternalSubset, i32 (i8*)* @xmlSAX2HasExternalSubset, %struct._xmlParserInput* (i8*, i8*, i8*)* @xmlSAX2ResolveEntity, %struct._xmlEntity* (i8*, i8*)* @xmlSAX2GetEntity, void (i8*, i8*, i32, i8*, i8*, i8*)* @xmlSAX2EntityDecl, void (i8*, i8*, i8*, i8*)* @xmlSAX2NotationDecl, void (i8*, i8*, i8*, i32, i32, i8*, %struct._xmlEnumeration*)* @xmlSAX2AttributeDecl, void (i8*, i8*, i32, %struct._xmlElementContent*)* @xmlSAX2ElementDecl, void (i8*, i8*, i8*, i8*, i8*)* @xmlSAX2UnparsedEntityDecl, void (i8*, %struct._xmlSAXLocator*)* @xmlSAX2SetDocumentLocator, void (i8*)* @xmlSAX2StartDocument, void (i8*)* @xmlSAX2EndDocument, void (i8*, i8*, i8**)* @xmlSAX2StartElement, void (i8*, i8*)* @xmlSAX2EndElement, void (i8*, i8*)* @xmlSAX2Reference, void (i8*, i8*, i32)* @xmlSAX2Characters, void (i8*, i8*, i32)* @xmlSAX2Characters, void (i8*, i8*, i8*)* @xmlSAX2ProcessingInstruction, void (i8*, i8*)* @xmlSAX2Comment, void (i8*, i8*, ...)* @xmlParserWarning, void (i8*, i8*, ...)* @xmlParserError, void (i8*, i8*, ...)* @xmlParserError, %struct._xmlEntity* (i8*, i8*)* @xmlSAX2GetParameterEntity, void (i8*, i8*, i32)* @xmlSAX2CDataBlock, void (i8*, i8*, i8*, i8*)* @xmlSAX2ExternalSubset, i32 0 }, align 8
@xmlDefaultSAXLocator = hidden global %struct._xmlSAXLocator { i8* (i8*)* @xmlSAX2GetPublicId, i8* (i8*)* @xmlSAX2GetSystemId, i32 (i8*)* @xmlSAX2GetLineNumber, i32 (i8*)* @xmlSAX2GetColumnNumber }, align 8
@htmlDefaultSAXHandler = hidden global %struct._xmlSAXHandlerV1 { void (i8*, i8*, i8*, i8*)* @xmlSAX2InternalSubset, i32 (i8*)* null, i32 (i8*)* null, i32 (i8*)* null, %struct._xmlParserInput* (i8*, i8*, i8*)* null, %struct._xmlEntity* (i8*, i8*)* @xmlSAX2GetEntity, void (i8*, i8*, i32, i8*, i8*, i8*)* null, void (i8*, i8*, i8*, i8*)* null, void (i8*, i8*, i8*, i32, i32, i8*, %struct._xmlEnumeration*)* null, void (i8*, i8*, i32, %struct._xmlElementContent*)* null, void (i8*, i8*, i8*, i8*, i8*)* null, void (i8*, %struct._xmlSAXLocator*)* @xmlSAX2SetDocumentLocator, void (i8*)* @xmlSAX2StartDocument, void (i8*)* @xmlSAX2EndDocument, void (i8*, i8*, i8**)* @xmlSAX2StartElement, void (i8*, i8*)* @xmlSAX2EndElement, void (i8*, i8*)* null, void (i8*, i8*, i32)* @xmlSAX2Characters, void (i8*, i8*, i32)* @xmlSAX2IgnorableWhitespace, void (i8*, i8*, i8*)* @xmlSAX2ProcessingInstruction, void (i8*, i8*)* @xmlSAX2Comment, void (i8*, i8*, ...)* @xmlParserWarning, void (i8*, i8*, ...)* @xmlParserError, void (i8*, i8*, ...)* @xmlParserError, %struct._xmlEntity* (i8*, i8*)* @xmlSAX2GetParameterEntity, void (i8*, i8*, i32)* @xmlSAX2CDataBlock, void (i8*, i8*, i8*, i8*)* null, i32 0 }, align 8
@xmlBufferAllocSchemeThrDef = internal unnamed_addr global i32 1, align 4
@xmlDefaultBufferSizeThrDef = internal unnamed_addr global i32 4096, align 4
@xmlDoValidityCheckingDefaultValueThrDef = internal unnamed_addr global i32 0, align 4
@xmlGetWarningsDefaultValueThrDef = internal unnamed_addr global i32 1, align 4
@xmlIndentTreeOutputThrDef = internal unnamed_addr global i32 1, align 4
@xmlTreeIndentStringThrDef = internal unnamed_addr global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), align 8
@xmlKeepBlanksDefaultValueThrDef = internal unnamed_addr global i32 1, align 4
@xmlLineNumbersDefaultValueThrDef = internal unnamed_addr global i32 0, align 4
@xmlLoadExtDtdDefaultValueThrDef = internal unnamed_addr global i32 0, align 4
@xmlParserDebugEntitiesThrDef = internal unnamed_addr global i32 0, align 4
@xmlPedanticParserDefaultValueThrDef = internal unnamed_addr global i32 0, align 4
@xmlSaveNoEmptyTagsThrDef = internal unnamed_addr global i32 0, align 4
@xmlSubstituteEntitiesDefaultValueThrDef = internal unnamed_addr global i32 0, align 4
@xmlGenericErrorThrDef = internal unnamed_addr global void (i8*, i8*, ...)* @xmlGenericErrorDefaultFunc, align 8
@xmlStructuredErrorThrDef = internal unnamed_addr global void (i8*, %struct._xmlError*)* null, align 8
@xmlGenericErrorContextThrDef = internal unnamed_addr global i8* null, align 8
@xmlStructuredErrorContextThrDef = internal unnamed_addr global i8* null, align 8
@xmlRegisterNodeDefaultValueThrDef = internal unnamed_addr global void (%struct._xmlNode*)* null, align 8
@xmlDeregisterNodeDefaultValueThrDef = internal unnamed_addr global void (%struct._xmlNode*)* null, align 8
@xmlParserInputBufferCreateFilenameValueThrDef = internal unnamed_addr global %struct._xmlParserInputBuffer* (i8*, i32)* null, align 8
@xmlOutputBufferCreateFilenameValueThrDef = internal unnamed_addr global %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)* null, align 8
@__xmlRegisterCallbacks = external local_unnamed_addr global i32, align 4
@xmlLastError = common hidden global %struct._xmlError zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @xmlInitGlobals() local_unnamed_addr #0 {
  %1 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  %2 = icmp eq %struct._xmlMutex* %1, null
  br i1 %2, label %3, label %5

3:                                                ; preds = %0
  %4 = tail call %struct._xmlMutex* @xmlNewMutex() #7
  store %struct._xmlMutex* %4, %struct._xmlMutex** @xmlThrDefMutex, align 8
  br label %5

5:                                                ; preds = %3, %0
  ret void
}

declare %struct._xmlMutex* @xmlNewMutex() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @xmlCleanupGlobals() local_unnamed_addr #0 {
  %1 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  %2 = icmp eq %struct._xmlMutex* %1, null
  br i1 %2, label %4, label %3

3:                                                ; preds = %0
  tail call void @xmlFreeMutex(%struct._xmlMutex* nonnull %1) #7
  store %struct._xmlMutex* null, %struct._xmlMutex** @xmlThrDefMutex, align 8
  br label %4

4:                                                ; preds = %0, %3
  tail call void @__xmlGlobalInitMutexDestroy() #7
  ret void
}

declare void @xmlFreeMutex(%struct._xmlMutex*) local_unnamed_addr #1

declare void @__xmlGlobalInitMutexDestroy() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) #3

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) #2

; Function Attrs: nounwind ssp uwtable
define internal i8* @xmlPosixStrdup(i8*) #0 {
  %2 = tail call i8* @xmlCharStrdup(i8* %0) #7
  ret i8* %2
}

declare void @xmlGenericErrorDefaultFunc(i8*, i8*, ...) #1

declare void @xmlSAX2InternalSubset(i8*, i8*, i8*, i8*) #1

declare i32 @xmlSAX2IsStandalone(i8*) #1

declare i32 @xmlSAX2HasInternalSubset(i8*) #1

declare i32 @xmlSAX2HasExternalSubset(i8*) #1

declare %struct._xmlParserInput* @xmlSAX2ResolveEntity(i8*, i8*, i8*) #1

declare %struct._xmlEntity* @xmlSAX2GetEntity(i8*, i8*) #1

declare void @xmlSAX2EntityDecl(i8*, i8*, i32, i8*, i8*, i8*) #1

declare void @xmlSAX2NotationDecl(i8*, i8*, i8*, i8*) #1

declare void @xmlSAX2AttributeDecl(i8*, i8*, i8*, i32, i32, i8*, %struct._xmlEnumeration*) #1

declare void @xmlSAX2ElementDecl(i8*, i8*, i32, %struct._xmlElementContent*) #1

declare void @xmlSAX2UnparsedEntityDecl(i8*, i8*, i8*, i8*, i8*) #1

declare void @xmlSAX2SetDocumentLocator(i8*, %struct._xmlSAXLocator*) #1

declare void @xmlSAX2StartDocument(i8*) #1

declare void @xmlSAX2EndDocument(i8*) #1

declare void @xmlSAX2StartElement(i8*, i8*, i8**) #1

declare void @xmlSAX2EndElement(i8*, i8*) #1

declare void @xmlSAX2Reference(i8*, i8*) #1

declare void @xmlSAX2Characters(i8*, i8*, i32) #1

declare void @xmlSAX2ProcessingInstruction(i8*, i8*, i8*) #1

declare void @xmlSAX2Comment(i8*, i8*) #1

declare void @xmlParserWarning(i8*, i8*, ...) #1

declare void @xmlParserError(i8*, i8*, ...) #1

declare %struct._xmlEntity* @xmlSAX2GetParameterEntity(i8*, i8*) #1

declare void @xmlSAX2CDataBlock(i8*, i8*, i32) #1

declare void @xmlSAX2ExternalSubset(i8*, i8*, i8*, i8*) #1

declare i8* @xmlSAX2GetPublicId(i8*) #1

declare i8* @xmlSAX2GetSystemId(i8*) #1

declare i32 @xmlSAX2GetLineNumber(i8*) #1

declare i32 @xmlSAX2GetColumnNumber(i8*) #1

declare void @xmlSAX2IgnorableWhitespace(i8*, i8*, i32) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @xmlInitializeGlobalState(%struct._xmlGlobalState*) local_unnamed_addr #0 {
  %2 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  %3 = icmp eq %struct._xmlMutex* %2, null
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  %5 = tail call %struct._xmlMutex* @xmlNewMutex() #7
  store %struct._xmlMutex* %5, %struct._xmlMutex** @xmlThrDefMutex, align 8
  br label %6

6:                                                ; preds = %4, %1
  %7 = phi %struct._xmlMutex* [ %5, %4 ], [ %2, %1 ]
  tail call void @xmlMutexLock(%struct._xmlMutex* %7) #7
  %8 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 12
  store i32 0, i32* %8, align 8
  %9 = load i32, i32* @xmlBufferAllocSchemeThrDef, align 4
  %10 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 13
  store i32 %9, i32* %10, align 4
  %11 = load i32, i32* @xmlDefaultBufferSizeThrDef, align 4
  %12 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 14
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 1, i32 0
  %14 = bitcast i8* (i8*)** %13 to <2 x i8* (i8*)*>*
  store <2 x i8* (i8*)*> <i8* (i8*)* @xmlSAX2GetPublicId, i8* (i8*)* @xmlSAX2GetSystemId>, <2 x i8* (i8*)*>* %14, align 8
  %15 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 1, i32 2
  %16 = bitcast i32 (i8*)** %15 to <2 x i32 (i8*)*>*
  store <2 x i32 (i8*)*> <i32 (i8*)* @xmlSAX2GetLineNumber, i32 (i8*)* @xmlSAX2GetColumnNumber>, <2 x i32 (i8*)*>* %16, align 8
  %17 = load i32, i32* @xmlDoValidityCheckingDefaultValueThrDef, align 4
  %18 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 16
  store i32 %17, i32* %18, align 8
  %19 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 5
  store void (i8*)* @free, void (i8*)** %19, align 8
  %20 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 6
  store i8* (i64)* @malloc, i8* (i64)** %20, align 8
  %21 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 28
  store i8* (i64)* @malloc, i8* (i64)** %21, align 8
  %22 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 8
  store i8* (i8*, i64)* @realloc, i8* (i8*, i64)** %22, align 8
  %23 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 7
  store i8* (i8*)* @xmlStrdup, i8* (i8*)** %23, align 8
  %24 = load i32, i32* @xmlGetWarningsDefaultValueThrDef, align 4
  %25 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 17
  store i32 %24, i32* %25, align 4
  %26 = load i32, i32* @xmlIndentTreeOutputThrDef, align 4
  %27 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 24
  store i32 %26, i32* %27, align 8
  %28 = load i64, i64* bitcast (i8** @xmlTreeIndentStringThrDef to i64*), align 8
  %29 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 25
  %30 = bitcast i8** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = load i32, i32* @xmlKeepBlanksDefaultValueThrDef, align 4
  %32 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 18
  store i32 %31, i32* %32, align 8
  %33 = load i32, i32* @xmlLineNumbersDefaultValueThrDef, align 4
  %34 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 19
  store i32 %33, i32* %34, align 4
  %35 = load i32, i32* @xmlLoadExtDtdDefaultValueThrDef, align 4
  %36 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 20
  store i32 %35, i32* %36, align 8
  %37 = load i32, i32* @xmlParserDebugEntitiesThrDef, align 4
  %38 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 21
  store i32 %37, i32* %38, align 4
  %39 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8** %39, align 8
  %40 = load i32, i32* @xmlPedanticParserDefaultValueThrDef, align 4
  %41 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 22
  store i32 %40, i32* %41, align 8
  %42 = load i32, i32* @xmlSaveNoEmptyTagsThrDef, align 4
  %43 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 23
  store i32 %42, i32* %43, align 4
  %44 = load i32, i32* @xmlSubstituteEntitiesDefaultValueThrDef, align 4
  %45 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 15
  store i32 %44, i32* %45, align 4
  %46 = load i64, i64* bitcast (void (i8*, i8*, ...)** @xmlGenericErrorThrDef to i64*), align 8
  %47 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 9
  %48 = bitcast void (i8*, i8*, ...)** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = load i64, i64* bitcast (void (i8*, %struct._xmlError*)** @xmlStructuredErrorThrDef to i64*), align 8
  %50 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 10
  %51 = bitcast void (i8*, %struct._xmlError*)** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = load i64, i64* bitcast (i8** @xmlGenericErrorContextThrDef to i64*), align 8
  %53 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 11
  %54 = bitcast i8** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = load i64, i64* bitcast (i8** @xmlStructuredErrorContextThrDef to i64*), align 8
  %56 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 32
  %57 = bitcast i8** %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = load i64, i64* bitcast (void (%struct._xmlNode*)** @xmlRegisterNodeDefaultValueThrDef to i64*), align 8
  %59 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 26
  %60 = bitcast void (%struct._xmlNode*)** %59 to i64*
  store i64 %58, i64* %60, align 8
  %61 = load i64, i64* bitcast (void (%struct._xmlNode*)** @xmlDeregisterNodeDefaultValueThrDef to i64*), align 8
  %62 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 27
  %63 = bitcast void (%struct._xmlNode*)** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = load i64, i64* bitcast (%struct._xmlParserInputBuffer* (i8*, i32)** @xmlParserInputBufferCreateFilenameValueThrDef to i64*), align 8
  %65 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 30
  %66 = bitcast %struct._xmlParserInputBuffer* (i8*, i32)** %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = load i64, i64* bitcast (%struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)** @xmlOutputBufferCreateFilenameValueThrDef to i64*), align 8
  %68 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 31
  %69 = bitcast %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)** %68 to i64*
  store i64 %67, i64* %69, align 8
  %70 = getelementptr inbounds %struct._xmlGlobalState, %struct._xmlGlobalState* %0, i64 0, i32 29
  %71 = bitcast %struct._xmlError* %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 88, i1 false)
  %72 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %72) #7
  ret void
}

declare void @xmlMutexLock(%struct._xmlMutex*) local_unnamed_addr #1

declare i8* @xmlStrdup(i8*) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @xmlMutexUnlock(%struct._xmlMutex*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @xmlThrDefSetGenericErrorFunc(i8*, void (i8*, i8*, ...)*) local_unnamed_addr #0 {
  %3 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %3) #7
  store i8* %0, i8** @xmlGenericErrorContextThrDef, align 8
  %4 = icmp eq void (i8*, i8*, ...)* %1, null
  %5 = select i1 %4, void (i8*, i8*, ...)* @xmlGenericErrorDefaultFunc, void (i8*, i8*, ...)* %1
  store void (i8*, i8*, ...)* %5, void (i8*, i8*, ...)** @xmlGenericErrorThrDef, align 8
  %6 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %6) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @xmlThrDefSetStructuredErrorFunc(i8*, void (i8*, %struct._xmlError*)*) local_unnamed_addr #0 {
  %3 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %3) #7
  store i8* %0, i8** @xmlStructuredErrorContextThrDef, align 8
  store void (i8*, %struct._xmlError*)* %1, void (i8*, %struct._xmlError*)** @xmlStructuredErrorThrDef, align 8
  %4 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %4) #7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void (%struct._xmlNode*)* @xmlRegisterNodeDefault(void (%struct._xmlNode*)*) local_unnamed_addr #5 {
  %2 = load void (%struct._xmlNode*)*, void (%struct._xmlNode*)** @xmlRegisterNodeDefaultValue, align 8
  store i32 1, i32* @__xmlRegisterCallbacks, align 4
  store void (%struct._xmlNode*)* %0, void (%struct._xmlNode*)** @xmlRegisterNodeDefaultValue, align 8
  ret void (%struct._xmlNode*)* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void (%struct._xmlNode*)* @xmlThrDefRegisterNodeDefault(void (%struct._xmlNode*)*) local_unnamed_addr #0 {
  %2 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %2) #7
  %3 = load void (%struct._xmlNode*)*, void (%struct._xmlNode*)** @xmlRegisterNodeDefaultValueThrDef, align 8
  store i32 1, i32* @__xmlRegisterCallbacks, align 4
  store void (%struct._xmlNode*)* %0, void (%struct._xmlNode*)** @xmlRegisterNodeDefaultValueThrDef, align 8
  %4 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %4) #7
  ret void (%struct._xmlNode*)* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void (%struct._xmlNode*)* @xmlDeregisterNodeDefault(void (%struct._xmlNode*)*) local_unnamed_addr #5 {
  %2 = load void (%struct._xmlNode*)*, void (%struct._xmlNode*)** @xmlDeregisterNodeDefaultValue, align 8
  store i32 1, i32* @__xmlRegisterCallbacks, align 4
  store void (%struct._xmlNode*)* %0, void (%struct._xmlNode*)** @xmlDeregisterNodeDefaultValue, align 8
  ret void (%struct._xmlNode*)* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void (%struct._xmlNode*)* @xmlThrDefDeregisterNodeDefault(void (%struct._xmlNode*)*) local_unnamed_addr #0 {
  %2 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %2) #7
  %3 = load void (%struct._xmlNode*)*, void (%struct._xmlNode*)** @xmlDeregisterNodeDefaultValueThrDef, align 8
  store i32 1, i32* @__xmlRegisterCallbacks, align 4
  store void (%struct._xmlNode*)* %0, void (%struct._xmlNode*)** @xmlDeregisterNodeDefaultValueThrDef, align 8
  %4 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %4) #7
  ret void (%struct._xmlNode*)* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlParserInputBuffer* (i8*, i32)* @xmlThrDefParserInputBufferCreateFilenameDefault(%struct._xmlParserInputBuffer* (i8*, i32)*) local_unnamed_addr #0 {
  %2 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %2) #7
  %3 = load %struct._xmlParserInputBuffer* (i8*, i32)*, %struct._xmlParserInputBuffer* (i8*, i32)** @xmlParserInputBufferCreateFilenameValueThrDef, align 8
  %4 = icmp eq %struct._xmlParserInputBuffer* (i8*, i32)* %3, null
  %5 = select i1 %4, %struct._xmlParserInputBuffer* (i8*, i32)* @__xmlParserInputBufferCreateFilename, %struct._xmlParserInputBuffer* (i8*, i32)* %3
  store %struct._xmlParserInputBuffer* (i8*, i32)* %0, %struct._xmlParserInputBuffer* (i8*, i32)** @xmlParserInputBufferCreateFilenameValueThrDef, align 8
  %6 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %6) #7
  ret %struct._xmlParserInputBuffer* (i8*, i32)* %5
}

declare %struct._xmlParserInputBuffer* @__xmlParserInputBufferCreateFilename(i8*, i32) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)* @xmlThrDefOutputBufferCreateFilenameDefault(%struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)*) local_unnamed_addr #0 {
  %2 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %2) #7
  %3 = load %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)*, %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)** @xmlOutputBufferCreateFilenameValueThrDef, align 8
  %4 = icmp eq %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)* %3, null
  %5 = select i1 %4, %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)* @__xmlOutputBufferCreateFilename, %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)* %3
  store %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)* %0, %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)** @xmlOutputBufferCreateFilenameValueThrDef, align 8
  %6 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %6) #7
  ret %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)* %5
}

declare %struct._xmlOutputBuffer* @__xmlOutputBufferCreateFilename(i8*, %struct._xmlCharEncodingHandler*, i32) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct._xmlSAXHandlerV1* @__htmlDefaultSAXHandler() local_unnamed_addr #6 {
  ret %struct._xmlSAXHandlerV1* @htmlDefaultSAXHandler
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct._xmlError* @__xmlLastError() local_unnamed_addr #6 {
  ret %struct._xmlError* @xmlLastError
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i32* @__oldXMLWDcompatibility() local_unnamed_addr #6 {
  ret i32* @oldXMLWDcompatibility
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i32* @__xmlBufferAllocScheme() local_unnamed_addr #6 {
  ret i32* @xmlBufferAllocScheme
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlThrDefBufferAllocScheme(i32) local_unnamed_addr #0 {
  %2 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %2) #7
  %3 = load i32, i32* @xmlBufferAllocSchemeThrDef, align 4
  store i32 %0, i32* @xmlBufferAllocSchemeThrDef, align 4
  %4 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %4) #7
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i32* @__xmlDefaultBufferSize() local_unnamed_addr #6 {
  ret i32* @xmlDefaultBufferSize
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlThrDefDefaultBufferSize(i32) local_unnamed_addr #0 {
  %2 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %2) #7
  %3 = load i32, i32* @xmlDefaultBufferSizeThrDef, align 4
  store i32 %0, i32* @xmlDefaultBufferSizeThrDef, align 4
  %4 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %4) #7
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct._xmlSAXHandlerV1* @__xmlDefaultSAXHandler() local_unnamed_addr #6 {
  ret %struct._xmlSAXHandlerV1* @xmlDefaultSAXHandler
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct._xmlSAXLocator* @__xmlDefaultSAXLocator() local_unnamed_addr #6 {
  ret %struct._xmlSAXLocator* @xmlDefaultSAXLocator
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i32* @__xmlDoValidityCheckingDefaultValue() local_unnamed_addr #6 {
  ret i32* @xmlDoValidityCheckingDefaultValue
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlThrDefDoValidityCheckingDefaultValue(i32) local_unnamed_addr #0 {
  %2 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %2) #7
  %3 = load i32, i32* @xmlDoValidityCheckingDefaultValueThrDef, align 4
  store i32 %0, i32* @xmlDoValidityCheckingDefaultValueThrDef, align 4
  %4 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %4) #7
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull void (i8*, i8*, ...)** @__xmlGenericError() local_unnamed_addr #6 {
  ret void (i8*, i8*, ...)** @xmlGenericError
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull void (i8*, %struct._xmlError*)** @__xmlStructuredError() local_unnamed_addr #6 {
  ret void (i8*, %struct._xmlError*)** @xmlStructuredError
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i8** @__xmlGenericErrorContext() local_unnamed_addr #6 {
  ret i8** @xmlGenericErrorContext
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i8** @__xmlStructuredErrorContext() local_unnamed_addr #6 {
  ret i8** @xmlStructuredErrorContext
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i32* @__xmlGetWarningsDefaultValue() local_unnamed_addr #6 {
  ret i32* @xmlGetWarningsDefaultValue
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlThrDefGetWarningsDefaultValue(i32) local_unnamed_addr #0 {
  %2 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %2) #7
  %3 = load i32, i32* @xmlGetWarningsDefaultValueThrDef, align 4
  store i32 %0, i32* @xmlGetWarningsDefaultValueThrDef, align 4
  %4 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %4) #7
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i32* @__xmlIndentTreeOutput() local_unnamed_addr #6 {
  ret i32* @xmlIndentTreeOutput
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlThrDefIndentTreeOutput(i32) local_unnamed_addr #0 {
  %2 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %2) #7
  %3 = load i32, i32* @xmlIndentTreeOutputThrDef, align 4
  store i32 %0, i32* @xmlIndentTreeOutputThrDef, align 4
  %4 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %4) #7
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i8** @__xmlTreeIndentString() local_unnamed_addr #6 {
  ret i8** @xmlTreeIndentString
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @xmlThrDefTreeIndentString(i8*) local_unnamed_addr #0 {
  %2 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %2) #7
  %3 = load i8*, i8** @xmlTreeIndentStringThrDef, align 8
  store i8* %0, i8** @xmlTreeIndentStringThrDef, align 8
  %4 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %4) #7
  ret i8* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i32* @__xmlKeepBlanksDefaultValue() local_unnamed_addr #6 {
  ret i32* @xmlKeepBlanksDefaultValue
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlThrDefKeepBlanksDefaultValue(i32) local_unnamed_addr #0 {
  %2 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %2) #7
  %3 = load i32, i32* @xmlKeepBlanksDefaultValueThrDef, align 4
  store i32 %0, i32* @xmlKeepBlanksDefaultValueThrDef, align 4
  %4 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %4) #7
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i32* @__xmlLineNumbersDefaultValue() local_unnamed_addr #6 {
  ret i32* @xmlLineNumbersDefaultValue
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlThrDefLineNumbersDefaultValue(i32) local_unnamed_addr #0 {
  %2 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %2) #7
  %3 = load i32, i32* @xmlLineNumbersDefaultValueThrDef, align 4
  store i32 %0, i32* @xmlLineNumbersDefaultValueThrDef, align 4
  %4 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %4) #7
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i32* @__xmlLoadExtDtdDefaultValue() local_unnamed_addr #6 {
  ret i32* @xmlLoadExtDtdDefaultValue
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlThrDefLoadExtDtdDefaultValue(i32) local_unnamed_addr #0 {
  %2 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %2) #7
  %3 = load i32, i32* @xmlLoadExtDtdDefaultValueThrDef, align 4
  store i32 %0, i32* @xmlLoadExtDtdDefaultValueThrDef, align 4
  %4 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %4) #7
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i32* @__xmlParserDebugEntities() local_unnamed_addr #6 {
  ret i32* @xmlParserDebugEntities
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlThrDefParserDebugEntities(i32) local_unnamed_addr #0 {
  %2 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %2) #7
  %3 = load i32, i32* @xmlParserDebugEntitiesThrDef, align 4
  store i32 %0, i32* @xmlParserDebugEntitiesThrDef, align 4
  %4 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %4) #7
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i8** @__xmlParserVersion() local_unnamed_addr #6 {
  ret i8** @xmlParserVersion
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i32* @__xmlPedanticParserDefaultValue() local_unnamed_addr #6 {
  ret i32* @xmlPedanticParserDefaultValue
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlThrDefPedanticParserDefaultValue(i32) local_unnamed_addr #0 {
  %2 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %2) #7
  %3 = load i32, i32* @xmlPedanticParserDefaultValueThrDef, align 4
  store i32 %0, i32* @xmlPedanticParserDefaultValueThrDef, align 4
  %4 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %4) #7
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i32* @__xmlSaveNoEmptyTags() local_unnamed_addr #6 {
  ret i32* @xmlSaveNoEmptyTags
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlThrDefSaveNoEmptyTags(i32) local_unnamed_addr #0 {
  %2 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %2) #7
  %3 = load i32, i32* @xmlSaveNoEmptyTagsThrDef, align 4
  store i32 %0, i32* @xmlSaveNoEmptyTagsThrDef, align 4
  %4 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %4) #7
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i32* @__xmlSubstituteEntitiesDefaultValue() local_unnamed_addr #6 {
  ret i32* @xmlSubstituteEntitiesDefaultValue
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlThrDefSubstituteEntitiesDefaultValue(i32) local_unnamed_addr #0 {
  %2 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %2) #7
  %3 = load i32, i32* @xmlSubstituteEntitiesDefaultValueThrDef, align 4
  store i32 %0, i32* @xmlSubstituteEntitiesDefaultValueThrDef, align 4
  %4 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlThrDefMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %4) #7
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull void (%struct._xmlNode*)** @__xmlRegisterNodeDefaultValue() local_unnamed_addr #6 {
  ret void (%struct._xmlNode*)** @xmlRegisterNodeDefaultValue
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull void (%struct._xmlNode*)** @__xmlDeregisterNodeDefaultValue() local_unnamed_addr #6 {
  ret void (%struct._xmlNode*)** @xmlDeregisterNodeDefaultValue
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct._xmlParserInputBuffer* (i8*, i32)** @__xmlParserInputBufferCreateFilenameValue() local_unnamed_addr #6 {
  ret %struct._xmlParserInputBuffer* (i8*, i32)** @xmlParserInputBufferCreateFilenameValue
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)** @__xmlOutputBufferCreateFilenameValue() local_unnamed_addr #6 {
  ret %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)** @xmlOutputBufferCreateFilenameValue
}

declare i8* @xmlCharStrdup(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
