; ModuleID = '../../third_party/libjingle_xmpp/xmllite/xmlparser.cc'
source_filename = "../../third_party/libjingle_xmpp/xmllite/xmlparser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.jingle_xmpp::XmlParser" = type <{ i32 (...)**, %"class.jingle_xmpp::XmlParser::ParseContext", %struct.XML_ParserStruct*, %"class.jingle_xmpp::XmlParseHandler"*, i8, [7 x i8] }>
%"class.jingle_xmpp::XmlParser::ParseContext" = type { %"class.jingle_xmpp::XmlParseContext", %"class.jingle_xmpp::XmlnsStack", i32, i64, i64, i64 }
%"class.jingle_xmpp::XmlParseContext" = type { i32 (...)** }
%"class.jingle_xmpp::XmlnsStack" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector" = type opaque
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::vector.4"* }
%"class.std::__1::vector.4" = type opaque
%struct.XML_ParserStruct = type opaque
%"class.jingle_xmpp::XmlParseHandler" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.jingle_xmpp::QName" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"struct.std::__1::pair" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>

$_ZN11jingle_xmpp9XmlParser12ParseContext10RaiseErrorE9XML_Error = comdat any

@_ZTVN11jingle_xmpp9XmlParserE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.jingle_xmpp::XmlParser"*)* @_ZN11jingle_xmpp9XmlParserD2Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmlParser"*)* @_ZN11jingle_xmpp9XmlParserD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"1.0\00", align 1
@_ZTVN11jingle_xmpp9XmlParser12ParseContextE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.jingle_xmpp::XmlParser::ParseContext"*)* @_ZN11jingle_xmpp9XmlParser12ParseContextD2Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmlParser::ParseContext"*)* @_ZN11jingle_xmpp9XmlParser12ParseContextD0Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::QName"*, %"class.jingle_xmpp::XmlParser::ParseContext"*, i8*, i1)* @_ZN11jingle_xmpp9XmlParser12ParseContext12ResolveQNameEPKcb to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmlParser::ParseContext"*, i32)* @_ZN11jingle_xmpp9XmlParser12ParseContext10RaiseErrorE9XML_Error to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmlParser::ParseContext"*, i64*, i64*, i64*)* @_ZN11jingle_xmpp9XmlParser12ParseContext11GetPositionEPmS2_S2_ to i8*)] }, align 8
@_ZN11jingle_xmpp9STR_EMPTYE = external constant [0 x i8], align 1

@_ZN11jingle_xmpp9XmlParserC1EPNS_15XmlParseHandlerE = hidden unnamed_addr alias void (%"class.jingle_xmpp::XmlParser"*, %"class.jingle_xmpp::XmlParseHandler"*), void (%"class.jingle_xmpp::XmlParser"*, %"class.jingle_xmpp::XmlParseHandler"*)* @_ZN11jingle_xmpp9XmlParserC2EPNS_15XmlParseHandlerE
@_ZN11jingle_xmpp9XmlParserD1Ev = hidden unnamed_addr alias void (%"class.jingle_xmpp::XmlParser"*), void (%"class.jingle_xmpp::XmlParser"*)* @_ZN11jingle_xmpp9XmlParserD2Ev
@_ZN11jingle_xmpp9XmlParser12ParseContextC1Ev = hidden unnamed_addr alias void (%"class.jingle_xmpp::XmlParser::ParseContext"*), void (%"class.jingle_xmpp::XmlParser::ParseContext"*)* @_ZN11jingle_xmpp9XmlParser12ParseContextC2Ev
@_ZN11jingle_xmpp9XmlParser12ParseContextD1Ev = hidden unnamed_addr alias void (%"class.jingle_xmpp::XmlParser::ParseContext"*), void (%"class.jingle_xmpp::XmlParser::ParseContext"*)* @_ZN11jingle_xmpp9XmlParser12ParseContextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp9XmlParserC2EPNS_15XmlParseHandlerE(%"class.jingle_xmpp::XmlParser"*, %"class.jingle_xmpp::XmlParseHandler"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.jingle_xmpp::XmlParser"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN11jingle_xmpp9XmlParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN11jingle_xmpp9XmlParser12ParseContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 1
  tail call void @_ZN11jingle_xmpp10XmlnsStackC1Ev(%"class.jingle_xmpp::XmlnsStack"* %4) #10
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 2
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 3
  %7 = bitcast i64* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #10
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 3
  store %"class.jingle_xmpp::XmlParseHandler"* %1, %"class.jingle_xmpp::XmlParseHandler"** %8, align 8
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 4
  store i8 0, i8* %9, align 8
  %10 = tail call %struct.XML_ParserStruct* @XML_ParserCreate(i8* null) #10
  %11 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 2
  store %struct.XML_ParserStruct* %10, %struct.XML_ParserStruct** %11, align 8
  %12 = bitcast %"class.jingle_xmpp::XmlParser"* %0 to i8*
  tail call void @XML_SetUserData(%struct.XML_ParserStruct* %10, i8* %12) #10
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %11, align 8
  tail call void @XML_SetElementHandler(%struct.XML_ParserStruct* %13, void (i8*, i8*, i8**)* nonnull @_ZN11jingle_xmppL20StartElementCallbackEPvPKcPS2_, void (i8*, i8*)* nonnull @_ZN11jingle_xmppL18EndElementCallbackEPvPKc) #10
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %11, align 8
  tail call void @XML_SetCharacterDataHandler(%struct.XML_ParserStruct* %14, void (i8*, i8*, i32)* nonnull @_ZN11jingle_xmppL21CharacterDataCallbackEPvPKci) #10
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %11, align 8
  tail call void @XML_SetXmlDeclHandler(%struct.XML_ParserStruct* %15, void (i8*, i8*, i8*, i32)* nonnull @_ZN11jingle_xmppL15XmlDeclCallbackEPvPKcS2_i) #10
  ret void
}

declare %struct.XML_ParserStruct* @XML_ParserCreate(i8*) local_unnamed_addr #1

declare void @XML_SetUserData(%struct.XML_ParserStruct*, i8*) local_unnamed_addr #1

declare void @XML_SetElementHandler(%struct.XML_ParserStruct*, void (i8*, i8*, i8**)*, void (i8*, i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN11jingle_xmppL20StartElementCallbackEPvPKcPS2_(i8*, i8*, i8**) #0 {
  %4 = bitcast i8* %0 to %"class.jingle_xmpp::XmlParser"*
  tail call void @_ZN11jingle_xmpp9XmlParser17ExpatStartElementEPKcPS2_(%"class.jingle_xmpp::XmlParser"* %4, i8* %1, i8** %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN11jingle_xmppL18EndElementCallbackEPvPKc(i8*, i8*) #0 {
  %3 = getelementptr inbounds i8, i8* %0, i64 32
  %4 = bitcast i8* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %37

7:                                                ; preds = %2
  %8 = getelementptr inbounds i8, i8* %0, i64 16
  %9 = bitcast i8* %8 to %"class.jingle_xmpp::XmlnsStack"*
  tail call void @_ZN11jingle_xmpp10XmlnsStack8PopFrameEv(%"class.jingle_xmpp::XmlnsStack"* %9) #10
  %10 = getelementptr inbounds i8, i8* %0, i64 64
  %11 = bitcast i8* %10 to %struct.XML_ParserStruct**
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %11, align 8
  %13 = tail call i64 @XML_GetCurrentLineNumber(%struct.XML_ParserStruct* %12) #10
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %11, align 8
  %15 = tail call i64 @XML_GetCurrentColumnNumber(%struct.XML_ParserStruct* %14) #10
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %11, align 8
  %17 = tail call i64 @XML_GetCurrentByteIndex(%struct.XML_ParserStruct* %16) #10
  %18 = shl i64 %13, 32
  %19 = ashr exact i64 %18, 32
  %20 = getelementptr inbounds i8, i8* %0, i64 40
  %21 = bitcast i8* %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = shl i64 %15, 32
  %23 = ashr exact i64 %22, 32
  %24 = getelementptr inbounds i8, i8* %0, i64 48
  %25 = bitcast i8* %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %0, i64 56
  %27 = bitcast i8* %26 to i64*
  store i64 %17, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %0, i64 72
  %29 = bitcast i8* %28 to %"class.jingle_xmpp::XmlParseHandler"**
  %30 = load %"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseHandler"** %29, align 8
  %31 = getelementptr inbounds i8, i8* %0, i64 8
  %32 = bitcast i8* %31 to %"class.jingle_xmpp::XmlParseContext"*
  %33 = bitcast %"class.jingle_xmpp::XmlParseHandler"* %30 to void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*)***
  %34 = load void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*)**, void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*)*, void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*)** %34, i64 3
  %36 = load void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*)*, void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*)** %35, align 8
  tail call void %36(%"class.jingle_xmpp::XmlParseHandler"* %30, %"class.jingle_xmpp::XmlParseContext"* %32, i8* %1) #10
  br label %37

37:                                               ; preds = %2, %7
  ret void
}

declare void @XML_SetCharacterDataHandler(%struct.XML_ParserStruct*, void (i8*, i8*, i32)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN11jingle_xmppL21CharacterDataCallbackEPvPKci(i8*, i8*, i32) #0 {
  %4 = getelementptr inbounds i8, i8* %0, i64 32
  %5 = bitcast i8* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %36

8:                                                ; preds = %3
  %9 = getelementptr inbounds i8, i8* %0, i64 64
  %10 = bitcast i8* %9 to %struct.XML_ParserStruct**
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %10, align 8
  %12 = tail call i64 @XML_GetCurrentLineNumber(%struct.XML_ParserStruct* %11) #10
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %10, align 8
  %14 = tail call i64 @XML_GetCurrentColumnNumber(%struct.XML_ParserStruct* %13) #10
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %10, align 8
  %16 = tail call i64 @XML_GetCurrentByteIndex(%struct.XML_ParserStruct* %15) #10
  %17 = shl i64 %12, 32
  %18 = ashr exact i64 %17, 32
  %19 = getelementptr inbounds i8, i8* %0, i64 40
  %20 = bitcast i8* %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = shl i64 %14, 32
  %22 = ashr exact i64 %21, 32
  %23 = getelementptr inbounds i8, i8* %0, i64 48
  %24 = bitcast i8* %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %0, i64 56
  %26 = bitcast i8* %25 to i64*
  store i64 %16, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %0, i64 72
  %28 = bitcast i8* %27 to %"class.jingle_xmpp::XmlParseHandler"**
  %29 = load %"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseHandler"** %28, align 8
  %30 = getelementptr inbounds i8, i8* %0, i64 8
  %31 = bitcast i8* %30 to %"class.jingle_xmpp::XmlParseContext"*
  %32 = bitcast %"class.jingle_xmpp::XmlParseHandler"* %29 to void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i32)***
  %33 = load void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i32)**, void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i32)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i32)*, void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i32)** %33, i64 4
  %35 = load void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i32)*, void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i32)** %34, align 8
  tail call void %35(%"class.jingle_xmpp::XmlParseHandler"* %29, %"class.jingle_xmpp::XmlParseContext"* %31, i8* %1, i32 %2) #10
  br label %36

36:                                               ; preds = %3, %8
  ret void
}

declare void @XML_SetXmlDeclHandler(%struct.XML_ParserStruct*, void (i8*, i8*, i8*, i32)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN11jingle_xmppL15XmlDeclCallbackEPvPKcS2_i(i8* nocapture, i8*, i8* readonly, i32) #0 {
  %5 = bitcast i8* %0 to %"class.jingle_xmpp::XmlParser"*
  tail call void @_ZN11jingle_xmpp9XmlParser12ExpatXmlDeclEPKcS2_i(%"class.jingle_xmpp::XmlParser"* %5, i8* %1, i8* %2, i32 %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp9XmlParser5ResetEv(%"class.jingle_xmpp::XmlParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 2
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %2, align 8
  %4 = tail call zeroext i8 @XML_ParserReset(%struct.XML_ParserStruct* %3, i8* null) #10
  %5 = icmp eq i8 %4, 0
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %2, align 8
  br i1 %5, label %7, label %9

7:                                                ; preds = %1
  tail call void @XML_ParserFree(%struct.XML_ParserStruct* %6) #10
  %8 = tail call %struct.XML_ParserStruct* @XML_ParserCreate(i8* null) #10
  store %struct.XML_ParserStruct* %8, %struct.XML_ParserStruct** %2, align 8
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi %struct.XML_ParserStruct* [ %8, %7 ], [ %6, %1 ]
  %11 = bitcast %"class.jingle_xmpp::XmlParser"* %0 to i8*
  tail call void @XML_SetUserData(%struct.XML_ParserStruct* %10, i8* %11) #10
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %2, align 8
  tail call void @XML_SetElementHandler(%struct.XML_ParserStruct* %12, void (i8*, i8*, i8**)* nonnull @_ZN11jingle_xmppL20StartElementCallbackEPvPKcPS2_, void (i8*, i8*)* nonnull @_ZN11jingle_xmppL18EndElementCallbackEPvPKc) #10
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %2, align 8
  tail call void @XML_SetCharacterDataHandler(%struct.XML_ParserStruct* %13, void (i8*, i8*, i32)* nonnull @_ZN11jingle_xmppL21CharacterDataCallbackEPvPKci) #10
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %2, align 8
  tail call void @XML_SetXmlDeclHandler(%struct.XML_ParserStruct* %14, void (i8*, i8*, i8*, i32)* nonnull @_ZN11jingle_xmppL15XmlDeclCallbackEPvPKcS2_i) #10
  %15 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 1
  tail call void @_ZN11jingle_xmpp10XmlnsStack5ResetEv(%"class.jingle_xmpp::XmlnsStack"* %15) #10
  %16 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 2
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 4
  store i8 0, i8* %17, align 8
  ret void
}

declare zeroext i8 @XML_ParserReset(%struct.XML_ParserStruct*, i8*) local_unnamed_addr #1

declare void @XML_ParserFree(%struct.XML_ParserStruct*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp9XmlParser12ParseContext5ResetEv(%"class.jingle_xmpp::XmlParser::ParseContext"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 1
  tail call void @_ZN11jingle_xmpp10XmlnsStack5ResetEv(%"class.jingle_xmpp::XmlnsStack"* %2) #10
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 2
  store i32 0, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp9XmlParser17ExpatStartElementEPKcPS2_(%"class.jingle_xmpp::XmlParser"*, i8*, i8**) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %76

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 1
  tail call void @_ZN11jingle_xmpp10XmlnsStack9PushFrameEv(%"class.jingle_xmpp::XmlnsStack"* %9) #10
  %10 = load i8*, i8** %2, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %54, label %12

12:                                               ; preds = %8, %50
  %13 = phi i8* [ %52, %50 ], [ %10, %8 ]
  %14 = phi i8** [ %51, %50 ], [ %2, %8 ]
  %15 = load i8, i8* %13, align 1
  %16 = icmp eq i8 %15, 120
  br i1 %16, label %17, label %50

17:                                               ; preds = %12
  %18 = getelementptr inbounds i8, i8* %13, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 109
  br i1 %20, label %21, label %50

21:                                               ; preds = %17
  %22 = getelementptr inbounds i8, i8* %13, i64 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 108
  br i1 %24, label %25, label %50

25:                                               ; preds = %21
  %26 = getelementptr inbounds i8, i8* %13, i64 3
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 110
  br i1 %28, label %29, label %50

29:                                               ; preds = %25
  %30 = getelementptr inbounds i8, i8* %13, i64 4
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 115
  br i1 %32, label %33, label %50

33:                                               ; preds = %29
  %34 = getelementptr inbounds i8, i8* %13, i64 5
  %35 = load i8, i8* %34, align 1
  switch i8 %35, label %50 [
    i8 0, label %36
    i8 58, label %39
  ]

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8*, i8** %14, i64 1
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZN11jingle_xmpp9XmlParser12ParseContext14StartNamespaceEPKcS3_(%"class.jingle_xmpp::XmlParser::ParseContext"* %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %38)
  br label %50

39:                                               ; preds = %33
  %40 = getelementptr inbounds i8*, i8** %14, i64 1
  %41 = load i8*, i8** %40, align 8
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %48

44:                                               ; preds = %39
  %45 = load i32, i32* %5, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %76

47:                                               ; preds = %44
  store i32 2, i32* %5, align 8
  br label %76

48:                                               ; preds = %39
  %49 = getelementptr inbounds i8, i8* %13, i64 6
  tail call void @_ZN11jingle_xmpp9XmlParser12ParseContext14StartNamespaceEPKcS3_(%"class.jingle_xmpp::XmlParser::ParseContext"* %4, i8* %49, i8* %41)
  br label %50

50:                                               ; preds = %12, %17, %21, %25, %33, %29, %48, %36
  %51 = getelementptr inbounds i8*, i8** %14, i64 2
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %12

54:                                               ; preds = %50, %8
  %55 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 2
  %56 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %55, align 8
  %57 = tail call i64 @XML_GetCurrentLineNumber(%struct.XML_ParserStruct* %56) #10
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %55, align 8
  %59 = tail call i64 @XML_GetCurrentColumnNumber(%struct.XML_ParserStruct* %58) #10
  %60 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %55, align 8
  %61 = tail call i64 @XML_GetCurrentByteIndex(%struct.XML_ParserStruct* %60) #10
  %62 = shl i64 %57, 32
  %63 = ashr exact i64 %62, 32
  %64 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 3
  store i64 %63, i64* %64, align 8
  %65 = shl i64 %59, 32
  %66 = ashr exact i64 %65, 32
  %67 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 4
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 5
  store i64 %61, i64* %68, align 8
  %69 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 3
  %70 = load %"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseHandler"** %69, align 8
  %71 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %4, i64 0, i32 0
  %72 = bitcast %"class.jingle_xmpp::XmlParseHandler"* %70 to void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i8**)***
  %73 = load void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i8**)**, void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i8**)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i8**)*, void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i8**)** %73, i64 2
  %75 = load void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i8**)*, void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i8**)** %74, align 8
  tail call void %75(%"class.jingle_xmpp::XmlParseHandler"* %70, %"class.jingle_xmpp::XmlParseContext"* %71, i8* %1, i8** %2) #10
  br label %76

76:                                               ; preds = %47, %44, %54, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp9XmlParser12ParseContext12StartElementEv(%"class.jingle_xmpp::XmlParser::ParseContext"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 1
  tail call void @_ZN11jingle_xmpp10XmlnsStack9PushFrameEv(%"class.jingle_xmpp::XmlnsStack"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp9XmlParser12ParseContext14StartNamespaceEPKcS3_(%"class.jingle_xmpp::XmlParser::ParseContext"*, i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = load i8, i8* %1, align 1
  %9 = icmp eq i8 %8, 0
  %10 = select i1 %9, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i8* %1
  %11 = tail call i64 @strlen(i8* %10) #10
  %12 = icmp ugt i64 %11, -17
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %14) #11
  unreachable

15:                                               ; preds = %3
  %16 = icmp ult i64 %11, 23
  br i1 %16, label %25, label %17

17:                                               ; preds = %15
  %18 = add nuw i64 %11, 16
  %19 = and i64 %18, -16
  %20 = tail call i8* @_Znwm(i64 %19) #12
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = or i64 %19, -9223372036854775808
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %11, i64* %24, align 8
  br label %30

25:                                               ; preds = %15
  %26 = trunc i64 %11 to i8
  %27 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 %26, i8* %28, align 1
  %29 = icmp eq i64 %11, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %25, %17
  %31 = phi i8* [ %20, %17 ], [ %7, %25 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* align 1 %10, i64 %11, i1 false) #10
  br label %32

32:                                               ; preds = %25, %30
  %33 = phi i8* [ %7, %25 ], [ %31, %30 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %11
  store i8 0, i8* %34, align 1
  %35 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #10
  %36 = tail call i64 @strlen(i8* %2) #10
  %37 = icmp ugt i64 %36, -17
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %39) #11
  unreachable

40:                                               ; preds = %32
  %41 = icmp ult i64 %36, 23
  br i1 %41, label %51, label %42

42:                                               ; preds = %40
  %43 = add nuw i64 %36, 16
  %44 = and i64 %43, -16
  %45 = tail call i8* @_Znwm(i64 %44) #12
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %45, i8** %46, align 8
  %47 = or i64 %44, -9223372036854775808
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %36, i64* %49, align 8
  %50 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %56

51:                                               ; preds = %40
  %52 = trunc i64 %36 to i8
  %53 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  store i8 %52, i8* %54, align 1
  %55 = icmp eq i64 %36, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %51, %42
  %57 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %53, %51 ], [ %50, %42 ]
  %58 = phi i8* [ %35, %51 ], [ %45, %42 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %58, i8* align 1 %2, i64 %36, i1 false) #10
  br label %59

59:                                               ; preds = %51, %56
  %60 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %53, %51 ], [ %57, %56 ]
  %61 = phi i8* [ %35, %51 ], [ %58, %56 ]
  %62 = getelementptr inbounds i8, i8* %61, i64 %36
  store i8 0, i8* %62, align 1
  call void @_ZN11jingle_xmpp10XmlnsStack8AddXmlnsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.jingle_xmpp::XmlnsStack"* %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #10
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %59, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #10
  %70 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #12
  br label %77

77:                                               ; preds = %69, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp9XmlParser12ParseContext10RaiseErrorE9XML_Error(%"class.jingle_xmpp::XmlParser::ParseContext"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11jingle_xmpp9XmlParser12ParseContext11SetPositionEiil(%"class.jingle_xmpp::XmlParser::ParseContext"* nocapture, i32, i32, i64) local_unnamed_addr #3 align 2 {
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 3
  store i64 %5, i64* %6, align 8
  %7 = sext i32 %2 to i64
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 4
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 5
  store i64 %3, i64* %9, align 8
  ret void
}

declare i64 @XML_GetCurrentLineNumber(%struct.XML_ParserStruct*) local_unnamed_addr #1

declare i64 @XML_GetCurrentColumnNumber(%struct.XML_ParserStruct*) local_unnamed_addr #1

declare i64 @XML_GetCurrentByteIndex(%struct.XML_ParserStruct*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp9XmlParser15ExpatEndElementEPKc(%"class.jingle_xmpp::XmlParser"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %29

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 1
  tail call void @_ZN11jingle_xmpp10XmlnsStack8PopFrameEv(%"class.jingle_xmpp::XmlnsStack"* %7) #10
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 2
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %8, align 8
  %10 = tail call i64 @XML_GetCurrentLineNumber(%struct.XML_ParserStruct* %9) #10
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %8, align 8
  %12 = tail call i64 @XML_GetCurrentColumnNumber(%struct.XML_ParserStruct* %11) #10
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %8, align 8
  %14 = tail call i64 @XML_GetCurrentByteIndex(%struct.XML_ParserStruct* %13) #10
  %15 = shl i64 %10, 32
  %16 = ashr exact i64 %15, 32
  %17 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 3
  store i64 %16, i64* %17, align 8
  %18 = shl i64 %12, 32
  %19 = ashr exact i64 %18, 32
  %20 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 4
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 5
  store i64 %14, i64* %21, align 8
  %22 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 3
  %23 = load %"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseHandler"** %22, align 8
  %24 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 0
  %25 = bitcast %"class.jingle_xmpp::XmlParseHandler"* %23 to void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*)***
  %26 = load void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*)**, void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*)*, void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*)** %26, i64 3
  %28 = load void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*)*, void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*)** %27, align 8
  tail call void %28(%"class.jingle_xmpp::XmlParseHandler"* %23, %"class.jingle_xmpp::XmlParseContext"* %24, i8* %1) #10
  br label %29

29:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp9XmlParser12ParseContext10EndElementEv(%"class.jingle_xmpp::XmlParser::ParseContext"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 1
  tail call void @_ZN11jingle_xmpp10XmlnsStack8PopFrameEv(%"class.jingle_xmpp::XmlnsStack"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp9XmlParser18ExpatCharacterDataEPKci(%"class.jingle_xmpp::XmlParser"*, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %29

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 2
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %8, align 8
  %10 = tail call i64 @XML_GetCurrentLineNumber(%struct.XML_ParserStruct* %9) #10
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %8, align 8
  %12 = tail call i64 @XML_GetCurrentColumnNumber(%struct.XML_ParserStruct* %11) #10
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %8, align 8
  %14 = tail call i64 @XML_GetCurrentByteIndex(%struct.XML_ParserStruct* %13) #10
  %15 = shl i64 %10, 32
  %16 = ashr exact i64 %15, 32
  %17 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 3
  store i64 %16, i64* %17, align 8
  %18 = shl i64 %12, 32
  %19 = ashr exact i64 %18, 32
  %20 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 4
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 5
  store i64 %14, i64* %21, align 8
  %22 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 3
  %23 = load %"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseHandler"** %22, align 8
  %24 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 0
  %25 = bitcast %"class.jingle_xmpp::XmlParseHandler"* %23 to void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i32)***
  %26 = load void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i32)**, void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i32)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i32)*, void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i32)** %26, i64 4
  %28 = load void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i32)*, void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i8*, i32)** %27, align 8
  tail call void %28(%"class.jingle_xmpp::XmlParseHandler"* %23, %"class.jingle_xmpp::XmlParseContext"* %24, i8* %1, i32 %2) #10
  br label %29

29:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp9XmlParser12ExpatXmlDeclEPKcS2_i(%"class.jingle_xmpp::XmlParser"* nocapture, i8*, i8* readonly, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %60

9:                                                ; preds = %4
  %10 = icmp eq i8* %1, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %9
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  store i8 3, i8* %14, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3, i1 false) #10
  %15 = getelementptr inbounds i8, i8* %12, i64 3
  store i8 0, i8* %15, align 1
  %16 = tail call i64 @strlen(i8* nonnull %1) #10
  %17 = icmp eq i64 %16, 3
  br i1 %17, label %19, label %18

18:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  br label %28

19:                                               ; preds = %11
  %20 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %5, i64 0, i64 -1, i8* nonnull %1, i64 3) #10
  %21 = icmp ne i32 %20, 0
  %22 = load i8, i8* %14, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  br i1 %21, label %28, label %32

27:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  br i1 %21, label %28, label %32

28:                                               ; preds = %24, %18, %27
  %29 = load i32, i32* %6, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %60

31:                                               ; preds = %28
  store i32 2, i32* %6, align 8
  br label %60

32:                                               ; preds = %24, %9, %27
  %33 = icmp eq i32 %3, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %32
  %35 = load i32, i32* %6, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %60

37:                                               ; preds = %34
  store i32 2, i32* %6, align 8
  br label %60

38:                                               ; preds = %32
  %39 = icmp eq i8* %2, null
  br i1 %39, label %60, label %40

40:                                               ; preds = %38
  %41 = load i8, i8* %2, align 1
  switch i8 %41, label %56 [
    i8 85, label %42
    i8 117, label %42
  ]

42:                                               ; preds = %40, %40
  %43 = getelementptr inbounds i8, i8* %2, i64 1
  %44 = load i8, i8* %43, align 1
  switch i8 %44, label %56 [
    i8 84, label %45
    i8 116, label %45
  ]

45:                                               ; preds = %42, %42
  %46 = getelementptr inbounds i8, i8* %2, i64 2
  %47 = load i8, i8* %46, align 1
  switch i8 %47, label %56 [
    i8 70, label %48
    i8 102, label %48
  ]

48:                                               ; preds = %45, %45
  %49 = getelementptr inbounds i8, i8* %2, i64 3
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 45
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = getelementptr inbounds i8, i8* %2, i64 4
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 56
  br i1 %55, label %60, label %56

56:                                               ; preds = %45, %42, %40, %52, %48
  %57 = load i32, i32* %6, align 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  store i32 19, i32* %6, align 8
  br label %60

60:                                               ; preds = %59, %56, %37, %34, %31, %28, %38, %4, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11jingle_xmpp9XmlParser5ParseEPKcmb(%"class.jingle_xmpp::XmlParser"*, i8*, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 4
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %50

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 2
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %9, align 8
  %11 = trunc i64 %2 to i32
  %12 = zext i1 %3 to i32
  %13 = tail call i32 @XML_Parse(%struct.XML_ParserStruct* %10, i8* %1, i32 %11, i32 %12) #10
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %18

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 2
  %17 = load i32, i32* %16, align 8
  br label %38

18:                                               ; preds = %8
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %9, align 8
  %20 = tail call i64 @XML_GetCurrentLineNumber(%struct.XML_ParserStruct* %19) #10
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %9, align 8
  %22 = tail call i64 @XML_GetCurrentColumnNumber(%struct.XML_ParserStruct* %21) #10
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %9, align 8
  %24 = tail call i64 @XML_GetCurrentByteIndex(%struct.XML_ParserStruct* %23) #10
  %25 = shl i64 %20, 32
  %26 = ashr exact i64 %25, 32
  %27 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 3
  store i64 %26, i64* %27, align 8
  %28 = shl i64 %22, 32
  %29 = ashr exact i64 %28, 32
  %30 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 4
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 5
  store i64 %24, i64* %31, align 8
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %9, align 8
  %33 = tail call i32 @XML_GetErrorCode(%struct.XML_ParserStruct* %32) #10
  %34 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %18
  store i32 %33, i32* %34, align 8
  br label %38

38:                                               ; preds = %15, %37
  %39 = phi i32 [ %17, %15 ], [ %33, %37 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %18, %38
  %42 = phi i32 [ %39, %38 ], [ %35, %18 ]
  store i8 1, i8* %5, align 8
  %43 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 3
  %44 = load %"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseHandler"** %43, align 8
  %45 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 0
  %46 = bitcast %"class.jingle_xmpp::XmlParseHandler"* %44 to void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i32)***
  %47 = load void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i32)**, void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i32)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i32)*, void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i32)** %47, i64 5
  %49 = load void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i32)*, void (%"class.jingle_xmpp::XmlParseHandler"*, %"class.jingle_xmpp::XmlParseContext"*, i32)** %48, align 8
  tail call void %49(%"class.jingle_xmpp::XmlParseHandler"* %44, %"class.jingle_xmpp::XmlParseContext"* %45, i32 %42) #10
  br label %50

50:                                               ; preds = %38, %4, %41
  %51 = phi i1 [ false, %41 ], [ false, %4 ], [ true, %38 ]
  ret i1 %51
}

declare i32 @XML_Parse(%struct.XML_ParserStruct*, i8*, i32, i32) local_unnamed_addr #1

declare i32 @XML_GetErrorCode(%struct.XML_ParserStruct*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp9XmlParserD2Ev(%"class.jingle_xmpp::XmlParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN11jingle_xmpp9XmlParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 2
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %3, align 8
  tail call void @XML_ParserFree(%struct.XML_ParserStruct* %4) #10
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN11jingle_xmpp9XmlParser12ParseContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 1
  tail call void @_ZN11jingle_xmpp10XmlnsStackD1Ev(%"class.jingle_xmpp::XmlnsStack"* %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp9XmlParserD0Ev(%"class.jingle_xmpp::XmlParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN11jingle_xmpp9XmlParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 2
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %3, align 8
  tail call void @XML_ParserFree(%struct.XML_ParserStruct* %4) #10
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN11jingle_xmpp9XmlParser12ParseContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %0, i64 0, i32 1, i32 1
  tail call void @_ZN11jingle_xmpp10XmlnsStackD1Ev(%"class.jingle_xmpp::XmlnsStack"* %6) #10
  %7 = bitcast %"class.jingle_xmpp::XmlParser"* %0 to i8*
  tail call void @_ZdlPv(i8* %7) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp9XmlParser8ParseXmlEPNS_15XmlParseHandlerENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.jingle_xmpp::XmlParseHandler"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.jingle_xmpp::XmlParser", align 16
  %4 = bitcast %"class.jingle_xmpp::XmlParser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %3, i64 0, i32 1, i32 1
  %6 = bitcast %"class.jingle_xmpp::XmlnsStack"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 72, i1 false)
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %3, i64 0, i32 0
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %3, i64 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.jingle_xmpp::XmlParser"* %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN11jingle_xmpp9XmlParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN11jingle_xmpp9XmlParser12ParseContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %9, align 16
  %10 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %3, i64 0, i32 1, i32 1
  call void @_ZN11jingle_xmpp10XmlnsStackC1Ev(%"class.jingle_xmpp::XmlnsStack"* %10) #10
  %11 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %3, i64 0, i32 1, i32 2
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %3, i64 0, i32 1, i32 3
  %13 = bitcast i64* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #10
  %14 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %3, i64 0, i32 3
  store %"class.jingle_xmpp::XmlParseHandler"* %0, %"class.jingle_xmpp::XmlParseHandler"** %14, align 8
  %15 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %3, i64 0, i32 4
  store i8 0, i8* %15, align 16
  %16 = call %struct.XML_ParserStruct* @XML_ParserCreate(i8* null) #10
  %17 = getelementptr inbounds %"class.jingle_xmpp::XmlParser", %"class.jingle_xmpp::XmlParser"* %3, i64 0, i32 2
  store %struct.XML_ParserStruct* %16, %struct.XML_ParserStruct** %17, align 16
  call void @XML_SetUserData(%struct.XML_ParserStruct* %16, i8* nonnull %4) #10
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %17, align 16
  call void @XML_SetElementHandler(%struct.XML_ParserStruct* %18, void (i8*, i8*, i8**)* nonnull @_ZN11jingle_xmppL20StartElementCallbackEPvPKcPS2_, void (i8*, i8*)* nonnull @_ZN11jingle_xmppL18EndElementCallbackEPvPKc) #10
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %17, align 16
  call void @XML_SetCharacterDataHandler(%struct.XML_ParserStruct* %19, void (i8*, i8*, i32)* nonnull @_ZN11jingle_xmppL21CharacterDataCallbackEPvPKci) #10
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %17, align 16
  call void @XML_SetXmlDeclHandler(%struct.XML_ParserStruct* %20, void (i8*, i8*, i8*, i32)* nonnull @_ZN11jingle_xmppL15XmlDeclCallbackEPvPKcS2_i) #10
  %21 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  br label %33

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %32 = zext i8 %23 to i64
  br label %33

33:                                               ; preds = %25, %30
  %34 = phi i8* [ %27, %25 ], [ %31, %30 ]
  %35 = phi i64 [ %29, %25 ], [ %32, %30 ]
  %36 = call zeroext i1 @_ZN11jingle_xmpp9XmlParser5ParseEPKcmb(%"class.jingle_xmpp::XmlParser"* nonnull %3, i8* %34, i64 %35, i1 zeroext true)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN11jingle_xmpp9XmlParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 16
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %17, align 16
  call void @XML_ParserFree(%struct.XML_ParserStruct* %37) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN11jingle_xmpp9XmlParser12ParseContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  call void @_ZN11jingle_xmpp10XmlnsStackD1Ev(%"class.jingle_xmpp::XmlnsStack"* %10) #10
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %4) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp9XmlParser12ParseContextC2Ev(%"class.jingle_xmpp::XmlParser::ParseContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN11jingle_xmpp9XmlParser12ParseContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 1
  tail call void @_ZN11jingle_xmpp10XmlnsStackC1Ev(%"class.jingle_xmpp::XmlnsStack"* %3) #10
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 3
  %6 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false)
  ret void
}

declare void @_ZN11jingle_xmpp10XmlnsStackC1Ev(%"class.jingle_xmpp::XmlnsStack"*) unnamed_addr #1

declare void @_ZN11jingle_xmpp10XmlnsStack8AddXmlnsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.jingle_xmpp::XmlnsStack"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN11jingle_xmpp10XmlnsStack9PushFrameEv(%"class.jingle_xmpp::XmlnsStack"*) local_unnamed_addr #1

declare void @_ZN11jingle_xmpp10XmlnsStack8PopFrameEv(%"class.jingle_xmpp::XmlnsStack"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp9XmlParser12ParseContext12ResolveQNameEPKcb(%"class.jingle_xmpp::QName"* noalias sret, %"class.jingle_xmpp::XmlParser::ParseContext"*, i8*, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %"struct.std::__1::pair", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"struct.std::__1::pair", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  br label %13

13:                                               ; preds = %108, %4
  %14 = phi i8* [ %2, %4 ], [ %109, %108 ]
  %15 = load i8, i8* %14, align 1
  switch i8 %15, label %108 [
    i8 0, label %110
    i8 58, label %16
  ]

16:                                               ; preds = %13
  %17 = bitcast %"struct.std::__1::pair"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 0, i32 1
  %20 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %1, i64 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %22 = bitcast %"struct.std::__1::pair"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #10
  %23 = ptrtoint i8* %14 to i64
  %24 = ptrtoint i8* %2 to i64
  %25 = sub i64 %23, %24
  %26 = icmp ugt i64 %25, -17
  br i1 %26, label %27, label %29

27:                                               ; preds = %16
  %28 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %28) #11
  unreachable

29:                                               ; preds = %16
  %30 = icmp ult i64 %25, 23
  br i1 %30, label %40, label %31

31:                                               ; preds = %29
  %32 = add nuw i64 %25, 16
  %33 = and i64 %32, -16
  %34 = tail call i8* @_Znwm(i64 %33) #12
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %34, i8** %35, align 8
  %36 = or i64 %33, -9223372036854775808
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %38, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %45

40:                                               ; preds = %29
  %41 = trunc i64 %25 to i8
  %42 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  store i8 %41, i8* %43, align 1
  %44 = icmp eq i64 %25, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %40, %31
  %46 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %40 ], [ %39, %31 ]
  %47 = phi i8* [ %21, %40 ], [ %34, %31 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %47, i8* align 1 %2, i64 %25, i1 false) #10
  br label %48

48:                                               ; preds = %40, %45
  %49 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %40 ], [ %46, %45 ]
  %50 = phi i8* [ %21, %40 ], [ %47, %45 ]
  %51 = getelementptr inbounds i8, i8* %50, i64 %25
  store i8 0, i8* %51, align 1
  call void @_ZN11jingle_xmpp10XmlnsStack11NsForPrefixERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.std::__1::pair"* nonnull sret %5, %"class.jingle_xmpp::XmlnsStack"* %20, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #10
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %48, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #10
  %59 = load i8, i8* %19, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZN11jingle_xmpp5QNameC1Ev(%"class.jingle_xmpp::QName"* %0) #10
  br label %100

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 0, i32 0
  %64 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #10
  %65 = getelementptr inbounds i8, i8* %14, i64 1
  %66 = call i64 @strlen(i8* %65) #10
  %67 = icmp ugt i64 %66, -17
  br i1 %67, label %68, label %70

68:                                               ; preds = %62
  %69 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %69) #11
  unreachable

70:                                               ; preds = %62
  %71 = icmp ult i64 %66, 23
  br i1 %71, label %81, label %72

72:                                               ; preds = %70
  %73 = add nuw i64 %66, 16
  %74 = and i64 %73, -16
  %75 = call i8* @_Znwm(i64 %74) #12
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %75, i8** %76, align 8
  %77 = or i64 %74, -9223372036854775808
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %66, i64* %79, align 8
  %80 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %86

81:                                               ; preds = %70
  %82 = trunc i64 %66 to i8
  %83 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  store i8 %82, i8* %84, align 1
  %85 = icmp eq i64 %66, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %81, %72
  %87 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %83, %81 ], [ %80, %72 ]
  %88 = phi i8* [ %64, %81 ], [ %75, %72 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %88, i8* align 1 %65, i64 %66, i1 false) #10
  br label %89

89:                                               ; preds = %81, %86
  %90 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %83, %81 ], [ %87, %86 ]
  %91 = phi i8* [ %64, %81 ], [ %88, %86 ]
  %92 = getelementptr inbounds i8, i8* %91, i64 %66
  store i8 0, i8* %92, align 1
  call void @_ZN11jingle_xmpp5QNameC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.jingle_xmpp::QName"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %63, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #10
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %89, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #10
  br label %100

100:                                              ; preds = %99, %61
  %101 = bitcast %"struct.std::__1::pair"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %100
  %106 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %100, %105
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #10
  br label %269

108:                                              ; preds = %13
  %109 = getelementptr inbounds i8, i8* %14, i64 1
  br label %13

110:                                              ; preds = %13
  br i1 %3, label %111, label %180

111:                                              ; preds = %110
  %112 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #10
  %113 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #10
  %114 = icmp ugt i64 %113, -17
  br i1 %114, label %115, label %117

115:                                              ; preds = %111
  %116 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %116) #11
  unreachable

117:                                              ; preds = %111
  %118 = icmp ult i64 %113, 23
  br i1 %118, label %127, label %119

119:                                              ; preds = %117
  %120 = add nuw i64 %113, 16
  %121 = and i64 %120, -16
  %122 = tail call i8* @_Znwm(i64 %121) #12
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %122, i8** %123, align 8
  %124 = or i64 %121, -9223372036854775808
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %113, i64* %126, align 8
  br label %132

127:                                              ; preds = %117
  %128 = trunc i64 %113 to i8
  %129 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  store i8 %128, i8* %130, align 1
  %131 = icmp eq i64 %113, 0
  br i1 %131, label %134, label %132

132:                                              ; preds = %127, %119
  %133 = phi i8* [ %122, %119 ], [ %112, %127 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %133, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %113, i1 false) #10
  br label %134

134:                                              ; preds = %127, %132
  %135 = phi i8* [ %112, %127 ], [ %133, %132 ]
  %136 = getelementptr inbounds i8, i8* %135, i64 %113
  store i8 0, i8* %136, align 1
  %137 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #10
  %138 = tail call i64 @strlen(i8* %2) #10
  %139 = icmp ugt i64 %138, -17
  br i1 %139, label %140, label %142

140:                                              ; preds = %134
  %141 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %141) #11
  unreachable

142:                                              ; preds = %134
  %143 = icmp ult i64 %138, 23
  br i1 %143, label %153, label %144

144:                                              ; preds = %142
  %145 = add nuw i64 %138, 16
  %146 = and i64 %145, -16
  %147 = tail call i8* @_Znwm(i64 %146) #12
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %147, i8** %148, align 8
  %149 = or i64 %146, -9223372036854775808
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %138, i64* %151, align 8
  %152 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %158

153:                                              ; preds = %142
  %154 = trunc i64 %138 to i8
  %155 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %156 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %155, i64 0, i32 1, i32 0
  store i8 %154, i8* %156, align 1
  %157 = icmp eq i64 %138, 0
  br i1 %157, label %161, label %158

158:                                              ; preds = %153, %144
  %159 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %155, %153 ], [ %152, %144 ]
  %160 = phi i8* [ %137, %153 ], [ %147, %144 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %160, i8* align 1 %2, i64 %138, i1 false) #10
  br label %161

161:                                              ; preds = %153, %158
  %162 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %155, %153 ], [ %159, %158 ]
  %163 = phi i8* [ %137, %153 ], [ %160, %158 ]
  %164 = getelementptr inbounds i8, i8* %163, i64 %138
  store i8 0, i8* %164, align 1
  call void @_ZN11jingle_xmpp5QNameC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.jingle_xmpp::QName"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #10
  %165 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %166 = load i8, i8* %165, align 1
  %167 = icmp slt i8 %166, 0
  br i1 %167, label %168, label %171

168:                                              ; preds = %161
  %169 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load i8*, i8** %169, align 8
  call void @_ZdlPv(i8* %170) #12
  br label %171

171:                                              ; preds = %161, %168
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #10
  %172 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %172, i64 0, i32 1, i32 0
  %174 = load i8, i8* %173, align 1
  %175 = icmp slt i8 %174, 0
  br i1 %175, label %176, label %179

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load i8*, i8** %177, align 8
  call void @_ZdlPv(i8* %178) #12
  br label %179

179:                                              ; preds = %171, %176
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #10
  br label %269

180:                                              ; preds = %110
  %181 = bitcast %"struct.std::__1::pair"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %181) #10
  %182 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 1
  %184 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %1, i64 0, i32 1
  %185 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %186 = bitcast %"struct.std::__1::pair"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %186, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %185) #10
  %187 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #10
  %188 = icmp ugt i64 %187, -17
  br i1 %188, label %189, label %191

189:                                              ; preds = %180
  %190 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %190) #11
  unreachable

191:                                              ; preds = %180
  %192 = icmp ult i64 %187, 23
  br i1 %192, label %202, label %193

193:                                              ; preds = %191
  %194 = add nuw i64 %187, 16
  %195 = and i64 %194, -16
  %196 = tail call i8* @_Znwm(i64 %195) #12
  %197 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %196, i8** %197, align 8
  %198 = or i64 %195, -9223372036854775808
  %199 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %198, i64* %199, align 8
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %187, i64* %200, align 8
  %201 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %207

202:                                              ; preds = %191
  %203 = trunc i64 %187 to i8
  %204 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %204, i64 0, i32 1, i32 0
  store i8 %203, i8* %205, align 1
  %206 = icmp eq i64 %187, 0
  br i1 %206, label %210, label %207

207:                                              ; preds = %202, %193
  %208 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %204, %202 ], [ %201, %193 ]
  %209 = phi i8* [ %185, %202 ], [ %196, %193 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %209, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %187, i1 false) #10
  br label %210

210:                                              ; preds = %202, %207
  %211 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %204, %202 ], [ %208, %207 ]
  %212 = phi i8* [ %185, %202 ], [ %209, %207 ]
  %213 = getelementptr inbounds i8, i8* %212, i64 %187
  store i8 0, i8* %213, align 1
  call void @_ZN11jingle_xmpp10XmlnsStack11NsForPrefixERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.std::__1::pair"* nonnull sret %10, %"class.jingle_xmpp::XmlnsStack"* %184, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #10
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %211, i64 0, i32 1, i32 0
  %215 = load i8, i8* %214, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %217, label %220

217:                                              ; preds = %210
  %218 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load i8*, i8** %218, align 8
  call void @_ZdlPv(i8* %219) #12
  br label %220

220:                                              ; preds = %210, %217
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %185) #10
  %221 = load i8, i8* %183, align 8, !range !2
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZN11jingle_xmpp5QNameC1Ev(%"class.jingle_xmpp::QName"* %0) #10
  br label %261

224:                                              ; preds = %220
  %225 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0
  %226 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %226) #10
  %227 = call i64 @strlen(i8* %2) #10
  %228 = icmp ugt i64 %227, -17
  br i1 %228, label %229, label %231

229:                                              ; preds = %224
  %230 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %230) #11
  unreachable

231:                                              ; preds = %224
  %232 = icmp ult i64 %227, 23
  br i1 %232, label %242, label %233

233:                                              ; preds = %231
  %234 = add nuw i64 %227, 16
  %235 = and i64 %234, -16
  %236 = call i8* @_Znwm(i64 %235) #12
  %237 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %236, i8** %237, align 8
  %238 = or i64 %235, -9223372036854775808
  %239 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %238, i64* %239, align 8
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %227, i64* %240, align 8
  %241 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %247

242:                                              ; preds = %231
  %243 = trunc i64 %227 to i8
  %244 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %245 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %244, i64 0, i32 1, i32 0
  store i8 %243, i8* %245, align 1
  %246 = icmp eq i64 %227, 0
  br i1 %246, label %250, label %247

247:                                              ; preds = %242, %233
  %248 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %244, %242 ], [ %241, %233 ]
  %249 = phi i8* [ %226, %242 ], [ %236, %233 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %249, i8* align 1 %2, i64 %227, i1 false) #10
  br label %250

250:                                              ; preds = %242, %247
  %251 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %244, %242 ], [ %248, %247 ]
  %252 = phi i8* [ %226, %242 ], [ %249, %247 ]
  %253 = getelementptr inbounds i8, i8* %252, i64 %227
  store i8 0, i8* %253, align 1
  call void @_ZN11jingle_xmpp5QNameC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.jingle_xmpp::QName"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %225, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12) #10
  %254 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %251, i64 0, i32 1, i32 0
  %255 = load i8, i8* %254, align 1
  %256 = icmp slt i8 %255, 0
  br i1 %256, label %257, label %260

257:                                              ; preds = %250
  %258 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load i8*, i8** %258, align 8
  call void @_ZdlPv(i8* %259) #12
  br label %260

260:                                              ; preds = %250, %257
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %226) #10
  br label %261

261:                                              ; preds = %260, %223
  %262 = bitcast %"struct.std::__1::pair"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %263 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %262, i64 0, i32 1, i32 0
  %264 = load i8, i8* %263, align 1
  %265 = icmp slt i8 %264, 0
  br i1 %265, label %266, label %268

266:                                              ; preds = %261
  %267 = load i8*, i8** %182, align 8
  call void @_ZdlPv(i8* %267) #12
  br label %268

268:                                              ; preds = %261, %266
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %181) #10
  br label %269

269:                                              ; preds = %268, %179, %107
  ret void
}

declare void @_ZN11jingle_xmpp10XmlnsStack11NsForPrefixERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.std::__1::pair"* sret, %"class.jingle_xmpp::XmlnsStack"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN11jingle_xmpp5QNameC1Ev(%"class.jingle_xmpp::QName"*) unnamed_addr #1

declare void @_ZN11jingle_xmpp5QNameC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.jingle_xmpp::QName"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN11jingle_xmpp10XmlnsStack5ResetEv(%"class.jingle_xmpp::XmlnsStack"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp9XmlParser12ParseContext11GetPositionEPmS2_S2_(%"class.jingle_xmpp::XmlParser::ParseContext"* nocapture readonly, i64*, i64*, i64*) unnamed_addr #5 align 2 {
  %5 = icmp eq i64* %1, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %1, align 8
  br label %9

9:                                                ; preds = %4, %6
  %10 = icmp eq i64* %2, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 4
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %2, align 8
  br label %14

14:                                               ; preds = %9, %11
  %15 = icmp eq i64* %3, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 5
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %3, align 8
  br label %19

19:                                               ; preds = %14, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp9XmlParser12ParseContextD2Ev(%"class.jingle_xmpp::XmlParser::ParseContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN11jingle_xmpp9XmlParser12ParseContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 1
  tail call void @_ZN11jingle_xmpp10XmlnsStackD1Ev(%"class.jingle_xmpp::XmlnsStack"* %3) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp10XmlnsStackD1Ev(%"class.jingle_xmpp::XmlnsStack"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp9XmlParser12ParseContextD0Ev(%"class.jingle_xmpp::XmlParser::ParseContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN11jingle_xmpp9XmlParser12ParseContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmlParser::ParseContext", %"class.jingle_xmpp::XmlParser::ParseContext"* %0, i64 0, i32 1
  tail call void @_ZN11jingle_xmpp10XmlnsStackD1Ev(%"class.jingle_xmpp::XmlnsStack"* %3) #10
  %4 = bitcast %"class.jingle_xmpp::XmlParser::ParseContext"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
