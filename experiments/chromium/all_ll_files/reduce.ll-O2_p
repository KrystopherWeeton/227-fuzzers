; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/reduce.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/reduce.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { {}*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"struct.tflite::ops::builtin::reduce::OpContext" = type { %struct.TfLiteReducerParams*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor* }
%struct.TfLiteReducerParams = type { i8 }
%"struct.tflite::ops::builtin::reduce::OpData" = type { i32, i32, i32 }
%"struct.tflite::MeanParams" = type { i8, [4 x i16] }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"class.tflite::CpuBackendContext" = type <{ %"class.tflite::TfLiteInternalBackendContext", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.46", i32, i8, [3 x i8] }>
%"class.tflite::TfLiteInternalBackendContext" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ruy::Context"* }
%"class.ruy::Context" = type { %"class.ruy::CtxImpl"* }
%"class.ruy::CtxImpl" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.gemmlowp::GemmContext"* }
%"class.gemmlowp::GemmContext" = type { %"class.gemmlowp::MultiThreadGemmContext" }
%"class.gemmlowp::MultiThreadGemmContext" = type { %"class.gemmlowp::MultiThreadGemmContextBase", %"class.gemmlowp::WorkersPool" }
%"class.gemmlowp::MultiThreadGemmContextBase" = type { %"class.gemmlowp::SingleThreadGemmContext.base", i32 }
%"class.gemmlowp::SingleThreadGemmContext.base" = type <{ %"class.gemmlowp::Allocator", i32, i32, float }>
%"class.gemmlowp::Allocator" = type { i8, i64, i8*, i64, i64, [5 x i64], i64 }
%"class.gemmlowp::WorkersPool" = type { %"class.std::__1::vector", %"class.gemmlowp::BlockingCounter", %"class.gemmlowp::Allocator" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gemmlowp::Worker"**, %"class.gemmlowp::Worker"**, %"class.std::__1::__compressed_pair.57" }
%"class.gemmlowp::Worker" = type { i64, %"struct.gemmlowp::Task"*, %union.pthread_cond_t, %union.pthread_mutex_t, %"struct.std::__1::atomic", %"class.gemmlowp::Allocator", %"class.gemmlowp::BlockingCounter"* }
%"struct.gemmlowp::Task" = type { i32 (...)**, %"class.gemmlowp::Allocator"* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.49, %union.anon.50, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.49 = type { i64 }
%union.anon.50 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.gemmlowp::Worker"** }
%"class.gemmlowp::BlockingCounter" = type { %"struct.std::__1::atomic.52" }
%"struct.std::__1::atomic.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl.55" }
%"struct.std::__1::__cxx_atomic_impl.55" = type { %"struct.std::__1::__cxx_atomic_base_impl.56" }
%"struct.std::__1::__cxx_atomic_base_impl.56" = type { i64 }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"struct.tflite::optimized_integer_ops::MeanWorkerTask"*, %"struct.tflite::optimized_integer_ops::MeanWorkerTask"*, %"class.std::__1::__compressed_pair.65" }
%"struct.tflite::optimized_integer_ops::MeanWorkerTask" = type { %"struct.gemmlowp::Task", %"struct.tflite::MeanParams"*, %"class.tflite::RuntimeShape"*, i8*, i32, i32, i32, %"class.tflite::RuntimeShape"*, i8*, i32, i32 }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* }
%"class.std::__1::vector.83" = type { %"class.std::__1::__vector_base.84" }
%"class.std::__1::__vector_base.84" = type { %"struct.tflite::optimized_ops::MeanWorkerTask"*, %"struct.tflite::optimized_ops::MeanWorkerTask"*, %"class.std::__1::__compressed_pair.85" }
%"struct.tflite::optimized_ops::MeanWorkerTask" = type { %"struct.gemmlowp::Task", %"struct.tflite::MeanParams"*, %"class.tflite::RuntimeShape"*, i8*, i32, i32, i32, %"class.tflite::RuntimeShape"*, i8*, i32, i32 }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.tflite::optimized_ops::MeanWorkerTask"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::chrono::duration.77" = type { i64 }
%union.pthread_condattr_t = type { i32 }
%union.pthread_mutexattr_t = type { i32 }
%union.pthread_attr_t = type { i64, [48 x i8] }

$_ZN6tflite3ops7builtin6reduce9EvalLogicIbEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E = comdat any

$_ZN6tflite13reference_ops18QuantizedMeanOrSumIhiEEbPKT_ifPKiiPS2_ifS6_iS6_ibPiS8_PT0_b = comdat any

$_ZN6tflite13reference_ops18QuantizedMeanOrSumIaiEEbPKT_ifPKiiPS2_ifS6_iS6_ibPiS8_PT0_b = comdat any

$_ZN6tflite3ops7builtin6reduce11EvalGenericILNS2_10KernelTypeE0ELNS2_10ReduceTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin6reduce8EvalMeanILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin6reduce8EvalMeanILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin6reduce11EvalGenericILNS2_10KernelTypeE0ELNS2_10ReduceTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin6reduce11EvalGenericILNS2_10KernelTypeE0ELNS2_10ReduceTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin6reduce11EvalGenericILNS2_10KernelTypeE0ELNS2_10ReduceTypeE3EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin6reduce11EvalGenericILNS2_10KernelTypeE0ELNS2_10ReduceTypeE4EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite13reference_ops13ReduceGenericIbEEbPKT_PKiiPS2_S6_iS6_lbPiS8_S2_PFS2_S2_S2_E = comdat any

$_ZN6tflite3ops7builtin6reduce9EvalLogicIfEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E = comdat any

$_ZN6tflite13reference_ops13ReduceGenericIfEEbPKT_PKiiPS2_S6_iS6_lbPiS8_S2_PFS2_S2_S2_E = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIfEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlffE_8__invokeEff = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIfEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlffE0_8__invokeEff = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIfEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlffE1_8__invokeEff = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIfEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlffE2_8__invokeEff = comdat any

$_ZN6tflite3ops7builtin6reduce9EvalLogicIiEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E = comdat any

$_ZN6tflite13reference_ops13ReduceGenericIiEEbPKT_PKiiPS2_S6_iS6_lbPiS8_S2_PFS2_S2_S2_E = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIiEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUliiE_8__invokeEii = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIiEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUliiE0_8__invokeEii = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIiEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUliiE1_8__invokeEii = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIiEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUliiE2_8__invokeEii = comdat any

$_ZN6tflite3ops7builtin6reduce9EvalLogicIlEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E = comdat any

$_ZN6tflite13reference_ops13ReduceGenericIlEEbPKT_PKiiPS2_S6_iS6_lbPiS8_S2_PFS2_S2_S2_E = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIlEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlllE_8__invokeEll = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIlEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlllE0_8__invokeEll = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIlEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlllE1_8__invokeEll = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIlEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlllE2_8__invokeEll = comdat any

$_ZN6tflite3ops7builtin6reduce9EvalLogicIhEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E = comdat any

$_ZN6tflite13reference_ops13ReduceGenericIhEEbPKT_PKiiPS2_S6_iS6_lbPiS8_S2_PFS2_S2_S2_E = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIhEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlhhE_8__invokeEhh = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIhEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlhhE0_8__invokeEhh = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIhEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlhhE1_8__invokeEhh = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIhEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlhhE2_8__invokeEhh = comdat any

$_ZN6tflite3ops7builtin6reduce9EvalLogicIaEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E = comdat any

$_ZN6tflite13reference_ops13ReduceGenericIaEEbPKT_PKiiPS2_S6_iS6_lbPiS8_S2_PFS2_S2_S2_E = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIaEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlaaE_8__invokeEaa = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIaEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlaaE0_8__invokeEaa = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIaEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlaaE1_8__invokeEaa = comdat any

$_ZZN6tflite3ops7builtin6reduce8EvalTypeIaEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlaaE2_8__invokeEaa = comdat any

$_ZN6tflite21optimized_integer_ops4MeanERKNS_10MeanParamsERKNS_12RuntimeShapeEPKaifS6_PaifPNS_17CpuBackendContextE = comdat any

$_ZN6tflite13optimized_ops4MeanERKNS_10MeanParamsERKNS_12RuntimeShapeEPKhifS6_PhifPNS_17CpuBackendContextE = comdat any

$_ZN6tflite13reference_ops4MeanIfEEvRKNS_10MeanParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops4MeanIilEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_ = comdat any

$_ZN6tflite13reference_ops4MeanIllEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_ = comdat any

$_ZN6tflite21reference_integer_ops4MeanERKNS_10MeanParamsEiiRKNS_12RuntimeShapeEPKaiS6_Pai = comdat any

$_ZN6tflite13reference_ops4MeanIaiEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_ = comdat any

$_ZN6tflite13reference_ops4MeanERKNS_10MeanParamsERKNS_12RuntimeShapeEPKhifS6_Phif = comdat any

$_ZN6tflite13reference_ops4MeanIhiEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_ = comdat any

$_ZN6tflite21optimized_integer_ops8MeanImplERKNS_10MeanParamsERKNS_12RuntimeShapeEPKaiiiS6_Paii = comdat any

$_ZN8gemmlowp4TaskD2Ev = comdat any

$_ZN6tflite21optimized_integer_ops14MeanWorkerTaskD0Ev = comdat any

$_ZN6tflite21optimized_integer_ops14MeanWorkerTask3RunEv = comdat any

$_ZN8gemmlowp4TaskD0Ev = comdat any

$_ZNSt3__16vectorIN6tflite21optimized_integer_ops14MeanWorkerTaskENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRKNS1_10MeanParamsERKNS1_12RuntimeShapeERPKaRiSH_SH_SD_RPaSH_SH_EEEvDpOT_ = comdat any

$_ZN8gemmlowp11WorkersPool7ExecuteIN6tflite21optimized_integer_ops14MeanWorkerTaskEEEviPT_ = comdat any

$_ZN8gemmlowp11WorkersPool13CreateWorkersEm = comdat any

$_ZN8gemmlowp6Worker10ThreadFuncEPv = comdat any

$_ZN8gemmlowp6Worker10ThreadFuncEv = comdat any

$_ZN6tflite13optimized_ops8MeanImplERKNS_10MeanParamsERKNS_12RuntimeShapeEPKhiiiS6_Phii = comdat any

$_ZN6tflite13optimized_ops14MeanWorkerTaskD0Ev = comdat any

$_ZN6tflite13optimized_ops14MeanWorkerTask3RunEv = comdat any

$_ZNSt3__16vectorIN6tflite13optimized_ops14MeanWorkerTaskENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRKNS1_10MeanParamsERKNS1_12RuntimeShapeERPKhRiSH_SH_SD_RPhSH_SH_EEEvDpOT_ = comdat any

$_ZN8gemmlowp11WorkersPool7ExecuteIN6tflite13optimized_ops14MeanWorkerTaskEEEviPT_ = comdat any

$_ZN6tflite13reference_ops4MeanIffEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_ = comdat any

$_ZTVN6tflite21optimized_integer_ops14MeanWorkerTaskE = comdat any

$_ZTVN8gemmlowp4TaskE = comdat any

$_ZTVN6tflite13optimized_ops14MeanWorkerTaskE = comdat any

@.str = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.3 = private unnamed_addr constant [63 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/reduce.cc\00", align 1
@.str.4 = private unnamed_addr constant [41 x i8] c"current >= 0 && current < input_num_dims\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.10 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.11 = private unnamed_addr constant [22 x i8] c"op_context.axis->type\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"kTfLiteInt32\00", align 1
@.str.13 = private unnamed_addr constant [12 x i8] c"input->type\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"kTfLiteBool\00", align 1
@.str.16 = private unnamed_addr constant [566 x i8] c"reference_ops::QuantizedMeanOrSum<>( GetTensorData<uint8_t>(op_context.input), op_context.input->params.zero_point, op_context.input->params.scale, op_context.input->dims->data, op_context.input->dims->size, GetTensorData<uint8_t>(op_context.output), op_context.output->params.zero_point, op_context.output->params.scale, op_context.output->dims->data, op_context.output->dims->size, GetTensorData<int>(op_context.axis), num_axis, op_context.params->keep_dims, GetTensorData<int>(temp_index), GetTensorData<int>(resolved_axis), GetTensorData<int32>(temp_sum), true)\00", align 1
@.str.17 = private unnamed_addr constant [564 x i8] c"reference_ops::QuantizedMeanOrSum<>( GetTensorData<int8_t>(op_context.input), op_context.input->params.zero_point, op_context.input->params.scale, op_context.input->dims->data, op_context.input->dims->size, GetTensorData<int8_t>(op_context.output), op_context.output->params.zero_point, op_context.output->params.scale, op_context.output->dims->data, op_context.output->dims->size, GetTensorData<int>(op_context.axis), num_axis, op_context.params->keep_dims, GetTensorData<int>(temp_index), GetTensorData<int>(resolved_axis), GetTensorData<int32>(temp_sum), true)\00", align 1
@_ZZN6tflite3ops7builtin17Register_MEAN_OPTEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin6reduce4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin6reduce4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin6reduce16PrepareMeanOrSumEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin6reduce8EvalMeanILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin17Register_MEAN_REFEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin6reduce4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin6reduce4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin6reduce16PrepareMeanOrSumEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin6reduce8EvalMeanILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin16Register_SUM_REFEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin6reduce4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin6reduce4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin6reduce16PrepareMeanOrSumEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin6reduce7EvalSumEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin24Register_REDUCE_PROD_REFEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin6reduce4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin6reduce4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin6reduce13PrepareSimpleEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin6reduce11EvalGenericILNS2_10KernelTypeE0ELNS2_10ReduceTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin23Register_REDUCE_MAX_REFEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin6reduce4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin6reduce4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin6reduce13PrepareSimpleEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin6reduce11EvalGenericILNS2_10KernelTypeE0ELNS2_10ReduceTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin23Register_REDUCE_MIN_REFEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin6reduce4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin6reduce4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin6reduce13PrepareSimpleEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin6reduce11EvalGenericILNS2_10KernelTypeE0ELNS2_10ReduceTypeE3EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin23Register_REDUCE_ANY_REFEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin6reduce4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin6reduce4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin6reduce10PrepareAnyEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin6reduce11EvalGenericILNS2_10KernelTypeE0ELNS2_10ReduceTypeE4EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str.19 = private unnamed_addr constant [32 x i8] c"op_context->input->params.scale\00", align 1
@.str.20 = private unnamed_addr constant [33 x i8] c"op_context->output->params.scale\00", align 1
@.str.21 = private unnamed_addr constant [37 x i8] c"op_context->input->params.zero_point\00", align 1
@.str.22 = private unnamed_addr constant [38 x i8] c"op_context->output->params.zero_point\00", align 1
@.str.23 = private unnamed_addr constant [401 x i8] c"reference_ops::ReduceGeneric<T>( GetTensorData<T>(op_context->input), op_context->input->dims->data, op_context->input->dims->size, GetTensorData<T>(op_context->output), op_context->output->dims->data, op_context->output->dims->size, GetTensorData<int>(op_context->axis), num_axis, op_context->params->keep_dims, GetTensorData<int>(temp_index), GetTensorData<int>(resolved_axis), init_value, reducer)\00", align 1
@.str.30 = private unnamed_addr constant [407 x i8] c"optimized_ops::MeanGeneral( GetTensorData<float>(op_context.input), op_context.input->dims->data, op_context.input->dims->size, GetTensorData<float>(op_context.output), op_context.output->dims->data, op_context.output->dims->size, GetTensorData<int>(op_context.axis), num_axis, op_context.params->keep_dims, GetTensorData<int>(temp_index), GetTensorData<int>(resolved_axis), GetTensorData<float>(temp_sum))\00", align 1
@.str.31 = private unnamed_addr constant [398 x i8] c"reference_ops::Mean( GetTensorData<int>(op_context.input), op_context.input->dims->data, op_context.input->dims->size, GetTensorData<int>(op_context.output), op_context.output->dims->data, op_context.output->dims->size, GetTensorData<int>(op_context.axis), num_axis, op_context.params->keep_dims, GetTensorData<int>(temp_index), GetTensorData<int>(resolved_axis), GetTensorData<int64_t>(temp_sum))\00", align 1
@.str.32 = private unnamed_addr constant [406 x i8] c"reference_ops::Mean( GetTensorData<int64_t>(op_context.input), op_context.input->dims->data, op_context.input->dims->size, GetTensorData<int64_t>(op_context.output), op_context.output->dims->data, op_context.output->dims->size, GetTensorData<int>(op_context.axis), num_axis, op_context.params->keep_dims, GetTensorData<int>(temp_index), GetTensorData<int>(resolved_axis), GetTensorData<int64_t>(temp_sum))\00", align 1
@.str.34 = private unnamed_addr constant [367 x i8] c"reference_ops::Mean( GetTensorData<int8_t>(input), input->dims->data, input->dims->size, GetTensorData<int8_t>(op_context.output), op_context.output->dims->data, op_context.output->dims->size, GetTensorData<int>(op_context.axis), num_axis, op_context.params->keep_dims, GetTensorData<int>(temp_index), GetTensorData<int>(resolved_axis), GetTensorData<int>(temp_sum))\00", align 1
@.str.35 = private unnamed_addr constant [508 x i8] c"reference_ops::QuantizedMeanOrSum<>( GetTensorData<int8_t>(input), input->params.zero_point, input->params.scale, input->dims->data, input->dims->size, GetTensorData<int8_t>(op_context.output), op_context.output->params.zero_point, op_context.output->params.scale, op_context.output->dims->data, op_context.output->dims->size, GetTensorData<int>(op_context.axis), num_axis, op_context.params->keep_dims, GetTensorData<int>(temp_index), GetTensorData<int>(resolved_axis), GetTensorData<int>(temp_sum), false)\00", align 1
@.str.37 = private unnamed_addr constant [402 x i8] c"reference_ops::Mean( GetTensorData<uint8_t>(op_context.input), op_context.input->dims->data, op_context.input->dims->size, GetTensorData<uint8_t>(op_context.output), op_context.output->dims->data, op_context.output->dims->size, GetTensorData<int>(op_context.axis), num_axis, op_context.params->keep_dims, GetTensorData<int>(temp_index), GetTensorData<int>(resolved_axis), GetTensorData<int>(temp_sum))\00", align 1
@.str.38 = private unnamed_addr constant [565 x i8] c"reference_ops::QuantizedMeanOrSum<>( GetTensorData<uint8_t>(op_context.input), op_context.input->params.zero_point, op_context.input->params.scale, op_context.input->dims->data, op_context.input->dims->size, GetTensorData<uint8_t>(op_context.output), op_context.output->params.zero_point, op_context.output->params.scale, op_context.output->dims->data, op_context.output->dims->size, GetTensorData<int>(op_context.axis), num_axis, op_context.params->keep_dims, GetTensorData<int>(temp_index), GetTensorData<int>(resolved_axis), GetTensorData<int>(temp_sum), false)\00", align 1
@_ZTVN6tflite21optimized_integer_ops14MeanWorkerTaskE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.gemmlowp::Task"*)* @_ZN8gemmlowp4TaskD2Ev to i8*), i8* bitcast (void (%"struct.tflite::optimized_integer_ops::MeanWorkerTask"*)* @_ZN6tflite21optimized_integer_ops14MeanWorkerTaskD0Ev to i8*), i8* bitcast (void (%"struct.tflite::optimized_integer_ops::MeanWorkerTask"*)* @_ZN6tflite21optimized_integer_ops14MeanWorkerTask3RunEv to i8*)] }, comdat, align 8
@_ZTVN8gemmlowp4TaskE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.gemmlowp::Task"*)* @_ZN8gemmlowp4TaskD2Ev to i8*), i8* bitcast (void (%"struct.gemmlowp::Task"*)* @_ZN8gemmlowp4TaskD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN6tflite13optimized_ops14MeanWorkerTaskE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.gemmlowp::Task"*)* @_ZN8gemmlowp4TaskD2Ev to i8*), i8* bitcast (void (%"struct.tflite::optimized_ops::MeanWorkerTask"*)* @_ZN6tflite13optimized_ops14MeanWorkerTaskD0Ev to i8*), i8* bitcast (void (%"struct.tflite::optimized_ops::MeanWorkerTask"*)* @_ZN6tflite13optimized_ops14MeanWorkerTask3RunEv to i8*)] }, comdat, align 8
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden nonnull i8* @_ZN6tflite3ops7builtin6reduce4InitEP13TfLiteContextPKcm(%struct.TfLiteContext*, i8* nocapture readnone, i64) #0 {
  %4 = tail call i8* @_Znwm(i64 12) #15
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 12, i1 false)
  %5 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 6
  %6 = load i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, i32*)** %5, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = tail call i32 %6(%struct.TfLiteContext* %0, i32 3, i32* %8) #16
  ret i8* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite3ops7builtin6reduce4FreeEP13TfLiteContextPv(%struct.TfLiteContext* nocapture readnone, i8*) #0 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZdlPv(i8* nonnull %1) #15
  br label %5

5:                                                ; preds = %4, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin6reduce14ResizeTempAxisEP13TfLiteContextPNS2_9OpContextEP12TfLiteTensor(%struct.TfLiteContext*, %"struct.tflite::ops::builtin::reduce::OpContext"* nocapture readonly, %struct.TfLiteTensor*) local_unnamed_addr #0 {
  %4 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #16
  %5 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %1, i64 0, i32 2
  %6 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %8 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %7, align 8
  %9 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %84

12:                                               ; preds = %3
  %13 = sext i32 %10 to i64
  %14 = add nsw i64 %13, -1
  %15 = and i64 %13, 7
  %16 = icmp ult i64 %14, 7
  br i1 %16, label %65, label %17

17:                                               ; preds = %12
  %18 = sub nsw i64 %13, %15
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi i64 [ 0, %17 ], [ %62, %19 ]
  %21 = phi i64 [ 1, %17 ], [ %61, %19 ]
  %22 = phi i64 [ %18, %17 ], [ %63, %19 ]
  %23 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %20
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = mul nsw i64 %21, %25
  %27 = or i64 %20, 1
  %28 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = mul nsw i64 %26, %30
  %32 = or i64 %20, 2
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = mul nsw i64 %31, %35
  %37 = or i64 %20, 3
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = mul nsw i64 %36, %40
  %42 = or i64 %20, 4
  %43 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = sext i32 %44 to i64
  %46 = mul nsw i64 %41, %45
  %47 = or i64 %20, 5
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  %51 = mul nsw i64 %46, %50
  %52 = or i64 %20, 6
  %53 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = sext i32 %54 to i64
  %56 = mul nsw i64 %51, %55
  %57 = or i64 %20, 7
  %58 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = sext i32 %59 to i64
  %61 = mul nsw i64 %56, %60
  %62 = add nuw nsw i64 %20, 8
  %63 = add i64 %22, -8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %19

65:                                               ; preds = %19, %12
  %66 = phi i64 [ undef, %12 ], [ %61, %19 ]
  %67 = phi i64 [ 0, %12 ], [ %62, %19 ]
  %68 = phi i64 [ 1, %12 ], [ %61, %19 ]
  %69 = icmp eq i64 %15, 0
  br i1 %69, label %81, label %70

70:                                               ; preds = %65, %70
  %71 = phi i64 [ %78, %70 ], [ %67, %65 ]
  %72 = phi i64 [ %77, %70 ], [ %68, %65 ]
  %73 = phi i64 [ %79, %70 ], [ %15, %65 ]
  %74 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %71
  %75 = load i32, i32* %74, align 4
  %76 = sext i32 %75 to i64
  %77 = mul nsw i64 %72, %76
  %78 = add nuw nsw i64 %71, 1
  %79 = add i64 %73, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %70, !llvm.loop !2

81:                                               ; preds = %70, %65
  %82 = phi i64 [ %66, %65 ], [ %77, %70 ]
  %83 = trunc i64 %82 to i32
  br label %84

84:                                               ; preds = %81, %3
  %85 = phi i32 [ 1, %3 ], [ %83, %81 ]
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  store i32 %85, i32* %86, align 4
  %87 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %88 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %87, align 8
  %89 = tail call i32 %88(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %2, %struct.TfLiteIntArray* %4) #16
  ret i32 %89
}

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin6reduce13ResizeTempSumEP13TfLiteContextPNS2_9OpContextEP12TfLiteTensor(%struct.TfLiteContext*, %"struct.tflite::ops::builtin::reduce::OpContext"* nocapture readonly, %struct.TfLiteTensor*) local_unnamed_addr #0 {
  %4 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #16
  %5 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %1, i64 0, i32 3
  %6 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %8 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %7, align 8
  %9 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %84

12:                                               ; preds = %3
  %13 = sext i32 %10 to i64
  %14 = add nsw i64 %13, -1
  %15 = and i64 %13, 7
  %16 = icmp ult i64 %14, 7
  br i1 %16, label %65, label %17

17:                                               ; preds = %12
  %18 = sub nsw i64 %13, %15
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi i64 [ 0, %17 ], [ %62, %19 ]
  %21 = phi i64 [ 1, %17 ], [ %61, %19 ]
  %22 = phi i64 [ %18, %17 ], [ %63, %19 ]
  %23 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %20
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = mul nsw i64 %21, %25
  %27 = or i64 %20, 1
  %28 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = mul nsw i64 %26, %30
  %32 = or i64 %20, 2
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = mul nsw i64 %31, %35
  %37 = or i64 %20, 3
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = mul nsw i64 %36, %40
  %42 = or i64 %20, 4
  %43 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = sext i32 %44 to i64
  %46 = mul nsw i64 %41, %45
  %47 = or i64 %20, 5
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  %51 = mul nsw i64 %46, %50
  %52 = or i64 %20, 6
  %53 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = sext i32 %54 to i64
  %56 = mul nsw i64 %51, %55
  %57 = or i64 %20, 7
  %58 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = sext i32 %59 to i64
  %61 = mul nsw i64 %56, %60
  %62 = add nuw nsw i64 %20, 8
  %63 = add i64 %22, -8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %19

65:                                               ; preds = %19, %12
  %66 = phi i64 [ undef, %12 ], [ %61, %19 ]
  %67 = phi i64 [ 0, %12 ], [ %62, %19 ]
  %68 = phi i64 [ 1, %12 ], [ %61, %19 ]
  %69 = icmp eq i64 %15, 0
  br i1 %69, label %81, label %70

70:                                               ; preds = %65, %70
  %71 = phi i64 [ %78, %70 ], [ %67, %65 ]
  %72 = phi i64 [ %77, %70 ], [ %68, %65 ]
  %73 = phi i64 [ %79, %70 ], [ %15, %65 ]
  %74 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %71
  %75 = load i32, i32* %74, align 4
  %76 = sext i32 %75 to i64
  %77 = mul nsw i64 %72, %76
  %78 = add nuw nsw i64 %71, 1
  %79 = add i64 %73, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %70, !llvm.loop !4

81:                                               ; preds = %70, %65
  %82 = phi i64 [ %66, %65 ], [ %77, %70 ]
  %83 = trunc i64 %82 to i32
  br label %84

84:                                               ; preds = %81, %3
  %85 = phi i32 [ 1, %3 ], [ %83, %81 ]
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  store i32 %85, i32* %86, align 4
  %87 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %88 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %87, align 8
  %89 = tail call i32 %88(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %2, %struct.TfLiteIntArray* %4) #16
  ret i32 %89
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin6reduce18ResizeOutputTensorEP13TfLiteContextPNS2_9OpContextE(%struct.TfLiteContext*, %"struct.tflite::ops::builtin::reduce::OpContext"* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %1, i64 0, i32 2
  %4 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %79

10:                                               ; preds = %2
  %11 = sext i32 %8 to i64
  %12 = add nsw i64 %11, -1
  %13 = and i64 %11, 7
  %14 = icmp ult i64 %12, 7
  br i1 %14, label %63, label %15

15:                                               ; preds = %10
  %16 = sub nsw i64 %11, %13
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi i64 [ 0, %15 ], [ %60, %17 ]
  %19 = phi i64 [ 1, %15 ], [ %59, %17 ]
  %20 = phi i64 [ %16, %15 ], [ %61, %17 ]
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %18
  %22 = load i32, i32* %21, align 4
  %23 = sext i32 %22 to i64
  %24 = mul nsw i64 %19, %23
  %25 = or i64 %18, 1
  %26 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = mul nsw i64 %24, %28
  %30 = or i64 %18, 2
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %32 to i64
  %34 = mul nsw i64 %29, %33
  %35 = or i64 %18, 3
  %36 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = mul nsw i64 %34, %38
  %40 = or i64 %18, 4
  %41 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = sext i32 %42 to i64
  %44 = mul nsw i64 %39, %43
  %45 = or i64 %18, 5
  %46 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %47 to i64
  %49 = mul nsw i64 %44, %48
  %50 = or i64 %18, 6
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  %54 = mul nsw i64 %49, %53
  %55 = or i64 %18, 7
  %56 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = sext i32 %57 to i64
  %59 = mul nsw i64 %54, %58
  %60 = add nuw nsw i64 %18, 8
  %61 = add i64 %20, -8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %17

63:                                               ; preds = %17, %10
  %64 = phi i64 [ undef, %10 ], [ %59, %17 ]
  %65 = phi i64 [ 0, %10 ], [ %60, %17 ]
  %66 = phi i64 [ 1, %10 ], [ %59, %17 ]
  %67 = icmp eq i64 %13, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %63, %68
  %69 = phi i64 [ %76, %68 ], [ %65, %63 ]
  %70 = phi i64 [ %75, %68 ], [ %66, %63 ]
  %71 = phi i64 [ %77, %68 ], [ %13, %63 ]
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %69
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = mul nsw i64 %70, %74
  %76 = add nuw nsw i64 %69, 1
  %77 = add i64 %71, -1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %68, !llvm.loop !5

79:                                               ; preds = %63, %68, %2
  %80 = phi i64 [ 1, %2 ], [ %64, %63 ], [ %75, %68 ]
  %81 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %1, i64 0, i32 1
  %82 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %81, align 8
  %83 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %82, i64 0, i32 2
  %84 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %83, align 8
  %85 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %84, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %95

88:                                               ; preds = %79
  %89 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %90 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %89, align 8
  %91 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %1, i64 0, i32 3
  %92 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %91, align 8
  %93 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 0) #16
  %94 = tail call i32 %90(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %92, %struct.TfLiteIntArray* %93) #16
  br label %223

95:                                               ; preds = %79
  %96 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %99 = load i32*, i32** %98, align 8
  br label %100

100:                                              ; preds = %95, %97
  %101 = phi i32* [ %99, %97 ], [ null, %95 ]
  %102 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %1, i64 0, i32 0
  %103 = load %struct.TfLiteReducerParams*, %struct.TfLiteReducerParams** %102, align 8
  %104 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %103, i64 0, i32 0
  %105 = load i8, i8* %104, align 1, !range !6
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %142, label %107

107:                                              ; preds = %100
  %108 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %86) #16
  %109 = icmp sgt i32 %86, 0
  br i1 %109, label %110, label %115

110:                                              ; preds = %107
  %111 = icmp eq i64 %80, 0
  %112 = zext i32 %86 to i64
  br label %113

113:                                              ; preds = %137, %110
  %114 = phi i64 [ 0, %110 ], [ %140, %137 ]
  br i1 %111, label %134, label %123

115:                                              ; preds = %137, %107
  %116 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %117 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %116, align 8
  %118 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %1, i64 0, i32 3
  %119 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %118, align 8
  %120 = tail call i32 %117(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %119, %struct.TfLiteIntArray* %108) #16
  br label %223

121:                                              ; preds = %123
  %122 = icmp eq i64 %133, %80
  br i1 %122, label %134, label %123

123:                                              ; preds = %113, %121
  %124 = phi i64 [ %133, %121 ], [ 0, %113 ]
  %125 = getelementptr inbounds i32, i32* %101, i64 %124
  %126 = load i32, i32* %125, align 4
  %127 = zext i32 %126 to i64
  %128 = icmp eq i64 %114, %127
  %129 = add nsw i32 %126, %86
  %130 = zext i32 %129 to i64
  %131 = icmp eq i64 %114, %130
  %132 = or i1 %128, %131
  %133 = add nuw i64 %124, 1
  br i1 %132, label %137, label %121

134:                                              ; preds = %121, %113
  %135 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %84, i64 0, i32 1, i64 %114
  %136 = load i32, i32* %135, align 4
  br label %137

137:                                              ; preds = %123, %134
  %138 = phi i32 [ %136, %134 ], [ 1, %123 ]
  %139 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %108, i64 0, i32 1, i64 %114
  store i32 %138, i32* %139, align 4
  %140 = add nuw nsw i64 %114, 1
  %141 = icmp eq i64 %140, %112
  br i1 %141, label %115, label %113

142:                                              ; preds = %100
  %143 = icmp eq i64 %80, 0
  br i1 %143, label %181, label %144

144:                                              ; preds = %142
  %145 = trunc i64 %80 to i32
  br label %146

146:                                              ; preds = %144, %174
  %147 = phi i64 [ %176, %174 ], [ 0, %144 ]
  %148 = phi i32 [ %175, %174 ], [ %145, %144 ]
  %149 = getelementptr inbounds i32, i32* %101, i64 %147
  %150 = load i32, i32* %149, align 4
  %151 = icmp slt i32 %150, 0
  %152 = select i1 %151, i32 %86, i32 0
  %153 = add nsw i32 %152, %150
  %154 = icmp sgt i32 %153, -1
  %155 = icmp slt i32 %153, %86
  %156 = and i1 %154, %155
  br i1 %156, label %157, label %178

157:                                              ; preds = %146
  %158 = icmp eq i64 %147, 0
  br i1 %158, label %174, label %159

159:                                              ; preds = %157, %159
  %160 = phi i64 [ %170, %159 ], [ 0, %157 ]
  %161 = phi i32 [ %169, %159 ], [ %148, %157 ]
  %162 = getelementptr inbounds i32, i32* %101, i64 %160
  %163 = load i32, i32* %162, align 4
  %164 = icmp slt i32 %163, 0
  %165 = select i1 %164, i32 %86, i32 0
  %166 = add nsw i32 %165, %163
  %167 = icmp eq i32 %153, %166
  %168 = zext i1 %167 to i32
  %169 = sub i32 %161, %168
  %170 = add nuw nsw i64 %160, 1
  %171 = xor i1 %167, true
  %172 = icmp ult i64 %170, %147
  %173 = and i1 %172, %171
  br i1 %173, label %159, label %174

174:                                              ; preds = %159, %157
  %175 = phi i32 [ %148, %157 ], [ %169, %159 ]
  %176 = add nuw i64 %147, 1
  %177 = icmp eq i64 %176, %80
  br i1 %177, label %181, label %146

178:                                              ; preds = %146
  %179 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %180 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %179, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %180(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 132, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0)) #16
  br label %223

181:                                              ; preds = %174, %142
  %182 = phi i32 [ 0, %142 ], [ %175, %174 ]
  %183 = sub nsw i32 %86, %182
  %184 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %183) #16
  %185 = icmp sgt i32 %86, 0
  br i1 %185, label %186, label %191

186:                                              ; preds = %181
  %187 = zext i32 %86 to i64
  br label %188

188:                                              ; preds = %219, %186
  %189 = phi i64 [ 0, %186 ], [ %221, %219 ]
  %190 = phi i32 [ 0, %186 ], [ %220, %219 ]
  br i1 %143, label %212, label %199

191:                                              ; preds = %219, %181
  %192 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %193 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %192, align 8
  %194 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %1, i64 0, i32 3
  %195 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %194, align 8
  %196 = tail call i32 %193(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %195, %struct.TfLiteIntArray* %184) #16
  br label %223

197:                                              ; preds = %199
  %198 = icmp eq i64 %209, %80
  br i1 %198, label %212, label %199

199:                                              ; preds = %188, %197
  %200 = phi i64 [ %209, %197 ], [ 0, %188 ]
  %201 = getelementptr inbounds i32, i32* %101, i64 %200
  %202 = load i32, i32* %201, align 4
  %203 = zext i32 %202 to i64
  %204 = icmp eq i64 %189, %203
  %205 = add nsw i32 %202, %86
  %206 = zext i32 %205 to i64
  %207 = icmp eq i64 %189, %206
  %208 = or i1 %204, %207
  %209 = add nuw i64 %200, 1
  br i1 %208, label %210, label %197

210:                                              ; preds = %199
  %211 = add nsw i32 %190, 1
  br label %219

212:                                              ; preds = %197, %188
  %213 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %84, i64 0, i32 1, i64 %189
  %214 = load i32, i32* %213, align 4
  %215 = trunc i64 %189 to i32
  %216 = sub nsw i32 %215, %190
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %184, i64 0, i32 1, i64 %217
  store i32 %214, i32* %218, align 4
  br label %219

219:                                              ; preds = %210, %212
  %220 = phi i32 [ %211, %210 ], [ %190, %212 ]
  %221 = add nuw nsw i64 %189, 1
  %222 = icmp eq i64 %221, %187
  br i1 %222, label %191, label %188

223:                                              ; preds = %178, %115, %191, %88
  %224 = phi i32 [ %94, %88 ], [ %120, %115 ], [ %196, %191 ], [ 1, %178 ]
  ret i32 %224
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin6reduce21InitializeTemporariesEP13TfLiteContextP10TfLiteNodePNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture, %"struct.tflite::ops::builtin::reduce::OpContext"* nocapture readonly) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %5 = bitcast i8** %4 to %"struct.tflite::ops::builtin::reduce::OpData"**
  %6 = load %"struct.tflite::ops::builtin::reduce::OpData"*, %"struct.tflite::ops::builtin::reduce::OpData"** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %8 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %7, align 8
  tail call void @TfLiteIntArrayFree(%struct.TfLiteIntArray* %8) #16
  %9 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 3) #16
  store %struct.TfLiteIntArray* %9, %struct.TfLiteIntArray** %7, align 8
  %10 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpData", %"struct.tflite::ops::builtin::reduce::OpData"* %6, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 0
  store i32 %11, i32* %12, align 4
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %7, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %19 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %18, align 8
  %20 = sext i32 %15 to i64
  %21 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %19, i64 %20
  br label %22

22:                                               ; preds = %3, %17
  %23 = phi %struct.TfLiteTensor* [ %21, %17 ], [ null, %3 ]
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %23, i64 0, i32 0
  store i32 2, i32* %24, align 8
  %25 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %23, i64 0, i32 4
  store i32 2, i32* %25, align 8
  %26 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #16
  %27 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 1
  %28 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %27, align 8
  %29 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %28, i64 0, i32 2
  %30 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %29, align 8
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %26, i64 0, i32 1, i64 0
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %35 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %34, align 8
  %36 = tail call i32 %35(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %23, %struct.TfLiteIntArray* %26) #16
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %85

38:                                               ; preds = %22
  %39 = load i32, i32* %10, align 4
  %40 = add nsw i32 %39, 1
  %41 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %7, align 8
  %42 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %41, i64 0, i32 1, i64 1
  store i32 %40, i32* %42, align 4
  %43 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %7, align 8
  %44 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %43, i64 0, i32 1, i64 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %49 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %48, align 8
  %50 = sext i32 %45 to i64
  %51 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %49, i64 %50
  br label %52

52:                                               ; preds = %38, %47
  %53 = phi %struct.TfLiteTensor* [ %51, %47 ], [ null, %38 ]
  %54 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %53, i64 0, i32 0
  store i32 2, i32* %54, align 8
  %55 = load i32, i32* %10, align 4
  %56 = add nsw i32 %55, 2
  %57 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %7, align 8
  %58 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %57, i64 0, i32 1, i64 2
  store i32 %56, i32* %58, align 4
  %59 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %7, align 8
  %60 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 2
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %61, 0
  br i1 %62, label %68, label %63

63:                                               ; preds = %52
  %64 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %65 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %64, align 8
  %66 = sext i32 %61 to i64
  %67 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %65, i64 %66
  br label %68

68:                                               ; preds = %52, %63
  %69 = phi %struct.TfLiteTensor* [ %67, %63 ], [ null, %52 ]
  %70 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %27, align 8
  %71 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %70, i64 0, i32 0
  %72 = load i32, i32* %71, align 8
  switch i32 %72, label %85 [
    i32 1, label %73
    i32 2, label %75
    i32 4, label %77
    i32 3, label %79
    i32 9, label %81
    i32 6, label %83
  ]

73:                                               ; preds = %68
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %69, i64 0, i32 0
  store i32 1, i32* %74, align 8
  br label %85

75:                                               ; preds = %68
  %76 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %69, i64 0, i32 0
  store i32 4, i32* %76, align 8
  br label %85

77:                                               ; preds = %68
  %78 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %69, i64 0, i32 0
  store i32 4, i32* %78, align 8
  br label %85

79:                                               ; preds = %68
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %69, i64 0, i32 0
  store i32 2, i32* %80, align 8
  br label %85

81:                                               ; preds = %68
  %82 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %69, i64 0, i32 0
  store i32 2, i32* %82, align 8
  br label %85

83:                                               ; preds = %68
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %69, i64 0, i32 0
  store i32 6, i32* %84, align 8
  br label %85

85:                                               ; preds = %68, %83, %81, %79, %77, %75, %73, %22
  %86 = phi i32 [ %36, %22 ], [ 1, %68 ], [ 0, %83 ], [ 0, %81 ], [ 0, %79 ], [ 0, %77 ], [ 0, %75 ], [ 0, %73 ]
  ret i32 %86
}

declare void @TfLiteIntArrayFree(%struct.TfLiteIntArray*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin6reduce13PrepareSimpleEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture) #0 {
  %3 = alloca %"struct.tflite::ops::builtin::reduce::OpContext", align 8
  %4 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %5 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %11 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %10, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %11(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 214, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %7, i32 2) #16
  br label %194

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %20 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %19, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %20(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 215, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i32 %16, i32 1) #16
  br label %194

21:                                               ; preds = %12
  %22 = bitcast %"struct.tflite::ops::builtin::reduce::OpContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #16
  %23 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 2
  %25 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 3
  %26 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %27 = bitcast i8** %26 to i64*
  %28 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 1
  %29 = bitcast %struct.TfLiteTensor** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  %30 = load i64, i64* %27, align 8
  %31 = bitcast %"struct.tflite::ops::builtin::reduce::OpContext"* %3 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %37 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %36, align 8
  %38 = sext i32 %33 to i64
  %39 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 %38
  br label %40

40:                                               ; preds = %35, %21
  %41 = phi %struct.TfLiteTensor* [ %39, %35 ], [ null, %21 ]
  store %struct.TfLiteTensor* %41, %struct.TfLiteTensor** %23, align 8
  %42 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %47 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %46, align 8
  %48 = sext i32 %43 to i64
  %49 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %47, i64 %48
  br label %50

50:                                               ; preds = %45, %40
  %51 = phi %struct.TfLiteTensor* [ %49, %45 ], [ null, %40 ]
  store %struct.TfLiteTensor* %51, %struct.TfLiteTensor** %24, align 8
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %57 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %56, align 8
  %58 = sext i32 %53 to i64
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 %58
  br label %60

60:                                               ; preds = %50, %55
  %61 = phi %struct.TfLiteTensor* [ %59, %55 ], [ null, %50 ]
  store %struct.TfLiteTensor* %61, %struct.TfLiteTensor** %25, align 8
  %62 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 2
  br i1 %64, label %70, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %67 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %66, align 8
  %68 = tail call i8* @TfLiteTypeGetName(i32 %63) #16
  %69 = tail call i8* @TfLiteTypeGetName(i32 2) #16
  tail call void (%struct.TfLiteContext*, i8*, ...) %67(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 218, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8* %68, i8* %69) #16
  br label %192

70:                                               ; preds = %60
  %71 = call i32 @_ZN6tflite3ops7builtin6reduce21InitializeTemporariesEP13TfLiteContextP10TfLiteNodePNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3)
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %192

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %75 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %74, align 8
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 1, i64 1
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = sext i32 %77 to i64
  %83 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 %82
  br label %84

84:                                               ; preds = %73, %79
  %85 = phi %struct.TfLiteTensor* [ %83, %79 ], [ null, %73 ]
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 4
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %103, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %61, i64 0, i32 4
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 4
  br i1 %92, label %96, label %93

93:                                               ; preds = %89
  store i32 4, i32* %90, align 8
  %94 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %61, i64 0, i32 1
  %95 = bitcast %union.TfLitePtrUnion* %94 to i8**
  store i8* null, i8** %95, align 8
  br label %96

96:                                               ; preds = %89, %93
  %97 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 4
  %98 = load i32, i32* %97, align 8
  %99 = icmp eq i32 %98, 4
  br i1 %99, label %192, label %100

100:                                              ; preds = %96
  store i32 4, i32* %97, align 8
  %101 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 1
  %102 = bitcast %union.TfLitePtrUnion* %101 to i8**
  store i8* null, i8** %102, align 8
  br label %192

103:                                              ; preds = %84
  %104 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 4
  store i32 2, i32* %104, align 8
  %105 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #16
  %106 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 2
  %107 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %106, align 8
  %108 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %107, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = icmp sgt i32 %109, 0
  br i1 %110, label %111, label %183

111:                                              ; preds = %103
  %112 = sext i32 %109 to i64
  %113 = add nsw i64 %112, -1
  %114 = and i64 %112, 7
  %115 = icmp ult i64 %113, 7
  br i1 %115, label %164, label %116

116:                                              ; preds = %111
  %117 = sub nsw i64 %112, %114
  br label %118

118:                                              ; preds = %118, %116
  %119 = phi i64 [ 0, %116 ], [ %161, %118 ]
  %120 = phi i64 [ 1, %116 ], [ %160, %118 ]
  %121 = phi i64 [ %117, %116 ], [ %162, %118 ]
  %122 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %107, i64 0, i32 1, i64 %119
  %123 = load i32, i32* %122, align 4
  %124 = sext i32 %123 to i64
  %125 = mul nsw i64 %120, %124
  %126 = or i64 %119, 1
  %127 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %107, i64 0, i32 1, i64 %126
  %128 = load i32, i32* %127, align 4
  %129 = sext i32 %128 to i64
  %130 = mul nsw i64 %125, %129
  %131 = or i64 %119, 2
  %132 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %107, i64 0, i32 1, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = sext i32 %133 to i64
  %135 = mul nsw i64 %130, %134
  %136 = or i64 %119, 3
  %137 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %107, i64 0, i32 1, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = sext i32 %138 to i64
  %140 = mul nsw i64 %135, %139
  %141 = or i64 %119, 4
  %142 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %107, i64 0, i32 1, i64 %141
  %143 = load i32, i32* %142, align 4
  %144 = sext i32 %143 to i64
  %145 = mul nsw i64 %140, %144
  %146 = or i64 %119, 5
  %147 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %107, i64 0, i32 1, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = sext i32 %148 to i64
  %150 = mul nsw i64 %145, %149
  %151 = or i64 %119, 6
  %152 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %107, i64 0, i32 1, i64 %151
  %153 = load i32, i32* %152, align 4
  %154 = sext i32 %153 to i64
  %155 = mul nsw i64 %150, %154
  %156 = or i64 %119, 7
  %157 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %107, i64 0, i32 1, i64 %156
  %158 = load i32, i32* %157, align 4
  %159 = sext i32 %158 to i64
  %160 = mul nsw i64 %155, %159
  %161 = add nuw nsw i64 %119, 8
  %162 = add i64 %121, -8
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %118

164:                                              ; preds = %118, %111
  %165 = phi i64 [ undef, %111 ], [ %160, %118 ]
  %166 = phi i64 [ 0, %111 ], [ %161, %118 ]
  %167 = phi i64 [ 1, %111 ], [ %160, %118 ]
  %168 = icmp eq i64 %114, 0
  br i1 %168, label %180, label %169

169:                                              ; preds = %164, %169
  %170 = phi i64 [ %177, %169 ], [ %166, %164 ]
  %171 = phi i64 [ %176, %169 ], [ %167, %164 ]
  %172 = phi i64 [ %178, %169 ], [ %114, %164 ]
  %173 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %107, i64 0, i32 1, i64 %170
  %174 = load i32, i32* %173, align 4
  %175 = sext i32 %174 to i64
  %176 = mul nsw i64 %171, %175
  %177 = add nuw nsw i64 %170, 1
  %178 = add i64 %172, -1
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %169, !llvm.loop !7

180:                                              ; preds = %169, %164
  %181 = phi i64 [ %165, %164 ], [ %176, %169 ]
  %182 = trunc i64 %181 to i32
  br label %183

183:                                              ; preds = %103, %180
  %184 = phi i32 [ 1, %103 ], [ %182, %180 ]
  %185 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %105, i64 0, i32 1, i64 0
  store i32 %184, i32* %185, align 4
  %186 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %187 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %186, align 8
  %188 = tail call i32 %187(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %85, %struct.TfLiteIntArray* %105) #16
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %192

190:                                              ; preds = %183
  %191 = call i32 @_ZN6tflite3ops7builtin6reduce18ResizeOutputTensorEP13TfLiteContextPNS2_9OpContextE(%struct.TfLiteContext* %0, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3)
  br label %192

192:                                              ; preds = %100, %96, %190, %183, %70, %65
  %193 = phi i32 [ 1, %65 ], [ %71, %70 ], [ %188, %183 ], [ %191, %190 ], [ 0, %96 ], [ 0, %100 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #16
  br label %194

194:                                              ; preds = %192, %18, %9
  %195 = phi i32 [ 1, %9 ], [ 1, %18 ], [ %193, %192 ]
  ret i32 %195
}

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin6reduce10PrepareAnyEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 236, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %6, i32 2) #16
  br label %32

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %17 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %16, align 8
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %17, i64 %18
  br label %20

20:                                               ; preds = %11, %15
  %21 = phi %struct.TfLiteTensor* [ %19, %15 ], [ null, %11 ]
  %22 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 6
  br i1 %24, label %30, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %27 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %26, align 8
  %28 = tail call i8* @TfLiteTypeGetName(i32 %23) #16
  %29 = tail call i8* @TfLiteTypeGetName(i32 6) #16
  tail call void (%struct.TfLiteContext*, i8*, ...) %27(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 238, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), i8* %28, i8* %29) #16
  br label %32

30:                                               ; preds = %20
  %31 = tail call i32 @_ZN6tflite3ops7builtin6reduce13PrepareSimpleEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1)
  br label %32

32:                                               ; preds = %25, %30, %8
  %33 = phi i32 [ 1, %8 ], [ 1, %25 ], [ %31, %30 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin6reduce16PrepareMeanOrSumEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture) #0 {
  %3 = alloca i32, align 4
  %4 = tail call i32 @_ZN6tflite3ops7builtin6reduce13PrepareSimpleEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %167

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %8 = bitcast i8** %7 to %"struct.tflite::ops::builtin::reduce::OpData"**
  %9 = load %"struct.tflite::ops::builtin::reduce::OpData"*, %"struct.tflite::ops::builtin::reduce::OpData"** %8, align 8
  %10 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %11 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %10, align 8
  %12 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %11, i64 0, i32 1, i64 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %17 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %16, align 8
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %17, i64 %18
  br label %20

20:                                               ; preds = %15, %6
  %21 = phi %struct.TfLiteTensor* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %11, i64 0, i32 1, i64 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %27 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %26, align 8
  %28 = sext i32 %23 to i64
  %29 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %27, i64 %28
  br label %30

30:                                               ; preds = %25, %20
  %31 = phi %struct.TfLiteTensor* [ %29, %25 ], [ null, %20 ]
  %32 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %33 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %32, align 8
  %34 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %33, i64 0, i32 1, i64 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %39 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %38, align 8
  %40 = sext i32 %35 to i64
  %41 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %39, i64 %40
  br label %42

42:                                               ; preds = %30, %37
  %43 = phi %struct.TfLiteTensor* [ %41, %37 ], [ null, %30 ]
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %21, i64 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 9
  br i1 %46, label %47, label %59

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %21, i64 0, i32 3, i32 0
  %49 = load float, float* %48, align 8
  %50 = fpext float %49 to double
  %51 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %43, i64 0, i32 3, i32 0
  %52 = load float, float* %51, align 8
  %53 = fpext float %52 to double
  %54 = fdiv double %50, %53
  %55 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #16
  store i32 -1431655766, i32* %3, align 4
  %56 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpData", %"struct.tflite::ops::builtin::reduce::OpData"* %9, i64 0, i32 0
  call void @_ZN6tflite18QuantizeMultiplierEdPiS0_(double %54, i32* %56, i32* nonnull %3) #16
  %57 = load i32, i32* %3, align 4
  %58 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpData", %"struct.tflite::ops::builtin::reduce::OpData"* %9, i64 0, i32 1
  store i32 %57, i32* %58, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #16
  br label %59

59:                                               ; preds = %47, %42
  %60 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %61 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %60, align 8
  %62 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %61, i64 0, i32 1, i64 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp slt i32 %63, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %67 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %66, align 8
  %68 = sext i32 %63 to i64
  %69 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 %68
  br label %70

70:                                               ; preds = %59, %65
  %71 = phi %struct.TfLiteTensor* [ %69, %65 ], [ null, %59 ]
  %72 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 4
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 1
  %75 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %71, i64 0, i32 4
  br i1 %74, label %82, label %76

76:                                               ; preds = %70
  %77 = load i32, i32* %75, align 8
  %78 = icmp eq i32 %77, 4
  br i1 %78, label %167, label %79

79:                                               ; preds = %76
  store i32 4, i32* %75, align 8
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %71, i64 0, i32 1
  %81 = bitcast %union.TfLitePtrUnion* %80 to i8**
  store i8* null, i8** %81, align 8
  br label %167

82:                                               ; preds = %70
  store i32 2, i32* %75, align 8
  %83 = call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #16
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %43, i64 0, i32 2
  %85 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %84, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp sgt i32 %87, 0
  br i1 %88, label %89, label %161

89:                                               ; preds = %82
  %90 = sext i32 %87 to i64
  %91 = add nsw i64 %90, -1
  %92 = and i64 %90, 7
  %93 = icmp ult i64 %91, 7
  br i1 %93, label %142, label %94

94:                                               ; preds = %89
  %95 = sub nsw i64 %90, %92
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i64 [ 0, %94 ], [ %139, %96 ]
  %98 = phi i64 [ 1, %94 ], [ %138, %96 ]
  %99 = phi i64 [ %95, %94 ], [ %140, %96 ]
  %100 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 %97
  %101 = load i32, i32* %100, align 4
  %102 = sext i32 %101 to i64
  %103 = mul nsw i64 %98, %102
  %104 = or i64 %97, 1
  %105 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = sext i32 %106 to i64
  %108 = mul nsw i64 %103, %107
  %109 = or i64 %97, 2
  %110 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = sext i32 %111 to i64
  %113 = mul nsw i64 %108, %112
  %114 = or i64 %97, 3
  %115 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = sext i32 %116 to i64
  %118 = mul nsw i64 %113, %117
  %119 = or i64 %97, 4
  %120 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 %119
  %121 = load i32, i32* %120, align 4
  %122 = sext i32 %121 to i64
  %123 = mul nsw i64 %118, %122
  %124 = or i64 %97, 5
  %125 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 %124
  %126 = load i32, i32* %125, align 4
  %127 = sext i32 %126 to i64
  %128 = mul nsw i64 %123, %127
  %129 = or i64 %97, 6
  %130 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = sext i32 %131 to i64
  %133 = mul nsw i64 %128, %132
  %134 = or i64 %97, 7
  %135 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = sext i32 %136 to i64
  %138 = mul nsw i64 %133, %137
  %139 = add nuw nsw i64 %97, 8
  %140 = add i64 %99, -8
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %96

142:                                              ; preds = %96, %89
  %143 = phi i64 [ undef, %89 ], [ %138, %96 ]
  %144 = phi i64 [ 0, %89 ], [ %139, %96 ]
  %145 = phi i64 [ 1, %89 ], [ %138, %96 ]
  %146 = icmp eq i64 %92, 0
  br i1 %146, label %158, label %147

147:                                              ; preds = %142, %147
  %148 = phi i64 [ %155, %147 ], [ %144, %142 ]
  %149 = phi i64 [ %154, %147 ], [ %145, %142 ]
  %150 = phi i64 [ %156, %147 ], [ %92, %142 ]
  %151 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 %148
  %152 = load i32, i32* %151, align 4
  %153 = sext i32 %152 to i64
  %154 = mul nsw i64 %149, %153
  %155 = add nuw nsw i64 %148, 1
  %156 = add i64 %150, -1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %147, !llvm.loop !8

158:                                              ; preds = %147, %142
  %159 = phi i64 [ %143, %142 ], [ %154, %147 ]
  %160 = trunc i64 %159 to i32
  br label %161

161:                                              ; preds = %82, %158
  %162 = phi i32 [ 1, %82 ], [ %160, %158 ]
  %163 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %83, i64 0, i32 1, i64 0
  store i32 %162, i32* %163, align 4
  %164 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %165 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %164, align 8
  %166 = call i32 %165(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %71, %struct.TfLiteIntArray* %83) #16
  br label %167

167:                                              ; preds = %161, %76, %79, %2
  %168 = phi i32 [ %4, %2 ], [ %166, %161 ], [ 0, %76 ], [ 0, %79 ]
  ret i32 %168
}

declare void @_ZN6tflite18QuantizeMultiplierEdPiS0_(double, i32*, i32*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6tflite3ops7builtin6reduce11ResolveAxisEPKiiPNS_10MeanParamsE(i32* nocapture readonly, i32, %"struct.tflite::MeanParams"* nocapture) local_unnamed_addr #5 {
  %4 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %2, i64 0, i32 0
  %5 = bitcast i32* %0 to i8*
  %6 = icmp sgt i32 %1, 0
  br i1 %6, label %7, label %99

7:                                                ; preds = %3
  %8 = zext i32 %1 to i64
  %9 = icmp ult i32 %1, 8
  br i1 %9, label %10, label %29

10:                                               ; preds = %95, %29, %7
  %11 = phi i64 [ 0, %29 ], [ 0, %7 ], [ %40, %95 ]
  %12 = xor i64 %11, -1
  %13 = add nsw i64 %12, %8
  %14 = and i64 %8, 3
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %10, %16
  %17 = phi i64 [ %23, %16 ], [ %11, %10 ]
  %18 = phi i64 [ %24, %16 ], [ %14, %10 ]
  %19 = getelementptr inbounds i32, i32* %0, i64 %17
  %20 = load i32, i32* %19, align 4
  %21 = trunc i32 %20 to i16
  %22 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %2, i64 0, i32 1, i64 %17
  store i16 %21, i16* %22, align 2
  %23 = add nuw nsw i64 %17, 1
  %24 = add i64 %18, -1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %16, !llvm.loop !9

26:                                               ; preds = %16, %10
  %27 = phi i64 [ %11, %10 ], [ %23, %16 ]
  %28 = icmp ult i64 %13, 3
  br i1 %28, label %97, label %161

29:                                               ; preds = %7
  %30 = getelementptr %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %2, i64 0, i32 1, i64 0
  %31 = shl nuw nsw i64 %8, 1
  %32 = add nuw nsw i64 %31, 2
  %33 = getelementptr i8, i8* %4, i64 %32
  %34 = getelementptr i32, i32* %0, i64 %8
  %35 = bitcast i32* %34 to i16*
  %36 = icmp ult i16* %30, %35
  %37 = icmp ugt i8* %33, %5
  %38 = and i1 %36, %37
  br i1 %38, label %10, label %39

39:                                               ; preds = %29
  %40 = and i64 %8, 4294967288
  %41 = add nsw i64 %40, -8
  %42 = lshr exact i64 %41, 3
  %43 = add nuw nsw i64 %42, 1
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %41, 0
  br i1 %45, label %79, label %46

46:                                               ; preds = %39
  %47 = sub nuw nsw i64 %43, %44
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i64 [ 0, %46 ], [ %76, %48 ]
  %50 = phi i64 [ %47, %46 ], [ %77, %48 ]
  %51 = getelementptr inbounds i32, i32* %0, i64 %49
  %52 = bitcast i32* %51 to <4 x i32>*
  %53 = load <4 x i32>, <4 x i32>* %52, align 4, !alias.scope !10
  %54 = getelementptr inbounds i32, i32* %51, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  %56 = load <4 x i32>, <4 x i32>* %55, align 4, !alias.scope !10
  %57 = trunc <4 x i32> %53 to <4 x i16>
  %58 = trunc <4 x i32> %56 to <4 x i16>
  %59 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %2, i64 0, i32 1, i64 %49
  %60 = bitcast i16* %59 to <4 x i16>*
  store <4 x i16> %57, <4 x i16>* %60, align 2, !alias.scope !13, !noalias !10
  %61 = getelementptr inbounds i16, i16* %59, i64 4
  %62 = bitcast i16* %61 to <4 x i16>*
  store <4 x i16> %58, <4 x i16>* %62, align 2, !alias.scope !13, !noalias !10
  %63 = or i64 %49, 8
  %64 = getelementptr inbounds i32, i32* %0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  %66 = load <4 x i32>, <4 x i32>* %65, align 4, !alias.scope !10
  %67 = getelementptr inbounds i32, i32* %64, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  %69 = load <4 x i32>, <4 x i32>* %68, align 4, !alias.scope !10
  %70 = trunc <4 x i32> %66 to <4 x i16>
  %71 = trunc <4 x i32> %69 to <4 x i16>
  %72 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %2, i64 0, i32 1, i64 %63
  %73 = bitcast i16* %72 to <4 x i16>*
  store <4 x i16> %70, <4 x i16>* %73, align 2, !alias.scope !13, !noalias !10
  %74 = getelementptr inbounds i16, i16* %72, i64 4
  %75 = bitcast i16* %74 to <4 x i16>*
  store <4 x i16> %71, <4 x i16>* %75, align 2, !alias.scope !13, !noalias !10
  %76 = add i64 %49, 16
  %77 = add i64 %50, -2
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %48, !llvm.loop !15

79:                                               ; preds = %48, %39
  %80 = phi i64 [ 0, %39 ], [ %76, %48 ]
  %81 = icmp eq i64 %44, 0
  br i1 %81, label %95, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds i32, i32* %0, i64 %80
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4, !alias.scope !10
  %86 = getelementptr inbounds i32, i32* %83, i64 4
  %87 = bitcast i32* %86 to <4 x i32>*
  %88 = load <4 x i32>, <4 x i32>* %87, align 4, !alias.scope !10
  %89 = trunc <4 x i32> %85 to <4 x i16>
  %90 = trunc <4 x i32> %88 to <4 x i16>
  %91 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %2, i64 0, i32 1, i64 %80
  %92 = bitcast i16* %91 to <4 x i16>*
  store <4 x i16> %89, <4 x i16>* %92, align 2, !alias.scope !13, !noalias !10
  %93 = getelementptr inbounds i16, i16* %91, i64 4
  %94 = bitcast i16* %93 to <4 x i16>*
  store <4 x i16> %90, <4 x i16>* %94, align 2, !alias.scope !13, !noalias !10
  br label %95

95:                                               ; preds = %79, %82
  %96 = icmp eq i64 %40, %8
  br i1 %96, label %97, label %10

97:                                               ; preds = %26, %161, %95
  %98 = icmp ult i32 %1, 4
  br i1 %98, label %99, label %189

99:                                               ; preds = %3, %97
  %100 = phi i32 [ %1, %97 ], [ 0, %3 ]
  %101 = zext i32 %100 to i64
  %102 = sub nsw i64 4, %101
  %103 = icmp ult i64 %102, 16
  br i1 %103, label %104, label %106

104:                                              ; preds = %159, %99
  %105 = phi i64 [ %101, %99 ], [ %108, %159 ]
  br label %184

106:                                              ; preds = %99
  %107 = and i64 %102, -16
  %108 = add nsw i64 %107, %101
  %109 = add nsw i64 %107, -16
  %110 = lshr exact i64 %109, 4
  %111 = add nuw nsw i64 %110, 1
  %112 = and i64 %111, 3
  %113 = icmp ult i64 %109, 48
  br i1 %113, label %145, label %114

114:                                              ; preds = %106
  %115 = sub nsw i64 %111, %112
  br label %116

116:                                              ; preds = %116, %114
  %117 = phi i64 [ 0, %114 ], [ %142, %116 ]
  %118 = phi i64 [ %115, %114 ], [ %143, %116 ]
  %119 = add i64 %117, %101
  %120 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %2, i64 0, i32 1, i64 %119
  %121 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %121, align 2
  %122 = getelementptr inbounds i16, i16* %120, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %123, align 2
  %124 = or i64 %117, 16
  %125 = add i64 %124, %101
  %126 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %2, i64 0, i32 1, i64 %125
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %127, align 2
  %128 = getelementptr inbounds i16, i16* %126, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %129, align 2
  %130 = or i64 %117, 32
  %131 = add i64 %130, %101
  %132 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %2, i64 0, i32 1, i64 %131
  %133 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %133, align 2
  %134 = getelementptr inbounds i16, i16* %132, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %135, align 2
  %136 = or i64 %117, 48
  %137 = add i64 %136, %101
  %138 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %2, i64 0, i32 1, i64 %137
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %139, align 2
  %140 = getelementptr inbounds i16, i16* %138, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %141, align 2
  %142 = add i64 %117, 64
  %143 = add i64 %118, -4
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %116, !llvm.loop !17

145:                                              ; preds = %116, %106
  %146 = phi i64 [ 0, %106 ], [ %142, %116 ]
  %147 = icmp eq i64 %112, 0
  br i1 %147, label %159, label %148

148:                                              ; preds = %145, %148
  %149 = phi i64 [ %156, %148 ], [ %146, %145 ]
  %150 = phi i64 [ %157, %148 ], [ %112, %145 ]
  %151 = add i64 %149, %101
  %152 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %2, i64 0, i32 1, i64 %151
  %153 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %153, align 2
  %154 = getelementptr inbounds i16, i16* %152, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %155, align 2
  %156 = add i64 %149, 16
  %157 = add i64 %150, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %148, !llvm.loop !18

159:                                              ; preds = %148, %145
  %160 = icmp eq i64 %102, %107
  br i1 %160, label %189, label %104

161:                                              ; preds = %26, %161
  %162 = phi i64 [ %182, %161 ], [ %27, %26 ]
  %163 = getelementptr inbounds i32, i32* %0, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = trunc i32 %164 to i16
  %166 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %2, i64 0, i32 1, i64 %162
  store i16 %165, i16* %166, align 2
  %167 = add nuw nsw i64 %162, 1
  %168 = getelementptr inbounds i32, i32* %0, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = trunc i32 %169 to i16
  %171 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %2, i64 0, i32 1, i64 %167
  store i16 %170, i16* %171, align 2
  %172 = add nuw nsw i64 %162, 2
  %173 = getelementptr inbounds i32, i32* %0, i64 %172
  %174 = load i32, i32* %173, align 4
  %175 = trunc i32 %174 to i16
  %176 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %2, i64 0, i32 1, i64 %172
  store i16 %175, i16* %176, align 2
  %177 = add nuw nsw i64 %162, 3
  %178 = getelementptr inbounds i32, i32* %0, i64 %177
  %179 = load i32, i32* %178, align 4
  %180 = trunc i32 %179 to i16
  %181 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %2, i64 0, i32 1, i64 %177
  store i16 %180, i16* %181, align 2
  %182 = add nuw nsw i64 %162, 4
  %183 = icmp eq i64 %182, %8
  br i1 %183, label %97, label %161, !llvm.loop !19

184:                                              ; preds = %104, %184
  %185 = phi i64 [ %187, %184 ], [ %105, %104 ]
  %186 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %2, i64 0, i32 1, i64 %185
  store i16 1, i16* %186, align 2
  %187 = add nuw nsw i64 %185, 1
  %188 = icmp eq i64 %187, 4
  br i1 %188, label %189, label %184, !llvm.loop !20

189:                                              ; preds = %184, %159, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin6reduce8EvalTypeIbEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::reduce::OpContext"*, i32) local_unnamed_addr #0 {
  %5 = icmp eq i32 %3, 4
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = tail call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIbEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i1 zeroext false, i1 (i1, i1)* nonnull @"_ZZN6tflite3ops7builtin6reduce8EvalTypeIbEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEEN3$_08__invokeEbb")
  br label %8

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %7, %6 ], [ 1, %4 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIbEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::reduce::OpContext"*, i1 zeroext, i1 (i1, i1)*) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 2
  %7 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %6, align 8
  %8 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %9 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %8, align 8
  %10 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %82

13:                                               ; preds = %5
  %14 = sext i32 %11 to i64
  %15 = add nsw i64 %14, -1
  %16 = and i64 %14, 7
  %17 = icmp ult i64 %15, 7
  br i1 %17, label %66, label %18

18:                                               ; preds = %13
  %19 = sub nsw i64 %14, %16
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i64 [ 0, %18 ], [ %63, %20 ]
  %22 = phi i64 [ 1, %18 ], [ %62, %20 ]
  %23 = phi i64 [ %19, %18 ], [ %64, %20 ]
  %24 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %21
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = mul nsw i64 %22, %26
  %28 = or i64 %21, 1
  %29 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = mul nsw i64 %27, %31
  %33 = or i64 %21, 2
  %34 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = mul nsw i64 %32, %36
  %38 = or i64 %21, 3
  %39 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %40 to i64
  %42 = mul nsw i64 %37, %41
  %43 = or i64 %21, 4
  %44 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  %47 = mul nsw i64 %42, %46
  %48 = or i64 %21, 5
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = mul nsw i64 %47, %51
  %53 = or i64 %21, 6
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = mul nsw i64 %52, %56
  %58 = or i64 %21, 7
  %59 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %60 to i64
  %62 = mul nsw i64 %57, %61
  %63 = add nuw nsw i64 %21, 8
  %64 = add i64 %23, -8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %20

66:                                               ; preds = %20, %13
  %67 = phi i64 [ undef, %13 ], [ %62, %20 ]
  %68 = phi i64 [ 0, %13 ], [ %63, %20 ]
  %69 = phi i64 [ 1, %13 ], [ %62, %20 ]
  %70 = icmp eq i64 %16, 0
  br i1 %70, label %82, label %71

71:                                               ; preds = %66, %71
  %72 = phi i64 [ %79, %71 ], [ %68, %66 ]
  %73 = phi i64 [ %78, %71 ], [ %69, %66 ]
  %74 = phi i64 [ %80, %71 ], [ %16, %66 ]
  %75 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %72
  %76 = load i32, i32* %75, align 4
  %77 = sext i32 %76 to i64
  %78 = mul nsw i64 %73, %77
  %79 = add nuw nsw i64 %72, 1
  %80 = add i64 %74, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %71, !llvm.loop !22

82:                                               ; preds = %66, %71, %5
  %83 = phi i64 [ 1, %5 ], [ %67, %66 ], [ %78, %71 ]
  %84 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %85 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %84, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp slt i32 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %91 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %90, align 8
  %92 = sext i32 %87 to i64
  %93 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %91, i64 %92
  br label %94

94:                                               ; preds = %82, %89
  %95 = phi %struct.TfLiteTensor* [ %93, %89 ], [ null, %82 ]
  %96 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 1
  %97 = load i32, i32* %96, align 4
  %98 = icmp slt i32 %97, 0
  br i1 %98, label %104, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %101 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %100, align 8
  %102 = sext i32 %97 to i64
  %103 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %101, i64 %102
  br label %104

104:                                              ; preds = %94, %99
  %105 = phi %struct.TfLiteTensor* [ %103, %99 ], [ null, %94 ]
  %106 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 3
  %107 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %106, align 8
  %108 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %107, i64 0, i32 4
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 4
  br i1 %110, label %111, label %201

111:                                              ; preds = %104
  %112 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #16
  %113 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %6, align 8
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %113, i64 0, i32 2
  %115 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %114, align 8
  %116 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %119, label %191

119:                                              ; preds = %111
  %120 = sext i32 %117 to i64
  %121 = add nsw i64 %120, -1
  %122 = and i64 %120, 7
  %123 = icmp ult i64 %121, 7
  br i1 %123, label %172, label %124

124:                                              ; preds = %119
  %125 = sub nsw i64 %120, %122
  br label %126

126:                                              ; preds = %126, %124
  %127 = phi i64 [ 0, %124 ], [ %169, %126 ]
  %128 = phi i64 [ 1, %124 ], [ %168, %126 ]
  %129 = phi i64 [ %125, %124 ], [ %170, %126 ]
  %130 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %127
  %131 = load i32, i32* %130, align 4
  %132 = sext i32 %131 to i64
  %133 = mul nsw i64 %128, %132
  %134 = or i64 %127, 1
  %135 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = sext i32 %136 to i64
  %138 = mul nsw i64 %133, %137
  %139 = or i64 %127, 2
  %140 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = sext i32 %141 to i64
  %143 = mul nsw i64 %138, %142
  %144 = or i64 %127, 3
  %145 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = sext i32 %146 to i64
  %148 = mul nsw i64 %143, %147
  %149 = or i64 %127, 4
  %150 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = sext i32 %151 to i64
  %153 = mul nsw i64 %148, %152
  %154 = or i64 %127, 5
  %155 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = sext i32 %156 to i64
  %158 = mul nsw i64 %153, %157
  %159 = or i64 %127, 6
  %160 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = sext i32 %161 to i64
  %163 = mul nsw i64 %158, %162
  %164 = or i64 %127, 7
  %165 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %164
  %166 = load i32, i32* %165, align 4
  %167 = sext i32 %166 to i64
  %168 = mul nsw i64 %163, %167
  %169 = add nuw nsw i64 %127, 8
  %170 = add i64 %129, -8
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %126

172:                                              ; preds = %126, %119
  %173 = phi i64 [ undef, %119 ], [ %168, %126 ]
  %174 = phi i64 [ 0, %119 ], [ %169, %126 ]
  %175 = phi i64 [ 1, %119 ], [ %168, %126 ]
  %176 = icmp eq i64 %122, 0
  br i1 %176, label %188, label %177

177:                                              ; preds = %172, %177
  %178 = phi i64 [ %185, %177 ], [ %174, %172 ]
  %179 = phi i64 [ %184, %177 ], [ %175, %172 ]
  %180 = phi i64 [ %186, %177 ], [ %122, %172 ]
  %181 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %178
  %182 = load i32, i32* %181, align 4
  %183 = sext i32 %182 to i64
  %184 = mul nsw i64 %179, %183
  %185 = add nuw nsw i64 %178, 1
  %186 = add i64 %180, -1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %177, !llvm.loop !23

188:                                              ; preds = %177, %172
  %189 = phi i64 [ %173, %172 ], [ %184, %177 ]
  %190 = trunc i64 %189 to i32
  br label %191

191:                                              ; preds = %111, %188
  %192 = phi i32 [ 1, %111 ], [ %190, %188 ]
  %193 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %112, i64 0, i32 1, i64 0
  store i32 %192, i32* %193, align 4
  %194 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %195 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %194, align 8
  %196 = tail call i32 %195(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %105, %struct.TfLiteIntArray* %112) #16
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %282

198:                                              ; preds = %191
  %199 = tail call i32 @_ZN6tflite3ops7builtin6reduce18ResizeOutputTensorEP13TfLiteContextPNS2_9OpContextE(%struct.TfLiteContext* %0, %"struct.tflite::ops::builtin::reduce::OpContext"* %2)
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %282

201:                                              ; preds = %198, %104
  %202 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 1
  %203 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %202, align 8
  %204 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 0
  %205 = load i32, i32* %204, align 8
  %206 = icmp eq i32 %205, 3
  br i1 %206, label %207, label %228

207:                                              ; preds = %201
  %208 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 3, i32 0
  %209 = load float, float* %208, align 8
  %210 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %106, align 8
  %211 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %210, i64 0, i32 3, i32 0
  %212 = load float, float* %211, align 8
  %213 = fcmp une float %209, %212
  br i1 %213, label %214, label %219

214:                                              ; preds = %207
  %215 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %216 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %215, align 8
  %217 = fpext float %209 to double
  %218 = fpext float %212 to double
  tail call void (%struct.TfLiteContext*, i8*, ...) %216(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 521, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0), double %217, double %218) #16
  br label %282

219:                                              ; preds = %207
  %220 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 3, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %210, i64 0, i32 3, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %221, %223
  br i1 %224, label %228, label %225

225:                                              ; preds = %219
  %226 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %227 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %226, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %227(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 523, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0), i32 %221, i32 %223) #16
  br label %282

228:                                              ; preds = %219, %201
  %229 = icmp eq %struct.TfLiteTensor* %203, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %228
  %231 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 1
  %232 = bitcast %union.TfLitePtrUnion* %231 to i8**
  %233 = load i8*, i8** %232, align 8
  br label %234

234:                                              ; preds = %228, %230
  %235 = phi i8* [ %233, %230 ], [ null, %228 ]
  %236 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 2
  %237 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %236, align 8
  %238 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %237, i64 0, i32 1, i64 0
  %239 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %237, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %106, align 8
  %242 = icmp eq %struct.TfLiteTensor* %241, null
  br i1 %242, label %247, label %243

243:                                              ; preds = %234
  %244 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %241, i64 0, i32 1
  %245 = bitcast %union.TfLitePtrUnion* %244 to i8**
  %246 = load i8*, i8** %245, align 8
  br label %247

247:                                              ; preds = %234, %243
  %248 = phi i8* [ %246, %243 ], [ null, %234 ]
  %249 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %241, i64 0, i32 2
  %250 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %249, align 8
  %251 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %250, i64 0, i32 1, i64 0
  %252 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %250, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %6, align 8
  %255 = icmp eq %struct.TfLiteTensor* %254, null
  br i1 %255, label %259, label %256

256:                                              ; preds = %247
  %257 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %254, i64 0, i32 1, i32 0
  %258 = load i32*, i32** %257, align 8
  br label %259

259:                                              ; preds = %247, %256
  %260 = phi i32* [ %258, %256 ], [ null, %247 ]
  %261 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 0
  %262 = load %struct.TfLiteReducerParams*, %struct.TfLiteReducerParams** %261, align 8
  %263 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %262, i64 0, i32 0
  %264 = load i8, i8* %263, align 1, !range !6
  %265 = icmp ne i8 %264, 0
  %266 = icmp eq %struct.TfLiteTensor* %95, null
  br i1 %266, label %270, label %267

267:                                              ; preds = %259
  %268 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %95, i64 0, i32 1, i32 0
  %269 = load i32*, i32** %268, align 8
  br label %270

270:                                              ; preds = %259, %267
  %271 = phi i32* [ %269, %267 ], [ null, %259 ]
  %272 = icmp eq %struct.TfLiteTensor* %105, null
  br i1 %272, label %276, label %273

273:                                              ; preds = %270
  %274 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %105, i64 0, i32 1, i32 0
  %275 = load i32*, i32** %274, align 8
  br label %276

276:                                              ; preds = %270, %273
  %277 = phi i32* [ %275, %273 ], [ null, %270 ]
  %278 = tail call zeroext i1 @_ZN6tflite13reference_ops13ReduceGenericIbEEbPKT_PKiiPS2_S6_iS6_lbPiS8_S2_PFS2_S2_S2_E(i8* %235, i32* %238, i32 %240, i8* %248, i32* %251, i32 %253, i32* %260, i64 %83, i1 zeroext %265, i32* %271, i32* %277, i1 zeroext %3, i1 (i1, i1)* %4)
  br i1 %278, label %282, label %279

279:                                              ; preds = %276
  %280 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %281 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %280, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %281(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 533, i8* getelementptr inbounds ([401 x i8], [401 x i8]* @.str.23, i64 0, i64 0)) #16
  br label %282

282:                                              ; preds = %276, %198, %191, %279, %225, %214
  %283 = phi i32 [ 1, %214 ], [ 1, %225 ], [ 1, %279 ], [ %199, %198 ], [ %196, %191 ], [ 0, %276 ]
  ret i32 %283
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin6reduce7EvalSumEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 {
  %3 = alloca %"struct.tflite::ops::builtin::reduce::OpContext", align 8
  %4 = bitcast %"struct.tflite::ops::builtin::reduce::OpContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 3
  %8 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %9 = bitcast i8** %8 to i64*
  %10 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 1
  %11 = bitcast %struct.TfLiteTensor** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load i64, i64* %9, align 8
  %13 = bitcast %"struct.tflite::ops::builtin::reduce::OpContext"* %3 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, 0
  %19 = inttoptr i64 %12 to %struct.TfLiteReducerParams*
  br i1 %18, label %25, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %17 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %20, %2
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %2 ]
  store %struct.TfLiteTensor* %26, %struct.TfLiteTensor** %5, align 8
  %27 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 %33
  br label %35

35:                                               ; preds = %30, %25
  %36 = phi %struct.TfLiteTensor* [ %34, %30 ], [ null, %25 ]
  store %struct.TfLiteTensor* %36, %struct.TfLiteTensor** %6, align 8
  %37 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %38 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %37, align 8
  %39 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %38, i64 0, i32 1, i64 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %44 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %43, align 8
  %45 = sext i32 %40 to i64
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 %45
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi %struct.TfLiteTensor* [ %46, %42 ], [ null, %35 ]
  store %struct.TfLiteTensor* %48, %struct.TfLiteTensor** %7, align 8
  %49 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 3, i32 0
  %50 = load float, float* %49, align 8
  %51 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 3, i32 0
  %52 = load float, float* %51, align 8
  %53 = fcmp oeq float %50, %52
  br i1 %53, label %54, label %60

54:                                               ; preds = %47
  %55 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 3, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 3, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp ne i32 %56, %58
  br label %60

60:                                               ; preds = %54, %47
  %61 = phi i1 [ true, %47 ], [ %59, %54 ]
  %62 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 3
  %65 = icmp eq i32 %63, 9
  %66 = or i1 %64, %65
  %67 = and i1 %61, %66
  br i1 %67, label %68, label %488

68:                                               ; preds = %60
  %69 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 2
  %70 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %69, align 8
  %71 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %70, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %74, label %143

74:                                               ; preds = %68
  %75 = sext i32 %72 to i64
  %76 = add nsw i64 %75, -1
  %77 = and i64 %75, 7
  %78 = icmp ult i64 %76, 7
  br i1 %78, label %127, label %79

79:                                               ; preds = %74
  %80 = sub nsw i64 %75, %77
  br label %81

81:                                               ; preds = %81, %79
  %82 = phi i64 [ 0, %79 ], [ %124, %81 ]
  %83 = phi i64 [ 1, %79 ], [ %123, %81 ]
  %84 = phi i64 [ %80, %79 ], [ %125, %81 ]
  %85 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %70, i64 0, i32 1, i64 %82
  %86 = load i32, i32* %85, align 4
  %87 = sext i32 %86 to i64
  %88 = mul nsw i64 %83, %87
  %89 = or i64 %82, 1
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %70, i64 0, i32 1, i64 %89
  %91 = load i32, i32* %90, align 4
  %92 = sext i32 %91 to i64
  %93 = mul nsw i64 %88, %92
  %94 = or i64 %82, 2
  %95 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %70, i64 0, i32 1, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = sext i32 %96 to i64
  %98 = mul nsw i64 %93, %97
  %99 = or i64 %82, 3
  %100 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %70, i64 0, i32 1, i64 %99
  %101 = load i32, i32* %100, align 4
  %102 = sext i32 %101 to i64
  %103 = mul nsw i64 %98, %102
  %104 = or i64 %82, 4
  %105 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %70, i64 0, i32 1, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = sext i32 %106 to i64
  %108 = mul nsw i64 %103, %107
  %109 = or i64 %82, 5
  %110 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %70, i64 0, i32 1, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = sext i32 %111 to i64
  %113 = mul nsw i64 %108, %112
  %114 = or i64 %82, 6
  %115 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %70, i64 0, i32 1, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = sext i32 %116 to i64
  %118 = mul nsw i64 %113, %117
  %119 = or i64 %82, 7
  %120 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %70, i64 0, i32 1, i64 %119
  %121 = load i32, i32* %120, align 4
  %122 = sext i32 %121 to i64
  %123 = mul nsw i64 %118, %122
  %124 = add nuw nsw i64 %82, 8
  %125 = add i64 %84, -8
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %81

127:                                              ; preds = %81, %74
  %128 = phi i64 [ undef, %74 ], [ %123, %81 ]
  %129 = phi i64 [ 0, %74 ], [ %124, %81 ]
  %130 = phi i64 [ 1, %74 ], [ %123, %81 ]
  %131 = icmp eq i64 %77, 0
  br i1 %131, label %143, label %132

132:                                              ; preds = %127, %132
  %133 = phi i64 [ %140, %132 ], [ %129, %127 ]
  %134 = phi i64 [ %139, %132 ], [ %130, %127 ]
  %135 = phi i64 [ %141, %132 ], [ %77, %127 ]
  %136 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %70, i64 0, i32 1, i64 %133
  %137 = load i32, i32* %136, align 4
  %138 = sext i32 %137 to i64
  %139 = mul nsw i64 %134, %138
  %140 = add nuw nsw i64 %133, 1
  %141 = add i64 %135, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %132, !llvm.loop !24

143:                                              ; preds = %127, %132, %68
  %144 = phi i64 [ 1, %68 ], [ %128, %127 ], [ %139, %132 ]
  %145 = trunc i64 %144 to i32
  %146 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %147 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %146, align 8
  %148 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %147, i64 0, i32 1, i64 0
  %149 = load i32, i32* %148, align 4
  %150 = icmp slt i32 %149, 0
  br i1 %150, label %156, label %151

151:                                              ; preds = %143
  %152 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %153 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %152, align 8
  %154 = sext i32 %149 to i64
  %155 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %153, i64 %154
  br label %156

156:                                              ; preds = %143, %151
  %157 = phi %struct.TfLiteTensor* [ %155, %151 ], [ null, %143 ]
  %158 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %147, i64 0, i32 1, i64 1
  %159 = load i32, i32* %158, align 4
  %160 = icmp slt i32 %159, 0
  br i1 %160, label %166, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %163 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %162, align 8
  %164 = sext i32 %159 to i64
  %165 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %163, i64 %164
  br label %166

166:                                              ; preds = %156, %161
  %167 = phi %struct.TfLiteTensor* [ %165, %161 ], [ null, %156 ]
  %168 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %147, i64 0, i32 1, i64 2
  %169 = load i32, i32* %168, align 4
  %170 = icmp slt i32 %169, 0
  br i1 %170, label %176, label %171

171:                                              ; preds = %166
  %172 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %173 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %172, align 8
  %174 = sext i32 %169 to i64
  %175 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %173, i64 %174
  br label %176

176:                                              ; preds = %166, %171
  %177 = phi %struct.TfLiteTensor* [ %175, %171 ], [ null, %166 ]
  %178 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 4
  %179 = load i32, i32* %178, align 8
  %180 = icmp eq i32 %179, 4
  br i1 %180, label %181, label %356

181:                                              ; preds = %176
  %182 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #16
  %183 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %69, align 8
  %184 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %183, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %259

187:                                              ; preds = %181
  %188 = sext i32 %185 to i64
  %189 = add nsw i64 %188, -1
  %190 = and i64 %188, 7
  %191 = icmp ult i64 %189, 7
  br i1 %191, label %240, label %192

192:                                              ; preds = %187
  %193 = sub nsw i64 %188, %190
  br label %194

194:                                              ; preds = %194, %192
  %195 = phi i64 [ 0, %192 ], [ %237, %194 ]
  %196 = phi i64 [ 1, %192 ], [ %236, %194 ]
  %197 = phi i64 [ %193, %192 ], [ %238, %194 ]
  %198 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %183, i64 0, i32 1, i64 %195
  %199 = load i32, i32* %198, align 4
  %200 = sext i32 %199 to i64
  %201 = mul nsw i64 %196, %200
  %202 = or i64 %195, 1
  %203 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %183, i64 0, i32 1, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = sext i32 %204 to i64
  %206 = mul nsw i64 %201, %205
  %207 = or i64 %195, 2
  %208 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %183, i64 0, i32 1, i64 %207
  %209 = load i32, i32* %208, align 4
  %210 = sext i32 %209 to i64
  %211 = mul nsw i64 %206, %210
  %212 = or i64 %195, 3
  %213 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %183, i64 0, i32 1, i64 %212
  %214 = load i32, i32* %213, align 4
  %215 = sext i32 %214 to i64
  %216 = mul nsw i64 %211, %215
  %217 = or i64 %195, 4
  %218 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %183, i64 0, i32 1, i64 %217
  %219 = load i32, i32* %218, align 4
  %220 = sext i32 %219 to i64
  %221 = mul nsw i64 %216, %220
  %222 = or i64 %195, 5
  %223 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %183, i64 0, i32 1, i64 %222
  %224 = load i32, i32* %223, align 4
  %225 = sext i32 %224 to i64
  %226 = mul nsw i64 %221, %225
  %227 = or i64 %195, 6
  %228 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %183, i64 0, i32 1, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = sext i32 %229 to i64
  %231 = mul nsw i64 %226, %230
  %232 = or i64 %195, 7
  %233 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %183, i64 0, i32 1, i64 %232
  %234 = load i32, i32* %233, align 4
  %235 = sext i32 %234 to i64
  %236 = mul nsw i64 %231, %235
  %237 = add nuw nsw i64 %195, 8
  %238 = add i64 %197, -8
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %240, label %194

240:                                              ; preds = %194, %187
  %241 = phi i64 [ undef, %187 ], [ %236, %194 ]
  %242 = phi i64 [ 0, %187 ], [ %237, %194 ]
  %243 = phi i64 [ 1, %187 ], [ %236, %194 ]
  %244 = icmp eq i64 %190, 0
  br i1 %244, label %256, label %245

245:                                              ; preds = %240, %245
  %246 = phi i64 [ %253, %245 ], [ %242, %240 ]
  %247 = phi i64 [ %252, %245 ], [ %243, %240 ]
  %248 = phi i64 [ %254, %245 ], [ %190, %240 ]
  %249 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %183, i64 0, i32 1, i64 %246
  %250 = load i32, i32* %249, align 4
  %251 = sext i32 %250 to i64
  %252 = mul nsw i64 %247, %251
  %253 = add nuw nsw i64 %246, 1
  %254 = add i64 %248, -1
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %256, label %245, !llvm.loop !25

256:                                              ; preds = %245, %240
  %257 = phi i64 [ %241, %240 ], [ %252, %245 ]
  %258 = trunc i64 %257 to i32
  br label %259

259:                                              ; preds = %181, %256
  %260 = phi i32 [ 1, %181 ], [ %258, %256 ]
  %261 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %182, i64 0, i32 1, i64 0
  store i32 %260, i32* %261, align 4
  %262 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %263 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %262, align 8
  %264 = tail call i32 %263(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %167, %struct.TfLiteIntArray* %182) #16
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %490

266:                                              ; preds = %259
  %267 = call i32 @_ZN6tflite3ops7builtin6reduce18ResizeOutputTensorEP13TfLiteContextPNS2_9OpContextE(%struct.TfLiteContext* %0, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3)
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %490

269:                                              ; preds = %266
  %270 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #16
  %271 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 2
  %272 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %271, align 8
  %273 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %272, i64 0, i32 0
  %274 = load i32, i32* %273, align 4
  %275 = icmp sgt i32 %274, 0
  br i1 %275, label %276, label %348

276:                                              ; preds = %269
  %277 = sext i32 %274 to i64
  %278 = add nsw i64 %277, -1
  %279 = and i64 %277, 7
  %280 = icmp ult i64 %278, 7
  br i1 %280, label %329, label %281

281:                                              ; preds = %276
  %282 = sub nsw i64 %277, %279
  br label %283

283:                                              ; preds = %283, %281
  %284 = phi i64 [ 0, %281 ], [ %326, %283 ]
  %285 = phi i64 [ 1, %281 ], [ %325, %283 ]
  %286 = phi i64 [ %282, %281 ], [ %327, %283 ]
  %287 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %272, i64 0, i32 1, i64 %284
  %288 = load i32, i32* %287, align 4
  %289 = sext i32 %288 to i64
  %290 = mul nsw i64 %285, %289
  %291 = or i64 %284, 1
  %292 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %272, i64 0, i32 1, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = sext i32 %293 to i64
  %295 = mul nsw i64 %290, %294
  %296 = or i64 %284, 2
  %297 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %272, i64 0, i32 1, i64 %296
  %298 = load i32, i32* %297, align 4
  %299 = sext i32 %298 to i64
  %300 = mul nsw i64 %295, %299
  %301 = or i64 %284, 3
  %302 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %272, i64 0, i32 1, i64 %301
  %303 = load i32, i32* %302, align 4
  %304 = sext i32 %303 to i64
  %305 = mul nsw i64 %300, %304
  %306 = or i64 %284, 4
  %307 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %272, i64 0, i32 1, i64 %306
  %308 = load i32, i32* %307, align 4
  %309 = sext i32 %308 to i64
  %310 = mul nsw i64 %305, %309
  %311 = or i64 %284, 5
  %312 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %272, i64 0, i32 1, i64 %311
  %313 = load i32, i32* %312, align 4
  %314 = sext i32 %313 to i64
  %315 = mul nsw i64 %310, %314
  %316 = or i64 %284, 6
  %317 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %272, i64 0, i32 1, i64 %316
  %318 = load i32, i32* %317, align 4
  %319 = sext i32 %318 to i64
  %320 = mul nsw i64 %315, %319
  %321 = or i64 %284, 7
  %322 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %272, i64 0, i32 1, i64 %321
  %323 = load i32, i32* %322, align 4
  %324 = sext i32 %323 to i64
  %325 = mul nsw i64 %320, %324
  %326 = add nuw nsw i64 %284, 8
  %327 = add i64 %286, -8
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %329, label %283

329:                                              ; preds = %283, %276
  %330 = phi i64 [ undef, %276 ], [ %325, %283 ]
  %331 = phi i64 [ 0, %276 ], [ %326, %283 ]
  %332 = phi i64 [ 1, %276 ], [ %325, %283 ]
  %333 = icmp eq i64 %279, 0
  br i1 %333, label %345, label %334

334:                                              ; preds = %329, %334
  %335 = phi i64 [ %342, %334 ], [ %331, %329 ]
  %336 = phi i64 [ %341, %334 ], [ %332, %329 ]
  %337 = phi i64 [ %343, %334 ], [ %279, %329 ]
  %338 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %272, i64 0, i32 1, i64 %335
  %339 = load i32, i32* %338, align 4
  %340 = sext i32 %339 to i64
  %341 = mul nsw i64 %336, %340
  %342 = add nuw nsw i64 %335, 1
  %343 = add i64 %337, -1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %334, !llvm.loop !26

345:                                              ; preds = %334, %329
  %346 = phi i64 [ %330, %329 ], [ %341, %334 ]
  %347 = trunc i64 %346 to i32
  br label %348

348:                                              ; preds = %269, %345
  %349 = phi i32 [ 1, %269 ], [ %347, %345 ]
  %350 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %270, i64 0, i32 1, i64 0
  store i32 %349, i32* %350, align 4
  %351 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %262, align 8
  %352 = tail call i32 %351(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %177, %struct.TfLiteIntArray* %270) #16
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %490

354:                                              ; preds = %348
  %355 = load i32, i32* %62, align 8
  br label %356

356:                                              ; preds = %354, %176
  %357 = phi i32 [ %355, %354 ], [ %63, %176 ]
  %358 = icmp eq i32 %357, 3
  br i1 %358, label %359, label %423

359:                                              ; preds = %356
  %360 = icmp eq %struct.TfLiteTensor* %26, null
  br i1 %360, label %365, label %361

361:                                              ; preds = %359
  %362 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1
  %363 = bitcast %union.TfLitePtrUnion* %362 to i8**
  %364 = load i8*, i8** %363, align 8
  br label %365

365:                                              ; preds = %359, %361
  %366 = phi i8* [ %364, %361 ], [ null, %359 ]
  %367 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 3, i32 1
  %368 = load i32, i32* %367, align 4
  %369 = load float, float* %49, align 8
  %370 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 2
  %371 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %370, align 8
  %372 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %371, i64 0, i32 1, i64 0
  %373 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %371, i64 0, i32 0
  %374 = load i32, i32* %373, align 4
  %375 = icmp eq %struct.TfLiteTensor* %48, null
  br i1 %375, label %380, label %376

376:                                              ; preds = %365
  %377 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 1
  %378 = bitcast %union.TfLitePtrUnion* %377 to i8**
  %379 = load i8*, i8** %378, align 8
  br label %380

380:                                              ; preds = %365, %376
  %381 = phi i8* [ %379, %376 ], [ null, %365 ]
  %382 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 3, i32 1
  %383 = load i32, i32* %382, align 4
  %384 = load float, float* %51, align 8
  %385 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 2
  %386 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %385, align 8
  %387 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %386, i64 0, i32 1, i64 0
  %388 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %386, i64 0, i32 0
  %389 = load i32, i32* %388, align 4
  %390 = icmp eq %struct.TfLiteTensor* %36, null
  br i1 %390, label %394, label %391

391:                                              ; preds = %380
  %392 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 1, i32 0
  %393 = load i32*, i32** %392, align 8
  br label %394

394:                                              ; preds = %380, %391
  %395 = phi i32* [ %393, %391 ], [ null, %380 ]
  %396 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %19, i64 0, i32 0
  %397 = load i8, i8* %396, align 1, !range !6
  %398 = icmp ne i8 %397, 0
  %399 = icmp eq %struct.TfLiteTensor* %157, null
  br i1 %399, label %403, label %400

400:                                              ; preds = %394
  %401 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %157, i64 0, i32 1, i32 0
  %402 = load i32*, i32** %401, align 8
  br label %403

403:                                              ; preds = %394, %400
  %404 = phi i32* [ %402, %400 ], [ null, %394 ]
  %405 = icmp eq %struct.TfLiteTensor* %167, null
  br i1 %405, label %409, label %406

406:                                              ; preds = %403
  %407 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %167, i64 0, i32 1, i32 0
  %408 = load i32*, i32** %407, align 8
  br label %409

409:                                              ; preds = %403, %406
  %410 = phi i32* [ %408, %406 ], [ null, %403 ]
  %411 = icmp eq %struct.TfLiteTensor* %177, null
  br i1 %411, label %415, label %412

412:                                              ; preds = %409
  %413 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %177, i64 0, i32 1, i32 0
  %414 = load i32*, i32** %413, align 8
  br label %415

415:                                              ; preds = %409, %412
  %416 = phi i32* [ %414, %412 ], [ null, %409 ]
  %417 = tail call zeroext i1 @_ZN6tflite13reference_ops18QuantizedMeanOrSumIhiEEbPKT_ifPKiiPS2_ifS6_iS6_ibPiS8_PT0_b(i8* %366, i32 %368, float %369, i32* %372, i32 %374, i8* %381, i32 %383, float %384, i32* %387, i32 %389, i32* %395, i32 %145, i1 zeroext %398, i32* %404, i32* %410, i32* %416, i1 zeroext true)
  br i1 %417, label %421, label %418

418:                                              ; preds = %415
  %419 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %420 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %419, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %420(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 666, i8* getelementptr inbounds ([566 x i8], [566 x i8]* @.str.16, i64 0, i64 0)) #16
  br label %490

421:                                              ; preds = %415
  %422 = load i32, i32* %62, align 8
  br label %423

423:                                              ; preds = %421, %356
  %424 = phi i32 [ %422, %421 ], [ %357, %356 ]
  %425 = icmp eq i32 %424, 9
  br i1 %425, label %426, label %490

426:                                              ; preds = %423
  %427 = icmp eq %struct.TfLiteTensor* %26, null
  br i1 %427, label %432, label %428

428:                                              ; preds = %426
  %429 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1
  %430 = bitcast %union.TfLitePtrUnion* %429 to i8**
  %431 = load i8*, i8** %430, align 8
  br label %432

432:                                              ; preds = %426, %428
  %433 = phi i8* [ %431, %428 ], [ null, %426 ]
  %434 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 3, i32 1
  %435 = load i32, i32* %434, align 4
  %436 = load float, float* %49, align 8
  %437 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 2
  %438 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %437, align 8
  %439 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %438, i64 0, i32 1, i64 0
  %440 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %438, i64 0, i32 0
  %441 = load i32, i32* %440, align 4
  %442 = icmp eq %struct.TfLiteTensor* %48, null
  br i1 %442, label %447, label %443

443:                                              ; preds = %432
  %444 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 1
  %445 = bitcast %union.TfLitePtrUnion* %444 to i8**
  %446 = load i8*, i8** %445, align 8
  br label %447

447:                                              ; preds = %432, %443
  %448 = phi i8* [ %446, %443 ], [ null, %432 ]
  %449 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 3, i32 1
  %450 = load i32, i32* %449, align 4
  %451 = load float, float* %51, align 8
  %452 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 2
  %453 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %452, align 8
  %454 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %453, i64 0, i32 1, i64 0
  %455 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %453, i64 0, i32 0
  %456 = load i32, i32* %455, align 4
  %457 = icmp eq %struct.TfLiteTensor* %36, null
  br i1 %457, label %461, label %458

458:                                              ; preds = %447
  %459 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 1, i32 0
  %460 = load i32*, i32** %459, align 8
  br label %461

461:                                              ; preds = %447, %458
  %462 = phi i32* [ %460, %458 ], [ null, %447 ]
  %463 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %19, i64 0, i32 0
  %464 = load i8, i8* %463, align 1, !range !6
  %465 = icmp ne i8 %464, 0
  %466 = icmp eq %struct.TfLiteTensor* %157, null
  br i1 %466, label %470, label %467

467:                                              ; preds = %461
  %468 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %157, i64 0, i32 1, i32 0
  %469 = load i32*, i32** %468, align 8
  br label %470

470:                                              ; preds = %461, %467
  %471 = phi i32* [ %469, %467 ], [ null, %461 ]
  %472 = icmp eq %struct.TfLiteTensor* %167, null
  br i1 %472, label %476, label %473

473:                                              ; preds = %470
  %474 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %167, i64 0, i32 1, i32 0
  %475 = load i32*, i32** %474, align 8
  br label %476

476:                                              ; preds = %470, %473
  %477 = phi i32* [ %475, %473 ], [ null, %470 ]
  %478 = icmp eq %struct.TfLiteTensor* %177, null
  br i1 %478, label %482, label %479

479:                                              ; preds = %476
  %480 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %177, i64 0, i32 1, i32 0
  %481 = load i32*, i32** %480, align 8
  br label %482

482:                                              ; preds = %476, %479
  %483 = phi i32* [ %481, %479 ], [ null, %476 ]
  %484 = tail call zeroext i1 @_ZN6tflite13reference_ops18QuantizedMeanOrSumIaiEEbPKT_ifPKiiPS2_ifS6_iS6_ibPiS8_PT0_b(i8* %433, i32 %435, float %436, i32* %439, i32 %441, i8* %448, i32 %450, float %451, i32* %454, i32 %456, i32* %462, i32 %145, i1 zeroext %465, i32* %471, i32* %477, i32* %483, i1 zeroext true)
  br i1 %484, label %490, label %485

485:                                              ; preds = %482
  %486 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %487 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %486, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %487(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 683, i8* getelementptr inbounds ([564 x i8], [564 x i8]* @.str.17, i64 0, i64 0)) #16
  br label %490

488:                                              ; preds = %60
  %489 = tail call i32 @_ZN6tflite3ops7builtin6reduce11EvalGenericILNS2_10KernelTypeE0ELNS2_10ReduceTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1)
  br label %490

490:                                              ; preds = %482, %423, %259, %266, %348, %418, %485, %488
  %491 = phi i32 [ %489, %488 ], [ 1, %485 ], [ 1, %418 ], [ %352, %348 ], [ %267, %266 ], [ %264, %259 ], [ 0, %423 ], [ 0, %482 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #16
  ret i32 %491
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite13reference_ops18QuantizedMeanOrSumIhiEEbPKT_ifPKiiPS2_ifS6_iS6_ibPiS8_PT0_b(i8*, i32, float, i32*, i32, i8*, i32, float, i32*, i32, i32*, i32, i1 zeroext, i32*, i32*, i32*, i1 zeroext) local_unnamed_addr #6 comdat {
  %18 = bitcast i32* %15 to i8*
  %19 = icmp sgt i32 %9, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %17
  %21 = zext i32 %9 to i64
  br label %120

22:                                               ; preds = %128
  %23 = icmp eq i64 %129, 0
  br i1 %23, label %132, label %24

24:                                               ; preds = %17, %22
  %25 = phi i64 [ %129, %22 ], [ 1, %17 ]
  %26 = icmp ult i64 %25, 8
  br i1 %26, label %27, label %44

27:                                               ; preds = %118, %44, %24
  %28 = phi i64 [ 0, %44 ], [ 0, %24 ], [ %52, %118 ]
  %29 = xor i64 %28, -1
  %30 = add i64 %25, %29
  %31 = and i64 %25, 3
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %41, label %33

33:                                               ; preds = %27, %33
  %34 = phi i64 [ %38, %33 ], [ %28, %27 ]
  %35 = phi i64 [ %39, %33 ], [ %31, %27 ]
  %36 = getelementptr inbounds i8, i8* %5, i64 %34
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds i32, i32* %15, i64 %34
  store i32 0, i32* %37, align 4
  %38 = add nuw i64 %34, 1
  %39 = add i64 %35, -1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %33, !llvm.loop !27

41:                                               ; preds = %33, %27
  %42 = phi i64 [ %28, %27 ], [ %38, %33 ]
  %43 = icmp ult i64 %30, 3
  br i1 %43, label %132, label %178

44:                                               ; preds = %24
  %45 = getelementptr i8, i8* %5, i64 %25
  %46 = getelementptr i32, i32* %15, i64 %25
  %47 = bitcast i32* %46 to i8*
  %48 = icmp ugt i8* %47, %5
  %49 = icmp ugt i8* %45, %18
  %50 = and i1 %48, %49
  br i1 %50, label %27, label %51

51:                                               ; preds = %44
  %52 = and i64 %25, -8
  %53 = add i64 %52, -8
  %54 = lshr exact i64 %53, 3
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 3
  %57 = icmp ult i64 %53, 24
  br i1 %57, label %101, label %58

58:                                               ; preds = %51
  %59 = sub nsw i64 %55, %56
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %98, %60 ]
  %62 = phi i64 [ %59, %58 ], [ %99, %60 ]
  %63 = getelementptr inbounds i8, i8* %5, i64 %61
  %64 = bitcast i8* %63 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %64, align 1, !alias.scope !28, !noalias !31
  %65 = getelementptr inbounds i8, i8* %63, i64 4
  %66 = bitcast i8* %65 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %66, align 1, !alias.scope !28, !noalias !31
  %67 = getelementptr inbounds i32, i32* %15, i64 %61
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %68, align 4, !alias.scope !31
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %70, align 4, !alias.scope !31
  %71 = or i64 %61, 8
  %72 = getelementptr inbounds i8, i8* %5, i64 %71
  %73 = bitcast i8* %72 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %73, align 1, !alias.scope !28, !noalias !31
  %74 = getelementptr inbounds i8, i8* %72, i64 4
  %75 = bitcast i8* %74 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %75, align 1, !alias.scope !28, !noalias !31
  %76 = getelementptr inbounds i32, i32* %15, i64 %71
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %77, align 4, !alias.scope !31
  %78 = getelementptr inbounds i32, i32* %76, i64 4
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %79, align 4, !alias.scope !31
  %80 = or i64 %61, 16
  %81 = getelementptr inbounds i8, i8* %5, i64 %80
  %82 = bitcast i8* %81 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %82, align 1, !alias.scope !28, !noalias !31
  %83 = getelementptr inbounds i8, i8* %81, i64 4
  %84 = bitcast i8* %83 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %84, align 1, !alias.scope !28, !noalias !31
  %85 = getelementptr inbounds i32, i32* %15, i64 %80
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %86, align 4, !alias.scope !31
  %87 = getelementptr inbounds i32, i32* %85, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %88, align 4, !alias.scope !31
  %89 = or i64 %61, 24
  %90 = getelementptr inbounds i8, i8* %5, i64 %89
  %91 = bitcast i8* %90 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %91, align 1, !alias.scope !28, !noalias !31
  %92 = getelementptr inbounds i8, i8* %90, i64 4
  %93 = bitcast i8* %92 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %93, align 1, !alias.scope !28, !noalias !31
  %94 = getelementptr inbounds i32, i32* %15, i64 %89
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %95, align 4, !alias.scope !31
  %96 = getelementptr inbounds i32, i32* %94, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %97, align 4, !alias.scope !31
  %98 = add i64 %61, 32
  %99 = add i64 %62, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %60, !llvm.loop !33

101:                                              ; preds = %60, %51
  %102 = phi i64 [ 0, %51 ], [ %98, %60 ]
  %103 = icmp eq i64 %56, 0
  br i1 %103, label %118, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %115, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %116, %104 ], [ %56, %101 ]
  %107 = getelementptr inbounds i8, i8* %5, i64 %105
  %108 = bitcast i8* %107 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %108, align 1, !alias.scope !28, !noalias !31
  %109 = getelementptr inbounds i8, i8* %107, i64 4
  %110 = bitcast i8* %109 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %110, align 1, !alias.scope !28, !noalias !31
  %111 = getelementptr inbounds i32, i32* %15, i64 %105
  %112 = bitcast i32* %111 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %112, align 4, !alias.scope !31
  %113 = getelementptr inbounds i32, i32* %111, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %114, align 4, !alias.scope !31
  %115 = add i64 %105, 8
  %116 = add i64 %106, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %104, !llvm.loop !34

118:                                              ; preds = %104, %101
  %119 = icmp eq i64 %25, %52
  br i1 %119, label %132, label %27

120:                                              ; preds = %128, %20
  %121 = phi i64 [ 0, %20 ], [ %130, %128 ]
  %122 = phi i64 [ 1, %20 ], [ %129, %128 ]
  %123 = getelementptr inbounds i32, i32* %8, i64 %121
  %124 = load i32, i32* %123, align 4
  %125 = sext i32 %124 to i64
  %126 = udiv i64 -1, %125
  %127 = icmp ugt i64 %122, %126
  br i1 %127, label %533, label %128

128:                                              ; preds = %120
  %129 = mul i64 %122, %125
  %130 = add nuw nsw i64 %121, 1
  %131 = icmp eq i64 %130, %21
  br i1 %131, label %22, label %120

132:                                              ; preds = %41, %178, %118, %22
  %133 = phi i1 [ true, %22 ], [ false, %118 ], [ false, %178 ], [ false, %41 ]
  %134 = phi i64 [ 0, %22 ], [ %25, %118 ], [ %25, %178 ], [ %25, %41 ]
  %135 = sext i32 %11 to i64
  %136 = icmp ne i32 %4, 0
  %137 = icmp sgt i32 %11, 0
  %138 = and i1 %136, %137
  br i1 %138, label %139, label %193

139:                                              ; preds = %132, %172
  %140 = phi i32 [ %173, %172 ], [ 0, %132 ]
  %141 = phi i32 [ %174, %172 ], [ 0, %132 ]
  %142 = phi i32 [ %175, %172 ], [ 0, %132 ]
  %143 = phi i64 [ %176, %172 ], [ 0, %132 ]
  %144 = getelementptr inbounds i32, i32* %10, i64 %143
  %145 = load i32, i32* %144, align 4
  %146 = icmp slt i32 %145, 0
  %147 = select i1 %146, i32 %4, i32 0
  %148 = add nsw i32 %147, %145
  %149 = icmp sgt i32 %148, -1
  %150 = icmp slt i32 %148, %4
  %151 = and i1 %149, %150
  br i1 %151, label %152, label %533

152:                                              ; preds = %139
  %153 = icmp sgt i32 %142, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = sext i32 %142 to i64
  br label %168

156:                                              ; preds = %152
  %157 = sext i32 %141 to i64
  %158 = load i32, i32* %14, align 4
  %159 = icmp eq i32 %158, %148
  br i1 %159, label %172, label %160

160:                                              ; preds = %156, %163
  %161 = phi i64 [ %167, %163 ], [ 1, %156 ]
  %162 = icmp slt i64 %161, %157
  br i1 %162, label %163, label %168

163:                                              ; preds = %160
  %164 = getelementptr inbounds i32, i32* %14, i64 %161
  %165 = load i32, i32* %164, align 4
  %166 = icmp eq i32 %165, %148
  %167 = add nuw nsw i64 %161, 1
  br i1 %166, label %172, label %160

168:                                              ; preds = %160, %154
  %169 = phi i64 [ %155, %154 ], [ %157, %160 ]
  %170 = getelementptr inbounds i32, i32* %14, i64 %169
  store i32 %148, i32* %170, align 4
  %171 = add nsw i32 %140, 1
  br label %172

172:                                              ; preds = %163, %156, %168
  %173 = phi i32 [ %171, %168 ], [ %140, %156 ], [ %140, %163 ]
  %174 = phi i32 [ %171, %168 ], [ %141, %156 ], [ %141, %163 ]
  %175 = phi i32 [ %171, %168 ], [ %142, %156 ], [ %141, %163 ]
  %176 = add nuw nsw i64 %143, 1
  %177 = icmp eq i64 %176, %135
  br i1 %177, label %193, label %139

178:                                              ; preds = %41, %178
  %179 = phi i64 [ %191, %178 ], [ %42, %41 ]
  %180 = getelementptr inbounds i8, i8* %5, i64 %179
  store i8 0, i8* %180, align 1
  %181 = getelementptr inbounds i32, i32* %15, i64 %179
  store i32 0, i32* %181, align 4
  %182 = add nuw i64 %179, 1
  %183 = getelementptr inbounds i8, i8* %5, i64 %182
  store i8 0, i8* %183, align 1
  %184 = getelementptr inbounds i32, i32* %15, i64 %182
  store i32 0, i32* %184, align 4
  %185 = add nuw i64 %179, 2
  %186 = getelementptr inbounds i8, i8* %5, i64 %185
  store i8 0, i8* %186, align 1
  %187 = getelementptr inbounds i32, i32* %15, i64 %185
  store i32 0, i32* %187, align 4
  %188 = add nuw i64 %179, 3
  %189 = getelementptr inbounds i8, i8* %5, i64 %188
  store i8 0, i8* %189, align 1
  %190 = getelementptr inbounds i32, i32* %15, i64 %188
  store i32 0, i32* %190, align 4
  %191 = add nuw i64 %179, 4
  %192 = icmp eq i64 %191, %25
  br i1 %192, label %132, label %178, !llvm.loop !35

193:                                              ; preds = %172, %132
  %194 = phi i32 [ 0, %132 ], [ %173, %172 ]
  %195 = icmp sgt i32 %4, 0
  br i1 %195, label %198, label %196

196:                                              ; preds = %193
  %197 = zext i32 %4 to i64
  br label %202

198:                                              ; preds = %193
  %199 = bitcast i32* %13 to i8*
  %200 = zext i32 %4 to i64
  %201 = shl nuw nsw i64 %200, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %199, i8 0, i64 %201, i1 false) #16
  br label %202

202:                                              ; preds = %198, %196
  %203 = phi i64 [ %197, %196 ], [ %200, %198 ]
  %204 = icmp eq i32* %14, null
  %205 = icmp slt i32 %194, 1
  %206 = or i1 %204, %205
  %207 = zext i32 %194 to i64
  %208 = icmp eq i32 %4, 0
  %209 = sext i32 %4 to i64
  %210 = add nsw i64 %203, -1
  %211 = and i64 %203, 3
  %212 = icmp ult i64 %210, 3
  %213 = sub nsw i64 %203, %211
  %214 = icmp eq i64 %211, 0
  br label %215

215:                                              ; preds = %318, %202
  br i1 %195, label %216, label %305

216:                                              ; preds = %215
  br i1 %212, label %259, label %217

217:                                              ; preds = %216, %217
  %218 = phi i64 [ %256, %217 ], [ 0, %216 ]
  %219 = phi i64 [ %255, %217 ], [ 0, %216 ]
  %220 = phi i64 [ %257, %217 ], [ %213, %216 ]
  %221 = getelementptr inbounds i32, i32* %3, i64 %218
  %222 = load i32, i32* %221, align 4
  %223 = sext i32 %222 to i64
  %224 = mul i64 %219, %223
  %225 = getelementptr inbounds i32, i32* %13, i64 %218
  %226 = load i32, i32* %225, align 4
  %227 = sext i32 %226 to i64
  %228 = add i64 %224, %227
  %229 = or i64 %218, 1
  %230 = getelementptr inbounds i32, i32* %3, i64 %229
  %231 = load i32, i32* %230, align 4
  %232 = sext i32 %231 to i64
  %233 = mul i64 %228, %232
  %234 = getelementptr inbounds i32, i32* %13, i64 %229
  %235 = load i32, i32* %234, align 4
  %236 = sext i32 %235 to i64
  %237 = add i64 %233, %236
  %238 = or i64 %218, 2
  %239 = getelementptr inbounds i32, i32* %3, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = sext i32 %240 to i64
  %242 = mul i64 %237, %241
  %243 = getelementptr inbounds i32, i32* %13, i64 %238
  %244 = load i32, i32* %243, align 4
  %245 = sext i32 %244 to i64
  %246 = add i64 %242, %245
  %247 = or i64 %218, 3
  %248 = getelementptr inbounds i32, i32* %3, i64 %247
  %249 = load i32, i32* %248, align 4
  %250 = sext i32 %249 to i64
  %251 = mul i64 %246, %250
  %252 = getelementptr inbounds i32, i32* %13, i64 %247
  %253 = load i32, i32* %252, align 4
  %254 = sext i32 %253 to i64
  %255 = add i64 %251, %254
  %256 = add nuw nsw i64 %218, 4
  %257 = add i64 %220, -4
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %217

259:                                              ; preds = %217, %216
  %260 = phi i64 [ undef, %216 ], [ %255, %217 ]
  %261 = phi i64 [ 0, %216 ], [ %256, %217 ]
  %262 = phi i64 [ 0, %216 ], [ %255, %217 ]
  br i1 %214, label %278, label %263

263:                                              ; preds = %259, %263
  %264 = phi i64 [ %275, %263 ], [ %261, %259 ]
  %265 = phi i64 [ %274, %263 ], [ %262, %259 ]
  %266 = phi i64 [ %276, %263 ], [ %211, %259 ]
  %267 = getelementptr inbounds i32, i32* %3, i64 %264
  %268 = load i32, i32* %267, align 4
  %269 = sext i32 %268 to i64
  %270 = mul i64 %265, %269
  %271 = getelementptr inbounds i32, i32* %13, i64 %264
  %272 = load i32, i32* %271, align 4
  %273 = sext i32 %272 to i64
  %274 = add i64 %270, %273
  %275 = add nuw nsw i64 %264, 1
  %276 = add i64 %266, -1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %263, !llvm.loop !36

278:                                              ; preds = %263, %259
  %279 = phi i64 [ %260, %259 ], [ %274, %263 ]
  br label %280

280:                                              ; preds = %278, %301
  %281 = phi i64 [ %303, %301 ], [ 0, %278 ]
  %282 = phi i64 [ %302, %301 ], [ 0, %278 ]
  br i1 %206, label %292, label %285

283:                                              ; preds = %285
  %284 = icmp eq i64 %291, %207
  br i1 %284, label %292, label %285

285:                                              ; preds = %280, %283
  %286 = phi i64 [ %291, %283 ], [ 0, %280 ]
  %287 = getelementptr inbounds i32, i32* %14, i64 %286
  %288 = load i32, i32* %287, align 4
  %289 = zext i32 %288 to i64
  %290 = icmp eq i64 %281, %289
  %291 = add nuw nsw i64 %286, 1
  br i1 %290, label %301, label %283

292:                                              ; preds = %283, %280
  %293 = getelementptr inbounds i32, i32* %3, i64 %281
  %294 = load i32, i32* %293, align 4
  %295 = sext i32 %294 to i64
  %296 = mul i64 %282, %295
  %297 = getelementptr inbounds i32, i32* %13, i64 %281
  %298 = load i32, i32* %297, align 4
  %299 = sext i32 %298 to i64
  %300 = add i64 %296, %299
  br label %301

301:                                              ; preds = %285, %292
  %302 = phi i64 [ %300, %292 ], [ %282, %285 ]
  %303 = add nuw nsw i64 %281, 1
  %304 = icmp eq i64 %303, %203
  br i1 %304, label %305, label %280

305:                                              ; preds = %301, %215
  %306 = phi i64 [ 0, %215 ], [ %279, %301 ]
  %307 = phi i64 [ 0, %215 ], [ %302, %301 ]
  %308 = getelementptr inbounds i32, i32* %15, i64 %307
  %309 = load i32, i32* %308, align 4
  %310 = getelementptr inbounds i8, i8* %0, i64 %306
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i32
  %313 = add nsw i32 %309, %312
  store i32 %313, i32* %308, align 4
  br i1 %208, label %326, label %314

314:                                              ; preds = %305, %318
  %315 = phi i64 [ %316, %318 ], [ %209, %305 ]
  %316 = add nsw i64 %315, -1
  %317 = icmp sgt i64 %315, 0
  br i1 %317, label %318, label %326

318:                                              ; preds = %314
  %319 = getelementptr inbounds i32, i32* %13, i64 %316
  %320 = load i32, i32* %319, align 4
  %321 = add nsw i32 %320, 1
  %322 = getelementptr inbounds i32, i32* %3, i64 %316
  %323 = load i32, i32* %322, align 4
  %324 = icmp eq i32 %323, %321
  %325 = select i1 %324, i32 0, i32 %321
  store i32 %325, i32* %319, align 4
  br i1 %324, label %314, label %215

326:                                              ; preds = %305, %314
  %327 = icmp sgt i32 %194, 0
  br i1 %327, label %328, label %344

328:                                              ; preds = %326, %338
  %329 = phi i64 [ %340, %338 ], [ 0, %326 ]
  %330 = phi i32 [ %339, %338 ], [ 1, %326 ]
  %331 = getelementptr inbounds i32, i32* %14, i64 %329
  %332 = load i32, i32* %331, align 4
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds i32, i32* %3, i64 %333
  %335 = load i32, i32* %334, align 4
  %336 = sdiv i32 2147483647, %330
  %337 = icmp ugt i32 %335, %336
  br i1 %337, label %533, label %338

338:                                              ; preds = %328
  %339 = mul i32 %335, %330
  %340 = add nuw nsw i64 %329, 1
  %341 = icmp eq i64 %340, %207
  br i1 %341, label %342, label %328

342:                                              ; preds = %338
  %343 = icmp sgt i32 %339, 0
  br i1 %343, label %344, label %533

344:                                              ; preds = %326, %342
  %345 = phi i32 [ %339, %342 ], [ 1, %326 ]
  %346 = fdiv float %2, %7
  %347 = sub nsw i32 0, %1
  %348 = sitofp i32 %347 to float
  %349 = fmul float %346, %348
  br i1 %16, label %350, label %472

350:                                              ; preds = %344
  %351 = sitofp i32 %345 to float
  %352 = fmul float %349, %351
  %353 = fadd float %352, 5.000000e-01
  br i1 %133, label %533, label %354

354:                                              ; preds = %350
  %355 = icmp ult i64 %134, 4
  br i1 %355, label %427, label %356

356:                                              ; preds = %354
  %357 = getelementptr i8, i8* %5, i64 %134
  %358 = getelementptr i32, i32* %15, i64 %134
  %359 = bitcast i32* %358 to i8*
  %360 = icmp ugt i8* %359, %5
  %361 = icmp ugt i8* %357, %18
  %362 = and i1 %360, %361
  br i1 %362, label %427, label %363

363:                                              ; preds = %356
  %364 = and i64 %134, -4
  %365 = insertelement <4 x float> undef, float %346, i32 0
  %366 = shufflevector <4 x float> %365, <4 x float> undef, <4 x i32> zeroinitializer
  %367 = insertelement <4 x float> undef, float %353, i32 0
  %368 = shufflevector <4 x float> %367, <4 x float> undef, <4 x i32> zeroinitializer
  %369 = insertelement <4 x i32> undef, i32 %6, i32 0
  %370 = shufflevector <4 x i32> %369, <4 x i32> undef, <4 x i32> zeroinitializer
  %371 = add i64 %364, -4
  %372 = lshr exact i64 %371, 2
  %373 = add nuw nsw i64 %372, 1
  %374 = and i64 %373, 1
  %375 = icmp eq i64 %371, 0
  br i1 %375, label %409, label %376

376:                                              ; preds = %363
  %377 = sub nuw nsw i64 %373, %374
  br label %378

378:                                              ; preds = %378, %376
  %379 = phi i64 [ 0, %376 ], [ %406, %378 ]
  %380 = phi i64 [ %377, %376 ], [ %407, %378 ]
  %381 = getelementptr inbounds i32, i32* %15, i64 %379
  %382 = bitcast i32* %381 to <4 x i32>*
  %383 = load <4 x i32>, <4 x i32>* %382, align 4, !alias.scope !37
  %384 = sitofp <4 x i32> %383 to <4 x float>
  %385 = fmul <4 x float> %366, %384
  %386 = fadd <4 x float> %368, %385
  %387 = call <4 x float> @llvm.round.v4f32(<4 x float> %386)
  %388 = fptosi <4 x float> %387 to <4 x i32>
  %389 = add nsw <4 x i32> %370, %388
  %390 = trunc <4 x i32> %389 to <4 x i8>
  %391 = getelementptr inbounds i8, i8* %5, i64 %379
  %392 = bitcast i8* %391 to <4 x i8>*
  store <4 x i8> %390, <4 x i8>* %392, align 1, !alias.scope !40, !noalias !37
  %393 = or i64 %379, 4
  %394 = getelementptr inbounds i32, i32* %15, i64 %393
  %395 = bitcast i32* %394 to <4 x i32>*
  %396 = load <4 x i32>, <4 x i32>* %395, align 4, !alias.scope !37
  %397 = sitofp <4 x i32> %396 to <4 x float>
  %398 = fmul <4 x float> %366, %397
  %399 = fadd <4 x float> %368, %398
  %400 = call <4 x float> @llvm.round.v4f32(<4 x float> %399)
  %401 = fptosi <4 x float> %400 to <4 x i32>
  %402 = add nsw <4 x i32> %370, %401
  %403 = trunc <4 x i32> %402 to <4 x i8>
  %404 = getelementptr inbounds i8, i8* %5, i64 %393
  %405 = bitcast i8* %404 to <4 x i8>*
  store <4 x i8> %403, <4 x i8>* %405, align 1, !alias.scope !40, !noalias !37
  %406 = add i64 %379, 8
  %407 = add i64 %380, -2
  %408 = icmp eq i64 %407, 0
  br i1 %408, label %409, label %378, !llvm.loop !42

409:                                              ; preds = %378, %363
  %410 = phi i64 [ 0, %363 ], [ %406, %378 ]
  %411 = icmp eq i64 %374, 0
  br i1 %411, label %425, label %412

412:                                              ; preds = %409
  %413 = getelementptr inbounds i32, i32* %15, i64 %410
  %414 = bitcast i32* %413 to <4 x i32>*
  %415 = load <4 x i32>, <4 x i32>* %414, align 4, !alias.scope !37
  %416 = sitofp <4 x i32> %415 to <4 x float>
  %417 = fmul <4 x float> %366, %416
  %418 = fadd <4 x float> %368, %417
  %419 = call <4 x float> @llvm.round.v4f32(<4 x float> %418)
  %420 = fptosi <4 x float> %419 to <4 x i32>
  %421 = add nsw <4 x i32> %370, %420
  %422 = trunc <4 x i32> %421 to <4 x i8>
  %423 = getelementptr inbounds i8, i8* %5, i64 %410
  %424 = bitcast i8* %423 to <4 x i8>*
  store <4 x i8> %422, <4 x i8>* %424, align 1, !alias.scope !40, !noalias !37
  br label %425

425:                                              ; preds = %409, %412
  %426 = icmp eq i64 %134, %364
  br i1 %426, label %533, label %427

427:                                              ; preds = %425, %356, %354
  %428 = phi i64 [ 0, %356 ], [ 0, %354 ], [ %364, %425 ]
  %429 = and i64 %134, 1
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %443, label %431

431:                                              ; preds = %427
  %432 = getelementptr inbounds i32, i32* %15, i64 %428
  %433 = load i32, i32* %432, align 4
  %434 = sitofp i32 %433 to float
  %435 = fmul float %346, %434
  %436 = fadd float %353, %435
  %437 = tail call float @llvm.round.f32(float %436) #16
  %438 = fptosi float %437 to i32
  %439 = add nsw i32 %438, %6
  %440 = trunc i32 %439 to i8
  %441 = getelementptr inbounds i8, i8* %5, i64 %428
  store i8 %440, i8* %441, align 1
  %442 = or i64 %428, 1
  br label %443

443:                                              ; preds = %427, %431
  %444 = phi i64 [ %428, %427 ], [ %442, %431 ]
  %445 = or i64 %428, 1
  %446 = icmp eq i64 %134, %445
  br i1 %446, label %533, label %447

447:                                              ; preds = %443, %447
  %448 = phi i64 [ %470, %447 ], [ %444, %443 ]
  %449 = getelementptr inbounds i32, i32* %15, i64 %448
  %450 = load i32, i32* %449, align 4
  %451 = sitofp i32 %450 to float
  %452 = fmul float %346, %451
  %453 = fadd float %353, %452
  %454 = tail call float @llvm.round.f32(float %453) #16
  %455 = fptosi float %454 to i32
  %456 = add nsw i32 %455, %6
  %457 = trunc i32 %456 to i8
  %458 = getelementptr inbounds i8, i8* %5, i64 %448
  store i8 %457, i8* %458, align 1
  %459 = add nuw i64 %448, 1
  %460 = getelementptr inbounds i32, i32* %15, i64 %459
  %461 = load i32, i32* %460, align 4
  %462 = sitofp i32 %461 to float
  %463 = fmul float %346, %462
  %464 = fadd float %353, %463
  %465 = tail call float @llvm.round.f32(float %464) #16
  %466 = fptosi float %465 to i32
  %467 = add nsw i32 %466, %6
  %468 = trunc i32 %467 to i8
  %469 = getelementptr inbounds i8, i8* %5, i64 %459
  store i8 %468, i8* %469, align 1
  %470 = add nuw i64 %448, 2
  %471 = icmp eq i64 %470, %134
  br i1 %471, label %533, label %447, !llvm.loop !43

472:                                              ; preds = %344
  %473 = fadd float %349, 5.000000e-01
  br i1 %133, label %533, label %474

474:                                              ; preds = %472
  %475 = sitofp i32 %345 to float
  %476 = sitofp i32 %6 to float
  %477 = icmp ult i64 %134, 4
  br i1 %477, label %515, label %478

478:                                              ; preds = %474
  %479 = getelementptr i8, i8* %5, i64 %134
  %480 = getelementptr i32, i32* %15, i64 %134
  %481 = bitcast i32* %480 to i8*
  %482 = icmp ugt i8* %481, %5
  %483 = icmp ugt i8* %479, %18
  %484 = and i1 %482, %483
  br i1 %484, label %515, label %485

485:                                              ; preds = %478
  %486 = and i64 %134, -4
  %487 = insertelement <4 x float> undef, float %475, i32 0
  %488 = shufflevector <4 x float> %487, <4 x float> undef, <4 x i32> zeroinitializer
  %489 = insertelement <4 x float> undef, float %346, i32 0
  %490 = shufflevector <4 x float> %489, <4 x float> undef, <4 x i32> zeroinitializer
  %491 = insertelement <4 x float> undef, float %473, i32 0
  %492 = shufflevector <4 x float> %491, <4 x float> undef, <4 x i32> zeroinitializer
  %493 = insertelement <4 x float> undef, float %476, i32 0
  %494 = shufflevector <4 x float> %493, <4 x float> undef, <4 x i32> zeroinitializer
  br label %495

495:                                              ; preds = %495, %485
  %496 = phi i64 [ 0, %485 ], [ %511, %495 ]
  %497 = getelementptr inbounds i32, i32* %15, i64 %496
  %498 = bitcast i32* %497 to <4 x i32>*
  %499 = load <4 x i32>, <4 x i32>* %498, align 4, !alias.scope !44
  %500 = sitofp <4 x i32> %499 to <4 x float>
  %501 = fdiv <4 x float> %500, %488
  %502 = fmul <4 x float> %490, %501
  %503 = fadd <4 x float> %492, %502
  %504 = call <4 x float> @llvm.round.v4f32(<4 x float> %503)
  %505 = fadd <4 x float> %504, %494
  %506 = call <4 x float> @llvm.minnum.v4f32(<4 x float> %505, <4 x float> <float 2.550000e+02, float 2.550000e+02, float 2.550000e+02, float 2.550000e+02>)
  %507 = call <4 x float> @llvm.maxnum.v4f32(<4 x float> %506, <4 x float> zeroinitializer)
  %508 = fptoui <4 x float> %507 to <4 x i8>
  %509 = getelementptr inbounds i8, i8* %5, i64 %496
  %510 = bitcast i8* %509 to <4 x i8>*
  store <4 x i8> %508, <4 x i8>* %510, align 1, !alias.scope !47, !noalias !44
  %511 = add i64 %496, 4
  %512 = icmp eq i64 %511, %486
  br i1 %512, label %513, label %495, !llvm.loop !49

513:                                              ; preds = %495
  %514 = icmp eq i64 %134, %486
  br i1 %514, label %533, label %515

515:                                              ; preds = %513, %478, %474
  %516 = phi i64 [ 0, %478 ], [ 0, %474 ], [ %486, %513 ]
  br label %517

517:                                              ; preds = %515, %517
  %518 = phi i64 [ %531, %517 ], [ %516, %515 ]
  %519 = getelementptr inbounds i32, i32* %15, i64 %518
  %520 = load i32, i32* %519, align 4
  %521 = sitofp i32 %520 to float
  %522 = fdiv float %521, %475
  %523 = fmul float %346, %522
  %524 = fadd float %473, %523
  %525 = tail call float @llvm.round.f32(float %524) #16
  %526 = fadd float %525, %476
  %527 = tail call float @llvm.minnum.f32(float %526, float 2.550000e+02) #16
  %528 = tail call float @llvm.maxnum.f32(float %527, float 0.000000e+00) #16
  %529 = fptoui float %528 to i8
  %530 = getelementptr inbounds i8, i8* %5, i64 %518
  store i8 %529, i8* %530, align 1
  %531 = add nuw i64 %518, 1
  %532 = icmp eq i64 %531, %134
  br i1 %532, label %533, label %517, !llvm.loop !50

533:                                              ; preds = %120, %139, %328, %517, %443, %447, %513, %425, %350, %472, %342
  %534 = phi i1 [ true, %342 ], [ true, %350 ], [ true, %472 ], [ true, %425 ], [ true, %513 ], [ true, %447 ], [ true, %443 ], [ true, %517 ], [ false, %328 ], [ false, %139 ], [ false, %120 ]
  ret i1 %534
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite13reference_ops18QuantizedMeanOrSumIaiEEbPKT_ifPKiiPS2_ifS6_iS6_ibPiS8_PT0_b(i8*, i32, float, i32*, i32, i8*, i32, float, i32*, i32, i32*, i32, i1 zeroext, i32*, i32*, i32*, i1 zeroext) local_unnamed_addr #6 comdat {
  %18 = bitcast i32* %15 to i8*
  %19 = icmp sgt i32 %9, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %17
  %21 = zext i32 %9 to i64
  br label %120

22:                                               ; preds = %128
  %23 = icmp eq i64 %129, 0
  br i1 %23, label %132, label %24

24:                                               ; preds = %17, %22
  %25 = phi i64 [ %129, %22 ], [ 1, %17 ]
  %26 = icmp ult i64 %25, 8
  br i1 %26, label %27, label %44

27:                                               ; preds = %118, %44, %24
  %28 = phi i64 [ 0, %44 ], [ 0, %24 ], [ %52, %118 ]
  %29 = xor i64 %28, -1
  %30 = add i64 %25, %29
  %31 = and i64 %25, 3
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %41, label %33

33:                                               ; preds = %27, %33
  %34 = phi i64 [ %38, %33 ], [ %28, %27 ]
  %35 = phi i64 [ %39, %33 ], [ %31, %27 ]
  %36 = getelementptr inbounds i8, i8* %5, i64 %34
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds i32, i32* %15, i64 %34
  store i32 0, i32* %37, align 4
  %38 = add nuw i64 %34, 1
  %39 = add i64 %35, -1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %33, !llvm.loop !51

41:                                               ; preds = %33, %27
  %42 = phi i64 [ %28, %27 ], [ %38, %33 ]
  %43 = icmp ult i64 %30, 3
  br i1 %43, label %132, label %178

44:                                               ; preds = %24
  %45 = getelementptr i8, i8* %5, i64 %25
  %46 = getelementptr i32, i32* %15, i64 %25
  %47 = bitcast i32* %46 to i8*
  %48 = icmp ugt i8* %47, %5
  %49 = icmp ugt i8* %45, %18
  %50 = and i1 %48, %49
  br i1 %50, label %27, label %51

51:                                               ; preds = %44
  %52 = and i64 %25, -8
  %53 = add i64 %52, -8
  %54 = lshr exact i64 %53, 3
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 3
  %57 = icmp ult i64 %53, 24
  br i1 %57, label %101, label %58

58:                                               ; preds = %51
  %59 = sub nsw i64 %55, %56
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %98, %60 ]
  %62 = phi i64 [ %59, %58 ], [ %99, %60 ]
  %63 = getelementptr inbounds i8, i8* %5, i64 %61
  %64 = bitcast i8* %63 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %64, align 1, !alias.scope !52, !noalias !55
  %65 = getelementptr inbounds i8, i8* %63, i64 4
  %66 = bitcast i8* %65 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %66, align 1, !alias.scope !52, !noalias !55
  %67 = getelementptr inbounds i32, i32* %15, i64 %61
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %68, align 4, !alias.scope !55
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %70, align 4, !alias.scope !55
  %71 = or i64 %61, 8
  %72 = getelementptr inbounds i8, i8* %5, i64 %71
  %73 = bitcast i8* %72 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %73, align 1, !alias.scope !52, !noalias !55
  %74 = getelementptr inbounds i8, i8* %72, i64 4
  %75 = bitcast i8* %74 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %75, align 1, !alias.scope !52, !noalias !55
  %76 = getelementptr inbounds i32, i32* %15, i64 %71
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %77, align 4, !alias.scope !55
  %78 = getelementptr inbounds i32, i32* %76, i64 4
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %79, align 4, !alias.scope !55
  %80 = or i64 %61, 16
  %81 = getelementptr inbounds i8, i8* %5, i64 %80
  %82 = bitcast i8* %81 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %82, align 1, !alias.scope !52, !noalias !55
  %83 = getelementptr inbounds i8, i8* %81, i64 4
  %84 = bitcast i8* %83 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %84, align 1, !alias.scope !52, !noalias !55
  %85 = getelementptr inbounds i32, i32* %15, i64 %80
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %86, align 4, !alias.scope !55
  %87 = getelementptr inbounds i32, i32* %85, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %88, align 4, !alias.scope !55
  %89 = or i64 %61, 24
  %90 = getelementptr inbounds i8, i8* %5, i64 %89
  %91 = bitcast i8* %90 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %91, align 1, !alias.scope !52, !noalias !55
  %92 = getelementptr inbounds i8, i8* %90, i64 4
  %93 = bitcast i8* %92 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %93, align 1, !alias.scope !52, !noalias !55
  %94 = getelementptr inbounds i32, i32* %15, i64 %89
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %95, align 4, !alias.scope !55
  %96 = getelementptr inbounds i32, i32* %94, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %97, align 4, !alias.scope !55
  %98 = add i64 %61, 32
  %99 = add i64 %62, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %60, !llvm.loop !57

101:                                              ; preds = %60, %51
  %102 = phi i64 [ 0, %51 ], [ %98, %60 ]
  %103 = icmp eq i64 %56, 0
  br i1 %103, label %118, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %115, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %116, %104 ], [ %56, %101 ]
  %107 = getelementptr inbounds i8, i8* %5, i64 %105
  %108 = bitcast i8* %107 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %108, align 1, !alias.scope !52, !noalias !55
  %109 = getelementptr inbounds i8, i8* %107, i64 4
  %110 = bitcast i8* %109 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %110, align 1, !alias.scope !52, !noalias !55
  %111 = getelementptr inbounds i32, i32* %15, i64 %105
  %112 = bitcast i32* %111 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %112, align 4, !alias.scope !55
  %113 = getelementptr inbounds i32, i32* %111, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %114, align 4, !alias.scope !55
  %115 = add i64 %105, 8
  %116 = add i64 %106, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %104, !llvm.loop !58

118:                                              ; preds = %104, %101
  %119 = icmp eq i64 %25, %52
  br i1 %119, label %132, label %27

120:                                              ; preds = %128, %20
  %121 = phi i64 [ 0, %20 ], [ %130, %128 ]
  %122 = phi i64 [ 1, %20 ], [ %129, %128 ]
  %123 = getelementptr inbounds i32, i32* %8, i64 %121
  %124 = load i32, i32* %123, align 4
  %125 = sext i32 %124 to i64
  %126 = udiv i64 -1, %125
  %127 = icmp ugt i64 %122, %126
  br i1 %127, label %533, label %128

128:                                              ; preds = %120
  %129 = mul i64 %122, %125
  %130 = add nuw nsw i64 %121, 1
  %131 = icmp eq i64 %130, %21
  br i1 %131, label %22, label %120

132:                                              ; preds = %41, %178, %118, %22
  %133 = phi i1 [ true, %22 ], [ false, %118 ], [ false, %178 ], [ false, %41 ]
  %134 = phi i64 [ 0, %22 ], [ %25, %118 ], [ %25, %178 ], [ %25, %41 ]
  %135 = sext i32 %11 to i64
  %136 = icmp ne i32 %4, 0
  %137 = icmp sgt i32 %11, 0
  %138 = and i1 %136, %137
  br i1 %138, label %139, label %193

139:                                              ; preds = %132, %172
  %140 = phi i32 [ %173, %172 ], [ 0, %132 ]
  %141 = phi i32 [ %174, %172 ], [ 0, %132 ]
  %142 = phi i32 [ %175, %172 ], [ 0, %132 ]
  %143 = phi i64 [ %176, %172 ], [ 0, %132 ]
  %144 = getelementptr inbounds i32, i32* %10, i64 %143
  %145 = load i32, i32* %144, align 4
  %146 = icmp slt i32 %145, 0
  %147 = select i1 %146, i32 %4, i32 0
  %148 = add nsw i32 %147, %145
  %149 = icmp sgt i32 %148, -1
  %150 = icmp slt i32 %148, %4
  %151 = and i1 %149, %150
  br i1 %151, label %152, label %533

152:                                              ; preds = %139
  %153 = icmp sgt i32 %142, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = sext i32 %142 to i64
  br label %168

156:                                              ; preds = %152
  %157 = sext i32 %141 to i64
  %158 = load i32, i32* %14, align 4
  %159 = icmp eq i32 %158, %148
  br i1 %159, label %172, label %160

160:                                              ; preds = %156, %163
  %161 = phi i64 [ %167, %163 ], [ 1, %156 ]
  %162 = icmp slt i64 %161, %157
  br i1 %162, label %163, label %168

163:                                              ; preds = %160
  %164 = getelementptr inbounds i32, i32* %14, i64 %161
  %165 = load i32, i32* %164, align 4
  %166 = icmp eq i32 %165, %148
  %167 = add nuw nsw i64 %161, 1
  br i1 %166, label %172, label %160

168:                                              ; preds = %160, %154
  %169 = phi i64 [ %155, %154 ], [ %157, %160 ]
  %170 = getelementptr inbounds i32, i32* %14, i64 %169
  store i32 %148, i32* %170, align 4
  %171 = add nsw i32 %140, 1
  br label %172

172:                                              ; preds = %163, %156, %168
  %173 = phi i32 [ %171, %168 ], [ %140, %156 ], [ %140, %163 ]
  %174 = phi i32 [ %171, %168 ], [ %141, %156 ], [ %141, %163 ]
  %175 = phi i32 [ %171, %168 ], [ %142, %156 ], [ %141, %163 ]
  %176 = add nuw nsw i64 %143, 1
  %177 = icmp eq i64 %176, %135
  br i1 %177, label %193, label %139

178:                                              ; preds = %41, %178
  %179 = phi i64 [ %191, %178 ], [ %42, %41 ]
  %180 = getelementptr inbounds i8, i8* %5, i64 %179
  store i8 0, i8* %180, align 1
  %181 = getelementptr inbounds i32, i32* %15, i64 %179
  store i32 0, i32* %181, align 4
  %182 = add nuw i64 %179, 1
  %183 = getelementptr inbounds i8, i8* %5, i64 %182
  store i8 0, i8* %183, align 1
  %184 = getelementptr inbounds i32, i32* %15, i64 %182
  store i32 0, i32* %184, align 4
  %185 = add nuw i64 %179, 2
  %186 = getelementptr inbounds i8, i8* %5, i64 %185
  store i8 0, i8* %186, align 1
  %187 = getelementptr inbounds i32, i32* %15, i64 %185
  store i32 0, i32* %187, align 4
  %188 = add nuw i64 %179, 3
  %189 = getelementptr inbounds i8, i8* %5, i64 %188
  store i8 0, i8* %189, align 1
  %190 = getelementptr inbounds i32, i32* %15, i64 %188
  store i32 0, i32* %190, align 4
  %191 = add nuw i64 %179, 4
  %192 = icmp eq i64 %191, %25
  br i1 %192, label %132, label %178, !llvm.loop !59

193:                                              ; preds = %172, %132
  %194 = phi i32 [ 0, %132 ], [ %173, %172 ]
  %195 = icmp sgt i32 %4, 0
  br i1 %195, label %198, label %196

196:                                              ; preds = %193
  %197 = zext i32 %4 to i64
  br label %202

198:                                              ; preds = %193
  %199 = bitcast i32* %13 to i8*
  %200 = zext i32 %4 to i64
  %201 = shl nuw nsw i64 %200, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %199, i8 0, i64 %201, i1 false) #16
  br label %202

202:                                              ; preds = %198, %196
  %203 = phi i64 [ %197, %196 ], [ %200, %198 ]
  %204 = icmp eq i32* %14, null
  %205 = icmp slt i32 %194, 1
  %206 = or i1 %204, %205
  %207 = zext i32 %194 to i64
  %208 = icmp eq i32 %4, 0
  %209 = sext i32 %4 to i64
  %210 = add nsw i64 %203, -1
  %211 = and i64 %203, 3
  %212 = icmp ult i64 %210, 3
  %213 = sub nsw i64 %203, %211
  %214 = icmp eq i64 %211, 0
  br label %215

215:                                              ; preds = %318, %202
  br i1 %195, label %216, label %305

216:                                              ; preds = %215
  br i1 %212, label %259, label %217

217:                                              ; preds = %216, %217
  %218 = phi i64 [ %256, %217 ], [ 0, %216 ]
  %219 = phi i64 [ %255, %217 ], [ 0, %216 ]
  %220 = phi i64 [ %257, %217 ], [ %213, %216 ]
  %221 = getelementptr inbounds i32, i32* %3, i64 %218
  %222 = load i32, i32* %221, align 4
  %223 = sext i32 %222 to i64
  %224 = mul i64 %219, %223
  %225 = getelementptr inbounds i32, i32* %13, i64 %218
  %226 = load i32, i32* %225, align 4
  %227 = sext i32 %226 to i64
  %228 = add i64 %224, %227
  %229 = or i64 %218, 1
  %230 = getelementptr inbounds i32, i32* %3, i64 %229
  %231 = load i32, i32* %230, align 4
  %232 = sext i32 %231 to i64
  %233 = mul i64 %228, %232
  %234 = getelementptr inbounds i32, i32* %13, i64 %229
  %235 = load i32, i32* %234, align 4
  %236 = sext i32 %235 to i64
  %237 = add i64 %233, %236
  %238 = or i64 %218, 2
  %239 = getelementptr inbounds i32, i32* %3, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = sext i32 %240 to i64
  %242 = mul i64 %237, %241
  %243 = getelementptr inbounds i32, i32* %13, i64 %238
  %244 = load i32, i32* %243, align 4
  %245 = sext i32 %244 to i64
  %246 = add i64 %242, %245
  %247 = or i64 %218, 3
  %248 = getelementptr inbounds i32, i32* %3, i64 %247
  %249 = load i32, i32* %248, align 4
  %250 = sext i32 %249 to i64
  %251 = mul i64 %246, %250
  %252 = getelementptr inbounds i32, i32* %13, i64 %247
  %253 = load i32, i32* %252, align 4
  %254 = sext i32 %253 to i64
  %255 = add i64 %251, %254
  %256 = add nuw nsw i64 %218, 4
  %257 = add i64 %220, -4
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %217

259:                                              ; preds = %217, %216
  %260 = phi i64 [ undef, %216 ], [ %255, %217 ]
  %261 = phi i64 [ 0, %216 ], [ %256, %217 ]
  %262 = phi i64 [ 0, %216 ], [ %255, %217 ]
  br i1 %214, label %278, label %263

263:                                              ; preds = %259, %263
  %264 = phi i64 [ %275, %263 ], [ %261, %259 ]
  %265 = phi i64 [ %274, %263 ], [ %262, %259 ]
  %266 = phi i64 [ %276, %263 ], [ %211, %259 ]
  %267 = getelementptr inbounds i32, i32* %3, i64 %264
  %268 = load i32, i32* %267, align 4
  %269 = sext i32 %268 to i64
  %270 = mul i64 %265, %269
  %271 = getelementptr inbounds i32, i32* %13, i64 %264
  %272 = load i32, i32* %271, align 4
  %273 = sext i32 %272 to i64
  %274 = add i64 %270, %273
  %275 = add nuw nsw i64 %264, 1
  %276 = add i64 %266, -1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %263, !llvm.loop !60

278:                                              ; preds = %263, %259
  %279 = phi i64 [ %260, %259 ], [ %274, %263 ]
  br label %280

280:                                              ; preds = %278, %301
  %281 = phi i64 [ %303, %301 ], [ 0, %278 ]
  %282 = phi i64 [ %302, %301 ], [ 0, %278 ]
  br i1 %206, label %292, label %285

283:                                              ; preds = %285
  %284 = icmp eq i64 %291, %207
  br i1 %284, label %292, label %285

285:                                              ; preds = %280, %283
  %286 = phi i64 [ %291, %283 ], [ 0, %280 ]
  %287 = getelementptr inbounds i32, i32* %14, i64 %286
  %288 = load i32, i32* %287, align 4
  %289 = zext i32 %288 to i64
  %290 = icmp eq i64 %281, %289
  %291 = add nuw nsw i64 %286, 1
  br i1 %290, label %301, label %283

292:                                              ; preds = %283, %280
  %293 = getelementptr inbounds i32, i32* %3, i64 %281
  %294 = load i32, i32* %293, align 4
  %295 = sext i32 %294 to i64
  %296 = mul i64 %282, %295
  %297 = getelementptr inbounds i32, i32* %13, i64 %281
  %298 = load i32, i32* %297, align 4
  %299 = sext i32 %298 to i64
  %300 = add i64 %296, %299
  br label %301

301:                                              ; preds = %285, %292
  %302 = phi i64 [ %300, %292 ], [ %282, %285 ]
  %303 = add nuw nsw i64 %281, 1
  %304 = icmp eq i64 %303, %203
  br i1 %304, label %305, label %280

305:                                              ; preds = %301, %215
  %306 = phi i64 [ 0, %215 ], [ %279, %301 ]
  %307 = phi i64 [ 0, %215 ], [ %302, %301 ]
  %308 = getelementptr inbounds i32, i32* %15, i64 %307
  %309 = load i32, i32* %308, align 4
  %310 = getelementptr inbounds i8, i8* %0, i64 %306
  %311 = load i8, i8* %310, align 1
  %312 = sext i8 %311 to i32
  %313 = add nsw i32 %309, %312
  store i32 %313, i32* %308, align 4
  br i1 %208, label %326, label %314

314:                                              ; preds = %305, %318
  %315 = phi i64 [ %316, %318 ], [ %209, %305 ]
  %316 = add nsw i64 %315, -1
  %317 = icmp sgt i64 %315, 0
  br i1 %317, label %318, label %326

318:                                              ; preds = %314
  %319 = getelementptr inbounds i32, i32* %13, i64 %316
  %320 = load i32, i32* %319, align 4
  %321 = add nsw i32 %320, 1
  %322 = getelementptr inbounds i32, i32* %3, i64 %316
  %323 = load i32, i32* %322, align 4
  %324 = icmp eq i32 %323, %321
  %325 = select i1 %324, i32 0, i32 %321
  store i32 %325, i32* %319, align 4
  br i1 %324, label %314, label %215

326:                                              ; preds = %305, %314
  %327 = icmp sgt i32 %194, 0
  br i1 %327, label %328, label %344

328:                                              ; preds = %326, %338
  %329 = phi i64 [ %340, %338 ], [ 0, %326 ]
  %330 = phi i32 [ %339, %338 ], [ 1, %326 ]
  %331 = getelementptr inbounds i32, i32* %14, i64 %329
  %332 = load i32, i32* %331, align 4
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds i32, i32* %3, i64 %333
  %335 = load i32, i32* %334, align 4
  %336 = sdiv i32 2147483647, %330
  %337 = icmp ugt i32 %335, %336
  br i1 %337, label %533, label %338

338:                                              ; preds = %328
  %339 = mul i32 %335, %330
  %340 = add nuw nsw i64 %329, 1
  %341 = icmp eq i64 %340, %207
  br i1 %341, label %342, label %328

342:                                              ; preds = %338
  %343 = icmp sgt i32 %339, 0
  br i1 %343, label %344, label %533

344:                                              ; preds = %326, %342
  %345 = phi i32 [ %339, %342 ], [ 1, %326 ]
  %346 = fdiv float %2, %7
  %347 = sub nsw i32 0, %1
  %348 = sitofp i32 %347 to float
  %349 = fmul float %346, %348
  br i1 %16, label %350, label %472

350:                                              ; preds = %344
  %351 = sitofp i32 %345 to float
  %352 = fmul float %349, %351
  %353 = fadd float %352, 5.000000e-01
  br i1 %133, label %533, label %354

354:                                              ; preds = %350
  %355 = icmp ult i64 %134, 4
  br i1 %355, label %427, label %356

356:                                              ; preds = %354
  %357 = getelementptr i8, i8* %5, i64 %134
  %358 = getelementptr i32, i32* %15, i64 %134
  %359 = bitcast i32* %358 to i8*
  %360 = icmp ugt i8* %359, %5
  %361 = icmp ugt i8* %357, %18
  %362 = and i1 %360, %361
  br i1 %362, label %427, label %363

363:                                              ; preds = %356
  %364 = and i64 %134, -4
  %365 = insertelement <4 x float> undef, float %346, i32 0
  %366 = shufflevector <4 x float> %365, <4 x float> undef, <4 x i32> zeroinitializer
  %367 = insertelement <4 x float> undef, float %353, i32 0
  %368 = shufflevector <4 x float> %367, <4 x float> undef, <4 x i32> zeroinitializer
  %369 = insertelement <4 x i32> undef, i32 %6, i32 0
  %370 = shufflevector <4 x i32> %369, <4 x i32> undef, <4 x i32> zeroinitializer
  %371 = add i64 %364, -4
  %372 = lshr exact i64 %371, 2
  %373 = add nuw nsw i64 %372, 1
  %374 = and i64 %373, 1
  %375 = icmp eq i64 %371, 0
  br i1 %375, label %409, label %376

376:                                              ; preds = %363
  %377 = sub nuw nsw i64 %373, %374
  br label %378

378:                                              ; preds = %378, %376
  %379 = phi i64 [ 0, %376 ], [ %406, %378 ]
  %380 = phi i64 [ %377, %376 ], [ %407, %378 ]
  %381 = getelementptr inbounds i32, i32* %15, i64 %379
  %382 = bitcast i32* %381 to <4 x i32>*
  %383 = load <4 x i32>, <4 x i32>* %382, align 4, !alias.scope !61
  %384 = sitofp <4 x i32> %383 to <4 x float>
  %385 = fmul <4 x float> %366, %384
  %386 = fadd <4 x float> %368, %385
  %387 = call <4 x float> @llvm.round.v4f32(<4 x float> %386)
  %388 = fptosi <4 x float> %387 to <4 x i32>
  %389 = add nsw <4 x i32> %370, %388
  %390 = trunc <4 x i32> %389 to <4 x i8>
  %391 = getelementptr inbounds i8, i8* %5, i64 %379
  %392 = bitcast i8* %391 to <4 x i8>*
  store <4 x i8> %390, <4 x i8>* %392, align 1, !alias.scope !64, !noalias !61
  %393 = or i64 %379, 4
  %394 = getelementptr inbounds i32, i32* %15, i64 %393
  %395 = bitcast i32* %394 to <4 x i32>*
  %396 = load <4 x i32>, <4 x i32>* %395, align 4, !alias.scope !61
  %397 = sitofp <4 x i32> %396 to <4 x float>
  %398 = fmul <4 x float> %366, %397
  %399 = fadd <4 x float> %368, %398
  %400 = call <4 x float> @llvm.round.v4f32(<4 x float> %399)
  %401 = fptosi <4 x float> %400 to <4 x i32>
  %402 = add nsw <4 x i32> %370, %401
  %403 = trunc <4 x i32> %402 to <4 x i8>
  %404 = getelementptr inbounds i8, i8* %5, i64 %393
  %405 = bitcast i8* %404 to <4 x i8>*
  store <4 x i8> %403, <4 x i8>* %405, align 1, !alias.scope !64, !noalias !61
  %406 = add i64 %379, 8
  %407 = add i64 %380, -2
  %408 = icmp eq i64 %407, 0
  br i1 %408, label %409, label %378, !llvm.loop !66

409:                                              ; preds = %378, %363
  %410 = phi i64 [ 0, %363 ], [ %406, %378 ]
  %411 = icmp eq i64 %374, 0
  br i1 %411, label %425, label %412

412:                                              ; preds = %409
  %413 = getelementptr inbounds i32, i32* %15, i64 %410
  %414 = bitcast i32* %413 to <4 x i32>*
  %415 = load <4 x i32>, <4 x i32>* %414, align 4, !alias.scope !61
  %416 = sitofp <4 x i32> %415 to <4 x float>
  %417 = fmul <4 x float> %366, %416
  %418 = fadd <4 x float> %368, %417
  %419 = call <4 x float> @llvm.round.v4f32(<4 x float> %418)
  %420 = fptosi <4 x float> %419 to <4 x i32>
  %421 = add nsw <4 x i32> %370, %420
  %422 = trunc <4 x i32> %421 to <4 x i8>
  %423 = getelementptr inbounds i8, i8* %5, i64 %410
  %424 = bitcast i8* %423 to <4 x i8>*
  store <4 x i8> %422, <4 x i8>* %424, align 1, !alias.scope !64, !noalias !61
  br label %425

425:                                              ; preds = %409, %412
  %426 = icmp eq i64 %134, %364
  br i1 %426, label %533, label %427

427:                                              ; preds = %425, %356, %354
  %428 = phi i64 [ 0, %356 ], [ 0, %354 ], [ %364, %425 ]
  %429 = and i64 %134, 1
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %443, label %431

431:                                              ; preds = %427
  %432 = getelementptr inbounds i32, i32* %15, i64 %428
  %433 = load i32, i32* %432, align 4
  %434 = sitofp i32 %433 to float
  %435 = fmul float %346, %434
  %436 = fadd float %353, %435
  %437 = tail call float @llvm.round.f32(float %436) #16
  %438 = fptosi float %437 to i32
  %439 = add nsw i32 %438, %6
  %440 = trunc i32 %439 to i8
  %441 = getelementptr inbounds i8, i8* %5, i64 %428
  store i8 %440, i8* %441, align 1
  %442 = or i64 %428, 1
  br label %443

443:                                              ; preds = %427, %431
  %444 = phi i64 [ %428, %427 ], [ %442, %431 ]
  %445 = or i64 %428, 1
  %446 = icmp eq i64 %134, %445
  br i1 %446, label %533, label %447

447:                                              ; preds = %443, %447
  %448 = phi i64 [ %470, %447 ], [ %444, %443 ]
  %449 = getelementptr inbounds i32, i32* %15, i64 %448
  %450 = load i32, i32* %449, align 4
  %451 = sitofp i32 %450 to float
  %452 = fmul float %346, %451
  %453 = fadd float %353, %452
  %454 = tail call float @llvm.round.f32(float %453) #16
  %455 = fptosi float %454 to i32
  %456 = add nsw i32 %455, %6
  %457 = trunc i32 %456 to i8
  %458 = getelementptr inbounds i8, i8* %5, i64 %448
  store i8 %457, i8* %458, align 1
  %459 = add nuw i64 %448, 1
  %460 = getelementptr inbounds i32, i32* %15, i64 %459
  %461 = load i32, i32* %460, align 4
  %462 = sitofp i32 %461 to float
  %463 = fmul float %346, %462
  %464 = fadd float %353, %463
  %465 = tail call float @llvm.round.f32(float %464) #16
  %466 = fptosi float %465 to i32
  %467 = add nsw i32 %466, %6
  %468 = trunc i32 %467 to i8
  %469 = getelementptr inbounds i8, i8* %5, i64 %459
  store i8 %468, i8* %469, align 1
  %470 = add nuw i64 %448, 2
  %471 = icmp eq i64 %470, %134
  br i1 %471, label %533, label %447, !llvm.loop !67

472:                                              ; preds = %344
  %473 = fadd float %349, 5.000000e-01
  br i1 %133, label %533, label %474

474:                                              ; preds = %472
  %475 = sitofp i32 %345 to float
  %476 = sitofp i32 %6 to float
  %477 = icmp ult i64 %134, 4
  br i1 %477, label %515, label %478

478:                                              ; preds = %474
  %479 = getelementptr i8, i8* %5, i64 %134
  %480 = getelementptr i32, i32* %15, i64 %134
  %481 = bitcast i32* %480 to i8*
  %482 = icmp ugt i8* %481, %5
  %483 = icmp ugt i8* %479, %18
  %484 = and i1 %482, %483
  br i1 %484, label %515, label %485

485:                                              ; preds = %478
  %486 = and i64 %134, -4
  %487 = insertelement <4 x float> undef, float %475, i32 0
  %488 = shufflevector <4 x float> %487, <4 x float> undef, <4 x i32> zeroinitializer
  %489 = insertelement <4 x float> undef, float %346, i32 0
  %490 = shufflevector <4 x float> %489, <4 x float> undef, <4 x i32> zeroinitializer
  %491 = insertelement <4 x float> undef, float %473, i32 0
  %492 = shufflevector <4 x float> %491, <4 x float> undef, <4 x i32> zeroinitializer
  %493 = insertelement <4 x float> undef, float %476, i32 0
  %494 = shufflevector <4 x float> %493, <4 x float> undef, <4 x i32> zeroinitializer
  br label %495

495:                                              ; preds = %495, %485
  %496 = phi i64 [ 0, %485 ], [ %511, %495 ]
  %497 = getelementptr inbounds i32, i32* %15, i64 %496
  %498 = bitcast i32* %497 to <4 x i32>*
  %499 = load <4 x i32>, <4 x i32>* %498, align 4, !alias.scope !68
  %500 = sitofp <4 x i32> %499 to <4 x float>
  %501 = fdiv <4 x float> %500, %488
  %502 = fmul <4 x float> %490, %501
  %503 = fadd <4 x float> %492, %502
  %504 = call <4 x float> @llvm.round.v4f32(<4 x float> %503)
  %505 = fadd <4 x float> %504, %494
  %506 = call <4 x float> @llvm.minnum.v4f32(<4 x float> %505, <4 x float> <float 1.270000e+02, float 1.270000e+02, float 1.270000e+02, float 1.270000e+02>)
  %507 = call <4 x float> @llvm.maxnum.v4f32(<4 x float> %506, <4 x float> <float -1.280000e+02, float -1.280000e+02, float -1.280000e+02, float -1.280000e+02>)
  %508 = fptosi <4 x float> %507 to <4 x i8>
  %509 = getelementptr inbounds i8, i8* %5, i64 %496
  %510 = bitcast i8* %509 to <4 x i8>*
  store <4 x i8> %508, <4 x i8>* %510, align 1, !alias.scope !71, !noalias !68
  %511 = add i64 %496, 4
  %512 = icmp eq i64 %511, %486
  br i1 %512, label %513, label %495, !llvm.loop !73

513:                                              ; preds = %495
  %514 = icmp eq i64 %134, %486
  br i1 %514, label %533, label %515

515:                                              ; preds = %513, %478, %474
  %516 = phi i64 [ 0, %478 ], [ 0, %474 ], [ %486, %513 ]
  br label %517

517:                                              ; preds = %515, %517
  %518 = phi i64 [ %531, %517 ], [ %516, %515 ]
  %519 = getelementptr inbounds i32, i32* %15, i64 %518
  %520 = load i32, i32* %519, align 4
  %521 = sitofp i32 %520 to float
  %522 = fdiv float %521, %475
  %523 = fmul float %346, %522
  %524 = fadd float %473, %523
  %525 = tail call float @llvm.round.f32(float %524) #16
  %526 = fadd float %525, %476
  %527 = tail call float @llvm.minnum.f32(float %526, float 1.270000e+02) #16
  %528 = tail call float @llvm.maxnum.f32(float %527, float -1.280000e+02) #16
  %529 = fptosi float %528 to i8
  %530 = getelementptr inbounds i8, i8* %5, i64 %518
  store i8 %529, i8* %530, align 1
  %531 = add nuw i64 %518, 1
  %532 = icmp eq i64 %531, %134
  br i1 %532, label %533, label %517, !llvm.loop !74

533:                                              ; preds = %120, %139, %328, %517, %443, %447, %513, %425, %350, %472, %342
  %534 = phi i1 [ true, %342 ], [ true, %350 ], [ true, %472 ], [ true, %425 ], [ true, %513 ], [ true, %447 ], [ true, %443 ], [ true, %517 ], [ false, %328 ], [ false, %139 ], [ false, %120 ]
  ret i1 %534
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin6reduce11EvalGenericILNS2_10KernelTypeE0ELNS2_10ReduceTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) local_unnamed_addr #0 comdat {
  %3 = alloca %"struct.tflite::ops::builtin::reduce::OpContext", align 8
  %4 = bitcast %"struct.tflite::ops::builtin::reduce::OpContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 3
  %8 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %9 = bitcast i8** %8 to i64*
  %10 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 1
  %11 = bitcast %struct.TfLiteTensor** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load i64, i64* %9, align 8
  %13 = bitcast %"struct.tflite::ops::builtin::reduce::OpContext"* %3 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %21 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %20, align 8
  %22 = sext i32 %17 to i64
  %23 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %21, i64 %22
  br label %24

24:                                               ; preds = %19, %2
  %25 = phi %struct.TfLiteTensor* [ %23, %19 ], [ null, %2 ]
  store %struct.TfLiteTensor* %25, %struct.TfLiteTensor** %5, align 8
  %26 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %31 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %30, align 8
  %32 = sext i32 %27 to i64
  %33 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 %32
  br label %34

34:                                               ; preds = %29, %24
  %35 = phi %struct.TfLiteTensor* [ %33, %29 ], [ null, %24 ]
  store %struct.TfLiteTensor* %35, %struct.TfLiteTensor** %6, align 8
  %36 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %37 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %36, align 8
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %43 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %42, align 8
  %44 = sext i32 %39 to i64
  %45 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %43, i64 %44
  br label %46

46:                                               ; preds = %34, %41
  %47 = phi %struct.TfLiteTensor* [ %45, %41 ], [ null, %34 ]
  store %struct.TfLiteTensor* %47, %struct.TfLiteTensor** %7, align 8
  %48 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %25, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  switch i32 %49, label %60 [
    i32 1, label %50
    i32 2, label %52
    i32 4, label %54
    i32 3, label %56
    i32 9, label %58
  ]

50:                                               ; preds = %46
  %51 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIfEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, float 0.000000e+00, float (float, float)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIfEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlffE_8__invokeEff) #16
  br label %60

52:                                               ; preds = %46
  %53 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIiEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, i32 0, i32 (i32, i32)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIiEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUliiE_8__invokeEii) #16
  br label %60

54:                                               ; preds = %46
  %55 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIlEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, i64 0, i64 (i64, i64)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIlEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlllE_8__invokeEll) #16
  br label %60

56:                                               ; preds = %46
  %57 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIhEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, i8 zeroext 0, i8 (i8, i8)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIhEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlhhE_8__invokeEhh) #16
  br label %60

58:                                               ; preds = %46
  %59 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIaEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, i8 signext 0, i8 (i8, i8)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIaEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlaaE_8__invokeEaa) #16
  br label %60

60:                                               ; preds = %46, %58, %56, %54, %52, %50
  %61 = phi i32 [ %59, %58 ], [ %57, %56 ], [ %55, %54 ], [ %53, %52 ], [ %51, %50 ], [ 1, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #16
  ret i32 %61
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin17Register_MEAN_OPTEv() local_unnamed_addr #7 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin17Register_MEAN_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin6reduce8EvalMeanILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #8 comdat {
  %3 = alloca %"struct.tflite::ops::builtin::reduce::OpContext", align 8
  %4 = alloca %"struct.tflite::MeanParams", align 2
  %5 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 0
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"struct.tflite::MeanParams", align 2
  %9 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 0
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"struct.tflite::MeanParams", align 2
  %13 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 0
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"struct.tflite::MeanParams", align 2
  %17 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %16, i64 0, i32 0
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"struct.tflite::MeanParams", align 2
  %21 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %20, i64 0, i32 0
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = alloca %"class.tflite::RuntimeShape", align 8
  %24 = bitcast %"struct.tflite::ops::builtin::reduce::OpContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #16
  %25 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 2
  %27 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 3
  %28 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %29 = bitcast i8** %28 to i64*
  %30 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 1
  %31 = bitcast %struct.TfLiteTensor** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  %32 = load i64, i64* %29, align 8
  %33 = bitcast %"struct.tflite::ops::builtin::reduce::OpContext"* %3 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %35 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %34, align 8
  %36 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %37, 0
  %39 = inttoptr i64 %32 to %struct.TfLiteReducerParams*
  br i1 %38, label %45, label %40

40:                                               ; preds = %2
  %41 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %42 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %41, align 8
  %43 = sext i32 %37 to i64
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 %43
  br label %45

45:                                               ; preds = %40, %2
  %46 = phi %struct.TfLiteTensor* [ %44, %40 ], [ null, %2 ]
  store %struct.TfLiteTensor* %46, %struct.TfLiteTensor** %25, align 8
  %47 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %52 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %51, align 8
  %53 = sext i32 %48 to i64
  %54 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 %53
  br label %55

55:                                               ; preds = %50, %45
  %56 = phi %struct.TfLiteTensor* [ %54, %50 ], [ null, %45 ]
  store %struct.TfLiteTensor* %56, %struct.TfLiteTensor** %26, align 8
  %57 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %58 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %57, align 8
  %59 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %58, i64 0, i32 1, i64 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %64 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %63, align 8
  %65 = sext i32 %60 to i64
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 %65
  br label %67

67:                                               ; preds = %55, %62
  %68 = phi %struct.TfLiteTensor* [ %66, %62 ], [ null, %55 ]
  store %struct.TfLiteTensor* %68, %struct.TfLiteTensor** %27, align 8
  %69 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %70 = bitcast i8** %69 to %"struct.tflite::ops::builtin::reduce::OpData"**
  %71 = load %"struct.tflite::ops::builtin::reduce::OpData"*, %"struct.tflite::ops::builtin::reduce::OpData"** %70, align 8
  %72 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 2
  %73 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %72, align 8
  %74 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %77, label %146

77:                                               ; preds = %67
  %78 = sext i32 %75 to i64
  %79 = add nsw i64 %78, -1
  %80 = and i64 %78, 7
  %81 = icmp ult i64 %79, 7
  br i1 %81, label %130, label %82

82:                                               ; preds = %77
  %83 = sub nsw i64 %78, %80
  br label %84

84:                                               ; preds = %84, %82
  %85 = phi i64 [ 0, %82 ], [ %127, %84 ]
  %86 = phi i64 [ 1, %82 ], [ %126, %84 ]
  %87 = phi i64 [ %83, %82 ], [ %128, %84 ]
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 1, i64 %85
  %89 = load i32, i32* %88, align 4
  %90 = sext i32 %89 to i64
  %91 = mul nsw i64 %86, %90
  %92 = or i64 %85, 1
  %93 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 1, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = sext i32 %94 to i64
  %96 = mul nsw i64 %91, %95
  %97 = or i64 %85, 2
  %98 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 1, i64 %97
  %99 = load i32, i32* %98, align 4
  %100 = sext i32 %99 to i64
  %101 = mul nsw i64 %96, %100
  %102 = or i64 %85, 3
  %103 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 1, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = mul nsw i64 %101, %105
  %107 = or i64 %85, 4
  %108 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 1, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = sext i32 %109 to i64
  %111 = mul nsw i64 %106, %110
  %112 = or i64 %85, 5
  %113 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 1, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = sext i32 %114 to i64
  %116 = mul nsw i64 %111, %115
  %117 = or i64 %85, 6
  %118 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 1, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = sext i32 %119 to i64
  %121 = mul nsw i64 %116, %120
  %122 = or i64 %85, 7
  %123 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 1, i64 %122
  %124 = load i32, i32* %123, align 4
  %125 = sext i32 %124 to i64
  %126 = mul nsw i64 %121, %125
  %127 = add nuw nsw i64 %85, 8
  %128 = add i64 %87, -8
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %84

130:                                              ; preds = %84, %77
  %131 = phi i64 [ undef, %77 ], [ %126, %84 ]
  %132 = phi i64 [ 0, %77 ], [ %127, %84 ]
  %133 = phi i64 [ 1, %77 ], [ %126, %84 ]
  %134 = icmp eq i64 %80, 0
  br i1 %134, label %146, label %135

135:                                              ; preds = %130, %135
  %136 = phi i64 [ %143, %135 ], [ %132, %130 ]
  %137 = phi i64 [ %142, %135 ], [ %133, %130 ]
  %138 = phi i64 [ %144, %135 ], [ %80, %130 ]
  %139 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 1, i64 %136
  %140 = load i32, i32* %139, align 4
  %141 = sext i32 %140 to i64
  %142 = mul nsw i64 %137, %141
  %143 = add nuw nsw i64 %136, 1
  %144 = add i64 %138, -1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %135, !llvm.loop !75

146:                                              ; preds = %130, %135, %67
  %147 = phi i64 [ 1, %67 ], [ %131, %130 ], [ %142, %135 ]
  %148 = trunc i64 %147 to i32
  %149 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %150 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %149, align 8
  %151 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %150, i64 0, i32 1, i64 0
  %152 = load i32, i32* %151, align 4
  %153 = icmp slt i32 %152, 0
  br i1 %153, label %159, label %154

154:                                              ; preds = %146
  %155 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %156 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %155, align 8
  %157 = sext i32 %152 to i64
  %158 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %156, i64 %157
  br label %159

159:                                              ; preds = %146, %154
  %160 = phi %struct.TfLiteTensor* [ %158, %154 ], [ null, %146 ]
  %161 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %150, i64 0, i32 1, i64 1
  %162 = load i32, i32* %161, align 4
  %163 = icmp slt i32 %162, 0
  br i1 %163, label %169, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %166 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %165, align 8
  %167 = sext i32 %162 to i64
  %168 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %166, i64 %167
  br label %169

169:                                              ; preds = %159, %164
  %170 = phi %struct.TfLiteTensor* [ %168, %164 ], [ null, %159 ]
  %171 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %150, i64 0, i32 1, i64 2
  %172 = load i32, i32* %171, align 4
  %173 = icmp slt i32 %172, 0
  br i1 %173, label %179, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %176 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %175, align 8
  %177 = sext i32 %172 to i64
  %178 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %176, i64 %177
  br label %179

179:                                              ; preds = %169, %174
  %180 = phi %struct.TfLiteTensor* [ %178, %174 ], [ null, %169 ]
  %181 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 4
  %182 = load i32, i32* %181, align 8
  %183 = icmp eq i32 %182, 4
  br i1 %183, label %184, label %357

184:                                              ; preds = %179
  %185 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #16
  %186 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %72, align 8
  %187 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %186, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = icmp sgt i32 %188, 0
  br i1 %189, label %190, label %262

190:                                              ; preds = %184
  %191 = sext i32 %188 to i64
  %192 = add nsw i64 %191, -1
  %193 = and i64 %191, 7
  %194 = icmp ult i64 %192, 7
  br i1 %194, label %243, label %195

195:                                              ; preds = %190
  %196 = sub nsw i64 %191, %193
  br label %197

197:                                              ; preds = %197, %195
  %198 = phi i64 [ 0, %195 ], [ %240, %197 ]
  %199 = phi i64 [ 1, %195 ], [ %239, %197 ]
  %200 = phi i64 [ %196, %195 ], [ %241, %197 ]
  %201 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %186, i64 0, i32 1, i64 %198
  %202 = load i32, i32* %201, align 4
  %203 = sext i32 %202 to i64
  %204 = mul nsw i64 %199, %203
  %205 = or i64 %198, 1
  %206 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %186, i64 0, i32 1, i64 %205
  %207 = load i32, i32* %206, align 4
  %208 = sext i32 %207 to i64
  %209 = mul nsw i64 %204, %208
  %210 = or i64 %198, 2
  %211 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %186, i64 0, i32 1, i64 %210
  %212 = load i32, i32* %211, align 4
  %213 = sext i32 %212 to i64
  %214 = mul nsw i64 %209, %213
  %215 = or i64 %198, 3
  %216 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %186, i64 0, i32 1, i64 %215
  %217 = load i32, i32* %216, align 4
  %218 = sext i32 %217 to i64
  %219 = mul nsw i64 %214, %218
  %220 = or i64 %198, 4
  %221 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %186, i64 0, i32 1, i64 %220
  %222 = load i32, i32* %221, align 4
  %223 = sext i32 %222 to i64
  %224 = mul nsw i64 %219, %223
  %225 = or i64 %198, 5
  %226 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %186, i64 0, i32 1, i64 %225
  %227 = load i32, i32* %226, align 4
  %228 = sext i32 %227 to i64
  %229 = mul nsw i64 %224, %228
  %230 = or i64 %198, 6
  %231 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %186, i64 0, i32 1, i64 %230
  %232 = load i32, i32* %231, align 4
  %233 = sext i32 %232 to i64
  %234 = mul nsw i64 %229, %233
  %235 = or i64 %198, 7
  %236 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %186, i64 0, i32 1, i64 %235
  %237 = load i32, i32* %236, align 4
  %238 = sext i32 %237 to i64
  %239 = mul nsw i64 %234, %238
  %240 = add nuw nsw i64 %198, 8
  %241 = add i64 %200, -8
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %243, label %197

243:                                              ; preds = %197, %190
  %244 = phi i64 [ undef, %190 ], [ %239, %197 ]
  %245 = phi i64 [ 0, %190 ], [ %240, %197 ]
  %246 = phi i64 [ 1, %190 ], [ %239, %197 ]
  %247 = icmp eq i64 %193, 0
  br i1 %247, label %259, label %248

248:                                              ; preds = %243, %248
  %249 = phi i64 [ %256, %248 ], [ %245, %243 ]
  %250 = phi i64 [ %255, %248 ], [ %246, %243 ]
  %251 = phi i64 [ %257, %248 ], [ %193, %243 ]
  %252 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %186, i64 0, i32 1, i64 %249
  %253 = load i32, i32* %252, align 4
  %254 = sext i32 %253 to i64
  %255 = mul nsw i64 %250, %254
  %256 = add nuw nsw i64 %249, 1
  %257 = add i64 %251, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %248, !llvm.loop !76

259:                                              ; preds = %248, %243
  %260 = phi i64 [ %244, %243 ], [ %255, %248 ]
  %261 = trunc i64 %260 to i32
  br label %262

262:                                              ; preds = %184, %259
  %263 = phi i32 [ 1, %184 ], [ %261, %259 ]
  %264 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %185, i64 0, i32 1, i64 0
  store i32 %263, i32* %264, align 4
  %265 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %266 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %265, align 8
  %267 = tail call i32 %266(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %170, %struct.TfLiteIntArray* %185) #16
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %2510

269:                                              ; preds = %262
  %270 = call i32 @_ZN6tflite3ops7builtin6reduce18ResizeOutputTensorEP13TfLiteContextPNS2_9OpContextE(%struct.TfLiteContext* %0, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3)
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %2510

272:                                              ; preds = %269
  %273 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #16
  %274 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 2
  %275 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %274, align 8
  %276 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %275, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  %278 = icmp sgt i32 %277, 0
  br i1 %278, label %279, label %351

279:                                              ; preds = %272
  %280 = sext i32 %277 to i64
  %281 = add nsw i64 %280, -1
  %282 = and i64 %280, 7
  %283 = icmp ult i64 %281, 7
  br i1 %283, label %332, label %284

284:                                              ; preds = %279
  %285 = sub nsw i64 %280, %282
  br label %286

286:                                              ; preds = %286, %284
  %287 = phi i64 [ 0, %284 ], [ %329, %286 ]
  %288 = phi i64 [ 1, %284 ], [ %328, %286 ]
  %289 = phi i64 [ %285, %284 ], [ %330, %286 ]
  %290 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %275, i64 0, i32 1, i64 %287
  %291 = load i32, i32* %290, align 4
  %292 = sext i32 %291 to i64
  %293 = mul nsw i64 %288, %292
  %294 = or i64 %287, 1
  %295 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %275, i64 0, i32 1, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = sext i32 %296 to i64
  %298 = mul nsw i64 %293, %297
  %299 = or i64 %287, 2
  %300 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %275, i64 0, i32 1, i64 %299
  %301 = load i32, i32* %300, align 4
  %302 = sext i32 %301 to i64
  %303 = mul nsw i64 %298, %302
  %304 = or i64 %287, 3
  %305 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %275, i64 0, i32 1, i64 %304
  %306 = load i32, i32* %305, align 4
  %307 = sext i32 %306 to i64
  %308 = mul nsw i64 %303, %307
  %309 = or i64 %287, 4
  %310 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %275, i64 0, i32 1, i64 %309
  %311 = load i32, i32* %310, align 4
  %312 = sext i32 %311 to i64
  %313 = mul nsw i64 %308, %312
  %314 = or i64 %287, 5
  %315 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %275, i64 0, i32 1, i64 %314
  %316 = load i32, i32* %315, align 4
  %317 = sext i32 %316 to i64
  %318 = mul nsw i64 %313, %317
  %319 = or i64 %287, 6
  %320 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %275, i64 0, i32 1, i64 %319
  %321 = load i32, i32* %320, align 4
  %322 = sext i32 %321 to i64
  %323 = mul nsw i64 %318, %322
  %324 = or i64 %287, 7
  %325 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %275, i64 0, i32 1, i64 %324
  %326 = load i32, i32* %325, align 4
  %327 = sext i32 %326 to i64
  %328 = mul nsw i64 %323, %327
  %329 = add nuw nsw i64 %287, 8
  %330 = add i64 %289, -8
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %286

332:                                              ; preds = %286, %279
  %333 = phi i64 [ undef, %279 ], [ %328, %286 ]
  %334 = phi i64 [ 0, %279 ], [ %329, %286 ]
  %335 = phi i64 [ 1, %279 ], [ %328, %286 ]
  %336 = icmp eq i64 %282, 0
  br i1 %336, label %348, label %337

337:                                              ; preds = %332, %337
  %338 = phi i64 [ %345, %337 ], [ %334, %332 ]
  %339 = phi i64 [ %344, %337 ], [ %335, %332 ]
  %340 = phi i64 [ %346, %337 ], [ %282, %332 ]
  %341 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %275, i64 0, i32 1, i64 %338
  %342 = load i32, i32* %341, align 4
  %343 = sext i32 %342 to i64
  %344 = mul nsw i64 %339, %343
  %345 = add nuw nsw i64 %338, 1
  %346 = add i64 %340, -1
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %348, label %337, !llvm.loop !77

348:                                              ; preds = %337, %332
  %349 = phi i64 [ %333, %332 ], [ %344, %337 ]
  %350 = trunc i64 %349 to i32
  br label %351

351:                                              ; preds = %272, %348
  %352 = phi i32 [ 1, %272 ], [ %350, %348 ]
  %353 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %273, i64 0, i32 1, i64 0
  store i32 %352, i32* %353, align 4
  %354 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %265, align 8
  %355 = tail call i32 %354(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %180, %struct.TfLiteIntArray* %273) #16
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %2510

357:                                              ; preds = %351, %179
  %358 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 0
  %359 = load i32, i32* %358, align 8
  switch i32 %359, label %883 [
    i32 9, label %360
    i32 3, label %620
  ]

360:                                              ; preds = %357
  %361 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %361) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %361, i8 -86, i64 10, i1 false)
  %362 = trunc i64 %147 to i8
  store i8 %362, i8* %361, align 2
  %363 = icmp eq %struct.TfLiteTensor* %56, null
  br i1 %363, label %368, label %364

364:                                              ; preds = %360
  %365 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 1, i32 0
  %366 = load i32*, i32** %365, align 8
  %367 = bitcast i32* %366 to i8*
  br label %368

368:                                              ; preds = %360, %364
  %369 = phi i8* [ %367, %364 ], [ null, %360 ]
  %370 = phi i32* [ %366, %364 ], [ null, %360 ]
  %371 = icmp sgt i32 %148, 0
  br i1 %371, label %372, label %428

372:                                              ; preds = %368
  %373 = and i64 %147, 4294967295
  %374 = icmp ult i64 %373, 8
  br i1 %374, label %375, label %395

375:                                              ; preds = %424, %395, %372
  %376 = phi i64 [ 0, %395 ], [ 0, %372 ], [ %407, %424 ]
  %377 = sub i64 %147, %376
  %378 = xor i64 %376, -1
  %379 = add nsw i64 %373, %378
  %380 = and i64 %377, 3
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %392, label %382

382:                                              ; preds = %375, %382
  %383 = phi i64 [ %389, %382 ], [ %376, %375 ]
  %384 = phi i64 [ %390, %382 ], [ %380, %375 ]
  %385 = getelementptr inbounds i32, i32* %370, i64 %383
  %386 = load i32, i32* %385, align 4
  %387 = trunc i32 %386 to i16
  %388 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %383
  store i16 %387, i16* %388, align 2
  %389 = add nuw nsw i64 %383, 1
  %390 = add i64 %384, -1
  %391 = icmp eq i64 %390, 0
  br i1 %391, label %392, label %382, !llvm.loop !78

392:                                              ; preds = %382, %375
  %393 = phi i64 [ %376, %375 ], [ %389, %382 ]
  %394 = icmp ult i64 %379, 3
  br i1 %394, label %426, label %490

395:                                              ; preds = %372
  %396 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 0
  %397 = shl nuw nsw i64 %373, 1
  %398 = add nuw nsw i64 %397, 2
  %399 = getelementptr i8, i8* %5, i64 %398
  %400 = getelementptr i32, i32* %370, i64 %373
  %401 = bitcast i32* %400 to i16*
  %402 = icmp ult i16* %396, %401
  %403 = icmp ult i8* %369, %399
  %404 = and i1 %402, %403
  br i1 %404, label %375, label %405

405:                                              ; preds = %395
  %406 = and i64 %147, 7
  %407 = sub nsw i64 %373, %406
  br label %408

408:                                              ; preds = %408, %405
  %409 = phi i64 [ 0, %405 ], [ %422, %408 ]
  %410 = getelementptr inbounds i32, i32* %370, i64 %409
  %411 = bitcast i32* %410 to <4 x i32>*
  %412 = load <4 x i32>, <4 x i32>* %411, align 4, !alias.scope !79
  %413 = getelementptr inbounds i32, i32* %410, i64 4
  %414 = bitcast i32* %413 to <4 x i32>*
  %415 = load <4 x i32>, <4 x i32>* %414, align 4, !alias.scope !79
  %416 = trunc <4 x i32> %412 to <4 x i16>
  %417 = trunc <4 x i32> %415 to <4 x i16>
  %418 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %409
  %419 = bitcast i16* %418 to <4 x i16>*
  store <4 x i16> %416, <4 x i16>* %419, align 2, !alias.scope !82, !noalias !79
  %420 = getelementptr inbounds i16, i16* %418, i64 4
  %421 = bitcast i16* %420 to <4 x i16>*
  store <4 x i16> %417, <4 x i16>* %421, align 2, !alias.scope !82, !noalias !79
  %422 = add i64 %409, 8
  %423 = icmp eq i64 %422, %407
  br i1 %423, label %424, label %408, !llvm.loop !84

424:                                              ; preds = %408
  %425 = icmp eq i64 %406, 0
  br i1 %425, label %426, label %375

426:                                              ; preds = %392, %490, %424
  %427 = icmp ult i32 %148, 4
  br i1 %427, label %428, label %518

428:                                              ; preds = %368, %426
  %429 = phi i64 [ %147, %426 ], [ 0, %368 ]
  %430 = and i64 %429, 4294967295
  %431 = sub nsw i64 4, %430
  %432 = icmp ult i64 %431, 16
  br i1 %432, label %433, label %435

433:                                              ; preds = %488, %428
  %434 = phi i64 [ %430, %428 ], [ %437, %488 ]
  br label %513

435:                                              ; preds = %428
  %436 = and i64 %431, -16
  %437 = add nsw i64 %430, %436
  %438 = add nsw i64 %436, -16
  %439 = lshr exact i64 %438, 4
  %440 = add nuw nsw i64 %439, 1
  %441 = and i64 %440, 3
  %442 = icmp ult i64 %438, 48
  br i1 %442, label %474, label %443

443:                                              ; preds = %435
  %444 = sub nsw i64 %440, %441
  br label %445

445:                                              ; preds = %445, %443
  %446 = phi i64 [ 0, %443 ], [ %471, %445 ]
  %447 = phi i64 [ %444, %443 ], [ %472, %445 ]
  %448 = add i64 %430, %446
  %449 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %448
  %450 = bitcast i16* %449 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %450, align 2
  %451 = getelementptr inbounds i16, i16* %449, i64 8
  %452 = bitcast i16* %451 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %452, align 2
  %453 = or i64 %446, 16
  %454 = add i64 %430, %453
  %455 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %454
  %456 = bitcast i16* %455 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %456, align 2
  %457 = getelementptr inbounds i16, i16* %455, i64 8
  %458 = bitcast i16* %457 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %458, align 2
  %459 = or i64 %446, 32
  %460 = add i64 %430, %459
  %461 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %460
  %462 = bitcast i16* %461 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %462, align 2
  %463 = getelementptr inbounds i16, i16* %461, i64 8
  %464 = bitcast i16* %463 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %464, align 2
  %465 = or i64 %446, 48
  %466 = add i64 %430, %465
  %467 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %466
  %468 = bitcast i16* %467 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %468, align 2
  %469 = getelementptr inbounds i16, i16* %467, i64 8
  %470 = bitcast i16* %469 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %470, align 2
  %471 = add i64 %446, 64
  %472 = add i64 %447, -4
  %473 = icmp eq i64 %472, 0
  br i1 %473, label %474, label %445, !llvm.loop !85

474:                                              ; preds = %445, %435
  %475 = phi i64 [ 0, %435 ], [ %471, %445 ]
  %476 = icmp eq i64 %441, 0
  br i1 %476, label %488, label %477

477:                                              ; preds = %474, %477
  %478 = phi i64 [ %485, %477 ], [ %475, %474 ]
  %479 = phi i64 [ %486, %477 ], [ %441, %474 ]
  %480 = add i64 %430, %478
  %481 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %480
  %482 = bitcast i16* %481 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %482, align 2
  %483 = getelementptr inbounds i16, i16* %481, i64 8
  %484 = bitcast i16* %483 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %484, align 2
  %485 = add i64 %478, 16
  %486 = add i64 %479, -1
  %487 = icmp eq i64 %486, 0
  br i1 %487, label %488, label %477, !llvm.loop !86

488:                                              ; preds = %477, %474
  %489 = icmp eq i64 %431, %436
  br i1 %489, label %518, label %433

490:                                              ; preds = %392, %490
  %491 = phi i64 [ %511, %490 ], [ %393, %392 ]
  %492 = getelementptr inbounds i32, i32* %370, i64 %491
  %493 = load i32, i32* %492, align 4
  %494 = trunc i32 %493 to i16
  %495 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %491
  store i16 %494, i16* %495, align 2
  %496 = add nuw nsw i64 %491, 1
  %497 = getelementptr inbounds i32, i32* %370, i64 %496
  %498 = load i32, i32* %497, align 4
  %499 = trunc i32 %498 to i16
  %500 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %496
  store i16 %499, i16* %500, align 2
  %501 = add nuw nsw i64 %491, 2
  %502 = getelementptr inbounds i32, i32* %370, i64 %501
  %503 = load i32, i32* %502, align 4
  %504 = trunc i32 %503 to i16
  %505 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %501
  store i16 %504, i16* %505, align 2
  %506 = add nuw nsw i64 %491, 3
  %507 = getelementptr inbounds i32, i32* %370, i64 %506
  %508 = load i32, i32* %507, align 4
  %509 = trunc i32 %508 to i16
  %510 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %506
  store i16 %509, i16* %510, align 2
  %511 = add nuw nsw i64 %491, 4
  %512 = icmp eq i64 %511, %373
  br i1 %512, label %426, label %490, !llvm.loop !87

513:                                              ; preds = %433, %513
  %514 = phi i64 [ %516, %513 ], [ %434, %433 ]
  %515 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %514
  store i16 1, i16* %515, align 2
  %516 = add nuw nsw i64 %514, 1
  %517 = icmp eq i64 %516, 4
  br i1 %517, label %518, label %513, !llvm.loop !88

518:                                              ; preds = %513, %488, %426
  %519 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %39, i64 0, i32 0
  %520 = load i8, i8* %519, align 1, !range !6
  %521 = icmp eq i8 %520, 0
  br i1 %521, label %880, label %522

522:                                              ; preds = %518
  %523 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 2
  %524 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %523, align 8
  %525 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %524, i64 0, i32 0
  %526 = load i32, i32* %525, align 4
  %527 = icmp eq i32 %526, 4
  %528 = icmp eq i8 %362, 2
  %529 = and i1 %528, %527
  br i1 %529, label %530, label %880

530:                                              ; preds = %522
  %531 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 0
  %532 = load i16, i16* %531, align 2
  switch i16 %532, label %880 [
    i16 1, label %533
    i16 2, label %537
  ]

533:                                              ; preds = %530
  %534 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 1
  %535 = load i16, i16* %534, align 2
  %536 = icmp eq i16 %535, 2
  br i1 %536, label %541, label %880

537:                                              ; preds = %530
  %538 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 1
  %539 = load i16, i16* %538, align 2
  %540 = icmp eq i16 %539, 1
  br i1 %540, label %541, label %880

541:                                              ; preds = %537, %533
  %542 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %542) #16
  %543 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %543, label %544, label %546

544:                                              ; preds = %541
  %545 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %545, align 8, !alias.scope !89
  br label %555

546:                                              ; preds = %541
  %547 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %524, i64 0, i32 1, i64 0
  %548 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 4, i32* %548, align 8, !alias.scope !89
  %549 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %550 = bitcast %union.anon* %549 to i8*
  %551 = bitcast i32* %547 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %550, i8* align 4 %551, i64 16, i1 false) #16
  %552 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %553 = bitcast %union.TfLitePtrUnion* %552 to i8**
  %554 = load i8*, i8** %553, align 8
  br label %555

555:                                              ; preds = %544, %546
  %556 = phi i8* [ %554, %546 ], [ null, %544 ]
  %557 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 3, i32 1
  %558 = load i32, i32* %557, align 4
  %559 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 3, i32 0
  %560 = load float, float* %559, align 8
  %561 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %561) #16
  %562 = icmp eq %struct.TfLiteTensor* %68, null
  br i1 %562, label %563, label %565

563:                                              ; preds = %555
  %564 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %564, align 8, !alias.scope !92
  br label %593

565:                                              ; preds = %555
  %566 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 2
  %567 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %566, align 8, !noalias !92
  %568 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %567, i64 0, i32 0
  %569 = load i32, i32* %568, align 4, !noalias !92
  %570 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %567, i64 0, i32 1, i64 0
  %571 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %569, i32* %571, align 8, !alias.scope !92
  %572 = icmp sgt i32 %569, 5
  br i1 %572, label %573, label %580

573:                                              ; preds = %565
  %574 = sext i32 %569 to i64
  %575 = shl nsw i64 %574, 2
  %576 = tail call i8* @_Znam(i64 %575) #15, !noalias !92
  %577 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %578 = bitcast i32** %577 to i8**
  store i8* %576, i8** %578, align 8, !alias.scope !92
  %579 = bitcast i8* %576 to i32*
  br label %585

580:                                              ; preds = %565
  %581 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %582 = bitcast %union.anon* %581 to i32*
  %583 = sext i32 %569 to i64
  %584 = shl nsw i64 %583, 2
  br label %585

585:                                              ; preds = %580, %573
  %586 = phi i64 [ %575, %573 ], [ %584, %580 ]
  %587 = phi i32* [ %579, %573 ], [ %582, %580 ]
  %588 = bitcast i32* %587 to i8*
  %589 = bitcast i32* %570 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %588, i8* align 4 %589, i64 %586, i1 false) #16
  %590 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 1
  %591 = bitcast %union.TfLitePtrUnion* %590 to i8**
  %592 = load i8*, i8** %591, align 8
  br label %593

593:                                              ; preds = %563, %585
  %594 = phi i8* [ %592, %585 ], [ null, %563 ]
  %595 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 3, i32 1
  %596 = load i32, i32* %595, align 4
  %597 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 3, i32 0
  %598 = load float, float* %597, align 8
  %599 = tail call %"class.tflite::CpuBackendContext"* @_ZN6tflite17CpuBackendContext14GetFromContextEP13TfLiteContext(%struct.TfLiteContext* %0) #16
  call void @_ZN6tflite21optimized_integer_ops4MeanERKNS_10MeanParamsERKNS_12RuntimeShapeEPKaifS6_PaifPNS_17CpuBackendContextE(%"struct.tflite::MeanParams"* nonnull dereferenceable(10) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i8* %556, i32 %558, float %560, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, i8* %594, i32 %596, float %598, %"class.tflite::CpuBackendContext"* %599)
  %600 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %601 = load i32, i32* %600, align 8
  %602 = icmp sgt i32 %601, 5
  br i1 %602, label %603, label %609

603:                                              ; preds = %593
  %604 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %605 = load i32*, i32** %604, align 8
  %606 = icmp eq i32* %605, null
  br i1 %606, label %609, label %607

607:                                              ; preds = %603
  %608 = bitcast i32* %605 to i8*
  call void @_ZdaPv(i8* %608) #15
  br label %609

609:                                              ; preds = %593, %603, %607
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %561) #16
  %610 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %611 = load i32, i32* %610, align 8
  %612 = icmp sgt i32 %611, 5
  br i1 %612, label %613, label %619

613:                                              ; preds = %609
  %614 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %615 = load i32*, i32** %614, align 8
  %616 = icmp eq i32* %615, null
  br i1 %616, label %619, label %617

617:                                              ; preds = %613
  %618 = bitcast i32* %615 to i8*
  call void @_ZdaPv(i8* %618) #15
  br label %619

619:                                              ; preds = %617, %613, %609
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %542) #16
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %361) #16
  br label %2510

620:                                              ; preds = %357
  %621 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %621) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %621, i8 -86, i64 10, i1 false)
  %622 = trunc i64 %147 to i8
  store i8 %622, i8* %621, align 2
  %623 = icmp eq %struct.TfLiteTensor* %56, null
  br i1 %623, label %628, label %624

624:                                              ; preds = %620
  %625 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 1, i32 0
  %626 = load i32*, i32** %625, align 8
  %627 = bitcast i32* %626 to i8*
  br label %628

628:                                              ; preds = %620, %624
  %629 = phi i8* [ %627, %624 ], [ null, %620 ]
  %630 = phi i32* [ %626, %624 ], [ null, %620 ]
  %631 = icmp sgt i32 %148, 0
  br i1 %631, label %632, label %688

632:                                              ; preds = %628
  %633 = and i64 %147, 4294967295
  %634 = icmp ult i64 %633, 8
  br i1 %634, label %635, label %655

635:                                              ; preds = %684, %655, %632
  %636 = phi i64 [ 0, %655 ], [ 0, %632 ], [ %667, %684 ]
  %637 = sub i64 %147, %636
  %638 = xor i64 %636, -1
  %639 = add nsw i64 %633, %638
  %640 = and i64 %637, 3
  %641 = icmp eq i64 %640, 0
  br i1 %641, label %652, label %642

642:                                              ; preds = %635, %642
  %643 = phi i64 [ %649, %642 ], [ %636, %635 ]
  %644 = phi i64 [ %650, %642 ], [ %640, %635 ]
  %645 = getelementptr inbounds i32, i32* %630, i64 %643
  %646 = load i32, i32* %645, align 4
  %647 = trunc i32 %646 to i16
  %648 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %643
  store i16 %647, i16* %648, align 2
  %649 = add nuw nsw i64 %643, 1
  %650 = add i64 %644, -1
  %651 = icmp eq i64 %650, 0
  br i1 %651, label %652, label %642, !llvm.loop !95

652:                                              ; preds = %642, %635
  %653 = phi i64 [ %636, %635 ], [ %649, %642 ]
  %654 = icmp ult i64 %639, 3
  br i1 %654, label %686, label %750

655:                                              ; preds = %632
  %656 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 0
  %657 = shl nuw nsw i64 %633, 1
  %658 = add nuw nsw i64 %657, 2
  %659 = getelementptr i8, i8* %9, i64 %658
  %660 = getelementptr i32, i32* %630, i64 %633
  %661 = bitcast i32* %660 to i16*
  %662 = icmp ult i16* %656, %661
  %663 = icmp ult i8* %629, %659
  %664 = and i1 %662, %663
  br i1 %664, label %635, label %665

665:                                              ; preds = %655
  %666 = and i64 %147, 7
  %667 = sub nsw i64 %633, %666
  br label %668

668:                                              ; preds = %668, %665
  %669 = phi i64 [ 0, %665 ], [ %682, %668 ]
  %670 = getelementptr inbounds i32, i32* %630, i64 %669
  %671 = bitcast i32* %670 to <4 x i32>*
  %672 = load <4 x i32>, <4 x i32>* %671, align 4, !alias.scope !96
  %673 = getelementptr inbounds i32, i32* %670, i64 4
  %674 = bitcast i32* %673 to <4 x i32>*
  %675 = load <4 x i32>, <4 x i32>* %674, align 4, !alias.scope !96
  %676 = trunc <4 x i32> %672 to <4 x i16>
  %677 = trunc <4 x i32> %675 to <4 x i16>
  %678 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %669
  %679 = bitcast i16* %678 to <4 x i16>*
  store <4 x i16> %676, <4 x i16>* %679, align 2, !alias.scope !99, !noalias !96
  %680 = getelementptr inbounds i16, i16* %678, i64 4
  %681 = bitcast i16* %680 to <4 x i16>*
  store <4 x i16> %677, <4 x i16>* %681, align 2, !alias.scope !99, !noalias !96
  %682 = add i64 %669, 8
  %683 = icmp eq i64 %682, %667
  br i1 %683, label %684, label %668, !llvm.loop !101

684:                                              ; preds = %668
  %685 = icmp eq i64 %666, 0
  br i1 %685, label %686, label %635

686:                                              ; preds = %652, %750, %684
  %687 = icmp ult i32 %148, 4
  br i1 %687, label %688, label %778

688:                                              ; preds = %628, %686
  %689 = phi i64 [ %147, %686 ], [ 0, %628 ]
  %690 = and i64 %689, 4294967295
  %691 = sub nsw i64 4, %690
  %692 = icmp ult i64 %691, 16
  br i1 %692, label %693, label %695

693:                                              ; preds = %748, %688
  %694 = phi i64 [ %690, %688 ], [ %697, %748 ]
  br label %773

695:                                              ; preds = %688
  %696 = and i64 %691, -16
  %697 = add nsw i64 %690, %696
  %698 = add nsw i64 %696, -16
  %699 = lshr exact i64 %698, 4
  %700 = add nuw nsw i64 %699, 1
  %701 = and i64 %700, 3
  %702 = icmp ult i64 %698, 48
  br i1 %702, label %734, label %703

703:                                              ; preds = %695
  %704 = sub nsw i64 %700, %701
  br label %705

705:                                              ; preds = %705, %703
  %706 = phi i64 [ 0, %703 ], [ %731, %705 ]
  %707 = phi i64 [ %704, %703 ], [ %732, %705 ]
  %708 = add i64 %690, %706
  %709 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %708
  %710 = bitcast i16* %709 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %710, align 2
  %711 = getelementptr inbounds i16, i16* %709, i64 8
  %712 = bitcast i16* %711 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %712, align 2
  %713 = or i64 %706, 16
  %714 = add i64 %690, %713
  %715 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %714
  %716 = bitcast i16* %715 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %716, align 2
  %717 = getelementptr inbounds i16, i16* %715, i64 8
  %718 = bitcast i16* %717 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %718, align 2
  %719 = or i64 %706, 32
  %720 = add i64 %690, %719
  %721 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %720
  %722 = bitcast i16* %721 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %722, align 2
  %723 = getelementptr inbounds i16, i16* %721, i64 8
  %724 = bitcast i16* %723 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %724, align 2
  %725 = or i64 %706, 48
  %726 = add i64 %690, %725
  %727 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %726
  %728 = bitcast i16* %727 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %728, align 2
  %729 = getelementptr inbounds i16, i16* %727, i64 8
  %730 = bitcast i16* %729 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %730, align 2
  %731 = add i64 %706, 64
  %732 = add i64 %707, -4
  %733 = icmp eq i64 %732, 0
  br i1 %733, label %734, label %705, !llvm.loop !102

734:                                              ; preds = %705, %695
  %735 = phi i64 [ 0, %695 ], [ %731, %705 ]
  %736 = icmp eq i64 %701, 0
  br i1 %736, label %748, label %737

737:                                              ; preds = %734, %737
  %738 = phi i64 [ %745, %737 ], [ %735, %734 ]
  %739 = phi i64 [ %746, %737 ], [ %701, %734 ]
  %740 = add i64 %690, %738
  %741 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %740
  %742 = bitcast i16* %741 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %742, align 2
  %743 = getelementptr inbounds i16, i16* %741, i64 8
  %744 = bitcast i16* %743 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %744, align 2
  %745 = add i64 %738, 16
  %746 = add i64 %739, -1
  %747 = icmp eq i64 %746, 0
  br i1 %747, label %748, label %737, !llvm.loop !103

748:                                              ; preds = %737, %734
  %749 = icmp eq i64 %691, %696
  br i1 %749, label %778, label %693

750:                                              ; preds = %652, %750
  %751 = phi i64 [ %771, %750 ], [ %653, %652 ]
  %752 = getelementptr inbounds i32, i32* %630, i64 %751
  %753 = load i32, i32* %752, align 4
  %754 = trunc i32 %753 to i16
  %755 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %751
  store i16 %754, i16* %755, align 2
  %756 = add nuw nsw i64 %751, 1
  %757 = getelementptr inbounds i32, i32* %630, i64 %756
  %758 = load i32, i32* %757, align 4
  %759 = trunc i32 %758 to i16
  %760 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %756
  store i16 %759, i16* %760, align 2
  %761 = add nuw nsw i64 %751, 2
  %762 = getelementptr inbounds i32, i32* %630, i64 %761
  %763 = load i32, i32* %762, align 4
  %764 = trunc i32 %763 to i16
  %765 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %761
  store i16 %764, i16* %765, align 2
  %766 = add nuw nsw i64 %751, 3
  %767 = getelementptr inbounds i32, i32* %630, i64 %766
  %768 = load i32, i32* %767, align 4
  %769 = trunc i32 %768 to i16
  %770 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %766
  store i16 %769, i16* %770, align 2
  %771 = add nuw nsw i64 %751, 4
  %772 = icmp eq i64 %771, %633
  br i1 %772, label %686, label %750, !llvm.loop !104

773:                                              ; preds = %693, %773
  %774 = phi i64 [ %776, %773 ], [ %694, %693 ]
  %775 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %774
  store i16 1, i16* %775, align 2
  %776 = add nuw nsw i64 %774, 1
  %777 = icmp eq i64 %776, 4
  br i1 %777, label %778, label %773, !llvm.loop !105

778:                                              ; preds = %773, %748, %686
  %779 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %39, i64 0, i32 0
  %780 = load i8, i8* %779, align 1, !range !6
  %781 = icmp eq i8 %780, 0
  br i1 %781, label %880, label %782

782:                                              ; preds = %778
  %783 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 2
  %784 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %783, align 8
  %785 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %784, i64 0, i32 0
  %786 = load i32, i32* %785, align 4
  %787 = icmp eq i32 %786, 4
  %788 = icmp eq i8 %622, 2
  %789 = and i1 %788, %787
  br i1 %789, label %790, label %880

790:                                              ; preds = %782
  %791 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 0
  %792 = load i16, i16* %791, align 2
  switch i16 %792, label %880 [
    i16 1, label %793
    i16 2, label %797
  ]

793:                                              ; preds = %790
  %794 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 1
  %795 = load i16, i16* %794, align 2
  %796 = icmp eq i16 %795, 2
  br i1 %796, label %801, label %880

797:                                              ; preds = %790
  %798 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 1
  %799 = load i16, i16* %798, align 2
  %800 = icmp eq i16 %799, 1
  br i1 %800, label %801, label %880

801:                                              ; preds = %797, %793
  %802 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %802) #16
  %803 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %803, label %804, label %806

804:                                              ; preds = %801
  %805 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %805, align 8, !alias.scope !106
  br label %815

806:                                              ; preds = %801
  %807 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %784, i64 0, i32 1, i64 0
  %808 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 4, i32* %808, align 8, !alias.scope !106
  %809 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %810 = bitcast %union.anon* %809 to i8*
  %811 = bitcast i32* %807 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %810, i8* align 4 %811, i64 16, i1 false) #16
  %812 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %813 = bitcast %union.TfLitePtrUnion* %812 to i8**
  %814 = load i8*, i8** %813, align 8
  br label %815

815:                                              ; preds = %804, %806
  %816 = phi i8* [ %814, %806 ], [ null, %804 ]
  %817 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 3, i32 1
  %818 = load i32, i32* %817, align 4
  %819 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 3, i32 0
  %820 = load float, float* %819, align 8
  %821 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %821) #16
  %822 = icmp eq %struct.TfLiteTensor* %68, null
  br i1 %822, label %823, label %825

823:                                              ; preds = %815
  %824 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %824, align 8, !alias.scope !109
  br label %853

825:                                              ; preds = %815
  %826 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 2
  %827 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %826, align 8, !noalias !109
  %828 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %827, i64 0, i32 0
  %829 = load i32, i32* %828, align 4, !noalias !109
  %830 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %827, i64 0, i32 1, i64 0
  %831 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %829, i32* %831, align 8, !alias.scope !109
  %832 = icmp sgt i32 %829, 5
  br i1 %832, label %833, label %840

833:                                              ; preds = %825
  %834 = sext i32 %829 to i64
  %835 = shl nsw i64 %834, 2
  %836 = tail call i8* @_Znam(i64 %835) #15, !noalias !109
  %837 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %838 = bitcast i32** %837 to i8**
  store i8* %836, i8** %838, align 8, !alias.scope !109
  %839 = bitcast i8* %836 to i32*
  br label %845

840:                                              ; preds = %825
  %841 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %842 = bitcast %union.anon* %841 to i32*
  %843 = sext i32 %829 to i64
  %844 = shl nsw i64 %843, 2
  br label %845

845:                                              ; preds = %840, %833
  %846 = phi i64 [ %835, %833 ], [ %844, %840 ]
  %847 = phi i32* [ %839, %833 ], [ %842, %840 ]
  %848 = bitcast i32* %847 to i8*
  %849 = bitcast i32* %830 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %848, i8* align 4 %849, i64 %846, i1 false) #16
  %850 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 1
  %851 = bitcast %union.TfLitePtrUnion* %850 to i8**
  %852 = load i8*, i8** %851, align 8
  br label %853

853:                                              ; preds = %823, %845
  %854 = phi i8* [ %852, %845 ], [ null, %823 ]
  %855 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 3, i32 1
  %856 = load i32, i32* %855, align 4
  %857 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 3, i32 0
  %858 = load float, float* %857, align 8
  %859 = tail call %"class.tflite::CpuBackendContext"* @_ZN6tflite17CpuBackendContext14GetFromContextEP13TfLiteContext(%struct.TfLiteContext* %0) #16
  call void @_ZN6tflite13optimized_ops4MeanERKNS_10MeanParamsERKNS_12RuntimeShapeEPKhifS6_PhifPNS_17CpuBackendContextE(%"struct.tflite::MeanParams"* nonnull dereferenceable(10) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %816, i32 %818, float %820, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i8* %854, i32 %856, float %858, %"class.tflite::CpuBackendContext"* %859)
  %860 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %861 = load i32, i32* %860, align 8
  %862 = icmp sgt i32 %861, 5
  br i1 %862, label %863, label %869

863:                                              ; preds = %853
  %864 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %865 = load i32*, i32** %864, align 8
  %866 = icmp eq i32* %865, null
  br i1 %866, label %869, label %867

867:                                              ; preds = %863
  %868 = bitcast i32* %865 to i8*
  call void @_ZdaPv(i8* %868) #15
  br label %869

869:                                              ; preds = %853, %863, %867
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %821) #16
  %870 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %871 = load i32, i32* %870, align 8
  %872 = icmp sgt i32 %871, 5
  br i1 %872, label %873, label %879

873:                                              ; preds = %869
  %874 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %875 = load i32*, i32** %874, align 8
  %876 = icmp eq i32* %875, null
  br i1 %876, label %879, label %877

877:                                              ; preds = %873
  %878 = bitcast i32* %875 to i8*
  call void @_ZdaPv(i8* %878) #15
  br label %879

879:                                              ; preds = %877, %873, %869
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %802) #16
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %621) #16
  br label %2510

880:                                              ; preds = %793, %782, %797, %778, %790, %533, %522, %537, %518, %530
  %881 = phi i8* [ %361, %530 ], [ %361, %518 ], [ %361, %537 ], [ %361, %522 ], [ %361, %533 ], [ %621, %790 ], [ %621, %778 ], [ %621, %797 ], [ %621, %782 ], [ %621, %793 ]
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %881) #16
  %882 = load i32, i32* %358, align 8
  br label %883

883:                                              ; preds = %880, %357
  %884 = phi i32 [ %882, %880 ], [ %359, %357 ]
  switch i32 %884, label %2510 [
    i32 1, label %885
    i32 2, label %1631
    i32 4, label %1686
    i32 9, label %1743
    i32 3, label %2127
  ]

885:                                              ; preds = %883
  %886 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %886) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %886, i8 -86, i64 10, i1 false)
  %887 = trunc i64 %147 to i8
  store i8 %887, i8* %886, align 2
  %888 = icmp eq %struct.TfLiteTensor* %56, null
  br i1 %888, label %893, label %889

889:                                              ; preds = %885
  %890 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 1, i32 0
  %891 = load i32*, i32** %890, align 8
  %892 = bitcast i32* %891 to i8*
  br label %893

893:                                              ; preds = %885, %889
  %894 = phi i8* [ %892, %889 ], [ null, %885 ]
  %895 = phi i32* [ %891, %889 ], [ null, %885 ]
  %896 = icmp sgt i32 %148, 0
  br i1 %896, label %897, label %953

897:                                              ; preds = %893
  %898 = and i64 %147, 4294967295
  %899 = icmp ult i64 %898, 8
  br i1 %899, label %900, label %920

900:                                              ; preds = %949, %920, %897
  %901 = phi i64 [ 0, %920 ], [ 0, %897 ], [ %932, %949 ]
  %902 = sub i64 %147, %901
  %903 = xor i64 %901, -1
  %904 = add nsw i64 %898, %903
  %905 = and i64 %902, 3
  %906 = icmp eq i64 %905, 0
  br i1 %906, label %917, label %907

907:                                              ; preds = %900, %907
  %908 = phi i64 [ %914, %907 ], [ %901, %900 ]
  %909 = phi i64 [ %915, %907 ], [ %905, %900 ]
  %910 = getelementptr inbounds i32, i32* %895, i64 %908
  %911 = load i32, i32* %910, align 4
  %912 = trunc i32 %911 to i16
  %913 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %908
  store i16 %912, i16* %913, align 2
  %914 = add nuw nsw i64 %908, 1
  %915 = add i64 %909, -1
  %916 = icmp eq i64 %915, 0
  br i1 %916, label %917, label %907, !llvm.loop !112

917:                                              ; preds = %907, %900
  %918 = phi i64 [ %901, %900 ], [ %914, %907 ]
  %919 = icmp ult i64 %904, 3
  br i1 %919, label %951, label %1015

920:                                              ; preds = %897
  %921 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 0
  %922 = shl nuw nsw i64 %898, 1
  %923 = add nuw nsw i64 %922, 2
  %924 = getelementptr i8, i8* %13, i64 %923
  %925 = getelementptr i32, i32* %895, i64 %898
  %926 = bitcast i32* %925 to i16*
  %927 = icmp ult i16* %921, %926
  %928 = icmp ult i8* %894, %924
  %929 = and i1 %927, %928
  br i1 %929, label %900, label %930

930:                                              ; preds = %920
  %931 = and i64 %147, 7
  %932 = sub nsw i64 %898, %931
  br label %933

933:                                              ; preds = %933, %930
  %934 = phi i64 [ 0, %930 ], [ %947, %933 ]
  %935 = getelementptr inbounds i32, i32* %895, i64 %934
  %936 = bitcast i32* %935 to <4 x i32>*
  %937 = load <4 x i32>, <4 x i32>* %936, align 4, !alias.scope !113
  %938 = getelementptr inbounds i32, i32* %935, i64 4
  %939 = bitcast i32* %938 to <4 x i32>*
  %940 = load <4 x i32>, <4 x i32>* %939, align 4, !alias.scope !113
  %941 = trunc <4 x i32> %937 to <4 x i16>
  %942 = trunc <4 x i32> %940 to <4 x i16>
  %943 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %934
  %944 = bitcast i16* %943 to <4 x i16>*
  store <4 x i16> %941, <4 x i16>* %944, align 2, !alias.scope !116, !noalias !113
  %945 = getelementptr inbounds i16, i16* %943, i64 4
  %946 = bitcast i16* %945 to <4 x i16>*
  store <4 x i16> %942, <4 x i16>* %946, align 2, !alias.scope !116, !noalias !113
  %947 = add i64 %934, 8
  %948 = icmp eq i64 %947, %932
  br i1 %948, label %949, label %933, !llvm.loop !118

949:                                              ; preds = %933
  %950 = icmp eq i64 %931, 0
  br i1 %950, label %951, label %900

951:                                              ; preds = %917, %1015, %949
  %952 = icmp ult i32 %148, 4
  br i1 %952, label %953, label %1043

953:                                              ; preds = %893, %951
  %954 = phi i64 [ %147, %951 ], [ 0, %893 ]
  %955 = and i64 %954, 4294967295
  %956 = sub nsw i64 4, %955
  %957 = icmp ult i64 %956, 16
  br i1 %957, label %958, label %960

958:                                              ; preds = %1013, %953
  %959 = phi i64 [ %955, %953 ], [ %962, %1013 ]
  br label %1038

960:                                              ; preds = %953
  %961 = and i64 %956, -16
  %962 = add nsw i64 %955, %961
  %963 = add nsw i64 %961, -16
  %964 = lshr exact i64 %963, 4
  %965 = add nuw nsw i64 %964, 1
  %966 = and i64 %965, 3
  %967 = icmp ult i64 %963, 48
  br i1 %967, label %999, label %968

968:                                              ; preds = %960
  %969 = sub nsw i64 %965, %966
  br label %970

970:                                              ; preds = %970, %968
  %971 = phi i64 [ 0, %968 ], [ %996, %970 ]
  %972 = phi i64 [ %969, %968 ], [ %997, %970 ]
  %973 = add i64 %955, %971
  %974 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %973
  %975 = bitcast i16* %974 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %975, align 2
  %976 = getelementptr inbounds i16, i16* %974, i64 8
  %977 = bitcast i16* %976 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %977, align 2
  %978 = or i64 %971, 16
  %979 = add i64 %955, %978
  %980 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %979
  %981 = bitcast i16* %980 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %981, align 2
  %982 = getelementptr inbounds i16, i16* %980, i64 8
  %983 = bitcast i16* %982 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %983, align 2
  %984 = or i64 %971, 32
  %985 = add i64 %955, %984
  %986 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %985
  %987 = bitcast i16* %986 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %987, align 2
  %988 = getelementptr inbounds i16, i16* %986, i64 8
  %989 = bitcast i16* %988 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %989, align 2
  %990 = or i64 %971, 48
  %991 = add i64 %955, %990
  %992 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %991
  %993 = bitcast i16* %992 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %993, align 2
  %994 = getelementptr inbounds i16, i16* %992, i64 8
  %995 = bitcast i16* %994 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %995, align 2
  %996 = add i64 %971, 64
  %997 = add i64 %972, -4
  %998 = icmp eq i64 %997, 0
  br i1 %998, label %999, label %970, !llvm.loop !119

999:                                              ; preds = %970, %960
  %1000 = phi i64 [ 0, %960 ], [ %996, %970 ]
  %1001 = icmp eq i64 %966, 0
  br i1 %1001, label %1013, label %1002

1002:                                             ; preds = %999, %1002
  %1003 = phi i64 [ %1010, %1002 ], [ %1000, %999 ]
  %1004 = phi i64 [ %1011, %1002 ], [ %966, %999 ]
  %1005 = add i64 %955, %1003
  %1006 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %1005
  %1007 = bitcast i16* %1006 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1007, align 2
  %1008 = getelementptr inbounds i16, i16* %1006, i64 8
  %1009 = bitcast i16* %1008 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1009, align 2
  %1010 = add i64 %1003, 16
  %1011 = add i64 %1004, -1
  %1012 = icmp eq i64 %1011, 0
  br i1 %1012, label %1013, label %1002, !llvm.loop !120

1013:                                             ; preds = %1002, %999
  %1014 = icmp eq i64 %956, %961
  br i1 %1014, label %1043, label %958

1015:                                             ; preds = %917, %1015
  %1016 = phi i64 [ %1036, %1015 ], [ %918, %917 ]
  %1017 = getelementptr inbounds i32, i32* %895, i64 %1016
  %1018 = load i32, i32* %1017, align 4
  %1019 = trunc i32 %1018 to i16
  %1020 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %1016
  store i16 %1019, i16* %1020, align 2
  %1021 = add nuw nsw i64 %1016, 1
  %1022 = getelementptr inbounds i32, i32* %895, i64 %1021
  %1023 = load i32, i32* %1022, align 4
  %1024 = trunc i32 %1023 to i16
  %1025 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %1021
  store i16 %1024, i16* %1025, align 2
  %1026 = add nuw nsw i64 %1016, 2
  %1027 = getelementptr inbounds i32, i32* %895, i64 %1026
  %1028 = load i32, i32* %1027, align 4
  %1029 = trunc i32 %1028 to i16
  %1030 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %1026
  store i16 %1029, i16* %1030, align 2
  %1031 = add nuw nsw i64 %1016, 3
  %1032 = getelementptr inbounds i32, i32* %895, i64 %1031
  %1033 = load i32, i32* %1032, align 4
  %1034 = trunc i32 %1033 to i16
  %1035 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %1031
  store i16 %1034, i16* %1035, align 2
  %1036 = add nuw nsw i64 %1016, 4
  %1037 = icmp eq i64 %1036, %898
  br i1 %1037, label %951, label %1015, !llvm.loop !121

1038:                                             ; preds = %958, %1038
  %1039 = phi i64 [ %1041, %1038 ], [ %959, %958 ]
  %1040 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %1039
  store i16 1, i16* %1040, align 2
  %1041 = add nuw nsw i64 %1039, 1
  %1042 = icmp eq i64 %1041, 4
  br i1 %1042, label %1043, label %1038, !llvm.loop !122

1043:                                             ; preds = %1038, %1013, %951
  %1044 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %39, i64 0, i32 0
  %1045 = load i8, i8* %1044, align 1, !range !6
  %1046 = icmp eq i8 %1045, 0
  br i1 %1046, label %1136, label %1047

1047:                                             ; preds = %1043
  %1048 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 2
  %1049 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1048, align 8
  %1050 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1049, i64 0, i32 0
  %1051 = load i32, i32* %1050, align 4
  %1052 = icmp eq i32 %1051, 4
  %1053 = icmp eq i8 %887, 2
  %1054 = and i1 %1053, %1052
  br i1 %1054, label %1055, label %1136

1055:                                             ; preds = %1047
  %1056 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 0
  %1057 = load i16, i16* %1056, align 2
  switch i16 %1057, label %1136 [
    i16 1, label %1058
    i16 2, label %1062
  ]

1058:                                             ; preds = %1055
  %1059 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 1
  %1060 = load i16, i16* %1059, align 2
  %1061 = icmp eq i16 %1060, 2
  br i1 %1061, label %1066, label %1136

1062:                                             ; preds = %1055
  %1063 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 1
  %1064 = load i16, i16* %1063, align 2
  %1065 = icmp eq i16 %1064, 1
  br i1 %1065, label %1066, label %1136

1066:                                             ; preds = %1062, %1058
  %1067 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1067) #16
  %1068 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %1068, label %1069, label %1071

1069:                                             ; preds = %1066
  %1070 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %1070, align 8, !alias.scope !123
  br label %1080

1071:                                             ; preds = %1066
  %1072 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1049, i64 0, i32 1, i64 0
  %1073 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 4, i32* %1073, align 8, !alias.scope !123
  %1074 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %1075 = bitcast %union.anon* %1074 to i8*
  %1076 = bitcast i32* %1072 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1075, i8* align 4 %1076, i64 16, i1 false) #16
  %1077 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %1078 = bitcast %union.TfLitePtrUnion* %1077 to float**
  %1079 = load float*, float** %1078, align 8
  br label %1080

1080:                                             ; preds = %1069, %1071
  %1081 = phi float* [ %1079, %1071 ], [ null, %1069 ]
  %1082 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1082) #16
  %1083 = icmp eq %struct.TfLiteTensor* %68, null
  br i1 %1083, label %1084, label %1086

1084:                                             ; preds = %1080
  %1085 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %1085, align 8, !alias.scope !126
  br label %1114

1086:                                             ; preds = %1080
  %1087 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 2
  %1088 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1087, align 8, !noalias !126
  %1089 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1088, i64 0, i32 0
  %1090 = load i32, i32* %1089, align 4, !noalias !126
  %1091 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1088, i64 0, i32 1, i64 0
  %1092 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %1090, i32* %1092, align 8, !alias.scope !126
  %1093 = icmp sgt i32 %1090, 5
  br i1 %1093, label %1094, label %1101

1094:                                             ; preds = %1086
  %1095 = sext i32 %1090 to i64
  %1096 = shl nsw i64 %1095, 2
  %1097 = tail call i8* @_Znam(i64 %1096) #15, !noalias !126
  %1098 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %1099 = bitcast i32** %1098 to i8**
  store i8* %1097, i8** %1099, align 8, !alias.scope !126
  %1100 = bitcast i8* %1097 to i32*
  br label %1106

1101:                                             ; preds = %1086
  %1102 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %1103 = bitcast %union.anon* %1102 to i32*
  %1104 = sext i32 %1090 to i64
  %1105 = shl nsw i64 %1104, 2
  br label %1106

1106:                                             ; preds = %1101, %1094
  %1107 = phi i64 [ %1096, %1094 ], [ %1105, %1101 ]
  %1108 = phi i32* [ %1100, %1094 ], [ %1103, %1101 ]
  %1109 = bitcast i32* %1108 to i8*
  %1110 = bitcast i32* %1091 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1109, i8* align 4 %1110, i64 %1107, i1 false) #16
  %1111 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 1
  %1112 = bitcast %union.TfLitePtrUnion* %1111 to float**
  %1113 = load float*, float** %1112, align 8
  br label %1114

1114:                                             ; preds = %1084, %1106
  %1115 = phi float* [ %1113, %1106 ], [ null, %1084 ]
  call void @_ZN6tflite13reference_ops4MeanIfEEvRKNS_10MeanParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::MeanParams"* nonnull dereferenceable(10) %12, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, float* %1081, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, float* %1115)
  %1116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %1117 = load i32, i32* %1116, align 8
  %1118 = icmp sgt i32 %1117, 5
  br i1 %1118, label %1119, label %1125

1119:                                             ; preds = %1114
  %1120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %1121 = load i32*, i32** %1120, align 8
  %1122 = icmp eq i32* %1121, null
  br i1 %1122, label %1125, label %1123

1123:                                             ; preds = %1119
  %1124 = bitcast i32* %1121 to i8*
  call void @_ZdaPv(i8* %1124) #15
  br label %1125

1125:                                             ; preds = %1114, %1119, %1123
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1082) #16
  %1126 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %1127 = load i32, i32* %1126, align 8
  %1128 = icmp sgt i32 %1127, 5
  br i1 %1128, label %1129, label %1135

1129:                                             ; preds = %1125
  %1130 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %1131 = load i32*, i32** %1130, align 8
  %1132 = icmp eq i32* %1131, null
  br i1 %1132, label %1135, label %1133

1133:                                             ; preds = %1129
  %1134 = bitcast i32* %1131 to i8*
  call void @_ZdaPv(i8* %1134) #15
  br label %1135

1135:                                             ; preds = %1125, %1129, %1133
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1067) #16
  br label %1627

1136:                                             ; preds = %1055, %1058, %1043, %1047, %1062
  %1137 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %1137, label %1142, label %1138

1138:                                             ; preds = %1136
  %1139 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %1140 = bitcast %union.TfLitePtrUnion* %1139 to float**
  %1141 = load float*, float** %1140, align 8
  br label %1142

1142:                                             ; preds = %1136, %1138
  %1143 = phi float* [ %1141, %1138 ], [ null, %1136 ]
  %1144 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 2
  %1145 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1144, align 8
  %1146 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1145, i64 0, i32 1, i64 0
  %1147 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1145, i64 0, i32 0
  %1148 = load i32, i32* %1147, align 4
  %1149 = icmp eq %struct.TfLiteTensor* %68, null
  br i1 %1149, label %1154, label %1150

1150:                                             ; preds = %1142
  %1151 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 1
  %1152 = bitcast %union.TfLitePtrUnion* %1151 to float**
  %1153 = load float*, float** %1152, align 8
  br label %1154

1154:                                             ; preds = %1142, %1150
  %1155 = phi float* [ %1153, %1150 ], [ null, %1142 ]
  %1156 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 2
  %1157 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1156, align 8
  %1158 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1157, i64 0, i32 1, i64 0
  %1159 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1157, i64 0, i32 0
  %1160 = load i32, i32* %1159, align 4
  br i1 %888, label %1164, label %1161

1161:                                             ; preds = %1154
  %1162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 1, i32 0
  %1163 = load i32*, i32** %1162, align 8
  br label %1164

1164:                                             ; preds = %1154, %1161
  %1165 = phi i32* [ %1163, %1161 ], [ null, %1154 ]
  %1166 = icmp ne i8 %1045, 0
  %1167 = icmp eq %struct.TfLiteTensor* %160, null
  br i1 %1167, label %1171, label %1168

1168:                                             ; preds = %1164
  %1169 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %160, i64 0, i32 1, i32 0
  %1170 = load i32*, i32** %1169, align 8
  br label %1171

1171:                                             ; preds = %1164, %1168
  %1172 = phi i32* [ %1170, %1168 ], [ null, %1164 ]
  %1173 = icmp eq %struct.TfLiteTensor* %170, null
  br i1 %1173, label %1177, label %1174

1174:                                             ; preds = %1171
  %1175 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %170, i64 0, i32 1, i32 0
  %1176 = load i32*, i32** %1175, align 8
  br label %1177

1177:                                             ; preds = %1171, %1174
  %1178 = phi i32* [ %1176, %1174 ], [ null, %1171 ]
  %1179 = icmp eq %struct.TfLiteTensor* %180, null
  br i1 %1179, label %1184, label %1180

1180:                                             ; preds = %1177
  %1181 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %180, i64 0, i32 1
  %1182 = bitcast %union.TfLitePtrUnion* %1181 to float**
  %1183 = load float*, float** %1182, align 8
  br label %1184

1184:                                             ; preds = %1177, %1180
  %1185 = phi float* [ %1183, %1180 ], [ null, %1177 ]
  %1186 = icmp eq i32 %148, 1
  br i1 %1186, label %1187, label %1625

1187:                                             ; preds = %1184
  %1188 = load i32, i32* %1165, align 4
  %1189 = add i32 %1148, -1
  %1190 = icmp eq i32 %1188, %1189
  br i1 %1190, label %1191, label %1625

1191:                                             ; preds = %1187
  %1192 = icmp sgt i32 %1188, 0
  br i1 %1192, label %1193, label %1284

1193:                                             ; preds = %1191
  %1194 = zext i32 %1188 to i64
  %1195 = icmp ult i32 %1188, 8
  br i1 %1195, label %1196, label %1199

1196:                                             ; preds = %1274, %1193
  %1197 = phi i64 [ 0, %1193 ], [ %1200, %1274 ]
  %1198 = phi i32 [ 1, %1193 ], [ %1282, %1274 ]
  br label %1617

1199:                                             ; preds = %1193
  %1200 = and i64 %1194, 4294967288
  %1201 = add nsw i64 %1200, -8
  %1202 = lshr exact i64 %1201, 3
  %1203 = add nuw nsw i64 %1202, 1
  %1204 = and i64 %1203, 3
  %1205 = icmp ult i64 %1201, 24
  br i1 %1205, label %1251, label %1206

1206:                                             ; preds = %1199
  %1207 = sub nsw i64 %1203, %1204
  br label %1208

1208:                                             ; preds = %1208, %1206
  %1209 = phi i64 [ 0, %1206 ], [ %1248, %1208 ]
  %1210 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1206 ], [ %1246, %1208 ]
  %1211 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1206 ], [ %1247, %1208 ]
  %1212 = phi i64 [ %1207, %1206 ], [ %1249, %1208 ]
  %1213 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1145, i64 0, i32 1, i64 %1209
  %1214 = bitcast i32* %1213 to <4 x i32>*
  %1215 = load <4 x i32>, <4 x i32>* %1214, align 4
  %1216 = getelementptr inbounds i32, i32* %1213, i64 4
  %1217 = bitcast i32* %1216 to <4 x i32>*
  %1218 = load <4 x i32>, <4 x i32>* %1217, align 4
  %1219 = mul nsw <4 x i32> %1215, %1210
  %1220 = mul nsw <4 x i32> %1218, %1211
  %1221 = or i64 %1209, 8
  %1222 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1145, i64 0, i32 1, i64 %1221
  %1223 = bitcast i32* %1222 to <4 x i32>*
  %1224 = load <4 x i32>, <4 x i32>* %1223, align 4
  %1225 = getelementptr inbounds i32, i32* %1222, i64 4
  %1226 = bitcast i32* %1225 to <4 x i32>*
  %1227 = load <4 x i32>, <4 x i32>* %1226, align 4
  %1228 = mul nsw <4 x i32> %1224, %1219
  %1229 = mul nsw <4 x i32> %1227, %1220
  %1230 = or i64 %1209, 16
  %1231 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1145, i64 0, i32 1, i64 %1230
  %1232 = bitcast i32* %1231 to <4 x i32>*
  %1233 = load <4 x i32>, <4 x i32>* %1232, align 4
  %1234 = getelementptr inbounds i32, i32* %1231, i64 4
  %1235 = bitcast i32* %1234 to <4 x i32>*
  %1236 = load <4 x i32>, <4 x i32>* %1235, align 4
  %1237 = mul nsw <4 x i32> %1233, %1228
  %1238 = mul nsw <4 x i32> %1236, %1229
  %1239 = or i64 %1209, 24
  %1240 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1145, i64 0, i32 1, i64 %1239
  %1241 = bitcast i32* %1240 to <4 x i32>*
  %1242 = load <4 x i32>, <4 x i32>* %1241, align 4
  %1243 = getelementptr inbounds i32, i32* %1240, i64 4
  %1244 = bitcast i32* %1243 to <4 x i32>*
  %1245 = load <4 x i32>, <4 x i32>* %1244, align 4
  %1246 = mul nsw <4 x i32> %1242, %1237
  %1247 = mul nsw <4 x i32> %1245, %1238
  %1248 = add i64 %1209, 32
  %1249 = add i64 %1212, -4
  %1250 = icmp eq i64 %1249, 0
  br i1 %1250, label %1251, label %1208, !llvm.loop !129

1251:                                             ; preds = %1208, %1199
  %1252 = phi <4 x i32> [ undef, %1199 ], [ %1246, %1208 ]
  %1253 = phi <4 x i32> [ undef, %1199 ], [ %1247, %1208 ]
  %1254 = phi i64 [ 0, %1199 ], [ %1248, %1208 ]
  %1255 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1199 ], [ %1246, %1208 ]
  %1256 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1199 ], [ %1247, %1208 ]
  %1257 = icmp eq i64 %1204, 0
  br i1 %1257, label %1274, label %1258

1258:                                             ; preds = %1251, %1258
  %1259 = phi i64 [ %1271, %1258 ], [ %1254, %1251 ]
  %1260 = phi <4 x i32> [ %1269, %1258 ], [ %1255, %1251 ]
  %1261 = phi <4 x i32> [ %1270, %1258 ], [ %1256, %1251 ]
  %1262 = phi i64 [ %1272, %1258 ], [ %1204, %1251 ]
  %1263 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1145, i64 0, i32 1, i64 %1259
  %1264 = bitcast i32* %1263 to <4 x i32>*
  %1265 = load <4 x i32>, <4 x i32>* %1264, align 4
  %1266 = getelementptr inbounds i32, i32* %1263, i64 4
  %1267 = bitcast i32* %1266 to <4 x i32>*
  %1268 = load <4 x i32>, <4 x i32>* %1267, align 4
  %1269 = mul nsw <4 x i32> %1265, %1260
  %1270 = mul nsw <4 x i32> %1268, %1261
  %1271 = add i64 %1259, 8
  %1272 = add i64 %1262, -1
  %1273 = icmp eq i64 %1272, 0
  br i1 %1273, label %1274, label %1258, !llvm.loop !130

1274:                                             ; preds = %1258, %1251
  %1275 = phi <4 x i32> [ %1252, %1251 ], [ %1269, %1258 ]
  %1276 = phi <4 x i32> [ %1253, %1251 ], [ %1270, %1258 ]
  %1277 = mul <4 x i32> %1276, %1275
  %1278 = shufflevector <4 x i32> %1277, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1279 = mul <4 x i32> %1277, %1278
  %1280 = shufflevector <4 x i32> %1279, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1281 = mul <4 x i32> %1279, %1280
  %1282 = extractelement <4 x i32> %1281, i32 0
  %1283 = icmp eq i64 %1200, %1194
  br i1 %1283, label %1284, label %1196

1284:                                             ; preds = %1617, %1274, %1191
  %1285 = phi i32 [ 1, %1191 ], [ %1282, %1274 ], [ %1622, %1617 ]
  %1286 = sext i32 %1188 to i64
  %1287 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1145, i64 0, i32 1, i64 %1286
  %1288 = load i32, i32* %1287, align 4
  %1289 = sext i32 %1288 to i64
  %1290 = sext i32 %1285 to i64
  %1291 = sitofp i32 %1288 to float
  %1292 = icmp sgt i32 %1285, 0
  br i1 %1292, label %1293, label %1627

1293:                                             ; preds = %1284
  %1294 = icmp eq i32 %1288, 0
  %1295 = icmp sgt i32 %1288, 1
  %1296 = add nsw i64 %1289, -1
  %1297 = add nsw i64 %1289, -2
  %1298 = and i64 %1296, 7
  %1299 = icmp ult i64 %1297, 7
  %1300 = sub nsw i64 %1296, %1298
  %1301 = icmp eq i64 %1298, 0
  br label %1302

1302:                                             ; preds = %1612, %1293
  %1303 = phi i64 [ %1615, %1612 ], [ 0, %1293 ]
  %1304 = getelementptr inbounds float, float* %1155, i64 %1303
  %1305 = mul nsw i64 %1303, %1289
  %1306 = getelementptr inbounds float, float* %1143, i64 %1305
  %1307 = ptrtoint float* %1306 to i64
  br i1 %1294, label %1612, label %1308

1308:                                             ; preds = %1302
  %1309 = and i64 %1307, 3
  %1310 = icmp eq i64 %1309, 0
  br i1 %1310, label %1311, label %1317

1311:                                             ; preds = %1308
  %1312 = lshr i64 %1307, 2
  %1313 = sub nsw i64 0, %1312
  %1314 = and i64 %1313, 3
  %1315 = icmp slt i64 %1314, %1289
  %1316 = select i1 %1315, i64 %1314, i64 %1289
  br label %1317

1317:                                             ; preds = %1311, %1308
  %1318 = phi i64 [ %1316, %1311 ], [ %1289, %1308 ]
  %1319 = sub nsw i64 %1289, %1318
  %1320 = sdiv i64 %1319, 8
  %1321 = shl nsw i64 %1320, 3
  %1322 = sdiv i64 %1319, 4
  %1323 = shl nsw i64 %1322, 2
  %1324 = add nsw i64 %1321, %1318
  %1325 = add nsw i64 %1323, %1318
  %1326 = add nsw i64 %1319, 3
  %1327 = icmp ugt i64 %1326, 6
  br i1 %1327, label %1328, label %1557

1328:                                             ; preds = %1317
  %1329 = getelementptr inbounds float, float* %1306, i64 %1318
  %1330 = bitcast float* %1329 to <4 x float>*
  %1331 = load <4 x float>, <4 x float>* %1330, align 1
  %1332 = icmp sgt i64 %1319, 7
  br i1 %1332, label %1333, label %1428

1333:                                             ; preds = %1328
  %1334 = add nsw i64 %1318, 4
  %1335 = getelementptr inbounds float, float* %1306, i64 %1334
  %1336 = bitcast float* %1335 to <4 x float>*
  %1337 = load <4 x float>, <4 x float>* %1336, align 1
  %1338 = add nsw i64 %1318, 8
  %1339 = icmp slt i64 %1338, %1324
  br i1 %1339, label %1340, label %1372

1340:                                             ; preds = %1333
  %1341 = add nsw i64 %1321, -9
  %1342 = lshr i64 %1341, 3
  %1343 = add nuw nsw i64 %1342, 1
  %1344 = and i64 %1343, 3
  %1345 = icmp eq i64 %1344, 0
  br i1 %1345, label %1364, label %1346

1346:                                             ; preds = %1340, %1346
  %1347 = phi i64 [ %1361, %1346 ], [ %1338, %1340 ]
  %1348 = phi i64 [ %1347, %1346 ], [ %1318, %1340 ]
  %1349 = phi <4 x float> [ %1355, %1346 ], [ %1331, %1340 ]
  %1350 = phi <4 x float> [ %1360, %1346 ], [ %1337, %1340 ]
  %1351 = phi i64 [ %1362, %1346 ], [ %1344, %1340 ]
  %1352 = getelementptr inbounds float, float* %1306, i64 %1347
  %1353 = bitcast float* %1352 to <4 x float>*
  %1354 = load <4 x float>, <4 x float>* %1353, align 1
  %1355 = fadd <4 x float> %1349, %1354
  %1356 = add nsw i64 %1348, 12
  %1357 = getelementptr inbounds float, float* %1306, i64 %1356
  %1358 = bitcast float* %1357 to <4 x float>*
  %1359 = load <4 x float>, <4 x float>* %1358, align 1
  %1360 = fadd <4 x float> %1350, %1359
  %1361 = add nsw i64 %1347, 8
  %1362 = add i64 %1351, -1
  %1363 = icmp eq i64 %1362, 0
  br i1 %1363, label %1364, label %1346, !llvm.loop !131

1364:                                             ; preds = %1346, %1340
  %1365 = phi i64 [ %1338, %1340 ], [ %1361, %1346 ]
  %1366 = phi i64 [ %1318, %1340 ], [ %1347, %1346 ]
  %1367 = phi <4 x float> [ %1331, %1340 ], [ %1355, %1346 ]
  %1368 = phi <4 x float> [ %1337, %1340 ], [ %1360, %1346 ]
  %1369 = phi <4 x float> [ undef, %1340 ], [ %1355, %1346 ]
  %1370 = phi <4 x float> [ undef, %1340 ], [ %1360, %1346 ]
  %1371 = icmp ult i64 %1341, 24
  br i1 %1371, label %1372, label %1377

1372:                                             ; preds = %1364, %1377, %1333
  %1373 = phi <4 x float> [ %1337, %1333 ], [ %1370, %1364 ], [ %1420, %1377 ]
  %1374 = phi <4 x float> [ %1331, %1333 ], [ %1369, %1364 ], [ %1415, %1377 ]
  %1375 = fadd <4 x float> %1373, %1374
  %1376 = icmp sgt i64 %1325, %1324
  br i1 %1376, label %1423, label %1428

1377:                                             ; preds = %1364, %1377
  %1378 = phi i64 [ %1421, %1377 ], [ %1365, %1364 ]
  %1379 = phi i64 [ %1411, %1377 ], [ %1366, %1364 ]
  %1380 = phi <4 x float> [ %1415, %1377 ], [ %1367, %1364 ]
  %1381 = phi <4 x float> [ %1420, %1377 ], [ %1368, %1364 ]
  %1382 = getelementptr inbounds float, float* %1306, i64 %1378
  %1383 = bitcast float* %1382 to <4 x float>*
  %1384 = load <4 x float>, <4 x float>* %1383, align 1
  %1385 = fadd <4 x float> %1380, %1384
  %1386 = add nsw i64 %1379, 12
  %1387 = getelementptr inbounds float, float* %1306, i64 %1386
  %1388 = bitcast float* %1387 to <4 x float>*
  %1389 = load <4 x float>, <4 x float>* %1388, align 1
  %1390 = fadd <4 x float> %1381, %1389
  %1391 = add nsw i64 %1378, 8
  %1392 = getelementptr inbounds float, float* %1306, i64 %1391
  %1393 = bitcast float* %1392 to <4 x float>*
  %1394 = load <4 x float>, <4 x float>* %1393, align 1
  %1395 = fadd <4 x float> %1385, %1394
  %1396 = add nsw i64 %1378, 12
  %1397 = getelementptr inbounds float, float* %1306, i64 %1396
  %1398 = bitcast float* %1397 to <4 x float>*
  %1399 = load <4 x float>, <4 x float>* %1398, align 1
  %1400 = fadd <4 x float> %1390, %1399
  %1401 = add nsw i64 %1378, 16
  %1402 = getelementptr inbounds float, float* %1306, i64 %1401
  %1403 = bitcast float* %1402 to <4 x float>*
  %1404 = load <4 x float>, <4 x float>* %1403, align 1
  %1405 = fadd <4 x float> %1395, %1404
  %1406 = add nsw i64 %1378, 20
  %1407 = getelementptr inbounds float, float* %1306, i64 %1406
  %1408 = bitcast float* %1407 to <4 x float>*
  %1409 = load <4 x float>, <4 x float>* %1408, align 1
  %1410 = fadd <4 x float> %1400, %1409
  %1411 = add nsw i64 %1378, 24
  %1412 = getelementptr inbounds float, float* %1306, i64 %1411
  %1413 = bitcast float* %1412 to <4 x float>*
  %1414 = load <4 x float>, <4 x float>* %1413, align 1
  %1415 = fadd <4 x float> %1405, %1414
  %1416 = add nsw i64 %1378, 28
  %1417 = getelementptr inbounds float, float* %1306, i64 %1416
  %1418 = bitcast float* %1417 to <4 x float>*
  %1419 = load <4 x float>, <4 x float>* %1418, align 1
  %1420 = fadd <4 x float> %1410, %1419
  %1421 = add nsw i64 %1378, 32
  %1422 = icmp slt i64 %1421, %1324
  br i1 %1422, label %1377, label %1372

1423:                                             ; preds = %1372
  %1424 = getelementptr inbounds float, float* %1306, i64 %1324
  %1425 = bitcast float* %1424 to <4 x float>*
  %1426 = load <4 x float>, <4 x float>* %1425, align 1
  %1427 = fadd <4 x float> %1375, %1426
  br label %1428

1428:                                             ; preds = %1423, %1372, %1328
  %1429 = phi <4 x float> [ %1331, %1328 ], [ %1427, %1423 ], [ %1375, %1372 ]
  %1430 = shufflevector <4 x float> %1429, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 2, i32 3>
  %1431 = fadd <4 x float> %1429, %1430
  %1432 = extractelement <4 x float> %1431, i32 1
  %1433 = extractelement <4 x float> %1431, i32 0
  %1434 = fadd float %1433, %1432
  %1435 = icmp sgt i64 %1318, 0
  br i1 %1435, label %1436, label %1457

1436:                                             ; preds = %1428
  %1437 = add nsw i64 %1318, -1
  %1438 = and i64 %1318, 7
  %1439 = icmp ult i64 %1437, 7
  br i1 %1439, label %1442, label %1440

1440:                                             ; preds = %1436
  %1441 = sub nsw i64 %1318, %1438
  br label %1483

1442:                                             ; preds = %1483, %1436
  %1443 = phi float [ undef, %1436 ], [ %1517, %1483 ]
  %1444 = phi i64 [ 0, %1436 ], [ %1518, %1483 ]
  %1445 = phi float [ %1434, %1436 ], [ %1517, %1483 ]
  %1446 = icmp eq i64 %1438, 0
  br i1 %1446, label %1457, label %1447

1447:                                             ; preds = %1442, %1447
  %1448 = phi i64 [ %1454, %1447 ], [ %1444, %1442 ]
  %1449 = phi float [ %1453, %1447 ], [ %1445, %1442 ]
  %1450 = phi i64 [ %1455, %1447 ], [ %1438, %1442 ]
  %1451 = getelementptr inbounds float, float* %1306, i64 %1448
  %1452 = load float, float* %1451, align 4
  %1453 = fadd float %1449, %1452
  %1454 = add nuw nsw i64 %1448, 1
  %1455 = add i64 %1450, -1
  %1456 = icmp eq i64 %1455, 0
  br i1 %1456, label %1457, label %1447, !llvm.loop !132

1457:                                             ; preds = %1442, %1447, %1428
  %1458 = phi float [ %1434, %1428 ], [ %1443, %1442 ], [ %1453, %1447 ]
  %1459 = icmp slt i64 %1325, %1289
  br i1 %1459, label %1460, label %1612

1460:                                             ; preds = %1457
  %1461 = sub nsw i64 %1289, %1318
  %1462 = sub nsw i64 %1461, %1323
  %1463 = xor i64 %1318, -1
  %1464 = add nsw i64 %1463, %1289
  %1465 = sub nsw i64 %1464, %1323
  %1466 = and i64 %1462, 7
  %1467 = icmp eq i64 %1466, 0
  br i1 %1467, label %1478, label %1468

1468:                                             ; preds = %1460, %1468
  %1469 = phi i64 [ %1475, %1468 ], [ %1325, %1460 ]
  %1470 = phi float [ %1474, %1468 ], [ %1458, %1460 ]
  %1471 = phi i64 [ %1476, %1468 ], [ %1466, %1460 ]
  %1472 = getelementptr inbounds float, float* %1306, i64 %1469
  %1473 = load float, float* %1472, align 4
  %1474 = fadd float %1470, %1473
  %1475 = add nsw i64 %1469, 1
  %1476 = add i64 %1471, -1
  %1477 = icmp eq i64 %1476, 0
  br i1 %1477, label %1478, label %1468, !llvm.loop !133

1478:                                             ; preds = %1468, %1460
  %1479 = phi float [ undef, %1460 ], [ %1474, %1468 ]
  %1480 = phi i64 [ %1325, %1460 ], [ %1475, %1468 ]
  %1481 = phi float [ %1458, %1460 ], [ %1474, %1468 ]
  %1482 = icmp ult i64 %1465, 7
  br i1 %1482, label %1612, label %1521

1483:                                             ; preds = %1483, %1440
  %1484 = phi i64 [ 0, %1440 ], [ %1518, %1483 ]
  %1485 = phi float [ %1434, %1440 ], [ %1517, %1483 ]
  %1486 = phi i64 [ %1441, %1440 ], [ %1519, %1483 ]
  %1487 = getelementptr inbounds float, float* %1306, i64 %1484
  %1488 = load float, float* %1487, align 4
  %1489 = fadd float %1485, %1488
  %1490 = or i64 %1484, 1
  %1491 = getelementptr inbounds float, float* %1306, i64 %1490
  %1492 = load float, float* %1491, align 4
  %1493 = fadd float %1489, %1492
  %1494 = or i64 %1484, 2
  %1495 = getelementptr inbounds float, float* %1306, i64 %1494
  %1496 = load float, float* %1495, align 4
  %1497 = fadd float %1493, %1496
  %1498 = or i64 %1484, 3
  %1499 = getelementptr inbounds float, float* %1306, i64 %1498
  %1500 = load float, float* %1499, align 4
  %1501 = fadd float %1497, %1500
  %1502 = or i64 %1484, 4
  %1503 = getelementptr inbounds float, float* %1306, i64 %1502
  %1504 = load float, float* %1503, align 4
  %1505 = fadd float %1501, %1504
  %1506 = or i64 %1484, 5
  %1507 = getelementptr inbounds float, float* %1306, i64 %1506
  %1508 = load float, float* %1507, align 4
  %1509 = fadd float %1505, %1508
  %1510 = or i64 %1484, 6
  %1511 = getelementptr inbounds float, float* %1306, i64 %1510
  %1512 = load float, float* %1511, align 4
  %1513 = fadd float %1509, %1512
  %1514 = or i64 %1484, 7
  %1515 = getelementptr inbounds float, float* %1306, i64 %1514
  %1516 = load float, float* %1515, align 4
  %1517 = fadd float %1513, %1516
  %1518 = add nuw nsw i64 %1484, 8
  %1519 = add i64 %1486, -8
  %1520 = icmp eq i64 %1519, 0
  br i1 %1520, label %1442, label %1483

1521:                                             ; preds = %1478, %1521
  %1522 = phi i64 [ %1555, %1521 ], [ %1480, %1478 ]
  %1523 = phi float [ %1554, %1521 ], [ %1481, %1478 ]
  %1524 = getelementptr inbounds float, float* %1306, i64 %1522
  %1525 = load float, float* %1524, align 4
  %1526 = fadd float %1523, %1525
  %1527 = add nsw i64 %1522, 1
  %1528 = getelementptr inbounds float, float* %1306, i64 %1527
  %1529 = load float, float* %1528, align 4
  %1530 = fadd float %1526, %1529
  %1531 = add nsw i64 %1522, 2
  %1532 = getelementptr inbounds float, float* %1306, i64 %1531
  %1533 = load float, float* %1532, align 4
  %1534 = fadd float %1530, %1533
  %1535 = add nsw i64 %1522, 3
  %1536 = getelementptr inbounds float, float* %1306, i64 %1535
  %1537 = load float, float* %1536, align 4
  %1538 = fadd float %1534, %1537
  %1539 = add nsw i64 %1522, 4
  %1540 = getelementptr inbounds float, float* %1306, i64 %1539
  %1541 = load float, float* %1540, align 4
  %1542 = fadd float %1538, %1541
  %1543 = add nsw i64 %1522, 5
  %1544 = getelementptr inbounds float, float* %1306, i64 %1543
  %1545 = load float, float* %1544, align 4
  %1546 = fadd float %1542, %1545
  %1547 = add nsw i64 %1522, 6
  %1548 = getelementptr inbounds float, float* %1306, i64 %1547
  %1549 = load float, float* %1548, align 4
  %1550 = fadd float %1546, %1549
  %1551 = add nsw i64 %1522, 7
  %1552 = getelementptr inbounds float, float* %1306, i64 %1551
  %1553 = load float, float* %1552, align 4
  %1554 = fadd float %1550, %1553
  %1555 = add nsw i64 %1522, 8
  %1556 = icmp eq i64 %1555, %1289
  br i1 %1556, label %1612, label %1521

1557:                                             ; preds = %1317
  %1558 = load float, float* %1306, align 4
  br i1 %1295, label %1559, label %1612

1559:                                             ; preds = %1557
  br i1 %1299, label %1598, label %1560

1560:                                             ; preds = %1559, %1560
  %1561 = phi i64 [ %1595, %1560 ], [ 1, %1559 ]
  %1562 = phi float [ %1594, %1560 ], [ %1558, %1559 ]
  %1563 = phi i64 [ %1596, %1560 ], [ %1300, %1559 ]
  %1564 = getelementptr inbounds float, float* %1306, i64 %1561
  %1565 = load float, float* %1564, align 4
  %1566 = fadd float %1562, %1565
  %1567 = add nuw nsw i64 %1561, 1
  %1568 = getelementptr inbounds float, float* %1306, i64 %1567
  %1569 = load float, float* %1568, align 4
  %1570 = fadd float %1566, %1569
  %1571 = add nuw nsw i64 %1561, 2
  %1572 = getelementptr inbounds float, float* %1306, i64 %1571
  %1573 = load float, float* %1572, align 4
  %1574 = fadd float %1570, %1573
  %1575 = add nuw nsw i64 %1561, 3
  %1576 = getelementptr inbounds float, float* %1306, i64 %1575
  %1577 = load float, float* %1576, align 4
  %1578 = fadd float %1574, %1577
  %1579 = add nuw nsw i64 %1561, 4
  %1580 = getelementptr inbounds float, float* %1306, i64 %1579
  %1581 = load float, float* %1580, align 4
  %1582 = fadd float %1578, %1581
  %1583 = add nuw nsw i64 %1561, 5
  %1584 = getelementptr inbounds float, float* %1306, i64 %1583
  %1585 = load float, float* %1584, align 4
  %1586 = fadd float %1582, %1585
  %1587 = add nuw nsw i64 %1561, 6
  %1588 = getelementptr inbounds float, float* %1306, i64 %1587
  %1589 = load float, float* %1588, align 4
  %1590 = fadd float %1586, %1589
  %1591 = add nuw nsw i64 %1561, 7
  %1592 = getelementptr inbounds float, float* %1306, i64 %1591
  %1593 = load float, float* %1592, align 4
  %1594 = fadd float %1590, %1593
  %1595 = add nuw nsw i64 %1561, 8
  %1596 = add i64 %1563, -8
  %1597 = icmp eq i64 %1596, 0
  br i1 %1597, label %1598, label %1560

1598:                                             ; preds = %1560, %1559
  %1599 = phi float [ undef, %1559 ], [ %1594, %1560 ]
  %1600 = phi i64 [ 1, %1559 ], [ %1595, %1560 ]
  %1601 = phi float [ %1558, %1559 ], [ %1594, %1560 ]
  br i1 %1301, label %1612, label %1602

1602:                                             ; preds = %1598, %1602
  %1603 = phi i64 [ %1609, %1602 ], [ %1600, %1598 ]
  %1604 = phi float [ %1608, %1602 ], [ %1601, %1598 ]
  %1605 = phi i64 [ %1610, %1602 ], [ %1298, %1598 ]
  %1606 = getelementptr inbounds float, float* %1306, i64 %1603
  %1607 = load float, float* %1606, align 4
  %1608 = fadd float %1604, %1607
  %1609 = add nuw nsw i64 %1603, 1
  %1610 = add i64 %1605, -1
  %1611 = icmp eq i64 %1610, 0
  br i1 %1611, label %1612, label %1602, !llvm.loop !134

1612:                                             ; preds = %1598, %1602, %1478, %1521, %1557, %1457, %1302
  %1613 = phi float [ 0.000000e+00, %1302 ], [ %1458, %1457 ], [ %1558, %1557 ], [ %1479, %1478 ], [ %1554, %1521 ], [ %1599, %1598 ], [ %1608, %1602 ]
  %1614 = fdiv float %1613, %1291
  store float %1614, float* %1304, align 4
  %1615 = add nuw nsw i64 %1303, 1
  %1616 = icmp eq i64 %1615, %1290
  br i1 %1616, label %1627, label %1302

1617:                                             ; preds = %1196, %1617
  %1618 = phi i64 [ %1623, %1617 ], [ %1197, %1196 ]
  %1619 = phi i32 [ %1622, %1617 ], [ %1198, %1196 ]
  %1620 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1145, i64 0, i32 1, i64 %1618
  %1621 = load i32, i32* %1620, align 4
  %1622 = mul nsw i32 %1621, %1619
  %1623 = add nuw nsw i64 %1618, 1
  %1624 = icmp eq i64 %1623, %1194
  br i1 %1624, label %1284, label %1617, !llvm.loop !135

1625:                                             ; preds = %1184, %1187
  %1626 = tail call zeroext i1 @_ZN6tflite13reference_ops4MeanIffEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_(float* %1143, i32* %1146, i32 %1148, float* %1155, i32* %1158, i32 %1160, i32* %1165, i32 %148, i1 zeroext %1166, i32* %1172, i32* %1178, float* %1185) #16
  br i1 %1626, label %1627, label %1628

1627:                                             ; preds = %1612, %1625, %1135, %1284
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %886) #16
  br label %2510

1628:                                             ; preds = %1625
  %1629 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1630 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1629, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1630(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 373, i8* getelementptr inbounds ([407 x i8], [407 x i8]* @.str.30, i64 0, i64 0)) #16
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %886) #16
  br label %2510

1631:                                             ; preds = %883
  %1632 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %1632, label %1636, label %1633

1633:                                             ; preds = %1631
  %1634 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1, i32 0
  %1635 = load i32*, i32** %1634, align 8
  br label %1636

1636:                                             ; preds = %1631, %1633
  %1637 = phi i32* [ %1635, %1633 ], [ null, %1631 ]
  %1638 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 2
  %1639 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1638, align 8
  %1640 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1639, i64 0, i32 1, i64 0
  %1641 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1639, i64 0, i32 0
  %1642 = load i32, i32* %1641, align 4
  %1643 = icmp eq %struct.TfLiteTensor* %68, null
  br i1 %1643, label %1647, label %1644

1644:                                             ; preds = %1636
  %1645 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 1, i32 0
  %1646 = load i32*, i32** %1645, align 8
  br label %1647

1647:                                             ; preds = %1636, %1644
  %1648 = phi i32* [ %1646, %1644 ], [ null, %1636 ]
  %1649 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 2
  %1650 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1649, align 8
  %1651 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1650, i64 0, i32 1, i64 0
  %1652 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1650, i64 0, i32 0
  %1653 = load i32, i32* %1652, align 4
  %1654 = icmp eq %struct.TfLiteTensor* %56, null
  br i1 %1654, label %1658, label %1655

1655:                                             ; preds = %1647
  %1656 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 1, i32 0
  %1657 = load i32*, i32** %1656, align 8
  br label %1658

1658:                                             ; preds = %1647, %1655
  %1659 = phi i32* [ %1657, %1655 ], [ null, %1647 ]
  %1660 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %39, i64 0, i32 0
  %1661 = load i8, i8* %1660, align 1, !range !6
  %1662 = icmp ne i8 %1661, 0
  %1663 = icmp eq %struct.TfLiteTensor* %160, null
  br i1 %1663, label %1667, label %1664

1664:                                             ; preds = %1658
  %1665 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %160, i64 0, i32 1, i32 0
  %1666 = load i32*, i32** %1665, align 8
  br label %1667

1667:                                             ; preds = %1658, %1664
  %1668 = phi i32* [ %1666, %1664 ], [ null, %1658 ]
  %1669 = icmp eq %struct.TfLiteTensor* %170, null
  br i1 %1669, label %1673, label %1670

1670:                                             ; preds = %1667
  %1671 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %170, i64 0, i32 1, i32 0
  %1672 = load i32*, i32** %1671, align 8
  br label %1673

1673:                                             ; preds = %1667, %1670
  %1674 = phi i32* [ %1672, %1670 ], [ null, %1667 ]
  %1675 = icmp eq %struct.TfLiteTensor* %180, null
  br i1 %1675, label %1680, label %1676

1676:                                             ; preds = %1673
  %1677 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %180, i64 0, i32 1
  %1678 = bitcast %union.TfLitePtrUnion* %1677 to i64**
  %1679 = load i64*, i64** %1678, align 8
  br label %1680

1680:                                             ; preds = %1673, %1676
  %1681 = phi i64* [ %1679, %1676 ], [ null, %1673 ]
  %1682 = tail call zeroext i1 @_ZN6tflite13reference_ops4MeanIilEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_(i32* %1637, i32* %1640, i32 %1642, i32* %1648, i32* %1651, i32 %1653, i32* %1659, i32 %148, i1 zeroext %1662, i32* %1668, i32* %1674, i64* %1681)
  br i1 %1682, label %2510, label %1683

1683:                                             ; preds = %1680
  %1684 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1685 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1684, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1685(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 387, i8* getelementptr inbounds ([398 x i8], [398 x i8]* @.str.31, i64 0, i64 0)) #16
  br label %2510

1686:                                             ; preds = %883
  %1687 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %1687, label %1692, label %1688

1688:                                             ; preds = %1686
  %1689 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %1690 = bitcast %union.TfLitePtrUnion* %1689 to i64**
  %1691 = load i64*, i64** %1690, align 8
  br label %1692

1692:                                             ; preds = %1686, %1688
  %1693 = phi i64* [ %1691, %1688 ], [ null, %1686 ]
  %1694 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 2
  %1695 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1694, align 8
  %1696 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1695, i64 0, i32 1, i64 0
  %1697 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1695, i64 0, i32 0
  %1698 = load i32, i32* %1697, align 4
  %1699 = icmp eq %struct.TfLiteTensor* %68, null
  br i1 %1699, label %1704, label %1700

1700:                                             ; preds = %1692
  %1701 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 1
  %1702 = bitcast %union.TfLitePtrUnion* %1701 to i64**
  %1703 = load i64*, i64** %1702, align 8
  br label %1704

1704:                                             ; preds = %1692, %1700
  %1705 = phi i64* [ %1703, %1700 ], [ null, %1692 ]
  %1706 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 2
  %1707 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1706, align 8
  %1708 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1707, i64 0, i32 1, i64 0
  %1709 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1707, i64 0, i32 0
  %1710 = load i32, i32* %1709, align 4
  %1711 = icmp eq %struct.TfLiteTensor* %56, null
  br i1 %1711, label %1715, label %1712

1712:                                             ; preds = %1704
  %1713 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 1, i32 0
  %1714 = load i32*, i32** %1713, align 8
  br label %1715

1715:                                             ; preds = %1704, %1712
  %1716 = phi i32* [ %1714, %1712 ], [ null, %1704 ]
  %1717 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %39, i64 0, i32 0
  %1718 = load i8, i8* %1717, align 1, !range !6
  %1719 = icmp ne i8 %1718, 0
  %1720 = icmp eq %struct.TfLiteTensor* %160, null
  br i1 %1720, label %1724, label %1721

1721:                                             ; preds = %1715
  %1722 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %160, i64 0, i32 1, i32 0
  %1723 = load i32*, i32** %1722, align 8
  br label %1724

1724:                                             ; preds = %1715, %1721
  %1725 = phi i32* [ %1723, %1721 ], [ null, %1715 ]
  %1726 = icmp eq %struct.TfLiteTensor* %170, null
  br i1 %1726, label %1730, label %1727

1727:                                             ; preds = %1724
  %1728 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %170, i64 0, i32 1, i32 0
  %1729 = load i32*, i32** %1728, align 8
  br label %1730

1730:                                             ; preds = %1724, %1727
  %1731 = phi i32* [ %1729, %1727 ], [ null, %1724 ]
  %1732 = icmp eq %struct.TfLiteTensor* %180, null
  br i1 %1732, label %1737, label %1733

1733:                                             ; preds = %1730
  %1734 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %180, i64 0, i32 1
  %1735 = bitcast %union.TfLitePtrUnion* %1734 to i64**
  %1736 = load i64*, i64** %1735, align 8
  br label %1737

1737:                                             ; preds = %1730, %1733
  %1738 = phi i64* [ %1736, %1733 ], [ null, %1730 ]
  %1739 = tail call zeroext i1 @_ZN6tflite13reference_ops4MeanIllEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_(i64* %1693, i32* %1696, i32 %1698, i64* %1705, i32* %1708, i32 %1710, i32* %1716, i32 %148, i1 zeroext %1719, i32* %1725, i32* %1731, i64* %1738)
  br i1 %1739, label %2510, label %1740

1740:                                             ; preds = %1737
  %1741 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1742 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1741, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1742(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 400, i8* getelementptr inbounds ([406 x i8], [406 x i8]* @.str.32, i64 0, i64 0)) #16
  br label %2510

1743:                                             ; preds = %883
  %1744 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %1744) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %1744, i8 -86, i64 10, i1 false)
  %1745 = trunc i64 %147 to i8
  store i8 %1745, i8* %1744, align 2
  %1746 = icmp eq %struct.TfLiteTensor* %56, null
  br i1 %1746, label %1751, label %1747

1747:                                             ; preds = %1743
  %1748 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 1, i32 0
  %1749 = load i32*, i32** %1748, align 8
  %1750 = bitcast i32* %1749 to i8*
  br label %1751

1751:                                             ; preds = %1743, %1747
  %1752 = phi i8* [ %1750, %1747 ], [ null, %1743 ]
  %1753 = phi i32* [ %1749, %1747 ], [ null, %1743 ]
  %1754 = icmp sgt i32 %148, 0
  br i1 %1754, label %1755, label %1811

1755:                                             ; preds = %1751
  %1756 = and i64 %147, 4294967295
  %1757 = icmp ult i64 %1756, 8
  br i1 %1757, label %1758, label %1778

1758:                                             ; preds = %1807, %1778, %1755
  %1759 = phi i64 [ 0, %1778 ], [ 0, %1755 ], [ %1790, %1807 ]
  %1760 = sub i64 %147, %1759
  %1761 = xor i64 %1759, -1
  %1762 = add nsw i64 %1756, %1761
  %1763 = and i64 %1760, 3
  %1764 = icmp eq i64 %1763, 0
  br i1 %1764, label %1775, label %1765

1765:                                             ; preds = %1758, %1765
  %1766 = phi i64 [ %1772, %1765 ], [ %1759, %1758 ]
  %1767 = phi i64 [ %1773, %1765 ], [ %1763, %1758 ]
  %1768 = getelementptr inbounds i32, i32* %1753, i64 %1766
  %1769 = load i32, i32* %1768, align 4
  %1770 = trunc i32 %1769 to i16
  %1771 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %16, i64 0, i32 1, i64 %1766
  store i16 %1770, i16* %1771, align 2
  %1772 = add nuw nsw i64 %1766, 1
  %1773 = add i64 %1767, -1
  %1774 = icmp eq i64 %1773, 0
  br i1 %1774, label %1775, label %1765, !llvm.loop !136

1775:                                             ; preds = %1765, %1758
  %1776 = phi i64 [ %1759, %1758 ], [ %1772, %1765 ]
  %1777 = icmp ult i64 %1762, 3
  br i1 %1777, label %1809, label %1873

1778:                                             ; preds = %1755
  %1779 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %16, i64 0, i32 1, i64 0
  %1780 = shl nuw nsw i64 %1756, 1
  %1781 = add nuw nsw i64 %1780, 2
  %1782 = getelementptr i8, i8* %17, i64 %1781
  %1783 = getelementptr i32, i32* %1753, i64 %1756
  %1784 = bitcast i32* %1783 to i16*
  %1785 = icmp ult i16* %1779, %1784
  %1786 = icmp ult i8* %1752, %1782
  %1787 = and i1 %1785, %1786
  br i1 %1787, label %1758, label %1788

1788:                                             ; preds = %1778
  %1789 = and i64 %147, 7
  %1790 = sub nsw i64 %1756, %1789
  br label %1791

1791:                                             ; preds = %1791, %1788
  %1792 = phi i64 [ 0, %1788 ], [ %1805, %1791 ]
  %1793 = getelementptr inbounds i32, i32* %1753, i64 %1792
  %1794 = bitcast i32* %1793 to <4 x i32>*
  %1795 = load <4 x i32>, <4 x i32>* %1794, align 4, !alias.scope !137
  %1796 = getelementptr inbounds i32, i32* %1793, i64 4
  %1797 = bitcast i32* %1796 to <4 x i32>*
  %1798 = load <4 x i32>, <4 x i32>* %1797, align 4, !alias.scope !137
  %1799 = trunc <4 x i32> %1795 to <4 x i16>
  %1800 = trunc <4 x i32> %1798 to <4 x i16>
  %1801 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %16, i64 0, i32 1, i64 %1792
  %1802 = bitcast i16* %1801 to <4 x i16>*
  store <4 x i16> %1799, <4 x i16>* %1802, align 2, !alias.scope !140, !noalias !137
  %1803 = getelementptr inbounds i16, i16* %1801, i64 4
  %1804 = bitcast i16* %1803 to <4 x i16>*
  store <4 x i16> %1800, <4 x i16>* %1804, align 2, !alias.scope !140, !noalias !137
  %1805 = add i64 %1792, 8
  %1806 = icmp eq i64 %1805, %1790
  br i1 %1806, label %1807, label %1791, !llvm.loop !142

1807:                                             ; preds = %1791
  %1808 = icmp eq i64 %1789, 0
  br i1 %1808, label %1809, label %1758

1809:                                             ; preds = %1775, %1873, %1807
  %1810 = icmp ult i32 %148, 4
  br i1 %1810, label %1811, label %1901

1811:                                             ; preds = %1751, %1809
  %1812 = phi i64 [ %147, %1809 ], [ 0, %1751 ]
  %1813 = and i64 %1812, 4294967295
  %1814 = sub nsw i64 4, %1813
  %1815 = icmp ult i64 %1814, 16
  br i1 %1815, label %1816, label %1818

1816:                                             ; preds = %1871, %1811
  %1817 = phi i64 [ %1813, %1811 ], [ %1820, %1871 ]
  br label %1896

1818:                                             ; preds = %1811
  %1819 = and i64 %1814, -16
  %1820 = add nsw i64 %1813, %1819
  %1821 = add nsw i64 %1819, -16
  %1822 = lshr exact i64 %1821, 4
  %1823 = add nuw nsw i64 %1822, 1
  %1824 = and i64 %1823, 3
  %1825 = icmp ult i64 %1821, 48
  br i1 %1825, label %1857, label %1826

1826:                                             ; preds = %1818
  %1827 = sub nsw i64 %1823, %1824
  br label %1828

1828:                                             ; preds = %1828, %1826
  %1829 = phi i64 [ 0, %1826 ], [ %1854, %1828 ]
  %1830 = phi i64 [ %1827, %1826 ], [ %1855, %1828 ]
  %1831 = add i64 %1813, %1829
  %1832 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %16, i64 0, i32 1, i64 %1831
  %1833 = bitcast i16* %1832 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1833, align 2
  %1834 = getelementptr inbounds i16, i16* %1832, i64 8
  %1835 = bitcast i16* %1834 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1835, align 2
  %1836 = or i64 %1829, 16
  %1837 = add i64 %1813, %1836
  %1838 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %16, i64 0, i32 1, i64 %1837
  %1839 = bitcast i16* %1838 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1839, align 2
  %1840 = getelementptr inbounds i16, i16* %1838, i64 8
  %1841 = bitcast i16* %1840 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1841, align 2
  %1842 = or i64 %1829, 32
  %1843 = add i64 %1813, %1842
  %1844 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %16, i64 0, i32 1, i64 %1843
  %1845 = bitcast i16* %1844 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1845, align 2
  %1846 = getelementptr inbounds i16, i16* %1844, i64 8
  %1847 = bitcast i16* %1846 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1847, align 2
  %1848 = or i64 %1829, 48
  %1849 = add i64 %1813, %1848
  %1850 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %16, i64 0, i32 1, i64 %1849
  %1851 = bitcast i16* %1850 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1851, align 2
  %1852 = getelementptr inbounds i16, i16* %1850, i64 8
  %1853 = bitcast i16* %1852 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1853, align 2
  %1854 = add i64 %1829, 64
  %1855 = add i64 %1830, -4
  %1856 = icmp eq i64 %1855, 0
  br i1 %1856, label %1857, label %1828, !llvm.loop !143

1857:                                             ; preds = %1828, %1818
  %1858 = phi i64 [ 0, %1818 ], [ %1854, %1828 ]
  %1859 = icmp eq i64 %1824, 0
  br i1 %1859, label %1871, label %1860

1860:                                             ; preds = %1857, %1860
  %1861 = phi i64 [ %1868, %1860 ], [ %1858, %1857 ]
  %1862 = phi i64 [ %1869, %1860 ], [ %1824, %1857 ]
  %1863 = add i64 %1813, %1861
  %1864 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %16, i64 0, i32 1, i64 %1863
  %1865 = bitcast i16* %1864 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1865, align 2
  %1866 = getelementptr inbounds i16, i16* %1864, i64 8
  %1867 = bitcast i16* %1866 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1867, align 2
  %1868 = add i64 %1861, 16
  %1869 = add i64 %1862, -1
  %1870 = icmp eq i64 %1869, 0
  br i1 %1870, label %1871, label %1860, !llvm.loop !144

1871:                                             ; preds = %1860, %1857
  %1872 = icmp eq i64 %1814, %1819
  br i1 %1872, label %1901, label %1816

1873:                                             ; preds = %1775, %1873
  %1874 = phi i64 [ %1894, %1873 ], [ %1776, %1775 ]
  %1875 = getelementptr inbounds i32, i32* %1753, i64 %1874
  %1876 = load i32, i32* %1875, align 4
  %1877 = trunc i32 %1876 to i16
  %1878 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %16, i64 0, i32 1, i64 %1874
  store i16 %1877, i16* %1878, align 2
  %1879 = add nuw nsw i64 %1874, 1
  %1880 = getelementptr inbounds i32, i32* %1753, i64 %1879
  %1881 = load i32, i32* %1880, align 4
  %1882 = trunc i32 %1881 to i16
  %1883 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %16, i64 0, i32 1, i64 %1879
  store i16 %1882, i16* %1883, align 2
  %1884 = add nuw nsw i64 %1874, 2
  %1885 = getelementptr inbounds i32, i32* %1753, i64 %1884
  %1886 = load i32, i32* %1885, align 4
  %1887 = trunc i32 %1886 to i16
  %1888 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %16, i64 0, i32 1, i64 %1884
  store i16 %1887, i16* %1888, align 2
  %1889 = add nuw nsw i64 %1874, 3
  %1890 = getelementptr inbounds i32, i32* %1753, i64 %1889
  %1891 = load i32, i32* %1890, align 4
  %1892 = trunc i32 %1891 to i16
  %1893 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %16, i64 0, i32 1, i64 %1889
  store i16 %1892, i16* %1893, align 2
  %1894 = add nuw nsw i64 %1874, 4
  %1895 = icmp eq i64 %1894, %1756
  br i1 %1895, label %1809, label %1873, !llvm.loop !145

1896:                                             ; preds = %1816, %1896
  %1897 = phi i64 [ %1899, %1896 ], [ %1817, %1816 ]
  %1898 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %16, i64 0, i32 1, i64 %1897
  store i16 1, i16* %1898, align 2
  %1899 = add nuw nsw i64 %1897, 1
  %1900 = icmp eq i64 %1899, 4
  br i1 %1900, label %1901, label %1896, !llvm.loop !146

1901:                                             ; preds = %1896, %1871, %1809
  %1902 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %39, i64 0, i32 0
  %1903 = load i8, i8* %1902, align 1, !range !6
  %1904 = icmp eq i8 %1903, 0
  br i1 %1904, label %2002, label %1905

1905:                                             ; preds = %1901
  %1906 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 2
  %1907 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1906, align 8
  %1908 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1907, i64 0, i32 0
  %1909 = load i32, i32* %1908, align 4
  %1910 = icmp eq i32 %1909, 4
  %1911 = icmp eq i8 %1745, 2
  %1912 = and i1 %1911, %1910
  br i1 %1912, label %1913, label %2002

1913:                                             ; preds = %1905
  %1914 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %16, i64 0, i32 1, i64 0
  %1915 = load i16, i16* %1914, align 2
  switch i16 %1915, label %2002 [
    i16 1, label %1916
    i16 2, label %1920
  ]

1916:                                             ; preds = %1913
  %1917 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %16, i64 0, i32 1, i64 1
  %1918 = load i16, i16* %1917, align 2
  %1919 = icmp eq i16 %1918, 2
  br i1 %1919, label %1924, label %2002

1920:                                             ; preds = %1913
  %1921 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %16, i64 0, i32 1, i64 1
  %1922 = load i16, i16* %1921, align 2
  %1923 = icmp eq i16 %1922, 1
  br i1 %1923, label %1924, label %2002

1924:                                             ; preds = %1920, %1916
  %1925 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpData", %"struct.tflite::ops::builtin::reduce::OpData"* %71, i64 0, i32 0
  %1926 = load i32, i32* %1925, align 4
  %1927 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpData", %"struct.tflite::ops::builtin::reduce::OpData"* %71, i64 0, i32 1
  %1928 = load i32, i32* %1927, align 4
  %1929 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1929) #16
  %1930 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %1930, label %1931, label %1933

1931:                                             ; preds = %1924
  %1932 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %1932, align 8, !alias.scope !147
  br label %1942

1933:                                             ; preds = %1924
  %1934 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1907, i64 0, i32 1, i64 0
  %1935 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 4, i32* %1935, align 8, !alias.scope !147
  %1936 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %1937 = bitcast %union.anon* %1936 to i8*
  %1938 = bitcast i32* %1934 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1937, i8* align 4 %1938, i64 16, i1 false) #16
  %1939 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %1940 = bitcast %union.TfLitePtrUnion* %1939 to i8**
  %1941 = load i8*, i8** %1940, align 8
  br label %1942

1942:                                             ; preds = %1931, %1933
  %1943 = phi i8* [ %1941, %1933 ], [ null, %1931 ]
  %1944 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 3, i32 1
  %1945 = load i32, i32* %1944, align 4
  %1946 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1946) #16
  %1947 = icmp eq %struct.TfLiteTensor* %68, null
  br i1 %1947, label %1948, label %1950

1948:                                             ; preds = %1942
  %1949 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %1949, align 8, !alias.scope !150
  br label %1978

1950:                                             ; preds = %1942
  %1951 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 2
  %1952 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1951, align 8, !noalias !150
  %1953 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1952, i64 0, i32 0
  %1954 = load i32, i32* %1953, align 4, !noalias !150
  %1955 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1952, i64 0, i32 1, i64 0
  %1956 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %1954, i32* %1956, align 8, !alias.scope !150
  %1957 = icmp sgt i32 %1954, 5
  br i1 %1957, label %1958, label %1965

1958:                                             ; preds = %1950
  %1959 = sext i32 %1954 to i64
  %1960 = shl nsw i64 %1959, 2
  %1961 = tail call i8* @_Znam(i64 %1960) #15, !noalias !150
  %1962 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %1963 = bitcast i32** %1962 to i8**
  store i8* %1961, i8** %1963, align 8, !alias.scope !150
  %1964 = bitcast i8* %1961 to i32*
  br label %1970

1965:                                             ; preds = %1950
  %1966 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %1967 = bitcast %union.anon* %1966 to i32*
  %1968 = sext i32 %1954 to i64
  %1969 = shl nsw i64 %1968, 2
  br label %1970

1970:                                             ; preds = %1965, %1958
  %1971 = phi i64 [ %1960, %1958 ], [ %1969, %1965 ]
  %1972 = phi i32* [ %1964, %1958 ], [ %1967, %1965 ]
  %1973 = bitcast i32* %1972 to i8*
  %1974 = bitcast i32* %1955 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1973, i8* align 4 %1974, i64 %1971, i1 false) #16
  %1975 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 1
  %1976 = bitcast %union.TfLitePtrUnion* %1975 to i8**
  %1977 = load i8*, i8** %1976, align 8
  br label %1978

1978:                                             ; preds = %1948, %1970
  %1979 = phi i8* [ %1977, %1970 ], [ null, %1948 ]
  %1980 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 3, i32 1
  %1981 = load i32, i32* %1980, align 4
  call void @_ZN6tflite21reference_integer_ops4MeanERKNS_10MeanParamsEiiRKNS_12RuntimeShapeEPKaiS6_Pai(%"struct.tflite::MeanParams"* nonnull dereferenceable(10) %16, i32 %1926, i32 %1928, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %18, i8* %1943, i32 %1945, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %19, i8* %1979, i32 %1981)
  %1982 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  %1983 = load i32, i32* %1982, align 8
  %1984 = icmp sgt i32 %1983, 5
  br i1 %1984, label %1985, label %1991

1985:                                             ; preds = %1978
  %1986 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %1987 = load i32*, i32** %1986, align 8
  %1988 = icmp eq i32* %1987, null
  br i1 %1988, label %1991, label %1989

1989:                                             ; preds = %1985
  %1990 = bitcast i32* %1987 to i8*
  call void @_ZdaPv(i8* %1990) #15
  br label %1991

1991:                                             ; preds = %1978, %1985, %1989
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1946) #16
  %1992 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  %1993 = load i32, i32* %1992, align 8
  %1994 = icmp sgt i32 %1993, 5
  br i1 %1994, label %1995, label %2001

1995:                                             ; preds = %1991
  %1996 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %1997 = load i32*, i32** %1996, align 8
  %1998 = icmp eq i32* %1997, null
  br i1 %1998, label %2001, label %1999

1999:                                             ; preds = %1995
  %2000 = bitcast i32* %1997 to i8*
  call void @_ZdaPv(i8* %2000) #15
  br label %2001

2001:                                             ; preds = %1991, %1995, %1999
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1929) #16
  br label %2125

2002:                                             ; preds = %1913, %1916, %1901, %1920, %1905
  %2003 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 3
  %2004 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 3, i32 1
  %2005 = load i32, i32* %2004, align 4
  %2006 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 3, i32 1
  %2007 = load i32, i32* %2006, align 4
  %2008 = icmp eq i32 %2005, %2007
  br i1 %2008, label %2009, label %2068

2009:                                             ; preds = %2002
  %2010 = getelementptr inbounds %struct.TfLiteQuantizationParams, %struct.TfLiteQuantizationParams* %2003, i64 0, i32 0
  %2011 = load float, float* %2010, align 8
  %2012 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 3, i32 0
  %2013 = load float, float* %2012, align 8
  %2014 = fcmp oeq float %2011, %2013
  br i1 %2014, label %2015, label %2068

2015:                                             ; preds = %2009
  %2016 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %2016, label %2021, label %2017

2017:                                             ; preds = %2015
  %2018 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %2019 = bitcast %union.TfLitePtrUnion* %2018 to i8**
  %2020 = load i8*, i8** %2019, align 8
  br label %2021

2021:                                             ; preds = %2015, %2017
  %2022 = phi i8* [ %2020, %2017 ], [ null, %2015 ]
  %2023 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 2
  %2024 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2023, align 8
  %2025 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2024, i64 0, i32 1, i64 0
  %2026 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2024, i64 0, i32 0
  %2027 = load i32, i32* %2026, align 4
  %2028 = icmp eq %struct.TfLiteTensor* %68, null
  br i1 %2028, label %2033, label %2029

2029:                                             ; preds = %2021
  %2030 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 1
  %2031 = bitcast %union.TfLitePtrUnion* %2030 to i8**
  %2032 = load i8*, i8** %2031, align 8
  br label %2033

2033:                                             ; preds = %2021, %2029
  %2034 = phi i8* [ %2032, %2029 ], [ null, %2021 ]
  %2035 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 2
  %2036 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2035, align 8
  %2037 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2036, i64 0, i32 1, i64 0
  %2038 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2036, i64 0, i32 0
  %2039 = load i32, i32* %2038, align 4
  br i1 %1746, label %2043, label %2040

2040:                                             ; preds = %2033
  %2041 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 1, i32 0
  %2042 = load i32*, i32** %2041, align 8
  br label %2043

2043:                                             ; preds = %2033, %2040
  %2044 = phi i32* [ %2042, %2040 ], [ null, %2033 ]
  %2045 = icmp ne i8 %1903, 0
  %2046 = icmp eq %struct.TfLiteTensor* %160, null
  br i1 %2046, label %2050, label %2047

2047:                                             ; preds = %2043
  %2048 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %160, i64 0, i32 1, i32 0
  %2049 = load i32*, i32** %2048, align 8
  br label %2050

2050:                                             ; preds = %2043, %2047
  %2051 = phi i32* [ %2049, %2047 ], [ null, %2043 ]
  %2052 = icmp eq %struct.TfLiteTensor* %170, null
  br i1 %2052, label %2056, label %2053

2053:                                             ; preds = %2050
  %2054 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %170, i64 0, i32 1, i32 0
  %2055 = load i32*, i32** %2054, align 8
  br label %2056

2056:                                             ; preds = %2050, %2053
  %2057 = phi i32* [ %2055, %2053 ], [ null, %2050 ]
  %2058 = icmp eq %struct.TfLiteTensor* %180, null
  br i1 %2058, label %2062, label %2059

2059:                                             ; preds = %2056
  %2060 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %180, i64 0, i32 1, i32 0
  %2061 = load i32*, i32** %2060, align 8
  br label %2062

2062:                                             ; preds = %2056, %2059
  %2063 = phi i32* [ %2061, %2059 ], [ null, %2056 ]
  %2064 = tail call zeroext i1 @_ZN6tflite13reference_ops4MeanIaiEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_(i8* %2022, i32* %2025, i32 %2027, i8* %2034, i32* %2037, i32 %2039, i32* %2044, i32 %148, i1 zeroext %2045, i32* %2051, i32* %2057, i32* %2063)
  br i1 %2064, label %2125, label %2065

2065:                                             ; preds = %2062
  %2066 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %2067 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %2066, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %2067(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 431, i8* getelementptr inbounds ([367 x i8], [367 x i8]* @.str.34, i64 0, i64 0)) #16
  br label %2126

2068:                                             ; preds = %2002, %2009
  %2069 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %2069, label %2074, label %2070

2070:                                             ; preds = %2068
  %2071 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %2072 = bitcast %union.TfLitePtrUnion* %2071 to i8**
  %2073 = load i8*, i8** %2072, align 8
  br label %2074

2074:                                             ; preds = %2068, %2070
  %2075 = phi i8* [ %2073, %2070 ], [ null, %2068 ]
  %2076 = getelementptr inbounds %struct.TfLiteQuantizationParams, %struct.TfLiteQuantizationParams* %2003, i64 0, i32 0
  %2077 = load float, float* %2076, align 8
  %2078 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 2
  %2079 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2078, align 8
  %2080 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2079, i64 0, i32 1, i64 0
  %2081 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2079, i64 0, i32 0
  %2082 = load i32, i32* %2081, align 4
  %2083 = icmp eq %struct.TfLiteTensor* %68, null
  br i1 %2083, label %2088, label %2084

2084:                                             ; preds = %2074
  %2085 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 1
  %2086 = bitcast %union.TfLitePtrUnion* %2085 to i8**
  %2087 = load i8*, i8** %2086, align 8
  br label %2088

2088:                                             ; preds = %2074, %2084
  %2089 = phi i8* [ %2087, %2084 ], [ null, %2074 ]
  %2090 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 3, i32 0
  %2091 = load float, float* %2090, align 8
  %2092 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 2
  %2093 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2092, align 8
  %2094 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2093, i64 0, i32 1, i64 0
  %2095 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2093, i64 0, i32 0
  %2096 = load i32, i32* %2095, align 4
  br i1 %1746, label %2100, label %2097

2097:                                             ; preds = %2088
  %2098 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 1, i32 0
  %2099 = load i32*, i32** %2098, align 8
  br label %2100

2100:                                             ; preds = %2088, %2097
  %2101 = phi i32* [ %2099, %2097 ], [ null, %2088 ]
  %2102 = icmp ne i8 %1903, 0
  %2103 = icmp eq %struct.TfLiteTensor* %160, null
  br i1 %2103, label %2107, label %2104

2104:                                             ; preds = %2100
  %2105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %160, i64 0, i32 1, i32 0
  %2106 = load i32*, i32** %2105, align 8
  br label %2107

2107:                                             ; preds = %2100, %2104
  %2108 = phi i32* [ %2106, %2104 ], [ null, %2100 ]
  %2109 = icmp eq %struct.TfLiteTensor* %170, null
  br i1 %2109, label %2113, label %2110

2110:                                             ; preds = %2107
  %2111 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %170, i64 0, i32 1, i32 0
  %2112 = load i32*, i32** %2111, align 8
  br label %2113

2113:                                             ; preds = %2107, %2110
  %2114 = phi i32* [ %2112, %2110 ], [ null, %2107 ]
  %2115 = icmp eq %struct.TfLiteTensor* %180, null
  br i1 %2115, label %2119, label %2116

2116:                                             ; preds = %2113
  %2117 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %180, i64 0, i32 1, i32 0
  %2118 = load i32*, i32** %2117, align 8
  br label %2119

2119:                                             ; preds = %2113, %2116
  %2120 = phi i32* [ %2118, %2116 ], [ null, %2113 ]
  %2121 = tail call zeroext i1 @_ZN6tflite13reference_ops18QuantizedMeanOrSumIaiEEbPKT_ifPKiiPS2_ifS6_iS6_ibPiS8_PT0_b(i8* %2075, i32 %2005, float %2077, i32* %2080, i32 %2082, i8* %2089, i32 %2007, float %2091, i32* %2094, i32 %2096, i32* %2101, i32 %148, i1 zeroext %2102, i32* %2108, i32* %2114, i32* %2120, i1 zeroext false)
  br i1 %2121, label %2125, label %2122

2122:                                             ; preds = %2119
  %2123 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %2124 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %2123, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %2124(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 445, i8* getelementptr inbounds ([508 x i8], [508 x i8]* @.str.35, i64 0, i64 0)) #16
  br label %2126

2125:                                             ; preds = %2062, %2119, %2001
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %1744) #16
  br label %2510

2126:                                             ; preds = %2122, %2065
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %1744) #16
  br label %2510

2127:                                             ; preds = %883
  %2128 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %20, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %2128) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %2128, i8 -86, i64 10, i1 false)
  %2129 = trunc i64 %147 to i8
  store i8 %2129, i8* %2128, align 2
  %2130 = icmp eq %struct.TfLiteTensor* %56, null
  br i1 %2130, label %2135, label %2131

2131:                                             ; preds = %2127
  %2132 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 1, i32 0
  %2133 = load i32*, i32** %2132, align 8
  %2134 = bitcast i32* %2133 to i8*
  br label %2135

2135:                                             ; preds = %2127, %2131
  %2136 = phi i8* [ %2134, %2131 ], [ null, %2127 ]
  %2137 = phi i32* [ %2133, %2131 ], [ null, %2127 ]
  %2138 = icmp sgt i32 %148, 0
  br i1 %2138, label %2139, label %2195

2139:                                             ; preds = %2135
  %2140 = and i64 %147, 4294967295
  %2141 = icmp ult i64 %2140, 8
  br i1 %2141, label %2142, label %2162

2142:                                             ; preds = %2191, %2162, %2139
  %2143 = phi i64 [ 0, %2162 ], [ 0, %2139 ], [ %2174, %2191 ]
  %2144 = sub i64 %147, %2143
  %2145 = xor i64 %2143, -1
  %2146 = add nsw i64 %2140, %2145
  %2147 = and i64 %2144, 3
  %2148 = icmp eq i64 %2147, 0
  br i1 %2148, label %2159, label %2149

2149:                                             ; preds = %2142, %2149
  %2150 = phi i64 [ %2156, %2149 ], [ %2143, %2142 ]
  %2151 = phi i64 [ %2157, %2149 ], [ %2147, %2142 ]
  %2152 = getelementptr inbounds i32, i32* %2137, i64 %2150
  %2153 = load i32, i32* %2152, align 4
  %2154 = trunc i32 %2153 to i16
  %2155 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %20, i64 0, i32 1, i64 %2150
  store i16 %2154, i16* %2155, align 2
  %2156 = add nuw nsw i64 %2150, 1
  %2157 = add i64 %2151, -1
  %2158 = icmp eq i64 %2157, 0
  br i1 %2158, label %2159, label %2149, !llvm.loop !153

2159:                                             ; preds = %2149, %2142
  %2160 = phi i64 [ %2143, %2142 ], [ %2156, %2149 ]
  %2161 = icmp ult i64 %2146, 3
  br i1 %2161, label %2193, label %2257

2162:                                             ; preds = %2139
  %2163 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %20, i64 0, i32 1, i64 0
  %2164 = shl nuw nsw i64 %2140, 1
  %2165 = add nuw nsw i64 %2164, 2
  %2166 = getelementptr i8, i8* %21, i64 %2165
  %2167 = getelementptr i32, i32* %2137, i64 %2140
  %2168 = bitcast i32* %2167 to i16*
  %2169 = icmp ult i16* %2163, %2168
  %2170 = icmp ult i8* %2136, %2166
  %2171 = and i1 %2169, %2170
  br i1 %2171, label %2142, label %2172

2172:                                             ; preds = %2162
  %2173 = and i64 %147, 7
  %2174 = sub nsw i64 %2140, %2173
  br label %2175

2175:                                             ; preds = %2175, %2172
  %2176 = phi i64 [ 0, %2172 ], [ %2189, %2175 ]
  %2177 = getelementptr inbounds i32, i32* %2137, i64 %2176
  %2178 = bitcast i32* %2177 to <4 x i32>*
  %2179 = load <4 x i32>, <4 x i32>* %2178, align 4, !alias.scope !154
  %2180 = getelementptr inbounds i32, i32* %2177, i64 4
  %2181 = bitcast i32* %2180 to <4 x i32>*
  %2182 = load <4 x i32>, <4 x i32>* %2181, align 4, !alias.scope !154
  %2183 = trunc <4 x i32> %2179 to <4 x i16>
  %2184 = trunc <4 x i32> %2182 to <4 x i16>
  %2185 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %20, i64 0, i32 1, i64 %2176
  %2186 = bitcast i16* %2185 to <4 x i16>*
  store <4 x i16> %2183, <4 x i16>* %2186, align 2, !alias.scope !157, !noalias !154
  %2187 = getelementptr inbounds i16, i16* %2185, i64 4
  %2188 = bitcast i16* %2187 to <4 x i16>*
  store <4 x i16> %2184, <4 x i16>* %2188, align 2, !alias.scope !157, !noalias !154
  %2189 = add i64 %2176, 8
  %2190 = icmp eq i64 %2189, %2174
  br i1 %2190, label %2191, label %2175, !llvm.loop !159

2191:                                             ; preds = %2175
  %2192 = icmp eq i64 %2173, 0
  br i1 %2192, label %2193, label %2142

2193:                                             ; preds = %2159, %2257, %2191
  %2194 = icmp ult i32 %148, 4
  br i1 %2194, label %2195, label %2285

2195:                                             ; preds = %2135, %2193
  %2196 = phi i64 [ %147, %2193 ], [ 0, %2135 ]
  %2197 = and i64 %2196, 4294967295
  %2198 = sub nsw i64 4, %2197
  %2199 = icmp ult i64 %2198, 16
  br i1 %2199, label %2200, label %2202

2200:                                             ; preds = %2255, %2195
  %2201 = phi i64 [ %2197, %2195 ], [ %2204, %2255 ]
  br label %2280

2202:                                             ; preds = %2195
  %2203 = and i64 %2198, -16
  %2204 = add nsw i64 %2197, %2203
  %2205 = add nsw i64 %2203, -16
  %2206 = lshr exact i64 %2205, 4
  %2207 = add nuw nsw i64 %2206, 1
  %2208 = and i64 %2207, 3
  %2209 = icmp ult i64 %2205, 48
  br i1 %2209, label %2241, label %2210

2210:                                             ; preds = %2202
  %2211 = sub nsw i64 %2207, %2208
  br label %2212

2212:                                             ; preds = %2212, %2210
  %2213 = phi i64 [ 0, %2210 ], [ %2238, %2212 ]
  %2214 = phi i64 [ %2211, %2210 ], [ %2239, %2212 ]
  %2215 = add i64 %2197, %2213
  %2216 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %20, i64 0, i32 1, i64 %2215
  %2217 = bitcast i16* %2216 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %2217, align 2
  %2218 = getelementptr inbounds i16, i16* %2216, i64 8
  %2219 = bitcast i16* %2218 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %2219, align 2
  %2220 = or i64 %2213, 16
  %2221 = add i64 %2197, %2220
  %2222 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %20, i64 0, i32 1, i64 %2221
  %2223 = bitcast i16* %2222 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %2223, align 2
  %2224 = getelementptr inbounds i16, i16* %2222, i64 8
  %2225 = bitcast i16* %2224 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %2225, align 2
  %2226 = or i64 %2213, 32
  %2227 = add i64 %2197, %2226
  %2228 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %20, i64 0, i32 1, i64 %2227
  %2229 = bitcast i16* %2228 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %2229, align 2
  %2230 = getelementptr inbounds i16, i16* %2228, i64 8
  %2231 = bitcast i16* %2230 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %2231, align 2
  %2232 = or i64 %2213, 48
  %2233 = add i64 %2197, %2232
  %2234 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %20, i64 0, i32 1, i64 %2233
  %2235 = bitcast i16* %2234 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %2235, align 2
  %2236 = getelementptr inbounds i16, i16* %2234, i64 8
  %2237 = bitcast i16* %2236 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %2237, align 2
  %2238 = add i64 %2213, 64
  %2239 = add i64 %2214, -4
  %2240 = icmp eq i64 %2239, 0
  br i1 %2240, label %2241, label %2212, !llvm.loop !160

2241:                                             ; preds = %2212, %2202
  %2242 = phi i64 [ 0, %2202 ], [ %2238, %2212 ]
  %2243 = icmp eq i64 %2208, 0
  br i1 %2243, label %2255, label %2244

2244:                                             ; preds = %2241, %2244
  %2245 = phi i64 [ %2252, %2244 ], [ %2242, %2241 ]
  %2246 = phi i64 [ %2253, %2244 ], [ %2208, %2241 ]
  %2247 = add i64 %2197, %2245
  %2248 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %20, i64 0, i32 1, i64 %2247
  %2249 = bitcast i16* %2248 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %2249, align 2
  %2250 = getelementptr inbounds i16, i16* %2248, i64 8
  %2251 = bitcast i16* %2250 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %2251, align 2
  %2252 = add i64 %2245, 16
  %2253 = add i64 %2246, -1
  %2254 = icmp eq i64 %2253, 0
  br i1 %2254, label %2255, label %2244, !llvm.loop !161

2255:                                             ; preds = %2244, %2241
  %2256 = icmp eq i64 %2198, %2203
  br i1 %2256, label %2285, label %2200

2257:                                             ; preds = %2159, %2257
  %2258 = phi i64 [ %2278, %2257 ], [ %2160, %2159 ]
  %2259 = getelementptr inbounds i32, i32* %2137, i64 %2258
  %2260 = load i32, i32* %2259, align 4
  %2261 = trunc i32 %2260 to i16
  %2262 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %20, i64 0, i32 1, i64 %2258
  store i16 %2261, i16* %2262, align 2
  %2263 = add nuw nsw i64 %2258, 1
  %2264 = getelementptr inbounds i32, i32* %2137, i64 %2263
  %2265 = load i32, i32* %2264, align 4
  %2266 = trunc i32 %2265 to i16
  %2267 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %20, i64 0, i32 1, i64 %2263
  store i16 %2266, i16* %2267, align 2
  %2268 = add nuw nsw i64 %2258, 2
  %2269 = getelementptr inbounds i32, i32* %2137, i64 %2268
  %2270 = load i32, i32* %2269, align 4
  %2271 = trunc i32 %2270 to i16
  %2272 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %20, i64 0, i32 1, i64 %2268
  store i16 %2271, i16* %2272, align 2
  %2273 = add nuw nsw i64 %2258, 3
  %2274 = getelementptr inbounds i32, i32* %2137, i64 %2273
  %2275 = load i32, i32* %2274, align 4
  %2276 = trunc i32 %2275 to i16
  %2277 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %20, i64 0, i32 1, i64 %2273
  store i16 %2276, i16* %2277, align 2
  %2278 = add nuw nsw i64 %2258, 4
  %2279 = icmp eq i64 %2278, %2140
  br i1 %2279, label %2193, label %2257, !llvm.loop !162

2280:                                             ; preds = %2200, %2280
  %2281 = phi i64 [ %2283, %2280 ], [ %2201, %2200 ]
  %2282 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %20, i64 0, i32 1, i64 %2281
  store i16 1, i16* %2282, align 2
  %2283 = add nuw nsw i64 %2281, 1
  %2284 = icmp eq i64 %2283, 4
  br i1 %2284, label %2285, label %2280, !llvm.loop !163

2285:                                             ; preds = %2280, %2255, %2193
  %2286 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %39, i64 0, i32 0
  %2287 = load i8, i8* %2286, align 1, !range !6
  %2288 = icmp eq i8 %2287, 0
  br i1 %2288, label %2386, label %2289

2289:                                             ; preds = %2285
  %2290 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 2
  %2291 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2290, align 8
  %2292 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2291, i64 0, i32 0
  %2293 = load i32, i32* %2292, align 4
  %2294 = icmp eq i32 %2293, 4
  %2295 = icmp eq i8 %2129, 2
  %2296 = and i1 %2295, %2294
  br i1 %2296, label %2297, label %2386

2297:                                             ; preds = %2289
  %2298 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %20, i64 0, i32 1, i64 0
  %2299 = load i16, i16* %2298, align 2
  switch i16 %2299, label %2386 [
    i16 1, label %2300
    i16 2, label %2304
  ]

2300:                                             ; preds = %2297
  %2301 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %20, i64 0, i32 1, i64 1
  %2302 = load i16, i16* %2301, align 2
  %2303 = icmp eq i16 %2302, 2
  br i1 %2303, label %2308, label %2386

2304:                                             ; preds = %2297
  %2305 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %20, i64 0, i32 1, i64 1
  %2306 = load i16, i16* %2305, align 2
  %2307 = icmp eq i16 %2306, 1
  br i1 %2307, label %2308, label %2386

2308:                                             ; preds = %2304, %2300
  %2309 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2309) #16
  %2310 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %2310, label %2311, label %2313

2311:                                             ; preds = %2308
  %2312 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %2312, align 8, !alias.scope !164
  br label %2322

2313:                                             ; preds = %2308
  %2314 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2291, i64 0, i32 1, i64 0
  %2315 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 4, i32* %2315, align 8, !alias.scope !164
  %2316 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %2317 = bitcast %union.anon* %2316 to i8*
  %2318 = bitcast i32* %2314 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2317, i8* align 4 %2318, i64 16, i1 false) #16
  %2319 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %2320 = bitcast %union.TfLitePtrUnion* %2319 to i8**
  %2321 = load i8*, i8** %2320, align 8
  br label %2322

2322:                                             ; preds = %2311, %2313
  %2323 = phi i8* [ %2321, %2313 ], [ null, %2311 ]
  %2324 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 3, i32 1
  %2325 = load i32, i32* %2324, align 4
  %2326 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 3, i32 0
  %2327 = load float, float* %2326, align 8
  %2328 = bitcast %"class.tflite::RuntimeShape"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2328) #16
  %2329 = icmp eq %struct.TfLiteTensor* %68, null
  br i1 %2329, label %2330, label %2332

2330:                                             ; preds = %2322
  %2331 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 0, i32* %2331, align 8, !alias.scope !167
  br label %2360

2332:                                             ; preds = %2322
  %2333 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 2
  %2334 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2333, align 8, !noalias !167
  %2335 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2334, i64 0, i32 0
  %2336 = load i32, i32* %2335, align 4, !noalias !167
  %2337 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2334, i64 0, i32 1, i64 0
  %2338 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 %2336, i32* %2338, align 8, !alias.scope !167
  %2339 = icmp sgt i32 %2336, 5
  br i1 %2339, label %2340, label %2347

2340:                                             ; preds = %2332
  %2341 = sext i32 %2336 to i64
  %2342 = shl nsw i64 %2341, 2
  %2343 = tail call i8* @_Znam(i64 %2342) #15, !noalias !167
  %2344 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %2345 = bitcast i32** %2344 to i8**
  store i8* %2343, i8** %2345, align 8, !alias.scope !167
  %2346 = bitcast i8* %2343 to i32*
  br label %2352

2347:                                             ; preds = %2332
  %2348 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  %2349 = bitcast %union.anon* %2348 to i32*
  %2350 = sext i32 %2336 to i64
  %2351 = shl nsw i64 %2350, 2
  br label %2352

2352:                                             ; preds = %2347, %2340
  %2353 = phi i64 [ %2342, %2340 ], [ %2351, %2347 ]
  %2354 = phi i32* [ %2346, %2340 ], [ %2349, %2347 ]
  %2355 = bitcast i32* %2354 to i8*
  %2356 = bitcast i32* %2337 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2355, i8* align 4 %2356, i64 %2353, i1 false) #16
  %2357 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 1
  %2358 = bitcast %union.TfLitePtrUnion* %2357 to i8**
  %2359 = load i8*, i8** %2358, align 8
  br label %2360

2360:                                             ; preds = %2330, %2352
  %2361 = phi i8* [ %2359, %2352 ], [ null, %2330 ]
  %2362 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 3, i32 1
  %2363 = load i32, i32* %2362, align 4
  %2364 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 3, i32 0
  %2365 = load float, float* %2364, align 8
  call void @_ZN6tflite13reference_ops4MeanERKNS_10MeanParamsERKNS_12RuntimeShapeEPKhifS6_Phif(%"struct.tflite::MeanParams"* nonnull dereferenceable(10) %20, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %22, i8* %2323, i32 %2325, float %2327, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %23, i8* %2361, i32 %2363, float %2365)
  %2366 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  %2367 = load i32, i32* %2366, align 8
  %2368 = icmp sgt i32 %2367, 5
  br i1 %2368, label %2369, label %2375

2369:                                             ; preds = %2360
  %2370 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %2371 = load i32*, i32** %2370, align 8
  %2372 = icmp eq i32* %2371, null
  br i1 %2372, label %2375, label %2373

2373:                                             ; preds = %2369
  %2374 = bitcast i32* %2371 to i8*
  call void @_ZdaPv(i8* %2374) #15
  br label %2375

2375:                                             ; preds = %2360, %2369, %2373
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2328) #16
  %2376 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  %2377 = load i32, i32* %2376, align 8
  %2378 = icmp sgt i32 %2377, 5
  br i1 %2378, label %2379, label %2385

2379:                                             ; preds = %2375
  %2380 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %2381 = load i32*, i32** %2380, align 8
  %2382 = icmp eq i32* %2381, null
  br i1 %2382, label %2385, label %2383

2383:                                             ; preds = %2379
  %2384 = bitcast i32* %2381 to i8*
  call void @_ZdaPv(i8* %2384) #15
  br label %2385

2385:                                             ; preds = %2375, %2379, %2383
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2309) #16
  br label %2508

2386:                                             ; preds = %2297, %2300, %2285, %2304, %2289
  %2387 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 3, i32 1
  %2388 = load i32, i32* %2387, align 4
  %2389 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 3, i32 1
  %2390 = load i32, i32* %2389, align 4
  %2391 = icmp eq i32 %2388, %2390
  br i1 %2391, label %2392, label %2451

2392:                                             ; preds = %2386
  %2393 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 3, i32 0
  %2394 = load float, float* %2393, align 8
  %2395 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 3, i32 0
  %2396 = load float, float* %2395, align 8
  %2397 = fcmp oeq float %2394, %2396
  br i1 %2397, label %2398, label %2451

2398:                                             ; preds = %2392
  %2399 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %2399, label %2404, label %2400

2400:                                             ; preds = %2398
  %2401 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %2402 = bitcast %union.TfLitePtrUnion* %2401 to i8**
  %2403 = load i8*, i8** %2402, align 8
  br label %2404

2404:                                             ; preds = %2398, %2400
  %2405 = phi i8* [ %2403, %2400 ], [ null, %2398 ]
  %2406 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 2
  %2407 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2406, align 8
  %2408 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2407, i64 0, i32 1, i64 0
  %2409 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2407, i64 0, i32 0
  %2410 = load i32, i32* %2409, align 4
  %2411 = icmp eq %struct.TfLiteTensor* %68, null
  br i1 %2411, label %2416, label %2412

2412:                                             ; preds = %2404
  %2413 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 1
  %2414 = bitcast %union.TfLitePtrUnion* %2413 to i8**
  %2415 = load i8*, i8** %2414, align 8
  br label %2416

2416:                                             ; preds = %2404, %2412
  %2417 = phi i8* [ %2415, %2412 ], [ null, %2404 ]
  %2418 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 2
  %2419 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2418, align 8
  %2420 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2419, i64 0, i32 1, i64 0
  %2421 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2419, i64 0, i32 0
  %2422 = load i32, i32* %2421, align 4
  br i1 %2130, label %2426, label %2423

2423:                                             ; preds = %2416
  %2424 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 1, i32 0
  %2425 = load i32*, i32** %2424, align 8
  br label %2426

2426:                                             ; preds = %2416, %2423
  %2427 = phi i32* [ %2425, %2423 ], [ null, %2416 ]
  %2428 = icmp ne i8 %2287, 0
  %2429 = icmp eq %struct.TfLiteTensor* %160, null
  br i1 %2429, label %2433, label %2430

2430:                                             ; preds = %2426
  %2431 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %160, i64 0, i32 1, i32 0
  %2432 = load i32*, i32** %2431, align 8
  br label %2433

2433:                                             ; preds = %2426, %2430
  %2434 = phi i32* [ %2432, %2430 ], [ null, %2426 ]
  %2435 = icmp eq %struct.TfLiteTensor* %170, null
  br i1 %2435, label %2439, label %2436

2436:                                             ; preds = %2433
  %2437 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %170, i64 0, i32 1, i32 0
  %2438 = load i32*, i32** %2437, align 8
  br label %2439

2439:                                             ; preds = %2433, %2436
  %2440 = phi i32* [ %2438, %2436 ], [ null, %2433 ]
  %2441 = icmp eq %struct.TfLiteTensor* %180, null
  br i1 %2441, label %2445, label %2442

2442:                                             ; preds = %2439
  %2443 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %180, i64 0, i32 1, i32 0
  %2444 = load i32*, i32** %2443, align 8
  br label %2445

2445:                                             ; preds = %2439, %2442
  %2446 = phi i32* [ %2444, %2442 ], [ null, %2439 ]
  %2447 = tail call zeroext i1 @_ZN6tflite13reference_ops4MeanIhiEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_(i8* %2405, i32* %2408, i32 %2410, i8* %2417, i32* %2420, i32 %2422, i32* %2427, i32 %148, i1 zeroext %2428, i32* %2434, i32* %2440, i32* %2446)
  br i1 %2447, label %2508, label %2448

2448:                                             ; preds = %2445
  %2449 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %2450 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %2449, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %2450(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 480, i8* getelementptr inbounds ([402 x i8], [402 x i8]* @.str.37, i64 0, i64 0)) #16
  br label %2509

2451:                                             ; preds = %2386, %2392
  %2452 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %2452, label %2457, label %2453

2453:                                             ; preds = %2451
  %2454 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %2455 = bitcast %union.TfLitePtrUnion* %2454 to i8**
  %2456 = load i8*, i8** %2455, align 8
  br label %2457

2457:                                             ; preds = %2451, %2453
  %2458 = phi i8* [ %2456, %2453 ], [ null, %2451 ]
  %2459 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 3, i32 0
  %2460 = load float, float* %2459, align 8
  %2461 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 2
  %2462 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2461, align 8
  %2463 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2462, i64 0, i32 1, i64 0
  %2464 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2462, i64 0, i32 0
  %2465 = load i32, i32* %2464, align 4
  %2466 = icmp eq %struct.TfLiteTensor* %68, null
  br i1 %2466, label %2471, label %2467

2467:                                             ; preds = %2457
  %2468 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 1
  %2469 = bitcast %union.TfLitePtrUnion* %2468 to i8**
  %2470 = load i8*, i8** %2469, align 8
  br label %2471

2471:                                             ; preds = %2457, %2467
  %2472 = phi i8* [ %2470, %2467 ], [ null, %2457 ]
  %2473 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 3, i32 0
  %2474 = load float, float* %2473, align 8
  %2475 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 0, i32 2
  %2476 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2475, align 8
  %2477 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2476, i64 0, i32 1, i64 0
  %2478 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2476, i64 0, i32 0
  %2479 = load i32, i32* %2478, align 4
  br i1 %2130, label %2483, label %2480

2480:                                             ; preds = %2471
  %2481 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 1, i32 0
  %2482 = load i32*, i32** %2481, align 8
  br label %2483

2483:                                             ; preds = %2471, %2480
  %2484 = phi i32* [ %2482, %2480 ], [ null, %2471 ]
  %2485 = icmp ne i8 %2287, 0
  %2486 = icmp eq %struct.TfLiteTensor* %160, null
  br i1 %2486, label %2490, label %2487

2487:                                             ; preds = %2483
  %2488 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %160, i64 0, i32 1, i32 0
  %2489 = load i32*, i32** %2488, align 8
  br label %2490

2490:                                             ; preds = %2483, %2487
  %2491 = phi i32* [ %2489, %2487 ], [ null, %2483 ]
  %2492 = icmp eq %struct.TfLiteTensor* %170, null
  br i1 %2492, label %2496, label %2493

2493:                                             ; preds = %2490
  %2494 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %170, i64 0, i32 1, i32 0
  %2495 = load i32*, i32** %2494, align 8
  br label %2496

2496:                                             ; preds = %2490, %2493
  %2497 = phi i32* [ %2495, %2493 ], [ null, %2490 ]
  %2498 = icmp eq %struct.TfLiteTensor* %180, null
  br i1 %2498, label %2502, label %2499

2499:                                             ; preds = %2496
  %2500 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %180, i64 0, i32 1, i32 0
  %2501 = load i32*, i32** %2500, align 8
  br label %2502

2502:                                             ; preds = %2496, %2499
  %2503 = phi i32* [ %2501, %2499 ], [ null, %2496 ]
  %2504 = tail call zeroext i1 @_ZN6tflite13reference_ops18QuantizedMeanOrSumIhiEEbPKT_ifPKiiPS2_ifS6_iS6_ibPiS8_PT0_b(i8* %2458, i32 %2388, float %2460, i32* %2463, i32 %2465, i8* %2472, i32 %2390, float %2474, i32* %2477, i32 %2479, i32* %2484, i32 %148, i1 zeroext %2485, i32* %2491, i32* %2497, i32* %2503, i1 zeroext false)
  br i1 %2504, label %2508, label %2505

2505:                                             ; preds = %2502
  %2506 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %2507 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %2506, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %2507(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 496, i8* getelementptr inbounds ([565 x i8], [565 x i8]* @.str.38, i64 0, i64 0)) #16
  br label %2509

2508:                                             ; preds = %2445, %2502, %2385
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %2128) #16
  br label %2510

2509:                                             ; preds = %2505, %2448
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %2128) #16
  br label %2510

2510:                                             ; preds = %1680, %1737, %1627, %2125, %2508, %2509, %2126, %1628, %879, %619, %883, %351, %269, %262, %1740, %1683
  %2511 = phi i32 [ 1, %2509 ], [ 1, %2126 ], [ 1, %1740 ], [ 1, %1683 ], [ 1, %1628 ], [ 0, %879 ], [ 0, %619 ], [ %355, %351 ], [ %270, %269 ], [ %267, %262 ], [ 1, %883 ], [ 0, %2508 ], [ 0, %2125 ], [ 0, %1627 ], [ 0, %1737 ], [ 0, %1680 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #16
  ret i32 %2511
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin17Register_MEAN_REFEv() local_unnamed_addr #7 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin17Register_MEAN_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin6reduce8EvalMeanILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #8 comdat {
  %3 = alloca %"struct.tflite::ops::builtin::reduce::OpContext", align 8
  %4 = alloca %"struct.tflite::MeanParams", align 2
  %5 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 0
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"struct.tflite::MeanParams", align 2
  %9 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 0
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"struct.tflite::MeanParams", align 2
  %13 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 0
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = bitcast %"struct.tflite::ops::builtin::reduce::OpContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 2
  %19 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 3
  %20 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %21 = bitcast i8** %20 to i64*
  %22 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 1
  %23 = bitcast %struct.TfLiteTensor** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  %24 = load i64, i64* %21, align 8
  %25 = bitcast %"struct.tflite::ops::builtin::reduce::OpContext"* %3 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %27 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %26, align 8
  %28 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %27, i64 0, i32 1, i64 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %29, 0
  %31 = inttoptr i64 %24 to %struct.TfLiteReducerParams*
  br i1 %30, label %37, label %32

32:                                               ; preds = %2
  %33 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %34 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %33, align 8
  %35 = sext i32 %29 to i64
  %36 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 %35
  br label %37

37:                                               ; preds = %32, %2
  %38 = phi %struct.TfLiteTensor* [ %36, %32 ], [ null, %2 ]
  store %struct.TfLiteTensor* %38, %struct.TfLiteTensor** %17, align 8
  %39 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %27, i64 0, i32 1, i64 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %44 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %43, align 8
  %45 = sext i32 %40 to i64
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 %45
  br label %47

47:                                               ; preds = %42, %37
  %48 = phi %struct.TfLiteTensor* [ %46, %42 ], [ null, %37 ]
  store %struct.TfLiteTensor* %48, %struct.TfLiteTensor** %18, align 8
  %49 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %50 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %49, align 8
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %56 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %55, align 8
  %57 = sext i32 %52 to i64
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 %57
  br label %59

59:                                               ; preds = %47, %54
  %60 = phi %struct.TfLiteTensor* [ %58, %54 ], [ null, %47 ]
  store %struct.TfLiteTensor* %60, %struct.TfLiteTensor** %19, align 8
  %61 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %62 = bitcast i8** %61 to %"struct.tflite::ops::builtin::reduce::OpData"**
  %63 = load %"struct.tflite::ops::builtin::reduce::OpData"*, %"struct.tflite::ops::builtin::reduce::OpData"** %62, align 8
  %64 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 2
  %65 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %64, align 8
  %66 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %138

69:                                               ; preds = %59
  %70 = sext i32 %67 to i64
  %71 = add nsw i64 %70, -1
  %72 = and i64 %70, 7
  %73 = icmp ult i64 %71, 7
  br i1 %73, label %122, label %74

74:                                               ; preds = %69
  %75 = sub nsw i64 %70, %72
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i64 [ 0, %74 ], [ %119, %76 ]
  %78 = phi i64 [ 1, %74 ], [ %118, %76 ]
  %79 = phi i64 [ %75, %74 ], [ %120, %76 ]
  %80 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 %77
  %81 = load i32, i32* %80, align 4
  %82 = sext i32 %81 to i64
  %83 = mul nsw i64 %78, %82
  %84 = or i64 %77, 1
  %85 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = sext i32 %86 to i64
  %88 = mul nsw i64 %83, %87
  %89 = or i64 %77, 2
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 %89
  %91 = load i32, i32* %90, align 4
  %92 = sext i32 %91 to i64
  %93 = mul nsw i64 %88, %92
  %94 = or i64 %77, 3
  %95 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = sext i32 %96 to i64
  %98 = mul nsw i64 %93, %97
  %99 = or i64 %77, 4
  %100 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 %99
  %101 = load i32, i32* %100, align 4
  %102 = sext i32 %101 to i64
  %103 = mul nsw i64 %98, %102
  %104 = or i64 %77, 5
  %105 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = sext i32 %106 to i64
  %108 = mul nsw i64 %103, %107
  %109 = or i64 %77, 6
  %110 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = sext i32 %111 to i64
  %113 = mul nsw i64 %108, %112
  %114 = or i64 %77, 7
  %115 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = sext i32 %116 to i64
  %118 = mul nsw i64 %113, %117
  %119 = add nuw nsw i64 %77, 8
  %120 = add i64 %79, -8
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %76

122:                                              ; preds = %76, %69
  %123 = phi i64 [ undef, %69 ], [ %118, %76 ]
  %124 = phi i64 [ 0, %69 ], [ %119, %76 ]
  %125 = phi i64 [ 1, %69 ], [ %118, %76 ]
  %126 = icmp eq i64 %72, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %122, %127
  %128 = phi i64 [ %135, %127 ], [ %124, %122 ]
  %129 = phi i64 [ %134, %127 ], [ %125, %122 ]
  %130 = phi i64 [ %136, %127 ], [ %72, %122 ]
  %131 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 %128
  %132 = load i32, i32* %131, align 4
  %133 = sext i32 %132 to i64
  %134 = mul nsw i64 %129, %133
  %135 = add nuw nsw i64 %128, 1
  %136 = add i64 %130, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !170

138:                                              ; preds = %122, %127, %59
  %139 = phi i64 [ 1, %59 ], [ %123, %122 ], [ %134, %127 ]
  %140 = trunc i64 %139 to i32
  %141 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %142 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %141, align 8
  %143 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %142, i64 0, i32 1, i64 0
  %144 = load i32, i32* %143, align 4
  %145 = icmp slt i32 %144, 0
  br i1 %145, label %151, label %146

146:                                              ; preds = %138
  %147 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %148 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %147, align 8
  %149 = sext i32 %144 to i64
  %150 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %148, i64 %149
  br label %151

151:                                              ; preds = %138, %146
  %152 = phi %struct.TfLiteTensor* [ %150, %146 ], [ null, %138 ]
  %153 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %142, i64 0, i32 1, i64 1
  %154 = load i32, i32* %153, align 4
  %155 = icmp slt i32 %154, 0
  br i1 %155, label %161, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %158 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %157, align 8
  %159 = sext i32 %154 to i64
  %160 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %158, i64 %159
  br label %161

161:                                              ; preds = %151, %156
  %162 = phi %struct.TfLiteTensor* [ %160, %156 ], [ null, %151 ]
  %163 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %142, i64 0, i32 1, i64 2
  %164 = load i32, i32* %163, align 4
  %165 = icmp slt i32 %164, 0
  br i1 %165, label %171, label %166

166:                                              ; preds = %161
  %167 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %168 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %167, align 8
  %169 = sext i32 %164 to i64
  %170 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %168, i64 %169
  br label %171

171:                                              ; preds = %161, %166
  %172 = phi %struct.TfLiteTensor* [ %170, %166 ], [ null, %161 ]
  %173 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 4
  %174 = load i32, i32* %173, align 8
  %175 = icmp eq i32 %174, 4
  br i1 %175, label %176, label %349

176:                                              ; preds = %171
  %177 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #16
  %178 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %64, align 8
  %179 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %178, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = icmp sgt i32 %180, 0
  br i1 %181, label %182, label %254

182:                                              ; preds = %176
  %183 = sext i32 %180 to i64
  %184 = add nsw i64 %183, -1
  %185 = and i64 %183, 7
  %186 = icmp ult i64 %184, 7
  br i1 %186, label %235, label %187

187:                                              ; preds = %182
  %188 = sub nsw i64 %183, %185
  br label %189

189:                                              ; preds = %189, %187
  %190 = phi i64 [ 0, %187 ], [ %232, %189 ]
  %191 = phi i64 [ 1, %187 ], [ %231, %189 ]
  %192 = phi i64 [ %188, %187 ], [ %233, %189 ]
  %193 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %178, i64 0, i32 1, i64 %190
  %194 = load i32, i32* %193, align 4
  %195 = sext i32 %194 to i64
  %196 = mul nsw i64 %191, %195
  %197 = or i64 %190, 1
  %198 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %178, i64 0, i32 1, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = sext i32 %199 to i64
  %201 = mul nsw i64 %196, %200
  %202 = or i64 %190, 2
  %203 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %178, i64 0, i32 1, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = sext i32 %204 to i64
  %206 = mul nsw i64 %201, %205
  %207 = or i64 %190, 3
  %208 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %178, i64 0, i32 1, i64 %207
  %209 = load i32, i32* %208, align 4
  %210 = sext i32 %209 to i64
  %211 = mul nsw i64 %206, %210
  %212 = or i64 %190, 4
  %213 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %178, i64 0, i32 1, i64 %212
  %214 = load i32, i32* %213, align 4
  %215 = sext i32 %214 to i64
  %216 = mul nsw i64 %211, %215
  %217 = or i64 %190, 5
  %218 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %178, i64 0, i32 1, i64 %217
  %219 = load i32, i32* %218, align 4
  %220 = sext i32 %219 to i64
  %221 = mul nsw i64 %216, %220
  %222 = or i64 %190, 6
  %223 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %178, i64 0, i32 1, i64 %222
  %224 = load i32, i32* %223, align 4
  %225 = sext i32 %224 to i64
  %226 = mul nsw i64 %221, %225
  %227 = or i64 %190, 7
  %228 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %178, i64 0, i32 1, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = sext i32 %229 to i64
  %231 = mul nsw i64 %226, %230
  %232 = add nuw nsw i64 %190, 8
  %233 = add i64 %192, -8
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %235, label %189

235:                                              ; preds = %189, %182
  %236 = phi i64 [ undef, %182 ], [ %231, %189 ]
  %237 = phi i64 [ 0, %182 ], [ %232, %189 ]
  %238 = phi i64 [ 1, %182 ], [ %231, %189 ]
  %239 = icmp eq i64 %185, 0
  br i1 %239, label %251, label %240

240:                                              ; preds = %235, %240
  %241 = phi i64 [ %248, %240 ], [ %237, %235 ]
  %242 = phi i64 [ %247, %240 ], [ %238, %235 ]
  %243 = phi i64 [ %249, %240 ], [ %185, %235 ]
  %244 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %178, i64 0, i32 1, i64 %241
  %245 = load i32, i32* %244, align 4
  %246 = sext i32 %245 to i64
  %247 = mul nsw i64 %242, %246
  %248 = add nuw nsw i64 %241, 1
  %249 = add i64 %243, -1
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %240, !llvm.loop !171

251:                                              ; preds = %240, %235
  %252 = phi i64 [ %236, %235 ], [ %247, %240 ]
  %253 = trunc i64 %252 to i32
  br label %254

254:                                              ; preds = %176, %251
  %255 = phi i32 [ 1, %176 ], [ %253, %251 ]
  %256 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %177, i64 0, i32 1, i64 0
  store i32 %255, i32* %256, align 4
  %257 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %258 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %257, align 8
  %259 = tail call i32 %258(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %162, %struct.TfLiteIntArray* %177) #16
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %1977

261:                                              ; preds = %254
  %262 = call i32 @_ZN6tflite3ops7builtin6reduce18ResizeOutputTensorEP13TfLiteContextPNS2_9OpContextE(%struct.TfLiteContext* %0, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3)
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %1977

264:                                              ; preds = %261
  %265 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #16
  %266 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 2
  %267 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %266, align 8
  %268 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %267, i64 0, i32 0
  %269 = load i32, i32* %268, align 4
  %270 = icmp sgt i32 %269, 0
  br i1 %270, label %271, label %343

271:                                              ; preds = %264
  %272 = sext i32 %269 to i64
  %273 = add nsw i64 %272, -1
  %274 = and i64 %272, 7
  %275 = icmp ult i64 %273, 7
  br i1 %275, label %324, label %276

276:                                              ; preds = %271
  %277 = sub nsw i64 %272, %274
  br label %278

278:                                              ; preds = %278, %276
  %279 = phi i64 [ 0, %276 ], [ %321, %278 ]
  %280 = phi i64 [ 1, %276 ], [ %320, %278 ]
  %281 = phi i64 [ %277, %276 ], [ %322, %278 ]
  %282 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %267, i64 0, i32 1, i64 %279
  %283 = load i32, i32* %282, align 4
  %284 = sext i32 %283 to i64
  %285 = mul nsw i64 %280, %284
  %286 = or i64 %279, 1
  %287 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %267, i64 0, i32 1, i64 %286
  %288 = load i32, i32* %287, align 4
  %289 = sext i32 %288 to i64
  %290 = mul nsw i64 %285, %289
  %291 = or i64 %279, 2
  %292 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %267, i64 0, i32 1, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = sext i32 %293 to i64
  %295 = mul nsw i64 %290, %294
  %296 = or i64 %279, 3
  %297 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %267, i64 0, i32 1, i64 %296
  %298 = load i32, i32* %297, align 4
  %299 = sext i32 %298 to i64
  %300 = mul nsw i64 %295, %299
  %301 = or i64 %279, 4
  %302 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %267, i64 0, i32 1, i64 %301
  %303 = load i32, i32* %302, align 4
  %304 = sext i32 %303 to i64
  %305 = mul nsw i64 %300, %304
  %306 = or i64 %279, 5
  %307 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %267, i64 0, i32 1, i64 %306
  %308 = load i32, i32* %307, align 4
  %309 = sext i32 %308 to i64
  %310 = mul nsw i64 %305, %309
  %311 = or i64 %279, 6
  %312 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %267, i64 0, i32 1, i64 %311
  %313 = load i32, i32* %312, align 4
  %314 = sext i32 %313 to i64
  %315 = mul nsw i64 %310, %314
  %316 = or i64 %279, 7
  %317 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %267, i64 0, i32 1, i64 %316
  %318 = load i32, i32* %317, align 4
  %319 = sext i32 %318 to i64
  %320 = mul nsw i64 %315, %319
  %321 = add nuw nsw i64 %279, 8
  %322 = add i64 %281, -8
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %324, label %278

324:                                              ; preds = %278, %271
  %325 = phi i64 [ undef, %271 ], [ %320, %278 ]
  %326 = phi i64 [ 0, %271 ], [ %321, %278 ]
  %327 = phi i64 [ 1, %271 ], [ %320, %278 ]
  %328 = icmp eq i64 %274, 0
  br i1 %328, label %340, label %329

329:                                              ; preds = %324, %329
  %330 = phi i64 [ %337, %329 ], [ %326, %324 ]
  %331 = phi i64 [ %336, %329 ], [ %327, %324 ]
  %332 = phi i64 [ %338, %329 ], [ %274, %324 ]
  %333 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %267, i64 0, i32 1, i64 %330
  %334 = load i32, i32* %333, align 4
  %335 = sext i32 %334 to i64
  %336 = mul nsw i64 %331, %335
  %337 = add nuw nsw i64 %330, 1
  %338 = add i64 %332, -1
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %329, !llvm.loop !172

340:                                              ; preds = %329, %324
  %341 = phi i64 [ %325, %324 ], [ %336, %329 ]
  %342 = trunc i64 %341 to i32
  br label %343

343:                                              ; preds = %264, %340
  %344 = phi i32 [ 1, %264 ], [ %342, %340 ]
  %345 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %265, i64 0, i32 1, i64 0
  store i32 %344, i32* %345, align 4
  %346 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %257, align 8
  %347 = tail call i32 %346(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %172, %struct.TfLiteIntArray* %265) #16
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %349, label %1977

349:                                              ; preds = %343, %171
  %350 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 0
  %351 = load i32, i32* %350, align 8
  switch i32 %351, label %1977 [
    i32 1, label %352
    i32 2, label %1098
    i32 4, label %1153
    i32 9, label %1210
    i32 3, label %1594
  ]

352:                                              ; preds = %349
  %353 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %353) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %353, i8 -86, i64 10, i1 false)
  %354 = trunc i64 %139 to i8
  store i8 %354, i8* %353, align 2
  %355 = icmp eq %struct.TfLiteTensor* %48, null
  br i1 %355, label %360, label %356

356:                                              ; preds = %352
  %357 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 1, i32 0
  %358 = load i32*, i32** %357, align 8
  %359 = bitcast i32* %358 to i8*
  br label %360

360:                                              ; preds = %352, %356
  %361 = phi i8* [ %359, %356 ], [ null, %352 ]
  %362 = phi i32* [ %358, %356 ], [ null, %352 ]
  %363 = icmp sgt i32 %140, 0
  br i1 %363, label %364, label %420

364:                                              ; preds = %360
  %365 = and i64 %139, 4294967295
  %366 = icmp ult i64 %365, 8
  br i1 %366, label %367, label %387

367:                                              ; preds = %416, %387, %364
  %368 = phi i64 [ 0, %387 ], [ 0, %364 ], [ %399, %416 ]
  %369 = sub i64 %139, %368
  %370 = xor i64 %368, -1
  %371 = add nsw i64 %365, %370
  %372 = and i64 %369, 3
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %384, label %374

374:                                              ; preds = %367, %374
  %375 = phi i64 [ %381, %374 ], [ %368, %367 ]
  %376 = phi i64 [ %382, %374 ], [ %372, %367 ]
  %377 = getelementptr inbounds i32, i32* %362, i64 %375
  %378 = load i32, i32* %377, align 4
  %379 = trunc i32 %378 to i16
  %380 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %375
  store i16 %379, i16* %380, align 2
  %381 = add nuw nsw i64 %375, 1
  %382 = add i64 %376, -1
  %383 = icmp eq i64 %382, 0
  br i1 %383, label %384, label %374, !llvm.loop !173

384:                                              ; preds = %374, %367
  %385 = phi i64 [ %368, %367 ], [ %381, %374 ]
  %386 = icmp ult i64 %371, 3
  br i1 %386, label %418, label %482

387:                                              ; preds = %364
  %388 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 0
  %389 = shl nuw nsw i64 %365, 1
  %390 = add nuw nsw i64 %389, 2
  %391 = getelementptr i8, i8* %5, i64 %390
  %392 = getelementptr i32, i32* %362, i64 %365
  %393 = bitcast i32* %392 to i16*
  %394 = icmp ult i16* %388, %393
  %395 = icmp ult i8* %361, %391
  %396 = and i1 %394, %395
  br i1 %396, label %367, label %397

397:                                              ; preds = %387
  %398 = and i64 %139, 7
  %399 = sub nsw i64 %365, %398
  br label %400

400:                                              ; preds = %400, %397
  %401 = phi i64 [ 0, %397 ], [ %414, %400 ]
  %402 = getelementptr inbounds i32, i32* %362, i64 %401
  %403 = bitcast i32* %402 to <4 x i32>*
  %404 = load <4 x i32>, <4 x i32>* %403, align 4, !alias.scope !174
  %405 = getelementptr inbounds i32, i32* %402, i64 4
  %406 = bitcast i32* %405 to <4 x i32>*
  %407 = load <4 x i32>, <4 x i32>* %406, align 4, !alias.scope !174
  %408 = trunc <4 x i32> %404 to <4 x i16>
  %409 = trunc <4 x i32> %407 to <4 x i16>
  %410 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %401
  %411 = bitcast i16* %410 to <4 x i16>*
  store <4 x i16> %408, <4 x i16>* %411, align 2, !alias.scope !177, !noalias !174
  %412 = getelementptr inbounds i16, i16* %410, i64 4
  %413 = bitcast i16* %412 to <4 x i16>*
  store <4 x i16> %409, <4 x i16>* %413, align 2, !alias.scope !177, !noalias !174
  %414 = add i64 %401, 8
  %415 = icmp eq i64 %414, %399
  br i1 %415, label %416, label %400, !llvm.loop !179

416:                                              ; preds = %400
  %417 = icmp eq i64 %398, 0
  br i1 %417, label %418, label %367

418:                                              ; preds = %384, %482, %416
  %419 = icmp ult i32 %140, 4
  br i1 %419, label %420, label %510

420:                                              ; preds = %360, %418
  %421 = phi i64 [ %139, %418 ], [ 0, %360 ]
  %422 = and i64 %421, 4294967295
  %423 = sub nsw i64 4, %422
  %424 = icmp ult i64 %423, 16
  br i1 %424, label %425, label %427

425:                                              ; preds = %480, %420
  %426 = phi i64 [ %422, %420 ], [ %429, %480 ]
  br label %505

427:                                              ; preds = %420
  %428 = and i64 %423, -16
  %429 = add nsw i64 %422, %428
  %430 = add nsw i64 %428, -16
  %431 = lshr exact i64 %430, 4
  %432 = add nuw nsw i64 %431, 1
  %433 = and i64 %432, 3
  %434 = icmp ult i64 %430, 48
  br i1 %434, label %466, label %435

435:                                              ; preds = %427
  %436 = sub nsw i64 %432, %433
  br label %437

437:                                              ; preds = %437, %435
  %438 = phi i64 [ 0, %435 ], [ %463, %437 ]
  %439 = phi i64 [ %436, %435 ], [ %464, %437 ]
  %440 = add i64 %422, %438
  %441 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %440
  %442 = bitcast i16* %441 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %442, align 2
  %443 = getelementptr inbounds i16, i16* %441, i64 8
  %444 = bitcast i16* %443 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %444, align 2
  %445 = or i64 %438, 16
  %446 = add i64 %422, %445
  %447 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %446
  %448 = bitcast i16* %447 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %448, align 2
  %449 = getelementptr inbounds i16, i16* %447, i64 8
  %450 = bitcast i16* %449 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %450, align 2
  %451 = or i64 %438, 32
  %452 = add i64 %422, %451
  %453 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %452
  %454 = bitcast i16* %453 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %454, align 2
  %455 = getelementptr inbounds i16, i16* %453, i64 8
  %456 = bitcast i16* %455 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %456, align 2
  %457 = or i64 %438, 48
  %458 = add i64 %422, %457
  %459 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %458
  %460 = bitcast i16* %459 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %460, align 2
  %461 = getelementptr inbounds i16, i16* %459, i64 8
  %462 = bitcast i16* %461 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %462, align 2
  %463 = add i64 %438, 64
  %464 = add i64 %439, -4
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %466, label %437, !llvm.loop !180

466:                                              ; preds = %437, %427
  %467 = phi i64 [ 0, %427 ], [ %463, %437 ]
  %468 = icmp eq i64 %433, 0
  br i1 %468, label %480, label %469

469:                                              ; preds = %466, %469
  %470 = phi i64 [ %477, %469 ], [ %467, %466 ]
  %471 = phi i64 [ %478, %469 ], [ %433, %466 ]
  %472 = add i64 %422, %470
  %473 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %472
  %474 = bitcast i16* %473 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %474, align 2
  %475 = getelementptr inbounds i16, i16* %473, i64 8
  %476 = bitcast i16* %475 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %476, align 2
  %477 = add i64 %470, 16
  %478 = add i64 %471, -1
  %479 = icmp eq i64 %478, 0
  br i1 %479, label %480, label %469, !llvm.loop !181

480:                                              ; preds = %469, %466
  %481 = icmp eq i64 %423, %428
  br i1 %481, label %510, label %425

482:                                              ; preds = %384, %482
  %483 = phi i64 [ %503, %482 ], [ %385, %384 ]
  %484 = getelementptr inbounds i32, i32* %362, i64 %483
  %485 = load i32, i32* %484, align 4
  %486 = trunc i32 %485 to i16
  %487 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %483
  store i16 %486, i16* %487, align 2
  %488 = add nuw nsw i64 %483, 1
  %489 = getelementptr inbounds i32, i32* %362, i64 %488
  %490 = load i32, i32* %489, align 4
  %491 = trunc i32 %490 to i16
  %492 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %488
  store i16 %491, i16* %492, align 2
  %493 = add nuw nsw i64 %483, 2
  %494 = getelementptr inbounds i32, i32* %362, i64 %493
  %495 = load i32, i32* %494, align 4
  %496 = trunc i32 %495 to i16
  %497 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %493
  store i16 %496, i16* %497, align 2
  %498 = add nuw nsw i64 %483, 3
  %499 = getelementptr inbounds i32, i32* %362, i64 %498
  %500 = load i32, i32* %499, align 4
  %501 = trunc i32 %500 to i16
  %502 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %498
  store i16 %501, i16* %502, align 2
  %503 = add nuw nsw i64 %483, 4
  %504 = icmp eq i64 %503, %365
  br i1 %504, label %418, label %482, !llvm.loop !182

505:                                              ; preds = %425, %505
  %506 = phi i64 [ %508, %505 ], [ %426, %425 ]
  %507 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 %506
  store i16 1, i16* %507, align 2
  %508 = add nuw nsw i64 %506, 1
  %509 = icmp eq i64 %508, 4
  br i1 %509, label %510, label %505, !llvm.loop !183

510:                                              ; preds = %505, %480, %418
  %511 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %31, i64 0, i32 0
  %512 = load i8, i8* %511, align 1, !range !6
  %513 = icmp eq i8 %512, 0
  br i1 %513, label %603, label %514

514:                                              ; preds = %510
  %515 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 2
  %516 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %515, align 8
  %517 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %516, i64 0, i32 0
  %518 = load i32, i32* %517, align 4
  %519 = icmp eq i32 %518, 4
  %520 = icmp eq i8 %354, 2
  %521 = and i1 %520, %519
  br i1 %521, label %522, label %603

522:                                              ; preds = %514
  %523 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 0
  %524 = load i16, i16* %523, align 2
  switch i16 %524, label %603 [
    i16 1, label %525
    i16 2, label %529
  ]

525:                                              ; preds = %522
  %526 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 1
  %527 = load i16, i16* %526, align 2
  %528 = icmp eq i16 %527, 2
  br i1 %528, label %533, label %603

529:                                              ; preds = %522
  %530 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %4, i64 0, i32 1, i64 1
  %531 = load i16, i16* %530, align 2
  %532 = icmp eq i16 %531, 1
  br i1 %532, label %533, label %603

533:                                              ; preds = %529, %525
  %534 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %534) #16
  %535 = icmp eq %struct.TfLiteTensor* %38, null
  br i1 %535, label %536, label %538

536:                                              ; preds = %533
  %537 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %537, align 8, !alias.scope !184
  br label %547

538:                                              ; preds = %533
  %539 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %516, i64 0, i32 1, i64 0
  %540 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 4, i32* %540, align 8, !alias.scope !184
  %541 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %542 = bitcast %union.anon* %541 to i8*
  %543 = bitcast i32* %539 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %542, i8* align 4 %543, i64 16, i1 false) #16
  %544 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 1
  %545 = bitcast %union.TfLitePtrUnion* %544 to float**
  %546 = load float*, float** %545, align 8
  br label %547

547:                                              ; preds = %536, %538
  %548 = phi float* [ %546, %538 ], [ null, %536 ]
  %549 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %549) #16
  %550 = icmp eq %struct.TfLiteTensor* %60, null
  br i1 %550, label %551, label %553

551:                                              ; preds = %547
  %552 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %552, align 8, !alias.scope !187
  br label %581

553:                                              ; preds = %547
  %554 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 2
  %555 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %554, align 8, !noalias !187
  %556 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %555, i64 0, i32 0
  %557 = load i32, i32* %556, align 4, !noalias !187
  %558 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %555, i64 0, i32 1, i64 0
  %559 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %557, i32* %559, align 8, !alias.scope !187
  %560 = icmp sgt i32 %557, 5
  br i1 %560, label %561, label %568

561:                                              ; preds = %553
  %562 = sext i32 %557 to i64
  %563 = shl nsw i64 %562, 2
  %564 = tail call i8* @_Znam(i64 %563) #15, !noalias !187
  %565 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %566 = bitcast i32** %565 to i8**
  store i8* %564, i8** %566, align 8, !alias.scope !187
  %567 = bitcast i8* %564 to i32*
  br label %573

568:                                              ; preds = %553
  %569 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %570 = bitcast %union.anon* %569 to i32*
  %571 = sext i32 %557 to i64
  %572 = shl nsw i64 %571, 2
  br label %573

573:                                              ; preds = %568, %561
  %574 = phi i64 [ %563, %561 ], [ %572, %568 ]
  %575 = phi i32* [ %567, %561 ], [ %570, %568 ]
  %576 = bitcast i32* %575 to i8*
  %577 = bitcast i32* %558 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %576, i8* align 4 %577, i64 %574, i1 false) #16
  %578 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 1
  %579 = bitcast %union.TfLitePtrUnion* %578 to float**
  %580 = load float*, float** %579, align 8
  br label %581

581:                                              ; preds = %551, %573
  %582 = phi float* [ %580, %573 ], [ null, %551 ]
  call void @_ZN6tflite13reference_ops4MeanIfEEvRKNS_10MeanParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::MeanParams"* nonnull dereferenceable(10) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, float* %548, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, float* %582)
  %583 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %584 = load i32, i32* %583, align 8
  %585 = icmp sgt i32 %584, 5
  br i1 %585, label %586, label %592

586:                                              ; preds = %581
  %587 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %588 = load i32*, i32** %587, align 8
  %589 = icmp eq i32* %588, null
  br i1 %589, label %592, label %590

590:                                              ; preds = %586
  %591 = bitcast i32* %588 to i8*
  call void @_ZdaPv(i8* %591) #15
  br label %592

592:                                              ; preds = %581, %586, %590
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %549) #16
  %593 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %594 = load i32, i32* %593, align 8
  %595 = icmp sgt i32 %594, 5
  br i1 %595, label %596, label %602

596:                                              ; preds = %592
  %597 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %598 = load i32*, i32** %597, align 8
  %599 = icmp eq i32* %598, null
  br i1 %599, label %602, label %600

600:                                              ; preds = %596
  %601 = bitcast i32* %598 to i8*
  call void @_ZdaPv(i8* %601) #15
  br label %602

602:                                              ; preds = %592, %596, %600
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %534) #16
  br label %1094

603:                                              ; preds = %522, %525, %510, %514, %529
  %604 = icmp eq %struct.TfLiteTensor* %38, null
  br i1 %604, label %609, label %605

605:                                              ; preds = %603
  %606 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 1
  %607 = bitcast %union.TfLitePtrUnion* %606 to float**
  %608 = load float*, float** %607, align 8
  br label %609

609:                                              ; preds = %603, %605
  %610 = phi float* [ %608, %605 ], [ null, %603 ]
  %611 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 2
  %612 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %611, align 8
  %613 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %612, i64 0, i32 1, i64 0
  %614 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %612, i64 0, i32 0
  %615 = load i32, i32* %614, align 4
  %616 = icmp eq %struct.TfLiteTensor* %60, null
  br i1 %616, label %621, label %617

617:                                              ; preds = %609
  %618 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 1
  %619 = bitcast %union.TfLitePtrUnion* %618 to float**
  %620 = load float*, float** %619, align 8
  br label %621

621:                                              ; preds = %609, %617
  %622 = phi float* [ %620, %617 ], [ null, %609 ]
  %623 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 2
  %624 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %623, align 8
  %625 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %624, i64 0, i32 1, i64 0
  %626 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %624, i64 0, i32 0
  %627 = load i32, i32* %626, align 4
  br i1 %355, label %631, label %628

628:                                              ; preds = %621
  %629 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 1, i32 0
  %630 = load i32*, i32** %629, align 8
  br label %631

631:                                              ; preds = %621, %628
  %632 = phi i32* [ %630, %628 ], [ null, %621 ]
  %633 = icmp ne i8 %512, 0
  %634 = icmp eq %struct.TfLiteTensor* %152, null
  br i1 %634, label %638, label %635

635:                                              ; preds = %631
  %636 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %152, i64 0, i32 1, i32 0
  %637 = load i32*, i32** %636, align 8
  br label %638

638:                                              ; preds = %631, %635
  %639 = phi i32* [ %637, %635 ], [ null, %631 ]
  %640 = icmp eq %struct.TfLiteTensor* %162, null
  br i1 %640, label %644, label %641

641:                                              ; preds = %638
  %642 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %162, i64 0, i32 1, i32 0
  %643 = load i32*, i32** %642, align 8
  br label %644

644:                                              ; preds = %638, %641
  %645 = phi i32* [ %643, %641 ], [ null, %638 ]
  %646 = icmp eq %struct.TfLiteTensor* %172, null
  br i1 %646, label %651, label %647

647:                                              ; preds = %644
  %648 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %172, i64 0, i32 1
  %649 = bitcast %union.TfLitePtrUnion* %648 to float**
  %650 = load float*, float** %649, align 8
  br label %651

651:                                              ; preds = %644, %647
  %652 = phi float* [ %650, %647 ], [ null, %644 ]
  %653 = icmp eq i32 %140, 1
  br i1 %653, label %654, label %1092

654:                                              ; preds = %651
  %655 = load i32, i32* %632, align 4
  %656 = add i32 %615, -1
  %657 = icmp eq i32 %655, %656
  br i1 %657, label %658, label %1092

658:                                              ; preds = %654
  %659 = icmp sgt i32 %655, 0
  br i1 %659, label %660, label %751

660:                                              ; preds = %658
  %661 = zext i32 %655 to i64
  %662 = icmp ult i32 %655, 8
  br i1 %662, label %663, label %666

663:                                              ; preds = %741, %660
  %664 = phi i64 [ 0, %660 ], [ %667, %741 ]
  %665 = phi i32 [ 1, %660 ], [ %749, %741 ]
  br label %1084

666:                                              ; preds = %660
  %667 = and i64 %661, 4294967288
  %668 = add nsw i64 %667, -8
  %669 = lshr exact i64 %668, 3
  %670 = add nuw nsw i64 %669, 1
  %671 = and i64 %670, 3
  %672 = icmp ult i64 %668, 24
  br i1 %672, label %718, label %673

673:                                              ; preds = %666
  %674 = sub nsw i64 %670, %671
  br label %675

675:                                              ; preds = %675, %673
  %676 = phi i64 [ 0, %673 ], [ %715, %675 ]
  %677 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %673 ], [ %713, %675 ]
  %678 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %673 ], [ %714, %675 ]
  %679 = phi i64 [ %674, %673 ], [ %716, %675 ]
  %680 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %612, i64 0, i32 1, i64 %676
  %681 = bitcast i32* %680 to <4 x i32>*
  %682 = load <4 x i32>, <4 x i32>* %681, align 4
  %683 = getelementptr inbounds i32, i32* %680, i64 4
  %684 = bitcast i32* %683 to <4 x i32>*
  %685 = load <4 x i32>, <4 x i32>* %684, align 4
  %686 = mul nsw <4 x i32> %682, %677
  %687 = mul nsw <4 x i32> %685, %678
  %688 = or i64 %676, 8
  %689 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %612, i64 0, i32 1, i64 %688
  %690 = bitcast i32* %689 to <4 x i32>*
  %691 = load <4 x i32>, <4 x i32>* %690, align 4
  %692 = getelementptr inbounds i32, i32* %689, i64 4
  %693 = bitcast i32* %692 to <4 x i32>*
  %694 = load <4 x i32>, <4 x i32>* %693, align 4
  %695 = mul nsw <4 x i32> %691, %686
  %696 = mul nsw <4 x i32> %694, %687
  %697 = or i64 %676, 16
  %698 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %612, i64 0, i32 1, i64 %697
  %699 = bitcast i32* %698 to <4 x i32>*
  %700 = load <4 x i32>, <4 x i32>* %699, align 4
  %701 = getelementptr inbounds i32, i32* %698, i64 4
  %702 = bitcast i32* %701 to <4 x i32>*
  %703 = load <4 x i32>, <4 x i32>* %702, align 4
  %704 = mul nsw <4 x i32> %700, %695
  %705 = mul nsw <4 x i32> %703, %696
  %706 = or i64 %676, 24
  %707 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %612, i64 0, i32 1, i64 %706
  %708 = bitcast i32* %707 to <4 x i32>*
  %709 = load <4 x i32>, <4 x i32>* %708, align 4
  %710 = getelementptr inbounds i32, i32* %707, i64 4
  %711 = bitcast i32* %710 to <4 x i32>*
  %712 = load <4 x i32>, <4 x i32>* %711, align 4
  %713 = mul nsw <4 x i32> %709, %704
  %714 = mul nsw <4 x i32> %712, %705
  %715 = add i64 %676, 32
  %716 = add i64 %679, -4
  %717 = icmp eq i64 %716, 0
  br i1 %717, label %718, label %675, !llvm.loop !190

718:                                              ; preds = %675, %666
  %719 = phi <4 x i32> [ undef, %666 ], [ %713, %675 ]
  %720 = phi <4 x i32> [ undef, %666 ], [ %714, %675 ]
  %721 = phi i64 [ 0, %666 ], [ %715, %675 ]
  %722 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %666 ], [ %713, %675 ]
  %723 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %666 ], [ %714, %675 ]
  %724 = icmp eq i64 %671, 0
  br i1 %724, label %741, label %725

725:                                              ; preds = %718, %725
  %726 = phi i64 [ %738, %725 ], [ %721, %718 ]
  %727 = phi <4 x i32> [ %736, %725 ], [ %722, %718 ]
  %728 = phi <4 x i32> [ %737, %725 ], [ %723, %718 ]
  %729 = phi i64 [ %739, %725 ], [ %671, %718 ]
  %730 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %612, i64 0, i32 1, i64 %726
  %731 = bitcast i32* %730 to <4 x i32>*
  %732 = load <4 x i32>, <4 x i32>* %731, align 4
  %733 = getelementptr inbounds i32, i32* %730, i64 4
  %734 = bitcast i32* %733 to <4 x i32>*
  %735 = load <4 x i32>, <4 x i32>* %734, align 4
  %736 = mul nsw <4 x i32> %732, %727
  %737 = mul nsw <4 x i32> %735, %728
  %738 = add i64 %726, 8
  %739 = add i64 %729, -1
  %740 = icmp eq i64 %739, 0
  br i1 %740, label %741, label %725, !llvm.loop !191

741:                                              ; preds = %725, %718
  %742 = phi <4 x i32> [ %719, %718 ], [ %736, %725 ]
  %743 = phi <4 x i32> [ %720, %718 ], [ %737, %725 ]
  %744 = mul <4 x i32> %743, %742
  %745 = shufflevector <4 x i32> %744, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %746 = mul <4 x i32> %744, %745
  %747 = shufflevector <4 x i32> %746, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %748 = mul <4 x i32> %746, %747
  %749 = extractelement <4 x i32> %748, i32 0
  %750 = icmp eq i64 %667, %661
  br i1 %750, label %751, label %663

751:                                              ; preds = %1084, %741, %658
  %752 = phi i32 [ 1, %658 ], [ %749, %741 ], [ %1089, %1084 ]
  %753 = sext i32 %655 to i64
  %754 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %612, i64 0, i32 1, i64 %753
  %755 = load i32, i32* %754, align 4
  %756 = sext i32 %755 to i64
  %757 = sext i32 %752 to i64
  %758 = sitofp i32 %755 to float
  %759 = icmp sgt i32 %752, 0
  br i1 %759, label %760, label %1094

760:                                              ; preds = %751
  %761 = icmp eq i32 %755, 0
  %762 = icmp sgt i32 %755, 1
  %763 = add nsw i64 %756, -1
  %764 = add nsw i64 %756, -2
  %765 = and i64 %763, 7
  %766 = icmp ult i64 %764, 7
  %767 = sub nsw i64 %763, %765
  %768 = icmp eq i64 %765, 0
  br label %769

769:                                              ; preds = %1079, %760
  %770 = phi i64 [ %1082, %1079 ], [ 0, %760 ]
  %771 = getelementptr inbounds float, float* %622, i64 %770
  %772 = mul nsw i64 %770, %756
  %773 = getelementptr inbounds float, float* %610, i64 %772
  %774 = ptrtoint float* %773 to i64
  br i1 %761, label %1079, label %775

775:                                              ; preds = %769
  %776 = and i64 %774, 3
  %777 = icmp eq i64 %776, 0
  br i1 %777, label %778, label %784

778:                                              ; preds = %775
  %779 = lshr i64 %774, 2
  %780 = sub nsw i64 0, %779
  %781 = and i64 %780, 3
  %782 = icmp slt i64 %781, %756
  %783 = select i1 %782, i64 %781, i64 %756
  br label %784

784:                                              ; preds = %778, %775
  %785 = phi i64 [ %783, %778 ], [ %756, %775 ]
  %786 = sub nsw i64 %756, %785
  %787 = sdiv i64 %786, 8
  %788 = shl nsw i64 %787, 3
  %789 = sdiv i64 %786, 4
  %790 = shl nsw i64 %789, 2
  %791 = add nsw i64 %788, %785
  %792 = add nsw i64 %790, %785
  %793 = add nsw i64 %786, 3
  %794 = icmp ugt i64 %793, 6
  br i1 %794, label %795, label %1024

795:                                              ; preds = %784
  %796 = getelementptr inbounds float, float* %773, i64 %785
  %797 = bitcast float* %796 to <4 x float>*
  %798 = load <4 x float>, <4 x float>* %797, align 1
  %799 = icmp sgt i64 %786, 7
  br i1 %799, label %800, label %895

800:                                              ; preds = %795
  %801 = add nsw i64 %785, 4
  %802 = getelementptr inbounds float, float* %773, i64 %801
  %803 = bitcast float* %802 to <4 x float>*
  %804 = load <4 x float>, <4 x float>* %803, align 1
  %805 = add nsw i64 %785, 8
  %806 = icmp slt i64 %805, %791
  br i1 %806, label %807, label %839

807:                                              ; preds = %800
  %808 = add nsw i64 %788, -9
  %809 = lshr i64 %808, 3
  %810 = add nuw nsw i64 %809, 1
  %811 = and i64 %810, 3
  %812 = icmp eq i64 %811, 0
  br i1 %812, label %831, label %813

813:                                              ; preds = %807, %813
  %814 = phi i64 [ %828, %813 ], [ %805, %807 ]
  %815 = phi i64 [ %814, %813 ], [ %785, %807 ]
  %816 = phi <4 x float> [ %822, %813 ], [ %798, %807 ]
  %817 = phi <4 x float> [ %827, %813 ], [ %804, %807 ]
  %818 = phi i64 [ %829, %813 ], [ %811, %807 ]
  %819 = getelementptr inbounds float, float* %773, i64 %814
  %820 = bitcast float* %819 to <4 x float>*
  %821 = load <4 x float>, <4 x float>* %820, align 1
  %822 = fadd <4 x float> %816, %821
  %823 = add nsw i64 %815, 12
  %824 = getelementptr inbounds float, float* %773, i64 %823
  %825 = bitcast float* %824 to <4 x float>*
  %826 = load <4 x float>, <4 x float>* %825, align 1
  %827 = fadd <4 x float> %817, %826
  %828 = add nsw i64 %814, 8
  %829 = add i64 %818, -1
  %830 = icmp eq i64 %829, 0
  br i1 %830, label %831, label %813, !llvm.loop !192

831:                                              ; preds = %813, %807
  %832 = phi i64 [ %805, %807 ], [ %828, %813 ]
  %833 = phi i64 [ %785, %807 ], [ %814, %813 ]
  %834 = phi <4 x float> [ %798, %807 ], [ %822, %813 ]
  %835 = phi <4 x float> [ %804, %807 ], [ %827, %813 ]
  %836 = phi <4 x float> [ undef, %807 ], [ %822, %813 ]
  %837 = phi <4 x float> [ undef, %807 ], [ %827, %813 ]
  %838 = icmp ult i64 %808, 24
  br i1 %838, label %839, label %844

839:                                              ; preds = %831, %844, %800
  %840 = phi <4 x float> [ %804, %800 ], [ %837, %831 ], [ %887, %844 ]
  %841 = phi <4 x float> [ %798, %800 ], [ %836, %831 ], [ %882, %844 ]
  %842 = fadd <4 x float> %840, %841
  %843 = icmp sgt i64 %792, %791
  br i1 %843, label %890, label %895

844:                                              ; preds = %831, %844
  %845 = phi i64 [ %888, %844 ], [ %832, %831 ]
  %846 = phi i64 [ %878, %844 ], [ %833, %831 ]
  %847 = phi <4 x float> [ %882, %844 ], [ %834, %831 ]
  %848 = phi <4 x float> [ %887, %844 ], [ %835, %831 ]
  %849 = getelementptr inbounds float, float* %773, i64 %845
  %850 = bitcast float* %849 to <4 x float>*
  %851 = load <4 x float>, <4 x float>* %850, align 1
  %852 = fadd <4 x float> %847, %851
  %853 = add nsw i64 %846, 12
  %854 = getelementptr inbounds float, float* %773, i64 %853
  %855 = bitcast float* %854 to <4 x float>*
  %856 = load <4 x float>, <4 x float>* %855, align 1
  %857 = fadd <4 x float> %848, %856
  %858 = add nsw i64 %845, 8
  %859 = getelementptr inbounds float, float* %773, i64 %858
  %860 = bitcast float* %859 to <4 x float>*
  %861 = load <4 x float>, <4 x float>* %860, align 1
  %862 = fadd <4 x float> %852, %861
  %863 = add nsw i64 %845, 12
  %864 = getelementptr inbounds float, float* %773, i64 %863
  %865 = bitcast float* %864 to <4 x float>*
  %866 = load <4 x float>, <4 x float>* %865, align 1
  %867 = fadd <4 x float> %857, %866
  %868 = add nsw i64 %845, 16
  %869 = getelementptr inbounds float, float* %773, i64 %868
  %870 = bitcast float* %869 to <4 x float>*
  %871 = load <4 x float>, <4 x float>* %870, align 1
  %872 = fadd <4 x float> %862, %871
  %873 = add nsw i64 %845, 20
  %874 = getelementptr inbounds float, float* %773, i64 %873
  %875 = bitcast float* %874 to <4 x float>*
  %876 = load <4 x float>, <4 x float>* %875, align 1
  %877 = fadd <4 x float> %867, %876
  %878 = add nsw i64 %845, 24
  %879 = getelementptr inbounds float, float* %773, i64 %878
  %880 = bitcast float* %879 to <4 x float>*
  %881 = load <4 x float>, <4 x float>* %880, align 1
  %882 = fadd <4 x float> %872, %881
  %883 = add nsw i64 %845, 28
  %884 = getelementptr inbounds float, float* %773, i64 %883
  %885 = bitcast float* %884 to <4 x float>*
  %886 = load <4 x float>, <4 x float>* %885, align 1
  %887 = fadd <4 x float> %877, %886
  %888 = add nsw i64 %845, 32
  %889 = icmp slt i64 %888, %791
  br i1 %889, label %844, label %839

890:                                              ; preds = %839
  %891 = getelementptr inbounds float, float* %773, i64 %791
  %892 = bitcast float* %891 to <4 x float>*
  %893 = load <4 x float>, <4 x float>* %892, align 1
  %894 = fadd <4 x float> %842, %893
  br label %895

895:                                              ; preds = %890, %839, %795
  %896 = phi <4 x float> [ %798, %795 ], [ %894, %890 ], [ %842, %839 ]
  %897 = shufflevector <4 x float> %896, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 2, i32 3>
  %898 = fadd <4 x float> %896, %897
  %899 = extractelement <4 x float> %898, i32 1
  %900 = extractelement <4 x float> %898, i32 0
  %901 = fadd float %900, %899
  %902 = icmp sgt i64 %785, 0
  br i1 %902, label %903, label %924

903:                                              ; preds = %895
  %904 = add nsw i64 %785, -1
  %905 = and i64 %785, 7
  %906 = icmp ult i64 %904, 7
  br i1 %906, label %909, label %907

907:                                              ; preds = %903
  %908 = sub nsw i64 %785, %905
  br label %950

909:                                              ; preds = %950, %903
  %910 = phi float [ undef, %903 ], [ %984, %950 ]
  %911 = phi i64 [ 0, %903 ], [ %985, %950 ]
  %912 = phi float [ %901, %903 ], [ %984, %950 ]
  %913 = icmp eq i64 %905, 0
  br i1 %913, label %924, label %914

914:                                              ; preds = %909, %914
  %915 = phi i64 [ %921, %914 ], [ %911, %909 ]
  %916 = phi float [ %920, %914 ], [ %912, %909 ]
  %917 = phi i64 [ %922, %914 ], [ %905, %909 ]
  %918 = getelementptr inbounds float, float* %773, i64 %915
  %919 = load float, float* %918, align 4
  %920 = fadd float %916, %919
  %921 = add nuw nsw i64 %915, 1
  %922 = add i64 %917, -1
  %923 = icmp eq i64 %922, 0
  br i1 %923, label %924, label %914, !llvm.loop !193

924:                                              ; preds = %909, %914, %895
  %925 = phi float [ %901, %895 ], [ %910, %909 ], [ %920, %914 ]
  %926 = icmp slt i64 %792, %756
  br i1 %926, label %927, label %1079

927:                                              ; preds = %924
  %928 = sub nsw i64 %756, %785
  %929 = sub nsw i64 %928, %790
  %930 = xor i64 %785, -1
  %931 = add nsw i64 %930, %756
  %932 = sub nsw i64 %931, %790
  %933 = and i64 %929, 7
  %934 = icmp eq i64 %933, 0
  br i1 %934, label %945, label %935

935:                                              ; preds = %927, %935
  %936 = phi i64 [ %942, %935 ], [ %792, %927 ]
  %937 = phi float [ %941, %935 ], [ %925, %927 ]
  %938 = phi i64 [ %943, %935 ], [ %933, %927 ]
  %939 = getelementptr inbounds float, float* %773, i64 %936
  %940 = load float, float* %939, align 4
  %941 = fadd float %937, %940
  %942 = add nsw i64 %936, 1
  %943 = add i64 %938, -1
  %944 = icmp eq i64 %943, 0
  br i1 %944, label %945, label %935, !llvm.loop !194

945:                                              ; preds = %935, %927
  %946 = phi float [ undef, %927 ], [ %941, %935 ]
  %947 = phi i64 [ %792, %927 ], [ %942, %935 ]
  %948 = phi float [ %925, %927 ], [ %941, %935 ]
  %949 = icmp ult i64 %932, 7
  br i1 %949, label %1079, label %988

950:                                              ; preds = %950, %907
  %951 = phi i64 [ 0, %907 ], [ %985, %950 ]
  %952 = phi float [ %901, %907 ], [ %984, %950 ]
  %953 = phi i64 [ %908, %907 ], [ %986, %950 ]
  %954 = getelementptr inbounds float, float* %773, i64 %951
  %955 = load float, float* %954, align 4
  %956 = fadd float %952, %955
  %957 = or i64 %951, 1
  %958 = getelementptr inbounds float, float* %773, i64 %957
  %959 = load float, float* %958, align 4
  %960 = fadd float %956, %959
  %961 = or i64 %951, 2
  %962 = getelementptr inbounds float, float* %773, i64 %961
  %963 = load float, float* %962, align 4
  %964 = fadd float %960, %963
  %965 = or i64 %951, 3
  %966 = getelementptr inbounds float, float* %773, i64 %965
  %967 = load float, float* %966, align 4
  %968 = fadd float %964, %967
  %969 = or i64 %951, 4
  %970 = getelementptr inbounds float, float* %773, i64 %969
  %971 = load float, float* %970, align 4
  %972 = fadd float %968, %971
  %973 = or i64 %951, 5
  %974 = getelementptr inbounds float, float* %773, i64 %973
  %975 = load float, float* %974, align 4
  %976 = fadd float %972, %975
  %977 = or i64 %951, 6
  %978 = getelementptr inbounds float, float* %773, i64 %977
  %979 = load float, float* %978, align 4
  %980 = fadd float %976, %979
  %981 = or i64 %951, 7
  %982 = getelementptr inbounds float, float* %773, i64 %981
  %983 = load float, float* %982, align 4
  %984 = fadd float %980, %983
  %985 = add nuw nsw i64 %951, 8
  %986 = add i64 %953, -8
  %987 = icmp eq i64 %986, 0
  br i1 %987, label %909, label %950

988:                                              ; preds = %945, %988
  %989 = phi i64 [ %1022, %988 ], [ %947, %945 ]
  %990 = phi float [ %1021, %988 ], [ %948, %945 ]
  %991 = getelementptr inbounds float, float* %773, i64 %989
  %992 = load float, float* %991, align 4
  %993 = fadd float %990, %992
  %994 = add nsw i64 %989, 1
  %995 = getelementptr inbounds float, float* %773, i64 %994
  %996 = load float, float* %995, align 4
  %997 = fadd float %993, %996
  %998 = add nsw i64 %989, 2
  %999 = getelementptr inbounds float, float* %773, i64 %998
  %1000 = load float, float* %999, align 4
  %1001 = fadd float %997, %1000
  %1002 = add nsw i64 %989, 3
  %1003 = getelementptr inbounds float, float* %773, i64 %1002
  %1004 = load float, float* %1003, align 4
  %1005 = fadd float %1001, %1004
  %1006 = add nsw i64 %989, 4
  %1007 = getelementptr inbounds float, float* %773, i64 %1006
  %1008 = load float, float* %1007, align 4
  %1009 = fadd float %1005, %1008
  %1010 = add nsw i64 %989, 5
  %1011 = getelementptr inbounds float, float* %773, i64 %1010
  %1012 = load float, float* %1011, align 4
  %1013 = fadd float %1009, %1012
  %1014 = add nsw i64 %989, 6
  %1015 = getelementptr inbounds float, float* %773, i64 %1014
  %1016 = load float, float* %1015, align 4
  %1017 = fadd float %1013, %1016
  %1018 = add nsw i64 %989, 7
  %1019 = getelementptr inbounds float, float* %773, i64 %1018
  %1020 = load float, float* %1019, align 4
  %1021 = fadd float %1017, %1020
  %1022 = add nsw i64 %989, 8
  %1023 = icmp eq i64 %1022, %756
  br i1 %1023, label %1079, label %988

1024:                                             ; preds = %784
  %1025 = load float, float* %773, align 4
  br i1 %762, label %1026, label %1079

1026:                                             ; preds = %1024
  br i1 %766, label %1065, label %1027

1027:                                             ; preds = %1026, %1027
  %1028 = phi i64 [ %1062, %1027 ], [ 1, %1026 ]
  %1029 = phi float [ %1061, %1027 ], [ %1025, %1026 ]
  %1030 = phi i64 [ %1063, %1027 ], [ %767, %1026 ]
  %1031 = getelementptr inbounds float, float* %773, i64 %1028
  %1032 = load float, float* %1031, align 4
  %1033 = fadd float %1029, %1032
  %1034 = add nuw nsw i64 %1028, 1
  %1035 = getelementptr inbounds float, float* %773, i64 %1034
  %1036 = load float, float* %1035, align 4
  %1037 = fadd float %1033, %1036
  %1038 = add nuw nsw i64 %1028, 2
  %1039 = getelementptr inbounds float, float* %773, i64 %1038
  %1040 = load float, float* %1039, align 4
  %1041 = fadd float %1037, %1040
  %1042 = add nuw nsw i64 %1028, 3
  %1043 = getelementptr inbounds float, float* %773, i64 %1042
  %1044 = load float, float* %1043, align 4
  %1045 = fadd float %1041, %1044
  %1046 = add nuw nsw i64 %1028, 4
  %1047 = getelementptr inbounds float, float* %773, i64 %1046
  %1048 = load float, float* %1047, align 4
  %1049 = fadd float %1045, %1048
  %1050 = add nuw nsw i64 %1028, 5
  %1051 = getelementptr inbounds float, float* %773, i64 %1050
  %1052 = load float, float* %1051, align 4
  %1053 = fadd float %1049, %1052
  %1054 = add nuw nsw i64 %1028, 6
  %1055 = getelementptr inbounds float, float* %773, i64 %1054
  %1056 = load float, float* %1055, align 4
  %1057 = fadd float %1053, %1056
  %1058 = add nuw nsw i64 %1028, 7
  %1059 = getelementptr inbounds float, float* %773, i64 %1058
  %1060 = load float, float* %1059, align 4
  %1061 = fadd float %1057, %1060
  %1062 = add nuw nsw i64 %1028, 8
  %1063 = add i64 %1030, -8
  %1064 = icmp eq i64 %1063, 0
  br i1 %1064, label %1065, label %1027

1065:                                             ; preds = %1027, %1026
  %1066 = phi float [ undef, %1026 ], [ %1061, %1027 ]
  %1067 = phi i64 [ 1, %1026 ], [ %1062, %1027 ]
  %1068 = phi float [ %1025, %1026 ], [ %1061, %1027 ]
  br i1 %768, label %1079, label %1069

1069:                                             ; preds = %1065, %1069
  %1070 = phi i64 [ %1076, %1069 ], [ %1067, %1065 ]
  %1071 = phi float [ %1075, %1069 ], [ %1068, %1065 ]
  %1072 = phi i64 [ %1077, %1069 ], [ %765, %1065 ]
  %1073 = getelementptr inbounds float, float* %773, i64 %1070
  %1074 = load float, float* %1073, align 4
  %1075 = fadd float %1071, %1074
  %1076 = add nuw nsw i64 %1070, 1
  %1077 = add i64 %1072, -1
  %1078 = icmp eq i64 %1077, 0
  br i1 %1078, label %1079, label %1069, !llvm.loop !195

1079:                                             ; preds = %1065, %1069, %945, %988, %1024, %924, %769
  %1080 = phi float [ 0.000000e+00, %769 ], [ %925, %924 ], [ %1025, %1024 ], [ %946, %945 ], [ %1021, %988 ], [ %1066, %1065 ], [ %1075, %1069 ]
  %1081 = fdiv float %1080, %758
  store float %1081, float* %771, align 4
  %1082 = add nuw nsw i64 %770, 1
  %1083 = icmp eq i64 %1082, %757
  br i1 %1083, label %1094, label %769

1084:                                             ; preds = %663, %1084
  %1085 = phi i64 [ %1090, %1084 ], [ %664, %663 ]
  %1086 = phi i32 [ %1089, %1084 ], [ %665, %663 ]
  %1087 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %612, i64 0, i32 1, i64 %1085
  %1088 = load i32, i32* %1087, align 4
  %1089 = mul nsw i32 %1088, %1086
  %1090 = add nuw nsw i64 %1085, 1
  %1091 = icmp eq i64 %1090, %661
  br i1 %1091, label %751, label %1084, !llvm.loop !196

1092:                                             ; preds = %651, %654
  %1093 = tail call zeroext i1 @_ZN6tflite13reference_ops4MeanIffEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_(float* %610, i32* %613, i32 %615, float* %622, i32* %625, i32 %627, i32* %632, i32 %140, i1 zeroext %633, i32* %639, i32* %645, float* %652) #16
  br i1 %1093, label %1094, label %1095

1094:                                             ; preds = %1079, %1092, %602, %751
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %353) #16
  br label %1977

1095:                                             ; preds = %1092
  %1096 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1097 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1096, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1097(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 373, i8* getelementptr inbounds ([407 x i8], [407 x i8]* @.str.30, i64 0, i64 0)) #16
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %353) #16
  br label %1977

1098:                                             ; preds = %349
  %1099 = icmp eq %struct.TfLiteTensor* %38, null
  br i1 %1099, label %1103, label %1100

1100:                                             ; preds = %1098
  %1101 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 1, i32 0
  %1102 = load i32*, i32** %1101, align 8
  br label %1103

1103:                                             ; preds = %1098, %1100
  %1104 = phi i32* [ %1102, %1100 ], [ null, %1098 ]
  %1105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 2
  %1106 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1105, align 8
  %1107 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1106, i64 0, i32 1, i64 0
  %1108 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1106, i64 0, i32 0
  %1109 = load i32, i32* %1108, align 4
  %1110 = icmp eq %struct.TfLiteTensor* %60, null
  br i1 %1110, label %1114, label %1111

1111:                                             ; preds = %1103
  %1112 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 1, i32 0
  %1113 = load i32*, i32** %1112, align 8
  br label %1114

1114:                                             ; preds = %1103, %1111
  %1115 = phi i32* [ %1113, %1111 ], [ null, %1103 ]
  %1116 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 2
  %1117 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1116, align 8
  %1118 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1117, i64 0, i32 1, i64 0
  %1119 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1117, i64 0, i32 0
  %1120 = load i32, i32* %1119, align 4
  %1121 = icmp eq %struct.TfLiteTensor* %48, null
  br i1 %1121, label %1125, label %1122

1122:                                             ; preds = %1114
  %1123 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 1, i32 0
  %1124 = load i32*, i32** %1123, align 8
  br label %1125

1125:                                             ; preds = %1114, %1122
  %1126 = phi i32* [ %1124, %1122 ], [ null, %1114 ]
  %1127 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %31, i64 0, i32 0
  %1128 = load i8, i8* %1127, align 1, !range !6
  %1129 = icmp ne i8 %1128, 0
  %1130 = icmp eq %struct.TfLiteTensor* %152, null
  br i1 %1130, label %1134, label %1131

1131:                                             ; preds = %1125
  %1132 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %152, i64 0, i32 1, i32 0
  %1133 = load i32*, i32** %1132, align 8
  br label %1134

1134:                                             ; preds = %1125, %1131
  %1135 = phi i32* [ %1133, %1131 ], [ null, %1125 ]
  %1136 = icmp eq %struct.TfLiteTensor* %162, null
  br i1 %1136, label %1140, label %1137

1137:                                             ; preds = %1134
  %1138 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %162, i64 0, i32 1, i32 0
  %1139 = load i32*, i32** %1138, align 8
  br label %1140

1140:                                             ; preds = %1134, %1137
  %1141 = phi i32* [ %1139, %1137 ], [ null, %1134 ]
  %1142 = icmp eq %struct.TfLiteTensor* %172, null
  br i1 %1142, label %1147, label %1143

1143:                                             ; preds = %1140
  %1144 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %172, i64 0, i32 1
  %1145 = bitcast %union.TfLitePtrUnion* %1144 to i64**
  %1146 = load i64*, i64** %1145, align 8
  br label %1147

1147:                                             ; preds = %1140, %1143
  %1148 = phi i64* [ %1146, %1143 ], [ null, %1140 ]
  %1149 = tail call zeroext i1 @_ZN6tflite13reference_ops4MeanIilEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_(i32* %1104, i32* %1107, i32 %1109, i32* %1115, i32* %1118, i32 %1120, i32* %1126, i32 %140, i1 zeroext %1129, i32* %1135, i32* %1141, i64* %1148)
  br i1 %1149, label %1977, label %1150

1150:                                             ; preds = %1147
  %1151 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1152 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1151, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1152(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 387, i8* getelementptr inbounds ([398 x i8], [398 x i8]* @.str.31, i64 0, i64 0)) #16
  br label %1977

1153:                                             ; preds = %349
  %1154 = icmp eq %struct.TfLiteTensor* %38, null
  br i1 %1154, label %1159, label %1155

1155:                                             ; preds = %1153
  %1156 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 1
  %1157 = bitcast %union.TfLitePtrUnion* %1156 to i64**
  %1158 = load i64*, i64** %1157, align 8
  br label %1159

1159:                                             ; preds = %1153, %1155
  %1160 = phi i64* [ %1158, %1155 ], [ null, %1153 ]
  %1161 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 2
  %1162 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1161, align 8
  %1163 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1162, i64 0, i32 1, i64 0
  %1164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1162, i64 0, i32 0
  %1165 = load i32, i32* %1164, align 4
  %1166 = icmp eq %struct.TfLiteTensor* %60, null
  br i1 %1166, label %1171, label %1167

1167:                                             ; preds = %1159
  %1168 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 1
  %1169 = bitcast %union.TfLitePtrUnion* %1168 to i64**
  %1170 = load i64*, i64** %1169, align 8
  br label %1171

1171:                                             ; preds = %1159, %1167
  %1172 = phi i64* [ %1170, %1167 ], [ null, %1159 ]
  %1173 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 2
  %1174 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1173, align 8
  %1175 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1174, i64 0, i32 1, i64 0
  %1176 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1174, i64 0, i32 0
  %1177 = load i32, i32* %1176, align 4
  %1178 = icmp eq %struct.TfLiteTensor* %48, null
  br i1 %1178, label %1182, label %1179

1179:                                             ; preds = %1171
  %1180 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 1, i32 0
  %1181 = load i32*, i32** %1180, align 8
  br label %1182

1182:                                             ; preds = %1171, %1179
  %1183 = phi i32* [ %1181, %1179 ], [ null, %1171 ]
  %1184 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %31, i64 0, i32 0
  %1185 = load i8, i8* %1184, align 1, !range !6
  %1186 = icmp ne i8 %1185, 0
  %1187 = icmp eq %struct.TfLiteTensor* %152, null
  br i1 %1187, label %1191, label %1188

1188:                                             ; preds = %1182
  %1189 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %152, i64 0, i32 1, i32 0
  %1190 = load i32*, i32** %1189, align 8
  br label %1191

1191:                                             ; preds = %1182, %1188
  %1192 = phi i32* [ %1190, %1188 ], [ null, %1182 ]
  %1193 = icmp eq %struct.TfLiteTensor* %162, null
  br i1 %1193, label %1197, label %1194

1194:                                             ; preds = %1191
  %1195 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %162, i64 0, i32 1, i32 0
  %1196 = load i32*, i32** %1195, align 8
  br label %1197

1197:                                             ; preds = %1191, %1194
  %1198 = phi i32* [ %1196, %1194 ], [ null, %1191 ]
  %1199 = icmp eq %struct.TfLiteTensor* %172, null
  br i1 %1199, label %1204, label %1200

1200:                                             ; preds = %1197
  %1201 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %172, i64 0, i32 1
  %1202 = bitcast %union.TfLitePtrUnion* %1201 to i64**
  %1203 = load i64*, i64** %1202, align 8
  br label %1204

1204:                                             ; preds = %1197, %1200
  %1205 = phi i64* [ %1203, %1200 ], [ null, %1197 ]
  %1206 = tail call zeroext i1 @_ZN6tflite13reference_ops4MeanIllEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_(i64* %1160, i32* %1163, i32 %1165, i64* %1172, i32* %1175, i32 %1177, i32* %1183, i32 %140, i1 zeroext %1186, i32* %1192, i32* %1198, i64* %1205)
  br i1 %1206, label %1977, label %1207

1207:                                             ; preds = %1204
  %1208 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1209 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1208, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1209(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 400, i8* getelementptr inbounds ([406 x i8], [406 x i8]* @.str.32, i64 0, i64 0)) #16
  br label %1977

1210:                                             ; preds = %349
  %1211 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %1211) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %1211, i8 -86, i64 10, i1 false)
  %1212 = trunc i64 %139 to i8
  store i8 %1212, i8* %1211, align 2
  %1213 = icmp eq %struct.TfLiteTensor* %48, null
  br i1 %1213, label %1218, label %1214

1214:                                             ; preds = %1210
  %1215 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 1, i32 0
  %1216 = load i32*, i32** %1215, align 8
  %1217 = bitcast i32* %1216 to i8*
  br label %1218

1218:                                             ; preds = %1210, %1214
  %1219 = phi i8* [ %1217, %1214 ], [ null, %1210 ]
  %1220 = phi i32* [ %1216, %1214 ], [ null, %1210 ]
  %1221 = icmp sgt i32 %140, 0
  br i1 %1221, label %1222, label %1278

1222:                                             ; preds = %1218
  %1223 = and i64 %139, 4294967295
  %1224 = icmp ult i64 %1223, 8
  br i1 %1224, label %1225, label %1245

1225:                                             ; preds = %1274, %1245, %1222
  %1226 = phi i64 [ 0, %1245 ], [ 0, %1222 ], [ %1257, %1274 ]
  %1227 = sub i64 %139, %1226
  %1228 = xor i64 %1226, -1
  %1229 = add nsw i64 %1223, %1228
  %1230 = and i64 %1227, 3
  %1231 = icmp eq i64 %1230, 0
  br i1 %1231, label %1242, label %1232

1232:                                             ; preds = %1225, %1232
  %1233 = phi i64 [ %1239, %1232 ], [ %1226, %1225 ]
  %1234 = phi i64 [ %1240, %1232 ], [ %1230, %1225 ]
  %1235 = getelementptr inbounds i32, i32* %1220, i64 %1233
  %1236 = load i32, i32* %1235, align 4
  %1237 = trunc i32 %1236 to i16
  %1238 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %1233
  store i16 %1237, i16* %1238, align 2
  %1239 = add nuw nsw i64 %1233, 1
  %1240 = add i64 %1234, -1
  %1241 = icmp eq i64 %1240, 0
  br i1 %1241, label %1242, label %1232, !llvm.loop !197

1242:                                             ; preds = %1232, %1225
  %1243 = phi i64 [ %1226, %1225 ], [ %1239, %1232 ]
  %1244 = icmp ult i64 %1229, 3
  br i1 %1244, label %1276, label %1340

1245:                                             ; preds = %1222
  %1246 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 0
  %1247 = shl nuw nsw i64 %1223, 1
  %1248 = add nuw nsw i64 %1247, 2
  %1249 = getelementptr i8, i8* %9, i64 %1248
  %1250 = getelementptr i32, i32* %1220, i64 %1223
  %1251 = bitcast i32* %1250 to i16*
  %1252 = icmp ult i16* %1246, %1251
  %1253 = icmp ult i8* %1219, %1249
  %1254 = and i1 %1252, %1253
  br i1 %1254, label %1225, label %1255

1255:                                             ; preds = %1245
  %1256 = and i64 %139, 7
  %1257 = sub nsw i64 %1223, %1256
  br label %1258

1258:                                             ; preds = %1258, %1255
  %1259 = phi i64 [ 0, %1255 ], [ %1272, %1258 ]
  %1260 = getelementptr inbounds i32, i32* %1220, i64 %1259
  %1261 = bitcast i32* %1260 to <4 x i32>*
  %1262 = load <4 x i32>, <4 x i32>* %1261, align 4, !alias.scope !198
  %1263 = getelementptr inbounds i32, i32* %1260, i64 4
  %1264 = bitcast i32* %1263 to <4 x i32>*
  %1265 = load <4 x i32>, <4 x i32>* %1264, align 4, !alias.scope !198
  %1266 = trunc <4 x i32> %1262 to <4 x i16>
  %1267 = trunc <4 x i32> %1265 to <4 x i16>
  %1268 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %1259
  %1269 = bitcast i16* %1268 to <4 x i16>*
  store <4 x i16> %1266, <4 x i16>* %1269, align 2, !alias.scope !201, !noalias !198
  %1270 = getelementptr inbounds i16, i16* %1268, i64 4
  %1271 = bitcast i16* %1270 to <4 x i16>*
  store <4 x i16> %1267, <4 x i16>* %1271, align 2, !alias.scope !201, !noalias !198
  %1272 = add i64 %1259, 8
  %1273 = icmp eq i64 %1272, %1257
  br i1 %1273, label %1274, label %1258, !llvm.loop !203

1274:                                             ; preds = %1258
  %1275 = icmp eq i64 %1256, 0
  br i1 %1275, label %1276, label %1225

1276:                                             ; preds = %1242, %1340, %1274
  %1277 = icmp ult i32 %140, 4
  br i1 %1277, label %1278, label %1368

1278:                                             ; preds = %1218, %1276
  %1279 = phi i64 [ %139, %1276 ], [ 0, %1218 ]
  %1280 = and i64 %1279, 4294967295
  %1281 = sub nsw i64 4, %1280
  %1282 = icmp ult i64 %1281, 16
  br i1 %1282, label %1283, label %1285

1283:                                             ; preds = %1338, %1278
  %1284 = phi i64 [ %1280, %1278 ], [ %1287, %1338 ]
  br label %1363

1285:                                             ; preds = %1278
  %1286 = and i64 %1281, -16
  %1287 = add nsw i64 %1280, %1286
  %1288 = add nsw i64 %1286, -16
  %1289 = lshr exact i64 %1288, 4
  %1290 = add nuw nsw i64 %1289, 1
  %1291 = and i64 %1290, 3
  %1292 = icmp ult i64 %1288, 48
  br i1 %1292, label %1324, label %1293

1293:                                             ; preds = %1285
  %1294 = sub nsw i64 %1290, %1291
  br label %1295

1295:                                             ; preds = %1295, %1293
  %1296 = phi i64 [ 0, %1293 ], [ %1321, %1295 ]
  %1297 = phi i64 [ %1294, %1293 ], [ %1322, %1295 ]
  %1298 = add i64 %1280, %1296
  %1299 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %1298
  %1300 = bitcast i16* %1299 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1300, align 2
  %1301 = getelementptr inbounds i16, i16* %1299, i64 8
  %1302 = bitcast i16* %1301 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1302, align 2
  %1303 = or i64 %1296, 16
  %1304 = add i64 %1280, %1303
  %1305 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %1304
  %1306 = bitcast i16* %1305 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1306, align 2
  %1307 = getelementptr inbounds i16, i16* %1305, i64 8
  %1308 = bitcast i16* %1307 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1308, align 2
  %1309 = or i64 %1296, 32
  %1310 = add i64 %1280, %1309
  %1311 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %1310
  %1312 = bitcast i16* %1311 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1312, align 2
  %1313 = getelementptr inbounds i16, i16* %1311, i64 8
  %1314 = bitcast i16* %1313 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1314, align 2
  %1315 = or i64 %1296, 48
  %1316 = add i64 %1280, %1315
  %1317 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %1316
  %1318 = bitcast i16* %1317 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1318, align 2
  %1319 = getelementptr inbounds i16, i16* %1317, i64 8
  %1320 = bitcast i16* %1319 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1320, align 2
  %1321 = add i64 %1296, 64
  %1322 = add i64 %1297, -4
  %1323 = icmp eq i64 %1322, 0
  br i1 %1323, label %1324, label %1295, !llvm.loop !204

1324:                                             ; preds = %1295, %1285
  %1325 = phi i64 [ 0, %1285 ], [ %1321, %1295 ]
  %1326 = icmp eq i64 %1291, 0
  br i1 %1326, label %1338, label %1327

1327:                                             ; preds = %1324, %1327
  %1328 = phi i64 [ %1335, %1327 ], [ %1325, %1324 ]
  %1329 = phi i64 [ %1336, %1327 ], [ %1291, %1324 ]
  %1330 = add i64 %1280, %1328
  %1331 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %1330
  %1332 = bitcast i16* %1331 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1332, align 2
  %1333 = getelementptr inbounds i16, i16* %1331, i64 8
  %1334 = bitcast i16* %1333 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1334, align 2
  %1335 = add i64 %1328, 16
  %1336 = add i64 %1329, -1
  %1337 = icmp eq i64 %1336, 0
  br i1 %1337, label %1338, label %1327, !llvm.loop !205

1338:                                             ; preds = %1327, %1324
  %1339 = icmp eq i64 %1281, %1286
  br i1 %1339, label %1368, label %1283

1340:                                             ; preds = %1242, %1340
  %1341 = phi i64 [ %1361, %1340 ], [ %1243, %1242 ]
  %1342 = getelementptr inbounds i32, i32* %1220, i64 %1341
  %1343 = load i32, i32* %1342, align 4
  %1344 = trunc i32 %1343 to i16
  %1345 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %1341
  store i16 %1344, i16* %1345, align 2
  %1346 = add nuw nsw i64 %1341, 1
  %1347 = getelementptr inbounds i32, i32* %1220, i64 %1346
  %1348 = load i32, i32* %1347, align 4
  %1349 = trunc i32 %1348 to i16
  %1350 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %1346
  store i16 %1349, i16* %1350, align 2
  %1351 = add nuw nsw i64 %1341, 2
  %1352 = getelementptr inbounds i32, i32* %1220, i64 %1351
  %1353 = load i32, i32* %1352, align 4
  %1354 = trunc i32 %1353 to i16
  %1355 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %1351
  store i16 %1354, i16* %1355, align 2
  %1356 = add nuw nsw i64 %1341, 3
  %1357 = getelementptr inbounds i32, i32* %1220, i64 %1356
  %1358 = load i32, i32* %1357, align 4
  %1359 = trunc i32 %1358 to i16
  %1360 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %1356
  store i16 %1359, i16* %1360, align 2
  %1361 = add nuw nsw i64 %1341, 4
  %1362 = icmp eq i64 %1361, %1223
  br i1 %1362, label %1276, label %1340, !llvm.loop !206

1363:                                             ; preds = %1283, %1363
  %1364 = phi i64 [ %1366, %1363 ], [ %1284, %1283 ]
  %1365 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 %1364
  store i16 1, i16* %1365, align 2
  %1366 = add nuw nsw i64 %1364, 1
  %1367 = icmp eq i64 %1366, 4
  br i1 %1367, label %1368, label %1363, !llvm.loop !207

1368:                                             ; preds = %1363, %1338, %1276
  %1369 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %31, i64 0, i32 0
  %1370 = load i8, i8* %1369, align 1, !range !6
  %1371 = icmp eq i8 %1370, 0
  br i1 %1371, label %1469, label %1372

1372:                                             ; preds = %1368
  %1373 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 2
  %1374 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1373, align 8
  %1375 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1374, i64 0, i32 0
  %1376 = load i32, i32* %1375, align 4
  %1377 = icmp eq i32 %1376, 4
  %1378 = icmp eq i8 %1212, 2
  %1379 = and i1 %1378, %1377
  br i1 %1379, label %1380, label %1469

1380:                                             ; preds = %1372
  %1381 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 0
  %1382 = load i16, i16* %1381, align 2
  switch i16 %1382, label %1469 [
    i16 1, label %1383
    i16 2, label %1387
  ]

1383:                                             ; preds = %1380
  %1384 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 1
  %1385 = load i16, i16* %1384, align 2
  %1386 = icmp eq i16 %1385, 2
  br i1 %1386, label %1391, label %1469

1387:                                             ; preds = %1380
  %1388 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %8, i64 0, i32 1, i64 1
  %1389 = load i16, i16* %1388, align 2
  %1390 = icmp eq i16 %1389, 1
  br i1 %1390, label %1391, label %1469

1391:                                             ; preds = %1387, %1383
  %1392 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpData", %"struct.tflite::ops::builtin::reduce::OpData"* %63, i64 0, i32 0
  %1393 = load i32, i32* %1392, align 4
  %1394 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpData", %"struct.tflite::ops::builtin::reduce::OpData"* %63, i64 0, i32 1
  %1395 = load i32, i32* %1394, align 4
  %1396 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1396) #16
  %1397 = icmp eq %struct.TfLiteTensor* %38, null
  br i1 %1397, label %1398, label %1400

1398:                                             ; preds = %1391
  %1399 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %1399, align 8, !alias.scope !208
  br label %1409

1400:                                             ; preds = %1391
  %1401 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1374, i64 0, i32 1, i64 0
  %1402 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 4, i32* %1402, align 8, !alias.scope !208
  %1403 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %1404 = bitcast %union.anon* %1403 to i8*
  %1405 = bitcast i32* %1401 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1404, i8* align 4 %1405, i64 16, i1 false) #16
  %1406 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 1
  %1407 = bitcast %union.TfLitePtrUnion* %1406 to i8**
  %1408 = load i8*, i8** %1407, align 8
  br label %1409

1409:                                             ; preds = %1398, %1400
  %1410 = phi i8* [ %1408, %1400 ], [ null, %1398 ]
  %1411 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 3, i32 1
  %1412 = load i32, i32* %1411, align 4
  %1413 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1413) #16
  %1414 = icmp eq %struct.TfLiteTensor* %60, null
  br i1 %1414, label %1415, label %1417

1415:                                             ; preds = %1409
  %1416 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %1416, align 8, !alias.scope !211
  br label %1445

1417:                                             ; preds = %1409
  %1418 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 2
  %1419 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1418, align 8, !noalias !211
  %1420 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1419, i64 0, i32 0
  %1421 = load i32, i32* %1420, align 4, !noalias !211
  %1422 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1419, i64 0, i32 1, i64 0
  %1423 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %1421, i32* %1423, align 8, !alias.scope !211
  %1424 = icmp sgt i32 %1421, 5
  br i1 %1424, label %1425, label %1432

1425:                                             ; preds = %1417
  %1426 = sext i32 %1421 to i64
  %1427 = shl nsw i64 %1426, 2
  %1428 = tail call i8* @_Znam(i64 %1427) #15, !noalias !211
  %1429 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %1430 = bitcast i32** %1429 to i8**
  store i8* %1428, i8** %1430, align 8, !alias.scope !211
  %1431 = bitcast i8* %1428 to i32*
  br label %1437

1432:                                             ; preds = %1417
  %1433 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %1434 = bitcast %union.anon* %1433 to i32*
  %1435 = sext i32 %1421 to i64
  %1436 = shl nsw i64 %1435, 2
  br label %1437

1437:                                             ; preds = %1432, %1425
  %1438 = phi i64 [ %1427, %1425 ], [ %1436, %1432 ]
  %1439 = phi i32* [ %1431, %1425 ], [ %1434, %1432 ]
  %1440 = bitcast i32* %1439 to i8*
  %1441 = bitcast i32* %1422 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1440, i8* align 4 %1441, i64 %1438, i1 false) #16
  %1442 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 1
  %1443 = bitcast %union.TfLitePtrUnion* %1442 to i8**
  %1444 = load i8*, i8** %1443, align 8
  br label %1445

1445:                                             ; preds = %1415, %1437
  %1446 = phi i8* [ %1444, %1437 ], [ null, %1415 ]
  %1447 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 3, i32 1
  %1448 = load i32, i32* %1447, align 4
  call void @_ZN6tflite21reference_integer_ops4MeanERKNS_10MeanParamsEiiRKNS_12RuntimeShapeEPKaiS6_Pai(%"struct.tflite::MeanParams"* nonnull dereferenceable(10) %8, i32 %1393, i32 %1395, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %1410, i32 %1412, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i8* %1446, i32 %1448)
  %1449 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %1450 = load i32, i32* %1449, align 8
  %1451 = icmp sgt i32 %1450, 5
  br i1 %1451, label %1452, label %1458

1452:                                             ; preds = %1445
  %1453 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %1454 = load i32*, i32** %1453, align 8
  %1455 = icmp eq i32* %1454, null
  br i1 %1455, label %1458, label %1456

1456:                                             ; preds = %1452
  %1457 = bitcast i32* %1454 to i8*
  call void @_ZdaPv(i8* %1457) #15
  br label %1458

1458:                                             ; preds = %1445, %1452, %1456
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1413) #16
  %1459 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %1460 = load i32, i32* %1459, align 8
  %1461 = icmp sgt i32 %1460, 5
  br i1 %1461, label %1462, label %1468

1462:                                             ; preds = %1458
  %1463 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %1464 = load i32*, i32** %1463, align 8
  %1465 = icmp eq i32* %1464, null
  br i1 %1465, label %1468, label %1466

1466:                                             ; preds = %1462
  %1467 = bitcast i32* %1464 to i8*
  call void @_ZdaPv(i8* %1467) #15
  br label %1468

1468:                                             ; preds = %1458, %1462, %1466
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1396) #16
  br label %1592

1469:                                             ; preds = %1380, %1383, %1368, %1387, %1372
  %1470 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 3
  %1471 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 3, i32 1
  %1472 = load i32, i32* %1471, align 4
  %1473 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 3, i32 1
  %1474 = load i32, i32* %1473, align 4
  %1475 = icmp eq i32 %1472, %1474
  br i1 %1475, label %1476, label %1535

1476:                                             ; preds = %1469
  %1477 = getelementptr inbounds %struct.TfLiteQuantizationParams, %struct.TfLiteQuantizationParams* %1470, i64 0, i32 0
  %1478 = load float, float* %1477, align 8
  %1479 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 3, i32 0
  %1480 = load float, float* %1479, align 8
  %1481 = fcmp oeq float %1478, %1480
  br i1 %1481, label %1482, label %1535

1482:                                             ; preds = %1476
  %1483 = icmp eq %struct.TfLiteTensor* %38, null
  br i1 %1483, label %1488, label %1484

1484:                                             ; preds = %1482
  %1485 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 1
  %1486 = bitcast %union.TfLitePtrUnion* %1485 to i8**
  %1487 = load i8*, i8** %1486, align 8
  br label %1488

1488:                                             ; preds = %1482, %1484
  %1489 = phi i8* [ %1487, %1484 ], [ null, %1482 ]
  %1490 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 2
  %1491 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1490, align 8
  %1492 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1491, i64 0, i32 1, i64 0
  %1493 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1491, i64 0, i32 0
  %1494 = load i32, i32* %1493, align 4
  %1495 = icmp eq %struct.TfLiteTensor* %60, null
  br i1 %1495, label %1500, label %1496

1496:                                             ; preds = %1488
  %1497 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 1
  %1498 = bitcast %union.TfLitePtrUnion* %1497 to i8**
  %1499 = load i8*, i8** %1498, align 8
  br label %1500

1500:                                             ; preds = %1488, %1496
  %1501 = phi i8* [ %1499, %1496 ], [ null, %1488 ]
  %1502 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 2
  %1503 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1502, align 8
  %1504 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1503, i64 0, i32 1, i64 0
  %1505 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1503, i64 0, i32 0
  %1506 = load i32, i32* %1505, align 4
  br i1 %1213, label %1510, label %1507

1507:                                             ; preds = %1500
  %1508 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 1, i32 0
  %1509 = load i32*, i32** %1508, align 8
  br label %1510

1510:                                             ; preds = %1500, %1507
  %1511 = phi i32* [ %1509, %1507 ], [ null, %1500 ]
  %1512 = icmp ne i8 %1370, 0
  %1513 = icmp eq %struct.TfLiteTensor* %152, null
  br i1 %1513, label %1517, label %1514

1514:                                             ; preds = %1510
  %1515 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %152, i64 0, i32 1, i32 0
  %1516 = load i32*, i32** %1515, align 8
  br label %1517

1517:                                             ; preds = %1510, %1514
  %1518 = phi i32* [ %1516, %1514 ], [ null, %1510 ]
  %1519 = icmp eq %struct.TfLiteTensor* %162, null
  br i1 %1519, label %1523, label %1520

1520:                                             ; preds = %1517
  %1521 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %162, i64 0, i32 1, i32 0
  %1522 = load i32*, i32** %1521, align 8
  br label %1523

1523:                                             ; preds = %1517, %1520
  %1524 = phi i32* [ %1522, %1520 ], [ null, %1517 ]
  %1525 = icmp eq %struct.TfLiteTensor* %172, null
  br i1 %1525, label %1529, label %1526

1526:                                             ; preds = %1523
  %1527 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %172, i64 0, i32 1, i32 0
  %1528 = load i32*, i32** %1527, align 8
  br label %1529

1529:                                             ; preds = %1523, %1526
  %1530 = phi i32* [ %1528, %1526 ], [ null, %1523 ]
  %1531 = tail call zeroext i1 @_ZN6tflite13reference_ops4MeanIaiEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_(i8* %1489, i32* %1492, i32 %1494, i8* %1501, i32* %1504, i32 %1506, i32* %1511, i32 %140, i1 zeroext %1512, i32* %1518, i32* %1524, i32* %1530)
  br i1 %1531, label %1592, label %1532

1532:                                             ; preds = %1529
  %1533 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1534 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1533, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1534(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 431, i8* getelementptr inbounds ([367 x i8], [367 x i8]* @.str.34, i64 0, i64 0)) #16
  br label %1593

1535:                                             ; preds = %1469, %1476
  %1536 = icmp eq %struct.TfLiteTensor* %38, null
  br i1 %1536, label %1541, label %1537

1537:                                             ; preds = %1535
  %1538 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 1
  %1539 = bitcast %union.TfLitePtrUnion* %1538 to i8**
  %1540 = load i8*, i8** %1539, align 8
  br label %1541

1541:                                             ; preds = %1535, %1537
  %1542 = phi i8* [ %1540, %1537 ], [ null, %1535 ]
  %1543 = getelementptr inbounds %struct.TfLiteQuantizationParams, %struct.TfLiteQuantizationParams* %1470, i64 0, i32 0
  %1544 = load float, float* %1543, align 8
  %1545 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 2
  %1546 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1545, align 8
  %1547 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1546, i64 0, i32 1, i64 0
  %1548 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1546, i64 0, i32 0
  %1549 = load i32, i32* %1548, align 4
  %1550 = icmp eq %struct.TfLiteTensor* %60, null
  br i1 %1550, label %1555, label %1551

1551:                                             ; preds = %1541
  %1552 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 1
  %1553 = bitcast %union.TfLitePtrUnion* %1552 to i8**
  %1554 = load i8*, i8** %1553, align 8
  br label %1555

1555:                                             ; preds = %1541, %1551
  %1556 = phi i8* [ %1554, %1551 ], [ null, %1541 ]
  %1557 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 3, i32 0
  %1558 = load float, float* %1557, align 8
  %1559 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 2
  %1560 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1559, align 8
  %1561 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1560, i64 0, i32 1, i64 0
  %1562 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1560, i64 0, i32 0
  %1563 = load i32, i32* %1562, align 4
  br i1 %1213, label %1567, label %1564

1564:                                             ; preds = %1555
  %1565 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 1, i32 0
  %1566 = load i32*, i32** %1565, align 8
  br label %1567

1567:                                             ; preds = %1555, %1564
  %1568 = phi i32* [ %1566, %1564 ], [ null, %1555 ]
  %1569 = icmp ne i8 %1370, 0
  %1570 = icmp eq %struct.TfLiteTensor* %152, null
  br i1 %1570, label %1574, label %1571

1571:                                             ; preds = %1567
  %1572 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %152, i64 0, i32 1, i32 0
  %1573 = load i32*, i32** %1572, align 8
  br label %1574

1574:                                             ; preds = %1567, %1571
  %1575 = phi i32* [ %1573, %1571 ], [ null, %1567 ]
  %1576 = icmp eq %struct.TfLiteTensor* %162, null
  br i1 %1576, label %1580, label %1577

1577:                                             ; preds = %1574
  %1578 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %162, i64 0, i32 1, i32 0
  %1579 = load i32*, i32** %1578, align 8
  br label %1580

1580:                                             ; preds = %1574, %1577
  %1581 = phi i32* [ %1579, %1577 ], [ null, %1574 ]
  %1582 = icmp eq %struct.TfLiteTensor* %172, null
  br i1 %1582, label %1586, label %1583

1583:                                             ; preds = %1580
  %1584 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %172, i64 0, i32 1, i32 0
  %1585 = load i32*, i32** %1584, align 8
  br label %1586

1586:                                             ; preds = %1580, %1583
  %1587 = phi i32* [ %1585, %1583 ], [ null, %1580 ]
  %1588 = tail call zeroext i1 @_ZN6tflite13reference_ops18QuantizedMeanOrSumIaiEEbPKT_ifPKiiPS2_ifS6_iS6_ibPiS8_PT0_b(i8* %1542, i32 %1472, float %1544, i32* %1547, i32 %1549, i8* %1556, i32 %1474, float %1558, i32* %1561, i32 %1563, i32* %1568, i32 %140, i1 zeroext %1569, i32* %1575, i32* %1581, i32* %1587, i1 zeroext false)
  br i1 %1588, label %1592, label %1589

1589:                                             ; preds = %1586
  %1590 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1591 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1590, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1591(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 445, i8* getelementptr inbounds ([508 x i8], [508 x i8]* @.str.35, i64 0, i64 0)) #16
  br label %1593

1592:                                             ; preds = %1529, %1586, %1468
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %1211) #16
  br label %1977

1593:                                             ; preds = %1589, %1532
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %1211) #16
  br label %1977

1594:                                             ; preds = %349
  %1595 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %1595) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %1595, i8 -86, i64 10, i1 false)
  %1596 = trunc i64 %139 to i8
  store i8 %1596, i8* %1595, align 2
  %1597 = icmp eq %struct.TfLiteTensor* %48, null
  br i1 %1597, label %1602, label %1598

1598:                                             ; preds = %1594
  %1599 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 1, i32 0
  %1600 = load i32*, i32** %1599, align 8
  %1601 = bitcast i32* %1600 to i8*
  br label %1602

1602:                                             ; preds = %1594, %1598
  %1603 = phi i8* [ %1601, %1598 ], [ null, %1594 ]
  %1604 = phi i32* [ %1600, %1598 ], [ null, %1594 ]
  %1605 = icmp sgt i32 %140, 0
  br i1 %1605, label %1606, label %1662

1606:                                             ; preds = %1602
  %1607 = and i64 %139, 4294967295
  %1608 = icmp ult i64 %1607, 8
  br i1 %1608, label %1609, label %1629

1609:                                             ; preds = %1658, %1629, %1606
  %1610 = phi i64 [ 0, %1629 ], [ 0, %1606 ], [ %1641, %1658 ]
  %1611 = sub i64 %139, %1610
  %1612 = xor i64 %1610, -1
  %1613 = add nsw i64 %1607, %1612
  %1614 = and i64 %1611, 3
  %1615 = icmp eq i64 %1614, 0
  br i1 %1615, label %1626, label %1616

1616:                                             ; preds = %1609, %1616
  %1617 = phi i64 [ %1623, %1616 ], [ %1610, %1609 ]
  %1618 = phi i64 [ %1624, %1616 ], [ %1614, %1609 ]
  %1619 = getelementptr inbounds i32, i32* %1604, i64 %1617
  %1620 = load i32, i32* %1619, align 4
  %1621 = trunc i32 %1620 to i16
  %1622 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %1617
  store i16 %1621, i16* %1622, align 2
  %1623 = add nuw nsw i64 %1617, 1
  %1624 = add i64 %1618, -1
  %1625 = icmp eq i64 %1624, 0
  br i1 %1625, label %1626, label %1616, !llvm.loop !214

1626:                                             ; preds = %1616, %1609
  %1627 = phi i64 [ %1610, %1609 ], [ %1623, %1616 ]
  %1628 = icmp ult i64 %1613, 3
  br i1 %1628, label %1660, label %1724

1629:                                             ; preds = %1606
  %1630 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 0
  %1631 = shl nuw nsw i64 %1607, 1
  %1632 = add nuw nsw i64 %1631, 2
  %1633 = getelementptr i8, i8* %13, i64 %1632
  %1634 = getelementptr i32, i32* %1604, i64 %1607
  %1635 = bitcast i32* %1634 to i16*
  %1636 = icmp ult i16* %1630, %1635
  %1637 = icmp ult i8* %1603, %1633
  %1638 = and i1 %1636, %1637
  br i1 %1638, label %1609, label %1639

1639:                                             ; preds = %1629
  %1640 = and i64 %139, 7
  %1641 = sub nsw i64 %1607, %1640
  br label %1642

1642:                                             ; preds = %1642, %1639
  %1643 = phi i64 [ 0, %1639 ], [ %1656, %1642 ]
  %1644 = getelementptr inbounds i32, i32* %1604, i64 %1643
  %1645 = bitcast i32* %1644 to <4 x i32>*
  %1646 = load <4 x i32>, <4 x i32>* %1645, align 4, !alias.scope !215
  %1647 = getelementptr inbounds i32, i32* %1644, i64 4
  %1648 = bitcast i32* %1647 to <4 x i32>*
  %1649 = load <4 x i32>, <4 x i32>* %1648, align 4, !alias.scope !215
  %1650 = trunc <4 x i32> %1646 to <4 x i16>
  %1651 = trunc <4 x i32> %1649 to <4 x i16>
  %1652 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %1643
  %1653 = bitcast i16* %1652 to <4 x i16>*
  store <4 x i16> %1650, <4 x i16>* %1653, align 2, !alias.scope !218, !noalias !215
  %1654 = getelementptr inbounds i16, i16* %1652, i64 4
  %1655 = bitcast i16* %1654 to <4 x i16>*
  store <4 x i16> %1651, <4 x i16>* %1655, align 2, !alias.scope !218, !noalias !215
  %1656 = add i64 %1643, 8
  %1657 = icmp eq i64 %1656, %1641
  br i1 %1657, label %1658, label %1642, !llvm.loop !220

1658:                                             ; preds = %1642
  %1659 = icmp eq i64 %1640, 0
  br i1 %1659, label %1660, label %1609

1660:                                             ; preds = %1626, %1724, %1658
  %1661 = icmp ult i32 %140, 4
  br i1 %1661, label %1662, label %1752

1662:                                             ; preds = %1602, %1660
  %1663 = phi i64 [ %139, %1660 ], [ 0, %1602 ]
  %1664 = and i64 %1663, 4294967295
  %1665 = sub nsw i64 4, %1664
  %1666 = icmp ult i64 %1665, 16
  br i1 %1666, label %1667, label %1669

1667:                                             ; preds = %1722, %1662
  %1668 = phi i64 [ %1664, %1662 ], [ %1671, %1722 ]
  br label %1747

1669:                                             ; preds = %1662
  %1670 = and i64 %1665, -16
  %1671 = add nsw i64 %1664, %1670
  %1672 = add nsw i64 %1670, -16
  %1673 = lshr exact i64 %1672, 4
  %1674 = add nuw nsw i64 %1673, 1
  %1675 = and i64 %1674, 3
  %1676 = icmp ult i64 %1672, 48
  br i1 %1676, label %1708, label %1677

1677:                                             ; preds = %1669
  %1678 = sub nsw i64 %1674, %1675
  br label %1679

1679:                                             ; preds = %1679, %1677
  %1680 = phi i64 [ 0, %1677 ], [ %1705, %1679 ]
  %1681 = phi i64 [ %1678, %1677 ], [ %1706, %1679 ]
  %1682 = add i64 %1664, %1680
  %1683 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %1682
  %1684 = bitcast i16* %1683 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1684, align 2
  %1685 = getelementptr inbounds i16, i16* %1683, i64 8
  %1686 = bitcast i16* %1685 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1686, align 2
  %1687 = or i64 %1680, 16
  %1688 = add i64 %1664, %1687
  %1689 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %1688
  %1690 = bitcast i16* %1689 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1690, align 2
  %1691 = getelementptr inbounds i16, i16* %1689, i64 8
  %1692 = bitcast i16* %1691 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1692, align 2
  %1693 = or i64 %1680, 32
  %1694 = add i64 %1664, %1693
  %1695 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %1694
  %1696 = bitcast i16* %1695 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1696, align 2
  %1697 = getelementptr inbounds i16, i16* %1695, i64 8
  %1698 = bitcast i16* %1697 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1698, align 2
  %1699 = or i64 %1680, 48
  %1700 = add i64 %1664, %1699
  %1701 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %1700
  %1702 = bitcast i16* %1701 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1702, align 2
  %1703 = getelementptr inbounds i16, i16* %1701, i64 8
  %1704 = bitcast i16* %1703 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1704, align 2
  %1705 = add i64 %1680, 64
  %1706 = add i64 %1681, -4
  %1707 = icmp eq i64 %1706, 0
  br i1 %1707, label %1708, label %1679, !llvm.loop !221

1708:                                             ; preds = %1679, %1669
  %1709 = phi i64 [ 0, %1669 ], [ %1705, %1679 ]
  %1710 = icmp eq i64 %1675, 0
  br i1 %1710, label %1722, label %1711

1711:                                             ; preds = %1708, %1711
  %1712 = phi i64 [ %1719, %1711 ], [ %1709, %1708 ]
  %1713 = phi i64 [ %1720, %1711 ], [ %1675, %1708 ]
  %1714 = add i64 %1664, %1712
  %1715 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %1714
  %1716 = bitcast i16* %1715 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1716, align 2
  %1717 = getelementptr inbounds i16, i16* %1715, i64 8
  %1718 = bitcast i16* %1717 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %1718, align 2
  %1719 = add i64 %1712, 16
  %1720 = add i64 %1713, -1
  %1721 = icmp eq i64 %1720, 0
  br i1 %1721, label %1722, label %1711, !llvm.loop !222

1722:                                             ; preds = %1711, %1708
  %1723 = icmp eq i64 %1665, %1670
  br i1 %1723, label %1752, label %1667

1724:                                             ; preds = %1626, %1724
  %1725 = phi i64 [ %1745, %1724 ], [ %1627, %1626 ]
  %1726 = getelementptr inbounds i32, i32* %1604, i64 %1725
  %1727 = load i32, i32* %1726, align 4
  %1728 = trunc i32 %1727 to i16
  %1729 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %1725
  store i16 %1728, i16* %1729, align 2
  %1730 = add nuw nsw i64 %1725, 1
  %1731 = getelementptr inbounds i32, i32* %1604, i64 %1730
  %1732 = load i32, i32* %1731, align 4
  %1733 = trunc i32 %1732 to i16
  %1734 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %1730
  store i16 %1733, i16* %1734, align 2
  %1735 = add nuw nsw i64 %1725, 2
  %1736 = getelementptr inbounds i32, i32* %1604, i64 %1735
  %1737 = load i32, i32* %1736, align 4
  %1738 = trunc i32 %1737 to i16
  %1739 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %1735
  store i16 %1738, i16* %1739, align 2
  %1740 = add nuw nsw i64 %1725, 3
  %1741 = getelementptr inbounds i32, i32* %1604, i64 %1740
  %1742 = load i32, i32* %1741, align 4
  %1743 = trunc i32 %1742 to i16
  %1744 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %1740
  store i16 %1743, i16* %1744, align 2
  %1745 = add nuw nsw i64 %1725, 4
  %1746 = icmp eq i64 %1745, %1607
  br i1 %1746, label %1660, label %1724, !llvm.loop !223

1747:                                             ; preds = %1667, %1747
  %1748 = phi i64 [ %1750, %1747 ], [ %1668, %1667 ]
  %1749 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 %1748
  store i16 1, i16* %1749, align 2
  %1750 = add nuw nsw i64 %1748, 1
  %1751 = icmp eq i64 %1750, 4
  br i1 %1751, label %1752, label %1747, !llvm.loop !224

1752:                                             ; preds = %1747, %1722, %1660
  %1753 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %31, i64 0, i32 0
  %1754 = load i8, i8* %1753, align 1, !range !6
  %1755 = icmp eq i8 %1754, 0
  br i1 %1755, label %1853, label %1756

1756:                                             ; preds = %1752
  %1757 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 2
  %1758 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1757, align 8
  %1759 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1758, i64 0, i32 0
  %1760 = load i32, i32* %1759, align 4
  %1761 = icmp eq i32 %1760, 4
  %1762 = icmp eq i8 %1596, 2
  %1763 = and i1 %1762, %1761
  br i1 %1763, label %1764, label %1853

1764:                                             ; preds = %1756
  %1765 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 0
  %1766 = load i16, i16* %1765, align 2
  switch i16 %1766, label %1853 [
    i16 1, label %1767
    i16 2, label %1771
  ]

1767:                                             ; preds = %1764
  %1768 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 1
  %1769 = load i16, i16* %1768, align 2
  %1770 = icmp eq i16 %1769, 2
  br i1 %1770, label %1775, label %1853

1771:                                             ; preds = %1764
  %1772 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %12, i64 0, i32 1, i64 1
  %1773 = load i16, i16* %1772, align 2
  %1774 = icmp eq i16 %1773, 1
  br i1 %1774, label %1775, label %1853

1775:                                             ; preds = %1771, %1767
  %1776 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1776) #16
  %1777 = icmp eq %struct.TfLiteTensor* %38, null
  br i1 %1777, label %1778, label %1780

1778:                                             ; preds = %1775
  %1779 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %1779, align 8, !alias.scope !225
  br label %1789

1780:                                             ; preds = %1775
  %1781 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1758, i64 0, i32 1, i64 0
  %1782 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 4, i32* %1782, align 8, !alias.scope !225
  %1783 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %1784 = bitcast %union.anon* %1783 to i8*
  %1785 = bitcast i32* %1781 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1784, i8* align 4 %1785, i64 16, i1 false) #16
  %1786 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 1
  %1787 = bitcast %union.TfLitePtrUnion* %1786 to i8**
  %1788 = load i8*, i8** %1787, align 8
  br label %1789

1789:                                             ; preds = %1778, %1780
  %1790 = phi i8* [ %1788, %1780 ], [ null, %1778 ]
  %1791 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 3, i32 1
  %1792 = load i32, i32* %1791, align 4
  %1793 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 3, i32 0
  %1794 = load float, float* %1793, align 8
  %1795 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1795) #16
  %1796 = icmp eq %struct.TfLiteTensor* %60, null
  br i1 %1796, label %1797, label %1799

1797:                                             ; preds = %1789
  %1798 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %1798, align 8, !alias.scope !228
  br label %1827

1799:                                             ; preds = %1789
  %1800 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 2
  %1801 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1800, align 8, !noalias !228
  %1802 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1801, i64 0, i32 0
  %1803 = load i32, i32* %1802, align 4, !noalias !228
  %1804 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1801, i64 0, i32 1, i64 0
  %1805 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %1803, i32* %1805, align 8, !alias.scope !228
  %1806 = icmp sgt i32 %1803, 5
  br i1 %1806, label %1807, label %1814

1807:                                             ; preds = %1799
  %1808 = sext i32 %1803 to i64
  %1809 = shl nsw i64 %1808, 2
  %1810 = tail call i8* @_Znam(i64 %1809) #15, !noalias !228
  %1811 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %1812 = bitcast i32** %1811 to i8**
  store i8* %1810, i8** %1812, align 8, !alias.scope !228
  %1813 = bitcast i8* %1810 to i32*
  br label %1819

1814:                                             ; preds = %1799
  %1815 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %1816 = bitcast %union.anon* %1815 to i32*
  %1817 = sext i32 %1803 to i64
  %1818 = shl nsw i64 %1817, 2
  br label %1819

1819:                                             ; preds = %1814, %1807
  %1820 = phi i64 [ %1809, %1807 ], [ %1818, %1814 ]
  %1821 = phi i32* [ %1813, %1807 ], [ %1816, %1814 ]
  %1822 = bitcast i32* %1821 to i8*
  %1823 = bitcast i32* %1804 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1822, i8* align 4 %1823, i64 %1820, i1 false) #16
  %1824 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 1
  %1825 = bitcast %union.TfLitePtrUnion* %1824 to i8**
  %1826 = load i8*, i8** %1825, align 8
  br label %1827

1827:                                             ; preds = %1797, %1819
  %1828 = phi i8* [ %1826, %1819 ], [ null, %1797 ]
  %1829 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 3, i32 1
  %1830 = load i32, i32* %1829, align 4
  %1831 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 3, i32 0
  %1832 = load float, float* %1831, align 8
  call void @_ZN6tflite13reference_ops4MeanERKNS_10MeanParamsERKNS_12RuntimeShapeEPKhifS6_Phif(%"struct.tflite::MeanParams"* nonnull dereferenceable(10) %12, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i8* %1790, i32 %1792, float %1794, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, i8* %1828, i32 %1830, float %1832)
  %1833 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %1834 = load i32, i32* %1833, align 8
  %1835 = icmp sgt i32 %1834, 5
  br i1 %1835, label %1836, label %1842

1836:                                             ; preds = %1827
  %1837 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %1838 = load i32*, i32** %1837, align 8
  %1839 = icmp eq i32* %1838, null
  br i1 %1839, label %1842, label %1840

1840:                                             ; preds = %1836
  %1841 = bitcast i32* %1838 to i8*
  call void @_ZdaPv(i8* %1841) #15
  br label %1842

1842:                                             ; preds = %1827, %1836, %1840
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1795) #16
  %1843 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %1844 = load i32, i32* %1843, align 8
  %1845 = icmp sgt i32 %1844, 5
  br i1 %1845, label %1846, label %1852

1846:                                             ; preds = %1842
  %1847 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %1848 = load i32*, i32** %1847, align 8
  %1849 = icmp eq i32* %1848, null
  br i1 %1849, label %1852, label %1850

1850:                                             ; preds = %1846
  %1851 = bitcast i32* %1848 to i8*
  call void @_ZdaPv(i8* %1851) #15
  br label %1852

1852:                                             ; preds = %1842, %1846, %1850
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1776) #16
  br label %1975

1853:                                             ; preds = %1764, %1767, %1752, %1771, %1756
  %1854 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 3, i32 1
  %1855 = load i32, i32* %1854, align 4
  %1856 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 3, i32 1
  %1857 = load i32, i32* %1856, align 4
  %1858 = icmp eq i32 %1855, %1857
  br i1 %1858, label %1859, label %1918

1859:                                             ; preds = %1853
  %1860 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 3, i32 0
  %1861 = load float, float* %1860, align 8
  %1862 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 3, i32 0
  %1863 = load float, float* %1862, align 8
  %1864 = fcmp oeq float %1861, %1863
  br i1 %1864, label %1865, label %1918

1865:                                             ; preds = %1859
  %1866 = icmp eq %struct.TfLiteTensor* %38, null
  br i1 %1866, label %1871, label %1867

1867:                                             ; preds = %1865
  %1868 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 1
  %1869 = bitcast %union.TfLitePtrUnion* %1868 to i8**
  %1870 = load i8*, i8** %1869, align 8
  br label %1871

1871:                                             ; preds = %1865, %1867
  %1872 = phi i8* [ %1870, %1867 ], [ null, %1865 ]
  %1873 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 2
  %1874 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1873, align 8
  %1875 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1874, i64 0, i32 1, i64 0
  %1876 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1874, i64 0, i32 0
  %1877 = load i32, i32* %1876, align 4
  %1878 = icmp eq %struct.TfLiteTensor* %60, null
  br i1 %1878, label %1883, label %1879

1879:                                             ; preds = %1871
  %1880 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 1
  %1881 = bitcast %union.TfLitePtrUnion* %1880 to i8**
  %1882 = load i8*, i8** %1881, align 8
  br label %1883

1883:                                             ; preds = %1871, %1879
  %1884 = phi i8* [ %1882, %1879 ], [ null, %1871 ]
  %1885 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 2
  %1886 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1885, align 8
  %1887 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1886, i64 0, i32 1, i64 0
  %1888 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1886, i64 0, i32 0
  %1889 = load i32, i32* %1888, align 4
  br i1 %1597, label %1893, label %1890

1890:                                             ; preds = %1883
  %1891 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 1, i32 0
  %1892 = load i32*, i32** %1891, align 8
  br label %1893

1893:                                             ; preds = %1883, %1890
  %1894 = phi i32* [ %1892, %1890 ], [ null, %1883 ]
  %1895 = icmp ne i8 %1754, 0
  %1896 = icmp eq %struct.TfLiteTensor* %152, null
  br i1 %1896, label %1900, label %1897

1897:                                             ; preds = %1893
  %1898 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %152, i64 0, i32 1, i32 0
  %1899 = load i32*, i32** %1898, align 8
  br label %1900

1900:                                             ; preds = %1893, %1897
  %1901 = phi i32* [ %1899, %1897 ], [ null, %1893 ]
  %1902 = icmp eq %struct.TfLiteTensor* %162, null
  br i1 %1902, label %1906, label %1903

1903:                                             ; preds = %1900
  %1904 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %162, i64 0, i32 1, i32 0
  %1905 = load i32*, i32** %1904, align 8
  br label %1906

1906:                                             ; preds = %1900, %1903
  %1907 = phi i32* [ %1905, %1903 ], [ null, %1900 ]
  %1908 = icmp eq %struct.TfLiteTensor* %172, null
  br i1 %1908, label %1912, label %1909

1909:                                             ; preds = %1906
  %1910 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %172, i64 0, i32 1, i32 0
  %1911 = load i32*, i32** %1910, align 8
  br label %1912

1912:                                             ; preds = %1906, %1909
  %1913 = phi i32* [ %1911, %1909 ], [ null, %1906 ]
  %1914 = tail call zeroext i1 @_ZN6tflite13reference_ops4MeanIhiEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_(i8* %1872, i32* %1875, i32 %1877, i8* %1884, i32* %1887, i32 %1889, i32* %1894, i32 %140, i1 zeroext %1895, i32* %1901, i32* %1907, i32* %1913)
  br i1 %1914, label %1975, label %1915

1915:                                             ; preds = %1912
  %1916 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1917 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1916, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1917(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 480, i8* getelementptr inbounds ([402 x i8], [402 x i8]* @.str.37, i64 0, i64 0)) #16
  br label %1976

1918:                                             ; preds = %1853, %1859
  %1919 = icmp eq %struct.TfLiteTensor* %38, null
  br i1 %1919, label %1924, label %1920

1920:                                             ; preds = %1918
  %1921 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 1
  %1922 = bitcast %union.TfLitePtrUnion* %1921 to i8**
  %1923 = load i8*, i8** %1922, align 8
  br label %1924

1924:                                             ; preds = %1918, %1920
  %1925 = phi i8* [ %1923, %1920 ], [ null, %1918 ]
  %1926 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 3, i32 0
  %1927 = load float, float* %1926, align 8
  %1928 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 2
  %1929 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1928, align 8
  %1930 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1929, i64 0, i32 1, i64 0
  %1931 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1929, i64 0, i32 0
  %1932 = load i32, i32* %1931, align 4
  %1933 = icmp eq %struct.TfLiteTensor* %60, null
  br i1 %1933, label %1938, label %1934

1934:                                             ; preds = %1924
  %1935 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 1
  %1936 = bitcast %union.TfLitePtrUnion* %1935 to i8**
  %1937 = load i8*, i8** %1936, align 8
  br label %1938

1938:                                             ; preds = %1924, %1934
  %1939 = phi i8* [ %1937, %1934 ], [ null, %1924 ]
  %1940 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 3, i32 0
  %1941 = load float, float* %1940, align 8
  %1942 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 2
  %1943 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1942, align 8
  %1944 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1943, i64 0, i32 1, i64 0
  %1945 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1943, i64 0, i32 0
  %1946 = load i32, i32* %1945, align 4
  br i1 %1597, label %1950, label %1947

1947:                                             ; preds = %1938
  %1948 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 1, i32 0
  %1949 = load i32*, i32** %1948, align 8
  br label %1950

1950:                                             ; preds = %1938, %1947
  %1951 = phi i32* [ %1949, %1947 ], [ null, %1938 ]
  %1952 = icmp ne i8 %1754, 0
  %1953 = icmp eq %struct.TfLiteTensor* %152, null
  br i1 %1953, label %1957, label %1954

1954:                                             ; preds = %1950
  %1955 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %152, i64 0, i32 1, i32 0
  %1956 = load i32*, i32** %1955, align 8
  br label %1957

1957:                                             ; preds = %1950, %1954
  %1958 = phi i32* [ %1956, %1954 ], [ null, %1950 ]
  %1959 = icmp eq %struct.TfLiteTensor* %162, null
  br i1 %1959, label %1963, label %1960

1960:                                             ; preds = %1957
  %1961 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %162, i64 0, i32 1, i32 0
  %1962 = load i32*, i32** %1961, align 8
  br label %1963

1963:                                             ; preds = %1957, %1960
  %1964 = phi i32* [ %1962, %1960 ], [ null, %1957 ]
  %1965 = icmp eq %struct.TfLiteTensor* %172, null
  br i1 %1965, label %1969, label %1966

1966:                                             ; preds = %1963
  %1967 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %172, i64 0, i32 1, i32 0
  %1968 = load i32*, i32** %1967, align 8
  br label %1969

1969:                                             ; preds = %1963, %1966
  %1970 = phi i32* [ %1968, %1966 ], [ null, %1963 ]
  %1971 = tail call zeroext i1 @_ZN6tflite13reference_ops18QuantizedMeanOrSumIhiEEbPKT_ifPKiiPS2_ifS6_iS6_ibPiS8_PT0_b(i8* %1925, i32 %1855, float %1927, i32* %1930, i32 %1932, i8* %1939, i32 %1857, float %1941, i32* %1944, i32 %1946, i32* %1951, i32 %140, i1 zeroext %1952, i32* %1958, i32* %1964, i32* %1970, i1 zeroext false)
  br i1 %1971, label %1975, label %1972

1972:                                             ; preds = %1969
  %1973 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1974 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1973, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1974(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 496, i8* getelementptr inbounds ([565 x i8], [565 x i8]* @.str.38, i64 0, i64 0)) #16
  br label %1976

1975:                                             ; preds = %1912, %1969, %1852
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %1595) #16
  br label %1977

1976:                                             ; preds = %1972, %1915
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %1595) #16
  br label %1977

1977:                                             ; preds = %1147, %1204, %1094, %1592, %1975, %1976, %1593, %1095, %349, %343, %261, %254, %1207, %1150
  %1978 = phi i32 [ 1, %1976 ], [ 1, %1593 ], [ 1, %1207 ], [ 1, %1150 ], [ 1, %1095 ], [ %347, %343 ], [ %262, %261 ], [ %259, %254 ], [ 1, %349 ], [ 0, %1975 ], [ 0, %1592 ], [ 0, %1094 ], [ 0, %1204 ], [ 0, %1147 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #16
  ret i32 %1978
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin16Register_SUM_REFEv() local_unnamed_addr #7 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin16Register_SUM_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin24Register_REDUCE_PROD_REFEv() local_unnamed_addr #7 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin24Register_REDUCE_PROD_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin6reduce11EvalGenericILNS2_10KernelTypeE0ELNS2_10ReduceTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"struct.tflite::ops::builtin::reduce::OpContext", align 8
  %4 = bitcast %"struct.tflite::ops::builtin::reduce::OpContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 3
  %8 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %9 = bitcast i8** %8 to i64*
  %10 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 1
  %11 = bitcast %struct.TfLiteTensor** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load i64, i64* %9, align 8
  %13 = bitcast %"struct.tflite::ops::builtin::reduce::OpContext"* %3 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %21 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %20, align 8
  %22 = sext i32 %17 to i64
  %23 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %21, i64 %22
  br label %24

24:                                               ; preds = %19, %2
  %25 = phi %struct.TfLiteTensor* [ %23, %19 ], [ null, %2 ]
  store %struct.TfLiteTensor* %25, %struct.TfLiteTensor** %5, align 8
  %26 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %31 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %30, align 8
  %32 = sext i32 %27 to i64
  %33 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 %32
  br label %34

34:                                               ; preds = %29, %24
  %35 = phi %struct.TfLiteTensor* [ %33, %29 ], [ null, %24 ]
  store %struct.TfLiteTensor* %35, %struct.TfLiteTensor** %6, align 8
  %36 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %37 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %36, align 8
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %43 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %42, align 8
  %44 = sext i32 %39 to i64
  %45 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %43, i64 %44
  br label %46

46:                                               ; preds = %34, %41
  %47 = phi %struct.TfLiteTensor* [ %45, %41 ], [ null, %34 ]
  store %struct.TfLiteTensor* %47, %struct.TfLiteTensor** %7, align 8
  %48 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %25, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  switch i32 %49, label %60 [
    i32 1, label %50
    i32 2, label %52
    i32 4, label %54
    i32 3, label %56
    i32 9, label %58
  ]

50:                                               ; preds = %46
  %51 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIfEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, float 1.000000e+00, float (float, float)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIfEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlffE0_8__invokeEff) #16
  br label %60

52:                                               ; preds = %46
  %53 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIiEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, i32 1, i32 (i32, i32)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIiEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUliiE0_8__invokeEii) #16
  br label %60

54:                                               ; preds = %46
  %55 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIlEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, i64 1, i64 (i64, i64)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIlEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlllE0_8__invokeEll) #16
  br label %60

56:                                               ; preds = %46
  %57 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIhEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, i8 zeroext 1, i8 (i8, i8)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIhEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlhhE0_8__invokeEhh) #16
  br label %60

58:                                               ; preds = %46
  %59 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIaEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, i8 signext 1, i8 (i8, i8)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIaEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlaaE0_8__invokeEaa) #16
  br label %60

60:                                               ; preds = %46, %58, %56, %54, %52, %50
  %61 = phi i32 [ %59, %58 ], [ %57, %56 ], [ %55, %54 ], [ %53, %52 ], [ %51, %50 ], [ 1, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #16
  ret i32 %61
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin23Register_REDUCE_MAX_REFEv() local_unnamed_addr #7 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin23Register_REDUCE_MAX_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin6reduce11EvalGenericILNS2_10KernelTypeE0ELNS2_10ReduceTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"struct.tflite::ops::builtin::reduce::OpContext", align 8
  %4 = bitcast %"struct.tflite::ops::builtin::reduce::OpContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 3
  %8 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %9 = bitcast i8** %8 to i64*
  %10 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 1
  %11 = bitcast %struct.TfLiteTensor** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load i64, i64* %9, align 8
  %13 = bitcast %"struct.tflite::ops::builtin::reduce::OpContext"* %3 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %21 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %20, align 8
  %22 = sext i32 %17 to i64
  %23 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %21, i64 %22
  br label %24

24:                                               ; preds = %19, %2
  %25 = phi %struct.TfLiteTensor* [ %23, %19 ], [ null, %2 ]
  store %struct.TfLiteTensor* %25, %struct.TfLiteTensor** %5, align 8
  %26 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %31 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %30, align 8
  %32 = sext i32 %27 to i64
  %33 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 %32
  br label %34

34:                                               ; preds = %29, %24
  %35 = phi %struct.TfLiteTensor* [ %33, %29 ], [ null, %24 ]
  store %struct.TfLiteTensor* %35, %struct.TfLiteTensor** %6, align 8
  %36 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %37 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %36, align 8
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %43 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %42, align 8
  %44 = sext i32 %39 to i64
  %45 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %43, i64 %44
  br label %46

46:                                               ; preds = %34, %41
  %47 = phi %struct.TfLiteTensor* [ %45, %41 ], [ null, %34 ]
  store %struct.TfLiteTensor* %47, %struct.TfLiteTensor** %7, align 8
  %48 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %25, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  switch i32 %49, label %60 [
    i32 1, label %50
    i32 2, label %52
    i32 4, label %54
    i32 3, label %56
    i32 9, label %58
  ]

50:                                               ; preds = %46
  %51 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIfEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, float 0xC7EFFFFFE0000000, float (float, float)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIfEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlffE1_8__invokeEff) #16
  br label %60

52:                                               ; preds = %46
  %53 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIiEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, i32 -2147483648, i32 (i32, i32)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIiEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUliiE1_8__invokeEii) #16
  br label %60

54:                                               ; preds = %46
  %55 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIlEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, i64 -9223372036854775808, i64 (i64, i64)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIlEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlllE1_8__invokeEll) #16
  br label %60

56:                                               ; preds = %46
  %57 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIhEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, i8 zeroext 0, i8 (i8, i8)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIhEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlhhE1_8__invokeEhh) #16
  br label %60

58:                                               ; preds = %46
  %59 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIaEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, i8 signext -128, i8 (i8, i8)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIaEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlaaE1_8__invokeEaa) #16
  br label %60

60:                                               ; preds = %46, %58, %56, %54, %52, %50
  %61 = phi i32 [ %59, %58 ], [ %57, %56 ], [ %55, %54 ], [ %53, %52 ], [ %51, %50 ], [ 1, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #16
  ret i32 %61
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin23Register_REDUCE_MIN_REFEv() local_unnamed_addr #7 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin23Register_REDUCE_MIN_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin6reduce11EvalGenericILNS2_10KernelTypeE0ELNS2_10ReduceTypeE3EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"struct.tflite::ops::builtin::reduce::OpContext", align 8
  %4 = bitcast %"struct.tflite::ops::builtin::reduce::OpContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 3
  %8 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %9 = bitcast i8** %8 to i64*
  %10 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 1
  %11 = bitcast %struct.TfLiteTensor** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load i64, i64* %9, align 8
  %13 = bitcast %"struct.tflite::ops::builtin::reduce::OpContext"* %3 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %21 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %20, align 8
  %22 = sext i32 %17 to i64
  %23 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %21, i64 %22
  br label %24

24:                                               ; preds = %19, %2
  %25 = phi %struct.TfLiteTensor* [ %23, %19 ], [ null, %2 ]
  store %struct.TfLiteTensor* %25, %struct.TfLiteTensor** %5, align 8
  %26 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %31 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %30, align 8
  %32 = sext i32 %27 to i64
  %33 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 %32
  br label %34

34:                                               ; preds = %29, %24
  %35 = phi %struct.TfLiteTensor* [ %33, %29 ], [ null, %24 ]
  store %struct.TfLiteTensor* %35, %struct.TfLiteTensor** %6, align 8
  %36 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %37 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %36, align 8
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %43 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %42, align 8
  %44 = sext i32 %39 to i64
  %45 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %43, i64 %44
  br label %46

46:                                               ; preds = %34, %41
  %47 = phi %struct.TfLiteTensor* [ %45, %41 ], [ null, %34 ]
  store %struct.TfLiteTensor* %47, %struct.TfLiteTensor** %7, align 8
  %48 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %25, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  switch i32 %49, label %60 [
    i32 1, label %50
    i32 2, label %52
    i32 4, label %54
    i32 3, label %56
    i32 9, label %58
  ]

50:                                               ; preds = %46
  %51 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIfEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, float 0x47EFFFFFE0000000, float (float, float)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIfEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlffE2_8__invokeEff) #16
  br label %60

52:                                               ; preds = %46
  %53 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIiEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, i32 2147483647, i32 (i32, i32)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIiEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUliiE2_8__invokeEii) #16
  br label %60

54:                                               ; preds = %46
  %55 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIlEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, i64 9223372036854775807, i64 (i64, i64)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIlEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlllE2_8__invokeEll) #16
  br label %60

56:                                               ; preds = %46
  %57 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIhEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, i8 zeroext -1, i8 (i8, i8)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIhEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlhhE2_8__invokeEhh) #16
  br label %60

58:                                               ; preds = %46
  %59 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIaEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, i8 signext 127, i8 (i8, i8)* nonnull @_ZZN6tflite3ops7builtin6reduce8EvalTypeIaEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlaaE2_8__invokeEaa) #16
  br label %60

60:                                               ; preds = %46, %58, %56, %54, %52, %50
  %61 = phi i32 [ %59, %58 ], [ %57, %56 ], [ %55, %54 ], [ %53, %52 ], [ %51, %50 ], [ 1, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #16
  ret i32 %61
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin23Register_REDUCE_ANY_REFEv() local_unnamed_addr #7 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin23Register_REDUCE_ANY_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin6reduce11EvalGenericILNS2_10KernelTypeE0ELNS2_10ReduceTypeE4EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"struct.tflite::ops::builtin::reduce::OpContext", align 8
  %4 = bitcast %"struct.tflite::ops::builtin::reduce::OpContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 3
  %8 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %9 = bitcast i8** %8 to i64*
  %10 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %3, i64 0, i32 1
  %11 = bitcast %struct.TfLiteTensor** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load i64, i64* %9, align 8
  %13 = bitcast %"struct.tflite::ops::builtin::reduce::OpContext"* %3 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %21 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %20, align 8
  %22 = sext i32 %17 to i64
  %23 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %21, i64 %22
  br label %24

24:                                               ; preds = %19, %2
  %25 = phi %struct.TfLiteTensor* [ %23, %19 ], [ null, %2 ]
  store %struct.TfLiteTensor* %25, %struct.TfLiteTensor** %5, align 8
  %26 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %31 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %30, align 8
  %32 = sext i32 %27 to i64
  %33 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 %32
  br label %34

34:                                               ; preds = %29, %24
  %35 = phi %struct.TfLiteTensor* [ %33, %29 ], [ null, %24 ]
  store %struct.TfLiteTensor* %35, %struct.TfLiteTensor** %6, align 8
  %36 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %37 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %36, align 8
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %43 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %42, align 8
  %44 = sext i32 %39 to i64
  %45 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %43, i64 %44
  br label %46

46:                                               ; preds = %34, %41
  %47 = phi %struct.TfLiteTensor* [ %45, %41 ], [ null, %34 ]
  store %struct.TfLiteTensor* %47, %struct.TfLiteTensor** %7, align 8
  %48 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %25, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 6
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  %52 = call i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIbEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::reduce::OpContext"* nonnull %3, i1 zeroext false, i1 (i1, i1)* nonnull @"_ZZN6tflite3ops7builtin6reduce8EvalTypeIbEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEEN3$_08__invokeEbb") #16
  br label %53

53:                                               ; preds = %46, %51
  %54 = phi i32 [ %52, %51 ], [ 1, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #16
  ret i32 %54
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin13Register_MEANEv() local_unnamed_addr #7 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin17Register_MEAN_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin12Register_SUMEv() local_unnamed_addr #7 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin16Register_SUM_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin20Register_REDUCE_PRODEv() local_unnamed_addr #7 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin24Register_REDUCE_PROD_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin19Register_REDUCE_MAXEv() local_unnamed_addr #7 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin23Register_REDUCE_MAX_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin19Register_REDUCE_MINEv() local_unnamed_addr #7 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin23Register_REDUCE_MIN_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin19Register_REDUCE_ANYEv() local_unnamed_addr #7 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin23Register_REDUCE_ANY_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @"_ZZN6tflite3ops7builtin6reduce8EvalTypeIbEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEEN3$_08__invokeEbb"(i1 zeroext, i1 zeroext) #9 align 2 {
  %3 = or i1 %0, %1
  ret i1 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite13reference_ops13ReduceGenericIbEEbPKT_PKiiPS2_S6_iS6_lbPiS8_S2_PFS2_S2_S2_E(i8*, i32*, i32, i8*, i32*, i32, i32*, i64, i1 zeroext, i32*, i32*, i1 zeroext, i1 (i1, i1)*) local_unnamed_addr #6 comdat {
  %14 = zext i1 %11 to i8
  %15 = icmp sgt i32 %5, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %13
  %17 = zext i32 %5 to i64
  br label %22

18:                                               ; preds = %30
  %19 = icmp eq i64 %31, 0
  br i1 %19, label %34, label %20

20:                                               ; preds = %18, %13
  %21 = phi i64 [ %31, %18 ], [ 1, %13 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 %14, i64 %21, i1 false) #16
  br label %34

22:                                               ; preds = %30, %16
  %23 = phi i64 [ 0, %16 ], [ %32, %30 ]
  %24 = phi i64 [ 1, %16 ], [ %31, %30 ]
  %25 = getelementptr inbounds i32, i32* %4, i64 %23
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = udiv i64 -1, %27
  %29 = icmp ugt i64 %24, %28
  br i1 %29, label %212, label %30

30:                                               ; preds = %22
  %31 = mul i64 %24, %27
  %32 = add nuw nsw i64 %23, 1
  %33 = icmp eq i64 %32, %17
  br i1 %33, label %18, label %22

34:                                               ; preds = %18, %20
  %35 = icmp ne i32 %2, 0
  %36 = icmp sgt i64 %7, 0
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %77

38:                                               ; preds = %34, %71
  %39 = phi i32 [ %72, %71 ], [ 0, %34 ]
  %40 = phi i32 [ %73, %71 ], [ 0, %34 ]
  %41 = phi i32 [ %74, %71 ], [ 0, %34 ]
  %42 = phi i64 [ %75, %71 ], [ 0, %34 ]
  %43 = getelementptr inbounds i32, i32* %6, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %44, 0
  %46 = select i1 %45, i32 %2, i32 0
  %47 = add nsw i32 %46, %44
  %48 = icmp sgt i32 %47, -1
  %49 = icmp slt i32 %47, %2
  %50 = and i1 %48, %49
  br i1 %50, label %51, label %212

51:                                               ; preds = %38
  %52 = icmp sgt i32 %41, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = sext i32 %41 to i64
  br label %67

55:                                               ; preds = %51
  %56 = sext i32 %40 to i64
  %57 = load i32, i32* %10, align 4
  %58 = icmp eq i32 %57, %47
  br i1 %58, label %71, label %59

59:                                               ; preds = %55, %62
  %60 = phi i64 [ %66, %62 ], [ 1, %55 ]
  %61 = icmp slt i64 %60, %56
  br i1 %61, label %62, label %67

62:                                               ; preds = %59
  %63 = getelementptr inbounds i32, i32* %10, i64 %60
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, %47
  %66 = add nuw nsw i64 %60, 1
  br i1 %65, label %71, label %59

67:                                               ; preds = %59, %53
  %68 = phi i64 [ %54, %53 ], [ %56, %59 ]
  %69 = getelementptr inbounds i32, i32* %10, i64 %68
  store i32 %47, i32* %69, align 4
  %70 = add nsw i32 %39, 1
  br label %71

71:                                               ; preds = %62, %55, %67
  %72 = phi i32 [ %70, %67 ], [ %39, %55 ], [ %39, %62 ]
  %73 = phi i32 [ %70, %67 ], [ %40, %55 ], [ %40, %62 ]
  %74 = phi i32 [ %70, %67 ], [ %41, %55 ], [ %40, %62 ]
  %75 = add nuw nsw i64 %42, 1
  %76 = icmp eq i64 %75, %7
  br i1 %76, label %77, label %38

77:                                               ; preds = %71, %34
  %78 = phi i32 [ 0, %34 ], [ %72, %71 ]
  %79 = icmp sgt i32 %2, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %77
  %81 = zext i32 %2 to i64
  br label %86

82:                                               ; preds = %77
  %83 = bitcast i32* %9 to i8*
  %84 = zext i32 %2 to i64
  %85 = shl nuw nsw i64 %84, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %83, i8 0, i64 %85, i1 false) #16
  br label %86

86:                                               ; preds = %82, %80
  %87 = phi i64 [ %81, %80 ], [ %84, %82 ]
  %88 = icmp eq i32* %10, null
  %89 = icmp slt i32 %78, 1
  %90 = or i1 %88, %89
  %91 = zext i32 %78 to i64
  %92 = icmp eq i32 %2, 0
  %93 = sext i32 %2 to i64
  %94 = add nsw i64 %87, -1
  %95 = and i64 %87, 3
  %96 = icmp ult i64 %94, 3
  %97 = sub nsw i64 %87, %95
  %98 = icmp eq i64 %95, 0
  br label %99

99:                                               ; preds = %204, %86
  br i1 %79, label %100, label %189

100:                                              ; preds = %99
  br i1 %96, label %143, label %101

101:                                              ; preds = %100, %101
  %102 = phi i64 [ %140, %101 ], [ 0, %100 ]
  %103 = phi i64 [ %139, %101 ], [ 0, %100 ]
  %104 = phi i64 [ %141, %101 ], [ %97, %100 ]
  %105 = getelementptr inbounds i32, i32* %1, i64 %102
  %106 = load i32, i32* %105, align 4
  %107 = sext i32 %106 to i64
  %108 = mul i64 %103, %107
  %109 = getelementptr inbounds i32, i32* %9, i64 %102
  %110 = load i32, i32* %109, align 4
  %111 = sext i32 %110 to i64
  %112 = add i64 %108, %111
  %113 = or i64 %102, 1
  %114 = getelementptr inbounds i32, i32* %1, i64 %113
  %115 = load i32, i32* %114, align 4
  %116 = sext i32 %115 to i64
  %117 = mul i64 %112, %116
  %118 = getelementptr inbounds i32, i32* %9, i64 %113
  %119 = load i32, i32* %118, align 4
  %120 = sext i32 %119 to i64
  %121 = add i64 %117, %120
  %122 = or i64 %102, 2
  %123 = getelementptr inbounds i32, i32* %1, i64 %122
  %124 = load i32, i32* %123, align 4
  %125 = sext i32 %124 to i64
  %126 = mul i64 %121, %125
  %127 = getelementptr inbounds i32, i32* %9, i64 %122
  %128 = load i32, i32* %127, align 4
  %129 = sext i32 %128 to i64
  %130 = add i64 %126, %129
  %131 = or i64 %102, 3
  %132 = getelementptr inbounds i32, i32* %1, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = sext i32 %133 to i64
  %135 = mul i64 %130, %134
  %136 = getelementptr inbounds i32, i32* %9, i64 %131
  %137 = load i32, i32* %136, align 4
  %138 = sext i32 %137 to i64
  %139 = add i64 %135, %138
  %140 = add nuw nsw i64 %102, 4
  %141 = add i64 %104, -4
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %101

143:                                              ; preds = %101, %100
  %144 = phi i64 [ undef, %100 ], [ %139, %101 ]
  %145 = phi i64 [ 0, %100 ], [ %140, %101 ]
  %146 = phi i64 [ 0, %100 ], [ %139, %101 ]
  br i1 %98, label %162, label %147

147:                                              ; preds = %143, %147
  %148 = phi i64 [ %159, %147 ], [ %145, %143 ]
  %149 = phi i64 [ %158, %147 ], [ %146, %143 ]
  %150 = phi i64 [ %160, %147 ], [ %95, %143 ]
  %151 = getelementptr inbounds i32, i32* %1, i64 %148
  %152 = load i32, i32* %151, align 4
  %153 = sext i32 %152 to i64
  %154 = mul i64 %149, %153
  %155 = getelementptr inbounds i32, i32* %9, i64 %148
  %156 = load i32, i32* %155, align 4
  %157 = sext i32 %156 to i64
  %158 = add i64 %154, %157
  %159 = add nuw nsw i64 %148, 1
  %160 = add i64 %150, -1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %147, !llvm.loop !231

162:                                              ; preds = %147, %143
  %163 = phi i64 [ %144, %143 ], [ %158, %147 ]
  br label %164

164:                                              ; preds = %162, %185
  %165 = phi i64 [ %187, %185 ], [ 0, %162 ]
  %166 = phi i64 [ %186, %185 ], [ 0, %162 ]
  br i1 %90, label %176, label %169

167:                                              ; preds = %169
  %168 = icmp eq i64 %175, %91
  br i1 %168, label %176, label %169

169:                                              ; preds = %164, %167
  %170 = phi i64 [ %175, %167 ], [ 0, %164 ]
  %171 = getelementptr inbounds i32, i32* %10, i64 %170
  %172 = load i32, i32* %171, align 4
  %173 = zext i32 %172 to i64
  %174 = icmp eq i64 %165, %173
  %175 = add nuw nsw i64 %170, 1
  br i1 %174, label %185, label %167

176:                                              ; preds = %167, %164
  %177 = getelementptr inbounds i32, i32* %1, i64 %165
  %178 = load i32, i32* %177, align 4
  %179 = sext i32 %178 to i64
  %180 = mul i64 %166, %179
  %181 = getelementptr inbounds i32, i32* %9, i64 %165
  %182 = load i32, i32* %181, align 4
  %183 = sext i32 %182 to i64
  %184 = add i64 %180, %183
  br label %185

185:                                              ; preds = %169, %176
  %186 = phi i64 [ %184, %176 ], [ %166, %169 ]
  %187 = add nuw nsw i64 %165, 1
  %188 = icmp eq i64 %187, %87
  br i1 %188, label %189, label %164

189:                                              ; preds = %185, %99
  %190 = phi i64 [ 0, %99 ], [ %163, %185 ]
  %191 = phi i64 [ 0, %99 ], [ %186, %185 ]
  %192 = getelementptr inbounds i8, i8* %3, i64 %191
  %193 = load i8, i8* %192, align 1, !range !6
  %194 = icmp ne i8 %193, 0
  %195 = getelementptr inbounds i8, i8* %0, i64 %190
  %196 = load i8, i8* %195, align 1, !range !6
  %197 = icmp ne i8 %196, 0
  %198 = tail call zeroext i1 %12(i1 zeroext %194, i1 zeroext %197) #16
  %199 = zext i1 %198 to i8
  store i8 %199, i8* %192, align 1
  br i1 %92, label %212, label %200

200:                                              ; preds = %189, %204
  %201 = phi i64 [ %202, %204 ], [ %93, %189 ]
  %202 = add nsw i64 %201, -1
  %203 = icmp sgt i64 %201, 0
  br i1 %203, label %204, label %212

204:                                              ; preds = %200
  %205 = getelementptr inbounds i32, i32* %9, i64 %202
  %206 = load i32, i32* %205, align 4
  %207 = add nsw i32 %206, 1
  %208 = getelementptr inbounds i32, i32* %1, i64 %202
  %209 = load i32, i32* %208, align 4
  %210 = icmp eq i32 %209, %207
  %211 = select i1 %210, i32 0, i32 %207
  store i32 %211, i32* %205, align 4
  br i1 %210, label %200, label %99

212:                                              ; preds = %22, %38, %189, %200
  %213 = phi i1 [ true, %200 ], [ true, %189 ], [ false, %38 ], [ false, %22 ]
  ret i1 %213
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.minnum.f32(float, float) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.maxnum.f32(float, float) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIfEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::reduce::OpContext"*, float, float (float, float)*) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 2
  %7 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %6, align 8
  %8 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %9 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %8, align 8
  %10 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %82

13:                                               ; preds = %5
  %14 = sext i32 %11 to i64
  %15 = add nsw i64 %14, -1
  %16 = and i64 %14, 7
  %17 = icmp ult i64 %15, 7
  br i1 %17, label %66, label %18

18:                                               ; preds = %13
  %19 = sub nsw i64 %14, %16
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i64 [ 0, %18 ], [ %63, %20 ]
  %22 = phi i64 [ 1, %18 ], [ %62, %20 ]
  %23 = phi i64 [ %19, %18 ], [ %64, %20 ]
  %24 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %21
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = mul nsw i64 %22, %26
  %28 = or i64 %21, 1
  %29 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = mul nsw i64 %27, %31
  %33 = or i64 %21, 2
  %34 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = mul nsw i64 %32, %36
  %38 = or i64 %21, 3
  %39 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %40 to i64
  %42 = mul nsw i64 %37, %41
  %43 = or i64 %21, 4
  %44 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  %47 = mul nsw i64 %42, %46
  %48 = or i64 %21, 5
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = mul nsw i64 %47, %51
  %53 = or i64 %21, 6
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = mul nsw i64 %52, %56
  %58 = or i64 %21, 7
  %59 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %60 to i64
  %62 = mul nsw i64 %57, %61
  %63 = add nuw nsw i64 %21, 8
  %64 = add i64 %23, -8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %20

66:                                               ; preds = %20, %13
  %67 = phi i64 [ undef, %13 ], [ %62, %20 ]
  %68 = phi i64 [ 0, %13 ], [ %63, %20 ]
  %69 = phi i64 [ 1, %13 ], [ %62, %20 ]
  %70 = icmp eq i64 %16, 0
  br i1 %70, label %82, label %71

71:                                               ; preds = %66, %71
  %72 = phi i64 [ %79, %71 ], [ %68, %66 ]
  %73 = phi i64 [ %78, %71 ], [ %69, %66 ]
  %74 = phi i64 [ %80, %71 ], [ %16, %66 ]
  %75 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %72
  %76 = load i32, i32* %75, align 4
  %77 = sext i32 %76 to i64
  %78 = mul nsw i64 %73, %77
  %79 = add nuw nsw i64 %72, 1
  %80 = add i64 %74, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %71, !llvm.loop !232

82:                                               ; preds = %66, %71, %5
  %83 = phi i64 [ 1, %5 ], [ %67, %66 ], [ %78, %71 ]
  %84 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %85 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %84, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp slt i32 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %91 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %90, align 8
  %92 = sext i32 %87 to i64
  %93 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %91, i64 %92
  br label %94

94:                                               ; preds = %82, %89
  %95 = phi %struct.TfLiteTensor* [ %93, %89 ], [ null, %82 ]
  %96 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 1
  %97 = load i32, i32* %96, align 4
  %98 = icmp slt i32 %97, 0
  br i1 %98, label %104, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %101 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %100, align 8
  %102 = sext i32 %97 to i64
  %103 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %101, i64 %102
  br label %104

104:                                              ; preds = %94, %99
  %105 = phi %struct.TfLiteTensor* [ %103, %99 ], [ null, %94 ]
  %106 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 3
  %107 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %106, align 8
  %108 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %107, i64 0, i32 4
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 4
  br i1 %110, label %111, label %201

111:                                              ; preds = %104
  %112 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #16
  %113 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %6, align 8
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %113, i64 0, i32 2
  %115 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %114, align 8
  %116 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %119, label %191

119:                                              ; preds = %111
  %120 = sext i32 %117 to i64
  %121 = add nsw i64 %120, -1
  %122 = and i64 %120, 7
  %123 = icmp ult i64 %121, 7
  br i1 %123, label %172, label %124

124:                                              ; preds = %119
  %125 = sub nsw i64 %120, %122
  br label %126

126:                                              ; preds = %126, %124
  %127 = phi i64 [ 0, %124 ], [ %169, %126 ]
  %128 = phi i64 [ 1, %124 ], [ %168, %126 ]
  %129 = phi i64 [ %125, %124 ], [ %170, %126 ]
  %130 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %127
  %131 = load i32, i32* %130, align 4
  %132 = sext i32 %131 to i64
  %133 = mul nsw i64 %128, %132
  %134 = or i64 %127, 1
  %135 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = sext i32 %136 to i64
  %138 = mul nsw i64 %133, %137
  %139 = or i64 %127, 2
  %140 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = sext i32 %141 to i64
  %143 = mul nsw i64 %138, %142
  %144 = or i64 %127, 3
  %145 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = sext i32 %146 to i64
  %148 = mul nsw i64 %143, %147
  %149 = or i64 %127, 4
  %150 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = sext i32 %151 to i64
  %153 = mul nsw i64 %148, %152
  %154 = or i64 %127, 5
  %155 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = sext i32 %156 to i64
  %158 = mul nsw i64 %153, %157
  %159 = or i64 %127, 6
  %160 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = sext i32 %161 to i64
  %163 = mul nsw i64 %158, %162
  %164 = or i64 %127, 7
  %165 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %164
  %166 = load i32, i32* %165, align 4
  %167 = sext i32 %166 to i64
  %168 = mul nsw i64 %163, %167
  %169 = add nuw nsw i64 %127, 8
  %170 = add i64 %129, -8
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %126

172:                                              ; preds = %126, %119
  %173 = phi i64 [ undef, %119 ], [ %168, %126 ]
  %174 = phi i64 [ 0, %119 ], [ %169, %126 ]
  %175 = phi i64 [ 1, %119 ], [ %168, %126 ]
  %176 = icmp eq i64 %122, 0
  br i1 %176, label %188, label %177

177:                                              ; preds = %172, %177
  %178 = phi i64 [ %185, %177 ], [ %174, %172 ]
  %179 = phi i64 [ %184, %177 ], [ %175, %172 ]
  %180 = phi i64 [ %186, %177 ], [ %122, %172 ]
  %181 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %178
  %182 = load i32, i32* %181, align 4
  %183 = sext i32 %182 to i64
  %184 = mul nsw i64 %179, %183
  %185 = add nuw nsw i64 %178, 1
  %186 = add i64 %180, -1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %177, !llvm.loop !233

188:                                              ; preds = %177, %172
  %189 = phi i64 [ %173, %172 ], [ %184, %177 ]
  %190 = trunc i64 %189 to i32
  br label %191

191:                                              ; preds = %111, %188
  %192 = phi i32 [ 1, %111 ], [ %190, %188 ]
  %193 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %112, i64 0, i32 1, i64 0
  store i32 %192, i32* %193, align 4
  %194 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %195 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %194, align 8
  %196 = tail call i32 %195(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %105, %struct.TfLiteIntArray* %112) #16
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %282

198:                                              ; preds = %191
  %199 = tail call i32 @_ZN6tflite3ops7builtin6reduce18ResizeOutputTensorEP13TfLiteContextPNS2_9OpContextE(%struct.TfLiteContext* %0, %"struct.tflite::ops::builtin::reduce::OpContext"* %2)
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %282

201:                                              ; preds = %198, %104
  %202 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 1
  %203 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %202, align 8
  %204 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 0
  %205 = load i32, i32* %204, align 8
  %206 = icmp eq i32 %205, 3
  br i1 %206, label %207, label %228

207:                                              ; preds = %201
  %208 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 3, i32 0
  %209 = load float, float* %208, align 8
  %210 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %106, align 8
  %211 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %210, i64 0, i32 3, i32 0
  %212 = load float, float* %211, align 8
  %213 = fcmp une float %209, %212
  br i1 %213, label %214, label %219

214:                                              ; preds = %207
  %215 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %216 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %215, align 8
  %217 = fpext float %209 to double
  %218 = fpext float %212 to double
  tail call void (%struct.TfLiteContext*, i8*, ...) %216(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 521, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0), double %217, double %218) #16
  br label %282

219:                                              ; preds = %207
  %220 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 3, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %210, i64 0, i32 3, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %221, %223
  br i1 %224, label %228, label %225

225:                                              ; preds = %219
  %226 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %227 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %226, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %227(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 523, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0), i32 %221, i32 %223) #16
  br label %282

228:                                              ; preds = %219, %201
  %229 = icmp eq %struct.TfLiteTensor* %203, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %228
  %231 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 1
  %232 = bitcast %union.TfLitePtrUnion* %231 to float**
  %233 = load float*, float** %232, align 8
  br label %234

234:                                              ; preds = %228, %230
  %235 = phi float* [ %233, %230 ], [ null, %228 ]
  %236 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 2
  %237 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %236, align 8
  %238 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %237, i64 0, i32 1, i64 0
  %239 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %237, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %106, align 8
  %242 = icmp eq %struct.TfLiteTensor* %241, null
  br i1 %242, label %247, label %243

243:                                              ; preds = %234
  %244 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %241, i64 0, i32 1
  %245 = bitcast %union.TfLitePtrUnion* %244 to float**
  %246 = load float*, float** %245, align 8
  br label %247

247:                                              ; preds = %234, %243
  %248 = phi float* [ %246, %243 ], [ null, %234 ]
  %249 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %241, i64 0, i32 2
  %250 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %249, align 8
  %251 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %250, i64 0, i32 1, i64 0
  %252 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %250, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %6, align 8
  %255 = icmp eq %struct.TfLiteTensor* %254, null
  br i1 %255, label %259, label %256

256:                                              ; preds = %247
  %257 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %254, i64 0, i32 1, i32 0
  %258 = load i32*, i32** %257, align 8
  br label %259

259:                                              ; preds = %247, %256
  %260 = phi i32* [ %258, %256 ], [ null, %247 ]
  %261 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 0
  %262 = load %struct.TfLiteReducerParams*, %struct.TfLiteReducerParams** %261, align 8
  %263 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %262, i64 0, i32 0
  %264 = load i8, i8* %263, align 1, !range !6
  %265 = icmp ne i8 %264, 0
  %266 = icmp eq %struct.TfLiteTensor* %95, null
  br i1 %266, label %270, label %267

267:                                              ; preds = %259
  %268 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %95, i64 0, i32 1, i32 0
  %269 = load i32*, i32** %268, align 8
  br label %270

270:                                              ; preds = %259, %267
  %271 = phi i32* [ %269, %267 ], [ null, %259 ]
  %272 = icmp eq %struct.TfLiteTensor* %105, null
  br i1 %272, label %276, label %273

273:                                              ; preds = %270
  %274 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %105, i64 0, i32 1, i32 0
  %275 = load i32*, i32** %274, align 8
  br label %276

276:                                              ; preds = %270, %273
  %277 = phi i32* [ %275, %273 ], [ null, %270 ]
  %278 = tail call zeroext i1 @_ZN6tflite13reference_ops13ReduceGenericIfEEbPKT_PKiiPS2_S6_iS6_lbPiS8_S2_PFS2_S2_S2_E(float* %235, i32* %238, i32 %240, float* %248, i32* %251, i32 %253, i32* %260, i64 %83, i1 zeroext %265, i32* %271, i32* %277, float %3, float (float, float)* %4)
  br i1 %278, label %282, label %279

279:                                              ; preds = %276
  %280 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %281 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %280, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %281(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 533, i8* getelementptr inbounds ([401 x i8], [401 x i8]* @.str.23, i64 0, i64 0)) #16
  br label %282

282:                                              ; preds = %276, %198, %191, %279, %225, %214
  %283 = phi i32 [ 1, %214 ], [ 1, %225 ], [ 1, %279 ], [ %199, %198 ], [ %196, %191 ], [ 0, %276 ]
  ret i32 %283
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite13reference_ops13ReduceGenericIfEEbPKT_PKiiPS2_S6_iS6_lbPiS8_S2_PFS2_S2_S2_E(float*, i32*, i32, float*, i32*, i32, i32*, i64, i1 zeroext, i32*, i32*, float, float (float, float)*) local_unnamed_addr #6 comdat {
  %14 = icmp sgt i32 %5, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %13
  %16 = zext i32 %5 to i64
  br label %97

17:                                               ; preds = %105
  %18 = icmp eq i64 %106, 0
  br i1 %18, label %114, label %19

19:                                               ; preds = %17, %13
  %20 = phi i64 [ %106, %17 ], [ 1, %13 ]
  %21 = icmp ult i64 %20, 8
  br i1 %21, label %22, label %24

22:                                               ; preds = %95, %19
  %23 = phi i64 [ 0, %19 ], [ %25, %95 ]
  br label %109

24:                                               ; preds = %19
  %25 = and i64 %20, -8
  %26 = insertelement <4 x float> undef, float %11, i32 0
  %27 = shufflevector <4 x float> %26, <4 x float> undef, <4 x i32> zeroinitializer
  %28 = insertelement <4 x float> undef, float %11, i32 0
  %29 = shufflevector <4 x float> %28, <4 x float> undef, <4 x i32> zeroinitializer
  %30 = add i64 %25, -8
  %31 = lshr exact i64 %30, 3
  %32 = add nuw nsw i64 %31, 1
  %33 = and i64 %32, 7
  %34 = icmp ult i64 %30, 56
  br i1 %34, label %82, label %35

35:                                               ; preds = %24
  %36 = sub nsw i64 %32, %33
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i64 [ 0, %35 ], [ %79, %37 ]
  %39 = phi i64 [ %36, %35 ], [ %80, %37 ]
  %40 = getelementptr inbounds float, float* %3, i64 %38
  %41 = bitcast float* %40 to <4 x float>*
  store <4 x float> %27, <4 x float>* %41, align 4
  %42 = getelementptr inbounds float, float* %40, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  store <4 x float> %29, <4 x float>* %43, align 4
  %44 = or i64 %38, 8
  %45 = getelementptr inbounds float, float* %3, i64 %44
  %46 = bitcast float* %45 to <4 x float>*
  store <4 x float> %27, <4 x float>* %46, align 4
  %47 = getelementptr inbounds float, float* %45, i64 4
  %48 = bitcast float* %47 to <4 x float>*
  store <4 x float> %29, <4 x float>* %48, align 4
  %49 = or i64 %38, 16
  %50 = getelementptr inbounds float, float* %3, i64 %49
  %51 = bitcast float* %50 to <4 x float>*
  store <4 x float> %27, <4 x float>* %51, align 4
  %52 = getelementptr inbounds float, float* %50, i64 4
  %53 = bitcast float* %52 to <4 x float>*
  store <4 x float> %29, <4 x float>* %53, align 4
  %54 = or i64 %38, 24
  %55 = getelementptr inbounds float, float* %3, i64 %54
  %56 = bitcast float* %55 to <4 x float>*
  store <4 x float> %27, <4 x float>* %56, align 4
  %57 = getelementptr inbounds float, float* %55, i64 4
  %58 = bitcast float* %57 to <4 x float>*
  store <4 x float> %29, <4 x float>* %58, align 4
  %59 = or i64 %38, 32
  %60 = getelementptr inbounds float, float* %3, i64 %59
  %61 = bitcast float* %60 to <4 x float>*
  store <4 x float> %27, <4 x float>* %61, align 4
  %62 = getelementptr inbounds float, float* %60, i64 4
  %63 = bitcast float* %62 to <4 x float>*
  store <4 x float> %29, <4 x float>* %63, align 4
  %64 = or i64 %38, 40
  %65 = getelementptr inbounds float, float* %3, i64 %64
  %66 = bitcast float* %65 to <4 x float>*
  store <4 x float> %27, <4 x float>* %66, align 4
  %67 = getelementptr inbounds float, float* %65, i64 4
  %68 = bitcast float* %67 to <4 x float>*
  store <4 x float> %29, <4 x float>* %68, align 4
  %69 = or i64 %38, 48
  %70 = getelementptr inbounds float, float* %3, i64 %69
  %71 = bitcast float* %70 to <4 x float>*
  store <4 x float> %27, <4 x float>* %71, align 4
  %72 = getelementptr inbounds float, float* %70, i64 4
  %73 = bitcast float* %72 to <4 x float>*
  store <4 x float> %29, <4 x float>* %73, align 4
  %74 = or i64 %38, 56
  %75 = getelementptr inbounds float, float* %3, i64 %74
  %76 = bitcast float* %75 to <4 x float>*
  store <4 x float> %27, <4 x float>* %76, align 4
  %77 = getelementptr inbounds float, float* %75, i64 4
  %78 = bitcast float* %77 to <4 x float>*
  store <4 x float> %29, <4 x float>* %78, align 4
  %79 = add i64 %38, 64
  %80 = add i64 %39, -8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %37, !llvm.loop !234

82:                                               ; preds = %37, %24
  %83 = phi i64 [ 0, %24 ], [ %79, %37 ]
  %84 = icmp eq i64 %33, 0
  br i1 %84, label %95, label %85

85:                                               ; preds = %82, %85
  %86 = phi i64 [ %92, %85 ], [ %83, %82 ]
  %87 = phi i64 [ %93, %85 ], [ %33, %82 ]
  %88 = getelementptr inbounds float, float* %3, i64 %86
  %89 = bitcast float* %88 to <4 x float>*
  store <4 x float> %27, <4 x float>* %89, align 4
  %90 = getelementptr inbounds float, float* %88, i64 4
  %91 = bitcast float* %90 to <4 x float>*
  store <4 x float> %29, <4 x float>* %91, align 4
  %92 = add i64 %86, 8
  %93 = add i64 %87, -1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %85, !llvm.loop !235

95:                                               ; preds = %85, %82
  %96 = icmp eq i64 %20, %25
  br i1 %96, label %114, label %22

97:                                               ; preds = %105, %15
  %98 = phi i64 [ 0, %15 ], [ %107, %105 ]
  %99 = phi i64 [ 1, %15 ], [ %106, %105 ]
  %100 = getelementptr inbounds i32, i32* %4, i64 %98
  %101 = load i32, i32* %100, align 4
  %102 = sext i32 %101 to i64
  %103 = udiv i64 -1, %102
  %104 = icmp ugt i64 %99, %103
  br i1 %104, label %289, label %105

105:                                              ; preds = %97
  %106 = mul i64 %99, %102
  %107 = add nuw nsw i64 %98, 1
  %108 = icmp eq i64 %107, %16
  br i1 %108, label %17, label %97

109:                                              ; preds = %22, %109
  %110 = phi i64 [ %112, %109 ], [ %23, %22 ]
  %111 = getelementptr inbounds float, float* %3, i64 %110
  store float %11, float* %111, align 4
  %112 = add nuw i64 %110, 1
  %113 = icmp eq i64 %112, %20
  br i1 %113, label %114, label %109, !llvm.loop !236

114:                                              ; preds = %109, %95, %17
  %115 = icmp ne i32 %2, 0
  %116 = icmp sgt i64 %7, 0
  %117 = and i1 %115, %116
  br i1 %117, label %118, label %157

118:                                              ; preds = %114, %151
  %119 = phi i32 [ %152, %151 ], [ 0, %114 ]
  %120 = phi i32 [ %153, %151 ], [ 0, %114 ]
  %121 = phi i32 [ %154, %151 ], [ 0, %114 ]
  %122 = phi i64 [ %155, %151 ], [ 0, %114 ]
  %123 = getelementptr inbounds i32, i32* %6, i64 %122
  %124 = load i32, i32* %123, align 4
  %125 = icmp slt i32 %124, 0
  %126 = select i1 %125, i32 %2, i32 0
  %127 = add nsw i32 %126, %124
  %128 = icmp sgt i32 %127, -1
  %129 = icmp slt i32 %127, %2
  %130 = and i1 %128, %129
  br i1 %130, label %131, label %289

131:                                              ; preds = %118
  %132 = icmp sgt i32 %121, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %131
  %134 = sext i32 %121 to i64
  br label %147

135:                                              ; preds = %131
  %136 = sext i32 %120 to i64
  %137 = load i32, i32* %10, align 4
  %138 = icmp eq i32 %137, %127
  br i1 %138, label %151, label %139

139:                                              ; preds = %135, %142
  %140 = phi i64 [ %146, %142 ], [ 1, %135 ]
  %141 = icmp slt i64 %140, %136
  br i1 %141, label %142, label %147

142:                                              ; preds = %139
  %143 = getelementptr inbounds i32, i32* %10, i64 %140
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, %127
  %146 = add nuw nsw i64 %140, 1
  br i1 %145, label %151, label %139

147:                                              ; preds = %139, %133
  %148 = phi i64 [ %134, %133 ], [ %136, %139 ]
  %149 = getelementptr inbounds i32, i32* %10, i64 %148
  store i32 %127, i32* %149, align 4
  %150 = add nsw i32 %119, 1
  br label %151

151:                                              ; preds = %142, %135, %147
  %152 = phi i32 [ %150, %147 ], [ %119, %135 ], [ %119, %142 ]
  %153 = phi i32 [ %150, %147 ], [ %120, %135 ], [ %120, %142 ]
  %154 = phi i32 [ %150, %147 ], [ %121, %135 ], [ %120, %142 ]
  %155 = add nuw nsw i64 %122, 1
  %156 = icmp eq i64 %155, %7
  br i1 %156, label %157, label %118

157:                                              ; preds = %151, %114
  %158 = phi i32 [ 0, %114 ], [ %152, %151 ]
  %159 = icmp sgt i32 %2, 0
  br i1 %159, label %162, label %160

160:                                              ; preds = %157
  %161 = zext i32 %2 to i64
  br label %166

162:                                              ; preds = %157
  %163 = bitcast i32* %9 to i8*
  %164 = zext i32 %2 to i64
  %165 = shl nuw nsw i64 %164, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %163, i8 0, i64 %165, i1 false) #16
  br label %166

166:                                              ; preds = %162, %160
  %167 = phi i64 [ %161, %160 ], [ %164, %162 ]
  %168 = icmp eq i32* %10, null
  %169 = icmp slt i32 %158, 1
  %170 = or i1 %168, %169
  %171 = zext i32 %158 to i64
  %172 = icmp eq i32 %2, 0
  %173 = sext i32 %2 to i64
  %174 = add nsw i64 %167, -1
  %175 = and i64 %167, 3
  %176 = icmp ult i64 %174, 3
  %177 = sub nsw i64 %167, %175
  %178 = icmp eq i64 %175, 0
  br label %179

179:                                              ; preds = %281, %166
  br i1 %159, label %180, label %269

180:                                              ; preds = %179
  br i1 %176, label %223, label %181

181:                                              ; preds = %180, %181
  %182 = phi i64 [ %220, %181 ], [ 0, %180 ]
  %183 = phi i64 [ %219, %181 ], [ 0, %180 ]
  %184 = phi i64 [ %221, %181 ], [ %177, %180 ]
  %185 = getelementptr inbounds i32, i32* %1, i64 %182
  %186 = load i32, i32* %185, align 4
  %187 = sext i32 %186 to i64
  %188 = mul i64 %183, %187
  %189 = getelementptr inbounds i32, i32* %9, i64 %182
  %190 = load i32, i32* %189, align 4
  %191 = sext i32 %190 to i64
  %192 = add i64 %188, %191
  %193 = or i64 %182, 1
  %194 = getelementptr inbounds i32, i32* %1, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = sext i32 %195 to i64
  %197 = mul i64 %192, %196
  %198 = getelementptr inbounds i32, i32* %9, i64 %193
  %199 = load i32, i32* %198, align 4
  %200 = sext i32 %199 to i64
  %201 = add i64 %197, %200
  %202 = or i64 %182, 2
  %203 = getelementptr inbounds i32, i32* %1, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = sext i32 %204 to i64
  %206 = mul i64 %201, %205
  %207 = getelementptr inbounds i32, i32* %9, i64 %202
  %208 = load i32, i32* %207, align 4
  %209 = sext i32 %208 to i64
  %210 = add i64 %206, %209
  %211 = or i64 %182, 3
  %212 = getelementptr inbounds i32, i32* %1, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = sext i32 %213 to i64
  %215 = mul i64 %210, %214
  %216 = getelementptr inbounds i32, i32* %9, i64 %211
  %217 = load i32, i32* %216, align 4
  %218 = sext i32 %217 to i64
  %219 = add i64 %215, %218
  %220 = add nuw nsw i64 %182, 4
  %221 = add i64 %184, -4
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %181

223:                                              ; preds = %181, %180
  %224 = phi i64 [ undef, %180 ], [ %219, %181 ]
  %225 = phi i64 [ 0, %180 ], [ %220, %181 ]
  %226 = phi i64 [ 0, %180 ], [ %219, %181 ]
  br i1 %178, label %242, label %227

227:                                              ; preds = %223, %227
  %228 = phi i64 [ %239, %227 ], [ %225, %223 ]
  %229 = phi i64 [ %238, %227 ], [ %226, %223 ]
  %230 = phi i64 [ %240, %227 ], [ %175, %223 ]
  %231 = getelementptr inbounds i32, i32* %1, i64 %228
  %232 = load i32, i32* %231, align 4
  %233 = sext i32 %232 to i64
  %234 = mul i64 %229, %233
  %235 = getelementptr inbounds i32, i32* %9, i64 %228
  %236 = load i32, i32* %235, align 4
  %237 = sext i32 %236 to i64
  %238 = add i64 %234, %237
  %239 = add nuw nsw i64 %228, 1
  %240 = add i64 %230, -1
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %242, label %227, !llvm.loop !237

242:                                              ; preds = %227, %223
  %243 = phi i64 [ %224, %223 ], [ %238, %227 ]
  br label %244

244:                                              ; preds = %242, %265
  %245 = phi i64 [ %267, %265 ], [ 0, %242 ]
  %246 = phi i64 [ %266, %265 ], [ 0, %242 ]
  br i1 %170, label %256, label %249

247:                                              ; preds = %249
  %248 = icmp eq i64 %255, %171
  br i1 %248, label %256, label %249

249:                                              ; preds = %244, %247
  %250 = phi i64 [ %255, %247 ], [ 0, %244 ]
  %251 = getelementptr inbounds i32, i32* %10, i64 %250
  %252 = load i32, i32* %251, align 4
  %253 = zext i32 %252 to i64
  %254 = icmp eq i64 %245, %253
  %255 = add nuw nsw i64 %250, 1
  br i1 %254, label %265, label %247

256:                                              ; preds = %247, %244
  %257 = getelementptr inbounds i32, i32* %1, i64 %245
  %258 = load i32, i32* %257, align 4
  %259 = sext i32 %258 to i64
  %260 = mul i64 %246, %259
  %261 = getelementptr inbounds i32, i32* %9, i64 %245
  %262 = load i32, i32* %261, align 4
  %263 = sext i32 %262 to i64
  %264 = add i64 %260, %263
  br label %265

265:                                              ; preds = %249, %256
  %266 = phi i64 [ %264, %256 ], [ %246, %249 ]
  %267 = add nuw nsw i64 %245, 1
  %268 = icmp eq i64 %267, %167
  br i1 %268, label %269, label %244

269:                                              ; preds = %265, %179
  %270 = phi i64 [ 0, %179 ], [ %243, %265 ]
  %271 = phi i64 [ 0, %179 ], [ %266, %265 ]
  %272 = getelementptr inbounds float, float* %3, i64 %271
  %273 = load float, float* %272, align 4
  %274 = getelementptr inbounds float, float* %0, i64 %270
  %275 = load float, float* %274, align 4
  %276 = tail call float %12(float %273, float %275) #16
  store float %276, float* %272, align 4
  br i1 %172, label %289, label %277

277:                                              ; preds = %269, %281
  %278 = phi i64 [ %279, %281 ], [ %173, %269 ]
  %279 = add nsw i64 %278, -1
  %280 = icmp sgt i64 %278, 0
  br i1 %280, label %281, label %289

281:                                              ; preds = %277
  %282 = getelementptr inbounds i32, i32* %9, i64 %279
  %283 = load i32, i32* %282, align 4
  %284 = add nsw i32 %283, 1
  %285 = getelementptr inbounds i32, i32* %1, i64 %279
  %286 = load i32, i32* %285, align 4
  %287 = icmp eq i32 %286, %284
  %288 = select i1 %287, i32 0, i32 %284
  store i32 %288, i32* %282, align 4
  br i1 %287, label %277, label %179

289:                                              ; preds = %97, %118, %269, %277
  %290 = phi i1 [ true, %277 ], [ true, %269 ], [ false, %118 ], [ false, %97 ]
  ret i1 %290
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden float @_ZZN6tflite3ops7builtin6reduce8EvalTypeIfEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlffE_8__invokeEff(float, float) #6 comdat align 2 {
  %3 = fadd float %0, %1
  ret float %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden float @_ZZN6tflite3ops7builtin6reduce8EvalTypeIfEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlffE0_8__invokeEff(float, float) #6 comdat align 2 {
  %3 = fmul float %0, %1
  ret float %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden float @_ZZN6tflite3ops7builtin6reduce8EvalTypeIfEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlffE1_8__invokeEff(float, float) #6 comdat align 2 {
  %3 = fcmp ogt float %1, %0
  %4 = select i1 %3, float %1, float %0
  ret float %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden float @_ZZN6tflite3ops7builtin6reduce8EvalTypeIfEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlffE2_8__invokeEff(float, float) #6 comdat align 2 {
  %3 = fcmp olt float %1, %0
  %4 = select i1 %3, float %1, float %0
  ret float %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIiEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::reduce::OpContext"*, i32, i32 (i32, i32)*) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 2
  %7 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %6, align 8
  %8 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %9 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %8, align 8
  %10 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %82

13:                                               ; preds = %5
  %14 = sext i32 %11 to i64
  %15 = add nsw i64 %14, -1
  %16 = and i64 %14, 7
  %17 = icmp ult i64 %15, 7
  br i1 %17, label %66, label %18

18:                                               ; preds = %13
  %19 = sub nsw i64 %14, %16
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i64 [ 0, %18 ], [ %63, %20 ]
  %22 = phi i64 [ 1, %18 ], [ %62, %20 ]
  %23 = phi i64 [ %19, %18 ], [ %64, %20 ]
  %24 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %21
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = mul nsw i64 %22, %26
  %28 = or i64 %21, 1
  %29 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = mul nsw i64 %27, %31
  %33 = or i64 %21, 2
  %34 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = mul nsw i64 %32, %36
  %38 = or i64 %21, 3
  %39 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %40 to i64
  %42 = mul nsw i64 %37, %41
  %43 = or i64 %21, 4
  %44 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  %47 = mul nsw i64 %42, %46
  %48 = or i64 %21, 5
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = mul nsw i64 %47, %51
  %53 = or i64 %21, 6
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = mul nsw i64 %52, %56
  %58 = or i64 %21, 7
  %59 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %60 to i64
  %62 = mul nsw i64 %57, %61
  %63 = add nuw nsw i64 %21, 8
  %64 = add i64 %23, -8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %20

66:                                               ; preds = %20, %13
  %67 = phi i64 [ undef, %13 ], [ %62, %20 ]
  %68 = phi i64 [ 0, %13 ], [ %63, %20 ]
  %69 = phi i64 [ 1, %13 ], [ %62, %20 ]
  %70 = icmp eq i64 %16, 0
  br i1 %70, label %82, label %71

71:                                               ; preds = %66, %71
  %72 = phi i64 [ %79, %71 ], [ %68, %66 ]
  %73 = phi i64 [ %78, %71 ], [ %69, %66 ]
  %74 = phi i64 [ %80, %71 ], [ %16, %66 ]
  %75 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %72
  %76 = load i32, i32* %75, align 4
  %77 = sext i32 %76 to i64
  %78 = mul nsw i64 %73, %77
  %79 = add nuw nsw i64 %72, 1
  %80 = add i64 %74, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %71, !llvm.loop !238

82:                                               ; preds = %66, %71, %5
  %83 = phi i64 [ 1, %5 ], [ %67, %66 ], [ %78, %71 ]
  %84 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %85 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %84, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp slt i32 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %91 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %90, align 8
  %92 = sext i32 %87 to i64
  %93 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %91, i64 %92
  br label %94

94:                                               ; preds = %82, %89
  %95 = phi %struct.TfLiteTensor* [ %93, %89 ], [ null, %82 ]
  %96 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 1
  %97 = load i32, i32* %96, align 4
  %98 = icmp slt i32 %97, 0
  br i1 %98, label %104, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %101 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %100, align 8
  %102 = sext i32 %97 to i64
  %103 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %101, i64 %102
  br label %104

104:                                              ; preds = %94, %99
  %105 = phi %struct.TfLiteTensor* [ %103, %99 ], [ null, %94 ]
  %106 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 3
  %107 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %106, align 8
  %108 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %107, i64 0, i32 4
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 4
  br i1 %110, label %111, label %201

111:                                              ; preds = %104
  %112 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #16
  %113 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %6, align 8
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %113, i64 0, i32 2
  %115 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %114, align 8
  %116 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %119, label %191

119:                                              ; preds = %111
  %120 = sext i32 %117 to i64
  %121 = add nsw i64 %120, -1
  %122 = and i64 %120, 7
  %123 = icmp ult i64 %121, 7
  br i1 %123, label %172, label %124

124:                                              ; preds = %119
  %125 = sub nsw i64 %120, %122
  br label %126

126:                                              ; preds = %126, %124
  %127 = phi i64 [ 0, %124 ], [ %169, %126 ]
  %128 = phi i64 [ 1, %124 ], [ %168, %126 ]
  %129 = phi i64 [ %125, %124 ], [ %170, %126 ]
  %130 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %127
  %131 = load i32, i32* %130, align 4
  %132 = sext i32 %131 to i64
  %133 = mul nsw i64 %128, %132
  %134 = or i64 %127, 1
  %135 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = sext i32 %136 to i64
  %138 = mul nsw i64 %133, %137
  %139 = or i64 %127, 2
  %140 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = sext i32 %141 to i64
  %143 = mul nsw i64 %138, %142
  %144 = or i64 %127, 3
  %145 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = sext i32 %146 to i64
  %148 = mul nsw i64 %143, %147
  %149 = or i64 %127, 4
  %150 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = sext i32 %151 to i64
  %153 = mul nsw i64 %148, %152
  %154 = or i64 %127, 5
  %155 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = sext i32 %156 to i64
  %158 = mul nsw i64 %153, %157
  %159 = or i64 %127, 6
  %160 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = sext i32 %161 to i64
  %163 = mul nsw i64 %158, %162
  %164 = or i64 %127, 7
  %165 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %164
  %166 = load i32, i32* %165, align 4
  %167 = sext i32 %166 to i64
  %168 = mul nsw i64 %163, %167
  %169 = add nuw nsw i64 %127, 8
  %170 = add i64 %129, -8
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %126

172:                                              ; preds = %126, %119
  %173 = phi i64 [ undef, %119 ], [ %168, %126 ]
  %174 = phi i64 [ 0, %119 ], [ %169, %126 ]
  %175 = phi i64 [ 1, %119 ], [ %168, %126 ]
  %176 = icmp eq i64 %122, 0
  br i1 %176, label %188, label %177

177:                                              ; preds = %172, %177
  %178 = phi i64 [ %185, %177 ], [ %174, %172 ]
  %179 = phi i64 [ %184, %177 ], [ %175, %172 ]
  %180 = phi i64 [ %186, %177 ], [ %122, %172 ]
  %181 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %178
  %182 = load i32, i32* %181, align 4
  %183 = sext i32 %182 to i64
  %184 = mul nsw i64 %179, %183
  %185 = add nuw nsw i64 %178, 1
  %186 = add i64 %180, -1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %177, !llvm.loop !239

188:                                              ; preds = %177, %172
  %189 = phi i64 [ %173, %172 ], [ %184, %177 ]
  %190 = trunc i64 %189 to i32
  br label %191

191:                                              ; preds = %111, %188
  %192 = phi i32 [ 1, %111 ], [ %190, %188 ]
  %193 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %112, i64 0, i32 1, i64 0
  store i32 %192, i32* %193, align 4
  %194 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %195 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %194, align 8
  %196 = tail call i32 %195(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %105, %struct.TfLiteIntArray* %112) #16
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %280

198:                                              ; preds = %191
  %199 = tail call i32 @_ZN6tflite3ops7builtin6reduce18ResizeOutputTensorEP13TfLiteContextPNS2_9OpContextE(%struct.TfLiteContext* %0, %"struct.tflite::ops::builtin::reduce::OpContext"* %2)
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %280

201:                                              ; preds = %198, %104
  %202 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 1
  %203 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %202, align 8
  %204 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 0
  %205 = load i32, i32* %204, align 8
  %206 = icmp eq i32 %205, 3
  br i1 %206, label %207, label %228

207:                                              ; preds = %201
  %208 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 3, i32 0
  %209 = load float, float* %208, align 8
  %210 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %106, align 8
  %211 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %210, i64 0, i32 3, i32 0
  %212 = load float, float* %211, align 8
  %213 = fcmp une float %209, %212
  br i1 %213, label %214, label %219

214:                                              ; preds = %207
  %215 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %216 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %215, align 8
  %217 = fpext float %209 to double
  %218 = fpext float %212 to double
  tail call void (%struct.TfLiteContext*, i8*, ...) %216(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 521, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0), double %217, double %218) #16
  br label %280

219:                                              ; preds = %207
  %220 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 3, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %210, i64 0, i32 3, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %221, %223
  br i1 %224, label %228, label %225

225:                                              ; preds = %219
  %226 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %227 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %226, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %227(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 523, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0), i32 %221, i32 %223) #16
  br label %280

228:                                              ; preds = %219, %201
  %229 = icmp eq %struct.TfLiteTensor* %203, null
  br i1 %229, label %233, label %230

230:                                              ; preds = %228
  %231 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 1, i32 0
  %232 = load i32*, i32** %231, align 8
  br label %233

233:                                              ; preds = %228, %230
  %234 = phi i32* [ %232, %230 ], [ null, %228 ]
  %235 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 2
  %236 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %235, align 8
  %237 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %236, i64 0, i32 1, i64 0
  %238 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %236, i64 0, i32 0
  %239 = load i32, i32* %238, align 4
  %240 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %106, align 8
  %241 = icmp eq %struct.TfLiteTensor* %240, null
  br i1 %241, label %245, label %242

242:                                              ; preds = %233
  %243 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %240, i64 0, i32 1, i32 0
  %244 = load i32*, i32** %243, align 8
  br label %245

245:                                              ; preds = %233, %242
  %246 = phi i32* [ %244, %242 ], [ null, %233 ]
  %247 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %240, i64 0, i32 2
  %248 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %247, align 8
  %249 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %248, i64 0, i32 1, i64 0
  %250 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %248, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %6, align 8
  %253 = icmp eq %struct.TfLiteTensor* %252, null
  br i1 %253, label %257, label %254

254:                                              ; preds = %245
  %255 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %252, i64 0, i32 1, i32 0
  %256 = load i32*, i32** %255, align 8
  br label %257

257:                                              ; preds = %245, %254
  %258 = phi i32* [ %256, %254 ], [ null, %245 ]
  %259 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 0
  %260 = load %struct.TfLiteReducerParams*, %struct.TfLiteReducerParams** %259, align 8
  %261 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %260, i64 0, i32 0
  %262 = load i8, i8* %261, align 1, !range !6
  %263 = icmp ne i8 %262, 0
  %264 = icmp eq %struct.TfLiteTensor* %95, null
  br i1 %264, label %268, label %265

265:                                              ; preds = %257
  %266 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %95, i64 0, i32 1, i32 0
  %267 = load i32*, i32** %266, align 8
  br label %268

268:                                              ; preds = %257, %265
  %269 = phi i32* [ %267, %265 ], [ null, %257 ]
  %270 = icmp eq %struct.TfLiteTensor* %105, null
  br i1 %270, label %274, label %271

271:                                              ; preds = %268
  %272 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %105, i64 0, i32 1, i32 0
  %273 = load i32*, i32** %272, align 8
  br label %274

274:                                              ; preds = %268, %271
  %275 = phi i32* [ %273, %271 ], [ null, %268 ]
  %276 = tail call zeroext i1 @_ZN6tflite13reference_ops13ReduceGenericIiEEbPKT_PKiiPS2_S6_iS6_lbPiS8_S2_PFS2_S2_S2_E(i32* %234, i32* %237, i32 %239, i32* %246, i32* %249, i32 %251, i32* %258, i64 %83, i1 zeroext %263, i32* %269, i32* %275, i32 %3, i32 (i32, i32)* %4)
  br i1 %276, label %280, label %277

277:                                              ; preds = %274
  %278 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %279 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %278, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %279(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 533, i8* getelementptr inbounds ([401 x i8], [401 x i8]* @.str.23, i64 0, i64 0)) #16
  br label %280

280:                                              ; preds = %274, %198, %191, %277, %225, %214
  %281 = phi i32 [ 1, %214 ], [ 1, %225 ], [ 1, %277 ], [ %199, %198 ], [ %196, %191 ], [ 0, %274 ]
  ret i32 %281
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite13reference_ops13ReduceGenericIiEEbPKT_PKiiPS2_S6_iS6_lbPiS8_S2_PFS2_S2_S2_E(i32*, i32*, i32, i32*, i32*, i32, i32*, i64, i1 zeroext, i32*, i32*, i32, i32 (i32, i32)*) local_unnamed_addr #6 comdat {
  %14 = icmp sgt i32 %5, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %13
  %16 = zext i32 %5 to i64
  br label %97

17:                                               ; preds = %105
  %18 = icmp eq i64 %106, 0
  br i1 %18, label %114, label %19

19:                                               ; preds = %17, %13
  %20 = phi i64 [ %106, %17 ], [ 1, %13 ]
  %21 = icmp ult i64 %20, 8
  br i1 %21, label %22, label %24

22:                                               ; preds = %95, %19
  %23 = phi i64 [ 0, %19 ], [ %25, %95 ]
  br label %109

24:                                               ; preds = %19
  %25 = and i64 %20, -8
  %26 = insertelement <4 x i32> undef, i32 %11, i32 0
  %27 = shufflevector <4 x i32> %26, <4 x i32> undef, <4 x i32> zeroinitializer
  %28 = insertelement <4 x i32> undef, i32 %11, i32 0
  %29 = shufflevector <4 x i32> %28, <4 x i32> undef, <4 x i32> zeroinitializer
  %30 = add i64 %25, -8
  %31 = lshr exact i64 %30, 3
  %32 = add nuw nsw i64 %31, 1
  %33 = and i64 %32, 7
  %34 = icmp ult i64 %30, 56
  br i1 %34, label %82, label %35

35:                                               ; preds = %24
  %36 = sub nsw i64 %32, %33
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i64 [ 0, %35 ], [ %79, %37 ]
  %39 = phi i64 [ %36, %35 ], [ %80, %37 ]
  %40 = getelementptr inbounds i32, i32* %3, i64 %38
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> %27, <4 x i32>* %41, align 4
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> %29, <4 x i32>* %43, align 4
  %44 = or i64 %38, 8
  %45 = getelementptr inbounds i32, i32* %3, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> %27, <4 x i32>* %46, align 4
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> %29, <4 x i32>* %48, align 4
  %49 = or i64 %38, 16
  %50 = getelementptr inbounds i32, i32* %3, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %27, <4 x i32>* %51, align 4
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> %29, <4 x i32>* %53, align 4
  %54 = or i64 %38, 24
  %55 = getelementptr inbounds i32, i32* %3, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> %27, <4 x i32>* %56, align 4
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> %29, <4 x i32>* %58, align 4
  %59 = or i64 %38, 32
  %60 = getelementptr inbounds i32, i32* %3, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> %27, <4 x i32>* %61, align 4
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> %29, <4 x i32>* %63, align 4
  %64 = or i64 %38, 40
  %65 = getelementptr inbounds i32, i32* %3, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %27, <4 x i32>* %66, align 4
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> %29, <4 x i32>* %68, align 4
  %69 = or i64 %38, 48
  %70 = getelementptr inbounds i32, i32* %3, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> %27, <4 x i32>* %71, align 4
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %29, <4 x i32>* %73, align 4
  %74 = or i64 %38, 56
  %75 = getelementptr inbounds i32, i32* %3, i64 %74
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %27, <4 x i32>* %76, align 4
  %77 = getelementptr inbounds i32, i32* %75, i64 4
  %78 = bitcast i32* %77 to <4 x i32>*
  store <4 x i32> %29, <4 x i32>* %78, align 4
  %79 = add i64 %38, 64
  %80 = add i64 %39, -8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %37, !llvm.loop !240

82:                                               ; preds = %37, %24
  %83 = phi i64 [ 0, %24 ], [ %79, %37 ]
  %84 = icmp eq i64 %33, 0
  br i1 %84, label %95, label %85

85:                                               ; preds = %82, %85
  %86 = phi i64 [ %92, %85 ], [ %83, %82 ]
  %87 = phi i64 [ %93, %85 ], [ %33, %82 ]
  %88 = getelementptr inbounds i32, i32* %3, i64 %86
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> %27, <4 x i32>* %89, align 4
  %90 = getelementptr inbounds i32, i32* %88, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> %29, <4 x i32>* %91, align 4
  %92 = add i64 %86, 8
  %93 = add i64 %87, -1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %85, !llvm.loop !241

95:                                               ; preds = %85, %82
  %96 = icmp eq i64 %20, %25
  br i1 %96, label %114, label %22

97:                                               ; preds = %105, %15
  %98 = phi i64 [ 0, %15 ], [ %107, %105 ]
  %99 = phi i64 [ 1, %15 ], [ %106, %105 ]
  %100 = getelementptr inbounds i32, i32* %4, i64 %98
  %101 = load i32, i32* %100, align 4
  %102 = sext i32 %101 to i64
  %103 = udiv i64 -1, %102
  %104 = icmp ugt i64 %99, %103
  br i1 %104, label %289, label %105

105:                                              ; preds = %97
  %106 = mul i64 %99, %102
  %107 = add nuw nsw i64 %98, 1
  %108 = icmp eq i64 %107, %16
  br i1 %108, label %17, label %97

109:                                              ; preds = %22, %109
  %110 = phi i64 [ %112, %109 ], [ %23, %22 ]
  %111 = getelementptr inbounds i32, i32* %3, i64 %110
  store i32 %11, i32* %111, align 4
  %112 = add nuw i64 %110, 1
  %113 = icmp eq i64 %112, %20
  br i1 %113, label %114, label %109, !llvm.loop !242

114:                                              ; preds = %109, %95, %17
  %115 = icmp ne i32 %2, 0
  %116 = icmp sgt i64 %7, 0
  %117 = and i1 %115, %116
  br i1 %117, label %118, label %157

118:                                              ; preds = %114, %151
  %119 = phi i32 [ %152, %151 ], [ 0, %114 ]
  %120 = phi i32 [ %153, %151 ], [ 0, %114 ]
  %121 = phi i32 [ %154, %151 ], [ 0, %114 ]
  %122 = phi i64 [ %155, %151 ], [ 0, %114 ]
  %123 = getelementptr inbounds i32, i32* %6, i64 %122
  %124 = load i32, i32* %123, align 4
  %125 = icmp slt i32 %124, 0
  %126 = select i1 %125, i32 %2, i32 0
  %127 = add nsw i32 %126, %124
  %128 = icmp sgt i32 %127, -1
  %129 = icmp slt i32 %127, %2
  %130 = and i1 %128, %129
  br i1 %130, label %131, label %289

131:                                              ; preds = %118
  %132 = icmp sgt i32 %121, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %131
  %134 = sext i32 %121 to i64
  br label %147

135:                                              ; preds = %131
  %136 = sext i32 %120 to i64
  %137 = load i32, i32* %10, align 4
  %138 = icmp eq i32 %137, %127
  br i1 %138, label %151, label %139

139:                                              ; preds = %135, %142
  %140 = phi i64 [ %146, %142 ], [ 1, %135 ]
  %141 = icmp slt i64 %140, %136
  br i1 %141, label %142, label %147

142:                                              ; preds = %139
  %143 = getelementptr inbounds i32, i32* %10, i64 %140
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, %127
  %146 = add nuw nsw i64 %140, 1
  br i1 %145, label %151, label %139

147:                                              ; preds = %139, %133
  %148 = phi i64 [ %134, %133 ], [ %136, %139 ]
  %149 = getelementptr inbounds i32, i32* %10, i64 %148
  store i32 %127, i32* %149, align 4
  %150 = add nsw i32 %119, 1
  br label %151

151:                                              ; preds = %142, %135, %147
  %152 = phi i32 [ %150, %147 ], [ %119, %135 ], [ %119, %142 ]
  %153 = phi i32 [ %150, %147 ], [ %120, %135 ], [ %120, %142 ]
  %154 = phi i32 [ %150, %147 ], [ %121, %135 ], [ %120, %142 ]
  %155 = add nuw nsw i64 %122, 1
  %156 = icmp eq i64 %155, %7
  br i1 %156, label %157, label %118

157:                                              ; preds = %151, %114
  %158 = phi i32 [ 0, %114 ], [ %152, %151 ]
  %159 = icmp sgt i32 %2, 0
  br i1 %159, label %162, label %160

160:                                              ; preds = %157
  %161 = zext i32 %2 to i64
  br label %166

162:                                              ; preds = %157
  %163 = bitcast i32* %9 to i8*
  %164 = zext i32 %2 to i64
  %165 = shl nuw nsw i64 %164, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %163, i8 0, i64 %165, i1 false) #16
  br label %166

166:                                              ; preds = %162, %160
  %167 = phi i64 [ %161, %160 ], [ %164, %162 ]
  %168 = icmp eq i32* %10, null
  %169 = icmp slt i32 %158, 1
  %170 = or i1 %168, %169
  %171 = zext i32 %158 to i64
  %172 = icmp eq i32 %2, 0
  %173 = sext i32 %2 to i64
  %174 = add nsw i64 %167, -1
  %175 = and i64 %167, 3
  %176 = icmp ult i64 %174, 3
  %177 = sub nsw i64 %167, %175
  %178 = icmp eq i64 %175, 0
  br label %179

179:                                              ; preds = %281, %166
  br i1 %159, label %180, label %269

180:                                              ; preds = %179
  br i1 %176, label %223, label %181

181:                                              ; preds = %180, %181
  %182 = phi i64 [ %220, %181 ], [ 0, %180 ]
  %183 = phi i64 [ %219, %181 ], [ 0, %180 ]
  %184 = phi i64 [ %221, %181 ], [ %177, %180 ]
  %185 = getelementptr inbounds i32, i32* %1, i64 %182
  %186 = load i32, i32* %185, align 4
  %187 = sext i32 %186 to i64
  %188 = mul i64 %183, %187
  %189 = getelementptr inbounds i32, i32* %9, i64 %182
  %190 = load i32, i32* %189, align 4
  %191 = sext i32 %190 to i64
  %192 = add i64 %188, %191
  %193 = or i64 %182, 1
  %194 = getelementptr inbounds i32, i32* %1, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = sext i32 %195 to i64
  %197 = mul i64 %192, %196
  %198 = getelementptr inbounds i32, i32* %9, i64 %193
  %199 = load i32, i32* %198, align 4
  %200 = sext i32 %199 to i64
  %201 = add i64 %197, %200
  %202 = or i64 %182, 2
  %203 = getelementptr inbounds i32, i32* %1, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = sext i32 %204 to i64
  %206 = mul i64 %201, %205
  %207 = getelementptr inbounds i32, i32* %9, i64 %202
  %208 = load i32, i32* %207, align 4
  %209 = sext i32 %208 to i64
  %210 = add i64 %206, %209
  %211 = or i64 %182, 3
  %212 = getelementptr inbounds i32, i32* %1, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = sext i32 %213 to i64
  %215 = mul i64 %210, %214
  %216 = getelementptr inbounds i32, i32* %9, i64 %211
  %217 = load i32, i32* %216, align 4
  %218 = sext i32 %217 to i64
  %219 = add i64 %215, %218
  %220 = add nuw nsw i64 %182, 4
  %221 = add i64 %184, -4
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %181

223:                                              ; preds = %181, %180
  %224 = phi i64 [ undef, %180 ], [ %219, %181 ]
  %225 = phi i64 [ 0, %180 ], [ %220, %181 ]
  %226 = phi i64 [ 0, %180 ], [ %219, %181 ]
  br i1 %178, label %242, label %227

227:                                              ; preds = %223, %227
  %228 = phi i64 [ %239, %227 ], [ %225, %223 ]
  %229 = phi i64 [ %238, %227 ], [ %226, %223 ]
  %230 = phi i64 [ %240, %227 ], [ %175, %223 ]
  %231 = getelementptr inbounds i32, i32* %1, i64 %228
  %232 = load i32, i32* %231, align 4
  %233 = sext i32 %232 to i64
  %234 = mul i64 %229, %233
  %235 = getelementptr inbounds i32, i32* %9, i64 %228
  %236 = load i32, i32* %235, align 4
  %237 = sext i32 %236 to i64
  %238 = add i64 %234, %237
  %239 = add nuw nsw i64 %228, 1
  %240 = add i64 %230, -1
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %242, label %227, !llvm.loop !243

242:                                              ; preds = %227, %223
  %243 = phi i64 [ %224, %223 ], [ %238, %227 ]
  br label %244

244:                                              ; preds = %242, %265
  %245 = phi i64 [ %267, %265 ], [ 0, %242 ]
  %246 = phi i64 [ %266, %265 ], [ 0, %242 ]
  br i1 %170, label %256, label %249

247:                                              ; preds = %249
  %248 = icmp eq i64 %255, %171
  br i1 %248, label %256, label %249

249:                                              ; preds = %244, %247
  %250 = phi i64 [ %255, %247 ], [ 0, %244 ]
  %251 = getelementptr inbounds i32, i32* %10, i64 %250
  %252 = load i32, i32* %251, align 4
  %253 = zext i32 %252 to i64
  %254 = icmp eq i64 %245, %253
  %255 = add nuw nsw i64 %250, 1
  br i1 %254, label %265, label %247

256:                                              ; preds = %247, %244
  %257 = getelementptr inbounds i32, i32* %1, i64 %245
  %258 = load i32, i32* %257, align 4
  %259 = sext i32 %258 to i64
  %260 = mul i64 %246, %259
  %261 = getelementptr inbounds i32, i32* %9, i64 %245
  %262 = load i32, i32* %261, align 4
  %263 = sext i32 %262 to i64
  %264 = add i64 %260, %263
  br label %265

265:                                              ; preds = %249, %256
  %266 = phi i64 [ %264, %256 ], [ %246, %249 ]
  %267 = add nuw nsw i64 %245, 1
  %268 = icmp eq i64 %267, %167
  br i1 %268, label %269, label %244

269:                                              ; preds = %265, %179
  %270 = phi i64 [ 0, %179 ], [ %243, %265 ]
  %271 = phi i64 [ 0, %179 ], [ %266, %265 ]
  %272 = getelementptr inbounds i32, i32* %3, i64 %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds i32, i32* %0, i64 %270
  %275 = load i32, i32* %274, align 4
  %276 = tail call i32 %12(i32 %273, i32 %275) #16
  store i32 %276, i32* %272, align 4
  br i1 %172, label %289, label %277

277:                                              ; preds = %269, %281
  %278 = phi i64 [ %279, %281 ], [ %173, %269 ]
  %279 = add nsw i64 %278, -1
  %280 = icmp sgt i64 %278, 0
  br i1 %280, label %281, label %289

281:                                              ; preds = %277
  %282 = getelementptr inbounds i32, i32* %9, i64 %279
  %283 = load i32, i32* %282, align 4
  %284 = add nsw i32 %283, 1
  %285 = getelementptr inbounds i32, i32* %1, i64 %279
  %286 = load i32, i32* %285, align 4
  %287 = icmp eq i32 %286, %284
  %288 = select i1 %287, i32 0, i32 %284
  store i32 %288, i32* %282, align 4
  br i1 %287, label %277, label %179

289:                                              ; preds = %97, %118, %269, %277
  %290 = phi i1 [ true, %277 ], [ true, %269 ], [ false, %118 ], [ false, %97 ]
  ret i1 %290
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZZN6tflite3ops7builtin6reduce8EvalTypeIiEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUliiE_8__invokeEii(i32, i32) #6 comdat align 2 {
  %3 = add nsw i32 %1, %0
  ret i32 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZZN6tflite3ops7builtin6reduce8EvalTypeIiEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUliiE0_8__invokeEii(i32, i32) #6 comdat align 2 {
  %3 = mul nsw i32 %1, %0
  ret i32 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZZN6tflite3ops7builtin6reduce8EvalTypeIiEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUliiE1_8__invokeEii(i32, i32) #6 comdat align 2 {
  %3 = icmp sgt i32 %1, %0
  %4 = select i1 %3, i32 %1, i32 %0
  ret i32 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZZN6tflite3ops7builtin6reduce8EvalTypeIiEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUliiE2_8__invokeEii(i32, i32) #6 comdat align 2 {
  %3 = icmp slt i32 %1, %0
  %4 = select i1 %3, i32 %1, i32 %0
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIlEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::reduce::OpContext"*, i64, i64 (i64, i64)*) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 2
  %7 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %6, align 8
  %8 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %9 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %8, align 8
  %10 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %82

13:                                               ; preds = %5
  %14 = sext i32 %11 to i64
  %15 = add nsw i64 %14, -1
  %16 = and i64 %14, 7
  %17 = icmp ult i64 %15, 7
  br i1 %17, label %66, label %18

18:                                               ; preds = %13
  %19 = sub nsw i64 %14, %16
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i64 [ 0, %18 ], [ %63, %20 ]
  %22 = phi i64 [ 1, %18 ], [ %62, %20 ]
  %23 = phi i64 [ %19, %18 ], [ %64, %20 ]
  %24 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %21
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = mul nsw i64 %22, %26
  %28 = or i64 %21, 1
  %29 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = mul nsw i64 %27, %31
  %33 = or i64 %21, 2
  %34 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = mul nsw i64 %32, %36
  %38 = or i64 %21, 3
  %39 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %40 to i64
  %42 = mul nsw i64 %37, %41
  %43 = or i64 %21, 4
  %44 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  %47 = mul nsw i64 %42, %46
  %48 = or i64 %21, 5
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = mul nsw i64 %47, %51
  %53 = or i64 %21, 6
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = mul nsw i64 %52, %56
  %58 = or i64 %21, 7
  %59 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %60 to i64
  %62 = mul nsw i64 %57, %61
  %63 = add nuw nsw i64 %21, 8
  %64 = add i64 %23, -8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %20

66:                                               ; preds = %20, %13
  %67 = phi i64 [ undef, %13 ], [ %62, %20 ]
  %68 = phi i64 [ 0, %13 ], [ %63, %20 ]
  %69 = phi i64 [ 1, %13 ], [ %62, %20 ]
  %70 = icmp eq i64 %16, 0
  br i1 %70, label %82, label %71

71:                                               ; preds = %66, %71
  %72 = phi i64 [ %79, %71 ], [ %68, %66 ]
  %73 = phi i64 [ %78, %71 ], [ %69, %66 ]
  %74 = phi i64 [ %80, %71 ], [ %16, %66 ]
  %75 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %72
  %76 = load i32, i32* %75, align 4
  %77 = sext i32 %76 to i64
  %78 = mul nsw i64 %73, %77
  %79 = add nuw nsw i64 %72, 1
  %80 = add i64 %74, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %71, !llvm.loop !244

82:                                               ; preds = %66, %71, %5
  %83 = phi i64 [ 1, %5 ], [ %67, %66 ], [ %78, %71 ]
  %84 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %85 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %84, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp slt i32 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %91 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %90, align 8
  %92 = sext i32 %87 to i64
  %93 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %91, i64 %92
  br label %94

94:                                               ; preds = %82, %89
  %95 = phi %struct.TfLiteTensor* [ %93, %89 ], [ null, %82 ]
  %96 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 1
  %97 = load i32, i32* %96, align 4
  %98 = icmp slt i32 %97, 0
  br i1 %98, label %104, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %101 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %100, align 8
  %102 = sext i32 %97 to i64
  %103 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %101, i64 %102
  br label %104

104:                                              ; preds = %94, %99
  %105 = phi %struct.TfLiteTensor* [ %103, %99 ], [ null, %94 ]
  %106 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 3
  %107 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %106, align 8
  %108 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %107, i64 0, i32 4
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 4
  br i1 %110, label %111, label %201

111:                                              ; preds = %104
  %112 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #16
  %113 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %6, align 8
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %113, i64 0, i32 2
  %115 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %114, align 8
  %116 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %119, label %191

119:                                              ; preds = %111
  %120 = sext i32 %117 to i64
  %121 = add nsw i64 %120, -1
  %122 = and i64 %120, 7
  %123 = icmp ult i64 %121, 7
  br i1 %123, label %172, label %124

124:                                              ; preds = %119
  %125 = sub nsw i64 %120, %122
  br label %126

126:                                              ; preds = %126, %124
  %127 = phi i64 [ 0, %124 ], [ %169, %126 ]
  %128 = phi i64 [ 1, %124 ], [ %168, %126 ]
  %129 = phi i64 [ %125, %124 ], [ %170, %126 ]
  %130 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %127
  %131 = load i32, i32* %130, align 4
  %132 = sext i32 %131 to i64
  %133 = mul nsw i64 %128, %132
  %134 = or i64 %127, 1
  %135 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = sext i32 %136 to i64
  %138 = mul nsw i64 %133, %137
  %139 = or i64 %127, 2
  %140 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = sext i32 %141 to i64
  %143 = mul nsw i64 %138, %142
  %144 = or i64 %127, 3
  %145 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = sext i32 %146 to i64
  %148 = mul nsw i64 %143, %147
  %149 = or i64 %127, 4
  %150 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = sext i32 %151 to i64
  %153 = mul nsw i64 %148, %152
  %154 = or i64 %127, 5
  %155 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = sext i32 %156 to i64
  %158 = mul nsw i64 %153, %157
  %159 = or i64 %127, 6
  %160 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = sext i32 %161 to i64
  %163 = mul nsw i64 %158, %162
  %164 = or i64 %127, 7
  %165 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %164
  %166 = load i32, i32* %165, align 4
  %167 = sext i32 %166 to i64
  %168 = mul nsw i64 %163, %167
  %169 = add nuw nsw i64 %127, 8
  %170 = add i64 %129, -8
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %126

172:                                              ; preds = %126, %119
  %173 = phi i64 [ undef, %119 ], [ %168, %126 ]
  %174 = phi i64 [ 0, %119 ], [ %169, %126 ]
  %175 = phi i64 [ 1, %119 ], [ %168, %126 ]
  %176 = icmp eq i64 %122, 0
  br i1 %176, label %188, label %177

177:                                              ; preds = %172, %177
  %178 = phi i64 [ %185, %177 ], [ %174, %172 ]
  %179 = phi i64 [ %184, %177 ], [ %175, %172 ]
  %180 = phi i64 [ %186, %177 ], [ %122, %172 ]
  %181 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %178
  %182 = load i32, i32* %181, align 4
  %183 = sext i32 %182 to i64
  %184 = mul nsw i64 %179, %183
  %185 = add nuw nsw i64 %178, 1
  %186 = add i64 %180, -1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %177, !llvm.loop !245

188:                                              ; preds = %177, %172
  %189 = phi i64 [ %173, %172 ], [ %184, %177 ]
  %190 = trunc i64 %189 to i32
  br label %191

191:                                              ; preds = %111, %188
  %192 = phi i32 [ 1, %111 ], [ %190, %188 ]
  %193 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %112, i64 0, i32 1, i64 0
  store i32 %192, i32* %193, align 4
  %194 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %195 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %194, align 8
  %196 = tail call i32 %195(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %105, %struct.TfLiteIntArray* %112) #16
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %282

198:                                              ; preds = %191
  %199 = tail call i32 @_ZN6tflite3ops7builtin6reduce18ResizeOutputTensorEP13TfLiteContextPNS2_9OpContextE(%struct.TfLiteContext* %0, %"struct.tflite::ops::builtin::reduce::OpContext"* %2)
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %282

201:                                              ; preds = %198, %104
  %202 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 1
  %203 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %202, align 8
  %204 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 0
  %205 = load i32, i32* %204, align 8
  %206 = icmp eq i32 %205, 3
  br i1 %206, label %207, label %228

207:                                              ; preds = %201
  %208 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 3, i32 0
  %209 = load float, float* %208, align 8
  %210 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %106, align 8
  %211 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %210, i64 0, i32 3, i32 0
  %212 = load float, float* %211, align 8
  %213 = fcmp une float %209, %212
  br i1 %213, label %214, label %219

214:                                              ; preds = %207
  %215 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %216 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %215, align 8
  %217 = fpext float %209 to double
  %218 = fpext float %212 to double
  tail call void (%struct.TfLiteContext*, i8*, ...) %216(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 521, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0), double %217, double %218) #16
  br label %282

219:                                              ; preds = %207
  %220 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 3, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %210, i64 0, i32 3, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %221, %223
  br i1 %224, label %228, label %225

225:                                              ; preds = %219
  %226 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %227 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %226, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %227(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 523, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0), i32 %221, i32 %223) #16
  br label %282

228:                                              ; preds = %219, %201
  %229 = icmp eq %struct.TfLiteTensor* %203, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %228
  %231 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 1
  %232 = bitcast %union.TfLitePtrUnion* %231 to i64**
  %233 = load i64*, i64** %232, align 8
  br label %234

234:                                              ; preds = %228, %230
  %235 = phi i64* [ %233, %230 ], [ null, %228 ]
  %236 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 2
  %237 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %236, align 8
  %238 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %237, i64 0, i32 1, i64 0
  %239 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %237, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %106, align 8
  %242 = icmp eq %struct.TfLiteTensor* %241, null
  br i1 %242, label %247, label %243

243:                                              ; preds = %234
  %244 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %241, i64 0, i32 1
  %245 = bitcast %union.TfLitePtrUnion* %244 to i64**
  %246 = load i64*, i64** %245, align 8
  br label %247

247:                                              ; preds = %234, %243
  %248 = phi i64* [ %246, %243 ], [ null, %234 ]
  %249 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %241, i64 0, i32 2
  %250 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %249, align 8
  %251 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %250, i64 0, i32 1, i64 0
  %252 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %250, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %6, align 8
  %255 = icmp eq %struct.TfLiteTensor* %254, null
  br i1 %255, label %259, label %256

256:                                              ; preds = %247
  %257 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %254, i64 0, i32 1, i32 0
  %258 = load i32*, i32** %257, align 8
  br label %259

259:                                              ; preds = %247, %256
  %260 = phi i32* [ %258, %256 ], [ null, %247 ]
  %261 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 0
  %262 = load %struct.TfLiteReducerParams*, %struct.TfLiteReducerParams** %261, align 8
  %263 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %262, i64 0, i32 0
  %264 = load i8, i8* %263, align 1, !range !6
  %265 = icmp ne i8 %264, 0
  %266 = icmp eq %struct.TfLiteTensor* %95, null
  br i1 %266, label %270, label %267

267:                                              ; preds = %259
  %268 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %95, i64 0, i32 1, i32 0
  %269 = load i32*, i32** %268, align 8
  br label %270

270:                                              ; preds = %259, %267
  %271 = phi i32* [ %269, %267 ], [ null, %259 ]
  %272 = icmp eq %struct.TfLiteTensor* %105, null
  br i1 %272, label %276, label %273

273:                                              ; preds = %270
  %274 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %105, i64 0, i32 1, i32 0
  %275 = load i32*, i32** %274, align 8
  br label %276

276:                                              ; preds = %270, %273
  %277 = phi i32* [ %275, %273 ], [ null, %270 ]
  %278 = tail call zeroext i1 @_ZN6tflite13reference_ops13ReduceGenericIlEEbPKT_PKiiPS2_S6_iS6_lbPiS8_S2_PFS2_S2_S2_E(i64* %235, i32* %238, i32 %240, i64* %248, i32* %251, i32 %253, i32* %260, i64 %83, i1 zeroext %265, i32* %271, i32* %277, i64 %3, i64 (i64, i64)* %4)
  br i1 %278, label %282, label %279

279:                                              ; preds = %276
  %280 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %281 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %280, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %281(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 533, i8* getelementptr inbounds ([401 x i8], [401 x i8]* @.str.23, i64 0, i64 0)) #16
  br label %282

282:                                              ; preds = %276, %198, %191, %279, %225, %214
  %283 = phi i32 [ 1, %214 ], [ 1, %225 ], [ 1, %279 ], [ %199, %198 ], [ %196, %191 ], [ 0, %276 ]
  ret i32 %283
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite13reference_ops13ReduceGenericIlEEbPKT_PKiiPS2_S6_iS6_lbPiS8_S2_PFS2_S2_S2_E(i64*, i32*, i32, i64*, i32*, i32, i32*, i64, i1 zeroext, i32*, i32*, i64, i64 (i64, i64)*) local_unnamed_addr #6 comdat {
  %14 = icmp sgt i32 %5, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %13
  %16 = zext i32 %5 to i64
  br label %97

17:                                               ; preds = %105
  %18 = icmp eq i64 %106, 0
  br i1 %18, label %114, label %19

19:                                               ; preds = %17, %13
  %20 = phi i64 [ %106, %17 ], [ 1, %13 ]
  %21 = icmp ult i64 %20, 4
  br i1 %21, label %22, label %24

22:                                               ; preds = %95, %19
  %23 = phi i64 [ 0, %19 ], [ %25, %95 ]
  br label %109

24:                                               ; preds = %19
  %25 = and i64 %20, -4
  %26 = insertelement <2 x i64> undef, i64 %11, i32 0
  %27 = shufflevector <2 x i64> %26, <2 x i64> undef, <2 x i32> zeroinitializer
  %28 = insertelement <2 x i64> undef, i64 %11, i32 0
  %29 = shufflevector <2 x i64> %28, <2 x i64> undef, <2 x i32> zeroinitializer
  %30 = add i64 %25, -4
  %31 = lshr exact i64 %30, 2
  %32 = add nuw nsw i64 %31, 1
  %33 = and i64 %32, 7
  %34 = icmp ult i64 %30, 28
  br i1 %34, label %82, label %35

35:                                               ; preds = %24
  %36 = sub nsw i64 %32, %33
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i64 [ 0, %35 ], [ %79, %37 ]
  %39 = phi i64 [ %36, %35 ], [ %80, %37 ]
  %40 = getelementptr inbounds i64, i64* %3, i64 %38
  %41 = bitcast i64* %40 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %41, align 8
  %42 = getelementptr inbounds i64, i64* %40, i64 2
  %43 = bitcast i64* %42 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %43, align 8
  %44 = or i64 %38, 4
  %45 = getelementptr inbounds i64, i64* %3, i64 %44
  %46 = bitcast i64* %45 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %46, align 8
  %47 = getelementptr inbounds i64, i64* %45, i64 2
  %48 = bitcast i64* %47 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %48, align 8
  %49 = or i64 %38, 8
  %50 = getelementptr inbounds i64, i64* %3, i64 %49
  %51 = bitcast i64* %50 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %51, align 8
  %52 = getelementptr inbounds i64, i64* %50, i64 2
  %53 = bitcast i64* %52 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %53, align 8
  %54 = or i64 %38, 12
  %55 = getelementptr inbounds i64, i64* %3, i64 %54
  %56 = bitcast i64* %55 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %56, align 8
  %57 = getelementptr inbounds i64, i64* %55, i64 2
  %58 = bitcast i64* %57 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %58, align 8
  %59 = or i64 %38, 16
  %60 = getelementptr inbounds i64, i64* %3, i64 %59
  %61 = bitcast i64* %60 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %61, align 8
  %62 = getelementptr inbounds i64, i64* %60, i64 2
  %63 = bitcast i64* %62 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %63, align 8
  %64 = or i64 %38, 20
  %65 = getelementptr inbounds i64, i64* %3, i64 %64
  %66 = bitcast i64* %65 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %66, align 8
  %67 = getelementptr inbounds i64, i64* %65, i64 2
  %68 = bitcast i64* %67 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %68, align 8
  %69 = or i64 %38, 24
  %70 = getelementptr inbounds i64, i64* %3, i64 %69
  %71 = bitcast i64* %70 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %71, align 8
  %72 = getelementptr inbounds i64, i64* %70, i64 2
  %73 = bitcast i64* %72 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %73, align 8
  %74 = or i64 %38, 28
  %75 = getelementptr inbounds i64, i64* %3, i64 %74
  %76 = bitcast i64* %75 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %76, align 8
  %77 = getelementptr inbounds i64, i64* %75, i64 2
  %78 = bitcast i64* %77 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %78, align 8
  %79 = add i64 %38, 32
  %80 = add i64 %39, -8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %37, !llvm.loop !246

82:                                               ; preds = %37, %24
  %83 = phi i64 [ 0, %24 ], [ %79, %37 ]
  %84 = icmp eq i64 %33, 0
  br i1 %84, label %95, label %85

85:                                               ; preds = %82, %85
  %86 = phi i64 [ %92, %85 ], [ %83, %82 ]
  %87 = phi i64 [ %93, %85 ], [ %33, %82 ]
  %88 = getelementptr inbounds i64, i64* %3, i64 %86
  %89 = bitcast i64* %88 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %89, align 8
  %90 = getelementptr inbounds i64, i64* %88, i64 2
  %91 = bitcast i64* %90 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %91, align 8
  %92 = add i64 %86, 4
  %93 = add i64 %87, -1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %85, !llvm.loop !247

95:                                               ; preds = %85, %82
  %96 = icmp eq i64 %20, %25
  br i1 %96, label %114, label %22

97:                                               ; preds = %105, %15
  %98 = phi i64 [ 0, %15 ], [ %107, %105 ]
  %99 = phi i64 [ 1, %15 ], [ %106, %105 ]
  %100 = getelementptr inbounds i32, i32* %4, i64 %98
  %101 = load i32, i32* %100, align 4
  %102 = sext i32 %101 to i64
  %103 = udiv i64 -1, %102
  %104 = icmp ugt i64 %99, %103
  br i1 %104, label %289, label %105

105:                                              ; preds = %97
  %106 = mul i64 %99, %102
  %107 = add nuw nsw i64 %98, 1
  %108 = icmp eq i64 %107, %16
  br i1 %108, label %17, label %97

109:                                              ; preds = %22, %109
  %110 = phi i64 [ %112, %109 ], [ %23, %22 ]
  %111 = getelementptr inbounds i64, i64* %3, i64 %110
  store i64 %11, i64* %111, align 8
  %112 = add nuw i64 %110, 1
  %113 = icmp eq i64 %112, %20
  br i1 %113, label %114, label %109, !llvm.loop !248

114:                                              ; preds = %109, %95, %17
  %115 = icmp ne i32 %2, 0
  %116 = icmp sgt i64 %7, 0
  %117 = and i1 %115, %116
  br i1 %117, label %118, label %157

118:                                              ; preds = %114, %151
  %119 = phi i32 [ %152, %151 ], [ 0, %114 ]
  %120 = phi i32 [ %153, %151 ], [ 0, %114 ]
  %121 = phi i32 [ %154, %151 ], [ 0, %114 ]
  %122 = phi i64 [ %155, %151 ], [ 0, %114 ]
  %123 = getelementptr inbounds i32, i32* %6, i64 %122
  %124 = load i32, i32* %123, align 4
  %125 = icmp slt i32 %124, 0
  %126 = select i1 %125, i32 %2, i32 0
  %127 = add nsw i32 %126, %124
  %128 = icmp sgt i32 %127, -1
  %129 = icmp slt i32 %127, %2
  %130 = and i1 %128, %129
  br i1 %130, label %131, label %289

131:                                              ; preds = %118
  %132 = icmp sgt i32 %121, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %131
  %134 = sext i32 %121 to i64
  br label %147

135:                                              ; preds = %131
  %136 = sext i32 %120 to i64
  %137 = load i32, i32* %10, align 4
  %138 = icmp eq i32 %137, %127
  br i1 %138, label %151, label %139

139:                                              ; preds = %135, %142
  %140 = phi i64 [ %146, %142 ], [ 1, %135 ]
  %141 = icmp slt i64 %140, %136
  br i1 %141, label %142, label %147

142:                                              ; preds = %139
  %143 = getelementptr inbounds i32, i32* %10, i64 %140
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, %127
  %146 = add nuw nsw i64 %140, 1
  br i1 %145, label %151, label %139

147:                                              ; preds = %139, %133
  %148 = phi i64 [ %134, %133 ], [ %136, %139 ]
  %149 = getelementptr inbounds i32, i32* %10, i64 %148
  store i32 %127, i32* %149, align 4
  %150 = add nsw i32 %119, 1
  br label %151

151:                                              ; preds = %142, %135, %147
  %152 = phi i32 [ %150, %147 ], [ %119, %135 ], [ %119, %142 ]
  %153 = phi i32 [ %150, %147 ], [ %120, %135 ], [ %120, %142 ]
  %154 = phi i32 [ %150, %147 ], [ %121, %135 ], [ %120, %142 ]
  %155 = add nuw nsw i64 %122, 1
  %156 = icmp eq i64 %155, %7
  br i1 %156, label %157, label %118

157:                                              ; preds = %151, %114
  %158 = phi i32 [ 0, %114 ], [ %152, %151 ]
  %159 = icmp sgt i32 %2, 0
  br i1 %159, label %162, label %160

160:                                              ; preds = %157
  %161 = zext i32 %2 to i64
  br label %166

162:                                              ; preds = %157
  %163 = bitcast i32* %9 to i8*
  %164 = zext i32 %2 to i64
  %165 = shl nuw nsw i64 %164, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %163, i8 0, i64 %165, i1 false) #16
  br label %166

166:                                              ; preds = %162, %160
  %167 = phi i64 [ %161, %160 ], [ %164, %162 ]
  %168 = icmp eq i32* %10, null
  %169 = icmp slt i32 %158, 1
  %170 = or i1 %168, %169
  %171 = zext i32 %158 to i64
  %172 = icmp eq i32 %2, 0
  %173 = sext i32 %2 to i64
  %174 = add nsw i64 %167, -1
  %175 = and i64 %167, 3
  %176 = icmp ult i64 %174, 3
  %177 = sub nsw i64 %167, %175
  %178 = icmp eq i64 %175, 0
  br label %179

179:                                              ; preds = %281, %166
  br i1 %159, label %180, label %269

180:                                              ; preds = %179
  br i1 %176, label %223, label %181

181:                                              ; preds = %180, %181
  %182 = phi i64 [ %220, %181 ], [ 0, %180 ]
  %183 = phi i64 [ %219, %181 ], [ 0, %180 ]
  %184 = phi i64 [ %221, %181 ], [ %177, %180 ]
  %185 = getelementptr inbounds i32, i32* %1, i64 %182
  %186 = load i32, i32* %185, align 4
  %187 = sext i32 %186 to i64
  %188 = mul i64 %183, %187
  %189 = getelementptr inbounds i32, i32* %9, i64 %182
  %190 = load i32, i32* %189, align 4
  %191 = sext i32 %190 to i64
  %192 = add i64 %188, %191
  %193 = or i64 %182, 1
  %194 = getelementptr inbounds i32, i32* %1, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = sext i32 %195 to i64
  %197 = mul i64 %192, %196
  %198 = getelementptr inbounds i32, i32* %9, i64 %193
  %199 = load i32, i32* %198, align 4
  %200 = sext i32 %199 to i64
  %201 = add i64 %197, %200
  %202 = or i64 %182, 2
  %203 = getelementptr inbounds i32, i32* %1, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = sext i32 %204 to i64
  %206 = mul i64 %201, %205
  %207 = getelementptr inbounds i32, i32* %9, i64 %202
  %208 = load i32, i32* %207, align 4
  %209 = sext i32 %208 to i64
  %210 = add i64 %206, %209
  %211 = or i64 %182, 3
  %212 = getelementptr inbounds i32, i32* %1, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = sext i32 %213 to i64
  %215 = mul i64 %210, %214
  %216 = getelementptr inbounds i32, i32* %9, i64 %211
  %217 = load i32, i32* %216, align 4
  %218 = sext i32 %217 to i64
  %219 = add i64 %215, %218
  %220 = add nuw nsw i64 %182, 4
  %221 = add i64 %184, -4
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %181

223:                                              ; preds = %181, %180
  %224 = phi i64 [ undef, %180 ], [ %219, %181 ]
  %225 = phi i64 [ 0, %180 ], [ %220, %181 ]
  %226 = phi i64 [ 0, %180 ], [ %219, %181 ]
  br i1 %178, label %242, label %227

227:                                              ; preds = %223, %227
  %228 = phi i64 [ %239, %227 ], [ %225, %223 ]
  %229 = phi i64 [ %238, %227 ], [ %226, %223 ]
  %230 = phi i64 [ %240, %227 ], [ %175, %223 ]
  %231 = getelementptr inbounds i32, i32* %1, i64 %228
  %232 = load i32, i32* %231, align 4
  %233 = sext i32 %232 to i64
  %234 = mul i64 %229, %233
  %235 = getelementptr inbounds i32, i32* %9, i64 %228
  %236 = load i32, i32* %235, align 4
  %237 = sext i32 %236 to i64
  %238 = add i64 %234, %237
  %239 = add nuw nsw i64 %228, 1
  %240 = add i64 %230, -1
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %242, label %227, !llvm.loop !249

242:                                              ; preds = %227, %223
  %243 = phi i64 [ %224, %223 ], [ %238, %227 ]
  br label %244

244:                                              ; preds = %242, %265
  %245 = phi i64 [ %267, %265 ], [ 0, %242 ]
  %246 = phi i64 [ %266, %265 ], [ 0, %242 ]
  br i1 %170, label %256, label %249

247:                                              ; preds = %249
  %248 = icmp eq i64 %255, %171
  br i1 %248, label %256, label %249

249:                                              ; preds = %244, %247
  %250 = phi i64 [ %255, %247 ], [ 0, %244 ]
  %251 = getelementptr inbounds i32, i32* %10, i64 %250
  %252 = load i32, i32* %251, align 4
  %253 = zext i32 %252 to i64
  %254 = icmp eq i64 %245, %253
  %255 = add nuw nsw i64 %250, 1
  br i1 %254, label %265, label %247

256:                                              ; preds = %247, %244
  %257 = getelementptr inbounds i32, i32* %1, i64 %245
  %258 = load i32, i32* %257, align 4
  %259 = sext i32 %258 to i64
  %260 = mul i64 %246, %259
  %261 = getelementptr inbounds i32, i32* %9, i64 %245
  %262 = load i32, i32* %261, align 4
  %263 = sext i32 %262 to i64
  %264 = add i64 %260, %263
  br label %265

265:                                              ; preds = %249, %256
  %266 = phi i64 [ %264, %256 ], [ %246, %249 ]
  %267 = add nuw nsw i64 %245, 1
  %268 = icmp eq i64 %267, %167
  br i1 %268, label %269, label %244

269:                                              ; preds = %265, %179
  %270 = phi i64 [ 0, %179 ], [ %243, %265 ]
  %271 = phi i64 [ 0, %179 ], [ %266, %265 ]
  %272 = getelementptr inbounds i64, i64* %3, i64 %271
  %273 = load i64, i64* %272, align 8
  %274 = getelementptr inbounds i64, i64* %0, i64 %270
  %275 = load i64, i64* %274, align 8
  %276 = tail call i64 %12(i64 %273, i64 %275) #16
  store i64 %276, i64* %272, align 8
  br i1 %172, label %289, label %277

277:                                              ; preds = %269, %281
  %278 = phi i64 [ %279, %281 ], [ %173, %269 ]
  %279 = add nsw i64 %278, -1
  %280 = icmp sgt i64 %278, 0
  br i1 %280, label %281, label %289

281:                                              ; preds = %277
  %282 = getelementptr inbounds i32, i32* %9, i64 %279
  %283 = load i32, i32* %282, align 4
  %284 = add nsw i32 %283, 1
  %285 = getelementptr inbounds i32, i32* %1, i64 %279
  %286 = load i32, i32* %285, align 4
  %287 = icmp eq i32 %286, %284
  %288 = select i1 %287, i32 0, i32 %284
  store i32 %288, i32* %282, align 4
  br i1 %287, label %277, label %179

289:                                              ; preds = %97, %118, %269, %277
  %290 = phi i1 [ true, %277 ], [ true, %269 ], [ false, %118 ], [ false, %97 ]
  ret i1 %290
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZZN6tflite3ops7builtin6reduce8EvalTypeIlEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlllE_8__invokeEll(i64, i64) #6 comdat align 2 {
  %3 = add nsw i64 %1, %0
  ret i64 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZZN6tflite3ops7builtin6reduce8EvalTypeIlEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlllE0_8__invokeEll(i64, i64) #6 comdat align 2 {
  %3 = mul nsw i64 %1, %0
  ret i64 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZZN6tflite3ops7builtin6reduce8EvalTypeIlEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlllE1_8__invokeEll(i64, i64) #6 comdat align 2 {
  %3 = icmp sgt i64 %1, %0
  %4 = select i1 %3, i64 %1, i64 %0
  ret i64 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZZN6tflite3ops7builtin6reduce8EvalTypeIlEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlllE2_8__invokeEll(i64, i64) #6 comdat align 2 {
  %3 = icmp slt i64 %1, %0
  %4 = select i1 %3, i64 %1, i64 %0
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIhEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::reduce::OpContext"*, i8 zeroext, i8 (i8, i8)*) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 2
  %7 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %6, align 8
  %8 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %9 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %8, align 8
  %10 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %82

13:                                               ; preds = %5
  %14 = sext i32 %11 to i64
  %15 = add nsw i64 %14, -1
  %16 = and i64 %14, 7
  %17 = icmp ult i64 %15, 7
  br i1 %17, label %66, label %18

18:                                               ; preds = %13
  %19 = sub nsw i64 %14, %16
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i64 [ 0, %18 ], [ %63, %20 ]
  %22 = phi i64 [ 1, %18 ], [ %62, %20 ]
  %23 = phi i64 [ %19, %18 ], [ %64, %20 ]
  %24 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %21
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = mul nsw i64 %22, %26
  %28 = or i64 %21, 1
  %29 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = mul nsw i64 %27, %31
  %33 = or i64 %21, 2
  %34 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = mul nsw i64 %32, %36
  %38 = or i64 %21, 3
  %39 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %40 to i64
  %42 = mul nsw i64 %37, %41
  %43 = or i64 %21, 4
  %44 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  %47 = mul nsw i64 %42, %46
  %48 = or i64 %21, 5
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = mul nsw i64 %47, %51
  %53 = or i64 %21, 6
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = mul nsw i64 %52, %56
  %58 = or i64 %21, 7
  %59 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %60 to i64
  %62 = mul nsw i64 %57, %61
  %63 = add nuw nsw i64 %21, 8
  %64 = add i64 %23, -8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %20

66:                                               ; preds = %20, %13
  %67 = phi i64 [ undef, %13 ], [ %62, %20 ]
  %68 = phi i64 [ 0, %13 ], [ %63, %20 ]
  %69 = phi i64 [ 1, %13 ], [ %62, %20 ]
  %70 = icmp eq i64 %16, 0
  br i1 %70, label %82, label %71

71:                                               ; preds = %66, %71
  %72 = phi i64 [ %79, %71 ], [ %68, %66 ]
  %73 = phi i64 [ %78, %71 ], [ %69, %66 ]
  %74 = phi i64 [ %80, %71 ], [ %16, %66 ]
  %75 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %72
  %76 = load i32, i32* %75, align 4
  %77 = sext i32 %76 to i64
  %78 = mul nsw i64 %73, %77
  %79 = add nuw nsw i64 %72, 1
  %80 = add i64 %74, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %71, !llvm.loop !250

82:                                               ; preds = %66, %71, %5
  %83 = phi i64 [ 1, %5 ], [ %67, %66 ], [ %78, %71 ]
  %84 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %85 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %84, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp slt i32 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %91 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %90, align 8
  %92 = sext i32 %87 to i64
  %93 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %91, i64 %92
  br label %94

94:                                               ; preds = %82, %89
  %95 = phi %struct.TfLiteTensor* [ %93, %89 ], [ null, %82 ]
  %96 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 1
  %97 = load i32, i32* %96, align 4
  %98 = icmp slt i32 %97, 0
  br i1 %98, label %104, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %101 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %100, align 8
  %102 = sext i32 %97 to i64
  %103 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %101, i64 %102
  br label %104

104:                                              ; preds = %94, %99
  %105 = phi %struct.TfLiteTensor* [ %103, %99 ], [ null, %94 ]
  %106 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 3
  %107 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %106, align 8
  %108 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %107, i64 0, i32 4
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 4
  br i1 %110, label %111, label %201

111:                                              ; preds = %104
  %112 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #16
  %113 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %6, align 8
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %113, i64 0, i32 2
  %115 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %114, align 8
  %116 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %119, label %191

119:                                              ; preds = %111
  %120 = sext i32 %117 to i64
  %121 = add nsw i64 %120, -1
  %122 = and i64 %120, 7
  %123 = icmp ult i64 %121, 7
  br i1 %123, label %172, label %124

124:                                              ; preds = %119
  %125 = sub nsw i64 %120, %122
  br label %126

126:                                              ; preds = %126, %124
  %127 = phi i64 [ 0, %124 ], [ %169, %126 ]
  %128 = phi i64 [ 1, %124 ], [ %168, %126 ]
  %129 = phi i64 [ %125, %124 ], [ %170, %126 ]
  %130 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %127
  %131 = load i32, i32* %130, align 4
  %132 = sext i32 %131 to i64
  %133 = mul nsw i64 %128, %132
  %134 = or i64 %127, 1
  %135 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = sext i32 %136 to i64
  %138 = mul nsw i64 %133, %137
  %139 = or i64 %127, 2
  %140 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = sext i32 %141 to i64
  %143 = mul nsw i64 %138, %142
  %144 = or i64 %127, 3
  %145 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = sext i32 %146 to i64
  %148 = mul nsw i64 %143, %147
  %149 = or i64 %127, 4
  %150 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = sext i32 %151 to i64
  %153 = mul nsw i64 %148, %152
  %154 = or i64 %127, 5
  %155 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = sext i32 %156 to i64
  %158 = mul nsw i64 %153, %157
  %159 = or i64 %127, 6
  %160 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = sext i32 %161 to i64
  %163 = mul nsw i64 %158, %162
  %164 = or i64 %127, 7
  %165 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %164
  %166 = load i32, i32* %165, align 4
  %167 = sext i32 %166 to i64
  %168 = mul nsw i64 %163, %167
  %169 = add nuw nsw i64 %127, 8
  %170 = add i64 %129, -8
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %126

172:                                              ; preds = %126, %119
  %173 = phi i64 [ undef, %119 ], [ %168, %126 ]
  %174 = phi i64 [ 0, %119 ], [ %169, %126 ]
  %175 = phi i64 [ 1, %119 ], [ %168, %126 ]
  %176 = icmp eq i64 %122, 0
  br i1 %176, label %188, label %177

177:                                              ; preds = %172, %177
  %178 = phi i64 [ %185, %177 ], [ %174, %172 ]
  %179 = phi i64 [ %184, %177 ], [ %175, %172 ]
  %180 = phi i64 [ %186, %177 ], [ %122, %172 ]
  %181 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %178
  %182 = load i32, i32* %181, align 4
  %183 = sext i32 %182 to i64
  %184 = mul nsw i64 %179, %183
  %185 = add nuw nsw i64 %178, 1
  %186 = add i64 %180, -1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %177, !llvm.loop !251

188:                                              ; preds = %177, %172
  %189 = phi i64 [ %173, %172 ], [ %184, %177 ]
  %190 = trunc i64 %189 to i32
  br label %191

191:                                              ; preds = %111, %188
  %192 = phi i32 [ 1, %111 ], [ %190, %188 ]
  %193 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %112, i64 0, i32 1, i64 0
  store i32 %192, i32* %193, align 4
  %194 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %195 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %194, align 8
  %196 = tail call i32 %195(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %105, %struct.TfLiteIntArray* %112) #16
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %282

198:                                              ; preds = %191
  %199 = tail call i32 @_ZN6tflite3ops7builtin6reduce18ResizeOutputTensorEP13TfLiteContextPNS2_9OpContextE(%struct.TfLiteContext* %0, %"struct.tflite::ops::builtin::reduce::OpContext"* %2)
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %282

201:                                              ; preds = %198, %104
  %202 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 1
  %203 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %202, align 8
  %204 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 0
  %205 = load i32, i32* %204, align 8
  %206 = icmp eq i32 %205, 3
  br i1 %206, label %207, label %228

207:                                              ; preds = %201
  %208 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 3, i32 0
  %209 = load float, float* %208, align 8
  %210 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %106, align 8
  %211 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %210, i64 0, i32 3, i32 0
  %212 = load float, float* %211, align 8
  %213 = fcmp une float %209, %212
  br i1 %213, label %214, label %219

214:                                              ; preds = %207
  %215 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %216 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %215, align 8
  %217 = fpext float %209 to double
  %218 = fpext float %212 to double
  tail call void (%struct.TfLiteContext*, i8*, ...) %216(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 521, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0), double %217, double %218) #16
  br label %282

219:                                              ; preds = %207
  %220 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 3, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %210, i64 0, i32 3, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %221, %223
  br i1 %224, label %228, label %225

225:                                              ; preds = %219
  %226 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %227 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %226, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %227(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 523, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0), i32 %221, i32 %223) #16
  br label %282

228:                                              ; preds = %219, %201
  %229 = icmp eq %struct.TfLiteTensor* %203, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %228
  %231 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 1
  %232 = bitcast %union.TfLitePtrUnion* %231 to i8**
  %233 = load i8*, i8** %232, align 8
  br label %234

234:                                              ; preds = %228, %230
  %235 = phi i8* [ %233, %230 ], [ null, %228 ]
  %236 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 2
  %237 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %236, align 8
  %238 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %237, i64 0, i32 1, i64 0
  %239 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %237, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %106, align 8
  %242 = icmp eq %struct.TfLiteTensor* %241, null
  br i1 %242, label %247, label %243

243:                                              ; preds = %234
  %244 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %241, i64 0, i32 1
  %245 = bitcast %union.TfLitePtrUnion* %244 to i8**
  %246 = load i8*, i8** %245, align 8
  br label %247

247:                                              ; preds = %234, %243
  %248 = phi i8* [ %246, %243 ], [ null, %234 ]
  %249 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %241, i64 0, i32 2
  %250 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %249, align 8
  %251 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %250, i64 0, i32 1, i64 0
  %252 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %250, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %6, align 8
  %255 = icmp eq %struct.TfLiteTensor* %254, null
  br i1 %255, label %259, label %256

256:                                              ; preds = %247
  %257 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %254, i64 0, i32 1, i32 0
  %258 = load i32*, i32** %257, align 8
  br label %259

259:                                              ; preds = %247, %256
  %260 = phi i32* [ %258, %256 ], [ null, %247 ]
  %261 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 0
  %262 = load %struct.TfLiteReducerParams*, %struct.TfLiteReducerParams** %261, align 8
  %263 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %262, i64 0, i32 0
  %264 = load i8, i8* %263, align 1, !range !6
  %265 = icmp ne i8 %264, 0
  %266 = icmp eq %struct.TfLiteTensor* %95, null
  br i1 %266, label %270, label %267

267:                                              ; preds = %259
  %268 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %95, i64 0, i32 1, i32 0
  %269 = load i32*, i32** %268, align 8
  br label %270

270:                                              ; preds = %259, %267
  %271 = phi i32* [ %269, %267 ], [ null, %259 ]
  %272 = icmp eq %struct.TfLiteTensor* %105, null
  br i1 %272, label %276, label %273

273:                                              ; preds = %270
  %274 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %105, i64 0, i32 1, i32 0
  %275 = load i32*, i32** %274, align 8
  br label %276

276:                                              ; preds = %270, %273
  %277 = phi i32* [ %275, %273 ], [ null, %270 ]
  %278 = tail call zeroext i1 @_ZN6tflite13reference_ops13ReduceGenericIhEEbPKT_PKiiPS2_S6_iS6_lbPiS8_S2_PFS2_S2_S2_E(i8* %235, i32* %238, i32 %240, i8* %248, i32* %251, i32 %253, i32* %260, i64 %83, i1 zeroext %265, i32* %271, i32* %277, i8 zeroext %3, i8 (i8, i8)* %4)
  br i1 %278, label %282, label %279

279:                                              ; preds = %276
  %280 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %281 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %280, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %281(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 533, i8* getelementptr inbounds ([401 x i8], [401 x i8]* @.str.23, i64 0, i64 0)) #16
  br label %282

282:                                              ; preds = %276, %198, %191, %279, %225, %214
  %283 = phi i32 [ 1, %214 ], [ 1, %225 ], [ 1, %279 ], [ %199, %198 ], [ %196, %191 ], [ 0, %276 ]
  ret i32 %283
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite13reference_ops13ReduceGenericIhEEbPKT_PKiiPS2_S6_iS6_lbPiS8_S2_PFS2_S2_S2_E(i8*, i32*, i32, i8*, i32*, i32, i32*, i64, i1 zeroext, i32*, i32*, i8 zeroext, i8 (i8, i8)*) local_unnamed_addr #6 comdat {
  %14 = icmp sgt i32 %5, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %13
  %16 = zext i32 %5 to i64
  br label %21

17:                                               ; preds = %29
  %18 = icmp eq i64 %30, 0
  br i1 %18, label %33, label %19

19:                                               ; preds = %17, %13
  %20 = phi i64 [ %30, %17 ], [ 1, %13 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 %11, i64 %20, i1 false) #16
  br label %33

21:                                               ; preds = %29, %15
  %22 = phi i64 [ 0, %15 ], [ %31, %29 ]
  %23 = phi i64 [ 1, %15 ], [ %30, %29 ]
  %24 = getelementptr inbounds i32, i32* %4, i64 %22
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = udiv i64 -1, %26
  %28 = icmp ugt i64 %23, %27
  br i1 %28, label %208, label %29

29:                                               ; preds = %21
  %30 = mul i64 %23, %26
  %31 = add nuw nsw i64 %22, 1
  %32 = icmp eq i64 %31, %16
  br i1 %32, label %17, label %21

33:                                               ; preds = %17, %19
  %34 = icmp ne i32 %2, 0
  %35 = icmp sgt i64 %7, 0
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %76

37:                                               ; preds = %33, %70
  %38 = phi i32 [ %71, %70 ], [ 0, %33 ]
  %39 = phi i32 [ %72, %70 ], [ 0, %33 ]
  %40 = phi i32 [ %73, %70 ], [ 0, %33 ]
  %41 = phi i64 [ %74, %70 ], [ 0, %33 ]
  %42 = getelementptr inbounds i32, i32* %6, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = icmp slt i32 %43, 0
  %45 = select i1 %44, i32 %2, i32 0
  %46 = add nsw i32 %45, %43
  %47 = icmp sgt i32 %46, -1
  %48 = icmp slt i32 %46, %2
  %49 = and i1 %47, %48
  br i1 %49, label %50, label %208

50:                                               ; preds = %37
  %51 = icmp sgt i32 %40, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %50
  %53 = sext i32 %40 to i64
  br label %66

54:                                               ; preds = %50
  %55 = sext i32 %39 to i64
  %56 = load i32, i32* %10, align 4
  %57 = icmp eq i32 %56, %46
  br i1 %57, label %70, label %58

58:                                               ; preds = %54, %61
  %59 = phi i64 [ %65, %61 ], [ 1, %54 ]
  %60 = icmp slt i64 %59, %55
  br i1 %60, label %61, label %66

61:                                               ; preds = %58
  %62 = getelementptr inbounds i32, i32* %10, i64 %59
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, %46
  %65 = add nuw nsw i64 %59, 1
  br i1 %64, label %70, label %58

66:                                               ; preds = %58, %52
  %67 = phi i64 [ %53, %52 ], [ %55, %58 ]
  %68 = getelementptr inbounds i32, i32* %10, i64 %67
  store i32 %46, i32* %68, align 4
  %69 = add nsw i32 %38, 1
  br label %70

70:                                               ; preds = %61, %54, %66
  %71 = phi i32 [ %69, %66 ], [ %38, %54 ], [ %38, %61 ]
  %72 = phi i32 [ %69, %66 ], [ %39, %54 ], [ %39, %61 ]
  %73 = phi i32 [ %69, %66 ], [ %40, %54 ], [ %39, %61 ]
  %74 = add nuw nsw i64 %41, 1
  %75 = icmp eq i64 %74, %7
  br i1 %75, label %76, label %37

76:                                               ; preds = %70, %33
  %77 = phi i32 [ 0, %33 ], [ %71, %70 ]
  %78 = icmp sgt i32 %2, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = zext i32 %2 to i64
  br label %85

81:                                               ; preds = %76
  %82 = bitcast i32* %9 to i8*
  %83 = zext i32 %2 to i64
  %84 = shl nuw nsw i64 %83, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %82, i8 0, i64 %84, i1 false) #16
  br label %85

85:                                               ; preds = %81, %79
  %86 = phi i64 [ %80, %79 ], [ %83, %81 ]
  %87 = icmp eq i32* %10, null
  %88 = icmp slt i32 %77, 1
  %89 = or i1 %87, %88
  %90 = zext i32 %77 to i64
  %91 = icmp eq i32 %2, 0
  %92 = sext i32 %2 to i64
  %93 = add nsw i64 %86, -1
  %94 = and i64 %86, 3
  %95 = icmp ult i64 %93, 3
  %96 = sub nsw i64 %86, %94
  %97 = icmp eq i64 %94, 0
  br label %98

98:                                               ; preds = %200, %85
  br i1 %78, label %99, label %188

99:                                               ; preds = %98
  br i1 %95, label %142, label %100

100:                                              ; preds = %99, %100
  %101 = phi i64 [ %139, %100 ], [ 0, %99 ]
  %102 = phi i64 [ %138, %100 ], [ 0, %99 ]
  %103 = phi i64 [ %140, %100 ], [ %96, %99 ]
  %104 = getelementptr inbounds i32, i32* %1, i64 %101
  %105 = load i32, i32* %104, align 4
  %106 = sext i32 %105 to i64
  %107 = mul i64 %102, %106
  %108 = getelementptr inbounds i32, i32* %9, i64 %101
  %109 = load i32, i32* %108, align 4
  %110 = sext i32 %109 to i64
  %111 = add i64 %107, %110
  %112 = or i64 %101, 1
  %113 = getelementptr inbounds i32, i32* %1, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = sext i32 %114 to i64
  %116 = mul i64 %111, %115
  %117 = getelementptr inbounds i32, i32* %9, i64 %112
  %118 = load i32, i32* %117, align 4
  %119 = sext i32 %118 to i64
  %120 = add i64 %116, %119
  %121 = or i64 %101, 2
  %122 = getelementptr inbounds i32, i32* %1, i64 %121
  %123 = load i32, i32* %122, align 4
  %124 = sext i32 %123 to i64
  %125 = mul i64 %120, %124
  %126 = getelementptr inbounds i32, i32* %9, i64 %121
  %127 = load i32, i32* %126, align 4
  %128 = sext i32 %127 to i64
  %129 = add i64 %125, %128
  %130 = or i64 %101, 3
  %131 = getelementptr inbounds i32, i32* %1, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = sext i32 %132 to i64
  %134 = mul i64 %129, %133
  %135 = getelementptr inbounds i32, i32* %9, i64 %130
  %136 = load i32, i32* %135, align 4
  %137 = sext i32 %136 to i64
  %138 = add i64 %134, %137
  %139 = add nuw nsw i64 %101, 4
  %140 = add i64 %103, -4
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %100

142:                                              ; preds = %100, %99
  %143 = phi i64 [ undef, %99 ], [ %138, %100 ]
  %144 = phi i64 [ 0, %99 ], [ %139, %100 ]
  %145 = phi i64 [ 0, %99 ], [ %138, %100 ]
  br i1 %97, label %161, label %146

146:                                              ; preds = %142, %146
  %147 = phi i64 [ %158, %146 ], [ %144, %142 ]
  %148 = phi i64 [ %157, %146 ], [ %145, %142 ]
  %149 = phi i64 [ %159, %146 ], [ %94, %142 ]
  %150 = getelementptr inbounds i32, i32* %1, i64 %147
  %151 = load i32, i32* %150, align 4
  %152 = sext i32 %151 to i64
  %153 = mul i64 %148, %152
  %154 = getelementptr inbounds i32, i32* %9, i64 %147
  %155 = load i32, i32* %154, align 4
  %156 = sext i32 %155 to i64
  %157 = add i64 %153, %156
  %158 = add nuw nsw i64 %147, 1
  %159 = add i64 %149, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %146, !llvm.loop !252

161:                                              ; preds = %146, %142
  %162 = phi i64 [ %143, %142 ], [ %157, %146 ]
  br label %163

163:                                              ; preds = %161, %184
  %164 = phi i64 [ %186, %184 ], [ 0, %161 ]
  %165 = phi i64 [ %185, %184 ], [ 0, %161 ]
  br i1 %89, label %175, label %168

166:                                              ; preds = %168
  %167 = icmp eq i64 %174, %90
  br i1 %167, label %175, label %168

168:                                              ; preds = %163, %166
  %169 = phi i64 [ %174, %166 ], [ 0, %163 ]
  %170 = getelementptr inbounds i32, i32* %10, i64 %169
  %171 = load i32, i32* %170, align 4
  %172 = zext i32 %171 to i64
  %173 = icmp eq i64 %164, %172
  %174 = add nuw nsw i64 %169, 1
  br i1 %173, label %184, label %166

175:                                              ; preds = %166, %163
  %176 = getelementptr inbounds i32, i32* %1, i64 %164
  %177 = load i32, i32* %176, align 4
  %178 = sext i32 %177 to i64
  %179 = mul i64 %165, %178
  %180 = getelementptr inbounds i32, i32* %9, i64 %164
  %181 = load i32, i32* %180, align 4
  %182 = sext i32 %181 to i64
  %183 = add i64 %179, %182
  br label %184

184:                                              ; preds = %168, %175
  %185 = phi i64 [ %183, %175 ], [ %165, %168 ]
  %186 = add nuw nsw i64 %164, 1
  %187 = icmp eq i64 %186, %86
  br i1 %187, label %188, label %163

188:                                              ; preds = %184, %98
  %189 = phi i64 [ 0, %98 ], [ %162, %184 ]
  %190 = phi i64 [ 0, %98 ], [ %185, %184 ]
  %191 = getelementptr inbounds i8, i8* %3, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = getelementptr inbounds i8, i8* %0, i64 %189
  %194 = load i8, i8* %193, align 1
  %195 = tail call zeroext i8 %12(i8 zeroext %192, i8 zeroext %194) #16
  store i8 %195, i8* %191, align 1
  br i1 %91, label %208, label %196

196:                                              ; preds = %188, %200
  %197 = phi i64 [ %198, %200 ], [ %92, %188 ]
  %198 = add nsw i64 %197, -1
  %199 = icmp sgt i64 %197, 0
  br i1 %199, label %200, label %208

200:                                              ; preds = %196
  %201 = getelementptr inbounds i32, i32* %9, i64 %198
  %202 = load i32, i32* %201, align 4
  %203 = add nsw i32 %202, 1
  %204 = getelementptr inbounds i32, i32* %1, i64 %198
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, %203
  %207 = select i1 %206, i32 0, i32 %203
  store i32 %207, i32* %201, align 4
  br i1 %206, label %196, label %98

208:                                              ; preds = %21, %37, %188, %196
  %209 = phi i1 [ true, %196 ], [ true, %188 ], [ false, %37 ], [ false, %21 ]
  ret i1 %209
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZZN6tflite3ops7builtin6reduce8EvalTypeIhEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlhhE_8__invokeEhh(i8 zeroext, i8 zeroext) #6 comdat align 2 {
  %3 = add i8 %1, %0
  ret i8 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZZN6tflite3ops7builtin6reduce8EvalTypeIhEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlhhE0_8__invokeEhh(i8 zeroext, i8 zeroext) #6 comdat align 2 {
  %3 = mul i8 %1, %0
  ret i8 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZZN6tflite3ops7builtin6reduce8EvalTypeIhEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlhhE1_8__invokeEhh(i8 zeroext, i8 zeroext) #6 comdat align 2 {
  %3 = icmp ugt i8 %1, %0
  %4 = select i1 %3, i8 %1, i8 %0
  ret i8 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZZN6tflite3ops7builtin6reduce8EvalTypeIhEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlhhE2_8__invokeEhh(i8 zeroext, i8 zeroext) #6 comdat align 2 {
  %3 = icmp ult i8 %1, %0
  %4 = select i1 %3, i8 %1, i8 %0
  ret i8 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin6reduce9EvalLogicIaEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextET_PFSB_SB_SB_E(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::reduce::OpContext"*, i8 signext, i8 (i8, i8)*) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 2
  %7 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %6, align 8
  %8 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %9 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %8, align 8
  %10 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %82

13:                                               ; preds = %5
  %14 = sext i32 %11 to i64
  %15 = add nsw i64 %14, -1
  %16 = and i64 %14, 7
  %17 = icmp ult i64 %15, 7
  br i1 %17, label %66, label %18

18:                                               ; preds = %13
  %19 = sub nsw i64 %14, %16
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i64 [ 0, %18 ], [ %63, %20 ]
  %22 = phi i64 [ 1, %18 ], [ %62, %20 ]
  %23 = phi i64 [ %19, %18 ], [ %64, %20 ]
  %24 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %21
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = mul nsw i64 %22, %26
  %28 = or i64 %21, 1
  %29 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = mul nsw i64 %27, %31
  %33 = or i64 %21, 2
  %34 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = mul nsw i64 %32, %36
  %38 = or i64 %21, 3
  %39 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %40 to i64
  %42 = mul nsw i64 %37, %41
  %43 = or i64 %21, 4
  %44 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  %47 = mul nsw i64 %42, %46
  %48 = or i64 %21, 5
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = mul nsw i64 %47, %51
  %53 = or i64 %21, 6
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = mul nsw i64 %52, %56
  %58 = or i64 %21, 7
  %59 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %60 to i64
  %62 = mul nsw i64 %57, %61
  %63 = add nuw nsw i64 %21, 8
  %64 = add i64 %23, -8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %20

66:                                               ; preds = %20, %13
  %67 = phi i64 [ undef, %13 ], [ %62, %20 ]
  %68 = phi i64 [ 0, %13 ], [ %63, %20 ]
  %69 = phi i64 [ 1, %13 ], [ %62, %20 ]
  %70 = icmp eq i64 %16, 0
  br i1 %70, label %82, label %71

71:                                               ; preds = %66, %71
  %72 = phi i64 [ %79, %71 ], [ %68, %66 ]
  %73 = phi i64 [ %78, %71 ], [ %69, %66 ]
  %74 = phi i64 [ %80, %71 ], [ %16, %66 ]
  %75 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 %72
  %76 = load i32, i32* %75, align 4
  %77 = sext i32 %76 to i64
  %78 = mul nsw i64 %73, %77
  %79 = add nuw nsw i64 %72, 1
  %80 = add i64 %74, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %71, !llvm.loop !253

82:                                               ; preds = %66, %71, %5
  %83 = phi i64 [ 1, %5 ], [ %67, %66 ], [ %78, %71 ]
  %84 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %85 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %84, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp slt i32 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %91 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %90, align 8
  %92 = sext i32 %87 to i64
  %93 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %91, i64 %92
  br label %94

94:                                               ; preds = %82, %89
  %95 = phi %struct.TfLiteTensor* [ %93, %89 ], [ null, %82 ]
  %96 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 1
  %97 = load i32, i32* %96, align 4
  %98 = icmp slt i32 %97, 0
  br i1 %98, label %104, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %101 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %100, align 8
  %102 = sext i32 %97 to i64
  %103 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %101, i64 %102
  br label %104

104:                                              ; preds = %94, %99
  %105 = phi %struct.TfLiteTensor* [ %103, %99 ], [ null, %94 ]
  %106 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 3
  %107 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %106, align 8
  %108 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %107, i64 0, i32 4
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 4
  br i1 %110, label %111, label %201

111:                                              ; preds = %104
  %112 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #16
  %113 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %6, align 8
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %113, i64 0, i32 2
  %115 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %114, align 8
  %116 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %119, label %191

119:                                              ; preds = %111
  %120 = sext i32 %117 to i64
  %121 = add nsw i64 %120, -1
  %122 = and i64 %120, 7
  %123 = icmp ult i64 %121, 7
  br i1 %123, label %172, label %124

124:                                              ; preds = %119
  %125 = sub nsw i64 %120, %122
  br label %126

126:                                              ; preds = %126, %124
  %127 = phi i64 [ 0, %124 ], [ %169, %126 ]
  %128 = phi i64 [ 1, %124 ], [ %168, %126 ]
  %129 = phi i64 [ %125, %124 ], [ %170, %126 ]
  %130 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %127
  %131 = load i32, i32* %130, align 4
  %132 = sext i32 %131 to i64
  %133 = mul nsw i64 %128, %132
  %134 = or i64 %127, 1
  %135 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = sext i32 %136 to i64
  %138 = mul nsw i64 %133, %137
  %139 = or i64 %127, 2
  %140 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = sext i32 %141 to i64
  %143 = mul nsw i64 %138, %142
  %144 = or i64 %127, 3
  %145 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = sext i32 %146 to i64
  %148 = mul nsw i64 %143, %147
  %149 = or i64 %127, 4
  %150 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = sext i32 %151 to i64
  %153 = mul nsw i64 %148, %152
  %154 = or i64 %127, 5
  %155 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = sext i32 %156 to i64
  %158 = mul nsw i64 %153, %157
  %159 = or i64 %127, 6
  %160 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = sext i32 %161 to i64
  %163 = mul nsw i64 %158, %162
  %164 = or i64 %127, 7
  %165 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %164
  %166 = load i32, i32* %165, align 4
  %167 = sext i32 %166 to i64
  %168 = mul nsw i64 %163, %167
  %169 = add nuw nsw i64 %127, 8
  %170 = add i64 %129, -8
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %126

172:                                              ; preds = %126, %119
  %173 = phi i64 [ undef, %119 ], [ %168, %126 ]
  %174 = phi i64 [ 0, %119 ], [ %169, %126 ]
  %175 = phi i64 [ 1, %119 ], [ %168, %126 ]
  %176 = icmp eq i64 %122, 0
  br i1 %176, label %188, label %177

177:                                              ; preds = %172, %177
  %178 = phi i64 [ %185, %177 ], [ %174, %172 ]
  %179 = phi i64 [ %184, %177 ], [ %175, %172 ]
  %180 = phi i64 [ %186, %177 ], [ %122, %172 ]
  %181 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 %178
  %182 = load i32, i32* %181, align 4
  %183 = sext i32 %182 to i64
  %184 = mul nsw i64 %179, %183
  %185 = add nuw nsw i64 %178, 1
  %186 = add i64 %180, -1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %177, !llvm.loop !254

188:                                              ; preds = %177, %172
  %189 = phi i64 [ %173, %172 ], [ %184, %177 ]
  %190 = trunc i64 %189 to i32
  br label %191

191:                                              ; preds = %111, %188
  %192 = phi i32 [ 1, %111 ], [ %190, %188 ]
  %193 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %112, i64 0, i32 1, i64 0
  store i32 %192, i32* %193, align 4
  %194 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %195 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %194, align 8
  %196 = tail call i32 %195(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %105, %struct.TfLiteIntArray* %112) #16
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %282

198:                                              ; preds = %191
  %199 = tail call i32 @_ZN6tflite3ops7builtin6reduce18ResizeOutputTensorEP13TfLiteContextPNS2_9OpContextE(%struct.TfLiteContext* %0, %"struct.tflite::ops::builtin::reduce::OpContext"* %2)
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %282

201:                                              ; preds = %198, %104
  %202 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 1
  %203 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %202, align 8
  %204 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 0
  %205 = load i32, i32* %204, align 8
  %206 = icmp eq i32 %205, 3
  br i1 %206, label %207, label %228

207:                                              ; preds = %201
  %208 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 3, i32 0
  %209 = load float, float* %208, align 8
  %210 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %106, align 8
  %211 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %210, i64 0, i32 3, i32 0
  %212 = load float, float* %211, align 8
  %213 = fcmp une float %209, %212
  br i1 %213, label %214, label %219

214:                                              ; preds = %207
  %215 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %216 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %215, align 8
  %217 = fpext float %209 to double
  %218 = fpext float %212 to double
  tail call void (%struct.TfLiteContext*, i8*, ...) %216(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 521, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0), double %217, double %218) #16
  br label %282

219:                                              ; preds = %207
  %220 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 3, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %210, i64 0, i32 3, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %221, %223
  br i1 %224, label %228, label %225

225:                                              ; preds = %219
  %226 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %227 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %226, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %227(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 523, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0), i32 %221, i32 %223) #16
  br label %282

228:                                              ; preds = %219, %201
  %229 = icmp eq %struct.TfLiteTensor* %203, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %228
  %231 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 1
  %232 = bitcast %union.TfLitePtrUnion* %231 to i8**
  %233 = load i8*, i8** %232, align 8
  br label %234

234:                                              ; preds = %228, %230
  %235 = phi i8* [ %233, %230 ], [ null, %228 ]
  %236 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %203, i64 0, i32 2
  %237 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %236, align 8
  %238 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %237, i64 0, i32 1, i64 0
  %239 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %237, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %106, align 8
  %242 = icmp eq %struct.TfLiteTensor* %241, null
  br i1 %242, label %247, label %243

243:                                              ; preds = %234
  %244 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %241, i64 0, i32 1
  %245 = bitcast %union.TfLitePtrUnion* %244 to i8**
  %246 = load i8*, i8** %245, align 8
  br label %247

247:                                              ; preds = %234, %243
  %248 = phi i8* [ %246, %243 ], [ null, %234 ]
  %249 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %241, i64 0, i32 2
  %250 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %249, align 8
  %251 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %250, i64 0, i32 1, i64 0
  %252 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %250, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %6, align 8
  %255 = icmp eq %struct.TfLiteTensor* %254, null
  br i1 %255, label %259, label %256

256:                                              ; preds = %247
  %257 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %254, i64 0, i32 1, i32 0
  %258 = load i32*, i32** %257, align 8
  br label %259

259:                                              ; preds = %247, %256
  %260 = phi i32* [ %258, %256 ], [ null, %247 ]
  %261 = getelementptr inbounds %"struct.tflite::ops::builtin::reduce::OpContext", %"struct.tflite::ops::builtin::reduce::OpContext"* %2, i64 0, i32 0
  %262 = load %struct.TfLiteReducerParams*, %struct.TfLiteReducerParams** %261, align 8
  %263 = getelementptr inbounds %struct.TfLiteReducerParams, %struct.TfLiteReducerParams* %262, i64 0, i32 0
  %264 = load i8, i8* %263, align 1, !range !6
  %265 = icmp ne i8 %264, 0
  %266 = icmp eq %struct.TfLiteTensor* %95, null
  br i1 %266, label %270, label %267

267:                                              ; preds = %259
  %268 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %95, i64 0, i32 1, i32 0
  %269 = load i32*, i32** %268, align 8
  br label %270

270:                                              ; preds = %259, %267
  %271 = phi i32* [ %269, %267 ], [ null, %259 ]
  %272 = icmp eq %struct.TfLiteTensor* %105, null
  br i1 %272, label %276, label %273

273:                                              ; preds = %270
  %274 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %105, i64 0, i32 1, i32 0
  %275 = load i32*, i32** %274, align 8
  br label %276

276:                                              ; preds = %270, %273
  %277 = phi i32* [ %275, %273 ], [ null, %270 ]
  %278 = tail call zeroext i1 @_ZN6tflite13reference_ops13ReduceGenericIaEEbPKT_PKiiPS2_S6_iS6_lbPiS8_S2_PFS2_S2_S2_E(i8* %235, i32* %238, i32 %240, i8* %248, i32* %251, i32 %253, i32* %260, i64 %83, i1 zeroext %265, i32* %271, i32* %277, i8 signext %3, i8 (i8, i8)* %4)
  br i1 %278, label %282, label %279

279:                                              ; preds = %276
  %280 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %281 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %280, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %281(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i32 533, i8* getelementptr inbounds ([401 x i8], [401 x i8]* @.str.23, i64 0, i64 0)) #16
  br label %282

282:                                              ; preds = %276, %198, %191, %279, %225, %214
  %283 = phi i32 [ 1, %214 ], [ 1, %225 ], [ 1, %279 ], [ %199, %198 ], [ %196, %191 ], [ 0, %276 ]
  ret i32 %283
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite13reference_ops13ReduceGenericIaEEbPKT_PKiiPS2_S6_iS6_lbPiS8_S2_PFS2_S2_S2_E(i8*, i32*, i32, i8*, i32*, i32, i32*, i64, i1 zeroext, i32*, i32*, i8 signext, i8 (i8, i8)*) local_unnamed_addr #6 comdat {
  %14 = icmp sgt i32 %5, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %13
  %16 = zext i32 %5 to i64
  br label %21

17:                                               ; preds = %29
  %18 = icmp eq i64 %30, 0
  br i1 %18, label %33, label %19

19:                                               ; preds = %17, %13
  %20 = phi i64 [ %30, %17 ], [ 1, %13 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 %11, i64 %20, i1 false) #16
  br label %33

21:                                               ; preds = %29, %15
  %22 = phi i64 [ 0, %15 ], [ %31, %29 ]
  %23 = phi i64 [ 1, %15 ], [ %30, %29 ]
  %24 = getelementptr inbounds i32, i32* %4, i64 %22
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = udiv i64 -1, %26
  %28 = icmp ugt i64 %23, %27
  br i1 %28, label %208, label %29

29:                                               ; preds = %21
  %30 = mul i64 %23, %26
  %31 = add nuw nsw i64 %22, 1
  %32 = icmp eq i64 %31, %16
  br i1 %32, label %17, label %21

33:                                               ; preds = %17, %19
  %34 = icmp ne i32 %2, 0
  %35 = icmp sgt i64 %7, 0
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %76

37:                                               ; preds = %33, %70
  %38 = phi i32 [ %71, %70 ], [ 0, %33 ]
  %39 = phi i32 [ %72, %70 ], [ 0, %33 ]
  %40 = phi i32 [ %73, %70 ], [ 0, %33 ]
  %41 = phi i64 [ %74, %70 ], [ 0, %33 ]
  %42 = getelementptr inbounds i32, i32* %6, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = icmp slt i32 %43, 0
  %45 = select i1 %44, i32 %2, i32 0
  %46 = add nsw i32 %45, %43
  %47 = icmp sgt i32 %46, -1
  %48 = icmp slt i32 %46, %2
  %49 = and i1 %47, %48
  br i1 %49, label %50, label %208

50:                                               ; preds = %37
  %51 = icmp sgt i32 %40, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %50
  %53 = sext i32 %40 to i64
  br label %66

54:                                               ; preds = %50
  %55 = sext i32 %39 to i64
  %56 = load i32, i32* %10, align 4
  %57 = icmp eq i32 %56, %46
  br i1 %57, label %70, label %58

58:                                               ; preds = %54, %61
  %59 = phi i64 [ %65, %61 ], [ 1, %54 ]
  %60 = icmp slt i64 %59, %55
  br i1 %60, label %61, label %66

61:                                               ; preds = %58
  %62 = getelementptr inbounds i32, i32* %10, i64 %59
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, %46
  %65 = add nuw nsw i64 %59, 1
  br i1 %64, label %70, label %58

66:                                               ; preds = %58, %52
  %67 = phi i64 [ %53, %52 ], [ %55, %58 ]
  %68 = getelementptr inbounds i32, i32* %10, i64 %67
  store i32 %46, i32* %68, align 4
  %69 = add nsw i32 %38, 1
  br label %70

70:                                               ; preds = %61, %54, %66
  %71 = phi i32 [ %69, %66 ], [ %38, %54 ], [ %38, %61 ]
  %72 = phi i32 [ %69, %66 ], [ %39, %54 ], [ %39, %61 ]
  %73 = phi i32 [ %69, %66 ], [ %40, %54 ], [ %39, %61 ]
  %74 = add nuw nsw i64 %41, 1
  %75 = icmp eq i64 %74, %7
  br i1 %75, label %76, label %37

76:                                               ; preds = %70, %33
  %77 = phi i32 [ 0, %33 ], [ %71, %70 ]
  %78 = icmp sgt i32 %2, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = zext i32 %2 to i64
  br label %85

81:                                               ; preds = %76
  %82 = bitcast i32* %9 to i8*
  %83 = zext i32 %2 to i64
  %84 = shl nuw nsw i64 %83, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %82, i8 0, i64 %84, i1 false) #16
  br label %85

85:                                               ; preds = %81, %79
  %86 = phi i64 [ %80, %79 ], [ %83, %81 ]
  %87 = icmp eq i32* %10, null
  %88 = icmp slt i32 %77, 1
  %89 = or i1 %87, %88
  %90 = zext i32 %77 to i64
  %91 = icmp eq i32 %2, 0
  %92 = sext i32 %2 to i64
  %93 = add nsw i64 %86, -1
  %94 = and i64 %86, 3
  %95 = icmp ult i64 %93, 3
  %96 = sub nsw i64 %86, %94
  %97 = icmp eq i64 %94, 0
  br label %98

98:                                               ; preds = %200, %85
  br i1 %78, label %99, label %188

99:                                               ; preds = %98
  br i1 %95, label %142, label %100

100:                                              ; preds = %99, %100
  %101 = phi i64 [ %139, %100 ], [ 0, %99 ]
  %102 = phi i64 [ %138, %100 ], [ 0, %99 ]
  %103 = phi i64 [ %140, %100 ], [ %96, %99 ]
  %104 = getelementptr inbounds i32, i32* %1, i64 %101
  %105 = load i32, i32* %104, align 4
  %106 = sext i32 %105 to i64
  %107 = mul i64 %102, %106
  %108 = getelementptr inbounds i32, i32* %9, i64 %101
  %109 = load i32, i32* %108, align 4
  %110 = sext i32 %109 to i64
  %111 = add i64 %107, %110
  %112 = or i64 %101, 1
  %113 = getelementptr inbounds i32, i32* %1, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = sext i32 %114 to i64
  %116 = mul i64 %111, %115
  %117 = getelementptr inbounds i32, i32* %9, i64 %112
  %118 = load i32, i32* %117, align 4
  %119 = sext i32 %118 to i64
  %120 = add i64 %116, %119
  %121 = or i64 %101, 2
  %122 = getelementptr inbounds i32, i32* %1, i64 %121
  %123 = load i32, i32* %122, align 4
  %124 = sext i32 %123 to i64
  %125 = mul i64 %120, %124
  %126 = getelementptr inbounds i32, i32* %9, i64 %121
  %127 = load i32, i32* %126, align 4
  %128 = sext i32 %127 to i64
  %129 = add i64 %125, %128
  %130 = or i64 %101, 3
  %131 = getelementptr inbounds i32, i32* %1, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = sext i32 %132 to i64
  %134 = mul i64 %129, %133
  %135 = getelementptr inbounds i32, i32* %9, i64 %130
  %136 = load i32, i32* %135, align 4
  %137 = sext i32 %136 to i64
  %138 = add i64 %134, %137
  %139 = add nuw nsw i64 %101, 4
  %140 = add i64 %103, -4
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %100

142:                                              ; preds = %100, %99
  %143 = phi i64 [ undef, %99 ], [ %138, %100 ]
  %144 = phi i64 [ 0, %99 ], [ %139, %100 ]
  %145 = phi i64 [ 0, %99 ], [ %138, %100 ]
  br i1 %97, label %161, label %146

146:                                              ; preds = %142, %146
  %147 = phi i64 [ %158, %146 ], [ %144, %142 ]
  %148 = phi i64 [ %157, %146 ], [ %145, %142 ]
  %149 = phi i64 [ %159, %146 ], [ %94, %142 ]
  %150 = getelementptr inbounds i32, i32* %1, i64 %147
  %151 = load i32, i32* %150, align 4
  %152 = sext i32 %151 to i64
  %153 = mul i64 %148, %152
  %154 = getelementptr inbounds i32, i32* %9, i64 %147
  %155 = load i32, i32* %154, align 4
  %156 = sext i32 %155 to i64
  %157 = add i64 %153, %156
  %158 = add nuw nsw i64 %147, 1
  %159 = add i64 %149, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %146, !llvm.loop !255

161:                                              ; preds = %146, %142
  %162 = phi i64 [ %143, %142 ], [ %157, %146 ]
  br label %163

163:                                              ; preds = %161, %184
  %164 = phi i64 [ %186, %184 ], [ 0, %161 ]
  %165 = phi i64 [ %185, %184 ], [ 0, %161 ]
  br i1 %89, label %175, label %168

166:                                              ; preds = %168
  %167 = icmp eq i64 %174, %90
  br i1 %167, label %175, label %168

168:                                              ; preds = %163, %166
  %169 = phi i64 [ %174, %166 ], [ 0, %163 ]
  %170 = getelementptr inbounds i32, i32* %10, i64 %169
  %171 = load i32, i32* %170, align 4
  %172 = zext i32 %171 to i64
  %173 = icmp eq i64 %164, %172
  %174 = add nuw nsw i64 %169, 1
  br i1 %173, label %184, label %166

175:                                              ; preds = %166, %163
  %176 = getelementptr inbounds i32, i32* %1, i64 %164
  %177 = load i32, i32* %176, align 4
  %178 = sext i32 %177 to i64
  %179 = mul i64 %165, %178
  %180 = getelementptr inbounds i32, i32* %9, i64 %164
  %181 = load i32, i32* %180, align 4
  %182 = sext i32 %181 to i64
  %183 = add i64 %179, %182
  br label %184

184:                                              ; preds = %168, %175
  %185 = phi i64 [ %183, %175 ], [ %165, %168 ]
  %186 = add nuw nsw i64 %164, 1
  %187 = icmp eq i64 %186, %86
  br i1 %187, label %188, label %163

188:                                              ; preds = %184, %98
  %189 = phi i64 [ 0, %98 ], [ %162, %184 ]
  %190 = phi i64 [ 0, %98 ], [ %185, %184 ]
  %191 = getelementptr inbounds i8, i8* %3, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = getelementptr inbounds i8, i8* %0, i64 %189
  %194 = load i8, i8* %193, align 1
  %195 = tail call signext i8 %12(i8 signext %192, i8 signext %194) #16
  store i8 %195, i8* %191, align 1
  br i1 %91, label %208, label %196

196:                                              ; preds = %188, %200
  %197 = phi i64 [ %198, %200 ], [ %92, %188 ]
  %198 = add nsw i64 %197, -1
  %199 = icmp sgt i64 %197, 0
  br i1 %199, label %200, label %208

200:                                              ; preds = %196
  %201 = getelementptr inbounds i32, i32* %9, i64 %198
  %202 = load i32, i32* %201, align 4
  %203 = add nsw i32 %202, 1
  %204 = getelementptr inbounds i32, i32* %1, i64 %198
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, %203
  %207 = select i1 %206, i32 0, i32 %203
  store i32 %207, i32* %201, align 4
  br i1 %206, label %196, label %98

208:                                              ; preds = %21, %37, %188, %196
  %209 = phi i1 [ true, %196 ], [ true, %188 ], [ false, %37 ], [ false, %21 ]
  ret i1 %209
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZZN6tflite3ops7builtin6reduce8EvalTypeIaEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlaaE_8__invokeEaa(i8 signext, i8 signext) #6 comdat align 2 {
  %3 = add i8 %1, %0
  ret i8 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZZN6tflite3ops7builtin6reduce8EvalTypeIaEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlaaE0_8__invokeEaa(i8 signext, i8 signext) #6 comdat align 2 {
  %3 = mul i8 %1, %0
  ret i8 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZZN6tflite3ops7builtin6reduce8EvalTypeIaEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlaaE1_8__invokeEaa(i8 signext, i8 signext) #6 comdat align 2 {
  %3 = icmp sgt i8 %1, %0
  %4 = select i1 %3, i8 %1, i8 %0
  ret i8 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZZN6tflite3ops7builtin6reduce8EvalTypeIaEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_9OpContextENS2_10ReduceTypeEENUlaaE2_8__invokeEaa(i8 signext, i8 signext) #6 comdat align 2 {
  %3 = icmp slt i8 %1, %0
  %4 = select i1 %3, i8 %1, i8 %0
  ret i8 %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite21optimized_integer_ops4MeanERKNS_10MeanParamsERKNS_12RuntimeShapeEPKaifS6_PaifPNS_17CpuBackendContextE(%"struct.tflite::MeanParams"* dereferenceable(10), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i32, float, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i32, float, %"class.tflite::CpuBackendContext"*) local_unnamed_addr #6 comdat {
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %"class.std::__1::vector.63", align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store i8* %2, i8** %11, align 8
  store i8* %6, i8** %12, align 8
  %21 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 4
  br i1 %23, label %25, label %24

24:                                               ; preds = %10
  tail call void @abort() #17
  unreachable

25:                                               ; preds = %10
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp slt i32 %27, 5
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  tail call void @abort() #17
  unreachable

30:                                               ; preds = %25
  %31 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false)
  %32 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 4, i32* %32, align 8, !alias.scope !256
  %33 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %34 = bitcast %union.anon* %33 to i8*
  %35 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %36 = bitcast %union.anon* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 4 %36, i64 16, i1 false) #16
  %37 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 32, i1 false)
  %38 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 4, i32* %38, align 8, !alias.scope !259
  %39 = sub i32 4, %27
  %40 = icmp sgt i32 %39, 0
  %41 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %42 = bitcast %union.anon* %41 to [5 x i32]*
  br i1 %40, label %43, label %122

43:                                               ; preds = %30
  %44 = zext i32 %39 to i64
  %45 = icmp ult i32 %39, 8
  br i1 %45, label %115, label %46

46:                                               ; preds = %43
  %47 = and i64 %44, 4294967288
  %48 = add nsw i64 %47, -8
  %49 = lshr exact i64 %48, 3
  %50 = add nuw nsw i64 %49, 1
  %51 = and i64 %50, 7
  %52 = icmp ult i64 %48, 56
  br i1 %52, label %100, label %53

53:                                               ; preds = %46
  %54 = sub nsw i64 %50, %51
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi i64 [ 0, %53 ], [ %97, %55 ]
  %57 = phi i64 [ %54, %53 ], [ %98, %55 ]
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %56
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !259
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !259
  %62 = or i64 %56, 8
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !259
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !259
  %67 = or i64 %56, 16
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !259
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !259
  %72 = or i64 %56, 24
  %73 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !259
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 8, !alias.scope !259
  %77 = or i64 %56, 32
  %78 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %79, align 8, !alias.scope !259
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %81, align 8, !alias.scope !259
  %82 = or i64 %56, 40
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %82
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !259
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !259
  %87 = or i64 %56, 48
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %87
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 8, !alias.scope !259
  %90 = getelementptr inbounds i32, i32* %88, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %91, align 8, !alias.scope !259
  %92 = or i64 %56, 56
  %93 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %92
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %94, align 8, !alias.scope !259
  %95 = getelementptr inbounds i32, i32* %93, i64 4
  %96 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %96, align 8, !alias.scope !259
  %97 = add i64 %56, 64
  %98 = add i64 %57, -8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %55, !llvm.loop !262

100:                                              ; preds = %55, %46
  %101 = phi i64 [ 0, %46 ], [ %97, %55 ]
  %102 = icmp eq i64 %51, 0
  br i1 %102, label %113, label %103

103:                                              ; preds = %100, %103
  %104 = phi i64 [ %110, %103 ], [ %101, %100 ]
  %105 = phi i64 [ %111, %103 ], [ %51, %100 ]
  %106 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %107, align 8, !alias.scope !259
  %108 = getelementptr inbounds i32, i32* %106, i64 4
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %109, align 8, !alias.scope !259
  %110 = add i64 %104, 8
  %111 = add i64 %105, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %103, !llvm.loop !263

113:                                              ; preds = %103, %100
  %114 = icmp eq i64 %47, %44
  br i1 %114, label %122, label %115

115:                                              ; preds = %113, %43
  %116 = phi i64 [ 0, %43 ], [ %47, %113 ]
  br label %117

117:                                              ; preds = %115, %117
  %118 = phi i64 [ %120, %117 ], [ %116, %115 ]
  %119 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %118
  store i32 1, i32* %119, align 4, !alias.scope !259
  %120 = add nuw nsw i64 %118, 1
  %121 = icmp eq i64 %120, %44
  br i1 %121, label %122, label %117, !llvm.loop !264

122:                                              ; preds = %117, %113, %30
  %123 = bitcast %union.anon* %41 to i32*
  %124 = sext i32 %39 to i64
  %125 = getelementptr inbounds i32, i32* %123, i64 %124
  %126 = bitcast i32* %125 to i8*
  %127 = icmp sgt i32 %27, 5
  %128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %129 = getelementptr inbounds %union.anon, %union.anon* %128, i64 0, i32 0
  %130 = load i32*, i32** %129, align 8, !noalias !259
  %131 = bitcast %union.anon* %128 to i32*
  %132 = select i1 %127, i32* %130, i32* %131
  %133 = bitcast i32* %132 to i8*
  %134 = sext i32 %27 to i64
  %135 = shl nsw i64 %134, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %126, i8* align 4 %133, i64 %135, i1 false) #16
  %136 = load i32, i32* %38, align 8
  %137 = icmp sgt i32 %136, 5
  %138 = getelementptr inbounds %union.anon, %union.anon* %41, i64 0, i32 0
  %139 = load i32*, i32** %138, align 8
  %140 = getelementptr inbounds i32, i32* %139, i64 1
  %141 = getelementptr inbounds i32, i32* %139, i64 2
  %142 = getelementptr inbounds i32, i32* %139, i64 3
  %143 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 1
  %144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 1
  %145 = bitcast [16 x i8]* %144 to i32*
  %146 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 1, i64 4
  %147 = bitcast i8* %146 to i32*
  %148 = select i1 %137, i32* %141, i32* %145
  %149 = select i1 %137, i32* %140, i32* %143
  %150 = select i1 %137, i32* %142, i32* %147
  %151 = load i32, i32* %149, align 4
  %152 = load i32, i32* %148, align 4
  %153 = load i32, i32* %150, align 4
  %154 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 0
  %155 = load i8, i8* %154, align 2
  %156 = icmp eq i8 %155, 2
  br i1 %156, label %158, label %157

157:                                              ; preds = %122
  tail call void @abort() #17
  unreachable

158:                                              ; preds = %122
  %159 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 0
  %160 = load i16, i16* %159, align 2
  switch i16 %160, label %169 [
    i16 1, label %161
    i16 2, label %165
  ]

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 1
  %163 = load i16, i16* %162, align 2
  %164 = icmp eq i16 %163, 2
  br i1 %164, label %170, label %169

165:                                              ; preds = %158
  %166 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 1
  %167 = load i16, i16* %166, align 2
  %168 = icmp eq i16 %167, 1
  br i1 %168, label %170, label %169

169:                                              ; preds = %158, %161, %165
  tail call void @abort() #17
  unreachable

170:                                              ; preds = %161, %165
  %171 = icmp eq i32 %151, 1
  br i1 %171, label %173, label %172

172:                                              ; preds = %170
  tail call void @abort() #17
  unreachable

173:                                              ; preds = %170
  %174 = icmp eq i32 %152, 1
  br i1 %174, label %176, label %175

175:                                              ; preds = %173
  tail call void @abort() #17
  unreachable

176:                                              ; preds = %173
  %177 = bitcast %union.anon* %33 to [5 x i32]*
  %178 = getelementptr inbounds [5 x i32], [5 x i32]* %177, i64 0, i64 1
  %179 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 1
  %180 = bitcast [16 x i8]* %179 to i32*
  %181 = load i32, i32* %178, align 4
  %182 = load i32, i32* %180, align 8
  %183 = mul nsw i32 %182, %181
  %184 = sitofp i32 %183 to float
  %185 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %185) #16
  %186 = sitofp i32 %3 to float
  %187 = fmul float %186, %4
  %188 = fdiv float %187, %8
  %189 = fptosi float %188 to i32
  %190 = sub nsw i32 %7, %189
  store i32 %190, i32* %15, align 4
  %191 = fmul float %184, %8
  %192 = fdiv float %4, %191
  %193 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %193) #16
  store i32 -1431655766, i32* %16, align 4
  %194 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %194) #16
  store i32 -1431655766, i32* %17, align 4
  %195 = fpext float %192 to double
  call void @_ZN6tflite18QuantizeMultiplierEdPiS0_(double %195, i32* nonnull %16, i32* nonnull %17) #16
  %196 = sdiv i32 %153, 8
  %197 = icmp sgt i32 %153, 7
  %198 = select i1 %197, i32 %196, i32 1
  %199 = getelementptr inbounds %"class.tflite::CpuBackendContext", %"class.tflite::CpuBackendContext"* %9, i64 0, i32 3
  %200 = load i32, i32* %199, align 8
  %201 = icmp slt i32 %200, %198
  %202 = select i1 %201, i32 %200, i32 %198
  %203 = icmp eq i32 %202, 1
  br i1 %203, label %204, label %207

204:                                              ; preds = %176
  %205 = load i32, i32* %16, align 4
  %206 = load i32, i32* %17, align 4
  call void @_ZN6tflite21optimized_integer_ops8MeanImplERKNS_10MeanParamsERKNS_12RuntimeShapeEPKaiiiS6_Paii(%"struct.tflite::MeanParams"* dereferenceable(10) %0, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %2, i32 %205, i32 %206, i32 %190, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i8* %6, i32 0, i32 %153)
  br label %308

207:                                              ; preds = %176
  %208 = bitcast %"class.std::__1::vector.63"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %208) #16
  %209 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %18, i64 0, i32 0, i32 0
  %210 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %18, i64 0, i32 0, i32 1
  %211 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %208, i8 0, i64 24, i1 false) #16
  %212 = sext i32 %202 to i64
  %213 = bitcast %"struct.tflite::optimized_integer_ops::MeanWorkerTask"** %211 to i64*
  %214 = bitcast %"class.std::__1::vector.63"* %18 to i64*
  %215 = icmp eq i32 %202, 0
  br i1 %215, label %219, label %216

216:                                              ; preds = %207
  %217 = icmp slt i32 %202, 0
  br i1 %217, label %218, label %221

218:                                              ; preds = %216
  call void @abort() #17
  unreachable

219:                                              ; preds = %207
  %220 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %220) #16
  store i32 0, i32* %19, align 4
  br label %237

221:                                              ; preds = %216
  %222 = bitcast %"struct.tflite::optimized_integer_ops::MeanWorkerTask"** %210 to i64*
  %223 = mul nsw i64 %212, 80
  %224 = call i8* @_Znwm(i64 %223) #15
  %225 = bitcast i8* %224 to %"struct.tflite::optimized_integer_ops::MeanWorkerTask"*
  %226 = ptrtoint i8* %224 to i64
  %227 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %225, i64 %212
  %228 = ptrtoint %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %227 to i64
  store i64 %226, i64* %214, align 8
  store i64 %226, i64* %222, align 8
  store i64 %228, i64* %213, align 8
  %229 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %229) #16
  store i32 0, i32* %19, align 4
  %230 = bitcast i32* %20 to i8*
  %231 = bitcast i8** %11 to i64*
  %232 = bitcast i8** %12 to i64*
  %233 = bitcast %"struct.tflite::optimized_integer_ops::MeanWorkerTask"** %210 to i64*
  br label %267

234:                                              ; preds = %301
  %235 = load i64, i64* %233, align 8
  %236 = load i64, i64* %214, align 8
  br label %237

237:                                              ; preds = %219, %234
  %238 = phi i8* [ %229, %234 ], [ %220, %219 ]
  %239 = phi i64 [ %236, %234 ], [ 0, %219 ]
  %240 = phi i64 [ %235, %234 ], [ 0, %219 ]
  %241 = sub i64 %240, %239
  %242 = sdiv exact i64 %241, 80
  %243 = trunc i64 %242 to i32
  %244 = inttoptr i64 %239 to %"struct.tflite::optimized_integer_ops::MeanWorkerTask"*
  %245 = getelementptr inbounds %"class.tflite::CpuBackendContext", %"class.tflite::CpuBackendContext"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %246 = load %"class.gemmlowp::GemmContext"*, %"class.gemmlowp::GemmContext"** %245, align 8
  %247 = getelementptr inbounds %"class.gemmlowp::GemmContext", %"class.gemmlowp::GemmContext"* %246, i64 0, i32 0, i32 1
  call void @_ZN8gemmlowp11WorkersPool7ExecuteIN6tflite21optimized_integer_ops14MeanWorkerTaskEEEviPT_(%"class.gemmlowp::WorkersPool"* %247, i32 %243, %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %244) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %238) #16
  %248 = load %"struct.tflite::optimized_integer_ops::MeanWorkerTask"*, %"struct.tflite::optimized_integer_ops::MeanWorkerTask"** %209, align 8
  %249 = icmp eq %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %248, null
  br i1 %249, label %266, label %250

250:                                              ; preds = %237
  %251 = bitcast %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %248 to i8*
  %252 = load %"struct.tflite::optimized_integer_ops::MeanWorkerTask"*, %"struct.tflite::optimized_integer_ops::MeanWorkerTask"** %210, align 8
  %253 = icmp eq %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %252, %248
  br i1 %253, label %264, label %254

254:                                              ; preds = %250, %254
  %255 = phi %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* [ %256, %254 ], [ %252, %250 ]
  %256 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %255, i64 -1
  %257 = bitcast %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %256 to void (%"struct.tflite::optimized_integer_ops::MeanWorkerTask"*)***
  %258 = load void (%"struct.tflite::optimized_integer_ops::MeanWorkerTask"*)**, void (%"struct.tflite::optimized_integer_ops::MeanWorkerTask"*)*** %257, align 8
  %259 = load void (%"struct.tflite::optimized_integer_ops::MeanWorkerTask"*)*, void (%"struct.tflite::optimized_integer_ops::MeanWorkerTask"*)** %258, align 8
  call void %259(%"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %256) #16
  %260 = icmp eq %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %256, %248
  br i1 %260, label %261, label %254

261:                                              ; preds = %254
  %262 = bitcast %"class.std::__1::vector.63"* %18 to i8**
  %263 = load i8*, i8** %262, align 8
  br label %264

264:                                              ; preds = %261, %250
  %265 = phi i8* [ %263, %261 ], [ %251, %250 ]
  store %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %248, %"struct.tflite::optimized_integer_ops::MeanWorkerTask"** %210, align 8
  call void @_ZdlPv(i8* %265) #15
  br label %266

266:                                              ; preds = %237, %264
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %208) #16
  br label %308

267:                                              ; preds = %305, %221
  %268 = phi %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* [ %227, %221 ], [ %307, %305 ]
  %269 = phi %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* [ %225, %221 ], [ %306, %305 ]
  %270 = phi i32 [ 0, %221 ], [ %302, %305 ]
  %271 = phi i32 [ 0, %221 ], [ %303, %305 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %230) #16
  %272 = sub nsw i32 %153, %270
  %273 = sub nsw i32 %202, %271
  %274 = sdiv i32 %272, %273
  %275 = add nsw i32 %274, %270
  store i32 %275, i32* %20, align 4
  %276 = icmp ult %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %269, %268
  br i1 %276, label %277, label %299

277:                                              ; preds = %267
  %278 = load i64, i64* %231, align 8
  %279 = load i32, i32* %16, align 4
  %280 = load i32, i32* %17, align 4
  %281 = load i32, i32* %15, align 4
  %282 = load i64, i64* %232, align 8
  %283 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %269, i64 0, i32 0, i32 0
  %284 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %269, i64 0, i32 0, i32 1
  store %"class.gemmlowp::Allocator"* null, %"class.gemmlowp::Allocator"** %284, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6tflite21optimized_integer_ops14MeanWorkerTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %283, align 8
  %285 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %269, i64 0, i32 1
  store %"struct.tflite::MeanParams"* %0, %"struct.tflite::MeanParams"** %285, align 8
  %286 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %269, i64 0, i32 2
  store %"class.tflite::RuntimeShape"* %13, %"class.tflite::RuntimeShape"** %286, align 8
  %287 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %269, i64 0, i32 3
  %288 = bitcast i8** %287 to i64*
  store i64 %278, i64* %288, align 8
  %289 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %269, i64 0, i32 4
  store i32 %279, i32* %289, align 8
  %290 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %269, i64 0, i32 5
  store i32 %280, i32* %290, align 4
  %291 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %269, i64 0, i32 6
  store i32 %281, i32* %291, align 8
  %292 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %269, i64 0, i32 7
  store %"class.tflite::RuntimeShape"* %14, %"class.tflite::RuntimeShape"** %292, align 8
  %293 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %269, i64 0, i32 8
  %294 = bitcast i8** %293 to i64*
  store i64 %282, i64* %294, align 8
  %295 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %269, i64 0, i32 9
  store i32 %270, i32* %295, align 8
  %296 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %269, i64 0, i32 10
  store i32 %275, i32* %296, align 4
  %297 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %269, i64 1
  %298 = ptrtoint %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %297 to i64
  store i64 %298, i64* %233, align 8
  br label %301

299:                                              ; preds = %267
  call void @_ZNSt3__16vectorIN6tflite21optimized_integer_ops14MeanWorkerTaskENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRKNS1_10MeanParamsERKNS1_12RuntimeShapeERPKaRiSH_SH_SD_RPaSH_SH_EEEvDpOT_(%"class.std::__1::vector.63"* nonnull %18, %"struct.tflite::MeanParams"* dereferenceable(10) %0, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8** nonnull dereferenceable(8) %11, i32* nonnull dereferenceable(4) %16, i32* nonnull dereferenceable(4) %17, i32* nonnull dereferenceable(4) %15, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i8** nonnull dereferenceable(8) %12, i32* nonnull dereferenceable(4) %19, i32* nonnull dereferenceable(4) %20) #16
  %300 = load i32, i32* %20, align 4
  br label %301

301:                                              ; preds = %277, %299
  %302 = phi i32 [ %275, %277 ], [ %300, %299 ]
  store i32 %302, i32* %19, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %230) #16
  %303 = add nuw nsw i32 %271, 1
  %304 = icmp sgt i32 %202, %303
  br i1 %304, label %305, label %234

305:                                              ; preds = %301
  %306 = load %"struct.tflite::optimized_integer_ops::MeanWorkerTask"*, %"struct.tflite::optimized_integer_ops::MeanWorkerTask"** %210, align 8
  %307 = load %"struct.tflite::optimized_integer_ops::MeanWorkerTask"*, %"struct.tflite::optimized_integer_ops::MeanWorkerTask"** %211, align 8
  br label %267

308:                                              ; preds = %266, %204
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %194) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %193) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %185) #16
  %309 = load i32, i32* %38, align 8
  %310 = icmp sgt i32 %309, 5
  br i1 %310, label %311, label %317

311:                                              ; preds = %308
  %312 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %313 = load i32*, i32** %312, align 8
  %314 = icmp eq i32* %313, null
  br i1 %314, label %317, label %315

315:                                              ; preds = %311
  %316 = bitcast i32* %313 to i8*
  call void @_ZdaPv(i8* %316) #15
  br label %317

317:                                              ; preds = %308, %311, %315
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #16
  %318 = load i32, i32* %32, align 8
  %319 = icmp sgt i32 %318, 5
  br i1 %319, label %320, label %326

320:                                              ; preds = %317
  %321 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %322 = load i32*, i32** %321, align 8
  %323 = icmp eq i32* %322, null
  br i1 %323, label %326, label %324

324:                                              ; preds = %320
  %325 = bitcast i32* %322 to i8*
  call void @_ZdaPv(i8* %325) #15
  br label %326

326:                                              ; preds = %317, %320, %324
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #16
  ret void
}

declare %"class.tflite::CpuBackendContext"* @_ZN6tflite17CpuBackendContext14GetFromContextEP13TfLiteContext(%struct.TfLiteContext*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops4MeanERKNS_10MeanParamsERKNS_12RuntimeShapeEPKhifS6_PhifPNS_17CpuBackendContextE(%"struct.tflite::MeanParams"* dereferenceable(10), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i32, float, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i32, float, %"class.tflite::CpuBackendContext"*) local_unnamed_addr #6 comdat {
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %"class.std::__1::vector.83", align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store i8* %2, i8** %11, align 8
  store i8* %6, i8** %12, align 8
  %21 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 4
  br i1 %23, label %25, label %24

24:                                               ; preds = %10
  tail call void @abort() #17
  unreachable

25:                                               ; preds = %10
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp slt i32 %27, 5
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  tail call void @abort() #17
  unreachable

30:                                               ; preds = %25
  %31 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false)
  %32 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 4, i32* %32, align 8, !alias.scope !265
  %33 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %34 = bitcast %union.anon* %33 to i8*
  %35 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %36 = bitcast %union.anon* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 4 %36, i64 16, i1 false) #16
  %37 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 32, i1 false)
  %38 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 4, i32* %38, align 8, !alias.scope !268
  %39 = sub i32 4, %27
  %40 = icmp sgt i32 %39, 0
  %41 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %42 = bitcast %union.anon* %41 to [5 x i32]*
  br i1 %40, label %43, label %122

43:                                               ; preds = %30
  %44 = zext i32 %39 to i64
  %45 = icmp ult i32 %39, 8
  br i1 %45, label %115, label %46

46:                                               ; preds = %43
  %47 = and i64 %44, 4294967288
  %48 = add nsw i64 %47, -8
  %49 = lshr exact i64 %48, 3
  %50 = add nuw nsw i64 %49, 1
  %51 = and i64 %50, 7
  %52 = icmp ult i64 %48, 56
  br i1 %52, label %100, label %53

53:                                               ; preds = %46
  %54 = sub nsw i64 %50, %51
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi i64 [ 0, %53 ], [ %97, %55 ]
  %57 = phi i64 [ %54, %53 ], [ %98, %55 ]
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %56
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !268
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !268
  %62 = or i64 %56, 8
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !268
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !268
  %67 = or i64 %56, 16
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !268
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !268
  %72 = or i64 %56, 24
  %73 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !268
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 8, !alias.scope !268
  %77 = or i64 %56, 32
  %78 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %79, align 8, !alias.scope !268
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %81, align 8, !alias.scope !268
  %82 = or i64 %56, 40
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %82
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !268
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !268
  %87 = or i64 %56, 48
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %87
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 8, !alias.scope !268
  %90 = getelementptr inbounds i32, i32* %88, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %91, align 8, !alias.scope !268
  %92 = or i64 %56, 56
  %93 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %92
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %94, align 8, !alias.scope !268
  %95 = getelementptr inbounds i32, i32* %93, i64 4
  %96 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %96, align 8, !alias.scope !268
  %97 = add i64 %56, 64
  %98 = add i64 %57, -8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %55, !llvm.loop !271

100:                                              ; preds = %55, %46
  %101 = phi i64 [ 0, %46 ], [ %97, %55 ]
  %102 = icmp eq i64 %51, 0
  br i1 %102, label %113, label %103

103:                                              ; preds = %100, %103
  %104 = phi i64 [ %110, %103 ], [ %101, %100 ]
  %105 = phi i64 [ %111, %103 ], [ %51, %100 ]
  %106 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %107, align 8, !alias.scope !268
  %108 = getelementptr inbounds i32, i32* %106, i64 4
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %109, align 8, !alias.scope !268
  %110 = add i64 %104, 8
  %111 = add i64 %105, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %103, !llvm.loop !272

113:                                              ; preds = %103, %100
  %114 = icmp eq i64 %47, %44
  br i1 %114, label %122, label %115

115:                                              ; preds = %113, %43
  %116 = phi i64 [ 0, %43 ], [ %47, %113 ]
  br label %117

117:                                              ; preds = %115, %117
  %118 = phi i64 [ %120, %117 ], [ %116, %115 ]
  %119 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %118
  store i32 1, i32* %119, align 4, !alias.scope !268
  %120 = add nuw nsw i64 %118, 1
  %121 = icmp eq i64 %120, %44
  br i1 %121, label %122, label %117, !llvm.loop !273

122:                                              ; preds = %117, %113, %30
  %123 = bitcast %union.anon* %41 to i32*
  %124 = sext i32 %39 to i64
  %125 = getelementptr inbounds i32, i32* %123, i64 %124
  %126 = bitcast i32* %125 to i8*
  %127 = icmp sgt i32 %27, 5
  %128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %129 = getelementptr inbounds %union.anon, %union.anon* %128, i64 0, i32 0
  %130 = load i32*, i32** %129, align 8, !noalias !268
  %131 = bitcast %union.anon* %128 to i32*
  %132 = select i1 %127, i32* %130, i32* %131
  %133 = bitcast i32* %132 to i8*
  %134 = sext i32 %27 to i64
  %135 = shl nsw i64 %134, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %126, i8* align 4 %133, i64 %135, i1 false) #16
  %136 = load i32, i32* %38, align 8
  %137 = icmp sgt i32 %136, 5
  %138 = getelementptr inbounds %union.anon, %union.anon* %41, i64 0, i32 0
  %139 = load i32*, i32** %138, align 8
  %140 = getelementptr inbounds i32, i32* %139, i64 1
  %141 = getelementptr inbounds i32, i32* %139, i64 2
  %142 = getelementptr inbounds i32, i32* %139, i64 3
  %143 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 1
  %144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 1
  %145 = bitcast [16 x i8]* %144 to i32*
  %146 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 1, i64 4
  %147 = bitcast i8* %146 to i32*
  %148 = select i1 %137, i32* %141, i32* %145
  %149 = select i1 %137, i32* %140, i32* %143
  %150 = select i1 %137, i32* %142, i32* %147
  %151 = load i32, i32* %149, align 4
  %152 = load i32, i32* %148, align 4
  %153 = load i32, i32* %150, align 4
  %154 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 0
  %155 = load i8, i8* %154, align 2
  %156 = icmp eq i8 %155, 2
  br i1 %156, label %158, label %157

157:                                              ; preds = %122
  tail call void @abort() #17
  unreachable

158:                                              ; preds = %122
  %159 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 0
  %160 = load i16, i16* %159, align 2
  switch i16 %160, label %169 [
    i16 1, label %161
    i16 2, label %165
  ]

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 1
  %163 = load i16, i16* %162, align 2
  %164 = icmp eq i16 %163, 2
  br i1 %164, label %170, label %169

165:                                              ; preds = %158
  %166 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 1
  %167 = load i16, i16* %166, align 2
  %168 = icmp eq i16 %167, 1
  br i1 %168, label %170, label %169

169:                                              ; preds = %158, %161, %165
  tail call void @abort() #17
  unreachable

170:                                              ; preds = %161, %165
  %171 = icmp eq i32 %151, 1
  br i1 %171, label %173, label %172

172:                                              ; preds = %170
  tail call void @abort() #17
  unreachable

173:                                              ; preds = %170
  %174 = icmp eq i32 %152, 1
  br i1 %174, label %176, label %175

175:                                              ; preds = %173
  tail call void @abort() #17
  unreachable

176:                                              ; preds = %173
  %177 = bitcast %union.anon* %33 to [5 x i32]*
  %178 = getelementptr inbounds [5 x i32], [5 x i32]* %177, i64 0, i64 1
  %179 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 1
  %180 = bitcast [16 x i8]* %179 to i32*
  %181 = load i32, i32* %178, align 4
  %182 = load i32, i32* %180, align 8
  %183 = mul nsw i32 %182, %181
  %184 = sitofp i32 %183 to float
  %185 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %185) #16
  %186 = sitofp i32 %3 to float
  %187 = fmul float %186, %4
  %188 = fdiv float %187, %8
  %189 = fptosi float %188 to i32
  %190 = sub nsw i32 %7, %189
  store i32 %190, i32* %15, align 4
  %191 = fmul float %184, %8
  %192 = fdiv float %4, %191
  %193 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %193) #16
  store i32 -1431655766, i32* %16, align 4
  %194 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %194) #16
  store i32 -1431655766, i32* %17, align 4
  %195 = fpext float %192 to double
  call void @_ZN6tflite18QuantizeMultiplierEdPiS0_(double %195, i32* nonnull %16, i32* nonnull %17) #16
  %196 = sdiv i32 %153, 8
  %197 = icmp sgt i32 %153, 7
  %198 = select i1 %197, i32 %196, i32 1
  %199 = getelementptr inbounds %"class.tflite::CpuBackendContext", %"class.tflite::CpuBackendContext"* %9, i64 0, i32 3
  %200 = load i32, i32* %199, align 8
  %201 = icmp slt i32 %200, %198
  %202 = select i1 %201, i32 %200, i32 %198
  %203 = icmp eq i32 %202, 1
  br i1 %203, label %204, label %207

204:                                              ; preds = %176
  %205 = load i32, i32* %16, align 4
  %206 = load i32, i32* %17, align 4
  call void @_ZN6tflite13optimized_ops8MeanImplERKNS_10MeanParamsERKNS_12RuntimeShapeEPKhiiiS6_Phii(%"struct.tflite::MeanParams"* dereferenceable(10) %0, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %2, i32 %205, i32 %206, i32 %190, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i8* %6, i32 0, i32 %153)
  br label %308

207:                                              ; preds = %176
  %208 = bitcast %"class.std::__1::vector.83"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %208) #16
  %209 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %18, i64 0, i32 0, i32 0
  %210 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %18, i64 0, i32 0, i32 1
  %211 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %208, i8 0, i64 24, i1 false) #16
  %212 = sext i32 %202 to i64
  %213 = bitcast %"struct.tflite::optimized_ops::MeanWorkerTask"** %211 to i64*
  %214 = bitcast %"class.std::__1::vector.83"* %18 to i64*
  %215 = icmp eq i32 %202, 0
  br i1 %215, label %219, label %216

216:                                              ; preds = %207
  %217 = icmp slt i32 %202, 0
  br i1 %217, label %218, label %221

218:                                              ; preds = %216
  call void @abort() #17
  unreachable

219:                                              ; preds = %207
  %220 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %220) #16
  store i32 0, i32* %19, align 4
  br label %237

221:                                              ; preds = %216
  %222 = bitcast %"struct.tflite::optimized_ops::MeanWorkerTask"** %210 to i64*
  %223 = mul nsw i64 %212, 80
  %224 = call i8* @_Znwm(i64 %223) #15
  %225 = bitcast i8* %224 to %"struct.tflite::optimized_ops::MeanWorkerTask"*
  %226 = ptrtoint i8* %224 to i64
  %227 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %225, i64 %212
  %228 = ptrtoint %"struct.tflite::optimized_ops::MeanWorkerTask"* %227 to i64
  store i64 %226, i64* %214, align 8
  store i64 %226, i64* %222, align 8
  store i64 %228, i64* %213, align 8
  %229 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %229) #16
  store i32 0, i32* %19, align 4
  %230 = bitcast i32* %20 to i8*
  %231 = bitcast i8** %11 to i64*
  %232 = bitcast i8** %12 to i64*
  %233 = bitcast %"struct.tflite::optimized_ops::MeanWorkerTask"** %210 to i64*
  br label %267

234:                                              ; preds = %301
  %235 = load i64, i64* %233, align 8
  %236 = load i64, i64* %214, align 8
  br label %237

237:                                              ; preds = %219, %234
  %238 = phi i8* [ %229, %234 ], [ %220, %219 ]
  %239 = phi i64 [ %236, %234 ], [ 0, %219 ]
  %240 = phi i64 [ %235, %234 ], [ 0, %219 ]
  %241 = sub i64 %240, %239
  %242 = sdiv exact i64 %241, 80
  %243 = trunc i64 %242 to i32
  %244 = inttoptr i64 %239 to %"struct.tflite::optimized_ops::MeanWorkerTask"*
  %245 = getelementptr inbounds %"class.tflite::CpuBackendContext", %"class.tflite::CpuBackendContext"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %246 = load %"class.gemmlowp::GemmContext"*, %"class.gemmlowp::GemmContext"** %245, align 8
  %247 = getelementptr inbounds %"class.gemmlowp::GemmContext", %"class.gemmlowp::GemmContext"* %246, i64 0, i32 0, i32 1
  call void @_ZN8gemmlowp11WorkersPool7ExecuteIN6tflite13optimized_ops14MeanWorkerTaskEEEviPT_(%"class.gemmlowp::WorkersPool"* %247, i32 %243, %"struct.tflite::optimized_ops::MeanWorkerTask"* %244) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %238) #16
  %248 = load %"struct.tflite::optimized_ops::MeanWorkerTask"*, %"struct.tflite::optimized_ops::MeanWorkerTask"** %209, align 8
  %249 = icmp eq %"struct.tflite::optimized_ops::MeanWorkerTask"* %248, null
  br i1 %249, label %266, label %250

250:                                              ; preds = %237
  %251 = bitcast %"struct.tflite::optimized_ops::MeanWorkerTask"* %248 to i8*
  %252 = load %"struct.tflite::optimized_ops::MeanWorkerTask"*, %"struct.tflite::optimized_ops::MeanWorkerTask"** %210, align 8
  %253 = icmp eq %"struct.tflite::optimized_ops::MeanWorkerTask"* %252, %248
  br i1 %253, label %264, label %254

254:                                              ; preds = %250, %254
  %255 = phi %"struct.tflite::optimized_ops::MeanWorkerTask"* [ %256, %254 ], [ %252, %250 ]
  %256 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %255, i64 -1
  %257 = bitcast %"struct.tflite::optimized_ops::MeanWorkerTask"* %256 to void (%"struct.tflite::optimized_ops::MeanWorkerTask"*)***
  %258 = load void (%"struct.tflite::optimized_ops::MeanWorkerTask"*)**, void (%"struct.tflite::optimized_ops::MeanWorkerTask"*)*** %257, align 8
  %259 = load void (%"struct.tflite::optimized_ops::MeanWorkerTask"*)*, void (%"struct.tflite::optimized_ops::MeanWorkerTask"*)** %258, align 8
  call void %259(%"struct.tflite::optimized_ops::MeanWorkerTask"* %256) #16
  %260 = icmp eq %"struct.tflite::optimized_ops::MeanWorkerTask"* %256, %248
  br i1 %260, label %261, label %254

261:                                              ; preds = %254
  %262 = bitcast %"class.std::__1::vector.83"* %18 to i8**
  %263 = load i8*, i8** %262, align 8
  br label %264

264:                                              ; preds = %261, %250
  %265 = phi i8* [ %263, %261 ], [ %251, %250 ]
  store %"struct.tflite::optimized_ops::MeanWorkerTask"* %248, %"struct.tflite::optimized_ops::MeanWorkerTask"** %210, align 8
  call void @_ZdlPv(i8* %265) #15
  br label %266

266:                                              ; preds = %237, %264
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %208) #16
  br label %308

267:                                              ; preds = %305, %221
  %268 = phi %"struct.tflite::optimized_ops::MeanWorkerTask"* [ %227, %221 ], [ %307, %305 ]
  %269 = phi %"struct.tflite::optimized_ops::MeanWorkerTask"* [ %225, %221 ], [ %306, %305 ]
  %270 = phi i32 [ 0, %221 ], [ %302, %305 ]
  %271 = phi i32 [ 0, %221 ], [ %303, %305 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %230) #16
  %272 = sub nsw i32 %153, %270
  %273 = sub nsw i32 %202, %271
  %274 = sdiv i32 %272, %273
  %275 = add nsw i32 %274, %270
  store i32 %275, i32* %20, align 4
  %276 = icmp ult %"struct.tflite::optimized_ops::MeanWorkerTask"* %269, %268
  br i1 %276, label %277, label %299

277:                                              ; preds = %267
  %278 = load i64, i64* %231, align 8
  %279 = load i32, i32* %16, align 4
  %280 = load i32, i32* %17, align 4
  %281 = load i32, i32* %15, align 4
  %282 = load i64, i64* %232, align 8
  %283 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %269, i64 0, i32 0, i32 0
  %284 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %269, i64 0, i32 0, i32 1
  store %"class.gemmlowp::Allocator"* null, %"class.gemmlowp::Allocator"** %284, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6tflite13optimized_ops14MeanWorkerTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %283, align 8
  %285 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %269, i64 0, i32 1
  store %"struct.tflite::MeanParams"* %0, %"struct.tflite::MeanParams"** %285, align 8
  %286 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %269, i64 0, i32 2
  store %"class.tflite::RuntimeShape"* %13, %"class.tflite::RuntimeShape"** %286, align 8
  %287 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %269, i64 0, i32 3
  %288 = bitcast i8** %287 to i64*
  store i64 %278, i64* %288, align 8
  %289 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %269, i64 0, i32 4
  store i32 %279, i32* %289, align 8
  %290 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %269, i64 0, i32 5
  store i32 %280, i32* %290, align 4
  %291 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %269, i64 0, i32 6
  store i32 %281, i32* %291, align 8
  %292 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %269, i64 0, i32 7
  store %"class.tflite::RuntimeShape"* %14, %"class.tflite::RuntimeShape"** %292, align 8
  %293 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %269, i64 0, i32 8
  %294 = bitcast i8** %293 to i64*
  store i64 %282, i64* %294, align 8
  %295 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %269, i64 0, i32 9
  store i32 %270, i32* %295, align 8
  %296 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %269, i64 0, i32 10
  store i32 %275, i32* %296, align 4
  %297 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %269, i64 1
  %298 = ptrtoint %"struct.tflite::optimized_ops::MeanWorkerTask"* %297 to i64
  store i64 %298, i64* %233, align 8
  br label %301

299:                                              ; preds = %267
  call void @_ZNSt3__16vectorIN6tflite13optimized_ops14MeanWorkerTaskENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRKNS1_10MeanParamsERKNS1_12RuntimeShapeERPKhRiSH_SH_SD_RPhSH_SH_EEEvDpOT_(%"class.std::__1::vector.83"* nonnull %18, %"struct.tflite::MeanParams"* dereferenceable(10) %0, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8** nonnull dereferenceable(8) %11, i32* nonnull dereferenceable(4) %16, i32* nonnull dereferenceable(4) %17, i32* nonnull dereferenceable(4) %15, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i8** nonnull dereferenceable(8) %12, i32* nonnull dereferenceable(4) %19, i32* nonnull dereferenceable(4) %20) #16
  %300 = load i32, i32* %20, align 4
  br label %301

301:                                              ; preds = %277, %299
  %302 = phi i32 [ %275, %277 ], [ %300, %299 ]
  store i32 %302, i32* %19, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %230) #16
  %303 = add nuw nsw i32 %271, 1
  %304 = icmp sgt i32 %202, %303
  br i1 %304, label %305, label %234

305:                                              ; preds = %301
  %306 = load %"struct.tflite::optimized_ops::MeanWorkerTask"*, %"struct.tflite::optimized_ops::MeanWorkerTask"** %210, align 8
  %307 = load %"struct.tflite::optimized_ops::MeanWorkerTask"*, %"struct.tflite::optimized_ops::MeanWorkerTask"** %211, align 8
  br label %267

308:                                              ; preds = %266, %204
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %194) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %193) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %185) #16
  %309 = load i32, i32* %38, align 8
  %310 = icmp sgt i32 %309, 5
  br i1 %310, label %311, label %317

311:                                              ; preds = %308
  %312 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %313 = load i32*, i32** %312, align 8
  %314 = icmp eq i32* %313, null
  br i1 %314, label %317, label %315

315:                                              ; preds = %311
  %316 = bitcast i32* %313 to i8*
  call void @_ZdaPv(i8* %316) #15
  br label %317

317:                                              ; preds = %308, %311, %315
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #16
  %318 = load i32, i32* %32, align 8
  %319 = icmp sgt i32 %318, 5
  br i1 %319, label %320, label %326

320:                                              ; preds = %317
  %321 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %322 = load i32*, i32** %321, align 8
  %323 = icmp eq i32* %322, null
  br i1 %323, label %326, label %324

324:                                              ; preds = %320
  %325 = bitcast i32* %322 to i8*
  call void @_ZdaPv(i8* %325) #15
  br label %326

326:                                              ; preds = %317, %320, %324
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops4MeanIfEEvRKNS_10MeanParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::MeanParams"* dereferenceable(10), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #6 comdat {
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 4
  br i1 %10, label %12, label %11

11:                                               ; preds = %5
  tail call void @abort() #17
  unreachable

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, 5
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @abort() #17
  unreachable

17:                                               ; preds = %12
  %18 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false)
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 4, i32* %19, align 8, !alias.scope !274
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %21 = bitcast %union.anon* %20 to i8*
  %22 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %23 = bitcast %union.anon* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 4 %23, i64 16, i1 false) #16
  %24 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 32, i1 false)
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 4, i32* %25, align 8, !alias.scope !277
  %26 = sub i32 4, %14
  %27 = icmp sgt i32 %26, 0
  %28 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %27, label %29, label %109

29:                                               ; preds = %17
  %30 = bitcast %union.anon* %28 to [5 x i32]*
  %31 = zext i32 %26 to i64
  %32 = icmp ult i32 %26, 8
  br i1 %32, label %102, label %33

33:                                               ; preds = %29
  %34 = and i64 %31, 4294967288
  %35 = add nsw i64 %34, -8
  %36 = lshr exact i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 7
  %39 = icmp ult i64 %35, 56
  br i1 %39, label %87, label %40

40:                                               ; preds = %33
  %41 = sub nsw i64 %37, %38
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ 0, %40 ], [ %84, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %85, %42 ]
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %43
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !277
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !277
  %49 = or i64 %43, 8
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !277
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !277
  %54 = or i64 %43, 16
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !277
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !277
  %59 = or i64 %43, 24
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !277
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !277
  %64 = or i64 %43, 32
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !277
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !277
  %69 = or i64 %43, 40
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !277
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !277
  %74 = or i64 %43, 48
  %75 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %74
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 8, !alias.scope !277
  %77 = getelementptr inbounds i32, i32* %75, i64 4
  %78 = bitcast i32* %77 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %78, align 8, !alias.scope !277
  %79 = or i64 %43, 56
  %80 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %79
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %81, align 8, !alias.scope !277
  %82 = getelementptr inbounds i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !277
  %84 = add i64 %43, 64
  %85 = add i64 %44, -8
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %42, !llvm.loop !280

87:                                               ; preds = %42, %33
  %88 = phi i64 [ 0, %33 ], [ %84, %42 ]
  %89 = icmp eq i64 %38, 0
  br i1 %89, label %100, label %90

90:                                               ; preds = %87, %90
  %91 = phi i64 [ %97, %90 ], [ %88, %87 ]
  %92 = phi i64 [ %98, %90 ], [ %38, %87 ]
  %93 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %91
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %94, align 8, !alias.scope !277
  %95 = getelementptr inbounds i32, i32* %93, i64 4
  %96 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %96, align 8, !alias.scope !277
  %97 = add i64 %91, 8
  %98 = add i64 %92, -1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %90, !llvm.loop !281

100:                                              ; preds = %90, %87
  %101 = icmp eq i64 %34, %31
  br i1 %101, label %109, label %102

102:                                              ; preds = %100, %29
  %103 = phi i64 [ 0, %29 ], [ %34, %100 ]
  br label %104

104:                                              ; preds = %102, %104
  %105 = phi i64 [ %107, %104 ], [ %103, %102 ]
  %106 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %105
  store i32 1, i32* %106, align 4, !alias.scope !277
  %107 = add nuw nsw i64 %105, 1
  %108 = icmp eq i64 %107, %31
  br i1 %108, label %109, label %104, !llvm.loop !282

109:                                              ; preds = %104, %100, %17
  %110 = bitcast %union.anon* %28 to i32*
  %111 = sext i32 %26 to i64
  %112 = getelementptr inbounds i32, i32* %110, i64 %111
  %113 = bitcast i32* %112 to i8*
  %114 = icmp sgt i32 %14, 5
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %116 = getelementptr inbounds %union.anon, %union.anon* %115, i64 0, i32 0
  %117 = load i32*, i32** %116, align 8, !noalias !277
  %118 = bitcast %union.anon* %115 to i32*
  %119 = select i1 %114, i32* %117, i32* %118
  %120 = bitcast i32* %119 to i8*
  %121 = sext i32 %14 to i64
  %122 = shl nsw i64 %121, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %113, i8* align 4 %120, i64 %122, i1 false) #16
  %123 = load i32, i32* %25, align 8
  %124 = icmp sgt i32 %123, 5
  br i1 %124, label %125, label %131

125:                                              ; preds = %109
  %126 = getelementptr inbounds %union.anon, %union.anon* %28, i64 0, i32 0
  %127 = load i32*, i32** %126, align 8
  %128 = getelementptr inbounds i32, i32* %127, i64 1
  %129 = getelementptr inbounds i32, i32* %127, i64 2
  %130 = getelementptr inbounds i32, i32* %127, i64 3
  br label %138

131:                                              ; preds = %109
  %132 = bitcast %union.anon* %28 to [5 x i32]*
  %133 = getelementptr inbounds [5 x i32], [5 x i32]* %132, i64 0, i64 1
  %134 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %135 = bitcast [16 x i8]* %134 to i32*
  %136 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %137 = bitcast i8* %136 to i32*
  br label %138

138:                                              ; preds = %125, %131
  %139 = phi i32* [ %129, %125 ], [ %135, %131 ]
  %140 = phi i32* [ %127, %125 ], [ %110, %131 ]
  %141 = phi i32* [ %128, %125 ], [ %133, %131 ]
  %142 = phi i32* [ %130, %125 ], [ %137, %131 ]
  %143 = load i32, i32* %141, align 4
  %144 = load i32, i32* %140, align 4
  %145 = load i32, i32* %139, align 4
  %146 = load i32, i32* %142, align 4
  %147 = bitcast %union.anon* %20 to [5 x i32]*
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %147, i64 0, i64 1
  %149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %150 = bitcast [16 x i8]* %149 to i32*
  %151 = load i32, i32* %148, align 4
  %152 = load i32, i32* %150, align 8
  %153 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 0
  %154 = load i8, i8* %153, align 2
  %155 = icmp eq i8 %154, 2
  br i1 %155, label %157, label %156

156:                                              ; preds = %138
  tail call void @abort() #17
  unreachable

157:                                              ; preds = %138
  %158 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 0
  %159 = load i16, i16* %158, align 2
  switch i16 %159, label %168 [
    i16 1, label %160
    i16 2, label %164
  ]

160:                                              ; preds = %157
  %161 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 1
  %162 = load i16, i16* %161, align 2
  %163 = icmp eq i16 %162, 2
  br i1 %163, label %169, label %168

164:                                              ; preds = %157
  %165 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 1
  %166 = load i16, i16* %165, align 2
  %167 = icmp eq i16 %166, 1
  br i1 %167, label %169, label %168

168:                                              ; preds = %157, %160, %164
  tail call void @abort() #17
  unreachable

169:                                              ; preds = %160, %164
  %170 = icmp eq i32 %143, 1
  br i1 %170, label %172, label %171

171:                                              ; preds = %169
  tail call void @abort() #17
  unreachable

172:                                              ; preds = %169
  %173 = icmp eq i32 %145, 1
  br i1 %173, label %174, label %208

174:                                              ; preds = %172
  %175 = icmp sgt i32 %144, 0
  br i1 %175, label %176, label %216

176:                                              ; preds = %174
  %177 = icmp sgt i32 %146, 0
  %178 = icmp sgt i32 %151, 0
  %179 = icmp sgt i32 %152, 0
  %180 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %181 = bitcast i8* %180 to i32*
  %182 = load i32, i32* %181, align 4
  %183 = mul nsw i32 %152, %151
  %184 = sitofp i32 %183 to float
  %185 = getelementptr inbounds i32, i32* %110, i64 1
  %186 = load i32, i32* %185, align 4
  %187 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %188 = bitcast [16 x i8]* %187 to i32*
  %189 = load i32, i32* %188, align 8
  %190 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %191 = bitcast i8* %190 to i32*
  %192 = load i32, i32* %191, align 4
  %193 = sext i32 %182 to i64
  %194 = sext i32 %152 to i64
  %195 = sext i32 %151 to i64
  %196 = sext i32 %186 to i64
  %197 = sext i32 %189 to i64
  %198 = sext i32 %192 to i64
  %199 = zext i32 %144 to i64
  %200 = zext i32 %146 to i64
  %201 = zext i32 %151 to i64
  %202 = zext i32 %152 to i64
  %203 = add nsw i64 %202, -1
  %204 = and i64 %202, 3
  %205 = icmp ult i64 %203, 3
  %206 = sub nsw i64 %202, %204
  %207 = icmp eq i64 %204, 0
  br label %209

208:                                              ; preds = %172
  tail call void @abort() #17
  unreachable

209:                                              ; preds = %226, %176
  %210 = phi i64 [ 0, %176 ], [ %227, %226 ]
  br i1 %177, label %211, label %226

211:                                              ; preds = %209
  %212 = mul nsw i64 %210, %195
  %213 = mul nsw i64 %210, %196
  %214 = mul nsw i64 %213, %197
  %215 = mul nsw i64 %214, %198
  br label %224

216:                                              ; preds = %226, %174
  br i1 %124, label %217, label %223

217:                                              ; preds = %216
  %218 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %219 = load i32*, i32** %218, align 8
  %220 = icmp eq i32* %219, null
  br i1 %220, label %223, label %221

221:                                              ; preds = %217
  %222 = bitcast i32* %219 to i8*
  tail call void @_ZdaPv(i8* %222) #15
  br label %223

223:                                              ; preds = %221, %217, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #16
  ret void

224:                                              ; preds = %235, %211
  %225 = phi i64 [ 0, %211 ], [ %240, %235 ]
  br i1 %178, label %229, label %235

226:                                              ; preds = %235, %209
  %227 = add nuw nsw i64 %210, 1
  %228 = icmp eq i64 %227, %199
  br i1 %228, label %216, label %209

229:                                              ; preds = %224, %259
  %230 = phi i64 [ %261, %259 ], [ 0, %224 ]
  %231 = phi float [ %260, %259 ], [ 0.000000e+00, %224 ]
  br i1 %179, label %232, label %259

232:                                              ; preds = %229
  %233 = add nsw i64 %212, %230
  %234 = mul nsw i64 %233, %194
  br i1 %205, label %242, label %263

235:                                              ; preds = %259, %224
  %236 = phi float [ 0.000000e+00, %224 ], [ %260, %259 ]
  %237 = fdiv float %236, %184
  %238 = add nsw i64 %215, %225
  %239 = getelementptr inbounds float, float* %4, i64 %238
  store float %237, float* %239, align 4
  %240 = add nuw nsw i64 %225, 1
  %241 = icmp eq i64 %240, %200
  br i1 %241, label %226, label %224

242:                                              ; preds = %263, %232
  %243 = phi float [ undef, %232 ], [ %293, %263 ]
  %244 = phi i64 [ 0, %232 ], [ %294, %263 ]
  %245 = phi float [ %231, %232 ], [ %293, %263 ]
  br i1 %207, label %259, label %246

246:                                              ; preds = %242, %246
  %247 = phi i64 [ %256, %246 ], [ %244, %242 ]
  %248 = phi float [ %255, %246 ], [ %245, %242 ]
  %249 = phi i64 [ %257, %246 ], [ %204, %242 ]
  %250 = add nsw i64 %234, %247
  %251 = mul nsw i64 %250, %193
  %252 = add nsw i64 %251, %225
  %253 = getelementptr inbounds float, float* %2, i64 %252
  %254 = load float, float* %253, align 4
  %255 = fadd float %248, %254
  %256 = add nuw nsw i64 %247, 1
  %257 = add i64 %249, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %246, !llvm.loop !283

259:                                              ; preds = %242, %246, %229
  %260 = phi float [ %231, %229 ], [ %243, %242 ], [ %255, %246 ]
  %261 = add nuw nsw i64 %230, 1
  %262 = icmp eq i64 %261, %201
  br i1 %262, label %235, label %229

263:                                              ; preds = %232, %263
  %264 = phi i64 [ %294, %263 ], [ 0, %232 ]
  %265 = phi float [ %293, %263 ], [ %231, %232 ]
  %266 = phi i64 [ %295, %263 ], [ %206, %232 ]
  %267 = add nsw i64 %234, %264
  %268 = mul nsw i64 %267, %193
  %269 = add nsw i64 %268, %225
  %270 = getelementptr inbounds float, float* %2, i64 %269
  %271 = load float, float* %270, align 4
  %272 = fadd float %265, %271
  %273 = or i64 %264, 1
  %274 = add nsw i64 %234, %273
  %275 = mul nsw i64 %274, %193
  %276 = add nsw i64 %275, %225
  %277 = getelementptr inbounds float, float* %2, i64 %276
  %278 = load float, float* %277, align 4
  %279 = fadd float %272, %278
  %280 = or i64 %264, 2
  %281 = add nsw i64 %234, %280
  %282 = mul nsw i64 %281, %193
  %283 = add nsw i64 %282, %225
  %284 = getelementptr inbounds float, float* %2, i64 %283
  %285 = load float, float* %284, align 4
  %286 = fadd float %279, %285
  %287 = or i64 %264, 3
  %288 = add nsw i64 %234, %287
  %289 = mul nsw i64 %288, %193
  %290 = add nsw i64 %289, %225
  %291 = getelementptr inbounds float, float* %2, i64 %290
  %292 = load float, float* %291, align 4
  %293 = fadd float %286, %292
  %294 = add nuw nsw i64 %264, 4
  %295 = add i64 %266, -4
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %242, label %263
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite13reference_ops4MeanIilEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_(i32*, i32*, i32, i32*, i32*, i32, i32*, i32, i1 zeroext, i32*, i32*, i64*) local_unnamed_addr #6 comdat {
  %13 = icmp sgt i32 %5, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %12
  %15 = zext i32 %5 to i64
  br label %115

16:                                               ; preds = %123
  %17 = icmp eq i64 %124, 0
  br i1 %17, label %127, label %18

18:                                               ; preds = %12, %16
  %19 = phi i64 [ %124, %16 ], [ 1, %12 ]
  %20 = icmp ult i64 %19, 4
  br i1 %20, label %21, label %38

21:                                               ; preds = %113, %38, %18
  %22 = phi i64 [ 0, %38 ], [ 0, %18 ], [ %47, %113 ]
  %23 = xor i64 %22, -1
  %24 = add i64 %19, %23
  %25 = and i64 %19, 3
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %21, %27
  %28 = phi i64 [ %32, %27 ], [ %22, %21 ]
  %29 = phi i64 [ %33, %27 ], [ %25, %21 ]
  %30 = getelementptr inbounds i32, i32* %3, i64 %28
  store i32 0, i32* %30, align 4
  %31 = getelementptr inbounds i64, i64* %11, i64 %28
  store i64 0, i64* %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !284

35:                                               ; preds = %27, %21
  %36 = phi i64 [ %22, %21 ], [ %32, %27 ]
  %37 = icmp ult i64 %24, 3
  br i1 %37, label %127, label %172

38:                                               ; preds = %18
  %39 = getelementptr i32, i32* %3, i64 %19
  %40 = getelementptr i64, i64* %11, i64 %19
  %41 = bitcast i64* %40 to i32*
  %42 = icmp ugt i32* %41, %3
  %43 = bitcast i32* %39 to i64*
  %44 = icmp ugt i64* %43, %11
  %45 = and i1 %42, %44
  br i1 %45, label %21, label %46

46:                                               ; preds = %38
  %47 = and i64 %19, -4
  %48 = add i64 %47, -4
  %49 = lshr exact i64 %48, 2
  %50 = add nuw nsw i64 %49, 1
  %51 = and i64 %50, 3
  %52 = icmp ult i64 %48, 12
  br i1 %52, label %96, label %53

53:                                               ; preds = %46
  %54 = sub nsw i64 %50, %51
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi i64 [ 0, %53 ], [ %93, %55 ]
  %57 = phi i64 [ %54, %53 ], [ %94, %55 ]
  %58 = getelementptr inbounds i32, i32* %3, i64 %56
  %59 = bitcast i32* %58 to <2 x i32>*
  store <2 x i32> zeroinitializer, <2 x i32>* %59, align 4, !alias.scope !285, !noalias !288
  %60 = getelementptr inbounds i32, i32* %58, i64 2
  %61 = bitcast i32* %60 to <2 x i32>*
  store <2 x i32> zeroinitializer, <2 x i32>* %61, align 4, !alias.scope !285, !noalias !288
  %62 = getelementptr inbounds i64, i64* %11, i64 %56
  %63 = bitcast i64* %62 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %63, align 8, !alias.scope !288
  %64 = getelementptr inbounds i64, i64* %62, i64 2
  %65 = bitcast i64* %64 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %65, align 8, !alias.scope !288
  %66 = or i64 %56, 4
  %67 = getelementptr inbounds i32, i32* %3, i64 %66
  %68 = bitcast i32* %67 to <2 x i32>*
  store <2 x i32> zeroinitializer, <2 x i32>* %68, align 4, !alias.scope !285, !noalias !288
  %69 = getelementptr inbounds i32, i32* %67, i64 2
  %70 = bitcast i32* %69 to <2 x i32>*
  store <2 x i32> zeroinitializer, <2 x i32>* %70, align 4, !alias.scope !285, !noalias !288
  %71 = getelementptr inbounds i64, i64* %11, i64 %66
  %72 = bitcast i64* %71 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %72, align 8, !alias.scope !288
  %73 = getelementptr inbounds i64, i64* %71, i64 2
  %74 = bitcast i64* %73 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %74, align 8, !alias.scope !288
  %75 = or i64 %56, 8
  %76 = getelementptr inbounds i32, i32* %3, i64 %75
  %77 = bitcast i32* %76 to <2 x i32>*
  store <2 x i32> zeroinitializer, <2 x i32>* %77, align 4, !alias.scope !285, !noalias !288
  %78 = getelementptr inbounds i32, i32* %76, i64 2
  %79 = bitcast i32* %78 to <2 x i32>*
  store <2 x i32> zeroinitializer, <2 x i32>* %79, align 4, !alias.scope !285, !noalias !288
  %80 = getelementptr inbounds i64, i64* %11, i64 %75
  %81 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %81, align 8, !alias.scope !288
  %82 = getelementptr inbounds i64, i64* %80, i64 2
  %83 = bitcast i64* %82 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %83, align 8, !alias.scope !288
  %84 = or i64 %56, 12
  %85 = getelementptr inbounds i32, i32* %3, i64 %84
  %86 = bitcast i32* %85 to <2 x i32>*
  store <2 x i32> zeroinitializer, <2 x i32>* %86, align 4, !alias.scope !285, !noalias !288
  %87 = getelementptr inbounds i32, i32* %85, i64 2
  %88 = bitcast i32* %87 to <2 x i32>*
  store <2 x i32> zeroinitializer, <2 x i32>* %88, align 4, !alias.scope !285, !noalias !288
  %89 = getelementptr inbounds i64, i64* %11, i64 %84
  %90 = bitcast i64* %89 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %90, align 8, !alias.scope !288
  %91 = getelementptr inbounds i64, i64* %89, i64 2
  %92 = bitcast i64* %91 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %92, align 8, !alias.scope !288
  %93 = add i64 %56, 16
  %94 = add i64 %57, -4
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %55, !llvm.loop !290

96:                                               ; preds = %55, %46
  %97 = phi i64 [ 0, %46 ], [ %93, %55 ]
  %98 = icmp eq i64 %51, 0
  br i1 %98, label %113, label %99

99:                                               ; preds = %96, %99
  %100 = phi i64 [ %110, %99 ], [ %97, %96 ]
  %101 = phi i64 [ %111, %99 ], [ %51, %96 ]
  %102 = getelementptr inbounds i32, i32* %3, i64 %100
  %103 = bitcast i32* %102 to <2 x i32>*
  store <2 x i32> zeroinitializer, <2 x i32>* %103, align 4, !alias.scope !285, !noalias !288
  %104 = getelementptr inbounds i32, i32* %102, i64 2
  %105 = bitcast i32* %104 to <2 x i32>*
  store <2 x i32> zeroinitializer, <2 x i32>* %105, align 4, !alias.scope !285, !noalias !288
  %106 = getelementptr inbounds i64, i64* %11, i64 %100
  %107 = bitcast i64* %106 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %107, align 8, !alias.scope !288
  %108 = getelementptr inbounds i64, i64* %106, i64 2
  %109 = bitcast i64* %108 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %109, align 8, !alias.scope !288
  %110 = add i64 %100, 4
  %111 = add i64 %101, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %99, !llvm.loop !291

113:                                              ; preds = %99, %96
  %114 = icmp eq i64 %19, %47
  br i1 %114, label %127, label %21

115:                                              ; preds = %123, %14
  %116 = phi i64 [ 0, %14 ], [ %125, %123 ]
  %117 = phi i64 [ 1, %14 ], [ %124, %123 ]
  %118 = getelementptr inbounds i32, i32* %4, i64 %116
  %119 = load i32, i32* %118, align 4
  %120 = sext i32 %119 to i64
  %121 = udiv i64 -1, %120
  %122 = icmp ugt i64 %117, %121
  br i1 %122, label %373, label %123

123:                                              ; preds = %115
  %124 = mul i64 %117, %120
  %125 = add nuw nsw i64 %116, 1
  %126 = icmp eq i64 %125, %15
  br i1 %126, label %16, label %115

127:                                              ; preds = %35, %172, %113, %16
  %128 = phi i64 [ 0, %16 ], [ %19, %113 ], [ %19, %172 ], [ %19, %35 ]
  %129 = sext i32 %7 to i64
  %130 = icmp ne i32 %2, 0
  %131 = icmp sgt i32 %7, 0
  %132 = and i1 %130, %131
  br i1 %132, label %133, label %187

133:                                              ; preds = %127, %166
  %134 = phi i32 [ %167, %166 ], [ 0, %127 ]
  %135 = phi i32 [ %168, %166 ], [ 0, %127 ]
  %136 = phi i32 [ %169, %166 ], [ 0, %127 ]
  %137 = phi i64 [ %170, %166 ], [ 0, %127 ]
  %138 = getelementptr inbounds i32, i32* %6, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = icmp slt i32 %139, 0
  %141 = select i1 %140, i32 %2, i32 0
  %142 = add nsw i32 %141, %139
  %143 = icmp sgt i32 %142, -1
  %144 = icmp slt i32 %142, %2
  %145 = and i1 %143, %144
  br i1 %145, label %146, label %373

146:                                              ; preds = %133
  %147 = icmp sgt i32 %136, 0
  br i1 %147, label %150, label %148

148:                                              ; preds = %146
  %149 = sext i32 %136 to i64
  br label %162

150:                                              ; preds = %146
  %151 = sext i32 %135 to i64
  %152 = load i32, i32* %10, align 4
  %153 = icmp eq i32 %152, %142
  br i1 %153, label %166, label %154

154:                                              ; preds = %150, %157
  %155 = phi i64 [ %161, %157 ], [ 1, %150 ]
  %156 = icmp slt i64 %155, %151
  br i1 %156, label %157, label %162

157:                                              ; preds = %154
  %158 = getelementptr inbounds i32, i32* %10, i64 %155
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %159, %142
  %161 = add nuw nsw i64 %155, 1
  br i1 %160, label %166, label %154

162:                                              ; preds = %154, %148
  %163 = phi i64 [ %149, %148 ], [ %151, %154 ]
  %164 = getelementptr inbounds i32, i32* %10, i64 %163
  store i32 %142, i32* %164, align 4
  %165 = add nsw i32 %134, 1
  br label %166

166:                                              ; preds = %157, %150, %162
  %167 = phi i32 [ %165, %162 ], [ %134, %150 ], [ %134, %157 ]
  %168 = phi i32 [ %165, %162 ], [ %135, %150 ], [ %135, %157 ]
  %169 = phi i32 [ %165, %162 ], [ %136, %150 ], [ %135, %157 ]
  %170 = add nuw nsw i64 %137, 1
  %171 = icmp eq i64 %170, %129
  br i1 %171, label %187, label %133

172:                                              ; preds = %35, %172
  %173 = phi i64 [ %185, %172 ], [ %36, %35 ]
  %174 = getelementptr inbounds i32, i32* %3, i64 %173
  store i32 0, i32* %174, align 4
  %175 = getelementptr inbounds i64, i64* %11, i64 %173
  store i64 0, i64* %175, align 8
  %176 = add nuw i64 %173, 1
  %177 = getelementptr inbounds i32, i32* %3, i64 %176
  store i32 0, i32* %177, align 4
  %178 = getelementptr inbounds i64, i64* %11, i64 %176
  store i64 0, i64* %178, align 8
  %179 = add nuw i64 %173, 2
  %180 = getelementptr inbounds i32, i32* %3, i64 %179
  store i32 0, i32* %180, align 4
  %181 = getelementptr inbounds i64, i64* %11, i64 %179
  store i64 0, i64* %181, align 8
  %182 = add nuw i64 %173, 3
  %183 = getelementptr inbounds i32, i32* %3, i64 %182
  store i32 0, i32* %183, align 4
  %184 = getelementptr inbounds i64, i64* %11, i64 %182
  store i64 0, i64* %184, align 8
  %185 = add nuw i64 %173, 4
  %186 = icmp eq i64 %185, %19
  br i1 %186, label %127, label %172, !llvm.loop !292

187:                                              ; preds = %166, %127
  %188 = phi i32 [ 0, %127 ], [ %167, %166 ]
  %189 = icmp sgt i32 %2, 0
  br i1 %189, label %192, label %190

190:                                              ; preds = %187
  %191 = zext i32 %2 to i64
  br label %196

192:                                              ; preds = %187
  %193 = bitcast i32* %9 to i8*
  %194 = zext i32 %2 to i64
  %195 = shl nuw nsw i64 %194, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %193, i8 0, i64 %195, i1 false) #16
  br label %196

196:                                              ; preds = %192, %190
  %197 = phi i64 [ %191, %190 ], [ %194, %192 ]
  %198 = icmp eq i32* %10, null
  %199 = icmp slt i32 %188, 1
  %200 = or i1 %198, %199
  %201 = zext i32 %188 to i64
  %202 = icmp eq i32 %2, 0
  %203 = sext i32 %2 to i64
  %204 = add nsw i64 %197, -1
  %205 = and i64 %197, 3
  %206 = icmp ult i64 %204, 3
  %207 = sub nsw i64 %197, %205
  %208 = icmp eq i64 %205, 0
  br label %209

209:                                              ; preds = %312, %196
  br i1 %189, label %210, label %299

210:                                              ; preds = %209
  br i1 %206, label %253, label %211

211:                                              ; preds = %210, %211
  %212 = phi i64 [ %250, %211 ], [ 0, %210 ]
  %213 = phi i64 [ %249, %211 ], [ 0, %210 ]
  %214 = phi i64 [ %251, %211 ], [ %207, %210 ]
  %215 = getelementptr inbounds i32, i32* %1, i64 %212
  %216 = load i32, i32* %215, align 4
  %217 = sext i32 %216 to i64
  %218 = mul i64 %213, %217
  %219 = getelementptr inbounds i32, i32* %9, i64 %212
  %220 = load i32, i32* %219, align 4
  %221 = sext i32 %220 to i64
  %222 = add i64 %218, %221
  %223 = or i64 %212, 1
  %224 = getelementptr inbounds i32, i32* %1, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = sext i32 %225 to i64
  %227 = mul i64 %222, %226
  %228 = getelementptr inbounds i32, i32* %9, i64 %223
  %229 = load i32, i32* %228, align 4
  %230 = sext i32 %229 to i64
  %231 = add i64 %227, %230
  %232 = or i64 %212, 2
  %233 = getelementptr inbounds i32, i32* %1, i64 %232
  %234 = load i32, i32* %233, align 4
  %235 = sext i32 %234 to i64
  %236 = mul i64 %231, %235
  %237 = getelementptr inbounds i32, i32* %9, i64 %232
  %238 = load i32, i32* %237, align 4
  %239 = sext i32 %238 to i64
  %240 = add i64 %236, %239
  %241 = or i64 %212, 3
  %242 = getelementptr inbounds i32, i32* %1, i64 %241
  %243 = load i32, i32* %242, align 4
  %244 = sext i32 %243 to i64
  %245 = mul i64 %240, %244
  %246 = getelementptr inbounds i32, i32* %9, i64 %241
  %247 = load i32, i32* %246, align 4
  %248 = sext i32 %247 to i64
  %249 = add i64 %245, %248
  %250 = add nuw nsw i64 %212, 4
  %251 = add i64 %214, -4
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %211

253:                                              ; preds = %211, %210
  %254 = phi i64 [ undef, %210 ], [ %249, %211 ]
  %255 = phi i64 [ 0, %210 ], [ %250, %211 ]
  %256 = phi i64 [ 0, %210 ], [ %249, %211 ]
  br i1 %208, label %272, label %257

257:                                              ; preds = %253, %257
  %258 = phi i64 [ %269, %257 ], [ %255, %253 ]
  %259 = phi i64 [ %268, %257 ], [ %256, %253 ]
  %260 = phi i64 [ %270, %257 ], [ %205, %253 ]
  %261 = getelementptr inbounds i32, i32* %1, i64 %258
  %262 = load i32, i32* %261, align 4
  %263 = sext i32 %262 to i64
  %264 = mul i64 %259, %263
  %265 = getelementptr inbounds i32, i32* %9, i64 %258
  %266 = load i32, i32* %265, align 4
  %267 = sext i32 %266 to i64
  %268 = add i64 %264, %267
  %269 = add nuw nsw i64 %258, 1
  %270 = add i64 %260, -1
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %272, label %257, !llvm.loop !293

272:                                              ; preds = %257, %253
  %273 = phi i64 [ %254, %253 ], [ %268, %257 ]
  br label %274

274:                                              ; preds = %272, %295
  %275 = phi i64 [ %297, %295 ], [ 0, %272 ]
  %276 = phi i64 [ %296, %295 ], [ 0, %272 ]
  br i1 %200, label %286, label %279

277:                                              ; preds = %279
  %278 = icmp eq i64 %285, %201
  br i1 %278, label %286, label %279

279:                                              ; preds = %274, %277
  %280 = phi i64 [ %285, %277 ], [ 0, %274 ]
  %281 = getelementptr inbounds i32, i32* %10, i64 %280
  %282 = load i32, i32* %281, align 4
  %283 = zext i32 %282 to i64
  %284 = icmp eq i64 %275, %283
  %285 = add nuw nsw i64 %280, 1
  br i1 %284, label %295, label %277

286:                                              ; preds = %277, %274
  %287 = getelementptr inbounds i32, i32* %1, i64 %275
  %288 = load i32, i32* %287, align 4
  %289 = sext i32 %288 to i64
  %290 = mul i64 %276, %289
  %291 = getelementptr inbounds i32, i32* %9, i64 %275
  %292 = load i32, i32* %291, align 4
  %293 = sext i32 %292 to i64
  %294 = add i64 %290, %293
  br label %295

295:                                              ; preds = %279, %286
  %296 = phi i64 [ %294, %286 ], [ %276, %279 ]
  %297 = add nuw nsw i64 %275, 1
  %298 = icmp eq i64 %297, %197
  br i1 %298, label %299, label %274

299:                                              ; preds = %295, %209
  %300 = phi i64 [ 0, %209 ], [ %273, %295 ]
  %301 = phi i64 [ 0, %209 ], [ %296, %295 ]
  %302 = getelementptr inbounds i64, i64* %11, i64 %301
  %303 = load i64, i64* %302, align 8
  %304 = getelementptr inbounds i32, i32* %0, i64 %300
  %305 = load i32, i32* %304, align 4
  %306 = sext i32 %305 to i64
  %307 = add nsw i64 %303, %306
  store i64 %307, i64* %302, align 8
  br i1 %202, label %320, label %308

308:                                              ; preds = %299, %312
  %309 = phi i64 [ %310, %312 ], [ %203, %299 ]
  %310 = add nsw i64 %309, -1
  %311 = icmp sgt i64 %309, 0
  br i1 %311, label %312, label %320

312:                                              ; preds = %308
  %313 = getelementptr inbounds i32, i32* %9, i64 %310
  %314 = load i32, i32* %313, align 4
  %315 = add nsw i32 %314, 1
  %316 = getelementptr inbounds i32, i32* %1, i64 %310
  %317 = load i32, i32* %316, align 4
  %318 = icmp eq i32 %317, %315
  %319 = select i1 %318, i32 0, i32 %315
  store i32 %319, i32* %313, align 4
  br i1 %318, label %308, label %209

320:                                              ; preds = %299, %308
  %321 = icmp sgt i32 %188, 0
  br i1 %321, label %322, label %337

322:                                              ; preds = %320, %333
  %323 = phi i64 [ %335, %333 ], [ 0, %320 ]
  %324 = phi i64 [ %334, %333 ], [ 1, %320 ]
  %325 = getelementptr inbounds i32, i32* %10, i64 %323
  %326 = load i32, i32* %325, align 4
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds i32, i32* %1, i64 %327
  %329 = load i32, i32* %328, align 4
  %330 = sext i32 %329 to i64
  %331 = sdiv i64 9223372036854775807, %324
  %332 = icmp ult i64 %331, %330
  br i1 %332, label %373, label %333

333:                                              ; preds = %322
  %334 = mul i64 %324, %330
  %335 = add nuw nsw i64 %323, 1
  %336 = icmp eq i64 %335, %201
  br i1 %336, label %337, label %322

337:                                              ; preds = %333, %320
  %338 = phi i64 [ 1, %320 ], [ %334, %333 ]
  %339 = icmp sgt i64 %338, 0
  %340 = icmp ne i64 %128, 0
  %341 = and i1 %339, %340
  br i1 %341, label %342, label %373

342:                                              ; preds = %337
  %343 = and i64 %128, 1
  %344 = icmp eq i64 %128, 1
  br i1 %344, label %364, label %345

345:                                              ; preds = %342
  %346 = sub i64 %128, %343
  br label %347

347:                                              ; preds = %347, %345
  %348 = phi i64 [ 0, %345 ], [ %361, %347 ]
  %349 = phi i64 [ %346, %345 ], [ %362, %347 ]
  %350 = getelementptr inbounds i64, i64* %11, i64 %348
  %351 = load i64, i64* %350, align 8
  %352 = sdiv i64 %351, %338
  %353 = trunc i64 %352 to i32
  %354 = getelementptr inbounds i32, i32* %3, i64 %348
  store i32 %353, i32* %354, align 4
  %355 = or i64 %348, 1
  %356 = getelementptr inbounds i64, i64* %11, i64 %355
  %357 = load i64, i64* %356, align 8
  %358 = sdiv i64 %357, %338
  %359 = trunc i64 %358 to i32
  %360 = getelementptr inbounds i32, i32* %3, i64 %355
  store i32 %359, i32* %360, align 4
  %361 = add nuw i64 %348, 2
  %362 = add i64 %349, -2
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %364, label %347

364:                                              ; preds = %347, %342
  %365 = phi i64 [ 0, %342 ], [ %361, %347 ]
  %366 = icmp eq i64 %343, 0
  br i1 %366, label %373, label %367

367:                                              ; preds = %364
  %368 = getelementptr inbounds i64, i64* %11, i64 %365
  %369 = load i64, i64* %368, align 8
  %370 = sdiv i64 %369, %338
  %371 = trunc i64 %370 to i32
  %372 = getelementptr inbounds i32, i32* %3, i64 %365
  store i32 %371, i32* %372, align 4
  br label %373

373:                                              ; preds = %115, %133, %322, %367, %364, %337
  %374 = phi i1 [ true, %337 ], [ true, %364 ], [ true, %367 ], [ false, %322 ], [ false, %133 ], [ false, %115 ]
  ret i1 %374
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite13reference_ops4MeanIllEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_(i64*, i32*, i32, i64*, i32*, i32, i32*, i32, i1 zeroext, i32*, i32*, i64*) local_unnamed_addr #6 comdat {
  %13 = icmp sgt i32 %5, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %12
  %15 = zext i32 %5 to i64
  br label %113

16:                                               ; preds = %121
  %17 = icmp eq i64 %122, 0
  br i1 %17, label %125, label %18

18:                                               ; preds = %12, %16
  %19 = phi i64 [ %122, %16 ], [ 1, %12 ]
  %20 = icmp ult i64 %19, 4
  br i1 %20, label %21, label %38

21:                                               ; preds = %111, %38, %18
  %22 = phi i64 [ 0, %38 ], [ 0, %18 ], [ %45, %111 ]
  %23 = xor i64 %22, -1
  %24 = add i64 %19, %23
  %25 = and i64 %19, 3
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %21, %27
  %28 = phi i64 [ %32, %27 ], [ %22, %21 ]
  %29 = phi i64 [ %33, %27 ], [ %25, %21 ]
  %30 = getelementptr inbounds i64, i64* %3, i64 %28
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds i64, i64* %11, i64 %28
  store i64 0, i64* %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !294

35:                                               ; preds = %27, %21
  %36 = phi i64 [ %22, %21 ], [ %32, %27 ]
  %37 = icmp ult i64 %24, 3
  br i1 %37, label %125, label %170

38:                                               ; preds = %18
  %39 = getelementptr i64, i64* %3, i64 %19
  %40 = getelementptr i64, i64* %11, i64 %19
  %41 = icmp ugt i64* %40, %3
  %42 = icmp ugt i64* %39, %11
  %43 = and i1 %41, %42
  br i1 %43, label %21, label %44

44:                                               ; preds = %38
  %45 = and i64 %19, -4
  %46 = add i64 %45, -4
  %47 = lshr exact i64 %46, 2
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 3
  %50 = icmp ult i64 %46, 12
  br i1 %50, label %94, label %51

51:                                               ; preds = %44
  %52 = sub nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %91, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %92, %53 ]
  %56 = getelementptr inbounds i64, i64* %3, i64 %54
  %57 = bitcast i64* %56 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %57, align 8, !alias.scope !295, !noalias !298
  %58 = getelementptr inbounds i64, i64* %56, i64 2
  %59 = bitcast i64* %58 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %59, align 8, !alias.scope !295, !noalias !298
  %60 = getelementptr inbounds i64, i64* %11, i64 %54
  %61 = bitcast i64* %60 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %61, align 8, !alias.scope !298
  %62 = getelementptr inbounds i64, i64* %60, i64 2
  %63 = bitcast i64* %62 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %63, align 8, !alias.scope !298
  %64 = or i64 %54, 4
  %65 = getelementptr inbounds i64, i64* %3, i64 %64
  %66 = bitcast i64* %65 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %66, align 8, !alias.scope !295, !noalias !298
  %67 = getelementptr inbounds i64, i64* %65, i64 2
  %68 = bitcast i64* %67 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %68, align 8, !alias.scope !295, !noalias !298
  %69 = getelementptr inbounds i64, i64* %11, i64 %64
  %70 = bitcast i64* %69 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %70, align 8, !alias.scope !298
  %71 = getelementptr inbounds i64, i64* %69, i64 2
  %72 = bitcast i64* %71 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %72, align 8, !alias.scope !298
  %73 = or i64 %54, 8
  %74 = getelementptr inbounds i64, i64* %3, i64 %73
  %75 = bitcast i64* %74 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %75, align 8, !alias.scope !295, !noalias !298
  %76 = getelementptr inbounds i64, i64* %74, i64 2
  %77 = bitcast i64* %76 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %77, align 8, !alias.scope !295, !noalias !298
  %78 = getelementptr inbounds i64, i64* %11, i64 %73
  %79 = bitcast i64* %78 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %79, align 8, !alias.scope !298
  %80 = getelementptr inbounds i64, i64* %78, i64 2
  %81 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %81, align 8, !alias.scope !298
  %82 = or i64 %54, 12
  %83 = getelementptr inbounds i64, i64* %3, i64 %82
  %84 = bitcast i64* %83 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %84, align 8, !alias.scope !295, !noalias !298
  %85 = getelementptr inbounds i64, i64* %83, i64 2
  %86 = bitcast i64* %85 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %86, align 8, !alias.scope !295, !noalias !298
  %87 = getelementptr inbounds i64, i64* %11, i64 %82
  %88 = bitcast i64* %87 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %88, align 8, !alias.scope !298
  %89 = getelementptr inbounds i64, i64* %87, i64 2
  %90 = bitcast i64* %89 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %90, align 8, !alias.scope !298
  %91 = add i64 %54, 16
  %92 = add i64 %55, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %53, !llvm.loop !300

94:                                               ; preds = %53, %44
  %95 = phi i64 [ 0, %44 ], [ %91, %53 ]
  %96 = icmp eq i64 %49, 0
  br i1 %96, label %111, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %108, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %109, %97 ], [ %49, %94 ]
  %100 = getelementptr inbounds i64, i64* %3, i64 %98
  %101 = bitcast i64* %100 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %101, align 8, !alias.scope !295, !noalias !298
  %102 = getelementptr inbounds i64, i64* %100, i64 2
  %103 = bitcast i64* %102 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %103, align 8, !alias.scope !295, !noalias !298
  %104 = getelementptr inbounds i64, i64* %11, i64 %98
  %105 = bitcast i64* %104 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %105, align 8, !alias.scope !298
  %106 = getelementptr inbounds i64, i64* %104, i64 2
  %107 = bitcast i64* %106 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %107, align 8, !alias.scope !298
  %108 = add i64 %98, 4
  %109 = add i64 %99, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %97, !llvm.loop !301

111:                                              ; preds = %97, %94
  %112 = icmp eq i64 %19, %45
  br i1 %112, label %125, label %21

113:                                              ; preds = %121, %14
  %114 = phi i64 [ 0, %14 ], [ %123, %121 ]
  %115 = phi i64 [ 1, %14 ], [ %122, %121 ]
  %116 = getelementptr inbounds i32, i32* %4, i64 %114
  %117 = load i32, i32* %116, align 4
  %118 = sext i32 %117 to i64
  %119 = udiv i64 -1, %118
  %120 = icmp ugt i64 %115, %119
  br i1 %120, label %367, label %121

121:                                              ; preds = %113
  %122 = mul i64 %115, %118
  %123 = add nuw nsw i64 %114, 1
  %124 = icmp eq i64 %123, %15
  br i1 %124, label %16, label %113

125:                                              ; preds = %35, %170, %111, %16
  %126 = phi i64 [ 0, %16 ], [ %19, %111 ], [ %19, %170 ], [ %19, %35 ]
  %127 = sext i32 %7 to i64
  %128 = icmp ne i32 %2, 0
  %129 = icmp sgt i32 %7, 0
  %130 = and i1 %128, %129
  br i1 %130, label %131, label %185

131:                                              ; preds = %125, %164
  %132 = phi i32 [ %165, %164 ], [ 0, %125 ]
  %133 = phi i32 [ %166, %164 ], [ 0, %125 ]
  %134 = phi i32 [ %167, %164 ], [ 0, %125 ]
  %135 = phi i64 [ %168, %164 ], [ 0, %125 ]
  %136 = getelementptr inbounds i32, i32* %6, i64 %135
  %137 = load i32, i32* %136, align 4
  %138 = icmp slt i32 %137, 0
  %139 = select i1 %138, i32 %2, i32 0
  %140 = add nsw i32 %139, %137
  %141 = icmp sgt i32 %140, -1
  %142 = icmp slt i32 %140, %2
  %143 = and i1 %141, %142
  br i1 %143, label %144, label %367

144:                                              ; preds = %131
  %145 = icmp sgt i32 %134, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = sext i32 %134 to i64
  br label %160

148:                                              ; preds = %144
  %149 = sext i32 %133 to i64
  %150 = load i32, i32* %10, align 4
  %151 = icmp eq i32 %150, %140
  br i1 %151, label %164, label %152

152:                                              ; preds = %148, %155
  %153 = phi i64 [ %159, %155 ], [ 1, %148 ]
  %154 = icmp slt i64 %153, %149
  br i1 %154, label %155, label %160

155:                                              ; preds = %152
  %156 = getelementptr inbounds i32, i32* %10, i64 %153
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, %140
  %159 = add nuw nsw i64 %153, 1
  br i1 %158, label %164, label %152

160:                                              ; preds = %152, %146
  %161 = phi i64 [ %147, %146 ], [ %149, %152 ]
  %162 = getelementptr inbounds i32, i32* %10, i64 %161
  store i32 %140, i32* %162, align 4
  %163 = add nsw i32 %132, 1
  br label %164

164:                                              ; preds = %155, %148, %160
  %165 = phi i32 [ %163, %160 ], [ %132, %148 ], [ %132, %155 ]
  %166 = phi i32 [ %163, %160 ], [ %133, %148 ], [ %133, %155 ]
  %167 = phi i32 [ %163, %160 ], [ %134, %148 ], [ %133, %155 ]
  %168 = add nuw nsw i64 %135, 1
  %169 = icmp eq i64 %168, %127
  br i1 %169, label %185, label %131

170:                                              ; preds = %35, %170
  %171 = phi i64 [ %183, %170 ], [ %36, %35 ]
  %172 = getelementptr inbounds i64, i64* %3, i64 %171
  store i64 0, i64* %172, align 8
  %173 = getelementptr inbounds i64, i64* %11, i64 %171
  store i64 0, i64* %173, align 8
  %174 = add nuw i64 %171, 1
  %175 = getelementptr inbounds i64, i64* %3, i64 %174
  store i64 0, i64* %175, align 8
  %176 = getelementptr inbounds i64, i64* %11, i64 %174
  store i64 0, i64* %176, align 8
  %177 = add nuw i64 %171, 2
  %178 = getelementptr inbounds i64, i64* %3, i64 %177
  store i64 0, i64* %178, align 8
  %179 = getelementptr inbounds i64, i64* %11, i64 %177
  store i64 0, i64* %179, align 8
  %180 = add nuw i64 %171, 3
  %181 = getelementptr inbounds i64, i64* %3, i64 %180
  store i64 0, i64* %181, align 8
  %182 = getelementptr inbounds i64, i64* %11, i64 %180
  store i64 0, i64* %182, align 8
  %183 = add nuw i64 %171, 4
  %184 = icmp eq i64 %183, %19
  br i1 %184, label %125, label %170, !llvm.loop !302

185:                                              ; preds = %164, %125
  %186 = phi i32 [ 0, %125 ], [ %165, %164 ]
  %187 = icmp sgt i32 %2, 0
  br i1 %187, label %190, label %188

188:                                              ; preds = %185
  %189 = zext i32 %2 to i64
  br label %194

190:                                              ; preds = %185
  %191 = bitcast i32* %9 to i8*
  %192 = zext i32 %2 to i64
  %193 = shl nuw nsw i64 %192, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %191, i8 0, i64 %193, i1 false) #16
  br label %194

194:                                              ; preds = %190, %188
  %195 = phi i64 [ %189, %188 ], [ %192, %190 ]
  %196 = icmp eq i32* %10, null
  %197 = icmp slt i32 %186, 1
  %198 = or i1 %196, %197
  %199 = zext i32 %186 to i64
  %200 = icmp eq i32 %2, 0
  %201 = sext i32 %2 to i64
  %202 = add nsw i64 %195, -1
  %203 = and i64 %195, 3
  %204 = icmp ult i64 %202, 3
  %205 = sub nsw i64 %195, %203
  %206 = icmp eq i64 %203, 0
  br label %207

207:                                              ; preds = %309, %194
  br i1 %187, label %208, label %297

208:                                              ; preds = %207
  br i1 %204, label %251, label %209

209:                                              ; preds = %208, %209
  %210 = phi i64 [ %248, %209 ], [ 0, %208 ]
  %211 = phi i64 [ %247, %209 ], [ 0, %208 ]
  %212 = phi i64 [ %249, %209 ], [ %205, %208 ]
  %213 = getelementptr inbounds i32, i32* %1, i64 %210
  %214 = load i32, i32* %213, align 4
  %215 = sext i32 %214 to i64
  %216 = mul i64 %211, %215
  %217 = getelementptr inbounds i32, i32* %9, i64 %210
  %218 = load i32, i32* %217, align 4
  %219 = sext i32 %218 to i64
  %220 = add i64 %216, %219
  %221 = or i64 %210, 1
  %222 = getelementptr inbounds i32, i32* %1, i64 %221
  %223 = load i32, i32* %222, align 4
  %224 = sext i32 %223 to i64
  %225 = mul i64 %220, %224
  %226 = getelementptr inbounds i32, i32* %9, i64 %221
  %227 = load i32, i32* %226, align 4
  %228 = sext i32 %227 to i64
  %229 = add i64 %225, %228
  %230 = or i64 %210, 2
  %231 = getelementptr inbounds i32, i32* %1, i64 %230
  %232 = load i32, i32* %231, align 4
  %233 = sext i32 %232 to i64
  %234 = mul i64 %229, %233
  %235 = getelementptr inbounds i32, i32* %9, i64 %230
  %236 = load i32, i32* %235, align 4
  %237 = sext i32 %236 to i64
  %238 = add i64 %234, %237
  %239 = or i64 %210, 3
  %240 = getelementptr inbounds i32, i32* %1, i64 %239
  %241 = load i32, i32* %240, align 4
  %242 = sext i32 %241 to i64
  %243 = mul i64 %238, %242
  %244 = getelementptr inbounds i32, i32* %9, i64 %239
  %245 = load i32, i32* %244, align 4
  %246 = sext i32 %245 to i64
  %247 = add i64 %243, %246
  %248 = add nuw nsw i64 %210, 4
  %249 = add i64 %212, -4
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %209

251:                                              ; preds = %209, %208
  %252 = phi i64 [ undef, %208 ], [ %247, %209 ]
  %253 = phi i64 [ 0, %208 ], [ %248, %209 ]
  %254 = phi i64 [ 0, %208 ], [ %247, %209 ]
  br i1 %206, label %270, label %255

255:                                              ; preds = %251, %255
  %256 = phi i64 [ %267, %255 ], [ %253, %251 ]
  %257 = phi i64 [ %266, %255 ], [ %254, %251 ]
  %258 = phi i64 [ %268, %255 ], [ %203, %251 ]
  %259 = getelementptr inbounds i32, i32* %1, i64 %256
  %260 = load i32, i32* %259, align 4
  %261 = sext i32 %260 to i64
  %262 = mul i64 %257, %261
  %263 = getelementptr inbounds i32, i32* %9, i64 %256
  %264 = load i32, i32* %263, align 4
  %265 = sext i32 %264 to i64
  %266 = add i64 %262, %265
  %267 = add nuw nsw i64 %256, 1
  %268 = add i64 %258, -1
  %269 = icmp eq i64 %268, 0
  br i1 %269, label %270, label %255, !llvm.loop !303

270:                                              ; preds = %255, %251
  %271 = phi i64 [ %252, %251 ], [ %266, %255 ]
  br label %272

272:                                              ; preds = %270, %293
  %273 = phi i64 [ %295, %293 ], [ 0, %270 ]
  %274 = phi i64 [ %294, %293 ], [ 0, %270 ]
  br i1 %198, label %284, label %277

275:                                              ; preds = %277
  %276 = icmp eq i64 %283, %199
  br i1 %276, label %284, label %277

277:                                              ; preds = %272, %275
  %278 = phi i64 [ %283, %275 ], [ 0, %272 ]
  %279 = getelementptr inbounds i32, i32* %10, i64 %278
  %280 = load i32, i32* %279, align 4
  %281 = zext i32 %280 to i64
  %282 = icmp eq i64 %273, %281
  %283 = add nuw nsw i64 %278, 1
  br i1 %282, label %293, label %275

284:                                              ; preds = %275, %272
  %285 = getelementptr inbounds i32, i32* %1, i64 %273
  %286 = load i32, i32* %285, align 4
  %287 = sext i32 %286 to i64
  %288 = mul i64 %274, %287
  %289 = getelementptr inbounds i32, i32* %9, i64 %273
  %290 = load i32, i32* %289, align 4
  %291 = sext i32 %290 to i64
  %292 = add i64 %288, %291
  br label %293

293:                                              ; preds = %277, %284
  %294 = phi i64 [ %292, %284 ], [ %274, %277 ]
  %295 = add nuw nsw i64 %273, 1
  %296 = icmp eq i64 %295, %195
  br i1 %296, label %297, label %272

297:                                              ; preds = %293, %207
  %298 = phi i64 [ 0, %207 ], [ %271, %293 ]
  %299 = phi i64 [ 0, %207 ], [ %294, %293 ]
  %300 = getelementptr inbounds i64, i64* %11, i64 %299
  %301 = load i64, i64* %300, align 8
  %302 = getelementptr inbounds i64, i64* %0, i64 %298
  %303 = load i64, i64* %302, align 8
  %304 = add nsw i64 %303, %301
  store i64 %304, i64* %300, align 8
  br i1 %200, label %317, label %305

305:                                              ; preds = %297, %309
  %306 = phi i64 [ %307, %309 ], [ %201, %297 ]
  %307 = add nsw i64 %306, -1
  %308 = icmp sgt i64 %306, 0
  br i1 %308, label %309, label %317

309:                                              ; preds = %305
  %310 = getelementptr inbounds i32, i32* %9, i64 %307
  %311 = load i32, i32* %310, align 4
  %312 = add nsw i32 %311, 1
  %313 = getelementptr inbounds i32, i32* %1, i64 %307
  %314 = load i32, i32* %313, align 4
  %315 = icmp eq i32 %314, %312
  %316 = select i1 %315, i32 0, i32 %312
  store i32 %316, i32* %310, align 4
  br i1 %315, label %305, label %207

317:                                              ; preds = %297, %305
  %318 = icmp sgt i32 %186, 0
  br i1 %318, label %319, label %334

319:                                              ; preds = %317, %330
  %320 = phi i64 [ %332, %330 ], [ 0, %317 ]
  %321 = phi i64 [ %331, %330 ], [ 1, %317 ]
  %322 = getelementptr inbounds i32, i32* %10, i64 %320
  %323 = load i32, i32* %322, align 4
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds i32, i32* %1, i64 %324
  %326 = load i32, i32* %325, align 4
  %327 = sext i32 %326 to i64
  %328 = sdiv i64 9223372036854775807, %321
  %329 = icmp ult i64 %328, %327
  br i1 %329, label %367, label %330

330:                                              ; preds = %319
  %331 = mul i64 %321, %327
  %332 = add nuw nsw i64 %320, 1
  %333 = icmp eq i64 %332, %199
  br i1 %333, label %334, label %319

334:                                              ; preds = %330, %317
  %335 = phi i64 [ 1, %317 ], [ %331, %330 ]
  %336 = icmp sgt i64 %335, 0
  %337 = icmp ne i64 %126, 0
  %338 = and i1 %336, %337
  br i1 %338, label %339, label %367

339:                                              ; preds = %334
  %340 = and i64 %126, 1
  %341 = icmp eq i64 %126, 1
  br i1 %341, label %359, label %342

342:                                              ; preds = %339
  %343 = sub i64 %126, %340
  br label %344

344:                                              ; preds = %344, %342
  %345 = phi i64 [ 0, %342 ], [ %356, %344 ]
  %346 = phi i64 [ %343, %342 ], [ %357, %344 ]
  %347 = getelementptr inbounds i64, i64* %11, i64 %345
  %348 = load i64, i64* %347, align 8
  %349 = sdiv i64 %348, %335
  %350 = getelementptr inbounds i64, i64* %3, i64 %345
  store i64 %349, i64* %350, align 8
  %351 = or i64 %345, 1
  %352 = getelementptr inbounds i64, i64* %11, i64 %351
  %353 = load i64, i64* %352, align 8
  %354 = sdiv i64 %353, %335
  %355 = getelementptr inbounds i64, i64* %3, i64 %351
  store i64 %354, i64* %355, align 8
  %356 = add nuw i64 %345, 2
  %357 = add i64 %346, -2
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %359, label %344

359:                                              ; preds = %344, %339
  %360 = phi i64 [ 0, %339 ], [ %356, %344 ]
  %361 = icmp eq i64 %340, 0
  br i1 %361, label %367, label %362

362:                                              ; preds = %359
  %363 = getelementptr inbounds i64, i64* %11, i64 %360
  %364 = load i64, i64* %363, align 8
  %365 = sdiv i64 %364, %335
  %366 = getelementptr inbounds i64, i64* %3, i64 %360
  store i64 %365, i64* %366, align 8
  br label %367

367:                                              ; preds = %113, %131, %319, %362, %359, %334
  %368 = phi i1 [ true, %334 ], [ true, %359 ], [ true, %362 ], [ false, %319 ], [ false, %131 ], [ false, %113 ]
  ret i1 %368
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite21reference_integer_ops4MeanERKNS_10MeanParamsEiiRKNS_12RuntimeShapeEPKaiS6_Pai(%"struct.tflite::MeanParams"* dereferenceable(10), i32, i32, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i32, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i32) local_unnamed_addr #6 comdat {
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 4
  br i1 %14, label %16, label %15

15:                                               ; preds = %9
  tail call void @abort() #17
  unreachable

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp slt i32 %18, 5
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @abort() #17
  unreachable

21:                                               ; preds = %16
  %22 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 32, i1 false)
  %23 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 4, i32* %23, align 8, !alias.scope !304
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %25 = bitcast %union.anon* %24 to i8*
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %27 = bitcast %union.anon* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 4 %27, i64 16, i1 false) #16
  %28 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 32, i1 false)
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 4, i32* %29, align 8, !alias.scope !307
  %30 = sub i32 4, %18
  %31 = icmp sgt i32 %30, 0
  %32 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  br i1 %31, label %33, label %113

33:                                               ; preds = %21
  %34 = bitcast %union.anon* %32 to [5 x i32]*
  %35 = zext i32 %30 to i64
  %36 = icmp ult i32 %30, 8
  br i1 %36, label %106, label %37

37:                                               ; preds = %33
  %38 = and i64 %35, 4294967288
  %39 = add nsw i64 %38, -8
  %40 = lshr exact i64 %39, 3
  %41 = add nuw nsw i64 %40, 1
  %42 = and i64 %41, 7
  %43 = icmp ult i64 %39, 56
  br i1 %43, label %91, label %44

44:                                               ; preds = %37
  %45 = sub nsw i64 %41, %42
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi i64 [ 0, %44 ], [ %88, %46 ]
  %48 = phi i64 [ %45, %44 ], [ %89, %46 ]
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %47
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !307
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !307
  %53 = or i64 %47, 8
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !307
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !307
  %58 = or i64 %47, 16
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !307
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !307
  %63 = or i64 %47, 24
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !307
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !307
  %68 = or i64 %47, 32
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !307
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !307
  %73 = or i64 %47, 40
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !307
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !307
  %78 = or i64 %47, 48
  %79 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %78
  %80 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %80, align 8, !alias.scope !307
  %81 = getelementptr inbounds i32, i32* %79, i64 4
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !307
  %83 = or i64 %47, 56
  %84 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %83
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %85, align 8, !alias.scope !307
  %86 = getelementptr inbounds i32, i32* %84, i64 4
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 8, !alias.scope !307
  %88 = add i64 %47, 64
  %89 = add i64 %48, -8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %46, !llvm.loop !310

91:                                               ; preds = %46, %37
  %92 = phi i64 [ 0, %37 ], [ %88, %46 ]
  %93 = icmp eq i64 %42, 0
  br i1 %93, label %104, label %94

94:                                               ; preds = %91, %94
  %95 = phi i64 [ %101, %94 ], [ %92, %91 ]
  %96 = phi i64 [ %102, %94 ], [ %42, %91 ]
  %97 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %95
  %98 = bitcast i32* %97 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %98, align 8, !alias.scope !307
  %99 = getelementptr inbounds i32, i32* %97, i64 4
  %100 = bitcast i32* %99 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %100, align 8, !alias.scope !307
  %101 = add i64 %95, 8
  %102 = add i64 %96, -1
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %94, !llvm.loop !311

104:                                              ; preds = %94, %91
  %105 = icmp eq i64 %38, %35
  br i1 %105, label %113, label %106

106:                                              ; preds = %104, %33
  %107 = phi i64 [ 0, %33 ], [ %38, %104 ]
  br label %108

108:                                              ; preds = %106, %108
  %109 = phi i64 [ %111, %108 ], [ %107, %106 ]
  %110 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %109
  store i32 1, i32* %110, align 4, !alias.scope !307
  %111 = add nuw nsw i64 %109, 1
  %112 = icmp eq i64 %111, %35
  br i1 %112, label %113, label %108, !llvm.loop !312

113:                                              ; preds = %108, %104, %21
  %114 = bitcast %union.anon* %32 to i32*
  %115 = sext i32 %30 to i64
  %116 = getelementptr inbounds i32, i32* %114, i64 %115
  %117 = bitcast i32* %116 to i8*
  %118 = icmp sgt i32 %18, 5
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %120 = getelementptr inbounds %union.anon, %union.anon* %119, i64 0, i32 0
  %121 = load i32*, i32** %120, align 8, !noalias !307
  %122 = bitcast %union.anon* %119 to i32*
  %123 = select i1 %118, i32* %121, i32* %122
  %124 = bitcast i32* %123 to i8*
  %125 = sext i32 %18 to i64
  %126 = shl nsw i64 %125, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %117, i8* align 4 %124, i64 %126, i1 false) #16
  %127 = load i32, i32* %29, align 8
  %128 = icmp sgt i32 %127, 5
  br i1 %128, label %129, label %135

129:                                              ; preds = %113
  %130 = getelementptr inbounds %union.anon, %union.anon* %32, i64 0, i32 0
  %131 = load i32*, i32** %130, align 8
  %132 = getelementptr inbounds i32, i32* %131, i64 1
  %133 = getelementptr inbounds i32, i32* %131, i64 2
  %134 = getelementptr inbounds i32, i32* %131, i64 3
  br label %142

135:                                              ; preds = %113
  %136 = bitcast %union.anon* %32 to [5 x i32]*
  %137 = getelementptr inbounds [5 x i32], [5 x i32]* %136, i64 0, i64 1
  %138 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 1
  %139 = bitcast [16 x i8]* %138 to i32*
  %140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 1, i64 4
  %141 = bitcast i8* %140 to i32*
  br label %142

142:                                              ; preds = %129, %135
  %143 = phi i32* [ %133, %129 ], [ %139, %135 ]
  %144 = phi i32* [ %131, %129 ], [ %114, %135 ]
  %145 = phi i32* [ %132, %129 ], [ %137, %135 ]
  %146 = phi i32* [ %134, %129 ], [ %141, %135 ]
  %147 = load i32, i32* %145, align 4
  %148 = load i32, i32* %144, align 4
  %149 = load i32, i32* %143, align 4
  %150 = load i32, i32* %146, align 4
  %151 = bitcast %union.anon* %24 to [5 x i32]*
  %152 = getelementptr inbounds [5 x i32], [5 x i32]* %151, i64 0, i64 1
  %153 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1
  %154 = bitcast [16 x i8]* %153 to i32*
  %155 = load i32, i32* %152, align 4
  %156 = load i32, i32* %154, align 8
  %157 = mul nsw i32 %156, %155
  %158 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 0
  %159 = load i8, i8* %158, align 2
  %160 = icmp eq i8 %159, 2
  br i1 %160, label %162, label %161

161:                                              ; preds = %142
  tail call void @abort() #17
  unreachable

162:                                              ; preds = %142
  %163 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 0
  %164 = load i16, i16* %163, align 2
  switch i16 %164, label %173 [
    i16 1, label %165
    i16 2, label %169
  ]

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 1
  %167 = load i16, i16* %166, align 2
  %168 = icmp eq i16 %167, 2
  br i1 %168, label %174, label %173

169:                                              ; preds = %162
  %170 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 1
  %171 = load i16, i16* %170, align 2
  %172 = icmp eq i16 %171, 1
  br i1 %172, label %174, label %173

173:                                              ; preds = %162, %165, %169
  tail call void @abort() #17
  unreachable

174:                                              ; preds = %165, %169
  %175 = icmp eq i32 %147, 1
  br i1 %175, label %177, label %176

176:                                              ; preds = %174
  tail call void @abort() #17
  unreachable

177:                                              ; preds = %174
  %178 = icmp eq i32 %149, 1
  br i1 %178, label %179, label %240

179:                                              ; preds = %177
  %180 = icmp sgt i32 %148, 0
  br i1 %180, label %181, label %248

181:                                              ; preds = %179
  %182 = icmp sgt i32 %150, 0
  %183 = icmp sgt i32 %155, 0
  %184 = icmp sgt i32 %156, 0
  %185 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1, i64 4
  %186 = bitcast i8* %185 to i32*
  %187 = load i32, i32* %186, align 4
  %188 = icmp sgt i32 %2, 0
  %189 = sub nsw i32 0, %2
  %190 = select i1 %188, i32 0, i32 %189
  %191 = shl i32 1, %2
  %192 = select i1 %188, i32 %191, i32 1
  %193 = sext i32 %1 to i64
  %194 = icmp eq i32 %1, -2147483648
  %195 = zext i32 %190 to i64
  %196 = shl nsw i64 -1, %195
  %197 = trunc i64 %196 to i32
  %198 = xor i32 %197, -1
  %199 = ashr i32 %198, 1
  %200 = sdiv i32 %157, 2
  %201 = sub nsw i32 0, %200
  %202 = getelementptr inbounds i32, i32* %114, i64 1
  %203 = load i32, i32* %202, align 4
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 1
  %205 = bitcast [16 x i8]* %204 to i32*
  %206 = load i32, i32* %205, align 8
  %207 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 1, i64 4
  %208 = bitcast i8* %207 to i32*
  %209 = load i32, i32* %208, align 4
  %210 = sext i32 %187 to i64
  %211 = sext i32 %156 to i64
  %212 = sext i32 %155 to i64
  %213 = sext i32 %203 to i64
  %214 = sext i32 %206 to i64
  %215 = sext i32 %209 to i64
  %216 = zext i32 %148 to i64
  %217 = zext i32 %150 to i64
  %218 = zext i32 %155 to i64
  %219 = zext i32 %156 to i64
  %220 = and i64 %219, 4294967288
  %221 = add nsw i64 %220, -8
  %222 = lshr exact i64 %221, 3
  %223 = add nuw nsw i64 %222, 1
  %224 = icmp ugt i32 %156, 7
  %225 = icmp eq i32 %187, 1
  %226 = and i1 %224, %225
  %227 = and i64 %219, 4294967288
  %228 = insertelement <4 x i32> undef, i32 %5, i32 0
  %229 = shufflevector <4 x i32> %228, <4 x i32> undef, <4 x i32> zeroinitializer
  %230 = insertelement <4 x i32> undef, i32 %5, i32 0
  %231 = shufflevector <4 x i32> %230, <4 x i32> undef, <4 x i32> zeroinitializer
  %232 = and i64 %223, 1
  %233 = icmp eq i64 %221, 0
  %234 = sub nuw nsw i64 %223, %232
  %235 = icmp eq i64 %232, 0
  %236 = icmp eq i64 %227, %219
  %237 = and i64 %219, 1
  %238 = icmp eq i64 %237, 0
  %239 = sub nsw i64 0, %219
  br label %241

240:                                              ; preds = %177
  tail call void @abort() #17
  unreachable

241:                                              ; preds = %256, %181
  %242 = phi i64 [ 0, %181 ], [ %257, %256 ]
  br i1 %182, label %243, label %256

243:                                              ; preds = %241
  %244 = mul nsw i64 %242, %212
  %245 = mul nsw i64 %242, %213
  %246 = mul nsw i64 %245, %214
  %247 = mul nsw i64 %246, %215
  br label %259

248:                                              ; preds = %256, %179
  br i1 %128, label %249, label %255

249:                                              ; preds = %248
  %250 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %251 = load i32*, i32** %250, align 8
  %252 = icmp eq i32* %251, null
  br i1 %252, label %255, label %253

253:                                              ; preds = %249
  %254 = bitcast i32* %251 to i8*
  tail call void @_ZdaPv(i8* %254) #15
  br label %255

255:                                              ; preds = %253, %249, %248
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #16
  ret void

256:                                              ; preds = %373, %241
  %257 = add nuw nsw i64 %242, 1
  %258 = icmp eq i64 %257, %216
  br i1 %258, label %248, label %241

259:                                              ; preds = %373, %243
  %260 = phi i64 [ 0, %243 ], [ %394, %373 ]
  br i1 %183, label %261, label %358

261:                                              ; preds = %259, %396
  %262 = phi i64 [ %398, %396 ], [ 0, %259 ]
  %263 = phi i32 [ %397, %396 ], [ 0, %259 ]
  br i1 %184, label %264, label %396

264:                                              ; preds = %261
  %265 = add nsw i64 %244, %262
  %266 = mul nsw i64 %265, %211
  br i1 %226, label %267, label %339

267:                                              ; preds = %264
  %268 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %263, i32 0
  br i1 %233, label %308, label %269

269:                                              ; preds = %267, %269
  %270 = phi i64 [ %305, %269 ], [ 0, %267 ]
  %271 = phi <4 x i32> [ %303, %269 ], [ %268, %267 ]
  %272 = phi <4 x i32> [ %304, %269 ], [ zeroinitializer, %267 ]
  %273 = phi i64 [ %306, %269 ], [ %234, %267 ]
  %274 = add nsw i64 %266, %270
  %275 = mul nsw i64 %274, %210
  %276 = add nsw i64 %275, %260
  %277 = getelementptr inbounds i8, i8* %4, i64 %276
  %278 = bitcast i8* %277 to <4 x i8>*
  %279 = load <4 x i8>, <4 x i8>* %278, align 1
  %280 = getelementptr inbounds i8, i8* %277, i64 4
  %281 = bitcast i8* %280 to <4 x i8>*
  %282 = load <4 x i8>, <4 x i8>* %281, align 1
  %283 = sext <4 x i8> %279 to <4 x i32>
  %284 = sext <4 x i8> %282 to <4 x i32>
  %285 = sub <4 x i32> %283, %229
  %286 = sub <4 x i32> %284, %231
  %287 = add nsw <4 x i32> %285, %271
  %288 = add nsw <4 x i32> %286, %272
  %289 = or i64 %270, 8
  %290 = add nsw i64 %266, %289
  %291 = mul nsw i64 %290, %210
  %292 = add nsw i64 %291, %260
  %293 = getelementptr inbounds i8, i8* %4, i64 %292
  %294 = bitcast i8* %293 to <4 x i8>*
  %295 = load <4 x i8>, <4 x i8>* %294, align 1
  %296 = getelementptr inbounds i8, i8* %293, i64 4
  %297 = bitcast i8* %296 to <4 x i8>*
  %298 = load <4 x i8>, <4 x i8>* %297, align 1
  %299 = sext <4 x i8> %295 to <4 x i32>
  %300 = sext <4 x i8> %298 to <4 x i32>
  %301 = sub <4 x i32> %299, %229
  %302 = sub <4 x i32> %300, %231
  %303 = add nsw <4 x i32> %301, %287
  %304 = add nsw <4 x i32> %302, %288
  %305 = add i64 %270, 16
  %306 = add i64 %273, -2
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %269, !llvm.loop !313

308:                                              ; preds = %269, %267
  %309 = phi <4 x i32> [ undef, %267 ], [ %303, %269 ]
  %310 = phi <4 x i32> [ undef, %267 ], [ %304, %269 ]
  %311 = phi i64 [ 0, %267 ], [ %305, %269 ]
  %312 = phi <4 x i32> [ %268, %267 ], [ %303, %269 ]
  %313 = phi <4 x i32> [ zeroinitializer, %267 ], [ %304, %269 ]
  br i1 %235, label %330, label %314

314:                                              ; preds = %308
  %315 = add nsw i64 %266, %311
  %316 = mul nsw i64 %315, %210
  %317 = add nsw i64 %316, %260
  %318 = getelementptr inbounds i8, i8* %4, i64 %317
  %319 = getelementptr inbounds i8, i8* %318, i64 4
  %320 = bitcast i8* %319 to <4 x i8>*
  %321 = load <4 x i8>, <4 x i8>* %320, align 1
  %322 = sext <4 x i8> %321 to <4 x i32>
  %323 = sub <4 x i32> %322, %231
  %324 = add nsw <4 x i32> %323, %313
  %325 = bitcast i8* %318 to <4 x i8>*
  %326 = load <4 x i8>, <4 x i8>* %325, align 1
  %327 = sext <4 x i8> %326 to <4 x i32>
  %328 = sub <4 x i32> %327, %229
  %329 = add nsw <4 x i32> %328, %312
  br label %330

330:                                              ; preds = %308, %314
  %331 = phi <4 x i32> [ %309, %308 ], [ %329, %314 ]
  %332 = phi <4 x i32> [ %310, %308 ], [ %324, %314 ]
  %333 = add <4 x i32> %332, %331
  %334 = shufflevector <4 x i32> %333, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %335 = add <4 x i32> %333, %334
  %336 = shufflevector <4 x i32> %335, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %337 = add <4 x i32> %335, %336
  %338 = extractelement <4 x i32> %337, i32 0
  br i1 %236, label %396, label %339

339:                                              ; preds = %264, %330
  %340 = phi i64 [ 0, %264 ], [ %227, %330 ]
  %341 = phi i32 [ %263, %264 ], [ %338, %330 ]
  %342 = xor i64 %340, -1
  br i1 %238, label %353, label %343

343:                                              ; preds = %339
  %344 = add nsw i64 %266, %340
  %345 = mul nsw i64 %344, %210
  %346 = add nsw i64 %345, %260
  %347 = getelementptr inbounds i8, i8* %4, i64 %346
  %348 = load i8, i8* %347, align 1
  %349 = sext i8 %348 to i32
  %350 = sub i32 %349, %5
  %351 = add nsw i32 %350, %341
  %352 = or i64 %340, 1
  br label %353

353:                                              ; preds = %343, %339
  %354 = phi i32 [ %351, %343 ], [ undef, %339 ]
  %355 = phi i64 [ %352, %343 ], [ %340, %339 ]
  %356 = phi i32 [ %351, %343 ], [ %341, %339 ]
  %357 = icmp eq i64 %342, %239
  br i1 %357, label %396, label %400

358:                                              ; preds = %396, %259
  %359 = phi i32 [ 0, %259 ], [ %397, %396 ]
  %360 = mul nsw i32 %359, %192
  %361 = icmp eq i32 %360, %1
  br i1 %361, label %364, label %362

362:                                              ; preds = %358
  %363 = sext i32 %360 to i64
  br label %365

364:                                              ; preds = %358
  br i1 %194, label %373, label %365

365:                                              ; preds = %364, %362
  %366 = phi i64 [ %363, %362 ], [ %193, %364 ]
  %367 = mul nsw i64 %366, %193
  %368 = icmp sgt i64 %367, -1
  %369 = select i1 %368, i64 1073741824, i64 -1073741823
  %370 = add nsw i64 %369, %367
  %371 = sdiv i64 %370, 2147483648
  %372 = trunc i64 %371 to i32
  br label %373

373:                                              ; preds = %364, %365
  %374 = phi i32 [ %372, %365 ], [ 2147483647, %364 ]
  %375 = and i32 %374, %198
  %376 = lshr i32 %374, 31
  %377 = add nsw i32 %376, %199
  %378 = ashr i32 %374, %190
  %379 = icmp sgt i32 %375, %377
  %380 = zext i1 %379 to i32
  %381 = add nsw i32 %378, %380
  %382 = icmp sgt i32 %381, 0
  %383 = select i1 %382, i32 %200, i32 %201
  %384 = add i32 %383, %381
  %385 = sdiv i32 %384, %157
  %386 = add nsw i32 %385, %8
  %387 = icmp sgt i32 %386, -128
  %388 = select i1 %387, i32 %386, i32 -128
  %389 = icmp slt i32 %388, 127
  %390 = select i1 %389, i32 %388, i32 127
  %391 = trunc i32 %390 to i8
  %392 = add nsw i64 %247, %260
  %393 = getelementptr inbounds i8, i8* %7, i64 %392
  store i8 %391, i8* %393, align 1
  %394 = add nuw nsw i64 %260, 1
  %395 = icmp eq i64 %394, %217
  br i1 %395, label %256, label %259

396:                                              ; preds = %353, %400, %330, %261
  %397 = phi i32 [ %263, %261 ], [ %338, %330 ], [ %354, %353 ], [ %419, %400 ]
  %398 = add nuw nsw i64 %262, 1
  %399 = icmp eq i64 %398, %218
  br i1 %399, label %358, label %261

400:                                              ; preds = %353, %400
  %401 = phi i64 [ %420, %400 ], [ %355, %353 ]
  %402 = phi i32 [ %419, %400 ], [ %356, %353 ]
  %403 = add nsw i64 %266, %401
  %404 = mul nsw i64 %403, %210
  %405 = add nsw i64 %404, %260
  %406 = getelementptr inbounds i8, i8* %4, i64 %405
  %407 = load i8, i8* %406, align 1
  %408 = sext i8 %407 to i32
  %409 = sub i32 %408, %5
  %410 = add nsw i32 %409, %402
  %411 = add nuw nsw i64 %401, 1
  %412 = add nsw i64 %266, %411
  %413 = mul nsw i64 %412, %210
  %414 = add nsw i64 %413, %260
  %415 = getelementptr inbounds i8, i8* %4, i64 %414
  %416 = load i8, i8* %415, align 1
  %417 = sext i8 %416 to i32
  %418 = sub i32 %417, %5
  %419 = add nsw i32 %418, %410
  %420 = add nuw nsw i64 %401, 2
  %421 = icmp eq i64 %420, %219
  br i1 %421, label %396, label %400, !llvm.loop !314
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite13reference_ops4MeanIaiEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_(i8*, i32*, i32, i8*, i32*, i32, i32*, i32, i1 zeroext, i32*, i32*, i32*) local_unnamed_addr #6 comdat {
  %13 = bitcast i32* %11 to i8*
  %14 = icmp sgt i32 %5, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %12
  %16 = zext i32 %5 to i64
  br label %115

17:                                               ; preds = %123
  %18 = icmp eq i64 %124, 0
  br i1 %18, label %127, label %19

19:                                               ; preds = %12, %17
  %20 = phi i64 [ %124, %17 ], [ 1, %12 ]
  %21 = icmp ult i64 %20, 8
  br i1 %21, label %22, label %39

22:                                               ; preds = %113, %39, %19
  %23 = phi i64 [ 0, %39 ], [ 0, %19 ], [ %47, %113 ]
  %24 = xor i64 %23, -1
  %25 = add i64 %20, %24
  %26 = and i64 %20, 3
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %22, %28
  %29 = phi i64 [ %33, %28 ], [ %23, %22 ]
  %30 = phi i64 [ %34, %28 ], [ %26, %22 ]
  %31 = getelementptr inbounds i8, i8* %3, i64 %29
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds i32, i32* %11, i64 %29
  store i32 0, i32* %32, align 4
  %33 = add nuw i64 %29, 1
  %34 = add i64 %30, -1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %28, !llvm.loop !315

36:                                               ; preds = %28, %22
  %37 = phi i64 [ %23, %22 ], [ %33, %28 ]
  %38 = icmp ult i64 %25, 3
  br i1 %38, label %127, label %172

39:                                               ; preds = %19
  %40 = getelementptr i8, i8* %3, i64 %20
  %41 = getelementptr i32, i32* %11, i64 %20
  %42 = bitcast i32* %41 to i8*
  %43 = icmp ugt i8* %42, %3
  %44 = icmp ugt i8* %40, %13
  %45 = and i1 %43, %44
  br i1 %45, label %22, label %46

46:                                               ; preds = %39
  %47 = and i64 %20, -8
  %48 = add i64 %47, -8
  %49 = lshr exact i64 %48, 3
  %50 = add nuw nsw i64 %49, 1
  %51 = and i64 %50, 3
  %52 = icmp ult i64 %48, 24
  br i1 %52, label %96, label %53

53:                                               ; preds = %46
  %54 = sub nsw i64 %50, %51
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi i64 [ 0, %53 ], [ %93, %55 ]
  %57 = phi i64 [ %54, %53 ], [ %94, %55 ]
  %58 = getelementptr inbounds i8, i8* %3, i64 %56
  %59 = bitcast i8* %58 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %59, align 1, !alias.scope !316, !noalias !319
  %60 = getelementptr inbounds i8, i8* %58, i64 4
  %61 = bitcast i8* %60 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %61, align 1, !alias.scope !316, !noalias !319
  %62 = getelementptr inbounds i32, i32* %11, i64 %56
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %63, align 4, !alias.scope !319
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %65, align 4, !alias.scope !319
  %66 = or i64 %56, 8
  %67 = getelementptr inbounds i8, i8* %3, i64 %66
  %68 = bitcast i8* %67 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %68, align 1, !alias.scope !316, !noalias !319
  %69 = getelementptr inbounds i8, i8* %67, i64 4
  %70 = bitcast i8* %69 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %70, align 1, !alias.scope !316, !noalias !319
  %71 = getelementptr inbounds i32, i32* %11, i64 %66
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %72, align 4, !alias.scope !319
  %73 = getelementptr inbounds i32, i32* %71, i64 4
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %74, align 4, !alias.scope !319
  %75 = or i64 %56, 16
  %76 = getelementptr inbounds i8, i8* %3, i64 %75
  %77 = bitcast i8* %76 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %77, align 1, !alias.scope !316, !noalias !319
  %78 = getelementptr inbounds i8, i8* %76, i64 4
  %79 = bitcast i8* %78 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %79, align 1, !alias.scope !316, !noalias !319
  %80 = getelementptr inbounds i32, i32* %11, i64 %75
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %81, align 4, !alias.scope !319
  %82 = getelementptr inbounds i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %83, align 4, !alias.scope !319
  %84 = or i64 %56, 24
  %85 = getelementptr inbounds i8, i8* %3, i64 %84
  %86 = bitcast i8* %85 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %86, align 1, !alias.scope !316, !noalias !319
  %87 = getelementptr inbounds i8, i8* %85, i64 4
  %88 = bitcast i8* %87 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %88, align 1, !alias.scope !316, !noalias !319
  %89 = getelementptr inbounds i32, i32* %11, i64 %84
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %90, align 4, !alias.scope !319
  %91 = getelementptr inbounds i32, i32* %89, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %92, align 4, !alias.scope !319
  %93 = add i64 %56, 32
  %94 = add i64 %57, -4
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %55, !llvm.loop !321

96:                                               ; preds = %55, %46
  %97 = phi i64 [ 0, %46 ], [ %93, %55 ]
  %98 = icmp eq i64 %51, 0
  br i1 %98, label %113, label %99

99:                                               ; preds = %96, %99
  %100 = phi i64 [ %110, %99 ], [ %97, %96 ]
  %101 = phi i64 [ %111, %99 ], [ %51, %96 ]
  %102 = getelementptr inbounds i8, i8* %3, i64 %100
  %103 = bitcast i8* %102 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %103, align 1, !alias.scope !316, !noalias !319
  %104 = getelementptr inbounds i8, i8* %102, i64 4
  %105 = bitcast i8* %104 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %105, align 1, !alias.scope !316, !noalias !319
  %106 = getelementptr inbounds i32, i32* %11, i64 %100
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %107, align 4, !alias.scope !319
  %108 = getelementptr inbounds i32, i32* %106, i64 4
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %109, align 4, !alias.scope !319
  %110 = add i64 %100, 8
  %111 = add i64 %101, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %99, !llvm.loop !322

113:                                              ; preds = %99, %96
  %114 = icmp eq i64 %20, %47
  br i1 %114, label %127, label %22

115:                                              ; preds = %123, %15
  %116 = phi i64 [ 0, %15 ], [ %125, %123 ]
  %117 = phi i64 [ 1, %15 ], [ %124, %123 ]
  %118 = getelementptr inbounds i32, i32* %4, i64 %116
  %119 = load i32, i32* %118, align 4
  %120 = sext i32 %119 to i64
  %121 = udiv i64 -1, %120
  %122 = icmp ugt i64 %117, %121
  br i1 %122, label %372, label %123

123:                                              ; preds = %115
  %124 = mul i64 %117, %120
  %125 = add nuw nsw i64 %116, 1
  %126 = icmp eq i64 %125, %16
  br i1 %126, label %17, label %115

127:                                              ; preds = %36, %172, %113, %17
  %128 = phi i64 [ 0, %17 ], [ %20, %113 ], [ %20, %172 ], [ %20, %36 ]
  %129 = sext i32 %7 to i64
  %130 = icmp ne i32 %2, 0
  %131 = icmp sgt i32 %7, 0
  %132 = and i1 %130, %131
  br i1 %132, label %133, label %187

133:                                              ; preds = %127, %166
  %134 = phi i32 [ %167, %166 ], [ 0, %127 ]
  %135 = phi i32 [ %168, %166 ], [ 0, %127 ]
  %136 = phi i32 [ %169, %166 ], [ 0, %127 ]
  %137 = phi i64 [ %170, %166 ], [ 0, %127 ]
  %138 = getelementptr inbounds i32, i32* %6, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = icmp slt i32 %139, 0
  %141 = select i1 %140, i32 %2, i32 0
  %142 = add nsw i32 %141, %139
  %143 = icmp sgt i32 %142, -1
  %144 = icmp slt i32 %142, %2
  %145 = and i1 %143, %144
  br i1 %145, label %146, label %372

146:                                              ; preds = %133
  %147 = icmp sgt i32 %136, 0
  br i1 %147, label %150, label %148

148:                                              ; preds = %146
  %149 = sext i32 %136 to i64
  br label %162

150:                                              ; preds = %146
  %151 = sext i32 %135 to i64
  %152 = load i32, i32* %10, align 4
  %153 = icmp eq i32 %152, %142
  br i1 %153, label %166, label %154

154:                                              ; preds = %150, %157
  %155 = phi i64 [ %161, %157 ], [ 1, %150 ]
  %156 = icmp slt i64 %155, %151
  br i1 %156, label %157, label %162

157:                                              ; preds = %154
  %158 = getelementptr inbounds i32, i32* %10, i64 %155
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %159, %142
  %161 = add nuw nsw i64 %155, 1
  br i1 %160, label %166, label %154

162:                                              ; preds = %154, %148
  %163 = phi i64 [ %149, %148 ], [ %151, %154 ]
  %164 = getelementptr inbounds i32, i32* %10, i64 %163
  store i32 %142, i32* %164, align 4
  %165 = add nsw i32 %134, 1
  br label %166

166:                                              ; preds = %157, %150, %162
  %167 = phi i32 [ %165, %162 ], [ %134, %150 ], [ %134, %157 ]
  %168 = phi i32 [ %165, %162 ], [ %135, %150 ], [ %135, %157 ]
  %169 = phi i32 [ %165, %162 ], [ %136, %150 ], [ %135, %157 ]
  %170 = add nuw nsw i64 %137, 1
  %171 = icmp eq i64 %170, %129
  br i1 %171, label %187, label %133

172:                                              ; preds = %36, %172
  %173 = phi i64 [ %185, %172 ], [ %37, %36 ]
  %174 = getelementptr inbounds i8, i8* %3, i64 %173
  store i8 0, i8* %174, align 1
  %175 = getelementptr inbounds i32, i32* %11, i64 %173
  store i32 0, i32* %175, align 4
  %176 = add nuw i64 %173, 1
  %177 = getelementptr inbounds i8, i8* %3, i64 %176
  store i8 0, i8* %177, align 1
  %178 = getelementptr inbounds i32, i32* %11, i64 %176
  store i32 0, i32* %178, align 4
  %179 = add nuw i64 %173, 2
  %180 = getelementptr inbounds i8, i8* %3, i64 %179
  store i8 0, i8* %180, align 1
  %181 = getelementptr inbounds i32, i32* %11, i64 %179
  store i32 0, i32* %181, align 4
  %182 = add nuw i64 %173, 3
  %183 = getelementptr inbounds i8, i8* %3, i64 %182
  store i8 0, i8* %183, align 1
  %184 = getelementptr inbounds i32, i32* %11, i64 %182
  store i32 0, i32* %184, align 4
  %185 = add nuw i64 %173, 4
  %186 = icmp eq i64 %185, %20
  br i1 %186, label %127, label %172, !llvm.loop !323

187:                                              ; preds = %166, %127
  %188 = phi i32 [ 0, %127 ], [ %167, %166 ]
  %189 = icmp sgt i32 %2, 0
  br i1 %189, label %192, label %190

190:                                              ; preds = %187
  %191 = zext i32 %2 to i64
  br label %196

192:                                              ; preds = %187
  %193 = bitcast i32* %9 to i8*
  %194 = zext i32 %2 to i64
  %195 = shl nuw nsw i64 %194, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %193, i8 0, i64 %195, i1 false) #16
  br label %196

196:                                              ; preds = %192, %190
  %197 = phi i64 [ %191, %190 ], [ %194, %192 ]
  %198 = icmp eq i32* %10, null
  %199 = icmp slt i32 %188, 1
  %200 = or i1 %198, %199
  %201 = zext i32 %188 to i64
  %202 = icmp eq i32 %2, 0
  %203 = sext i32 %2 to i64
  %204 = add nsw i64 %197, -1
  %205 = and i64 %197, 3
  %206 = icmp ult i64 %204, 3
  %207 = sub nsw i64 %197, %205
  %208 = icmp eq i64 %205, 0
  br label %209

209:                                              ; preds = %312, %196
  br i1 %189, label %210, label %299

210:                                              ; preds = %209
  br i1 %206, label %253, label %211

211:                                              ; preds = %210, %211
  %212 = phi i64 [ %250, %211 ], [ 0, %210 ]
  %213 = phi i64 [ %249, %211 ], [ 0, %210 ]
  %214 = phi i64 [ %251, %211 ], [ %207, %210 ]
  %215 = getelementptr inbounds i32, i32* %1, i64 %212
  %216 = load i32, i32* %215, align 4
  %217 = sext i32 %216 to i64
  %218 = mul i64 %213, %217
  %219 = getelementptr inbounds i32, i32* %9, i64 %212
  %220 = load i32, i32* %219, align 4
  %221 = sext i32 %220 to i64
  %222 = add i64 %218, %221
  %223 = or i64 %212, 1
  %224 = getelementptr inbounds i32, i32* %1, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = sext i32 %225 to i64
  %227 = mul i64 %222, %226
  %228 = getelementptr inbounds i32, i32* %9, i64 %223
  %229 = load i32, i32* %228, align 4
  %230 = sext i32 %229 to i64
  %231 = add i64 %227, %230
  %232 = or i64 %212, 2
  %233 = getelementptr inbounds i32, i32* %1, i64 %232
  %234 = load i32, i32* %233, align 4
  %235 = sext i32 %234 to i64
  %236 = mul i64 %231, %235
  %237 = getelementptr inbounds i32, i32* %9, i64 %232
  %238 = load i32, i32* %237, align 4
  %239 = sext i32 %238 to i64
  %240 = add i64 %236, %239
  %241 = or i64 %212, 3
  %242 = getelementptr inbounds i32, i32* %1, i64 %241
  %243 = load i32, i32* %242, align 4
  %244 = sext i32 %243 to i64
  %245 = mul i64 %240, %244
  %246 = getelementptr inbounds i32, i32* %9, i64 %241
  %247 = load i32, i32* %246, align 4
  %248 = sext i32 %247 to i64
  %249 = add i64 %245, %248
  %250 = add nuw nsw i64 %212, 4
  %251 = add i64 %214, -4
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %211

253:                                              ; preds = %211, %210
  %254 = phi i64 [ undef, %210 ], [ %249, %211 ]
  %255 = phi i64 [ 0, %210 ], [ %250, %211 ]
  %256 = phi i64 [ 0, %210 ], [ %249, %211 ]
  br i1 %208, label %272, label %257

257:                                              ; preds = %253, %257
  %258 = phi i64 [ %269, %257 ], [ %255, %253 ]
  %259 = phi i64 [ %268, %257 ], [ %256, %253 ]
  %260 = phi i64 [ %270, %257 ], [ %205, %253 ]
  %261 = getelementptr inbounds i32, i32* %1, i64 %258
  %262 = load i32, i32* %261, align 4
  %263 = sext i32 %262 to i64
  %264 = mul i64 %259, %263
  %265 = getelementptr inbounds i32, i32* %9, i64 %258
  %266 = load i32, i32* %265, align 4
  %267 = sext i32 %266 to i64
  %268 = add i64 %264, %267
  %269 = add nuw nsw i64 %258, 1
  %270 = add i64 %260, -1
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %272, label %257, !llvm.loop !324

272:                                              ; preds = %257, %253
  %273 = phi i64 [ %254, %253 ], [ %268, %257 ]
  br label %274

274:                                              ; preds = %272, %295
  %275 = phi i64 [ %297, %295 ], [ 0, %272 ]
  %276 = phi i64 [ %296, %295 ], [ 0, %272 ]
  br i1 %200, label %286, label %279

277:                                              ; preds = %279
  %278 = icmp eq i64 %285, %201
  br i1 %278, label %286, label %279

279:                                              ; preds = %274, %277
  %280 = phi i64 [ %285, %277 ], [ 0, %274 ]
  %281 = getelementptr inbounds i32, i32* %10, i64 %280
  %282 = load i32, i32* %281, align 4
  %283 = zext i32 %282 to i64
  %284 = icmp eq i64 %275, %283
  %285 = add nuw nsw i64 %280, 1
  br i1 %284, label %295, label %277

286:                                              ; preds = %277, %274
  %287 = getelementptr inbounds i32, i32* %1, i64 %275
  %288 = load i32, i32* %287, align 4
  %289 = sext i32 %288 to i64
  %290 = mul i64 %276, %289
  %291 = getelementptr inbounds i32, i32* %9, i64 %275
  %292 = load i32, i32* %291, align 4
  %293 = sext i32 %292 to i64
  %294 = add i64 %290, %293
  br label %295

295:                                              ; preds = %279, %286
  %296 = phi i64 [ %294, %286 ], [ %276, %279 ]
  %297 = add nuw nsw i64 %275, 1
  %298 = icmp eq i64 %297, %197
  br i1 %298, label %299, label %274

299:                                              ; preds = %295, %209
  %300 = phi i64 [ 0, %209 ], [ %273, %295 ]
  %301 = phi i64 [ 0, %209 ], [ %296, %295 ]
  %302 = getelementptr inbounds i32, i32* %11, i64 %301
  %303 = load i32, i32* %302, align 4
  %304 = getelementptr inbounds i8, i8* %0, i64 %300
  %305 = load i8, i8* %304, align 1
  %306 = sext i8 %305 to i32
  %307 = add nsw i32 %303, %306
  store i32 %307, i32* %302, align 4
  br i1 %202, label %320, label %308

308:                                              ; preds = %299, %312
  %309 = phi i64 [ %310, %312 ], [ %203, %299 ]
  %310 = add nsw i64 %309, -1
  %311 = icmp sgt i64 %309, 0
  br i1 %311, label %312, label %320

312:                                              ; preds = %308
  %313 = getelementptr inbounds i32, i32* %9, i64 %310
  %314 = load i32, i32* %313, align 4
  %315 = add nsw i32 %314, 1
  %316 = getelementptr inbounds i32, i32* %1, i64 %310
  %317 = load i32, i32* %316, align 4
  %318 = icmp eq i32 %317, %315
  %319 = select i1 %318, i32 0, i32 %315
  store i32 %319, i32* %313, align 4
  br i1 %318, label %308, label %209

320:                                              ; preds = %299, %308
  %321 = icmp sgt i32 %188, 0
  br i1 %321, label %322, label %336

322:                                              ; preds = %320, %332
  %323 = phi i64 [ %334, %332 ], [ 0, %320 ]
  %324 = phi i32 [ %333, %332 ], [ 1, %320 ]
  %325 = getelementptr inbounds i32, i32* %10, i64 %323
  %326 = load i32, i32* %325, align 4
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds i32, i32* %1, i64 %327
  %329 = load i32, i32* %328, align 4
  %330 = sdiv i32 2147483647, %324
  %331 = icmp ugt i32 %329, %330
  br i1 %331, label %372, label %332

332:                                              ; preds = %322
  %333 = mul i32 %329, %324
  %334 = add nuw nsw i64 %323, 1
  %335 = icmp eq i64 %334, %201
  br i1 %335, label %336, label %322

336:                                              ; preds = %332, %320
  %337 = phi i32 [ 1, %320 ], [ %333, %332 ]
  %338 = icmp sgt i32 %337, 0
  %339 = icmp ne i64 %128, 0
  %340 = and i1 %338, %339
  br i1 %340, label %341, label %372

341:                                              ; preds = %336
  %342 = and i64 %128, 1
  %343 = icmp eq i64 %128, 1
  br i1 %343, label %363, label %344

344:                                              ; preds = %341
  %345 = sub i64 %128, %342
  br label %346

346:                                              ; preds = %346, %344
  %347 = phi i64 [ 0, %344 ], [ %360, %346 ]
  %348 = phi i64 [ %345, %344 ], [ %361, %346 ]
  %349 = getelementptr inbounds i32, i32* %11, i64 %347
  %350 = load i32, i32* %349, align 4
  %351 = sdiv i32 %350, %337
  %352 = trunc i32 %351 to i8
  %353 = getelementptr inbounds i8, i8* %3, i64 %347
  store i8 %352, i8* %353, align 1
  %354 = or i64 %347, 1
  %355 = getelementptr inbounds i32, i32* %11, i64 %354
  %356 = load i32, i32* %355, align 4
  %357 = sdiv i32 %356, %337
  %358 = trunc i32 %357 to i8
  %359 = getelementptr inbounds i8, i8* %3, i64 %354
  store i8 %358, i8* %359, align 1
  %360 = add nuw i64 %347, 2
  %361 = add i64 %348, -2
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %363, label %346

363:                                              ; preds = %346, %341
  %364 = phi i64 [ 0, %341 ], [ %360, %346 ]
  %365 = icmp eq i64 %342, 0
  br i1 %365, label %372, label %366

366:                                              ; preds = %363
  %367 = getelementptr inbounds i32, i32* %11, i64 %364
  %368 = load i32, i32* %367, align 4
  %369 = sdiv i32 %368, %337
  %370 = trunc i32 %369 to i8
  %371 = getelementptr inbounds i8, i8* %3, i64 %364
  store i8 %370, i8* %371, align 1
  br label %372

372:                                              ; preds = %115, %133, %322, %366, %363, %336
  %373 = phi i1 [ true, %336 ], [ true, %363 ], [ true, %366 ], [ false, %322 ], [ false, %133 ], [ false, %115 ]
  ret i1 %373
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops4MeanERKNS_10MeanParamsERKNS_12RuntimeShapeEPKhifS6_Phif(%"struct.tflite::MeanParams"* dereferenceable(10), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i32, float, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i32, float) local_unnamed_addr #6 comdat {
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 4
  br i1 %16, label %18, label %17

17:                                               ; preds = %9
  tail call void @abort() #17
  unreachable

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp slt i32 %20, 5
  br i1 %21, label %23, label %22

22:                                               ; preds = %18
  tail call void @abort() #17
  unreachable

23:                                               ; preds = %18
  %24 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 32, i1 false)
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 4, i32* %25, align 8, !alias.scope !325
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %27 = bitcast %union.anon* %26 to i8*
  %28 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %29 = bitcast %union.anon* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 4 %29, i64 16, i1 false) #16
  %30 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 32, i1 false)
  %31 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 4, i32* %31, align 8, !alias.scope !328
  %32 = sub i32 4, %20
  %33 = icmp sgt i32 %32, 0
  %34 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  br i1 %33, label %35, label %115

35:                                               ; preds = %23
  %36 = bitcast %union.anon* %34 to [5 x i32]*
  %37 = zext i32 %32 to i64
  %38 = icmp ult i32 %32, 8
  br i1 %38, label %108, label %39

39:                                               ; preds = %35
  %40 = and i64 %37, 4294967288
  %41 = add nsw i64 %40, -8
  %42 = lshr exact i64 %41, 3
  %43 = add nuw nsw i64 %42, 1
  %44 = and i64 %43, 7
  %45 = icmp ult i64 %41, 56
  br i1 %45, label %93, label %46

46:                                               ; preds = %39
  %47 = sub nsw i64 %43, %44
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i64 [ 0, %46 ], [ %90, %48 ]
  %50 = phi i64 [ %47, %46 ], [ %91, %48 ]
  %51 = getelementptr inbounds [5 x i32], [5 x i32]* %36, i64 0, i64 %49
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !328
  %53 = getelementptr inbounds i32, i32* %51, i64 4
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !328
  %55 = or i64 %49, 8
  %56 = getelementptr inbounds [5 x i32], [5 x i32]* %36, i64 0, i64 %55
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !328
  %58 = getelementptr inbounds i32, i32* %56, i64 4
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !328
  %60 = or i64 %49, 16
  %61 = getelementptr inbounds [5 x i32], [5 x i32]* %36, i64 0, i64 %60
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !328
  %63 = getelementptr inbounds i32, i32* %61, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !328
  %65 = or i64 %49, 24
  %66 = getelementptr inbounds [5 x i32], [5 x i32]* %36, i64 0, i64 %65
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !328
  %68 = getelementptr inbounds i32, i32* %66, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !328
  %70 = or i64 %49, 32
  %71 = getelementptr inbounds [5 x i32], [5 x i32]* %36, i64 0, i64 %70
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !328
  %73 = getelementptr inbounds i32, i32* %71, i64 4
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !328
  %75 = or i64 %49, 40
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %36, i64 0, i64 %75
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !328
  %78 = getelementptr inbounds i32, i32* %76, i64 4
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %79, align 8, !alias.scope !328
  %80 = or i64 %49, 48
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %36, i64 0, i64 %80
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !328
  %83 = getelementptr inbounds i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !328
  %85 = or i64 %49, 56
  %86 = getelementptr inbounds [5 x i32], [5 x i32]* %36, i64 0, i64 %85
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 8, !alias.scope !328
  %88 = getelementptr inbounds i32, i32* %86, i64 4
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 8, !alias.scope !328
  %90 = add i64 %49, 64
  %91 = add i64 %50, -8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %48, !llvm.loop !331

93:                                               ; preds = %48, %39
  %94 = phi i64 [ 0, %39 ], [ %90, %48 ]
  %95 = icmp eq i64 %44, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %93, %96
  %97 = phi i64 [ %103, %96 ], [ %94, %93 ]
  %98 = phi i64 [ %104, %96 ], [ %44, %93 ]
  %99 = getelementptr inbounds [5 x i32], [5 x i32]* %36, i64 0, i64 %97
  %100 = bitcast i32* %99 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %100, align 8, !alias.scope !328
  %101 = getelementptr inbounds i32, i32* %99, i64 4
  %102 = bitcast i32* %101 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %102, align 8, !alias.scope !328
  %103 = add i64 %97, 8
  %104 = add i64 %98, -1
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %96, !llvm.loop !332

106:                                              ; preds = %96, %93
  %107 = icmp eq i64 %40, %37
  br i1 %107, label %115, label %108

108:                                              ; preds = %106, %35
  %109 = phi i64 [ 0, %35 ], [ %40, %106 ]
  br label %110

110:                                              ; preds = %108, %110
  %111 = phi i64 [ %113, %110 ], [ %109, %108 ]
  %112 = getelementptr inbounds [5 x i32], [5 x i32]* %36, i64 0, i64 %111
  store i32 1, i32* %112, align 4, !alias.scope !328
  %113 = add nuw nsw i64 %111, 1
  %114 = icmp eq i64 %113, %37
  br i1 %114, label %115, label %110, !llvm.loop !333

115:                                              ; preds = %110, %106, %23
  %116 = bitcast %union.anon* %34 to i32*
  %117 = sext i32 %32 to i64
  %118 = getelementptr inbounds i32, i32* %116, i64 %117
  %119 = bitcast i32* %118 to i8*
  %120 = icmp sgt i32 %20, 5
  %121 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %122 = getelementptr inbounds %union.anon, %union.anon* %121, i64 0, i32 0
  %123 = load i32*, i32** %122, align 8, !noalias !328
  %124 = bitcast %union.anon* %121 to i32*
  %125 = select i1 %120, i32* %123, i32* %124
  %126 = bitcast i32* %125 to i8*
  %127 = sext i32 %20 to i64
  %128 = shl nsw i64 %127, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %119, i8* align 4 %126, i64 %128, i1 false) #16
  %129 = load i32, i32* %31, align 8
  %130 = icmp sgt i32 %129, 5
  br i1 %130, label %131, label %137

131:                                              ; preds = %115
  %132 = getelementptr inbounds %union.anon, %union.anon* %34, i64 0, i32 0
  %133 = load i32*, i32** %132, align 8
  %134 = getelementptr inbounds i32, i32* %133, i64 1
  %135 = getelementptr inbounds i32, i32* %133, i64 2
  %136 = getelementptr inbounds i32, i32* %133, i64 3
  br label %144

137:                                              ; preds = %115
  %138 = bitcast %union.anon* %34 to [5 x i32]*
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %138, i64 0, i64 1
  %140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 1
  %141 = bitcast [16 x i8]* %140 to i32*
  %142 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 1, i64 4
  %143 = bitcast i8* %142 to i32*
  br label %144

144:                                              ; preds = %131, %137
  %145 = phi i32* [ %135, %131 ], [ %141, %137 ]
  %146 = phi i32* [ %133, %131 ], [ %116, %137 ]
  %147 = phi i32* [ %134, %131 ], [ %139, %137 ]
  %148 = phi i32* [ %136, %131 ], [ %143, %137 ]
  %149 = load i32, i32* %147, align 4
  %150 = load i32, i32* %146, align 4
  %151 = load i32, i32* %145, align 4
  %152 = load i32, i32* %148, align 4
  %153 = bitcast %union.anon* %26 to [5 x i32]*
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %153, i64 0, i64 1
  %155 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1
  %156 = bitcast [16 x i8]* %155 to i32*
  %157 = load i32, i32* %154, align 4
  %158 = load i32, i32* %156, align 8
  %159 = mul nsw i32 %158, %157
  %160 = sitofp i32 %159 to float
  %161 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 0
  %162 = load i8, i8* %161, align 2
  %163 = icmp eq i8 %162, 2
  br i1 %163, label %165, label %164

164:                                              ; preds = %144
  tail call void @abort() #17
  unreachable

165:                                              ; preds = %144
  %166 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 0
  %167 = load i16, i16* %166, align 2
  switch i16 %167, label %176 [
    i16 1, label %168
    i16 2, label %172
  ]

168:                                              ; preds = %165
  %169 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 1
  %170 = load i16, i16* %169, align 2
  %171 = icmp eq i16 %170, 2
  br i1 %171, label %177, label %176

172:                                              ; preds = %165
  %173 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 1
  %174 = load i16, i16* %173, align 2
  %175 = icmp eq i16 %174, 1
  br i1 %175, label %177, label %176

176:                                              ; preds = %165, %168, %172
  tail call void @abort() #17
  unreachable

177:                                              ; preds = %168, %172
  %178 = icmp eq i32 %149, 1
  br i1 %178, label %180, label %179

179:                                              ; preds = %177
  tail call void @abort() #17
  unreachable

180:                                              ; preds = %177
  %181 = icmp eq i32 %151, 1
  br i1 %181, label %183, label %182

182:                                              ; preds = %180
  tail call void @abort() #17
  unreachable

183:                                              ; preds = %180
  %184 = sitofp i32 %3 to float
  %185 = fmul float %184, %4
  %186 = fdiv float %185, %8
  %187 = fptosi float %186 to i32
  %188 = sub nsw i32 %7, %187
  %189 = fmul float %160, %8
  %190 = fdiv float %4, %189
  %191 = fpext float %190 to double
  %192 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %192) #16
  store i32 -1431655766, i32* %12, align 4
  %193 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %193) #16
  store i32 -1431655766, i32* %13, align 4
  call void @_ZN6tflite18QuantizeMultiplierEdPiS0_(double %191, i32* nonnull %12, i32* nonnull %13) #16
  %194 = icmp sgt i32 %150, 0
  br i1 %194, label %195, label %256

195:                                              ; preds = %183
  %196 = icmp sgt i32 %152, 0
  %197 = icmp sgt i32 %157, 0
  %198 = icmp sgt i32 %158, 0
  %199 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1, i64 4
  %200 = bitcast i8* %199 to i32*
  %201 = load i32, i32* %200, align 4
  %202 = load i32, i32* %12, align 4
  %203 = load i32, i32* %13, align 4
  %204 = icmp sgt i32 %203, 0
  %205 = sub nsw i32 0, %203
  %206 = select i1 %204, i32 0, i32 %205
  %207 = shl i32 1, %203
  %208 = select i1 %204, i32 %207, i32 1
  %209 = sext i32 %202 to i64
  %210 = icmp eq i32 %202, -2147483648
  %211 = zext i32 %206 to i64
  %212 = shl nsw i64 -1, %211
  %213 = trunc i64 %212 to i32
  %214 = xor i32 %213, -1
  %215 = ashr i32 %214, 1
  %216 = getelementptr inbounds i32, i32* %116, i64 1
  %217 = load i32, i32* %216, align 4
  %218 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 1
  %219 = bitcast [16 x i8]* %218 to i32*
  %220 = load i32, i32* %219, align 8
  %221 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 1, i64 4
  %222 = bitcast i8* %221 to i32*
  %223 = load i32, i32* %222, align 4
  %224 = sext i32 %201 to i64
  %225 = sext i32 %158 to i64
  %226 = sext i32 %157 to i64
  %227 = sext i32 %217 to i64
  %228 = sext i32 %220 to i64
  %229 = sext i32 %223 to i64
  %230 = zext i32 %150 to i64
  %231 = zext i32 %152 to i64
  %232 = zext i32 %157 to i64
  %233 = zext i32 %158 to i64
  %234 = and i64 %233, 4294967288
  %235 = add nsw i64 %234, -8
  %236 = lshr exact i64 %235, 3
  %237 = add nuw nsw i64 %236, 1
  %238 = icmp ugt i32 %158, 7
  %239 = icmp eq i32 %201, 1
  %240 = and i1 %238, %239
  %241 = and i64 %233, 4294967288
  %242 = and i64 %237, 1
  %243 = icmp eq i64 %235, 0
  %244 = sub nuw nsw i64 %237, %242
  %245 = icmp eq i64 %242, 0
  %246 = icmp eq i64 %241, %233
  %247 = and i64 %233, 3
  %248 = icmp eq i64 %247, 0
  br label %249

249:                                              ; preds = %264, %195
  %250 = phi i64 [ 0, %195 ], [ %265, %264 ]
  br i1 %196, label %251, label %264

251:                                              ; preds = %249
  %252 = mul nsw i64 %250, %226
  %253 = mul nsw i64 %250, %227
  %254 = mul nsw i64 %253, %228
  %255 = mul nsw i64 %254, %229
  br label %267

256:                                              ; preds = %264, %183
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %193) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %192) #16
  br i1 %130, label %257, label %263

257:                                              ; preds = %256
  %258 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %259 = load i32*, i32** %258, align 8
  %260 = icmp eq i32* %259, null
  br i1 %260, label %263, label %261

261:                                              ; preds = %257
  %262 = bitcast i32* %259 to i8*
  call void @_ZdaPv(i8* %262) #15
  br label %263

263:                                              ; preds = %261, %257, %256
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #16
  ret void

264:                                              ; preds = %380, %249
  %265 = add nuw nsw i64 %250, 1
  %266 = icmp eq i64 %265, %230
  br i1 %266, label %256, label %249

267:                                              ; preds = %380, %251
  %268 = phi i64 [ 0, %251 ], [ %397, %380 ]
  br i1 %197, label %269, label %365

269:                                              ; preds = %267, %399
  %270 = phi i64 [ %401, %399 ], [ 0, %267 ]
  %271 = phi i32 [ %400, %399 ], [ 0, %267 ]
  br i1 %198, label %272, label %399

272:                                              ; preds = %269
  %273 = add nsw i64 %252, %270
  %274 = mul nsw i64 %273, %225
  br i1 %240, label %275, label %341

275:                                              ; preds = %272
  %276 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %271, i32 0
  br i1 %243, label %312, label %277

277:                                              ; preds = %275, %277
  %278 = phi i64 [ %309, %277 ], [ 0, %275 ]
  %279 = phi <4 x i32> [ %307, %277 ], [ %276, %275 ]
  %280 = phi <4 x i32> [ %308, %277 ], [ zeroinitializer, %275 ]
  %281 = phi i64 [ %310, %277 ], [ %244, %275 ]
  %282 = add nsw i64 %274, %278
  %283 = mul nsw i64 %282, %224
  %284 = add nsw i64 %283, %268
  %285 = getelementptr inbounds i8, i8* %2, i64 %284
  %286 = bitcast i8* %285 to <4 x i8>*
  %287 = load <4 x i8>, <4 x i8>* %286, align 1
  %288 = getelementptr inbounds i8, i8* %285, i64 4
  %289 = bitcast i8* %288 to <4 x i8>*
  %290 = load <4 x i8>, <4 x i8>* %289, align 1
  %291 = zext <4 x i8> %287 to <4 x i32>
  %292 = zext <4 x i8> %290 to <4 x i32>
  %293 = add nsw <4 x i32> %279, %291
  %294 = add nuw nsw <4 x i32> %280, %292
  %295 = or i64 %278, 8
  %296 = add nsw i64 %274, %295
  %297 = mul nsw i64 %296, %224
  %298 = add nsw i64 %297, %268
  %299 = getelementptr inbounds i8, i8* %2, i64 %298
  %300 = bitcast i8* %299 to <4 x i8>*
  %301 = load <4 x i8>, <4 x i8>* %300, align 1
  %302 = getelementptr inbounds i8, i8* %299, i64 4
  %303 = bitcast i8* %302 to <4 x i8>*
  %304 = load <4 x i8>, <4 x i8>* %303, align 1
  %305 = zext <4 x i8> %301 to <4 x i32>
  %306 = zext <4 x i8> %304 to <4 x i32>
  %307 = add nsw <4 x i32> %293, %305
  %308 = add nuw nsw <4 x i32> %294, %306
  %309 = add i64 %278, 16
  %310 = add i64 %281, -2
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %277, !llvm.loop !334

312:                                              ; preds = %277, %275
  %313 = phi <4 x i32> [ undef, %275 ], [ %307, %277 ]
  %314 = phi <4 x i32> [ undef, %275 ], [ %308, %277 ]
  %315 = phi i64 [ 0, %275 ], [ %309, %277 ]
  %316 = phi <4 x i32> [ %276, %275 ], [ %307, %277 ]
  %317 = phi <4 x i32> [ zeroinitializer, %275 ], [ %308, %277 ]
  br i1 %245, label %332, label %318

318:                                              ; preds = %312
  %319 = add nsw i64 %274, %315
  %320 = mul nsw i64 %319, %224
  %321 = add nsw i64 %320, %268
  %322 = getelementptr inbounds i8, i8* %2, i64 %321
  %323 = getelementptr inbounds i8, i8* %322, i64 4
  %324 = bitcast i8* %323 to <4 x i8>*
  %325 = load <4 x i8>, <4 x i8>* %324, align 1
  %326 = zext <4 x i8> %325 to <4 x i32>
  %327 = add nuw nsw <4 x i32> %317, %326
  %328 = bitcast i8* %322 to <4 x i8>*
  %329 = load <4 x i8>, <4 x i8>* %328, align 1
  %330 = zext <4 x i8> %329 to <4 x i32>
  %331 = add nsw <4 x i32> %316, %330
  br label %332

332:                                              ; preds = %312, %318
  %333 = phi <4 x i32> [ %313, %312 ], [ %331, %318 ]
  %334 = phi <4 x i32> [ %314, %312 ], [ %327, %318 ]
  %335 = add <4 x i32> %334, %333
  %336 = shufflevector <4 x i32> %335, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %337 = add <4 x i32> %335, %336
  %338 = shufflevector <4 x i32> %337, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %339 = add <4 x i32> %337, %338
  %340 = extractelement <4 x i32> %339, i32 0
  br i1 %246, label %399, label %341

341:                                              ; preds = %272, %332
  %342 = phi i64 [ 0, %272 ], [ %241, %332 ]
  %343 = phi i32 [ %271, %272 ], [ %340, %332 ]
  %344 = xor i64 %342, -1
  %345 = add nsw i64 %344, %233
  br i1 %248, label %360, label %346

346:                                              ; preds = %341, %346
  %347 = phi i64 [ %357, %346 ], [ %342, %341 ]
  %348 = phi i32 [ %356, %346 ], [ %343, %341 ]
  %349 = phi i64 [ %358, %346 ], [ %247, %341 ]
  %350 = add nsw i64 %274, %347
  %351 = mul nsw i64 %350, %224
  %352 = add nsw i64 %351, %268
  %353 = getelementptr inbounds i8, i8* %2, i64 %352
  %354 = load i8, i8* %353, align 1
  %355 = zext i8 %354 to i32
  %356 = add nsw i32 %348, %355
  %357 = add nuw nsw i64 %347, 1
  %358 = add i64 %349, -1
  %359 = icmp eq i64 %358, 0
  br i1 %359, label %360, label %346, !llvm.loop !335

360:                                              ; preds = %346, %341
  %361 = phi i32 [ undef, %341 ], [ %356, %346 ]
  %362 = phi i64 [ %342, %341 ], [ %357, %346 ]
  %363 = phi i32 [ %343, %341 ], [ %356, %346 ]
  %364 = icmp ult i64 %345, 3
  br i1 %364, label %399, label %403

365:                                              ; preds = %399, %267
  %366 = phi i32 [ 0, %267 ], [ %400, %399 ]
  %367 = mul nsw i32 %208, %366
  %368 = icmp eq i32 %367, %202
  br i1 %368, label %371, label %369

369:                                              ; preds = %365
  %370 = sext i32 %367 to i64
  br label %372

371:                                              ; preds = %365
  br i1 %210, label %380, label %372

372:                                              ; preds = %371, %369
  %373 = phi i64 [ %370, %369 ], [ %209, %371 ]
  %374 = mul nsw i64 %373, %209
  %375 = icmp sgt i64 %374, -1
  %376 = select i1 %375, i64 1073741824, i64 -1073741823
  %377 = add nsw i64 %376, %374
  %378 = sdiv i64 %377, 2147483648
  %379 = trunc i64 %378 to i32
  br label %380

380:                                              ; preds = %371, %372
  %381 = phi i32 [ %379, %372 ], [ 2147483647, %371 ]
  %382 = and i32 %381, %214
  %383 = lshr i32 %381, 31
  %384 = add nsw i32 %383, %215
  %385 = ashr i32 %381, %206
  %386 = icmp sgt i32 %382, %384
  %387 = zext i1 %386 to i32
  %388 = add i32 %385, %188
  %389 = add i32 %388, %387
  %390 = icmp sgt i32 %389, 0
  %391 = select i1 %390, i32 %389, i32 0
  %392 = icmp slt i32 %391, 255
  %393 = select i1 %392, i32 %391, i32 255
  %394 = trunc i32 %393 to i8
  %395 = add nsw i64 %255, %268
  %396 = getelementptr inbounds i8, i8* %6, i64 %395
  store i8 %394, i8* %396, align 1
  %397 = add nuw nsw i64 %268, 1
  %398 = icmp eq i64 %397, %231
  br i1 %398, label %264, label %267

399:                                              ; preds = %360, %403, %332, %269
  %400 = phi i32 [ %271, %269 ], [ %340, %332 ], [ %361, %360 ], [ %436, %403 ]
  %401 = add nuw nsw i64 %270, 1
  %402 = icmp eq i64 %401, %232
  br i1 %402, label %365, label %269

403:                                              ; preds = %360, %403
  %404 = phi i64 [ %437, %403 ], [ %362, %360 ]
  %405 = phi i32 [ %436, %403 ], [ %363, %360 ]
  %406 = add nsw i64 %274, %404
  %407 = mul nsw i64 %406, %224
  %408 = add nsw i64 %407, %268
  %409 = getelementptr inbounds i8, i8* %2, i64 %408
  %410 = load i8, i8* %409, align 1
  %411 = zext i8 %410 to i32
  %412 = add nsw i32 %405, %411
  %413 = add nuw nsw i64 %404, 1
  %414 = add nsw i64 %274, %413
  %415 = mul nsw i64 %414, %224
  %416 = add nsw i64 %415, %268
  %417 = getelementptr inbounds i8, i8* %2, i64 %416
  %418 = load i8, i8* %417, align 1
  %419 = zext i8 %418 to i32
  %420 = add nsw i32 %412, %419
  %421 = add nuw nsw i64 %404, 2
  %422 = add nsw i64 %274, %421
  %423 = mul nsw i64 %422, %224
  %424 = add nsw i64 %423, %268
  %425 = getelementptr inbounds i8, i8* %2, i64 %424
  %426 = load i8, i8* %425, align 1
  %427 = zext i8 %426 to i32
  %428 = add nsw i32 %420, %427
  %429 = add nuw nsw i64 %404, 3
  %430 = add nsw i64 %274, %429
  %431 = mul nsw i64 %430, %224
  %432 = add nsw i64 %431, %268
  %433 = getelementptr inbounds i8, i8* %2, i64 %432
  %434 = load i8, i8* %433, align 1
  %435 = zext i8 %434 to i32
  %436 = add nsw i32 %428, %435
  %437 = add nuw nsw i64 %404, 4
  %438 = icmp eq i64 %437, %233
  br i1 %438, label %399, label %403, !llvm.loop !336
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite13reference_ops4MeanIhiEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_(i8*, i32*, i32, i8*, i32*, i32, i32*, i32, i1 zeroext, i32*, i32*, i32*) local_unnamed_addr #6 comdat {
  %13 = bitcast i32* %11 to i8*
  %14 = icmp sgt i32 %5, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %12
  %16 = zext i32 %5 to i64
  br label %115

17:                                               ; preds = %123
  %18 = icmp eq i64 %124, 0
  br i1 %18, label %127, label %19

19:                                               ; preds = %12, %17
  %20 = phi i64 [ %124, %17 ], [ 1, %12 ]
  %21 = icmp ult i64 %20, 8
  br i1 %21, label %22, label %39

22:                                               ; preds = %113, %39, %19
  %23 = phi i64 [ 0, %39 ], [ 0, %19 ], [ %47, %113 ]
  %24 = xor i64 %23, -1
  %25 = add i64 %20, %24
  %26 = and i64 %20, 3
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %22, %28
  %29 = phi i64 [ %33, %28 ], [ %23, %22 ]
  %30 = phi i64 [ %34, %28 ], [ %26, %22 ]
  %31 = getelementptr inbounds i8, i8* %3, i64 %29
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds i32, i32* %11, i64 %29
  store i32 0, i32* %32, align 4
  %33 = add nuw i64 %29, 1
  %34 = add i64 %30, -1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %28, !llvm.loop !337

36:                                               ; preds = %28, %22
  %37 = phi i64 [ %23, %22 ], [ %33, %28 ]
  %38 = icmp ult i64 %25, 3
  br i1 %38, label %127, label %172

39:                                               ; preds = %19
  %40 = getelementptr i8, i8* %3, i64 %20
  %41 = getelementptr i32, i32* %11, i64 %20
  %42 = bitcast i32* %41 to i8*
  %43 = icmp ugt i8* %42, %3
  %44 = icmp ugt i8* %40, %13
  %45 = and i1 %43, %44
  br i1 %45, label %22, label %46

46:                                               ; preds = %39
  %47 = and i64 %20, -8
  %48 = add i64 %47, -8
  %49 = lshr exact i64 %48, 3
  %50 = add nuw nsw i64 %49, 1
  %51 = and i64 %50, 3
  %52 = icmp ult i64 %48, 24
  br i1 %52, label %96, label %53

53:                                               ; preds = %46
  %54 = sub nsw i64 %50, %51
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi i64 [ 0, %53 ], [ %93, %55 ]
  %57 = phi i64 [ %54, %53 ], [ %94, %55 ]
  %58 = getelementptr inbounds i8, i8* %3, i64 %56
  %59 = bitcast i8* %58 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %59, align 1, !alias.scope !338, !noalias !341
  %60 = getelementptr inbounds i8, i8* %58, i64 4
  %61 = bitcast i8* %60 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %61, align 1, !alias.scope !338, !noalias !341
  %62 = getelementptr inbounds i32, i32* %11, i64 %56
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %63, align 4, !alias.scope !341
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %65, align 4, !alias.scope !341
  %66 = or i64 %56, 8
  %67 = getelementptr inbounds i8, i8* %3, i64 %66
  %68 = bitcast i8* %67 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %68, align 1, !alias.scope !338, !noalias !341
  %69 = getelementptr inbounds i8, i8* %67, i64 4
  %70 = bitcast i8* %69 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %70, align 1, !alias.scope !338, !noalias !341
  %71 = getelementptr inbounds i32, i32* %11, i64 %66
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %72, align 4, !alias.scope !341
  %73 = getelementptr inbounds i32, i32* %71, i64 4
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %74, align 4, !alias.scope !341
  %75 = or i64 %56, 16
  %76 = getelementptr inbounds i8, i8* %3, i64 %75
  %77 = bitcast i8* %76 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %77, align 1, !alias.scope !338, !noalias !341
  %78 = getelementptr inbounds i8, i8* %76, i64 4
  %79 = bitcast i8* %78 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %79, align 1, !alias.scope !338, !noalias !341
  %80 = getelementptr inbounds i32, i32* %11, i64 %75
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %81, align 4, !alias.scope !341
  %82 = getelementptr inbounds i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %83, align 4, !alias.scope !341
  %84 = or i64 %56, 24
  %85 = getelementptr inbounds i8, i8* %3, i64 %84
  %86 = bitcast i8* %85 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %86, align 1, !alias.scope !338, !noalias !341
  %87 = getelementptr inbounds i8, i8* %85, i64 4
  %88 = bitcast i8* %87 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %88, align 1, !alias.scope !338, !noalias !341
  %89 = getelementptr inbounds i32, i32* %11, i64 %84
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %90, align 4, !alias.scope !341
  %91 = getelementptr inbounds i32, i32* %89, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %92, align 4, !alias.scope !341
  %93 = add i64 %56, 32
  %94 = add i64 %57, -4
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %55, !llvm.loop !343

96:                                               ; preds = %55, %46
  %97 = phi i64 [ 0, %46 ], [ %93, %55 ]
  %98 = icmp eq i64 %51, 0
  br i1 %98, label %113, label %99

99:                                               ; preds = %96, %99
  %100 = phi i64 [ %110, %99 ], [ %97, %96 ]
  %101 = phi i64 [ %111, %99 ], [ %51, %96 ]
  %102 = getelementptr inbounds i8, i8* %3, i64 %100
  %103 = bitcast i8* %102 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %103, align 1, !alias.scope !338, !noalias !341
  %104 = getelementptr inbounds i8, i8* %102, i64 4
  %105 = bitcast i8* %104 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %105, align 1, !alias.scope !338, !noalias !341
  %106 = getelementptr inbounds i32, i32* %11, i64 %100
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %107, align 4, !alias.scope !341
  %108 = getelementptr inbounds i32, i32* %106, i64 4
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %109, align 4, !alias.scope !341
  %110 = add i64 %100, 8
  %111 = add i64 %101, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %99, !llvm.loop !344

113:                                              ; preds = %99, %96
  %114 = icmp eq i64 %20, %47
  br i1 %114, label %127, label %22

115:                                              ; preds = %123, %15
  %116 = phi i64 [ 0, %15 ], [ %125, %123 ]
  %117 = phi i64 [ 1, %15 ], [ %124, %123 ]
  %118 = getelementptr inbounds i32, i32* %4, i64 %116
  %119 = load i32, i32* %118, align 4
  %120 = sext i32 %119 to i64
  %121 = udiv i64 -1, %120
  %122 = icmp ugt i64 %117, %121
  br i1 %122, label %372, label %123

123:                                              ; preds = %115
  %124 = mul i64 %117, %120
  %125 = add nuw nsw i64 %116, 1
  %126 = icmp eq i64 %125, %16
  br i1 %126, label %17, label %115

127:                                              ; preds = %36, %172, %113, %17
  %128 = phi i64 [ 0, %17 ], [ %20, %113 ], [ %20, %172 ], [ %20, %36 ]
  %129 = sext i32 %7 to i64
  %130 = icmp ne i32 %2, 0
  %131 = icmp sgt i32 %7, 0
  %132 = and i1 %130, %131
  br i1 %132, label %133, label %187

133:                                              ; preds = %127, %166
  %134 = phi i32 [ %167, %166 ], [ 0, %127 ]
  %135 = phi i32 [ %168, %166 ], [ 0, %127 ]
  %136 = phi i32 [ %169, %166 ], [ 0, %127 ]
  %137 = phi i64 [ %170, %166 ], [ 0, %127 ]
  %138 = getelementptr inbounds i32, i32* %6, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = icmp slt i32 %139, 0
  %141 = select i1 %140, i32 %2, i32 0
  %142 = add nsw i32 %141, %139
  %143 = icmp sgt i32 %142, -1
  %144 = icmp slt i32 %142, %2
  %145 = and i1 %143, %144
  br i1 %145, label %146, label %372

146:                                              ; preds = %133
  %147 = icmp sgt i32 %136, 0
  br i1 %147, label %150, label %148

148:                                              ; preds = %146
  %149 = sext i32 %136 to i64
  br label %162

150:                                              ; preds = %146
  %151 = sext i32 %135 to i64
  %152 = load i32, i32* %10, align 4
  %153 = icmp eq i32 %152, %142
  br i1 %153, label %166, label %154

154:                                              ; preds = %150, %157
  %155 = phi i64 [ %161, %157 ], [ 1, %150 ]
  %156 = icmp slt i64 %155, %151
  br i1 %156, label %157, label %162

157:                                              ; preds = %154
  %158 = getelementptr inbounds i32, i32* %10, i64 %155
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %159, %142
  %161 = add nuw nsw i64 %155, 1
  br i1 %160, label %166, label %154

162:                                              ; preds = %154, %148
  %163 = phi i64 [ %149, %148 ], [ %151, %154 ]
  %164 = getelementptr inbounds i32, i32* %10, i64 %163
  store i32 %142, i32* %164, align 4
  %165 = add nsw i32 %134, 1
  br label %166

166:                                              ; preds = %157, %150, %162
  %167 = phi i32 [ %165, %162 ], [ %134, %150 ], [ %134, %157 ]
  %168 = phi i32 [ %165, %162 ], [ %135, %150 ], [ %135, %157 ]
  %169 = phi i32 [ %165, %162 ], [ %136, %150 ], [ %135, %157 ]
  %170 = add nuw nsw i64 %137, 1
  %171 = icmp eq i64 %170, %129
  br i1 %171, label %187, label %133

172:                                              ; preds = %36, %172
  %173 = phi i64 [ %185, %172 ], [ %37, %36 ]
  %174 = getelementptr inbounds i8, i8* %3, i64 %173
  store i8 0, i8* %174, align 1
  %175 = getelementptr inbounds i32, i32* %11, i64 %173
  store i32 0, i32* %175, align 4
  %176 = add nuw i64 %173, 1
  %177 = getelementptr inbounds i8, i8* %3, i64 %176
  store i8 0, i8* %177, align 1
  %178 = getelementptr inbounds i32, i32* %11, i64 %176
  store i32 0, i32* %178, align 4
  %179 = add nuw i64 %173, 2
  %180 = getelementptr inbounds i8, i8* %3, i64 %179
  store i8 0, i8* %180, align 1
  %181 = getelementptr inbounds i32, i32* %11, i64 %179
  store i32 0, i32* %181, align 4
  %182 = add nuw i64 %173, 3
  %183 = getelementptr inbounds i8, i8* %3, i64 %182
  store i8 0, i8* %183, align 1
  %184 = getelementptr inbounds i32, i32* %11, i64 %182
  store i32 0, i32* %184, align 4
  %185 = add nuw i64 %173, 4
  %186 = icmp eq i64 %185, %20
  br i1 %186, label %127, label %172, !llvm.loop !345

187:                                              ; preds = %166, %127
  %188 = phi i32 [ 0, %127 ], [ %167, %166 ]
  %189 = icmp sgt i32 %2, 0
  br i1 %189, label %192, label %190

190:                                              ; preds = %187
  %191 = zext i32 %2 to i64
  br label %196

192:                                              ; preds = %187
  %193 = bitcast i32* %9 to i8*
  %194 = zext i32 %2 to i64
  %195 = shl nuw nsw i64 %194, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %193, i8 0, i64 %195, i1 false) #16
  br label %196

196:                                              ; preds = %192, %190
  %197 = phi i64 [ %191, %190 ], [ %194, %192 ]
  %198 = icmp eq i32* %10, null
  %199 = icmp slt i32 %188, 1
  %200 = or i1 %198, %199
  %201 = zext i32 %188 to i64
  %202 = icmp eq i32 %2, 0
  %203 = sext i32 %2 to i64
  %204 = add nsw i64 %197, -1
  %205 = and i64 %197, 3
  %206 = icmp ult i64 %204, 3
  %207 = sub nsw i64 %197, %205
  %208 = icmp eq i64 %205, 0
  br label %209

209:                                              ; preds = %312, %196
  br i1 %189, label %210, label %299

210:                                              ; preds = %209
  br i1 %206, label %253, label %211

211:                                              ; preds = %210, %211
  %212 = phi i64 [ %250, %211 ], [ 0, %210 ]
  %213 = phi i64 [ %249, %211 ], [ 0, %210 ]
  %214 = phi i64 [ %251, %211 ], [ %207, %210 ]
  %215 = getelementptr inbounds i32, i32* %1, i64 %212
  %216 = load i32, i32* %215, align 4
  %217 = sext i32 %216 to i64
  %218 = mul i64 %213, %217
  %219 = getelementptr inbounds i32, i32* %9, i64 %212
  %220 = load i32, i32* %219, align 4
  %221 = sext i32 %220 to i64
  %222 = add i64 %218, %221
  %223 = or i64 %212, 1
  %224 = getelementptr inbounds i32, i32* %1, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = sext i32 %225 to i64
  %227 = mul i64 %222, %226
  %228 = getelementptr inbounds i32, i32* %9, i64 %223
  %229 = load i32, i32* %228, align 4
  %230 = sext i32 %229 to i64
  %231 = add i64 %227, %230
  %232 = or i64 %212, 2
  %233 = getelementptr inbounds i32, i32* %1, i64 %232
  %234 = load i32, i32* %233, align 4
  %235 = sext i32 %234 to i64
  %236 = mul i64 %231, %235
  %237 = getelementptr inbounds i32, i32* %9, i64 %232
  %238 = load i32, i32* %237, align 4
  %239 = sext i32 %238 to i64
  %240 = add i64 %236, %239
  %241 = or i64 %212, 3
  %242 = getelementptr inbounds i32, i32* %1, i64 %241
  %243 = load i32, i32* %242, align 4
  %244 = sext i32 %243 to i64
  %245 = mul i64 %240, %244
  %246 = getelementptr inbounds i32, i32* %9, i64 %241
  %247 = load i32, i32* %246, align 4
  %248 = sext i32 %247 to i64
  %249 = add i64 %245, %248
  %250 = add nuw nsw i64 %212, 4
  %251 = add i64 %214, -4
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %211

253:                                              ; preds = %211, %210
  %254 = phi i64 [ undef, %210 ], [ %249, %211 ]
  %255 = phi i64 [ 0, %210 ], [ %250, %211 ]
  %256 = phi i64 [ 0, %210 ], [ %249, %211 ]
  br i1 %208, label %272, label %257

257:                                              ; preds = %253, %257
  %258 = phi i64 [ %269, %257 ], [ %255, %253 ]
  %259 = phi i64 [ %268, %257 ], [ %256, %253 ]
  %260 = phi i64 [ %270, %257 ], [ %205, %253 ]
  %261 = getelementptr inbounds i32, i32* %1, i64 %258
  %262 = load i32, i32* %261, align 4
  %263 = sext i32 %262 to i64
  %264 = mul i64 %259, %263
  %265 = getelementptr inbounds i32, i32* %9, i64 %258
  %266 = load i32, i32* %265, align 4
  %267 = sext i32 %266 to i64
  %268 = add i64 %264, %267
  %269 = add nuw nsw i64 %258, 1
  %270 = add i64 %260, -1
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %272, label %257, !llvm.loop !346

272:                                              ; preds = %257, %253
  %273 = phi i64 [ %254, %253 ], [ %268, %257 ]
  br label %274

274:                                              ; preds = %272, %295
  %275 = phi i64 [ %297, %295 ], [ 0, %272 ]
  %276 = phi i64 [ %296, %295 ], [ 0, %272 ]
  br i1 %200, label %286, label %279

277:                                              ; preds = %279
  %278 = icmp eq i64 %285, %201
  br i1 %278, label %286, label %279

279:                                              ; preds = %274, %277
  %280 = phi i64 [ %285, %277 ], [ 0, %274 ]
  %281 = getelementptr inbounds i32, i32* %10, i64 %280
  %282 = load i32, i32* %281, align 4
  %283 = zext i32 %282 to i64
  %284 = icmp eq i64 %275, %283
  %285 = add nuw nsw i64 %280, 1
  br i1 %284, label %295, label %277

286:                                              ; preds = %277, %274
  %287 = getelementptr inbounds i32, i32* %1, i64 %275
  %288 = load i32, i32* %287, align 4
  %289 = sext i32 %288 to i64
  %290 = mul i64 %276, %289
  %291 = getelementptr inbounds i32, i32* %9, i64 %275
  %292 = load i32, i32* %291, align 4
  %293 = sext i32 %292 to i64
  %294 = add i64 %290, %293
  br label %295

295:                                              ; preds = %279, %286
  %296 = phi i64 [ %294, %286 ], [ %276, %279 ]
  %297 = add nuw nsw i64 %275, 1
  %298 = icmp eq i64 %297, %197
  br i1 %298, label %299, label %274

299:                                              ; preds = %295, %209
  %300 = phi i64 [ 0, %209 ], [ %273, %295 ]
  %301 = phi i64 [ 0, %209 ], [ %296, %295 ]
  %302 = getelementptr inbounds i32, i32* %11, i64 %301
  %303 = load i32, i32* %302, align 4
  %304 = getelementptr inbounds i8, i8* %0, i64 %300
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i32
  %307 = add nsw i32 %303, %306
  store i32 %307, i32* %302, align 4
  br i1 %202, label %320, label %308

308:                                              ; preds = %299, %312
  %309 = phi i64 [ %310, %312 ], [ %203, %299 ]
  %310 = add nsw i64 %309, -1
  %311 = icmp sgt i64 %309, 0
  br i1 %311, label %312, label %320

312:                                              ; preds = %308
  %313 = getelementptr inbounds i32, i32* %9, i64 %310
  %314 = load i32, i32* %313, align 4
  %315 = add nsw i32 %314, 1
  %316 = getelementptr inbounds i32, i32* %1, i64 %310
  %317 = load i32, i32* %316, align 4
  %318 = icmp eq i32 %317, %315
  %319 = select i1 %318, i32 0, i32 %315
  store i32 %319, i32* %313, align 4
  br i1 %318, label %308, label %209

320:                                              ; preds = %299, %308
  %321 = icmp sgt i32 %188, 0
  br i1 %321, label %322, label %336

322:                                              ; preds = %320, %332
  %323 = phi i64 [ %334, %332 ], [ 0, %320 ]
  %324 = phi i32 [ %333, %332 ], [ 1, %320 ]
  %325 = getelementptr inbounds i32, i32* %10, i64 %323
  %326 = load i32, i32* %325, align 4
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds i32, i32* %1, i64 %327
  %329 = load i32, i32* %328, align 4
  %330 = sdiv i32 2147483647, %324
  %331 = icmp ugt i32 %329, %330
  br i1 %331, label %372, label %332

332:                                              ; preds = %322
  %333 = mul i32 %329, %324
  %334 = add nuw nsw i64 %323, 1
  %335 = icmp eq i64 %334, %201
  br i1 %335, label %336, label %322

336:                                              ; preds = %332, %320
  %337 = phi i32 [ 1, %320 ], [ %333, %332 ]
  %338 = icmp sgt i32 %337, 0
  %339 = icmp ne i64 %128, 0
  %340 = and i1 %338, %339
  br i1 %340, label %341, label %372

341:                                              ; preds = %336
  %342 = and i64 %128, 1
  %343 = icmp eq i64 %128, 1
  br i1 %343, label %363, label %344

344:                                              ; preds = %341
  %345 = sub i64 %128, %342
  br label %346

346:                                              ; preds = %346, %344
  %347 = phi i64 [ 0, %344 ], [ %360, %346 ]
  %348 = phi i64 [ %345, %344 ], [ %361, %346 ]
  %349 = getelementptr inbounds i32, i32* %11, i64 %347
  %350 = load i32, i32* %349, align 4
  %351 = sdiv i32 %350, %337
  %352 = trunc i32 %351 to i8
  %353 = getelementptr inbounds i8, i8* %3, i64 %347
  store i8 %352, i8* %353, align 1
  %354 = or i64 %347, 1
  %355 = getelementptr inbounds i32, i32* %11, i64 %354
  %356 = load i32, i32* %355, align 4
  %357 = sdiv i32 %356, %337
  %358 = trunc i32 %357 to i8
  %359 = getelementptr inbounds i8, i8* %3, i64 %354
  store i8 %358, i8* %359, align 1
  %360 = add nuw i64 %347, 2
  %361 = add i64 %348, -2
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %363, label %346

363:                                              ; preds = %346, %341
  %364 = phi i64 [ 0, %341 ], [ %360, %346 ]
  %365 = icmp eq i64 %342, 0
  br i1 %365, label %372, label %366

366:                                              ; preds = %363
  %367 = getelementptr inbounds i32, i32* %11, i64 %364
  %368 = load i32, i32* %367, align 4
  %369 = sdiv i32 %368, %337
  %370 = trunc i32 %369 to i8
  %371 = getelementptr inbounds i8, i8* %3, i64 %364
  store i8 %370, i8* %371, align 1
  br label %372

372:                                              ; preds = %115, %133, %322, %366, %363, %336
  %373 = phi i1 [ true, %336 ], [ true, %363 ], [ true, %366 ], [ false, %322 ], [ false, %133 ], [ false, %115 ]
  ret i1 %373
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite21optimized_integer_ops8MeanImplERKNS_10MeanParamsERKNS_12RuntimeShapeEPKaiiiS6_Paii(%"struct.tflite::MeanParams"* dereferenceable(10), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i32, i32, i32, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i32, i32) local_unnamed_addr #6 comdat {
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 5
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %15 = getelementptr inbounds %union.anon, %union.anon* %14, i64 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds i32, i32* %16, i64 2
  %18 = bitcast %union.anon* %14 to i32*
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %20 = bitcast [16 x i8]* %19 to i32*
  %21 = select i1 %13, i32* %17, i32* %20
  %22 = select i1 %13, i32* %16, i32* %18
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %21, align 4
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp sgt i32 %26, 5
  %28 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %29 = getelementptr inbounds %union.anon, %union.anon* %28, i64 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 1
  %32 = getelementptr inbounds i32, i32* %30, i64 2
  %33 = bitcast %union.anon* %28 to [5 x i32]*
  %34 = getelementptr inbounds [5 x i32], [5 x i32]* %33, i64 0, i64 1
  %35 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 1
  %36 = bitcast [16 x i8]* %35 to i32*
  %37 = select i1 %27, i32* %31, i32* %34
  %38 = select i1 %27, i32* %32, i32* %36
  %39 = load i32, i32* %37, align 4
  %40 = load i32, i32* %38, align 4
  %41 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 0
  %42 = load i8, i8* %41, align 2
  %43 = icmp eq i8 %42, 2
  br i1 %43, label %45, label %44

44:                                               ; preds = %10
  tail call void @abort() #17
  unreachable

45:                                               ; preds = %10
  %46 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 0
  %47 = load i16, i16* %46, align 2
  switch i16 %47, label %56 [
    i16 1, label %48
    i16 2, label %52
  ]

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 1
  %50 = load i16, i16* %49, align 2
  %51 = icmp eq i16 %50, 2
  br i1 %51, label %57, label %56

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 1
  %54 = load i16, i16* %53, align 2
  %55 = icmp eq i16 %54, 1
  br i1 %55, label %57, label %56

56:                                               ; preds = %45, %48, %52
  tail call void @abort() #17
  unreachable

57:                                               ; preds = %48, %52
  %58 = icmp eq i32 %24, 1
  br i1 %58, label %60, label %59

59:                                               ; preds = %57
  tail call void @abort() #17
  unreachable

60:                                               ; preds = %57
  %61 = icmp sgt i32 %23, 0
  br i1 %61, label %62, label %104

62:                                               ; preds = %60
  %63 = icmp slt i32 %8, %9
  %64 = icmp sgt i32 %39, 0
  %65 = icmp sgt i32 %40, 0
  %66 = bitcast %union.anon* %28 to i32*
  %67 = getelementptr inbounds i32, i32* %66, i64 1
  %68 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 1, i64 4
  %69 = bitcast i8* %68 to i32*
  %70 = icmp sgt i32 %4, 0
  %71 = sub nsw i32 0, %4
  %72 = select i1 %70, i32 0, i32 %71
  %73 = shl i32 1, %4
  %74 = select i1 %70, i32 %73, i32 1
  %75 = sext i32 %3 to i64
  %76 = icmp eq i32 %3, -2147483648
  %77 = zext i32 %72 to i64
  %78 = shl nsw i64 -1, %77
  %79 = trunc i64 %78 to i32
  %80 = xor i32 %79, -1
  %81 = ashr i32 %80, 1
  %82 = getelementptr inbounds i32, i32* %18, i64 1
  %83 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %84 = bitcast i8* %83 to i32*
  %85 = sext i32 %8 to i64
  %86 = sext i32 %9 to i64
  %87 = zext i32 %39 to i64
  %88 = zext i32 %40 to i64
  %89 = and i64 %88, 4294967288
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = icmp ugt i32 %40, 7
  %94 = and i64 %88, 4294967288
  %95 = and i64 %92, 1
  %96 = icmp eq i64 %90, 0
  %97 = sub nuw nsw i64 %92, %95
  %98 = icmp eq i64 %95, 0
  %99 = icmp eq i64 %94, %88
  %100 = and i64 %88, 3
  %101 = icmp eq i64 %100, 0
  br label %102

102:                                              ; preds = %295, %62
  %103 = phi i32 [ 0, %62 ], [ %296, %295 ]
  br i1 %63, label %105, label %295

104:                                              ; preds = %295, %60
  ret void

105:                                              ; preds = %102, %228
  %106 = phi i64 [ %253, %228 ], [ %85, %102 ]
  br i1 %64, label %107, label %213

107:                                              ; preds = %105
  %108 = load i32, i32* %67, align 4
  %109 = mul nsw i32 %108, %103
  %110 = load i32, i32* %36, align 4
  %111 = load i32, i32* %69, align 4
  %112 = sext i32 %111 to i64
  %113 = sext i32 %109 to i64
  %114 = sext i32 %110 to i64
  %115 = icmp eq i32 %111, 1
  %116 = and i1 %93, %115
  br label %117

117:                                              ; preds = %255, %107
  %118 = phi i64 [ 0, %107 ], [ %257, %255 ]
  %119 = phi i32 [ 0, %107 ], [ %256, %255 ]
  br i1 %65, label %120, label %255

120:                                              ; preds = %117
  %121 = add nsw i64 %118, %113
  %122 = mul nsw i64 %121, %114
  br i1 %116, label %123, label %189

123:                                              ; preds = %120
  %124 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %119, i32 0
  br i1 %96, label %160, label %125

125:                                              ; preds = %123, %125
  %126 = phi i64 [ %157, %125 ], [ 0, %123 ]
  %127 = phi <4 x i32> [ %155, %125 ], [ %124, %123 ]
  %128 = phi <4 x i32> [ %156, %125 ], [ zeroinitializer, %123 ]
  %129 = phi i64 [ %158, %125 ], [ %97, %123 ]
  %130 = add nsw i64 %122, %126
  %131 = mul nsw i64 %130, %112
  %132 = add nsw i64 %131, %106
  %133 = getelementptr inbounds i8, i8* %2, i64 %132
  %134 = bitcast i8* %133 to <4 x i8>*
  %135 = load <4 x i8>, <4 x i8>* %134, align 1
  %136 = getelementptr inbounds i8, i8* %133, i64 4
  %137 = bitcast i8* %136 to <4 x i8>*
  %138 = load <4 x i8>, <4 x i8>* %137, align 1
  %139 = sext <4 x i8> %135 to <4 x i32>
  %140 = sext <4 x i8> %138 to <4 x i32>
  %141 = add nsw <4 x i32> %127, %139
  %142 = add nsw <4 x i32> %128, %140
  %143 = or i64 %126, 8
  %144 = add nsw i64 %122, %143
  %145 = mul nsw i64 %144, %112
  %146 = add nsw i64 %145, %106
  %147 = getelementptr inbounds i8, i8* %2, i64 %146
  %148 = bitcast i8* %147 to <4 x i8>*
  %149 = load <4 x i8>, <4 x i8>* %148, align 1
  %150 = getelementptr inbounds i8, i8* %147, i64 4
  %151 = bitcast i8* %150 to <4 x i8>*
  %152 = load <4 x i8>, <4 x i8>* %151, align 1
  %153 = sext <4 x i8> %149 to <4 x i32>
  %154 = sext <4 x i8> %152 to <4 x i32>
  %155 = add nsw <4 x i32> %141, %153
  %156 = add nsw <4 x i32> %142, %154
  %157 = add i64 %126, 16
  %158 = add i64 %129, -2
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %125, !llvm.loop !347

160:                                              ; preds = %125, %123
  %161 = phi <4 x i32> [ undef, %123 ], [ %155, %125 ]
  %162 = phi <4 x i32> [ undef, %123 ], [ %156, %125 ]
  %163 = phi i64 [ 0, %123 ], [ %157, %125 ]
  %164 = phi <4 x i32> [ %124, %123 ], [ %155, %125 ]
  %165 = phi <4 x i32> [ zeroinitializer, %123 ], [ %156, %125 ]
  br i1 %98, label %180, label %166

166:                                              ; preds = %160
  %167 = add nsw i64 %122, %163
  %168 = mul nsw i64 %167, %112
  %169 = add nsw i64 %168, %106
  %170 = getelementptr inbounds i8, i8* %2, i64 %169
  %171 = getelementptr inbounds i8, i8* %170, i64 4
  %172 = bitcast i8* %171 to <4 x i8>*
  %173 = load <4 x i8>, <4 x i8>* %172, align 1
  %174 = sext <4 x i8> %173 to <4 x i32>
  %175 = add nsw <4 x i32> %165, %174
  %176 = bitcast i8* %170 to <4 x i8>*
  %177 = load <4 x i8>, <4 x i8>* %176, align 1
  %178 = sext <4 x i8> %177 to <4 x i32>
  %179 = add nsw <4 x i32> %164, %178
  br label %180

180:                                              ; preds = %160, %166
  %181 = phi <4 x i32> [ %161, %160 ], [ %179, %166 ]
  %182 = phi <4 x i32> [ %162, %160 ], [ %175, %166 ]
  %183 = add <4 x i32> %182, %181
  %184 = shufflevector <4 x i32> %183, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %185 = add <4 x i32> %183, %184
  %186 = shufflevector <4 x i32> %185, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %187 = add <4 x i32> %185, %186
  %188 = extractelement <4 x i32> %187, i32 0
  br i1 %99, label %255, label %189

189:                                              ; preds = %120, %180
  %190 = phi i64 [ 0, %120 ], [ %94, %180 ]
  %191 = phi i32 [ %119, %120 ], [ %188, %180 ]
  %192 = xor i64 %190, -1
  %193 = add nsw i64 %192, %88
  br i1 %101, label %208, label %194

194:                                              ; preds = %189, %194
  %195 = phi i64 [ %205, %194 ], [ %190, %189 ]
  %196 = phi i32 [ %204, %194 ], [ %191, %189 ]
  %197 = phi i64 [ %206, %194 ], [ %100, %189 ]
  %198 = add nsw i64 %122, %195
  %199 = mul nsw i64 %198, %112
  %200 = add nsw i64 %199, %106
  %201 = getelementptr inbounds i8, i8* %2, i64 %200
  %202 = load i8, i8* %201, align 1
  %203 = sext i8 %202 to i32
  %204 = add nsw i32 %196, %203
  %205 = add nuw nsw i64 %195, 1
  %206 = add i64 %197, -1
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %208, label %194, !llvm.loop !348

208:                                              ; preds = %194, %189
  %209 = phi i32 [ undef, %189 ], [ %204, %194 ]
  %210 = phi i64 [ %190, %189 ], [ %205, %194 ]
  %211 = phi i32 [ %191, %189 ], [ %204, %194 ]
  %212 = icmp ult i64 %193, 3
  br i1 %212, label %255, label %259

213:                                              ; preds = %255, %105
  %214 = phi i32 [ 0, %105 ], [ %256, %255 ]
  %215 = mul nsw i32 %214, %74
  %216 = icmp eq i32 %215, %3
  br i1 %216, label %219, label %217

217:                                              ; preds = %213
  %218 = sext i32 %215 to i64
  br label %220

219:                                              ; preds = %213
  br i1 %76, label %228, label %220

220:                                              ; preds = %219, %217
  %221 = phi i64 [ %218, %217 ], [ %75, %219 ]
  %222 = mul nsw i64 %221, %75
  %223 = icmp sgt i64 %222, -1
  %224 = select i1 %223, i64 1073741824, i64 -1073741823
  %225 = add nsw i64 %224, %222
  %226 = sdiv i64 %225, 2147483648
  %227 = trunc i64 %226 to i32
  br label %228

228:                                              ; preds = %219, %220
  %229 = phi i32 [ %227, %220 ], [ 2147483647, %219 ]
  %230 = and i32 %229, %80
  %231 = lshr i32 %229, 31
  %232 = add nsw i32 %231, %81
  %233 = ashr i32 %229, %72
  %234 = icmp sgt i32 %230, %232
  %235 = zext i1 %234 to i32
  %236 = add i32 %233, %5
  %237 = add i32 %236, %235
  %238 = icmp sgt i32 %237, -128
  %239 = select i1 %238, i32 %237, i32 -128
  %240 = icmp slt i32 %239, 127
  %241 = select i1 %240, i32 %239, i32 127
  %242 = trunc i32 %241 to i8
  %243 = load i32, i32* %82, align 4
  %244 = mul nsw i32 %243, %103
  %245 = load i32, i32* %20, align 4
  %246 = mul nsw i32 %244, %245
  %247 = load i32, i32* %84, align 4
  %248 = mul nsw i32 %246, %247
  %249 = trunc i64 %106 to i32
  %250 = add nsw i32 %248, %249
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds i8, i8* %7, i64 %251
  store i8 %242, i8* %252, align 1
  %253 = add nsw i64 %106, 1
  %254 = icmp eq i64 %253, %86
  br i1 %254, label %295, label %105

255:                                              ; preds = %208, %259, %180, %117
  %256 = phi i32 [ %119, %117 ], [ %188, %180 ], [ %209, %208 ], [ %292, %259 ]
  %257 = add nuw nsw i64 %118, 1
  %258 = icmp eq i64 %257, %87
  br i1 %258, label %213, label %117

259:                                              ; preds = %208, %259
  %260 = phi i64 [ %293, %259 ], [ %210, %208 ]
  %261 = phi i32 [ %292, %259 ], [ %211, %208 ]
  %262 = add nsw i64 %122, %260
  %263 = mul nsw i64 %262, %112
  %264 = add nsw i64 %263, %106
  %265 = getelementptr inbounds i8, i8* %2, i64 %264
  %266 = load i8, i8* %265, align 1
  %267 = sext i8 %266 to i32
  %268 = add nsw i32 %261, %267
  %269 = add nuw nsw i64 %260, 1
  %270 = add nsw i64 %122, %269
  %271 = mul nsw i64 %270, %112
  %272 = add nsw i64 %271, %106
  %273 = getelementptr inbounds i8, i8* %2, i64 %272
  %274 = load i8, i8* %273, align 1
  %275 = sext i8 %274 to i32
  %276 = add nsw i32 %268, %275
  %277 = add nuw nsw i64 %260, 2
  %278 = add nsw i64 %122, %277
  %279 = mul nsw i64 %278, %112
  %280 = add nsw i64 %279, %106
  %281 = getelementptr inbounds i8, i8* %2, i64 %280
  %282 = load i8, i8* %281, align 1
  %283 = sext i8 %282 to i32
  %284 = add nsw i32 %276, %283
  %285 = add nuw nsw i64 %260, 3
  %286 = add nsw i64 %122, %285
  %287 = mul nsw i64 %286, %112
  %288 = add nsw i64 %287, %106
  %289 = getelementptr inbounds i8, i8* %2, i64 %288
  %290 = load i8, i8* %289, align 1
  %291 = sext i8 %290 to i32
  %292 = add nsw i32 %284, %291
  %293 = add nuw nsw i64 %260, 4
  %294 = icmp eq i64 %293, %88
  br i1 %294, label %255, label %259, !llvm.loop !349

295:                                              ; preds = %228, %102
  %296 = add nuw nsw i32 %103, 1
  %297 = icmp eq i32 %296, %23
  br i1 %297, label %104, label %102
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8gemmlowp4TaskD2Ev(%"struct.gemmlowp::Task"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite21optimized_integer_ops14MeanWorkerTaskD0Ev(%"struct.tflite::optimized_integer_ops::MeanWorkerTask"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite21optimized_integer_ops14MeanWorkerTask3RunEv(%"struct.tflite::optimized_integer_ops::MeanWorkerTask"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %0, i64 0, i32 1
  %3 = load %"struct.tflite::MeanParams"*, %"struct.tflite::MeanParams"** %2, align 8
  %4 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %0, i64 0, i32 2
  %5 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %4, align 8
  %6 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %0, i64 0, i32 3
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %0, i64 0, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %0, i64 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %0, i64 0, i32 7
  %15 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %14, align 8
  %16 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %0, i64 0, i32 8
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %0, i64 0, i32 9
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %0, i64 0, i32 10
  %21 = load i32, i32* %20, align 4
  tail call void @_ZN6tflite21optimized_integer_ops8MeanImplERKNS_10MeanParamsERKNS_12RuntimeShapeEPKaiiiS6_Paii(%"struct.tflite::MeanParams"* dereferenceable(10) %3, %"class.tflite::RuntimeShape"* dereferenceable(32) %5, i8* %7, i32 %9, i32 %11, i32 %13, %"class.tflite::RuntimeShape"* dereferenceable(32) %15, i8* %17, i32 %19, i32 %21)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8gemmlowp4TaskD0Ev(%"struct.gemmlowp::Task"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6tflite21optimized_integer_ops14MeanWorkerTaskENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRKNS1_10MeanParamsERKNS1_12RuntimeShapeERPKaRiSH_SH_SD_RPaSH_SH_EEEvDpOT_(%"class.std::__1::vector.63"*, %"struct.tflite::MeanParams"* dereferenceable(10), %"class.tflite::RuntimeShape"* dereferenceable(32), i8** dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), %"class.tflite::RuntimeShape"* dereferenceable(32), i8** dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #6 comdat align 2 {
  %12 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"struct.tflite::optimized_integer_ops::MeanWorkerTask"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.63"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 80
  %19 = add nsw i64 %18, 1
  %20 = icmp ugt i64 %19, 230584300921369395
  br i1 %20, label %21, label %23

21:                                               ; preds = %11
  %22 = bitcast %"class.std::__1::vector.63"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %22) #17
  unreachable

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"struct.tflite::optimized_integer_ops::MeanWorkerTask"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %16
  %28 = sdiv exact i64 %27, 80
  %29 = icmp ult i64 %28, 115292150460684697
  br i1 %29, label %30, label %35

30:                                               ; preds = %23
  %31 = shl nsw i64 %28, 1
  %32 = icmp ult i64 %31, %19
  %33 = select i1 %32, i64 %19, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %23, %30
  %36 = phi i64 [ %33, %30 ], [ 230584300921369395, %23 ]
  %37 = mul i64 %36, 80
  %38 = tail call i8* @_Znwm(i64 %37) #15
  %39 = bitcast i8* %38 to %"struct.tflite::optimized_integer_ops::MeanWorkerTask"*
  br label %40

40:                                               ; preds = %30, %35
  %41 = phi i64 [ %36, %35 ], [ 0, %30 ]
  %42 = phi %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* [ %39, %35 ], [ null, %30 ]
  %43 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %42, i64 %18
  %44 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %42, i64 %41
  %45 = ptrtoint %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %44 to i64
  %46 = bitcast i8** %3 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = load i32, i32* %4, align 4
  %49 = load i32, i32* %5, align 4
  %50 = load i32, i32* %6, align 4
  %51 = bitcast i8** %8 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = load i32, i32* %9, align 4
  %54 = load i32, i32* %10, align 4
  %55 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %43, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %42, i64 %18, i32 0, i32 1
  store %"class.gemmlowp::Allocator"* null, %"class.gemmlowp::Allocator"** %56, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6tflite21optimized_integer_ops14MeanWorkerTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %57 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %42, i64 %18, i32 1
  store %"struct.tflite::MeanParams"* %1, %"struct.tflite::MeanParams"** %57, align 8
  %58 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %42, i64 %18, i32 2
  store %"class.tflite::RuntimeShape"* %2, %"class.tflite::RuntimeShape"** %58, align 8
  %59 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %42, i64 %18, i32 3
  %60 = bitcast i8** %59 to i64*
  store i64 %47, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %42, i64 %18, i32 4
  store i32 %48, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %42, i64 %18, i32 5
  store i32 %49, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %42, i64 %18, i32 6
  store i32 %50, i32* %63, align 8
  %64 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %42, i64 %18, i32 7
  store %"class.tflite::RuntimeShape"* %7, %"class.tflite::RuntimeShape"** %64, align 8
  %65 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %42, i64 %18, i32 8
  %66 = bitcast i8** %65 to i64*
  store i64 %52, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %42, i64 %18, i32 9
  store i32 %53, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %42, i64 %18, i32 10
  store i32 %54, i32* %68, align 4
  %69 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %43, i64 1
  %70 = ptrtoint %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %69 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 0
  %72 = load %"struct.tflite::optimized_integer_ops::MeanWorkerTask"*, %"struct.tflite::optimized_integer_ops::MeanWorkerTask"** %71, align 8
  %73 = load %"struct.tflite::optimized_integer_ops::MeanWorkerTask"*, %"struct.tflite::optimized_integer_ops::MeanWorkerTask"** %12, align 8
  %74 = icmp eq %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %73, %72
  br i1 %74, label %75, label %77

75:                                               ; preds = %40
  %76 = ptrtoint %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %72 to i64
  br label %96

77:                                               ; preds = %40, %77
  %78 = phi %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* [ %91, %77 ], [ %43, %40 ]
  %79 = phi %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* [ %80, %77 ], [ %73, %40 ]
  %80 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %79, i64 -1
  %81 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %78, i64 -1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8gemmlowp4TaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %81, align 8
  %82 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %78, i64 -1, i32 0, i32 1
  %83 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %79, i64 -1, i32 0, i32 1
  %84 = bitcast %"class.gemmlowp::Allocator"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.gemmlowp::Allocator"** %82 to i64*
  store i64 %85, i64* %86, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6tflite21optimized_integer_ops14MeanWorkerTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %81, align 8
  %87 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %78, i64 -1, i32 1
  %88 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %79, i64 -1, i32 1
  %89 = bitcast %"struct.tflite::MeanParams"** %87 to i8*
  %90 = bitcast %"struct.tflite::MeanParams"** %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 64, i1 false) #16
  %91 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %78, i64 -1
  %92 = icmp eq %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %80, %72
  br i1 %92, label %93, label %77

93:                                               ; preds = %77
  %94 = load i64, i64* %15, align 8
  %95 = load %"struct.tflite::optimized_integer_ops::MeanWorkerTask"*, %"struct.tflite::optimized_integer_ops::MeanWorkerTask"** %12, align 8
  br label %96

96:                                               ; preds = %75, %93
  %97 = phi %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* [ %72, %75 ], [ %95, %93 ]
  %98 = phi %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* [ %43, %75 ], [ %91, %93 ]
  %99 = phi i64 [ %76, %75 ], [ %94, %93 ]
  %100 = ptrtoint %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %98 to i64
  store i64 %100, i64* %15, align 8
  store i64 %70, i64* %13, align 8
  store i64 %45, i64* %25, align 8
  %101 = inttoptr i64 %99 to %"struct.tflite::optimized_integer_ops::MeanWorkerTask"*
  %102 = icmp eq %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %97, %101
  br i1 %102, label %110, label %103

103:                                              ; preds = %96, %103
  %104 = phi %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* [ %105, %103 ], [ %97, %96 ]
  %105 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %104, i64 -1
  %106 = bitcast %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %105 to void (%"struct.tflite::optimized_integer_ops::MeanWorkerTask"*)***
  %107 = load void (%"struct.tflite::optimized_integer_ops::MeanWorkerTask"*)**, void (%"struct.tflite::optimized_integer_ops::MeanWorkerTask"*)*** %106, align 8
  %108 = load void (%"struct.tflite::optimized_integer_ops::MeanWorkerTask"*)*, void (%"struct.tflite::optimized_integer_ops::MeanWorkerTask"*)** %107, align 8
  tail call void %108(%"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %105) #16
  %109 = icmp eq %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %105, %101
  br i1 %109, label %110, label %103

110:                                              ; preds = %103, %96
  %111 = icmp eq i64 %99, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = inttoptr i64 %99 to i8*
  tail call void @_ZdlPv(i8* %113) #15
  br label %114

114:                                              ; preds = %110, %112
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8gemmlowp11WorkersPool7ExecuteIN6tflite21optimized_integer_ops14MeanWorkerTaskEEEviPT_(%"class.gemmlowp::WorkersPool"*, i32, %"struct.tflite::optimized_integer_ops::MeanWorkerTask"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::chrono::duration.77", align 8
  %5 = add nsw i32 %1, -1
  %6 = sext i32 %5 to i64
  tail call void @_ZN8gemmlowp11WorkersPool13CreateWorkersEm(%"class.gemmlowp::WorkersPool"* %0, i64 %6)
  %7 = getelementptr inbounds %"class.gemmlowp::WorkersPool", %"class.gemmlowp::WorkersPool"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i64, i64* %7 monotonic, align 8
  store atomic i64 %6, i64* %7 release, align 8
  %9 = icmp eq i32 %5, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.gemmlowp::WorkersPool", %"class.gemmlowp::WorkersPool"* %0, i64 0, i32 0, i32 0, i32 0
  br label %35

12:                                               ; preds = %46, %3
  %13 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %2, i64 %6, i32 0
  %14 = getelementptr inbounds %"class.gemmlowp::WorkersPool", %"class.gemmlowp::WorkersPool"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %2, i64 %6, i32 0, i32 1
  store %"class.gemmlowp::Allocator"* %14, %"class.gemmlowp::Allocator"** %15, align 8
  %16 = bitcast %"struct.gemmlowp::Task"* %13 to void (%"struct.gemmlowp::Task"*)***
  %17 = load void (%"struct.gemmlowp::Task"*)**, void (%"struct.gemmlowp::Task"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"struct.gemmlowp::Task"*)*, void (%"struct.gemmlowp::Task"*)** %17, i64 2
  %19 = load void (%"struct.gemmlowp::Task"*)*, void (%"struct.gemmlowp::Task"*)** %18, align 8
  tail call void %19(%"struct.gemmlowp::Task"* %13) #16
  %20 = load atomic i64, i64* %7 acquire, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %34, label %22

22:                                               ; preds = %12
  %23 = bitcast %"class.std::__1::chrono::duration.77"* %4 to i8*
  %24 = getelementptr inbounds %"class.std::__1::chrono::duration.77", %"class.std::__1::chrono::duration.77"* %4, i64 0, i32 0
  br label %25

25:                                               ; preds = %30, %22
  %26 = phi i32 [ 0, %22 ], [ %31, %30 ]
  call void asm sideeffect "nop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0A", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !350
  %27 = add nsw i32 %26, 64
  %28 = icmp sgt i32 %27, 4000000
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #16
  store i64 1000000, i64* %24, align 8
  call void @_ZNSt3__111this_thread9sleep_forERKNS_6chrono8durationIxNS_5ratioILl1ELl1000000000EEEEE(%"class.std::__1::chrono::duration.77"* nonnull dereferenceable(8) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #16
  br label %30

30:                                               ; preds = %29, %25
  %31 = phi i32 [ 0, %29 ], [ %27, %25 ]
  %32 = load atomic i64, i64* %7 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %25

34:                                               ; preds = %30, %12
  ret void

35:                                               ; preds = %10, %46
  %36 = phi i64 [ 0, %10 ], [ %54, %46 ]
  %37 = load %"class.gemmlowp::Worker"**, %"class.gemmlowp::Worker"*** %11, align 8
  %38 = getelementptr inbounds %"class.gemmlowp::Worker"*, %"class.gemmlowp::Worker"** %37, i64 %36
  %39 = load %"class.gemmlowp::Worker"*, %"class.gemmlowp::Worker"** %38, align 8
  %40 = getelementptr inbounds %"class.gemmlowp::Worker", %"class.gemmlowp::Worker"* %39, i64 0, i32 3
  %41 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %40) #16
  %42 = getelementptr inbounds %"class.gemmlowp::Worker", %"class.gemmlowp::Worker"* %39, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = icmp ult i32 %43, 3
  br i1 %44, label %46, label %45

45:                                               ; preds = %35
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %35
  %47 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %2, i64 %36, i32 0
  %48 = getelementptr inbounds %"class.gemmlowp::Worker", %"class.gemmlowp::Worker"* %39, i64 0, i32 5
  %49 = getelementptr inbounds %"struct.tflite::optimized_integer_ops::MeanWorkerTask", %"struct.tflite::optimized_integer_ops::MeanWorkerTask"* %2, i64 %36, i32 0, i32 1
  store %"class.gemmlowp::Allocator"* %48, %"class.gemmlowp::Allocator"** %49, align 8
  %50 = getelementptr inbounds %"class.gemmlowp::Worker", %"class.gemmlowp::Worker"* %39, i64 0, i32 1
  store %"struct.gemmlowp::Task"* %47, %"struct.gemmlowp::Task"** %50, align 8
  store atomic i32 2, i32* %42 monotonic, align 4
  %51 = getelementptr inbounds %"class.gemmlowp::Worker", %"class.gemmlowp::Worker"* %39, i64 0, i32 2
  %52 = tail call i32 @pthread_cond_broadcast(%union.pthread_cond_t* %51) #16
  %53 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %40) #16
  %54 = add nuw i64 %36, 1
  %55 = icmp ult i64 %54, %6
  br i1 %55, label %35, label %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8gemmlowp11WorkersPool13CreateWorkersEm(%"class.gemmlowp::WorkersPool"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::chrono::duration.77", align 8
  %4 = getelementptr inbounds %"class.gemmlowp::WorkersPool", %"class.gemmlowp::WorkersPool"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.gemmlowp::Worker"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.gemmlowp::WorkersPool"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %12, label %130

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.gemmlowp::WorkersPool", %"class.gemmlowp::WorkersPool"* %0, i64 0, i32 1
  %14 = sub i64 %1, %10
  %15 = getelementptr inbounds %"class.gemmlowp::BlockingCounter", %"class.gemmlowp::BlockingCounter"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i64, i64* %15 monotonic, align 8
  store atomic i64 %14, i64* %15 release, align 8
  %17 = load i64, i64* %5, align 8
  %18 = load i64, i64* %7, align 8
  %19 = sub i64 %17, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp ult i64 %20, %1
  br i1 %21, label %22, label %115

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.gemmlowp::WorkersPool", %"class.gemmlowp::WorkersPool"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"class.gemmlowp::Worker"*** %23 to i64*
  %25 = getelementptr inbounds %"class.gemmlowp::WorkersPool", %"class.gemmlowp::WorkersPool"* %0, i64 0, i32 0, i32 0, i32 0
  br label %26

26:                                               ; preds = %22, %109
  %27 = tail call i8* @_Znwm(i64 208) #15
  %28 = getelementptr inbounds i8, i8* %27, i64 8
  %29 = bitcast i8* %28 to %"struct.gemmlowp::Task"**
  store %"struct.gemmlowp::Task"* null, %"struct.gemmlowp::Task"** %29, align 8
  %30 = getelementptr inbounds i8, i8* %27, i64 104
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds i8, i8* %27, i64 112
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds i8, i8* %27, i64 120
  %34 = getelementptr inbounds i8, i8* %27, i64 192
  %35 = bitcast i8* %34 to i64*
  store i64 0, i64* %35, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 32, i1 false) #16
  %36 = getelementptr inbounds i8, i8* %27, i64 200
  %37 = bitcast i8* %36 to %"class.gemmlowp::BlockingCounter"**
  store %"class.gemmlowp::BlockingCounter"* %13, %"class.gemmlowp::BlockingCounter"** %37, align 8
  %38 = getelementptr inbounds i8, i8* %27, i64 16
  %39 = bitcast i8* %38 to %union.pthread_cond_t*
  %40 = tail call i32 @pthread_cond_init(%union.pthread_cond_t* %39, %union.pthread_condattr_t* null) #16
  %41 = getelementptr inbounds i8, i8* %27, i64 64
  %42 = bitcast i8* %41 to %union.pthread_mutex_t*
  %43 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* %42, %union.pthread_mutexattr_t* null) #16
  %44 = bitcast i8* %27 to i64*
  %45 = tail call i32 @pthread_create(i64* nonnull %44, %union.pthread_attr_t* null, i8* (i8*)* nonnull @_ZN8gemmlowp6Worker10ThreadFuncEPv, i8* nonnull %27) #16
  %46 = ptrtoint i8* %27 to i64
  %47 = load %"class.gemmlowp::Worker"**, %"class.gemmlowp::Worker"*** %4, align 8
  %48 = load %"class.gemmlowp::Worker"**, %"class.gemmlowp::Worker"*** %23, align 8
  %49 = icmp ult %"class.gemmlowp::Worker"** %47, %48
  %50 = ptrtoint %"class.gemmlowp::Worker"** %48 to i64
  br i1 %49, label %51, label %55

51:                                               ; preds = %26
  %52 = bitcast %"class.gemmlowp::Worker"** %47 to i64*
  store i64 %46, i64* %52, align 8
  %53 = getelementptr inbounds %"class.gemmlowp::Worker"*, %"class.gemmlowp::Worker"** %47, i64 1
  %54 = ptrtoint %"class.gemmlowp::Worker"** %53 to i64
  store i64 %54, i64* %5, align 8
  br label %109

55:                                               ; preds = %26
  %56 = ptrtoint %"class.gemmlowp::Worker"** %47 to i64
  %57 = load i64, i64* %7, align 8
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = add nsw i64 %59, 1
  %61 = icmp ugt i64 %60, 2305843009213693951
  br i1 %61, label %62, label %64

62:                                               ; preds = %55
  %63 = bitcast %"class.gemmlowp::WorkersPool"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %63) #17
  unreachable

64:                                               ; preds = %55
  %65 = sub i64 %50, %57
  %66 = ashr exact i64 %65, 3
  %67 = icmp ult i64 %66, 1152921504606846975
  br i1 %67, label %68, label %76

68:                                               ; preds = %64
  %69 = ashr exact i64 %65, 2
  %70 = icmp ult i64 %69, %60
  %71 = select i1 %70, i64 %60, i64 %69
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %81, label %73

73:                                               ; preds = %68
  %74 = icmp ugt i64 %71, 2305843009213693951
  br i1 %74, label %75, label %76

75:                                               ; preds = %73
  tail call void @abort() #17
  unreachable

76:                                               ; preds = %73, %64
  %77 = phi i64 [ %71, %73 ], [ 2305843009213693951, %64 ]
  %78 = shl i64 %77, 3
  %79 = tail call i8* @_Znwm(i64 %78) #15
  %80 = bitcast i8* %79 to %"class.gemmlowp::Worker"**
  br label %81

81:                                               ; preds = %76, %68
  %82 = phi i64 [ %77, %76 ], [ 0, %68 ]
  %83 = phi %"class.gemmlowp::Worker"** [ %80, %76 ], [ null, %68 ]
  %84 = getelementptr inbounds %"class.gemmlowp::Worker"*, %"class.gemmlowp::Worker"** %83, i64 %59
  %85 = getelementptr inbounds %"class.gemmlowp::Worker"*, %"class.gemmlowp::Worker"** %83, i64 %82
  %86 = ptrtoint %"class.gemmlowp::Worker"** %85 to i64
  %87 = bitcast %"class.gemmlowp::Worker"** %84 to i64*
  store i64 %46, i64* %87, align 8
  %88 = getelementptr inbounds %"class.gemmlowp::Worker"*, %"class.gemmlowp::Worker"** %84, i64 1
  %89 = ptrtoint %"class.gemmlowp::Worker"** %88 to i64
  %90 = load %"class.gemmlowp::Worker"**, %"class.gemmlowp::Worker"*** %25, align 8
  %91 = load i64, i64* %5, align 8
  %92 = ptrtoint %"class.gemmlowp::Worker"** %90 to i64
  %93 = sub i64 %91, %92
  %94 = ashr exact i64 %93, 3
  %95 = sub nsw i64 0, %94
  %96 = getelementptr inbounds %"class.gemmlowp::Worker"*, %"class.gemmlowp::Worker"** %84, i64 %95
  %97 = ptrtoint %"class.gemmlowp::Worker"** %96 to i64
  %98 = icmp sgt i64 %93, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %81
  %100 = bitcast %"class.gemmlowp::Worker"** %96 to i8*
  %101 = bitcast %"class.gemmlowp::Worker"** %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 %93, i1 false) #16
  %102 = load %"class.gemmlowp::Worker"**, %"class.gemmlowp::Worker"*** %25, align 8
  br label %103

103:                                              ; preds = %99, %81
  %104 = phi %"class.gemmlowp::Worker"** [ %90, %81 ], [ %102, %99 ]
  store i64 %97, i64* %7, align 8
  store i64 %89, i64* %5, align 8
  store i64 %86, i64* %24, align 8
  %105 = icmp eq %"class.gemmlowp::Worker"** %104, null
  br i1 %105, label %109, label %106

106:                                              ; preds = %103
  %107 = bitcast %"class.gemmlowp::Worker"** %104 to i8*
  tail call void @_ZdlPv(i8* %107) #15
  %108 = load i64, i64* %5, align 8
  br label %109

109:                                              ; preds = %51, %103, %106
  %110 = phi i64 [ %54, %51 ], [ %89, %103 ], [ %108, %106 ]
  %111 = load i64, i64* %7, align 8
  %112 = sub i64 %110, %111
  %113 = ashr exact i64 %112, 3
  %114 = icmp ult i64 %113, %1
  br i1 %114, label %26, label %115

115:                                              ; preds = %109, %12
  %116 = load atomic i64, i64* %15 acquire, align 8
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %130, label %118

118:                                              ; preds = %115
  %119 = bitcast %"class.std::__1::chrono::duration.77"* %3 to i8*
  %120 = getelementptr inbounds %"class.std::__1::chrono::duration.77", %"class.std::__1::chrono::duration.77"* %3, i64 0, i32 0
  br label %121

121:                                              ; preds = %126, %118
  %122 = phi i32 [ 0, %118 ], [ %127, %126 ]
  call void asm sideeffect "nop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0A", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !350
  %123 = add nsw i32 %122, 64
  %124 = icmp sgt i32 %123, 4000000
  br i1 %124, label %125, label %126

125:                                              ; preds = %121
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #16
  store i64 1000000, i64* %120, align 8
  call void @_ZNSt3__111this_thread9sleep_forERKNS_6chrono8durationIxNS_5ratioILl1ELl1000000000EEEEE(%"class.std::__1::chrono::duration.77"* nonnull dereferenceable(8) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #16
  br label %126

126:                                              ; preds = %125, %121
  %127 = phi i32 [ 0, %125 ], [ %123, %121 ]
  %128 = load atomic i64, i64* %15 acquire, align 8
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %121

130:                                              ; preds = %126, %115, %2
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_cond_init(%union.pthread_cond_t*, %union.pthread_condattr_t*) local_unnamed_addr #14

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #14

; Function Attrs: nounwind
declare i32 @pthread_create(i64*, %union.pthread_attr_t*, i8* (i8*)*, i8*) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN8gemmlowp6Worker10ThreadFuncEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.gemmlowp::Worker"*
  tail call void @_ZN8gemmlowp6Worker10ThreadFuncEv(%"class.gemmlowp::Worker"* %2)
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8gemmlowp6Worker10ThreadFuncEv(%"class.gemmlowp::Worker"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.gemmlowp::Worker", %"class.gemmlowp::Worker"* %0, i64 0, i32 3
  %3 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %2) #16
  %4 = getelementptr inbounds %"class.gemmlowp::Worker", %"class.gemmlowp::Worker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i32, i32* %4 monotonic, align 4
  %6 = icmp ult i32 %5, 3
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  tail call void @abort() #17
  unreachable

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.gemmlowp::Worker", %"class.gemmlowp::Worker"* %0, i64 0, i32 1
  %10 = load %"struct.gemmlowp::Task"*, %"struct.gemmlowp::Task"** %9, align 8
  %11 = icmp eq %"struct.gemmlowp::Task"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"struct.gemmlowp::Task"* %10 to void (%"struct.gemmlowp::Task"*)***
  %14 = load void (%"struct.gemmlowp::Task"*)**, void (%"struct.gemmlowp::Task"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"struct.gemmlowp::Task"*)*, void (%"struct.gemmlowp::Task"*)** %14, i64 2
  %16 = load void (%"struct.gemmlowp::Task"*)*, void (%"struct.gemmlowp::Task"*)** %15, align 8
  tail call void %16(%"struct.gemmlowp::Task"* nonnull %10) #16
  store %"struct.gemmlowp::Task"* null, %"struct.gemmlowp::Task"** %9, align 8
  br label %17

17:                                               ; preds = %8, %12
  store atomic i32 1, i32* %4 monotonic, align 4
  %18 = getelementptr inbounds %"class.gemmlowp::Worker", %"class.gemmlowp::Worker"* %0, i64 0, i32 2
  %19 = tail call i32 @pthread_cond_broadcast(%union.pthread_cond_t* %18) #16
  %20 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %2) #16
  %21 = getelementptr inbounds %"class.gemmlowp::Worker", %"class.gemmlowp::Worker"* %0, i64 0, i32 6
  br label %22

22:                                               ; preds = %61, %17
  %23 = load %"class.gemmlowp::BlockingCounter"*, %"class.gemmlowp::BlockingCounter"** %21, align 8
  %24 = getelementptr inbounds %"class.gemmlowp::BlockingCounter", %"class.gemmlowp::BlockingCounter"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i64* %24, i64 1 acq_rel
  %26 = load atomic i32, i32* %4 acquire, align 4
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %46

28:                                               ; preds = %22, %31
  %29 = phi i32 [ %32, %31 ], [ 0, %22 ]
  %30 = icmp ult i32 %29, 4000000
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  tail call void asm sideeffect "nop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0A", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !350
  %32 = add nuw nsw i32 %29, 64
  %33 = load atomic i32, i32* %4 acquire, align 4
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %28, label %46

35:                                               ; preds = %28
  %36 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %2) #16
  %37 = load atomic i32, i32* %4 acquire, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %43

39:                                               ; preds = %35, %39
  %40 = tail call i32 @pthread_cond_wait(%union.pthread_cond_t* %18, %union.pthread_mutex_t* %2) #16
  %41 = load atomic i32, i32* %4 acquire, align 4
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %39, label %43

43:                                               ; preds = %39, %35
  %44 = phi i32 [ %37, %35 ], [ %41, %39 ]
  %45 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %2) #16
  br label %46

46:                                               ; preds = %31, %22, %43
  %47 = phi i32 [ %26, %22 ], [ %44, %43 ], [ %33, %31 ]
  switch i32 %47, label %64 [
    i32 2, label %48
    i32 3, label %65
  ]

48:                                               ; preds = %46
  %49 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %2) #16
  %50 = load atomic i32, i32* %4 monotonic, align 4
  %51 = icmp ult i32 %50, 3
  br i1 %51, label %53, label %52

52:                                               ; preds = %48
  tail call void @abort() #17
  unreachable

53:                                               ; preds = %48
  %54 = load %"struct.gemmlowp::Task"*, %"struct.gemmlowp::Task"** %9, align 8
  %55 = icmp eq %"struct.gemmlowp::Task"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %53
  %57 = bitcast %"struct.gemmlowp::Task"* %54 to void (%"struct.gemmlowp::Task"*)***
  %58 = load void (%"struct.gemmlowp::Task"*)**, void (%"struct.gemmlowp::Task"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"struct.gemmlowp::Task"*)*, void (%"struct.gemmlowp::Task"*)** %58, i64 2
  %60 = load void (%"struct.gemmlowp::Task"*)*, void (%"struct.gemmlowp::Task"*)** %59, align 8
  tail call void %60(%"struct.gemmlowp::Task"* nonnull %54) #16
  store %"struct.gemmlowp::Task"* null, %"struct.gemmlowp::Task"** %9, align 8
  br label %61

61:                                               ; preds = %53, %56
  store atomic i32 1, i32* %4 monotonic, align 4
  %62 = tail call i32 @pthread_cond_broadcast(%union.pthread_cond_t* %18) #16
  %63 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %2) #16
  br label %22

64:                                               ; preds = %46
  tail call void @abort() #17
  unreachable

65:                                               ; preds = %46
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #14

; Function Attrs: nounwind
declare i32 @pthread_cond_broadcast(%union.pthread_cond_t*) local_unnamed_addr #14

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #14

declare i32 @pthread_cond_wait(%union.pthread_cond_t*, %union.pthread_mutex_t*) local_unnamed_addr #4

declare void @_ZNSt3__111this_thread9sleep_forERKNS_6chrono8durationIxNS_5ratioILl1ELl1000000000EEEEE(%"class.std::__1::chrono::duration.77"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops8MeanImplERKNS_10MeanParamsERKNS_12RuntimeShapeEPKhiiiS6_Phii(%"struct.tflite::MeanParams"* dereferenceable(10), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i32, i32, i32, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i32, i32) local_unnamed_addr #6 comdat {
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 5
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %15 = getelementptr inbounds %union.anon, %union.anon* %14, i64 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds i32, i32* %16, i64 2
  %18 = bitcast %union.anon* %14 to i32*
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %20 = bitcast [16 x i8]* %19 to i32*
  %21 = select i1 %13, i32* %17, i32* %20
  %22 = select i1 %13, i32* %16, i32* %18
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %21, align 4
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp sgt i32 %26, 5
  %28 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %29 = getelementptr inbounds %union.anon, %union.anon* %28, i64 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 1
  %32 = getelementptr inbounds i32, i32* %30, i64 2
  %33 = bitcast %union.anon* %28 to [5 x i32]*
  %34 = getelementptr inbounds [5 x i32], [5 x i32]* %33, i64 0, i64 1
  %35 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 1
  %36 = bitcast [16 x i8]* %35 to i32*
  %37 = select i1 %27, i32* %31, i32* %34
  %38 = select i1 %27, i32* %32, i32* %36
  %39 = load i32, i32* %37, align 4
  %40 = load i32, i32* %38, align 4
  %41 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 0
  %42 = load i8, i8* %41, align 2
  %43 = icmp eq i8 %42, 2
  br i1 %43, label %45, label %44

44:                                               ; preds = %10
  tail call void @abort() #17
  unreachable

45:                                               ; preds = %10
  %46 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 0
  %47 = load i16, i16* %46, align 2
  switch i16 %47, label %56 [
    i16 1, label %48
    i16 2, label %52
  ]

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 1
  %50 = load i16, i16* %49, align 2
  %51 = icmp eq i16 %50, 2
  br i1 %51, label %57, label %56

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"struct.tflite::MeanParams", %"struct.tflite::MeanParams"* %0, i64 0, i32 1, i64 1
  %54 = load i16, i16* %53, align 2
  %55 = icmp eq i16 %54, 1
  br i1 %55, label %57, label %56

56:                                               ; preds = %45, %48, %52
  tail call void @abort() #17
  unreachable

57:                                               ; preds = %48, %52
  %58 = icmp eq i32 %24, 1
  br i1 %58, label %60, label %59

59:                                               ; preds = %57
  tail call void @abort() #17
  unreachable

60:                                               ; preds = %57
  %61 = icmp sgt i32 %23, 0
  br i1 %61, label %62, label %104

62:                                               ; preds = %60
  %63 = icmp slt i32 %8, %9
  %64 = icmp sgt i32 %39, 0
  %65 = icmp sgt i32 %40, 0
  %66 = bitcast %union.anon* %28 to i32*
  %67 = getelementptr inbounds i32, i32* %66, i64 1
  %68 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 1, i64 4
  %69 = bitcast i8* %68 to i32*
  %70 = icmp sgt i32 %4, 0
  %71 = sub nsw i32 0, %4
  %72 = select i1 %70, i32 0, i32 %71
  %73 = shl i32 1, %4
  %74 = select i1 %70, i32 %73, i32 1
  %75 = sext i32 %3 to i64
  %76 = icmp eq i32 %3, -2147483648
  %77 = zext i32 %72 to i64
  %78 = shl nsw i64 -1, %77
  %79 = trunc i64 %78 to i32
  %80 = xor i32 %79, -1
  %81 = ashr i32 %80, 1
  %82 = getelementptr inbounds i32, i32* %18, i64 1
  %83 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %84 = bitcast i8* %83 to i32*
  %85 = sext i32 %8 to i64
  %86 = sext i32 %9 to i64
  %87 = zext i32 %39 to i64
  %88 = zext i32 %40 to i64
  %89 = and i64 %88, 4294967288
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = icmp ugt i32 %40, 7
  %94 = and i64 %88, 4294967288
  %95 = and i64 %92, 1
  %96 = icmp eq i64 %90, 0
  %97 = sub nuw nsw i64 %92, %95
  %98 = icmp eq i64 %95, 0
  %99 = icmp eq i64 %94, %88
  %100 = and i64 %88, 3
  %101 = icmp eq i64 %100, 0
  br label %102

102:                                              ; preds = %295, %62
  %103 = phi i32 [ 0, %62 ], [ %296, %295 ]
  br i1 %63, label %105, label %295

104:                                              ; preds = %295, %60
  ret void

105:                                              ; preds = %102, %228
  %106 = phi i64 [ %253, %228 ], [ %85, %102 ]
  br i1 %64, label %107, label %213

107:                                              ; preds = %105
  %108 = load i32, i32* %67, align 4
  %109 = mul nsw i32 %108, %103
  %110 = load i32, i32* %36, align 4
  %111 = load i32, i32* %69, align 4
  %112 = sext i32 %111 to i64
  %113 = sext i32 %109 to i64
  %114 = sext i32 %110 to i64
  %115 = icmp eq i32 %111, 1
  %116 = and i1 %93, %115
  br label %117

117:                                              ; preds = %255, %107
  %118 = phi i64 [ 0, %107 ], [ %257, %255 ]
  %119 = phi i32 [ 0, %107 ], [ %256, %255 ]
  br i1 %65, label %120, label %255

120:                                              ; preds = %117
  %121 = add nsw i64 %118, %113
  %122 = mul nsw i64 %121, %114
  br i1 %116, label %123, label %189

123:                                              ; preds = %120
  %124 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %119, i32 0
  br i1 %96, label %160, label %125

125:                                              ; preds = %123, %125
  %126 = phi i64 [ %157, %125 ], [ 0, %123 ]
  %127 = phi <4 x i32> [ %155, %125 ], [ %124, %123 ]
  %128 = phi <4 x i32> [ %156, %125 ], [ zeroinitializer, %123 ]
  %129 = phi i64 [ %158, %125 ], [ %97, %123 ]
  %130 = add nsw i64 %122, %126
  %131 = mul nsw i64 %130, %112
  %132 = add nsw i64 %131, %106
  %133 = getelementptr inbounds i8, i8* %2, i64 %132
  %134 = bitcast i8* %133 to <4 x i8>*
  %135 = load <4 x i8>, <4 x i8>* %134, align 1
  %136 = getelementptr inbounds i8, i8* %133, i64 4
  %137 = bitcast i8* %136 to <4 x i8>*
  %138 = load <4 x i8>, <4 x i8>* %137, align 1
  %139 = zext <4 x i8> %135 to <4 x i32>
  %140 = zext <4 x i8> %138 to <4 x i32>
  %141 = add nsw <4 x i32> %127, %139
  %142 = add nuw nsw <4 x i32> %128, %140
  %143 = or i64 %126, 8
  %144 = add nsw i64 %122, %143
  %145 = mul nsw i64 %144, %112
  %146 = add nsw i64 %145, %106
  %147 = getelementptr inbounds i8, i8* %2, i64 %146
  %148 = bitcast i8* %147 to <4 x i8>*
  %149 = load <4 x i8>, <4 x i8>* %148, align 1
  %150 = getelementptr inbounds i8, i8* %147, i64 4
  %151 = bitcast i8* %150 to <4 x i8>*
  %152 = load <4 x i8>, <4 x i8>* %151, align 1
  %153 = zext <4 x i8> %149 to <4 x i32>
  %154 = zext <4 x i8> %152 to <4 x i32>
  %155 = add nsw <4 x i32> %141, %153
  %156 = add nuw nsw <4 x i32> %142, %154
  %157 = add i64 %126, 16
  %158 = add i64 %129, -2
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %125, !llvm.loop !351

160:                                              ; preds = %125, %123
  %161 = phi <4 x i32> [ undef, %123 ], [ %155, %125 ]
  %162 = phi <4 x i32> [ undef, %123 ], [ %156, %125 ]
  %163 = phi i64 [ 0, %123 ], [ %157, %125 ]
  %164 = phi <4 x i32> [ %124, %123 ], [ %155, %125 ]
  %165 = phi <4 x i32> [ zeroinitializer, %123 ], [ %156, %125 ]
  br i1 %98, label %180, label %166

166:                                              ; preds = %160
  %167 = add nsw i64 %122, %163
  %168 = mul nsw i64 %167, %112
  %169 = add nsw i64 %168, %106
  %170 = getelementptr inbounds i8, i8* %2, i64 %169
  %171 = getelementptr inbounds i8, i8* %170, i64 4
  %172 = bitcast i8* %171 to <4 x i8>*
  %173 = load <4 x i8>, <4 x i8>* %172, align 1
  %174 = zext <4 x i8> %173 to <4 x i32>
  %175 = add nuw nsw <4 x i32> %165, %174
  %176 = bitcast i8* %170 to <4 x i8>*
  %177 = load <4 x i8>, <4 x i8>* %176, align 1
  %178 = zext <4 x i8> %177 to <4 x i32>
  %179 = add nsw <4 x i32> %164, %178
  br label %180

180:                                              ; preds = %160, %166
  %181 = phi <4 x i32> [ %161, %160 ], [ %179, %166 ]
  %182 = phi <4 x i32> [ %162, %160 ], [ %175, %166 ]
  %183 = add <4 x i32> %182, %181
  %184 = shufflevector <4 x i32> %183, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %185 = add <4 x i32> %183, %184
  %186 = shufflevector <4 x i32> %185, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %187 = add <4 x i32> %185, %186
  %188 = extractelement <4 x i32> %187, i32 0
  br i1 %99, label %255, label %189

189:                                              ; preds = %120, %180
  %190 = phi i64 [ 0, %120 ], [ %94, %180 ]
  %191 = phi i32 [ %119, %120 ], [ %188, %180 ]
  %192 = xor i64 %190, -1
  %193 = add nsw i64 %192, %88
  br i1 %101, label %208, label %194

194:                                              ; preds = %189, %194
  %195 = phi i64 [ %205, %194 ], [ %190, %189 ]
  %196 = phi i32 [ %204, %194 ], [ %191, %189 ]
  %197 = phi i64 [ %206, %194 ], [ %100, %189 ]
  %198 = add nsw i64 %122, %195
  %199 = mul nsw i64 %198, %112
  %200 = add nsw i64 %199, %106
  %201 = getelementptr inbounds i8, i8* %2, i64 %200
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i32
  %204 = add nsw i32 %196, %203
  %205 = add nuw nsw i64 %195, 1
  %206 = add i64 %197, -1
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %208, label %194, !llvm.loop !352

208:                                              ; preds = %194, %189
  %209 = phi i32 [ undef, %189 ], [ %204, %194 ]
  %210 = phi i64 [ %190, %189 ], [ %205, %194 ]
  %211 = phi i32 [ %191, %189 ], [ %204, %194 ]
  %212 = icmp ult i64 %193, 3
  br i1 %212, label %255, label %259

213:                                              ; preds = %255, %105
  %214 = phi i32 [ 0, %105 ], [ %256, %255 ]
  %215 = mul nsw i32 %214, %74
  %216 = icmp eq i32 %215, %3
  br i1 %216, label %219, label %217

217:                                              ; preds = %213
  %218 = sext i32 %215 to i64
  br label %220

219:                                              ; preds = %213
  br i1 %76, label %228, label %220

220:                                              ; preds = %219, %217
  %221 = phi i64 [ %218, %217 ], [ %75, %219 ]
  %222 = mul nsw i64 %221, %75
  %223 = icmp sgt i64 %222, -1
  %224 = select i1 %223, i64 1073741824, i64 -1073741823
  %225 = add nsw i64 %224, %222
  %226 = sdiv i64 %225, 2147483648
  %227 = trunc i64 %226 to i32
  br label %228

228:                                              ; preds = %219, %220
  %229 = phi i32 [ %227, %220 ], [ 2147483647, %219 ]
  %230 = and i32 %229, %80
  %231 = lshr i32 %229, 31
  %232 = add nsw i32 %231, %81
  %233 = ashr i32 %229, %72
  %234 = icmp sgt i32 %230, %232
  %235 = zext i1 %234 to i32
  %236 = add i32 %233, %5
  %237 = add i32 %236, %235
  %238 = icmp sgt i32 %237, 0
  %239 = select i1 %238, i32 %237, i32 0
  %240 = icmp slt i32 %239, 255
  %241 = select i1 %240, i32 %239, i32 255
  %242 = trunc i32 %241 to i8
  %243 = load i32, i32* %82, align 4
  %244 = mul nsw i32 %243, %103
  %245 = load i32, i32* %20, align 4
  %246 = mul nsw i32 %244, %245
  %247 = load i32, i32* %84, align 4
  %248 = mul nsw i32 %246, %247
  %249 = trunc i64 %106 to i32
  %250 = add nsw i32 %248, %249
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds i8, i8* %7, i64 %251
  store i8 %242, i8* %252, align 1
  %253 = add nsw i64 %106, 1
  %254 = icmp eq i64 %253, %86
  br i1 %254, label %295, label %105

255:                                              ; preds = %208, %259, %180, %117
  %256 = phi i32 [ %119, %117 ], [ %188, %180 ], [ %209, %208 ], [ %292, %259 ]
  %257 = add nuw nsw i64 %118, 1
  %258 = icmp eq i64 %257, %87
  br i1 %258, label %213, label %117

259:                                              ; preds = %208, %259
  %260 = phi i64 [ %293, %259 ], [ %210, %208 ]
  %261 = phi i32 [ %292, %259 ], [ %211, %208 ]
  %262 = add nsw i64 %122, %260
  %263 = mul nsw i64 %262, %112
  %264 = add nsw i64 %263, %106
  %265 = getelementptr inbounds i8, i8* %2, i64 %264
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i32
  %268 = add nsw i32 %261, %267
  %269 = add nuw nsw i64 %260, 1
  %270 = add nsw i64 %122, %269
  %271 = mul nsw i64 %270, %112
  %272 = add nsw i64 %271, %106
  %273 = getelementptr inbounds i8, i8* %2, i64 %272
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i32
  %276 = add nsw i32 %268, %275
  %277 = add nuw nsw i64 %260, 2
  %278 = add nsw i64 %122, %277
  %279 = mul nsw i64 %278, %112
  %280 = add nsw i64 %279, %106
  %281 = getelementptr inbounds i8, i8* %2, i64 %280
  %282 = load i8, i8* %281, align 1
  %283 = zext i8 %282 to i32
  %284 = add nsw i32 %276, %283
  %285 = add nuw nsw i64 %260, 3
  %286 = add nsw i64 %122, %285
  %287 = mul nsw i64 %286, %112
  %288 = add nsw i64 %287, %106
  %289 = getelementptr inbounds i8, i8* %2, i64 %288
  %290 = load i8, i8* %289, align 1
  %291 = zext i8 %290 to i32
  %292 = add nsw i32 %284, %291
  %293 = add nuw nsw i64 %260, 4
  %294 = icmp eq i64 %293, %88
  br i1 %294, label %255, label %259, !llvm.loop !353

295:                                              ; preds = %228, %102
  %296 = add nuw nsw i32 %103, 1
  %297 = icmp eq i32 %296, %23
  br i1 %297, label %104, label %102
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops14MeanWorkerTaskD0Ev(%"struct.tflite::optimized_ops::MeanWorkerTask"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"struct.tflite::optimized_ops::MeanWorkerTask"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops14MeanWorkerTask3RunEv(%"struct.tflite::optimized_ops::MeanWorkerTask"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %0, i64 0, i32 1
  %3 = load %"struct.tflite::MeanParams"*, %"struct.tflite::MeanParams"** %2, align 8
  %4 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %0, i64 0, i32 2
  %5 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %4, align 8
  %6 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %0, i64 0, i32 3
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %0, i64 0, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %0, i64 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %0, i64 0, i32 7
  %15 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %14, align 8
  %16 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %0, i64 0, i32 8
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %0, i64 0, i32 9
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %0, i64 0, i32 10
  %21 = load i32, i32* %20, align 4
  tail call void @_ZN6tflite13optimized_ops8MeanImplERKNS_10MeanParamsERKNS_12RuntimeShapeEPKhiiiS6_Phii(%"struct.tflite::MeanParams"* dereferenceable(10) %3, %"class.tflite::RuntimeShape"* dereferenceable(32) %5, i8* %7, i32 %9, i32 %11, i32 %13, %"class.tflite::RuntimeShape"* dereferenceable(32) %15, i8* %17, i32 %19, i32 %21)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6tflite13optimized_ops14MeanWorkerTaskENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRKNS1_10MeanParamsERKNS1_12RuntimeShapeERPKhRiSH_SH_SD_RPhSH_SH_EEEvDpOT_(%"class.std::__1::vector.83"*, %"struct.tflite::MeanParams"* dereferenceable(10), %"class.tflite::RuntimeShape"* dereferenceable(32), i8** dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), %"class.tflite::RuntimeShape"* dereferenceable(32), i8** dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #6 comdat align 2 {
  %12 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"struct.tflite::optimized_ops::MeanWorkerTask"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.83"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 80
  %19 = add nsw i64 %18, 1
  %20 = icmp ugt i64 %19, 230584300921369395
  br i1 %20, label %21, label %23

21:                                               ; preds = %11
  %22 = bitcast %"class.std::__1::vector.83"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %22) #17
  unreachable

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"struct.tflite::optimized_ops::MeanWorkerTask"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %16
  %28 = sdiv exact i64 %27, 80
  %29 = icmp ult i64 %28, 115292150460684697
  br i1 %29, label %30, label %35

30:                                               ; preds = %23
  %31 = shl nsw i64 %28, 1
  %32 = icmp ult i64 %31, %19
  %33 = select i1 %32, i64 %19, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %23, %30
  %36 = phi i64 [ %33, %30 ], [ 230584300921369395, %23 ]
  %37 = mul i64 %36, 80
  %38 = tail call i8* @_Znwm(i64 %37) #15
  %39 = bitcast i8* %38 to %"struct.tflite::optimized_ops::MeanWorkerTask"*
  br label %40

40:                                               ; preds = %30, %35
  %41 = phi i64 [ %36, %35 ], [ 0, %30 ]
  %42 = phi %"struct.tflite::optimized_ops::MeanWorkerTask"* [ %39, %35 ], [ null, %30 ]
  %43 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %42, i64 %18
  %44 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %42, i64 %41
  %45 = ptrtoint %"struct.tflite::optimized_ops::MeanWorkerTask"* %44 to i64
  %46 = bitcast i8** %3 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = load i32, i32* %4, align 4
  %49 = load i32, i32* %5, align 4
  %50 = load i32, i32* %6, align 4
  %51 = bitcast i8** %8 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = load i32, i32* %9, align 4
  %54 = load i32, i32* %10, align 4
  %55 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %43, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %42, i64 %18, i32 0, i32 1
  store %"class.gemmlowp::Allocator"* null, %"class.gemmlowp::Allocator"** %56, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6tflite13optimized_ops14MeanWorkerTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %57 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %42, i64 %18, i32 1
  store %"struct.tflite::MeanParams"* %1, %"struct.tflite::MeanParams"** %57, align 8
  %58 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %42, i64 %18, i32 2
  store %"class.tflite::RuntimeShape"* %2, %"class.tflite::RuntimeShape"** %58, align 8
  %59 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %42, i64 %18, i32 3
  %60 = bitcast i8** %59 to i64*
  store i64 %47, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %42, i64 %18, i32 4
  store i32 %48, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %42, i64 %18, i32 5
  store i32 %49, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %42, i64 %18, i32 6
  store i32 %50, i32* %63, align 8
  %64 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %42, i64 %18, i32 7
  store %"class.tflite::RuntimeShape"* %7, %"class.tflite::RuntimeShape"** %64, align 8
  %65 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %42, i64 %18, i32 8
  %66 = bitcast i8** %65 to i64*
  store i64 %52, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %42, i64 %18, i32 9
  store i32 %53, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %42, i64 %18, i32 10
  store i32 %54, i32* %68, align 4
  %69 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %43, i64 1
  %70 = ptrtoint %"struct.tflite::optimized_ops::MeanWorkerTask"* %69 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %0, i64 0, i32 0, i32 0
  %72 = load %"struct.tflite::optimized_ops::MeanWorkerTask"*, %"struct.tflite::optimized_ops::MeanWorkerTask"** %71, align 8
  %73 = load %"struct.tflite::optimized_ops::MeanWorkerTask"*, %"struct.tflite::optimized_ops::MeanWorkerTask"** %12, align 8
  %74 = icmp eq %"struct.tflite::optimized_ops::MeanWorkerTask"* %73, %72
  br i1 %74, label %75, label %77

75:                                               ; preds = %40
  %76 = ptrtoint %"struct.tflite::optimized_ops::MeanWorkerTask"* %72 to i64
  br label %96

77:                                               ; preds = %40, %77
  %78 = phi %"struct.tflite::optimized_ops::MeanWorkerTask"* [ %91, %77 ], [ %43, %40 ]
  %79 = phi %"struct.tflite::optimized_ops::MeanWorkerTask"* [ %80, %77 ], [ %73, %40 ]
  %80 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %79, i64 -1
  %81 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %78, i64 -1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8gemmlowp4TaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %81, align 8
  %82 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %78, i64 -1, i32 0, i32 1
  %83 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %79, i64 -1, i32 0, i32 1
  %84 = bitcast %"class.gemmlowp::Allocator"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.gemmlowp::Allocator"** %82 to i64*
  store i64 %85, i64* %86, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6tflite13optimized_ops14MeanWorkerTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %81, align 8
  %87 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %78, i64 -1, i32 1
  %88 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %79, i64 -1, i32 1
  %89 = bitcast %"struct.tflite::MeanParams"** %87 to i8*
  %90 = bitcast %"struct.tflite::MeanParams"** %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 64, i1 false) #16
  %91 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %78, i64 -1
  %92 = icmp eq %"struct.tflite::optimized_ops::MeanWorkerTask"* %80, %72
  br i1 %92, label %93, label %77

93:                                               ; preds = %77
  %94 = load i64, i64* %15, align 8
  %95 = load %"struct.tflite::optimized_ops::MeanWorkerTask"*, %"struct.tflite::optimized_ops::MeanWorkerTask"** %12, align 8
  br label %96

96:                                               ; preds = %75, %93
  %97 = phi %"struct.tflite::optimized_ops::MeanWorkerTask"* [ %72, %75 ], [ %95, %93 ]
  %98 = phi %"struct.tflite::optimized_ops::MeanWorkerTask"* [ %43, %75 ], [ %91, %93 ]
  %99 = phi i64 [ %76, %75 ], [ %94, %93 ]
  %100 = ptrtoint %"struct.tflite::optimized_ops::MeanWorkerTask"* %98 to i64
  store i64 %100, i64* %15, align 8
  store i64 %70, i64* %13, align 8
  store i64 %45, i64* %25, align 8
  %101 = inttoptr i64 %99 to %"struct.tflite::optimized_ops::MeanWorkerTask"*
  %102 = icmp eq %"struct.tflite::optimized_ops::MeanWorkerTask"* %97, %101
  br i1 %102, label %110, label %103

103:                                              ; preds = %96, %103
  %104 = phi %"struct.tflite::optimized_ops::MeanWorkerTask"* [ %105, %103 ], [ %97, %96 ]
  %105 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %104, i64 -1
  %106 = bitcast %"struct.tflite::optimized_ops::MeanWorkerTask"* %105 to void (%"struct.tflite::optimized_ops::MeanWorkerTask"*)***
  %107 = load void (%"struct.tflite::optimized_ops::MeanWorkerTask"*)**, void (%"struct.tflite::optimized_ops::MeanWorkerTask"*)*** %106, align 8
  %108 = load void (%"struct.tflite::optimized_ops::MeanWorkerTask"*)*, void (%"struct.tflite::optimized_ops::MeanWorkerTask"*)** %107, align 8
  tail call void %108(%"struct.tflite::optimized_ops::MeanWorkerTask"* %105) #16
  %109 = icmp eq %"struct.tflite::optimized_ops::MeanWorkerTask"* %105, %101
  br i1 %109, label %110, label %103

110:                                              ; preds = %103, %96
  %111 = icmp eq i64 %99, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = inttoptr i64 %99 to i8*
  tail call void @_ZdlPv(i8* %113) #15
  br label %114

114:                                              ; preds = %110, %112
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8gemmlowp11WorkersPool7ExecuteIN6tflite13optimized_ops14MeanWorkerTaskEEEviPT_(%"class.gemmlowp::WorkersPool"*, i32, %"struct.tflite::optimized_ops::MeanWorkerTask"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::chrono::duration.77", align 8
  %5 = add nsw i32 %1, -1
  %6 = sext i32 %5 to i64
  tail call void @_ZN8gemmlowp11WorkersPool13CreateWorkersEm(%"class.gemmlowp::WorkersPool"* %0, i64 %6)
  %7 = getelementptr inbounds %"class.gemmlowp::WorkersPool", %"class.gemmlowp::WorkersPool"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i64, i64* %7 monotonic, align 8
  store atomic i64 %6, i64* %7 release, align 8
  %9 = icmp eq i32 %5, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.gemmlowp::WorkersPool", %"class.gemmlowp::WorkersPool"* %0, i64 0, i32 0, i32 0, i32 0
  br label %35

12:                                               ; preds = %46, %3
  %13 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %2, i64 %6, i32 0
  %14 = getelementptr inbounds %"class.gemmlowp::WorkersPool", %"class.gemmlowp::WorkersPool"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %2, i64 %6, i32 0, i32 1
  store %"class.gemmlowp::Allocator"* %14, %"class.gemmlowp::Allocator"** %15, align 8
  %16 = bitcast %"struct.gemmlowp::Task"* %13 to void (%"struct.gemmlowp::Task"*)***
  %17 = load void (%"struct.gemmlowp::Task"*)**, void (%"struct.gemmlowp::Task"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"struct.gemmlowp::Task"*)*, void (%"struct.gemmlowp::Task"*)** %17, i64 2
  %19 = load void (%"struct.gemmlowp::Task"*)*, void (%"struct.gemmlowp::Task"*)** %18, align 8
  tail call void %19(%"struct.gemmlowp::Task"* %13) #16
  %20 = load atomic i64, i64* %7 acquire, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %34, label %22

22:                                               ; preds = %12
  %23 = bitcast %"class.std::__1::chrono::duration.77"* %4 to i8*
  %24 = getelementptr inbounds %"class.std::__1::chrono::duration.77", %"class.std::__1::chrono::duration.77"* %4, i64 0, i32 0
  br label %25

25:                                               ; preds = %30, %22
  %26 = phi i32 [ 0, %22 ], [ %31, %30 ]
  call void asm sideeffect "nop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0Anop\0A", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !350
  %27 = add nsw i32 %26, 64
  %28 = icmp sgt i32 %27, 4000000
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #16
  store i64 1000000, i64* %24, align 8
  call void @_ZNSt3__111this_thread9sleep_forERKNS_6chrono8durationIxNS_5ratioILl1ELl1000000000EEEEE(%"class.std::__1::chrono::duration.77"* nonnull dereferenceable(8) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #16
  br label %30

30:                                               ; preds = %29, %25
  %31 = phi i32 [ 0, %29 ], [ %27, %25 ]
  %32 = load atomic i64, i64* %7 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %25

34:                                               ; preds = %30, %12
  ret void

35:                                               ; preds = %10, %46
  %36 = phi i64 [ 0, %10 ], [ %54, %46 ]
  %37 = load %"class.gemmlowp::Worker"**, %"class.gemmlowp::Worker"*** %11, align 8
  %38 = getelementptr inbounds %"class.gemmlowp::Worker"*, %"class.gemmlowp::Worker"** %37, i64 %36
  %39 = load %"class.gemmlowp::Worker"*, %"class.gemmlowp::Worker"** %38, align 8
  %40 = getelementptr inbounds %"class.gemmlowp::Worker", %"class.gemmlowp::Worker"* %39, i64 0, i32 3
  %41 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %40) #16
  %42 = getelementptr inbounds %"class.gemmlowp::Worker", %"class.gemmlowp::Worker"* %39, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = icmp ult i32 %43, 3
  br i1 %44, label %46, label %45

45:                                               ; preds = %35
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %35
  %47 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %2, i64 %36, i32 0
  %48 = getelementptr inbounds %"class.gemmlowp::Worker", %"class.gemmlowp::Worker"* %39, i64 0, i32 5
  %49 = getelementptr inbounds %"struct.tflite::optimized_ops::MeanWorkerTask", %"struct.tflite::optimized_ops::MeanWorkerTask"* %2, i64 %36, i32 0, i32 1
  store %"class.gemmlowp::Allocator"* %48, %"class.gemmlowp::Allocator"** %49, align 8
  %50 = getelementptr inbounds %"class.gemmlowp::Worker", %"class.gemmlowp::Worker"* %39, i64 0, i32 1
  store %"struct.gemmlowp::Task"* %47, %"struct.gemmlowp::Task"** %50, align 8
  store atomic i32 2, i32* %42 monotonic, align 4
  %51 = getelementptr inbounds %"class.gemmlowp::Worker", %"class.gemmlowp::Worker"* %39, i64 0, i32 2
  %52 = tail call i32 @pthread_cond_broadcast(%union.pthread_cond_t* %51) #16
  %53 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %40) #16
  %54 = add nuw i64 %36, 1
  %55 = icmp ult i64 %54, %6
  br i1 %55, label %35, label %12
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite13reference_ops4MeanIffEEbPKT_PKiiPS2_S6_iS6_ibPiS8_PT0_(float*, i32*, i32, float*, i32*, i32, i32*, i32, i1 zeroext, i32*, i32*, float*) local_unnamed_addr #6 comdat {
  %13 = icmp sgt i32 %5, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %12
  %15 = zext i32 %5 to i64
  br label %113

16:                                               ; preds = %121
  %17 = icmp eq i64 %122, 0
  br i1 %17, label %125, label %18

18:                                               ; preds = %12, %16
  %19 = phi i64 [ %122, %16 ], [ 1, %12 ]
  %20 = icmp ult i64 %19, 8
  br i1 %20, label %21, label %38

21:                                               ; preds = %111, %38, %18
  %22 = phi i64 [ 0, %38 ], [ 0, %18 ], [ %45, %111 ]
  %23 = xor i64 %22, -1
  %24 = add i64 %19, %23
  %25 = and i64 %19, 3
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %21, %27
  %28 = phi i64 [ %32, %27 ], [ %22, %21 ]
  %29 = phi i64 [ %33, %27 ], [ %25, %21 ]
  %30 = getelementptr inbounds float, float* %3, i64 %28
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds float, float* %11, i64 %28
  store float 0.000000e+00, float* %31, align 4
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !354

35:                                               ; preds = %27, %21
  %36 = phi i64 [ %22, %21 ], [ %32, %27 ]
  %37 = icmp ult i64 %24, 3
  br i1 %37, label %125, label %170

38:                                               ; preds = %18
  %39 = getelementptr float, float* %3, i64 %19
  %40 = getelementptr float, float* %11, i64 %19
  %41 = icmp ugt float* %40, %3
  %42 = icmp ugt float* %39, %11
  %43 = and i1 %41, %42
  br i1 %43, label %21, label %44

44:                                               ; preds = %38
  %45 = and i64 %19, -8
  %46 = add i64 %45, -8
  %47 = lshr exact i64 %46, 3
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 3
  %50 = icmp ult i64 %46, 24
  br i1 %50, label %94, label %51

51:                                               ; preds = %44
  %52 = sub nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %91, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %92, %53 ]
  %56 = getelementptr inbounds float, float* %3, i64 %54
  %57 = bitcast float* %56 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %57, align 4, !alias.scope !355, !noalias !358
  %58 = getelementptr inbounds float, float* %56, i64 4
  %59 = bitcast float* %58 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %59, align 4, !alias.scope !355, !noalias !358
  %60 = getelementptr inbounds float, float* %11, i64 %54
  %61 = bitcast float* %60 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %61, align 4, !alias.scope !358
  %62 = getelementptr inbounds float, float* %60, i64 4
  %63 = bitcast float* %62 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %63, align 4, !alias.scope !358
  %64 = or i64 %54, 8
  %65 = getelementptr inbounds float, float* %3, i64 %64
  %66 = bitcast float* %65 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %66, align 4, !alias.scope !355, !noalias !358
  %67 = getelementptr inbounds float, float* %65, i64 4
  %68 = bitcast float* %67 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %68, align 4, !alias.scope !355, !noalias !358
  %69 = getelementptr inbounds float, float* %11, i64 %64
  %70 = bitcast float* %69 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %70, align 4, !alias.scope !358
  %71 = getelementptr inbounds float, float* %69, i64 4
  %72 = bitcast float* %71 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %72, align 4, !alias.scope !358
  %73 = or i64 %54, 16
  %74 = getelementptr inbounds float, float* %3, i64 %73
  %75 = bitcast float* %74 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %75, align 4, !alias.scope !355, !noalias !358
  %76 = getelementptr inbounds float, float* %74, i64 4
  %77 = bitcast float* %76 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %77, align 4, !alias.scope !355, !noalias !358
  %78 = getelementptr inbounds float, float* %11, i64 %73
  %79 = bitcast float* %78 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %79, align 4, !alias.scope !358
  %80 = getelementptr inbounds float, float* %78, i64 4
  %81 = bitcast float* %80 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %81, align 4, !alias.scope !358
  %82 = or i64 %54, 24
  %83 = getelementptr inbounds float, float* %3, i64 %82
  %84 = bitcast float* %83 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %84, align 4, !alias.scope !355, !noalias !358
  %85 = getelementptr inbounds float, float* %83, i64 4
  %86 = bitcast float* %85 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %86, align 4, !alias.scope !355, !noalias !358
  %87 = getelementptr inbounds float, float* %11, i64 %82
  %88 = bitcast float* %87 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %88, align 4, !alias.scope !358
  %89 = getelementptr inbounds float, float* %87, i64 4
  %90 = bitcast float* %89 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %90, align 4, !alias.scope !358
  %91 = add i64 %54, 32
  %92 = add i64 %55, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %53, !llvm.loop !360

94:                                               ; preds = %53, %44
  %95 = phi i64 [ 0, %44 ], [ %91, %53 ]
  %96 = icmp eq i64 %49, 0
  br i1 %96, label %111, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %108, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %109, %97 ], [ %49, %94 ]
  %100 = getelementptr inbounds float, float* %3, i64 %98
  %101 = bitcast float* %100 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %101, align 4, !alias.scope !355, !noalias !358
  %102 = getelementptr inbounds float, float* %100, i64 4
  %103 = bitcast float* %102 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %103, align 4, !alias.scope !355, !noalias !358
  %104 = getelementptr inbounds float, float* %11, i64 %98
  %105 = bitcast float* %104 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %105, align 4, !alias.scope !358
  %106 = getelementptr inbounds float, float* %104, i64 4
  %107 = bitcast float* %106 to <4 x float>*
  store <4 x float> zeroinitializer, <4 x float>* %107, align 4, !alias.scope !358
  %108 = add i64 %98, 8
  %109 = add i64 %99, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %97, !llvm.loop !361

111:                                              ; preds = %97, %94
  %112 = icmp eq i64 %19, %45
  br i1 %112, label %125, label %21

113:                                              ; preds = %121, %14
  %114 = phi i64 [ 0, %14 ], [ %123, %121 ]
  %115 = phi i64 [ 1, %14 ], [ %122, %121 ]
  %116 = getelementptr inbounds i32, i32* %4, i64 %114
  %117 = load i32, i32* %116, align 4
  %118 = sext i32 %117 to i64
  %119 = udiv i64 -1, %118
  %120 = icmp ugt i64 %115, %119
  br i1 %120, label %417, label %121

121:                                              ; preds = %113
  %122 = mul i64 %115, %118
  %123 = add nuw nsw i64 %114, 1
  %124 = icmp eq i64 %123, %15
  br i1 %124, label %16, label %113

125:                                              ; preds = %35, %170, %111, %16
  %126 = phi i64 [ 0, %16 ], [ %19, %111 ], [ %19, %170 ], [ %19, %35 ]
  %127 = sext i32 %7 to i64
  %128 = icmp ne i32 %2, 0
  %129 = icmp sgt i32 %7, 0
  %130 = and i1 %128, %129
  br i1 %130, label %131, label %185

131:                                              ; preds = %125, %164
  %132 = phi i32 [ %165, %164 ], [ 0, %125 ]
  %133 = phi i32 [ %166, %164 ], [ 0, %125 ]
  %134 = phi i32 [ %167, %164 ], [ 0, %125 ]
  %135 = phi i64 [ %168, %164 ], [ 0, %125 ]
  %136 = getelementptr inbounds i32, i32* %6, i64 %135
  %137 = load i32, i32* %136, align 4
  %138 = icmp slt i32 %137, 0
  %139 = select i1 %138, i32 %2, i32 0
  %140 = add nsw i32 %139, %137
  %141 = icmp sgt i32 %140, -1
  %142 = icmp slt i32 %140, %2
  %143 = and i1 %141, %142
  br i1 %143, label %144, label %417

144:                                              ; preds = %131
  %145 = icmp sgt i32 %134, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = sext i32 %134 to i64
  br label %160

148:                                              ; preds = %144
  %149 = sext i32 %133 to i64
  %150 = load i32, i32* %10, align 4
  %151 = icmp eq i32 %150, %140
  br i1 %151, label %164, label %152

152:                                              ; preds = %148, %155
  %153 = phi i64 [ %159, %155 ], [ 1, %148 ]
  %154 = icmp slt i64 %153, %149
  br i1 %154, label %155, label %160

155:                                              ; preds = %152
  %156 = getelementptr inbounds i32, i32* %10, i64 %153
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, %140
  %159 = add nuw nsw i64 %153, 1
  br i1 %158, label %164, label %152

160:                                              ; preds = %152, %146
  %161 = phi i64 [ %147, %146 ], [ %149, %152 ]
  %162 = getelementptr inbounds i32, i32* %10, i64 %161
  store i32 %140, i32* %162, align 4
  %163 = add nsw i32 %132, 1
  br label %164

164:                                              ; preds = %155, %148, %160
  %165 = phi i32 [ %163, %160 ], [ %132, %148 ], [ %132, %155 ]
  %166 = phi i32 [ %163, %160 ], [ %133, %148 ], [ %133, %155 ]
  %167 = phi i32 [ %163, %160 ], [ %134, %148 ], [ %133, %155 ]
  %168 = add nuw nsw i64 %135, 1
  %169 = icmp eq i64 %168, %127
  br i1 %169, label %185, label %131

170:                                              ; preds = %35, %170
  %171 = phi i64 [ %183, %170 ], [ %36, %35 ]
  %172 = getelementptr inbounds float, float* %3, i64 %171
  store float 0.000000e+00, float* %172, align 4
  %173 = getelementptr inbounds float, float* %11, i64 %171
  store float 0.000000e+00, float* %173, align 4
  %174 = add nuw i64 %171, 1
  %175 = getelementptr inbounds float, float* %3, i64 %174
  store float 0.000000e+00, float* %175, align 4
  %176 = getelementptr inbounds float, float* %11, i64 %174
  store float 0.000000e+00, float* %176, align 4
  %177 = add nuw i64 %171, 2
  %178 = getelementptr inbounds float, float* %3, i64 %177
  store float 0.000000e+00, float* %178, align 4
  %179 = getelementptr inbounds float, float* %11, i64 %177
  store float 0.000000e+00, float* %179, align 4
  %180 = add nuw i64 %171, 3
  %181 = getelementptr inbounds float, float* %3, i64 %180
  store float 0.000000e+00, float* %181, align 4
  %182 = getelementptr inbounds float, float* %11, i64 %180
  store float 0.000000e+00, float* %182, align 4
  %183 = add nuw i64 %171, 4
  %184 = icmp eq i64 %183, %19
  br i1 %184, label %125, label %170, !llvm.loop !362

185:                                              ; preds = %164, %125
  %186 = phi i32 [ 0, %125 ], [ %165, %164 ]
  %187 = icmp sgt i32 %2, 0
  br i1 %187, label %190, label %188

188:                                              ; preds = %185
  %189 = zext i32 %2 to i64
  br label %194

190:                                              ; preds = %185
  %191 = bitcast i32* %9 to i8*
  %192 = zext i32 %2 to i64
  %193 = shl nuw nsw i64 %192, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %191, i8 0, i64 %193, i1 false) #16
  br label %194

194:                                              ; preds = %190, %188
  %195 = phi i64 [ %189, %188 ], [ %192, %190 ]
  %196 = icmp eq i32* %10, null
  %197 = icmp slt i32 %186, 1
  %198 = or i1 %196, %197
  %199 = zext i32 %186 to i64
  %200 = icmp eq i32 %2, 0
  %201 = sext i32 %2 to i64
  %202 = add nsw i64 %195, -1
  %203 = and i64 %195, 3
  %204 = icmp ult i64 %202, 3
  %205 = sub nsw i64 %195, %203
  %206 = icmp eq i64 %203, 0
  br label %207

207:                                              ; preds = %309, %194
  br i1 %187, label %208, label %297

208:                                              ; preds = %207
  br i1 %204, label %251, label %209

209:                                              ; preds = %208, %209
  %210 = phi i64 [ %248, %209 ], [ 0, %208 ]
  %211 = phi i64 [ %247, %209 ], [ 0, %208 ]
  %212 = phi i64 [ %249, %209 ], [ %205, %208 ]
  %213 = getelementptr inbounds i32, i32* %1, i64 %210
  %214 = load i32, i32* %213, align 4
  %215 = sext i32 %214 to i64
  %216 = mul i64 %211, %215
  %217 = getelementptr inbounds i32, i32* %9, i64 %210
  %218 = load i32, i32* %217, align 4
  %219 = sext i32 %218 to i64
  %220 = add i64 %216, %219
  %221 = or i64 %210, 1
  %222 = getelementptr inbounds i32, i32* %1, i64 %221
  %223 = load i32, i32* %222, align 4
  %224 = sext i32 %223 to i64
  %225 = mul i64 %220, %224
  %226 = getelementptr inbounds i32, i32* %9, i64 %221
  %227 = load i32, i32* %226, align 4
  %228 = sext i32 %227 to i64
  %229 = add i64 %225, %228
  %230 = or i64 %210, 2
  %231 = getelementptr inbounds i32, i32* %1, i64 %230
  %232 = load i32, i32* %231, align 4
  %233 = sext i32 %232 to i64
  %234 = mul i64 %229, %233
  %235 = getelementptr inbounds i32, i32* %9, i64 %230
  %236 = load i32, i32* %235, align 4
  %237 = sext i32 %236 to i64
  %238 = add i64 %234, %237
  %239 = or i64 %210, 3
  %240 = getelementptr inbounds i32, i32* %1, i64 %239
  %241 = load i32, i32* %240, align 4
  %242 = sext i32 %241 to i64
  %243 = mul i64 %238, %242
  %244 = getelementptr inbounds i32, i32* %9, i64 %239
  %245 = load i32, i32* %244, align 4
  %246 = sext i32 %245 to i64
  %247 = add i64 %243, %246
  %248 = add nuw nsw i64 %210, 4
  %249 = add i64 %212, -4
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %209

251:                                              ; preds = %209, %208
  %252 = phi i64 [ undef, %208 ], [ %247, %209 ]
  %253 = phi i64 [ 0, %208 ], [ %248, %209 ]
  %254 = phi i64 [ 0, %208 ], [ %247, %209 ]
  br i1 %206, label %270, label %255

255:                                              ; preds = %251, %255
  %256 = phi i64 [ %267, %255 ], [ %253, %251 ]
  %257 = phi i64 [ %266, %255 ], [ %254, %251 ]
  %258 = phi i64 [ %268, %255 ], [ %203, %251 ]
  %259 = getelementptr inbounds i32, i32* %1, i64 %256
  %260 = load i32, i32* %259, align 4
  %261 = sext i32 %260 to i64
  %262 = mul i64 %257, %261
  %263 = getelementptr inbounds i32, i32* %9, i64 %256
  %264 = load i32, i32* %263, align 4
  %265 = sext i32 %264 to i64
  %266 = add i64 %262, %265
  %267 = add nuw nsw i64 %256, 1
  %268 = add i64 %258, -1
  %269 = icmp eq i64 %268, 0
  br i1 %269, label %270, label %255, !llvm.loop !363

270:                                              ; preds = %255, %251
  %271 = phi i64 [ %252, %251 ], [ %266, %255 ]
  br label %272

272:                                              ; preds = %270, %293
  %273 = phi i64 [ %295, %293 ], [ 0, %270 ]
  %274 = phi i64 [ %294, %293 ], [ 0, %270 ]
  br i1 %198, label %284, label %277

275:                                              ; preds = %277
  %276 = icmp eq i64 %283, %199
  br i1 %276, label %284, label %277

277:                                              ; preds = %272, %275
  %278 = phi i64 [ %283, %275 ], [ 0, %272 ]
  %279 = getelementptr inbounds i32, i32* %10, i64 %278
  %280 = load i32, i32* %279, align 4
  %281 = zext i32 %280 to i64
  %282 = icmp eq i64 %273, %281
  %283 = add nuw nsw i64 %278, 1
  br i1 %282, label %293, label %275

284:                                              ; preds = %275, %272
  %285 = getelementptr inbounds i32, i32* %1, i64 %273
  %286 = load i32, i32* %285, align 4
  %287 = sext i32 %286 to i64
  %288 = mul i64 %274, %287
  %289 = getelementptr inbounds i32, i32* %9, i64 %273
  %290 = load i32, i32* %289, align 4
  %291 = sext i32 %290 to i64
  %292 = add i64 %288, %291
  br label %293

293:                                              ; preds = %277, %284
  %294 = phi i64 [ %292, %284 ], [ %274, %277 ]
  %295 = add nuw nsw i64 %273, 1
  %296 = icmp eq i64 %295, %195
  br i1 %296, label %297, label %272

297:                                              ; preds = %293, %207
  %298 = phi i64 [ 0, %207 ], [ %271, %293 ]
  %299 = phi i64 [ 0, %207 ], [ %294, %293 ]
  %300 = getelementptr inbounds float, float* %11, i64 %299
  %301 = load float, float* %300, align 4
  %302 = getelementptr inbounds float, float* %0, i64 %298
  %303 = load float, float* %302, align 4
  %304 = fadd float %301, %303
  store float %304, float* %300, align 4
  br i1 %200, label %317, label %305

305:                                              ; preds = %297, %309
  %306 = phi i64 [ %307, %309 ], [ %201, %297 ]
  %307 = add nsw i64 %306, -1
  %308 = icmp sgt i64 %306, 0
  br i1 %308, label %309, label %317

309:                                              ; preds = %305
  %310 = getelementptr inbounds i32, i32* %9, i64 %307
  %311 = load i32, i32* %310, align 4
  %312 = add nsw i32 %311, 1
  %313 = getelementptr inbounds i32, i32* %1, i64 %307
  %314 = load i32, i32* %313, align 4
  %315 = icmp eq i32 %314, %312
  %316 = select i1 %315, i32 0, i32 %312
  store i32 %316, i32* %310, align 4
  br i1 %315, label %305, label %207

317:                                              ; preds = %297, %305
  %318 = icmp sgt i32 %186, 0
  br i1 %318, label %319, label %335

319:                                              ; preds = %317, %331
  %320 = phi i64 [ %333, %331 ], [ 0, %317 ]
  %321 = phi float [ %332, %331 ], [ 1.000000e+00, %317 ]
  %322 = getelementptr inbounds i32, i32* %10, i64 %320
  %323 = load i32, i32* %322, align 4
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds i32, i32* %1, i64 %324
  %326 = load i32, i32* %325, align 4
  %327 = sext i32 %326 to i64
  %328 = uitofp i64 %327 to float
  %329 = fdiv float 0x47EFFFFFE0000000, %321
  %330 = fcmp olt float %329, %328
  br i1 %330, label %417, label %331

331:                                              ; preds = %319
  %332 = fmul float %321, %328
  %333 = add nuw nsw i64 %320, 1
  %334 = icmp eq i64 %333, %199
  br i1 %334, label %335, label %319

335:                                              ; preds = %331, %317
  %336 = phi float [ 1.000000e+00, %317 ], [ %332, %331 ]
  %337 = fcmp ogt float %336, 0.000000e+00
  %338 = icmp ne i64 %126, 0
  %339 = and i1 %337, %338
  br i1 %339, label %340, label %417

340:                                              ; preds = %335
  %341 = icmp ult i64 %126, 4
  br i1 %341, label %390, label %342

342:                                              ; preds = %340
  %343 = getelementptr float, float* %3, i64 %126
  %344 = getelementptr float, float* %11, i64 %126
  %345 = icmp ugt float* %344, %3
  %346 = icmp ugt float* %343, %11
  %347 = and i1 %345, %346
  br i1 %347, label %390, label %348

348:                                              ; preds = %342
  %349 = and i64 %126, -4
  %350 = insertelement <4 x float> undef, float %336, i32 0
  %351 = shufflevector <4 x float> %350, <4 x float> undef, <4 x i32> zeroinitializer
  %352 = add i64 %349, -4
  %353 = lshr exact i64 %352, 2
  %354 = add nuw nsw i64 %353, 1
  %355 = and i64 %354, 1
  %356 = icmp eq i64 %352, 0
  br i1 %356, label %378, label %357

357:                                              ; preds = %348
  %358 = sub nuw nsw i64 %354, %355
  br label %359

359:                                              ; preds = %359, %357
  %360 = phi i64 [ 0, %357 ], [ %375, %359 ]
  %361 = phi i64 [ %358, %357 ], [ %376, %359 ]
  %362 = getelementptr inbounds float, float* %11, i64 %360
  %363 = bitcast float* %362 to <4 x float>*
  %364 = load <4 x float>, <4 x float>* %363, align 4, !alias.scope !364
  %365 = fdiv <4 x float> %364, %351
  %366 = getelementptr inbounds float, float* %3, i64 %360
  %367 = bitcast float* %366 to <4 x float>*
  store <4 x float> %365, <4 x float>* %367, align 4, !alias.scope !367, !noalias !364
  %368 = or i64 %360, 4
  %369 = getelementptr inbounds float, float* %11, i64 %368
  %370 = bitcast float* %369 to <4 x float>*
  %371 = load <4 x float>, <4 x float>* %370, align 4, !alias.scope !364
  %372 = fdiv <4 x float> %371, %351
  %373 = getelementptr inbounds float, float* %3, i64 %368
  %374 = bitcast float* %373 to <4 x float>*
  store <4 x float> %372, <4 x float>* %374, align 4, !alias.scope !367, !noalias !364
  %375 = add i64 %360, 8
  %376 = add i64 %361, -2
  %377 = icmp eq i64 %376, 0
  br i1 %377, label %378, label %359, !llvm.loop !369

378:                                              ; preds = %359, %348
  %379 = phi i64 [ 0, %348 ], [ %375, %359 ]
  %380 = icmp eq i64 %355, 0
  br i1 %380, label %388, label %381

381:                                              ; preds = %378
  %382 = getelementptr inbounds float, float* %11, i64 %379
  %383 = bitcast float* %382 to <4 x float>*
  %384 = load <4 x float>, <4 x float>* %383, align 4, !alias.scope !364
  %385 = fdiv <4 x float> %384, %351
  %386 = getelementptr inbounds float, float* %3, i64 %379
  %387 = bitcast float* %386 to <4 x float>*
  store <4 x float> %385, <4 x float>* %387, align 4, !alias.scope !367, !noalias !364
  br label %388

388:                                              ; preds = %378, %381
  %389 = icmp eq i64 %126, %349
  br i1 %389, label %417, label %390

390:                                              ; preds = %388, %342, %340
  %391 = phi i64 [ 0, %342 ], [ 0, %340 ], [ %349, %388 ]
  %392 = and i64 %126, 1
  %393 = icmp eq i64 %392, 0
  br i1 %393, label %400, label %394

394:                                              ; preds = %390
  %395 = getelementptr inbounds float, float* %11, i64 %391
  %396 = load float, float* %395, align 4
  %397 = fdiv float %396, %336
  %398 = getelementptr inbounds float, float* %3, i64 %391
  store float %397, float* %398, align 4
  %399 = or i64 %391, 1
  br label %400

400:                                              ; preds = %390, %394
  %401 = phi i64 [ %391, %390 ], [ %399, %394 ]
  %402 = or i64 %391, 1
  %403 = icmp eq i64 %126, %402
  br i1 %403, label %417, label %404

404:                                              ; preds = %400, %404
  %405 = phi i64 [ %415, %404 ], [ %401, %400 ]
  %406 = getelementptr inbounds float, float* %11, i64 %405
  %407 = load float, float* %406, align 4
  %408 = fdiv float %407, %336
  %409 = getelementptr inbounds float, float* %3, i64 %405
  store float %408, float* %409, align 4
  %410 = add nuw i64 %405, 1
  %411 = getelementptr inbounds float, float* %11, i64 %410
  %412 = load float, float* %411, align 4
  %413 = fdiv float %412, %336
  %414 = getelementptr inbounds float, float* %3, i64 %410
  store float %413, float* %414, align 4
  %415 = add nuw i64 %405, 2
  %416 = icmp eq i64 %415, %126
  br i1 %416, label %417, label %404, !llvm.loop !370

417:                                              ; preds = %113, %131, %319, %400, %404, %388, %335
  %418 = phi i1 [ true, %335 ], [ true, %388 ], [ true, %404 ], [ true, %400 ], [ false, %319 ], [ false, %131 ], [ false, %113 ]
  ret i1 %418
}

; Function Attrs: nounwind readnone speculatable
declare <4 x float> @llvm.round.v4f32(<4 x float>) #10

; Function Attrs: nounwind readnone speculatable
declare <4 x float> @llvm.minnum.v4f32(<4 x float>, <4 x float>) #10

; Function Attrs: nounwind readnone speculatable
declare <4 x float> @llvm.maxnum.v4f32(<4 x float>, <4 x float>) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = !{i8 0, i8 2}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
!10 = !{!11}
!11 = distinct !{!11, !12}
!12 = distinct !{!12, !"LVerDomain"}
!13 = !{!14}
!14 = distinct !{!14, !12}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.isvectorized", i32 1}
!17 = distinct !{!17, !16}
!18 = distinct !{!18, !3}
!19 = distinct !{!19, !16}
!20 = distinct !{!20, !21, !16}
!21 = !{!"llvm.loop.unroll.runtime.disable"}
!22 = distinct !{!22, !3}
!23 = distinct !{!23, !3}
!24 = distinct !{!24, !3}
!25 = distinct !{!25, !3}
!26 = distinct !{!26, !3}
!27 = distinct !{!27, !3}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !16}
!34 = distinct !{!34, !3}
!35 = distinct !{!35, !16}
!36 = distinct !{!36, !3}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !16}
!43 = distinct !{!43, !16}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !16}
!50 = distinct !{!50, !16}
!51 = distinct !{!51, !3}
!52 = !{!53}
!53 = distinct !{!53, !54}
!54 = distinct !{!54, !"LVerDomain"}
!55 = !{!56}
!56 = distinct !{!56, !54}
!57 = distinct !{!57, !16}
!58 = distinct !{!58, !3}
!59 = distinct !{!59, !16}
!60 = distinct !{!60, !3}
!61 = !{!62}
!62 = distinct !{!62, !63}
!63 = distinct !{!63, !"LVerDomain"}
!64 = !{!65}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !16}
!67 = distinct !{!67, !16}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !16}
!74 = distinct !{!74, !16}
!75 = distinct !{!75, !3}
!76 = distinct !{!76, !3}
!77 = distinct !{!77, !3}
!78 = distinct !{!78, !3}
!79 = !{!80}
!80 = distinct !{!80, !81}
!81 = distinct !{!81, !"LVerDomain"}
!82 = !{!83}
!83 = distinct !{!83, !81}
!84 = distinct !{!84, !16}
!85 = distinct !{!85, !16}
!86 = distinct !{!86, !3}
!87 = distinct !{!87, !16}
!88 = distinct !{!88, !21, !16}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!91 = distinct !{!91, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!94 = distinct !{!94, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!95 = distinct !{!95, !3}
!96 = !{!97}
!97 = distinct !{!97, !98}
!98 = distinct !{!98, !"LVerDomain"}
!99 = !{!100}
!100 = distinct !{!100, !98}
!101 = distinct !{!101, !16}
!102 = distinct !{!102, !16}
!103 = distinct !{!103, !3}
!104 = distinct !{!104, !16}
!105 = distinct !{!105, !21, !16}
!106 = !{!107}
!107 = distinct !{!107, !108, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!108 = distinct !{!108, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!109 = !{!110}
!110 = distinct !{!110, !111, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!111 = distinct !{!111, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!112 = distinct !{!112, !3}
!113 = !{!114}
!114 = distinct !{!114, !115}
!115 = distinct !{!115, !"LVerDomain"}
!116 = !{!117}
!117 = distinct !{!117, !115}
!118 = distinct !{!118, !16}
!119 = distinct !{!119, !16}
!120 = distinct !{!120, !3}
!121 = distinct !{!121, !16}
!122 = distinct !{!122, !21, !16}
!123 = !{!124}
!124 = distinct !{!124, !125, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!125 = distinct !{!125, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!126 = !{!127}
!127 = distinct !{!127, !128, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!128 = distinct !{!128, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!129 = distinct !{!129, !16}
!130 = distinct !{!130, !3}
!131 = distinct !{!131, !3}
!132 = distinct !{!132, !3}
!133 = distinct !{!133, !3}
!134 = distinct !{!134, !3}
!135 = distinct !{!135, !21, !16}
!136 = distinct !{!136, !3}
!137 = !{!138}
!138 = distinct !{!138, !139}
!139 = distinct !{!139, !"LVerDomain"}
!140 = !{!141}
!141 = distinct !{!141, !139}
!142 = distinct !{!142, !16}
!143 = distinct !{!143, !16}
!144 = distinct !{!144, !3}
!145 = distinct !{!145, !16}
!146 = distinct !{!146, !21, !16}
!147 = !{!148}
!148 = distinct !{!148, !149, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!149 = distinct !{!149, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!150 = !{!151}
!151 = distinct !{!151, !152, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!152 = distinct !{!152, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!153 = distinct !{!153, !3}
!154 = !{!155}
!155 = distinct !{!155, !156}
!156 = distinct !{!156, !"LVerDomain"}
!157 = !{!158}
!158 = distinct !{!158, !156}
!159 = distinct !{!159, !16}
!160 = distinct !{!160, !16}
!161 = distinct !{!161, !3}
!162 = distinct !{!162, !16}
!163 = distinct !{!163, !21, !16}
!164 = !{!165}
!165 = distinct !{!165, !166, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!166 = distinct !{!166, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!167 = !{!168}
!168 = distinct !{!168, !169, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!169 = distinct !{!169, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!170 = distinct !{!170, !3}
!171 = distinct !{!171, !3}
!172 = distinct !{!172, !3}
!173 = distinct !{!173, !3}
!174 = !{!175}
!175 = distinct !{!175, !176}
!176 = distinct !{!176, !"LVerDomain"}
!177 = !{!178}
!178 = distinct !{!178, !176}
!179 = distinct !{!179, !16}
!180 = distinct !{!180, !16}
!181 = distinct !{!181, !3}
!182 = distinct !{!182, !16}
!183 = distinct !{!183, !21, !16}
!184 = !{!185}
!185 = distinct !{!185, !186, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!186 = distinct !{!186, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!187 = !{!188}
!188 = distinct !{!188, !189, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!189 = distinct !{!189, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!190 = distinct !{!190, !16}
!191 = distinct !{!191, !3}
!192 = distinct !{!192, !3}
!193 = distinct !{!193, !3}
!194 = distinct !{!194, !3}
!195 = distinct !{!195, !3}
!196 = distinct !{!196, !21, !16}
!197 = distinct !{!197, !3}
!198 = !{!199}
!199 = distinct !{!199, !200}
!200 = distinct !{!200, !"LVerDomain"}
!201 = !{!202}
!202 = distinct !{!202, !200}
!203 = distinct !{!203, !16}
!204 = distinct !{!204, !16}
!205 = distinct !{!205, !3}
!206 = distinct !{!206, !16}
!207 = distinct !{!207, !21, !16}
!208 = !{!209}
!209 = distinct !{!209, !210, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!210 = distinct !{!210, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!211 = !{!212}
!212 = distinct !{!212, !213, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!213 = distinct !{!213, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!214 = distinct !{!214, !3}
!215 = !{!216}
!216 = distinct !{!216, !217}
!217 = distinct !{!217, !"LVerDomain"}
!218 = !{!219}
!219 = distinct !{!219, !217}
!220 = distinct !{!220, !16}
!221 = distinct !{!221, !16}
!222 = distinct !{!222, !3}
!223 = distinct !{!223, !16}
!224 = distinct !{!224, !21, !16}
!225 = !{!226}
!226 = distinct !{!226, !227, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!227 = distinct !{!227, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!228 = !{!229}
!229 = distinct !{!229, !230, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!230 = distinct !{!230, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!231 = distinct !{!231, !3}
!232 = distinct !{!232, !3}
!233 = distinct !{!233, !3}
!234 = distinct !{!234, !16}
!235 = distinct !{!235, !3}
!236 = distinct !{!236, !21, !16}
!237 = distinct !{!237, !3}
!238 = distinct !{!238, !3}
!239 = distinct !{!239, !3}
!240 = distinct !{!240, !16}
!241 = distinct !{!241, !3}
!242 = distinct !{!242, !21, !16}
!243 = distinct !{!243, !3}
!244 = distinct !{!244, !3}
!245 = distinct !{!245, !3}
!246 = distinct !{!246, !16}
!247 = distinct !{!247, !3}
!248 = distinct !{!248, !21, !16}
!249 = distinct !{!249, !3}
!250 = distinct !{!250, !3}
!251 = distinct !{!251, !3}
!252 = distinct !{!252, !3}
!253 = distinct !{!253, !3}
!254 = distinct !{!254, !3}
!255 = distinct !{!255, !3}
!256 = !{!257}
!257 = distinct !{!257, !258, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!258 = distinct !{!258, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!259 = !{!260}
!260 = distinct !{!260, !261, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!261 = distinct !{!261, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!262 = distinct !{!262, !16}
!263 = distinct !{!263, !3}
!264 = distinct !{!264, !21, !16}
!265 = !{!266}
!266 = distinct !{!266, !267, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!267 = distinct !{!267, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!268 = !{!269}
!269 = distinct !{!269, !270, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!270 = distinct !{!270, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!271 = distinct !{!271, !16}
!272 = distinct !{!272, !3}
!273 = distinct !{!273, !21, !16}
!274 = !{!275}
!275 = distinct !{!275, !276, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!276 = distinct !{!276, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!277 = !{!278}
!278 = distinct !{!278, !279, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!279 = distinct !{!279, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!280 = distinct !{!280, !16}
!281 = distinct !{!281, !3}
!282 = distinct !{!282, !21, !16}
!283 = distinct !{!283, !3}
!284 = distinct !{!284, !3}
!285 = !{!286}
!286 = distinct !{!286, !287}
!287 = distinct !{!287, !"LVerDomain"}
!288 = !{!289}
!289 = distinct !{!289, !287}
!290 = distinct !{!290, !16}
!291 = distinct !{!291, !3}
!292 = distinct !{!292, !16}
!293 = distinct !{!293, !3}
!294 = distinct !{!294, !3}
!295 = !{!296}
!296 = distinct !{!296, !297}
!297 = distinct !{!297, !"LVerDomain"}
!298 = !{!299}
!299 = distinct !{!299, !297}
!300 = distinct !{!300, !16}
!301 = distinct !{!301, !3}
!302 = distinct !{!302, !16}
!303 = distinct !{!303, !3}
!304 = !{!305}
!305 = distinct !{!305, !306, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!306 = distinct !{!306, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!307 = !{!308}
!308 = distinct !{!308, !309, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!309 = distinct !{!309, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!310 = distinct !{!310, !16}
!311 = distinct !{!311, !3}
!312 = distinct !{!312, !21, !16}
!313 = distinct !{!313, !16}
!314 = distinct !{!314, !16}
!315 = distinct !{!315, !3}
!316 = !{!317}
!317 = distinct !{!317, !318}
!318 = distinct !{!318, !"LVerDomain"}
!319 = !{!320}
!320 = distinct !{!320, !318}
!321 = distinct !{!321, !16}
!322 = distinct !{!322, !3}
!323 = distinct !{!323, !16}
!324 = distinct !{!324, !3}
!325 = !{!326}
!326 = distinct !{!326, !327, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!327 = distinct !{!327, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!328 = !{!329}
!329 = distinct !{!329, !330, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!330 = distinct !{!330, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!331 = distinct !{!331, !16}
!332 = distinct !{!332, !3}
!333 = distinct !{!333, !21, !16}
!334 = distinct !{!334, !16}
!335 = distinct !{!335, !3}
!336 = distinct !{!336, !16}
!337 = distinct !{!337, !3}
!338 = !{!339}
!339 = distinct !{!339, !340}
!340 = distinct !{!340, !"LVerDomain"}
!341 = !{!342}
!342 = distinct !{!342, !340}
!343 = distinct !{!343, !16}
!344 = distinct !{!344, !3}
!345 = distinct !{!345, !16}
!346 = distinct !{!346, !3}
!347 = distinct !{!347, !16}
!348 = distinct !{!348, !3}
!349 = distinct !{!349, !16}
!350 = !{i32 -2143045970, i32 -2143045961, i32 -2143045953, i32 -2143045945, i32 -2143045937, i32 -2143045929, i32 -2143045921, i32 -2143045913, i32 -2143045905, i32 -2143045897, i32 -2143045889, i32 -2143045881, i32 -2143045873, i32 -2143045865, i32 -2143045857, i32 -2143045849, i32 -2143045841, i32 -2143045833, i32 -2143045825, i32 -2143045817, i32 -2143045809, i32 -2143045801, i32 -2143045793, i32 -2143045785, i32 -2143045777, i32 -2143045769, i32 -2143045761, i32 -2143045753, i32 -2143045745, i32 -2143045737, i32 -2143045729, i32 -2143045721, i32 -2143045713, i32 -2143045705, i32 -2143045697, i32 -2143045689, i32 -2143045681, i32 -2143045673, i32 -2143045665, i32 -2143045657, i32 -2143045649, i32 -2143045641, i32 -2143045633, i32 -2143045625, i32 -2143045617, i32 -2143045609, i32 -2143045601, i32 -2143045593, i32 -2143045585, i32 -2143045577, i32 -2143045569, i32 -2143045561, i32 -2143045553, i32 -2143045545, i32 -2143045537, i32 -2143045529, i32 -2143045521, i32 -2143045513, i32 -2143045505, i32 -2143045497, i32 -2143045489, i32 -2143045481, i32 -2143045473, i32 -2143045465}
!351 = distinct !{!351, !16}
!352 = distinct !{!352, !3}
!353 = distinct !{!353, !16}
!354 = distinct !{!354, !3}
!355 = !{!356}
!356 = distinct !{!356, !357}
!357 = distinct !{!357, !"LVerDomain"}
!358 = !{!359}
!359 = distinct !{!359, !357}
!360 = distinct !{!360, !16}
!361 = distinct !{!361, !3}
!362 = distinct !{!362, !16}
!363 = distinct !{!363, !3}
!364 = !{!365}
!365 = distinct !{!365, !366}
!366 = distinct !{!366, !"LVerDomain"}
!367 = !{!368}
!368 = distinct !{!368, !366}
!369 = distinct !{!369, !16}
!370 = distinct !{!370, !16}
