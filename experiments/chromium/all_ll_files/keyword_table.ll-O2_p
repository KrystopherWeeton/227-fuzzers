; ModuleID = '../../components/search_engines/keyword_table.cc'
source_filename = "../../components/search_engines/keyword_table.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%class.KeywordTable = type { %class.WebDatabaseTable }
%class.WebDatabaseTable = type { i32 (...)**, %"class.sql::Database"*, %"class.sql::MetaTable"* }
%"class.sql::Database" = type { %struct.sqlite3*, %"struct.sql::DatabaseOptions", %"class.base::flat_map", %"class.std::__1::set", i32, i8, i8, i8, i8, i8, i8, i32, %"class.base::RepeatingCallback", %"class.std::__1::basic_string", %"class.base::HistogramBase"*, %"class.std::__1::unique_ptr" }
%struct.sqlite3 = type opaque
%"struct.sql::DatabaseOptions" = type { i8, i8, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::HistogramBase" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.sql::DatabaseMemoryDumpProvider"* }
%"class.sql::DatabaseMemoryDumpProvider" = type opaque
%"class.sql::MetaTable" = type { %"class.sql::Database"* }
%class.WebDatabase = type { i32 (...)**, %"class.sql::Database", %"class.sql::MetaTable", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.18" }
%"class.std::__1::__tree.18" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.sql::Transaction" = type <{ %"class.sql::Database"*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.sql::Statement" = type <{ %class.scoped_refptr.64, i8, i8, [6 x i8] }>
%class.scoped_refptr.64 = type { %"class.sql::Database::StatementRef"* }
%"class.sql::Database::StatementRef" = type <{ %"class.base::RefCounted", [4 x i8], %"class.sql::Database"*, %struct.sqlite3_stmt*, i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%struct.sqlite3_stmt = type opaque
%"class.std::__1::vector.76" = type { %"class.std::__1::__vector_base.77" }
%"class.std::__1::__vector_base.77" = type { %"class.std::__1::tuple"*, %"class.std::__1::tuple"*, %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.78", %"class.std::__1::__tuple_leaf.79", %"class.std::__1::__tuple_leaf.80" }
%"class.std::__1::__tuple_leaf" = type { i64 }
%"class.std::__1::__tuple_leaf.78" = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__tuple_leaf.79" = type { %"class.base::Time" }
%"class.std::__1::__tuple_leaf.80" = type { %"class.base::Time" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.std::__1::tuple"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"struct.std::__1::pair.29"*, %"struct.std::__1::pair.29"*, %"class.std::__1::__compressed_pair.52" }
%"struct.std::__1::pair.29" = type { i32, %struct.TemplateURLData }
%struct.TemplateURLData = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.GURL, %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.GURL, %class.GURL, i8, %"class.std::__1::vector.36", i64, %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.36", %"class.std::__1::basic_string.43", %"class.std::__1::basic_string.43", %"class.std::__1::basic_string" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.30" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.GURL* }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.46 }
%union.anon.46 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::pair.29"* }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %struct.TemplateURLData*, %struct.TemplateURLData*, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %struct.TemplateURLData* }
%"class.std::__1::set.65" = type { %"class.std::__1::__tree.66" }
%"class.std::__1::__tree.66" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i64 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.87 }
%union.anon.87 = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.88" }
%"union.absl::variant_internal::DestructibleUnionImpl.88" = type { %"union.absl::variant_internal::DestructibleUnionImpl.89" }
%"union.absl::variant_internal::DestructibleUnionImpl.89" = type { %"union.absl::variant_internal::DestructibleUnionImpl.90" }
%"union.absl::variant_internal::DestructibleUnionImpl.90" = type { %"union.absl::variant_internal::DestructibleUnionImpl.91" }
%"union.absl::variant_internal::DestructibleUnionImpl.91" = type { %"class.std::__1::basic_string" }
%"class.base::ListValue" = type { %"class.base::Value" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.47 }
%struct.anon.47 = type { %"struct.std::__1::__padding.48", i8 }
%"struct.std::__1::__padding.48" = type { [1 x i8] }
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.base::Value"* }
%"class.std::__1::vector.120" = type { %"class.std::__1::__vector_base.121" }
%"class.std::__1::__vector_base.121" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.122" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.base::BasicStringPiece"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE7destroyEPNS_11__tree_nodeIlPvEE = comdat any

$_ZNSt3__16vectorI15TemplateURLDataNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

@_ZN12KeywordTable25kDefaultSearchProviderKeyE = hidden constant [27 x i8] c"Default Search Provider ID\00", align 16
@_ZTV12KeywordTable = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.KeywordTable*)* @_ZN12KeywordTableD2Ev to i8*), i8* bitcast (void (%class.KeywordTable*)* @_ZN12KeywordTableD0Ev to i8*), i8* bitcast (i8* (%class.KeywordTable*)* @_ZNK12KeywordTable10GetTypeKeyEv to i8*), i8* bitcast (i1 (%class.KeywordTable*)* @_ZN12KeywordTable23CreateTablesIfNecessaryEv to i8*), i8* bitcast (i1 (%class.KeywordTable*)* @_ZN12KeywordTable10IsSyncableEv to i8*), i8* bitcast (i1 (%class.KeywordTable*, i32, i8*)* @_ZN12KeywordTable16MigrateToVersionEiPb to i8*)] }, align 8
@.str = private unnamed_addr constant [9 x i8] c"keywords\00", align 1
@.str.1 = private unnamed_addr constant [653 x i8] c"CREATE TABLE keywords (id INTEGER PRIMARY KEY,short_name VARCHAR NOT NULL,keyword VARCHAR NOT NULL,favicon_url VARCHAR NOT NULL,url VARCHAR NOT NULL,safe_for_autoreplace INTEGER,originating_url VARCHAR,date_created INTEGER DEFAULT 0,usage_count INTEGER DEFAULT 0,input_encodings VARCHAR,suggest_url VARCHAR,prepopulate_id INTEGER DEFAULT 0,created_by_policy INTEGER DEFAULT 0,last_modified INTEGER DEFAULT 0,sync_guid VARCHAR,alternate_urls VARCHAR,image_url VARCHAR,search_url_post_params VARCHAR,suggest_url_post_params VARCHAR,image_url_post_params VARCHAR,new_tab_url VARCHAR,last_visited INTEGER DEFAULT 0, created_from_play_api INTEGER DEFAULT 0)\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"SELECT \00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c" FROM keywords ORDER BY id ASC\00", align 1
@_ZN12_GLOBAL__N_122kBuiltinKeywordVersionE = internal constant [24 x i8] c"Builtin Keyword Version\00", align 16
@_ZN11WebDatabase21kCurrentVersionNumberE = external local_unnamed_addr constant i32, align 4
@.str.4 = private unnamed_addr constant [63 x i8] c"ALTER TABLE keywords ADD COLUMN new_tab_url VARCHAR DEFAULT ''\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"DELETE FROM keywords WHERE url LIKE 'chrome-extension://%'\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"INSERT INTO temp_keywords SELECT \00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c" FROM keywords\00", align 1
@.str.8 = private unnamed_addr constant [675 x i8] c"CREATE TABLE temp_keywords (id INTEGER PRIMARY KEY,short_name VARCHAR NOT NULL,keyword VARCHAR NOT NULL,favicon_url VARCHAR NOT NULL,url VARCHAR NOT NULL,safe_for_autoreplace INTEGER,originating_url VARCHAR,date_created INTEGER DEFAULT 0,usage_count INTEGER DEFAULT 0,input_encodings VARCHAR,suggest_url VARCHAR,prepopulate_id INTEGER DEFAULT 0,created_by_policy INTEGER DEFAULT 0,instant_url VARCHAR,last_modified INTEGER DEFAULT 0,sync_guid VARCHAR,alternate_urls VARCHAR,search_terms_replacement_key VARCHAR,image_url VARCHAR,search_url_post_params VARCHAR,suggest_url_post_params VARCHAR,instant_url_post_params VARCHAR,image_url_post_params VARCHAR,new_tab_url VARCHAR)\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"DROP TABLE keywords\00", align 1
@.str.10 = private unnamed_addr constant [45 x i8] c"ALTER TABLE temp_keywords RENAME TO keywords\00", align 1
@.str.11 = private unnamed_addr constant [63 x i8] c"ALTER TABLE keywords ADD COLUMN last_visited INTEGER DEFAULT 0\00", align 1
@.str.12 = private unnamed_addr constant [617 x i8] c"CREATE TABLE temp_keywords (id INTEGER PRIMARY KEY,short_name VARCHAR NOT NULL,keyword VARCHAR NOT NULL,favicon_url VARCHAR NOT NULL,url VARCHAR NOT NULL,safe_for_autoreplace INTEGER,originating_url VARCHAR,date_created INTEGER DEFAULT 0,usage_count INTEGER DEFAULT 0,input_encodings VARCHAR,suggest_url VARCHAR,prepopulate_id INTEGER DEFAULT 0,created_by_policy INTEGER DEFAULT 0,last_modified INTEGER DEFAULT 0,sync_guid VARCHAR,alternate_urls VARCHAR,image_url VARCHAR,search_url_post_params VARCHAR,suggest_url_post_params VARCHAR,image_url_post_params VARCHAR,new_tab_url VARCHAR,last_visited INTEGER DEFAULT 0)\00", align 1
@.str.13 = private unnamed_addr constant [67 x i8] c"SELECT id, date_created, last_modified, last_visited FROM keywords\00", align 1
@.str.14 = private unnamed_addr constant [49 x i8] c"../../components/search_engines/keyword_table.cc\00", align 1
@.str.15 = private unnamed_addr constant [88 x i8] c"UPDATE keywords SET date_created = ?, last_modified = ?, last_visited = ? WHERE id = ? \00", align 1
@.str.16 = private unnamed_addr constant [72 x i8] c"ALTER TABLE keywords ADD COLUMN created_from_play_api INTEGER DEFAULT 0\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"INSERT INTO keywords (\00", align 1
@.str.19 = private unnamed_addr constant [57 x i8] c") VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\00", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c"DELETE FROM keywords WHERE id = ?\00", align 1
@.str.21 = private unnamed_addr constant [419 x i8] c"UPDATE keywords SET short_name=?, keyword=?, favicon_url=?, url=?, safe_for_autoreplace=?, originating_url=?, date_created=?, usage_count=?, input_encodings=?, suggest_url=?, prepopulate_id=?, created_by_policy=?, last_modified=?, sync_guid=?, alternate_urls=?, image_url=?, search_url_post_params=?, suggest_url_post_params=?, image_url_post_params=?, new_tab_url=?, last_visited=?, created_from_play_api=? WHERE id=?\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c" FROM \00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c" WHERE id=?\00", align 1
@.str.24 = private unnamed_addr constant [21 x i8] c"No keyword with id: \00", align 1
@.str.25 = private unnamed_addr constant [12 x i8] c", ignoring.\00", align 1
@_ZZN12_GLOBAL__N_16GetKeyEvE9table_key = internal global i32 0, align 4
@.str.26 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"short_name\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"keyword\00", align 1
@.str.29 = private unnamed_addr constant [12 x i8] c"favicon_url\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.31 = private unnamed_addr constant [21 x i8] c"safe_for_autoreplace\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"originating_url\00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"date_created\00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"usage_count\00", align 1
@.str.35 = private unnamed_addr constant [16 x i8] c"input_encodings\00", align 1
@.str.36 = private unnamed_addr constant [21 x i8] c"show_in_default_list\00", align 1
@.str.37 = private unnamed_addr constant [12 x i8] c"suggest_url\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"prepopulate_id\00", align 1
@.str.39 = private unnamed_addr constant [21 x i8] c"autogenerate_keyword\00", align 1
@.str.40 = private unnamed_addr constant [8 x i8] c"logo_id\00", align 1
@.str.41 = private unnamed_addr constant [18 x i8] c"created_by_policy\00", align 1
@.str.42 = private unnamed_addr constant [12 x i8] c"instant_url\00", align 1
@.str.43 = private unnamed_addr constant [14 x i8] c"last_modified\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c"sync_guid\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"alternate_urls\00", align 1
@.str.46 = private unnamed_addr constant [29 x i8] c"search_terms_replacement_key\00", align 1
@.str.47 = private unnamed_addr constant [10 x i8] c"image_url\00", align 1
@.str.48 = private unnamed_addr constant [23 x i8] c"search_url_post_params\00", align 1
@.str.49 = private unnamed_addr constant [24 x i8] c"suggest_url_post_params\00", align 1
@.str.50 = private unnamed_addr constant [24 x i8] c"instant_url_post_params\00", align 1
@.str.51 = private unnamed_addr constant [22 x i8] c"image_url_post_params\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c"new_tab_url\00", align 1
@.str.53 = private unnamed_addr constant [13 x i8] c"last_visited\00", align 1
@.str.54 = private unnamed_addr constant [22 x i8] c"created_from_play_api\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c" || \00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c", \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN12KeywordTableC1Ev = hidden unnamed_addr alias void (%class.KeywordTable*), void (%class.KeywordTable*)* @_ZN12KeywordTableC2Ev
@_ZN12KeywordTableD1Ev = hidden unnamed_addr alias void (%class.KeywordTable*), void (%class.KeywordTable*)* @_ZN12KeywordTableD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12KeywordTableC2Ev(%class.KeywordTable*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0
  tail call void @_ZN16WebDatabaseTableC2Ev(%class.WebDatabaseTable* %2) #11
  %3 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV12KeywordTable, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN16WebDatabaseTableC2Ev(%class.WebDatabaseTable*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN16WebDatabaseTableD2Ev(%class.WebDatabaseTable*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12KeywordTableD2Ev(%class.KeywordTable*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0
  tail call void @_ZN16WebDatabaseTableD2Ev(%class.WebDatabaseTable* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12KeywordTableD0Ev(%class.KeywordTable*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0
  tail call void @_ZN16WebDatabaseTableD2Ev(%class.WebDatabaseTable* %2) #11
  %3 = bitcast %class.KeywordTable* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %class.KeywordTable* @_ZN12KeywordTable15FromWebDatabaseEP11WebDatabase(%class.WebDatabase*) local_unnamed_addr #0 align 2 {
  %2 = tail call %class.WebDatabaseTable* @_ZN11WebDatabase8GetTableEPv(%class.WebDatabase* %0, i8* bitcast (i32* @_ZZN12_GLOBAL__N_16GetKeyEvE9table_key to i8*)) #11
  %3 = bitcast %class.WebDatabaseTable* %2 to %class.KeywordTable*
  ret %class.KeywordTable* %3
}

declare %class.WebDatabaseTable* @_ZN11WebDatabase8GetTableEPv(%class.WebDatabase*, i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK12KeywordTable10GetTypeKeyEv(%class.KeywordTable* nocapture readnone) unnamed_addr #4 align 2 {
  ret i8* bitcast (i32* @_ZZN12_GLOBAL__N_16GetKeyEvE9table_key to i8*)
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12KeywordTable23CreateTablesIfNecessaryEv(%class.KeywordTable* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 1
  %3 = load %"class.sql::Database"*, %"class.sql::Database"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #11
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = load %"class.sql::Database"*, %"class.sql::Database"** %2, align 8
  %7 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %6, i8* getelementptr inbounds ([653 x i8], [653 x i8]* @.str.1, i64 0, i64 0)) #11
  br label %8

8:                                                ; preds = %5, %1
  %9 = phi i1 [ true, %1 ], [ %7, %5 ]
  ret i1 %9
}

declare zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN12KeywordTable10IsSyncableEv(%class.KeywordTable* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12KeywordTable16MigrateToVersionEiPb(%class.KeywordTable* nocapture readonly, i32, i8* nocapture) unnamed_addr #0 align 2 {
  switch i32 %1, label %26 [
    i32 53, label %4
    i32 59, label %8
    i32 68, label %12
    i32 69, label %14
    i32 76, label %18
    i32 77, label %20
    i32 82, label %22
  ]

4:                                                ; preds = %3
  store i8 1, i8* %2, align 1
  %5 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 1
  %6 = load %"class.sql::Database"*, %"class.sql::Database"** %5, align 8
  %7 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %6, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.4, i64 0, i64 0)) #11
  br label %26

8:                                                ; preds = %3
  store i8 1, i8* %2, align 1
  %9 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 1
  %10 = load %"class.sql::Database"*, %"class.sql::Database"** %9, align 8
  %11 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %10, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0)) #11
  br label %26

12:                                               ; preds = %3
  store i8 1, i8* %2, align 1
  %13 = tail call zeroext i1 @_ZN12KeywordTable47MigrateToVersion68RemoveShowInDefaultListColumnEv(%class.KeywordTable* %0)
  br label %26

14:                                               ; preds = %3
  %15 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 1
  %16 = load %"class.sql::Database"*, %"class.sql::Database"** %15, align 8
  %17 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %16, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.11, i64 0, i64 0)) #11
  br label %26

18:                                               ; preds = %3
  store i8 1, i8* %2, align 1
  %19 = tail call zeroext i1 @_ZN12KeywordTable38MigrateToVersion76RemoveInstantColumnsEv(%class.KeywordTable* %0)
  br label %26

20:                                               ; preds = %3
  store i8 1, i8* %2, align 1
  %21 = tail call zeroext i1 @_ZN12KeywordTable39MigrateToVersion77IncreaseTimePrecisionEv(%class.KeywordTable* %0)
  br label %26

22:                                               ; preds = %3
  %23 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 1
  %24 = load %"class.sql::Database"*, %"class.sql::Database"** %23, align 8
  %25 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %24, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.16, i64 0, i64 0)) #11
  br label %26

26:                                               ; preds = %3, %22, %20, %18, %14, %12, %8, %4
  %27 = phi i1 [ %25, %22 ], [ %21, %20 ], [ %19, %18 ], [ %17, %14 ], [ %13, %12 ], [ %11, %8 ], [ %7, %4 ], [ true, %3 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12KeywordTable36MigrateToVersion53AddNewTabURLColumnEv(%class.KeywordTable* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 1
  %3 = load %"class.sql::Database"*, %"class.sql::Database"** %2, align 8
  %4 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %3, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.4, i64 0, i64 0)) #11
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12KeywordTable41MigrateToVersion59RemoveExtensionKeywordsEv(%class.KeywordTable* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 1
  %3 = load %"class.sql::Database"*, %"class.sql::Database"** %2, align 8
  %4 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0)) #11
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12KeywordTable47MigrateToVersion68RemoveShowInDefaultListColumnEv(%class.KeywordTable* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.sql::Transaction", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.sql::Transaction"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.sql::Transaction"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  call void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"* nonnull %2, %"class.sql::Database"* %9) #11
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  call fastcc void @_ZN12_GLOBAL__N_117ColumnsForVersionEib(%"class.std::__1::basic_string"* nonnull sret %5, i32 68, i1 zeroext false)
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #11
  %15 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #11, !noalias !2
  %16 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %16, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #11, !noalias !2
  %17 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %1, %21
  %25 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %24, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  %33 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = load i8*, i8** %11, align 8
  %38 = select i1 %36, i8* %37, i8* %10
  %39 = call zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"* nonnull %2) #11
  br i1 %39, label %40, label %54

40:                                               ; preds = %32
  %41 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %42 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %41, i8* getelementptr inbounds ([675 x i8], [675 x i8]* @.str.8, i64 0, i64 0)) #11
  br i1 %42, label %43, label %54

43:                                               ; preds = %40
  %44 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %45 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %44, i8* %38) #11
  br i1 %45, label %46, label %54

46:                                               ; preds = %43
  %47 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %48 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %47, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0)) #11
  br i1 %48, label %49, label %54

49:                                               ; preds = %46
  %50 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %51 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %50, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0)) #11
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = call zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"* nonnull %2) #11
  br label %54

54:                                               ; preds = %52, %49, %46, %43, %40, %32
  %55 = phi i1 [ false, %49 ], [ false, %46 ], [ false, %43 ], [ false, %40 ], [ false, %32 ], [ %53, %52 ]
  %56 = load i8, i8* %34, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %54
  %59 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %59) #12
  br label %60

60:                                               ; preds = %54, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  call void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12KeywordTable38MigrateToVersion69AddLastVisitedColumnEv(%class.KeywordTable* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 1
  %3 = load %"class.sql::Database"*, %"class.sql::Database"** %2, align 8
  %4 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %3, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.11, i64 0, i64 0)) #11
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12KeywordTable38MigrateToVersion76RemoveInstantColumnsEv(%class.KeywordTable* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.sql::Transaction", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.sql::Transaction"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.sql::Transaction"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  call void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"* nonnull %2, %"class.sql::Database"* %9) #11
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  call fastcc void @_ZN12_GLOBAL__N_117ColumnsForVersionEib(%"class.std::__1::basic_string"* nonnull sret %5, i32 76, i1 zeroext false)
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #11
  %15 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #11, !noalias !5
  %16 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %16, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #11, !noalias !5
  %17 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %1, %21
  %25 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %24, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  %33 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = load i8*, i8** %11, align 8
  %38 = select i1 %36, i8* %37, i8* %10
  %39 = call zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"* nonnull %2) #11
  br i1 %39, label %40, label %54

40:                                               ; preds = %32
  %41 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %42 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %41, i8* getelementptr inbounds ([617 x i8], [617 x i8]* @.str.12, i64 0, i64 0)) #11
  br i1 %42, label %43, label %54

43:                                               ; preds = %40
  %44 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %45 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %44, i8* %38) #11
  br i1 %45, label %46, label %54

46:                                               ; preds = %43
  %47 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %48 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %47, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0)) #11
  br i1 %48, label %49, label %54

49:                                               ; preds = %46
  %50 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %51 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %50, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0)) #11
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = call zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"* nonnull %2) #11
  br label %54

54:                                               ; preds = %52, %49, %46, %43, %40, %32
  %55 = phi i1 [ false, %49 ], [ false, %46 ], [ false, %43 ], [ false, %40 ], [ false, %32 ], [ %53, %52 ]
  %56 = load i8, i8* %34, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %54
  %59 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %59) #12
  br label %60

60:                                               ; preds = %54, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  call void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12KeywordTable39MigrateToVersion77IncreaseTimePrecisionEv(%class.KeywordTable* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.sql::Transaction", align 8
  %3 = alloca %"class.sql::Statement", align 8
  %4 = alloca %"class.std::__1::vector.76", align 8
  %5 = alloca %"class.sql::Statement", align 8
  %6 = bitcast %"class.sql::Transaction"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.sql::Transaction"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  call void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"* nonnull %2, %"class.sql::Database"* %9) #11
  %10 = call zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"* nonnull %2) #11
  br i1 %10, label %11, label %144

11:                                               ; preds = %1
  %12 = call i8* @_Znwm(i64 80) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 getelementptr inbounds ([67 x i8], [67 x i8]* @.str.13, i64 0, i64 0), i64 66, i1 false) #11
  %13 = getelementptr inbounds i8, i8* %12, i64 66
  store i8 0, i8* %13, align 1
  %14 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #11
  %15 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  %16 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %17 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %16, i8* nonnull %12) #11
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %17) #11
  %18 = bitcast %"class.std::__1::vector.76"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.std::__1::vector.76", %"class.std::__1::vector.76"* %4, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.76", %"class.std::__1::vector.76"* %4, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::vector.76", %"class.std::__1::vector.76"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #11
  %22 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %3) #11
  br i1 %22, label %23, label %104

23:                                               ; preds = %11
  %24 = bitcast %"class.std::__1::tuple"** %20 to i64*
  %25 = bitcast %"class.std::__1::vector.76"* %4 to i64*
  %26 = bitcast %"class.std::__1::tuple"** %21 to i64*
  br label %27

27:                                               ; preds = %100, %23
  %28 = phi i64 [ %103, %100 ], [ 0, %23 ]
  %29 = phi %"class.std::__1::tuple"* [ %102, %100 ], [ null, %23 ]
  %30 = phi %"class.std::__1::tuple"* [ %101, %100 ], [ null, %23 ]
  %31 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %3, i32 0) #11
  %32 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %3, i32 1) #11
  %33 = call i64 @_ZN4base4Time9FromTimeTEl(i64 %32) #11
  %34 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %3, i32 2) #11
  %35 = call i64 @_ZN4base4Time9FromTimeTEl(i64 %34) #11
  %36 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %3, i32 3) #11
  %37 = call i64 @_ZN4base4Time9FromTimeTEl(i64 %36) #11
  %38 = icmp ult %"class.std::__1::tuple"* %30, %29
  %39 = ptrtoint %"class.std::__1::tuple"* %29 to i64
  br i1 %38, label %40, label %47

40:                                               ; preds = %27
  %41 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %30, i64 0, i32 0, i32 0, i32 0
  store i64 %31, i64* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %30, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i64 %33, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %30, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  store i64 %35, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %30, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  store i64 %37, i64* %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %30, i64 1
  %46 = ptrtoint %"class.std::__1::tuple"* %45 to i64
  store i64 %46, i64* %24, align 8
  br label %98

47:                                               ; preds = %27
  %48 = ptrtoint %"class.std::__1::tuple"* %30 to i64
  %49 = load i64, i64* %25, align 8
  %50 = sub i64 %48, %49
  %51 = ashr exact i64 %50, 5
  %52 = add nsw i64 %51, 1
  %53 = icmp ugt i64 %52, 576460752303423487
  br i1 %53, label %54, label %56

54:                                               ; preds = %47
  %55 = bitcast %"class.std::__1::vector.76"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %55) #13
  unreachable

56:                                               ; preds = %47
  %57 = sub i64 %39, %49
  %58 = ashr exact i64 %57, 5
  %59 = icmp ult i64 %58, 288230376151711743
  br i1 %59, label %60, label %68

60:                                               ; preds = %56
  %61 = ashr exact i64 %57, 4
  %62 = icmp ult i64 %61, %52
  %63 = select i1 %62, i64 %52, i64 %61
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %60
  %66 = icmp ugt i64 %63, 576460752303423487
  br i1 %66, label %67, label %68

67:                                               ; preds = %65
  call void @abort() #13
  unreachable

68:                                               ; preds = %65, %56
  %69 = phi i64 [ %63, %65 ], [ 576460752303423487, %56 ]
  %70 = shl i64 %69, 5
  %71 = call i8* @_Znwm(i64 %70) #12
  %72 = bitcast i8* %71 to %"class.std::__1::tuple"*
  br label %73

73:                                               ; preds = %68, %60
  %74 = phi i64 [ %69, %68 ], [ 0, %60 ]
  %75 = phi %"class.std::__1::tuple"* [ %72, %68 ], [ null, %60 ]
  %76 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %75, i64 %51
  %77 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %75, i64 %74
  %78 = ptrtoint %"class.std::__1::tuple"* %77 to i64
  %79 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %76, i64 0, i32 0, i32 0, i32 0
  store i64 %31, i64* %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %75, i64 %51, i32 0, i32 1, i32 0, i32 0, i32 0
  store i64 %33, i64* %80, align 8
  %81 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %75, i64 %51, i32 0, i32 2, i32 0, i32 0, i32 0
  store i64 %35, i64* %81, align 8
  %82 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %75, i64 %51, i32 0, i32 3, i32 0, i32 0, i32 0
  store i64 %37, i64* %82, align 8
  %83 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %76, i64 1
  %84 = ptrtoint %"class.std::__1::tuple"* %83 to i64
  %85 = sub i64 %28, %49
  %86 = ashr exact i64 %85, 5
  %87 = sub nsw i64 0, %86
  %88 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %76, i64 %87
  %89 = ptrtoint %"class.std::__1::tuple"* %88 to i64
  %90 = icmp sgt i64 %85, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %73
  %92 = bitcast %"class.std::__1::tuple"* %88 to i8*
  %93 = inttoptr i64 %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 %85, i1 false) #11
  br label %94

94:                                               ; preds = %91, %73
  store i64 %89, i64* %25, align 8
  store i64 %84, i64* %24, align 8
  store i64 %78, i64* %26, align 8
  %95 = icmp eq i64 %49, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = inttoptr i64 %49 to i8*
  call void @_ZdlPv(i8* %97) #12
  br label %98

98:                                               ; preds = %40, %94, %96
  %99 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %3) #11
  br i1 %99, label %100, label %104

100:                                              ; preds = %98
  %101 = load %"class.std::__1::tuple"*, %"class.std::__1::tuple"** %20, align 8
  %102 = load %"class.std::__1::tuple"*, %"class.std::__1::tuple"** %21, align 8
  %103 = ptrtoint %"class.std::__1::tuple"* %101 to i64
  br label %27

104:                                              ; preds = %98, %11
  %105 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %3) #11
  br i1 %105, label %106, label %135

106:                                              ; preds = %104
  %107 = load %"class.std::__1::tuple"*, %"class.std::__1::tuple"** %19, align 8
  %108 = load %"class.std::__1::tuple"*, %"class.std::__1::tuple"** %20, align 8
  %109 = icmp eq %"class.std::__1::tuple"* %107, %108
  br i1 %109, label %133, label %110

110:                                              ; preds = %106
  %111 = bitcast %"class.sql::Statement"* %5 to i8*
  %112 = bitcast %"class.sql::Statement"* %5 to i8*
  br label %115

113:                                              ; preds = %115
  %114 = icmp eq %"class.std::__1::tuple"* %132, %108
  br i1 %114, label %133, label %115

115:                                              ; preds = %110, %113
  %116 = phi %"class.std::__1::tuple"* [ %107, %110 ], [ %132, %113 ]
  %117 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %116, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %116, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %116, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %124 = load i64, i64* %123, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 16, i1 false)
  %125 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %126 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %125, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i64 433, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.15, i64 0, i64 0)) #11
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %5, %"class.sql::Database::StatementRef"* %126) #11
  %127 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 0, i64 %120) #11
  %128 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 1, i64 %122) #11
  %129 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 2, i64 %124) #11
  %130 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 3, i64 %118) #11
  %131 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %5) #11
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #11
  %132 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %116, i64 1
  br i1 %131, label %113, label %135

133:                                              ; preds = %113, %106
  %134 = call zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"* nonnull %2) #11
  br label %135

135:                                              ; preds = %115, %104, %133
  %136 = phi i1 [ %134, %133 ], [ false, %104 ], [ false, %115 ]
  %137 = load %"class.std::__1::tuple"*, %"class.std::__1::tuple"** %19, align 8
  %138 = icmp eq %"class.std::__1::tuple"* %137, null
  br i1 %138, label %143, label %139

139:                                              ; preds = %135
  %140 = ptrtoint %"class.std::__1::tuple"* %137 to i64
  %141 = bitcast %"class.std::__1::tuple"** %20 to i64*
  store i64 %140, i64* %141, align 8
  %142 = bitcast %"class.std::__1::tuple"* %137 to i8*
  call void @_ZdlPv(i8* %142) #12
  br label %143

143:                                              ; preds = %135, %139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #11
  call void @_ZdlPv(i8* nonnull %12) #12
  br label %144

144:                                              ; preds = %1, %143
  %145 = phi i1 [ %136, %143 ], [ false, %1 ]
  call void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret i1 %145
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12KeywordTable45MigrateToVersion82AddCreatedFromPlayApiColumnEv(%class.KeywordTable* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 1
  %3 = load %"class.sql::Database"*, %"class.sql::Database"** %2, align 8
  %4 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %3, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.16, i64 0, i64 0)) #11
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12KeywordTable17PerformOperationsERKNSt3__16vectorINS0_4pairINS_13OperationTypeE15TemplateURLDataEENS0_9allocatorIS5_EEEE(%class.KeywordTable* nocapture readonly, %"class.std::__1::vector.27"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = alloca %"class.sql::Statement", align 8
  %5 = alloca %"class.sql::Transaction", align 8
  %6 = bitcast %"class.sql::Transaction"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.sql::Transaction"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  call void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"* nonnull %5, %"class.sql::Database"* %9) #11
  %10 = call zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"* nonnull %5) #11
  br i1 %10, label %11, label %45

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %1, i64 0, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.29"*, %"struct.std::__1::pair.29"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %1, i64 0, i32 0, i32 1
  %15 = load %"struct.std::__1::pair.29"*, %"struct.std::__1::pair.29"** %14, align 8
  %16 = icmp eq %"struct.std::__1::pair.29"* %13, %15
  br i1 %16, label %43, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.sql::Statement"* %4 to i8*
  %19 = bitcast %"class.sql::Statement"* %3 to i8*
  br label %20

20:                                               ; preds = %17, %39
  %21 = phi %"struct.std::__1::pair.29"* [ %13, %17 ], [ %40, %39 ]
  %22 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  switch i32 %23, label %39 [
    i32 0, label %24
    i32 1, label %27
    i32 2, label %34
  ]

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %21, i64 0, i32 1
  %26 = call zeroext i1 @_ZN12KeywordTable10AddKeywordERK15TemplateURLData(%class.KeywordTable* %0, %struct.TemplateURLData* dereferenceable(848) %25)
  br i1 %26, label %39, label %45

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %21, i64 0, i32 1, i32 13
  %29 = load i64, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false) #11
  %30 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %31 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %30, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i64 523, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i64 0, i64 0)) #11
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %31) #11
  %32 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 0, i64 %29) #11
  %33 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #11
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #11
  br i1 %33, label %39, label %45

34:                                               ; preds = %20
  %35 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %21, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false) #11
  %36 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %37 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %36, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i64 532, i8* getelementptr inbounds ([419 x i8], [419 x i8]* @.str.21, i64 0, i64 0)) #11
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %37) #11
  call fastcc void @_ZN12_GLOBAL__N_118BindURLToStatementERK15TemplateURLDataPN3sql9StatementEii(%struct.TemplateURLData* dereferenceable(848) %35, %"class.sql::Statement"* nonnull %4, i32 22, i32 0) #11
  %38 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %4) #11
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %20, %24, %27, %34
  %40 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %21, i64 1
  %41 = load %"struct.std::__1::pair.29"*, %"struct.std::__1::pair.29"** %14, align 8
  %42 = icmp eq %"struct.std::__1::pair.29"* %40, %41
  br i1 %42, label %43, label %20

43:                                               ; preds = %39, %11
  %44 = call zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"* nonnull %5) #11
  br label %45

45:                                               ; preds = %24, %27, %34, %2, %43
  %46 = phi i1 [ %44, %43 ], [ false, %2 ], [ false, %34 ], [ false, %27 ], [ false, %24 ]
  call void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret i1 %46
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"*, %"class.sql::Database"*) unnamed_addr #1

declare zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12KeywordTable10AddKeywordERK15TemplateURLData(%class.KeywordTable* nocapture readonly, %struct.TemplateURLData* dereferenceable(848)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.sql::Statement", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = load i32, i32* @_ZN11WebDatabase21kCurrentVersionNumberE, align 4, !noalias !8
  call fastcc void @_ZN12_GLOBAL__N_117ColumnsForVersionEib(%"class.std::__1::basic_string"* nonnull sret %5, i32 %12, i1 zeroext false) #11
  %13 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %5, i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0)) #11, !noalias !11
  %14 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %14, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #11, !noalias !11
  %15 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.19, i64 0, i64 0)) #11, !noalias !14
  %16 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %16, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #11, !noalias !14
  %17 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %2, %21
  %25 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %24, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  %33 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #11
  %34 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 1
  %35 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 16, i1 false)
  %36 = load %"class.sql::Database"*, %"class.sql::Database"** %34, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = load i8*, i8** %8, align 8
  %42 = select i1 %40, i8* %41, i8* %7
  %43 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %36, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i64 514, i8* %42) #11
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %6, %"class.sql::Database::StatementRef"* %43) #11
  call fastcc void @_ZN12_GLOBAL__N_118BindURLToStatementERK15TemplateURLDataPN3sql9StatementEii(%struct.TemplateURLData* dereferenceable(848) %1, %"class.sql::Statement"* nonnull %6, i32 0, i32 1)
  %44 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %6) #11
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #11
  %45 = load i8, i8* %38, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %32
  %48 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %48) #12
  br label %49

49:                                               ; preds = %32, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12KeywordTable13RemoveKeywordEl(%class.KeywordTable* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = load %"class.sql::Database"*, %"class.sql::Database"** %5, align 8
  %8 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %7, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i64 523, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i64 0, i64 0)) #11
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %8) #11
  %9 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 0, i64 %1) #11
  %10 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #11
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12KeywordTable13UpdateKeywordERK15TemplateURLData(%class.KeywordTable* nocapture readonly, %struct.TemplateURLData* dereferenceable(848)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = load %"class.sql::Database"*, %"class.sql::Database"** %5, align 8
  %8 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %7, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i64 532, i8* getelementptr inbounds ([419 x i8], [419 x i8]* @.str.21, i64 0, i64 0)) #11
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %8) #11
  call fastcc void @_ZN12_GLOBAL__N_118BindURLToStatementERK15TemplateURLDataPN3sql9StatementEii(%struct.TemplateURLData* dereferenceable(848) %1, %"class.sql::Statement"* nonnull %3, i32 22, i32 0)
  %9 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #11
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret i1 %9
}

declare zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12KeywordTable11GetKeywordsEPNSt3__16vectorI15TemplateURLDataNS0_9allocatorIS2_EEEE(%class.KeywordTable* nocapture readonly, %"class.std::__1::vector.57"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.sql::Statement", align 8
  %8 = alloca %"class.std::__1::set.65", align 8
  %9 = alloca %struct.TemplateURLData, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %14 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = load i32, i32* @_ZN11WebDatabase21kCurrentVersionNumberE, align 4, !noalias !17
  call fastcc void @_ZN12_GLOBAL__N_117ColumnsForVersionEib(%"class.std::__1::basic_string"* nonnull sret %6, i32 %15, i1 zeroext false) #11
  %16 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %6, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #11, !noalias !20
  %17 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %17, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #11, !noalias !20
  %18 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0)) #11, !noalias !23
  %19 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %19, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #11, !noalias !23
  %20 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %2, %24
  %28 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %27, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  %36 = bitcast %"class.sql::Statement"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #11
  %37 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 1
  %38 = bitcast %"class.sql::Statement"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 16, i1 false)
  %39 = load %"class.sql::Database"*, %"class.sql::Database"** %37, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = load i8*, i8** %11, align 8
  %45 = select i1 %43, i8* %44, i8* %10
  %46 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %39, i8* %45) #11
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %7, %"class.sql::Database::StatementRef"* %46) #11
  %47 = bitcast %"class.std::__1::set.65"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #11
  %48 = getelementptr inbounds %"class.std::__1::set.65", %"class.std::__1::set.65"* %8, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::set.65", %"class.std::__1::set.65"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::set.65", %"class.std::__1::set.65"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::set.65", %"class.std::__1::set.65"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node_base"** %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %51, %"class.std::__1::__tree_end_node"** %48, align 8
  %53 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %7) #11
  br i1 %53, label %54, label %135

54:                                               ; preds = %35
  %55 = bitcast %struct.TemplateURLData* %9 to i8*
  %56 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %1, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast %struct.TemplateURLData** %56 to i64*
  %59 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.std::__1::__tree_node"**
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %61 = bitcast %"class.std::__1::set.65"* %8 to i64*
  br label %62

62:                                               ; preds = %54, %133
  call void @llvm.lifetime.start.p0i8(i64 848, i8* nonnull %55) #11
  call void @_ZN15TemplateURLDataC1Ev(%struct.TemplateURLData* nonnull %9) #11
  %63 = load %struct.TemplateURLData*, %struct.TemplateURLData** %56, align 8
  %64 = load %struct.TemplateURLData*, %struct.TemplateURLData** %57, align 8
  %65 = icmp ult %struct.TemplateURLData* %63, %64
  br i1 %65, label %66, label %69

66:                                               ; preds = %62
  call void @_ZN15TemplateURLDataC1ERKS_(%struct.TemplateURLData* %63, %struct.TemplateURLData* nonnull dereferenceable(848) %9) #11
  %67 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %63, i64 1
  %68 = ptrtoint %struct.TemplateURLData* %67 to i64
  store i64 %68, i64* %58, align 8
  br label %70

69:                                               ; preds = %62
  call void @_ZNSt3__16vectorI15TemplateURLDataNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector.57"* %1, %struct.TemplateURLData* nonnull dereferenceable(848) %9) #11
  br label %70

70:                                               ; preds = %66, %69
  call void @_ZN15TemplateURLDataD1Ev(%struct.TemplateURLData* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 848, i8* nonnull %55) #11
  %71 = load %struct.TemplateURLData*, %struct.TemplateURLData** %56, align 8
  %72 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %71, i64 -1
  %73 = call zeroext i1 @_ZN12KeywordTable27GetKeywordDataFromStatementERKN3sql9StatementEP15TemplateURLData(%"class.sql::Statement"* nonnull dereferenceable(16) %7, %struct.TemplateURLData* %72)
  br i1 %73, label %133, label %74

74:                                               ; preds = %70
  %75 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %7, i32 0) #11
  %76 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %59, align 8
  %77 = icmp eq %"class.std::__1::__tree_node"* %76, null
  br i1 %77, label %104, label %78

78:                                               ; preds = %74, %100
  %79 = phi %"class.std::__1::__tree_node"* [ %103, %100 ], [ %76, %74 ]
  %80 = phi %"class.std::__1::__tree_node_base"** [ %102, %100 ], [ %49, %74 ]
  %81 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %79, i64 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = icmp slt i64 %75, %82
  br i1 %83, label %84, label %90

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %79, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node_base"* %86, null
  br i1 %87, label %88, label %100

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %79, i64 0, i32 0, i32 0
  br label %104

90:                                               ; preds = %78
  %91 = icmp slt i64 %82, %75
  br i1 %91, label %92, label %98

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %79, i64 0, i32 0, i32 1
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, null
  br i1 %95, label %96, label %100

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %79, i64 0, i32 0, i32 0
  br label %104

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %79, i64 0, i32 0, i32 0
  br label %104

100:                                              ; preds = %92, %84
  %101 = phi %"class.std::__1::__tree_node_base"* [ %86, %84 ], [ %94, %92 ]
  %102 = phi %"class.std::__1::__tree_node_base"** [ %85, %84 ], [ %93, %92 ]
  %103 = bitcast %"class.std::__1::__tree_node_base"* %101 to %"class.std::__1::__tree_node"*
  br label %78

104:                                              ; preds = %74, %98, %96, %88
  %105 = phi %"class.std::__1::__tree_end_node"* [ %89, %88 ], [ %97, %96 ], [ %99, %98 ], [ %51, %74 ]
  %106 = phi %"class.std::__1::__tree_node_base"** [ %85, %88 ], [ %93, %96 ], [ %80, %98 ], [ %60, %74 ]
  %107 = bitcast %"class.std::__1::__tree_node_base"** %106 to %"class.std::__1::__tree_node"**
  %108 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node"* %108, null
  br i1 %109, label %110, label %130

110:                                              ; preds = %104
  %111 = call i8* @_Znwm(i64 40) #12, !noalias !26
  %112 = getelementptr inbounds i8, i8* %111, i64 32
  %113 = bitcast i8* %112 to i64*
  store i64 %75, i64* %113, align 8, !noalias !26
  %114 = bitcast i8* %111 to %"class.std::__1::__tree_node_base"*
  %115 = getelementptr inbounds i8, i8* %111, i64 16
  %116 = bitcast i8* %115 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %105, %"class.std::__1::__tree_end_node"** %116, align 8
  %117 = bitcast %"class.std::__1::__tree_node_base"** %106 to i8**
  store i8* %111, i8** %117, align 8
  %118 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %48, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %118, i64 0, i32 0
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = icmp eq %"class.std::__1::__tree_node_base"* %120, null
  br i1 %121, label %125, label %122

122:                                              ; preds = %110
  %123 = ptrtoint %"class.std::__1::__tree_node_base"* %120 to i64
  store i64 %123, i64* %61, align 8
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  br label %125

125:                                              ; preds = %122, %110
  %126 = phi %"class.std::__1::__tree_node_base"* [ %114, %110 ], [ %124, %122 ]
  %127 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %127, %"class.std::__1::__tree_node_base"* %126) #11
  %128 = load i64, i64* %50, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %50, align 8
  br label %130

130:                                              ; preds = %104, %125
  %131 = load %struct.TemplateURLData*, %struct.TemplateURLData** %56, align 8
  %132 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %131, i64 -1
  call void @_ZN15TemplateURLDataD1Ev(%struct.TemplateURLData* %132) #11
  store %struct.TemplateURLData* %132, %struct.TemplateURLData** %56, align 8
  br label %133

133:                                              ; preds = %130, %70
  %134 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %7) #11
  br i1 %134, label %62, label %135

135:                                              ; preds = %133, %35
  %136 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %7) #11
  %137 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %48, align 8
  %138 = icmp eq %"class.std::__1::__tree_end_node"* %137, %51
  br i1 %138, label %141, label %139

139:                                              ; preds = %135
  %140 = bitcast %"class.sql::Statement"* %3 to i8*
  br label %151

141:                                              ; preds = %189, %135
  %142 = phi i1 [ %136, %135 ], [ %161, %189 ]
  %143 = getelementptr inbounds %"class.std::__1::set.65", %"class.std::__1::set.65"* %8, i64 0, i32 0
  %144 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.std::__1::__tree_node"**
  %145 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %144, align 8
  call void @_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE7destroyEPNS_11__tree_nodeIlPvEE(%"class.std::__1::__tree.66"* nonnull %143, %"class.std::__1::__tree_node"* %145) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #11
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #11
  %146 = load i8, i8* %41, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %148, label %150

148:                                              ; preds = %141
  %149 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %149) #12
  br label %150

150:                                              ; preds = %141, %148
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  ret i1 %142

151:                                              ; preds = %139, %189
  %152 = phi i1 [ %136, %139 ], [ %161, %189 ]
  %153 = phi %"class.std::__1::__tree_end_node"* [ %137, %139 ], [ %190, %189 ]
  %154 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %153, i64 4
  %155 = bitcast %"class.std::__1::__tree_end_node"* %154 to i64*
  %156 = load i64, i64* %155, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %140) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %140, i8 -86, i64 16, i1 false) #11
  %157 = load %"class.sql::Database"*, %"class.sql::Database"** %37, align 8
  %158 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %157, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i64 523, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i64 0, i64 0)) #11
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %158) #11
  %159 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 0, i64 %156) #11
  %160 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #11
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %140) #11
  %161 = and i1 %152, %160
  %162 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %153, i64 1, i32 0
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, null
  br i1 %164, label %165, label %173

165:                                              ; preds = %151
  %166 = bitcast %"class.std::__1::__tree_end_node"* %153 to %"class.std::__1::__tree_node_base"*
  %167 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %153, i64 2
  %168 = bitcast %"class.std::__1::__tree_end_node"* %167 to %"class.std::__1::__tree_end_node"**
  %169 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %168, align 8
  %170 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %169, i64 0, i32 0
  %171 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %170, align 8
  %172 = icmp eq %"class.std::__1::__tree_node_base"* %171, %166
  br i1 %172, label %189, label %180

173:                                              ; preds = %151, %173
  %174 = phi %"class.std::__1::__tree_node_base"* [ %176, %173 ], [ %163, %151 ]
  %175 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %174, i64 0, i32 0, i32 0
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  %177 = icmp eq %"class.std::__1::__tree_node_base"* %176, null
  br i1 %177, label %178, label %173

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %174, i64 0, i32 0
  br label %189

180:                                              ; preds = %165, %180
  %181 = phi %"class.std::__1::__tree_end_node"** [ %184, %180 ], [ %168, %165 ]
  %182 = bitcast %"class.std::__1::__tree_end_node"** %181 to %"class.std::__1::__tree_node_base"**
  %183 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %182, align 8
  %184 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %183, i64 0, i32 2
  %185 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %184, align 8
  %186 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %185, i64 0, i32 0
  %187 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %188 = icmp eq %"class.std::__1::__tree_node_base"* %187, %183
  br i1 %188, label %189, label %180

189:                                              ; preds = %180, %165, %178
  %190 = phi %"class.std::__1::__tree_end_node"* [ %179, %178 ], [ %169, %165 ], [ %185, %180 ]
  %191 = icmp eq %"class.std::__1::__tree_end_node"* %190, %51
  br i1 %191, label %141, label %151
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12KeywordTable17GetKeywordColumnsEv(%"class.std::__1::basic_string"* noalias sret) local_unnamed_addr #0 align 2 {
  %2 = load i32, i32* @_ZN11WebDatabase21kCurrentVersionNumberE, align 4
  tail call fastcc void @_ZN12_GLOBAL__N_117ColumnsForVersionEib(%"class.std::__1::basic_string"* sret %0, i32 %2, i1 zeroext false)
  ret void
}

declare %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #1

declare void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"*, %"class.sql::Database::StatementRef"*) unnamed_addr #1

declare zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"*) local_unnamed_addr #1

declare void @_ZN15TemplateURLDataC1Ev(%struct.TemplateURLData*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN15TemplateURLDataD1Ev(%struct.TemplateURLData*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12KeywordTable27GetKeywordDataFromStatementERKN3sql9StatementEP15TemplateURLData(%"class.sql::Statement"* dereferenceable(16), %struct.TemplateURLData*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.43", align 8
  %4 = alloca %"class.std::__1::basic_string.43", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %class.GURL, align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %class.GURL, align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::vector.36", align 16
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.absl::optional", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.base::ListValue"*, align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = bitcast %"class.std::__1::basic_string.43"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #11
  call void @_ZNK3sql9Statement14ColumnString16Ei(%"class.std::__1::basic_string.43"* nonnull sret %3, %"class.sql::Statement"* %0, i32 1) #11
  call void @_ZN15TemplateURLData12SetShortNameERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%struct.TemplateURLData* %1, %"class.std::__1::basic_string.43"* nonnull dereferenceable(24) %3) #11
  %25 = bitcast %"class.std::__1::basic_string.43"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::basic_string.43"* %3 to i8**
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %2, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #11
  %33 = bitcast %"class.std::__1::basic_string.43"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11
  call void @_ZNK3sql9Statement14ColumnString16Ei(%"class.std::__1::basic_string.43"* nonnull sret %4, %"class.sql::Statement"* %0, i32 2) #11
  call void @_ZN15TemplateURLData10SetKeywordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%struct.TemplateURLData* %1, %"class.std::__1::basic_string.43"* nonnull dereferenceable(24) %4) #11
  %34 = bitcast %"class.std::__1::basic_string.43"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  %39 = bitcast %"class.std::__1::basic_string.43"* %4 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %32, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  %42 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #11
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %5, %"class.sql::Statement"* %0, i32 4) #11
  %43 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %41
  %48 = icmp eq i8 %45, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #11
  br i1 %48, label %360, label %55

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #11
  br i1 %52, label %360, label %55

55:                                               ; preds = %47, %49
  %56 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #11
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %6, %"class.sql::Statement"* %0, i32 4) #11
  call void @_ZN15TemplateURLData6SetURLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%struct.TemplateURLData* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #11
  %57 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %55, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #11
  %65 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #11
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %7, %"class.sql::Statement"* %0, i32 10) #11
  %66 = bitcast %struct.TemplateURLData* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %64
  %71 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %72) #12
  br label %73

73:                                               ; preds = %70, %64
  %74 = bitcast %struct.TemplateURLData* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* nonnull align 8 %65, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #11
  %75 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #11
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %8, %"class.sql::Statement"* %0, i32 16) #11
  %76 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 1
  %77 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %81, %73
  %85 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* nonnull align 8 %75, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #11
  %86 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #11
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %9, %"class.sql::Statement"* %0, i32 20) #11
  %87 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 2
  %88 = bitcast %"class.std::__1::basic_string"* %87 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %94) #12
  br label %95

95:                                               ; preds = %92, %84
  %96 = bitcast %"class.std::__1::basic_string"* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* nonnull align 8 %86, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #11
  %97 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #11
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %10, %"class.sql::Statement"* %0, i32 17) #11
  %98 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 6
  %99 = bitcast %"class.std::__1::basic_string"* %98 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %105) #12
  br label %106

106:                                              ; preds = %103, %95
  %107 = bitcast %"class.std::__1::basic_string"* %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* nonnull align 8 %97, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #11
  %108 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #11
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %11, %"class.sql::Statement"* %0, i32 18) #11
  %109 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 7
  %110 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %106
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  call void @_ZdlPv(i8* %116) #12
  br label %117

117:                                              ; preds = %114, %106
  %118 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 8 %108, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #11
  %119 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #11
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %12, %"class.sql::Statement"* %0, i32 19) #11
  %120 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 8
  %121 = bitcast %"class.std::__1::basic_string"* %120 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  call void @_ZdlPv(i8* %127) #12
  br label %128

128:                                              ; preds = %125, %117
  %129 = bitcast %"class.std::__1::basic_string"* %120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* nonnull align 8 %119, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #11
  %130 = bitcast %class.GURL* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %130) #11
  %131 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #11
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %14, %"class.sql::Statement"* %0, i32 3) #11
  %132 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  %134 = load i8, i8* %133, align 1
  %135 = icmp slt i8 %134, 0
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  %138 = select i1 %135, i8* %137, i8* %131
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  %141 = zext i8 %134 to i64
  %142 = select i1 %135, i64 %140, i64 %141
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %13, i8* %138, i64 %142) #11
  %143 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 9
  %144 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %143, %class.GURL* nonnull dereferenceable(120) %13) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %13) #11
  %145 = load i8, i8* %133, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %128
  %148 = load i8*, i8** %136, align 8
  call void @_ZdlPv(i8* %148) #12
  br label %149

149:                                              ; preds = %128, %147
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %130) #11
  %150 = bitcast %class.GURL* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %150) #11
  %151 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %151) #11
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %16, %"class.sql::Statement"* %0, i32 6) #11
  %152 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %152, i64 0, i32 1, i32 0
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  %156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = select i1 %155, i8* %157, i8* %151
  %159 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %160 = load i64, i64* %159, align 8
  %161 = zext i8 %154 to i64
  %162 = select i1 %155, i64 %160, i64 %161
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %15, i8* %158, i64 %162) #11
  %163 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 10
  %164 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %163, %class.GURL* nonnull dereferenceable(120) %15) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %15) #11
  %165 = load i8, i8* %153, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %166, label %167, label %169

167:                                              ; preds = %149
  %168 = load i8*, i8** %156, align 8
  call void @_ZdlPv(i8* %168) #12
  br label %169

169:                                              ; preds = %149, %167
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %151) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %150) #11
  %170 = call zeroext i1 @_ZNK3sql9Statement10ColumnBoolEi(%"class.sql::Statement"* %0, i32 5) #11
  %171 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 11
  %172 = zext i1 %170 to i8
  store i8 %172, i8* %171, align 8
  %173 = bitcast %"class.std::__1::vector.36"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %173) #11
  %174 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %174) #11
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %18, %"class.sql::Statement"* %0, i32 9) #11
  %175 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %175, i64 0, i32 1, i32 0
  %177 = load i8, i8* %176, align 1
  %178 = icmp slt i8 %177, 0
  %179 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = select i1 %178, i8* %180, i8* %174
  %182 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = zext i8 %177 to i64
  %185 = select i1 %178, i64 %183, i64 %184
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.36"* nonnull sret %17, i8* %181, i64 %185, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i64 1, i32 1, i32 0) #11
  %186 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 12
  %187 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %186, i64 0, i32 0, i32 0
  %188 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %187, align 8
  %189 = icmp eq %"class.std::__1::basic_string"* %188, null
  br i1 %189, label %213, label %190

190:                                              ; preds = %169
  %191 = bitcast %"class.std::__1::basic_string"* %188 to i8*
  %192 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 12, i32 0, i32 1
  %193 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %192, align 8
  %194 = icmp eq %"class.std::__1::basic_string"* %193, %188
  br i1 %194, label %210, label %195

195:                                              ; preds = %190, %205
  %196 = phi %"class.std::__1::basic_string"* [ %197, %205 ], [ %193, %190 ]
  %197 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %196, i64 -1
  %198 = bitcast %"class.std::__1::basic_string"* %197 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %199 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %198, i64 0, i32 1, i32 0
  %200 = load i8, i8* %199, align 1
  %201 = icmp slt i8 %200, 0
  br i1 %201, label %202, label %205

202:                                              ; preds = %195
  %203 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %197, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load i8*, i8** %203, align 8
  call void @_ZdlPv(i8* %204) #12
  br label %205

205:                                              ; preds = %202, %195
  %206 = icmp eq %"class.std::__1::basic_string"* %197, %188
  br i1 %206, label %207, label %195

207:                                              ; preds = %205
  %208 = bitcast %"class.std::__1::vector.36"* %186 to i8**
  %209 = load i8*, i8** %208, align 8
  br label %210

210:                                              ; preds = %207, %190
  %211 = phi i8* [ %209, %207 ], [ %191, %190 ]
  store %"class.std::__1::basic_string"* %188, %"class.std::__1::basic_string"** %192, align 8
  call void @_ZdlPv(i8* %211) #12
  %212 = bitcast %"class.std::__1::vector.36"* %186 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %212, i8 0, i64 24, i1 false) #11
  br label %213

213:                                              ; preds = %169, %210
  %214 = bitcast %"class.std::__1::vector.36"* %17 to <2 x i64>*
  %215 = load <2 x i64>, <2 x i64>* %214, align 16
  %216 = bitcast %"class.std::__1::vector.36"* %186 to <2 x i64>*
  store <2 x i64> %215, <2 x i64>* %216, align 8
  %217 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %17, i64 0, i32 0, i32 2, i32 0, i32 0
  %218 = bitcast %"class.std::__1::basic_string"** %217 to i64*
  %219 = load i64, i64* %218, align 16
  %220 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %221 = bitcast %"class.std::__1::basic_string"** %220 to i64*
  store i64 %219, i64* %221, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %173, i8 0, i64 24, i1 false) #11
  %222 = load i8, i8* %176, align 1
  %223 = icmp slt i8 %222, 0
  br i1 %223, label %224, label %226

224:                                              ; preds = %213
  %225 = load i8*, i8** %179, align 8
  call void @_ZdlPv(i8* %225) #12
  br label %226

226:                                              ; preds = %213, %224
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %174) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %173) #11
  %227 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 0) #11
  %228 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 13
  store i64 %227, i64* %228, align 8
  %229 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 7) #11
  %230 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 14, i32 0, i32 0
  store i64 %229, i64* %230, align 8
  %231 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 13) #11
  %232 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 15, i32 0, i32 0
  store i64 %231, i64* %232, align 8
  %233 = call zeroext i1 @_ZNK3sql9Statement10ColumnBoolEi(%"class.sql::Statement"* %0, i32 12) #11
  %234 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 17
  %235 = zext i1 %233 to i8
  store i8 %235, i8* %234, align 8
  %236 = call zeroext i1 @_ZNK3sql9Statement10ColumnBoolEi(%"class.sql::Statement"* %0, i32 22) #11
  %237 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 18
  %238 = zext i1 %236 to i8
  store i8 %238, i8* %237, align 1
  %239 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* %0, i32 8) #11
  %240 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 19
  store i32 %239, i32* %240, align 4
  %241 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* %0, i32 11) #11
  %242 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 20
  store i32 %241, i32* %242, align 8
  %243 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %243) #11
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %19, %"class.sql::Statement"* %0, i32 14) #11
  %244 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 21
  %245 = bitcast %"class.std::__1::basic_string"* %244 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %246 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %245, i64 0, i32 1, i32 0
  %247 = load i8, i8* %246, align 1
  %248 = icmp slt i8 %247, 0
  br i1 %248, label %249, label %252

249:                                              ; preds = %226
  %250 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %244, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load i8*, i8** %250, align 8
  call void @_ZdlPv(i8* %251) #12
  br label %252

252:                                              ; preds = %249, %226
  %253 = bitcast %"class.std::__1::basic_string"* %244 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %253, i8* nonnull align 8 %243, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %243) #11
  %254 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 22
  %255 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %254, i64 0, i32 0, i32 0
  %256 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %255, align 8
  %257 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 22, i32 0, i32 1
  %258 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %257, align 8
  %259 = icmp eq %"class.std::__1::basic_string"* %258, %256
  br i1 %259, label %272, label %260

260:                                              ; preds = %252, %270
  %261 = phi %"class.std::__1::basic_string"* [ %262, %270 ], [ %258, %252 ]
  %262 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %261, i64 -1
  %263 = bitcast %"class.std::__1::basic_string"* %262 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %264 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %263, i64 0, i32 1, i32 0
  %265 = load i8, i8* %264, align 1
  %266 = icmp slt i8 %265, 0
  br i1 %266, label %267, label %270

267:                                              ; preds = %260
  %268 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %262, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = load i8*, i8** %268, align 8
  call void @_ZdlPv(i8* %269) #12
  br label %270

270:                                              ; preds = %267, %260
  %271 = icmp eq %"class.std::__1::basic_string"* %262, %256
  br i1 %271, label %272, label %260

272:                                              ; preds = %270, %252
  store %"class.std::__1::basic_string"* %256, %"class.std::__1::basic_string"** %257, align 8
  %273 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %273) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %273, i8 -86, i64 40, i1 false)
  %274 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %274) #11
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %21, %"class.sql::Statement"* %0, i32 15) #11
  %275 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %276 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %275, i64 0, i32 1, i32 0
  %277 = load i8, i8* %276, align 1
  %278 = icmp slt i8 %277, 0
  %279 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load i8*, i8** %279, align 8
  %281 = select i1 %278, i8* %280, i8* %274
  %282 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %283 = load i64, i64* %282, align 8
  %284 = zext i8 %277 to i64
  %285 = select i1 %278, i64 %283, i64 %284
  call void @_ZN4base10JSONReader4ReadENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEim(%"class.absl::optional"* nonnull sret %20, i8* %281, i64 %285, i32 0, i64 200) #11
  %286 = load i8, i8* %276, align 1
  %287 = icmp slt i8 %286, 0
  br i1 %287, label %288, label %290

288:                                              ; preds = %272
  %289 = load i8*, i8** %279, align 8
  call void @_ZdlPv(i8* %289) #12
  br label %290

290:                                              ; preds = %272, %288
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %274) #11
  %291 = bitcast %"class.base::ListValue"** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %291) #11
  store %"class.base::ListValue"* inttoptr (i64 -6148914691236517206 to %"class.base::ListValue"*), %"class.base::ListValue"** %22, align 8
  %292 = load i8, i8* %273, align 8, !range !29
  %293 = icmp eq i8 %292, 0
  br i1 %293, label %352, label %294

294:                                              ; preds = %290
  %295 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %296 = call zeroext i1 @_ZN4base5Value9GetAsListEPPNS_9ListValueE(%"class.base::Value"* %295, %"class.base::ListValue"** nonnull %22) #11
  br i1 %296, label %297, label %352

297:                                              ; preds = %294
  %298 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %298) #11
  %299 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %298, i8 0, i64 24, i1 false) #11
  %301 = load %"class.base::ListValue"*, %"class.base::ListValue"** %22, align 8
  %302 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %303 = load i64, i64* %302, align 8
  %304 = icmp eq i64 %303, 7
  br i1 %304, label %305, label %310, !prof !30

305:                                              ; preds = %297
  %306 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 22, i32 0, i32 2, i32 0, i32 0
  %307 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %308 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %307, i64 0, i32 1, i32 0
  %309 = bitcast %"class.std::__1::basic_string"** %257 to i64*
  br label %312

310:                                              ; preds = %346, %297
  %311 = call dereferenceable(24) %"class.std::__1::vector.112"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() #13
  unreachable

312:                                              ; preds = %305, %346
  %313 = phi %"class.base::ListValue"* [ %301, %305 ], [ %348, %346 ]
  %314 = phi i64 [ 0, %305 ], [ %347, %346 ]
  %315 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %313, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %316 = load i64, i64* %315, align 8
  %317 = bitcast %"class.base::ListValue"* %313 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = sub i64 %316, %318
  %320 = ashr exact i64 %319, 5
  %321 = icmp ult i64 %314, %320
  br i1 %321, label %328, label %322

322:                                              ; preds = %312
  %323 = load i8, i8* %308, align 1
  %324 = icmp slt i8 %323, 0
  br i1 %324, label %325, label %327

325:                                              ; preds = %322
  %326 = load i8*, i8** %299, align 8
  call void @_ZdlPv(i8* %326) #12
  br label %327

327:                                              ; preds = %322, %325
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %298) #11
  br label %352

328:                                              ; preds = %312
  %329 = call zeroext i1 @_ZNK4base9ListValue9GetStringEmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::ListValue"* %313, i64 %314, %"class.std::__1::basic_string"* nonnull %23) #11
  br i1 %329, label %330, label %346

330:                                              ; preds = %328
  %331 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %257, align 8
  %332 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %306, align 8
  %333 = icmp eq %"class.std::__1::basic_string"* %331, %332
  br i1 %333, label %345, label %334

334:                                              ; preds = %330
  %335 = load i8, i8* %308, align 1
  %336 = icmp slt i8 %335, 0
  br i1 %336, label %339, label %337

337:                                              ; preds = %334
  %338 = bitcast %"class.std::__1::basic_string"* %331 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %338, i8* nonnull align 8 %298, i64 24, i1 false) #11
  br label %342

339:                                              ; preds = %334
  %340 = load i8*, i8** %299, align 8
  %341 = load i64, i64* %300, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %331, i8* %340, i64 %341) #11
  br label %342

342:                                              ; preds = %339, %337
  %343 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %331, i64 1
  %344 = ptrtoint %"class.std::__1::basic_string"* %343 to i64
  store i64 %344, i64* %309, align 8
  br label %346

345:                                              ; preds = %330
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.36"* %254, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %23) #11
  br label %346

346:                                              ; preds = %345, %342, %328
  %347 = add nuw i64 %314, 1
  %348 = load %"class.base::ListValue"*, %"class.base::ListValue"** %22, align 8
  %349 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %348, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %350 = load i64, i64* %349, align 8
  %351 = icmp eq i64 %350, 7
  br i1 %351, label %312, label %310, !prof !30

352:                                              ; preds = %290, %327, %294
  %353 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 21) #11
  %354 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 16, i32 0, i32 0
  store i64 %353, i64* %354, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %291) #11
  %355 = load i8, i8* %273, align 8, !range !29
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %359, label %357

357:                                              ; preds = %352
  %358 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %358) #11
  store i8 0, i8* %273, align 8
  br label %359

359:                                              ; preds = %352, %357
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %273) #11
  br label %360

360:                                              ; preds = %47, %49, %359
  %361 = phi i1 [ true, %359 ], [ false, %49 ], [ false, %47 ]
  ret i1 %361
}

declare i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12KeywordTable26SetDefaultSearchProviderIDEl(%class.KeywordTable* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 2
  %4 = load %"class.sql::MetaTable"*, %"class.sql::MetaTable"** %3, align 8
  %5 = tail call zeroext i1 @_ZN3sql9MetaTable8SetValueEPKcl(%"class.sql::MetaTable"* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @_ZN12KeywordTable25kDefaultSearchProviderKeyE, i64 0, i64 0), i64 %1) #11
  ret i1 %5
}

declare zeroext i1 @_ZN3sql9MetaTable8SetValueEPKcl(%"class.sql::MetaTable"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN12KeywordTable26GetDefaultSearchProviderIDEv(%class.KeywordTable* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #11
  store i64 0, i64* %2, align 8
  %4 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 2
  %5 = load %"class.sql::MetaTable"*, %"class.sql::MetaTable"** %4, align 8
  %6 = call zeroext i1 @_ZN3sql9MetaTable8GetValueEPKcPl(%"class.sql::MetaTable"* %5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @_ZN12KeywordTable25kDefaultSearchProviderKeyE, i64 0, i64 0), i64* nonnull %2) #11
  %7 = load i64, i64* %2, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #11
  ret i64 %7
}

declare zeroext i1 @_ZN3sql9MetaTable8GetValueEPKcPl(%"class.sql::MetaTable"*, i8*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12KeywordTable24SetBuiltinKeywordVersionEi(%class.KeywordTable* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 2
  %4 = load %"class.sql::MetaTable"*, %"class.sql::MetaTable"** %3, align 8
  %5 = tail call zeroext i1 @_ZN3sql9MetaTable8SetValueEPKci(%"class.sql::MetaTable"* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZN12_GLOBAL__N_122kBuiltinKeywordVersionE, i64 0, i64 0), i32 %1) #11
  ret i1 %5
}

declare zeroext i1 @_ZN3sql9MetaTable8SetValueEPKci(%"class.sql::MetaTable"*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN12KeywordTable24GetBuiltinKeywordVersionEv(%class.KeywordTable* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #11
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 2
  %5 = load %"class.sql::MetaTable"*, %"class.sql::MetaTable"** %4, align 8
  %6 = call zeroext i1 @_ZN3sql9MetaTable8GetValueEPKcPi(%"class.sql::MetaTable"* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZN12_GLOBAL__N_122kBuiltinKeywordVersionE, i64 0, i64 0), i32* nonnull %2) #11
  %7 = load i32, i32* %2, align 4
  %8 = select i1 %6, i32 %7, i32 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #11
  ret i32 %8
}

declare zeroext i1 @_ZN3sql9MetaTable8GetValueEPKcPi(%"class.sql::MetaTable"*, i8*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_117ColumnsForVersionEib(%"class.std::__1::basic_string"* noalias sret, i32, i1 zeroext) unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector.120", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::vector.120"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %4, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %11 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %12 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %13 = tail call i8* @_Znwm(i64 16) #12
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast i8* %13 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0), i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 8
  %18 = bitcast i8* %17 to i64*
  store i64 2, i64* %18, align 8
  %19 = ptrtoint i8* %13 to i64
  store i64 %19, i64* %11, align 8
  store i64 %15, i64* %10, align 8
  store i64 %15, i64* %12, align 8
  %20 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %21 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %22 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %23 = tail call i8* @_Znwm(i64 32) #12
  %24 = getelementptr inbounds i8, i8* %23, i64 32
  %25 = ptrtoint i8* %24 to i64
  %26 = getelementptr inbounds i8, i8* %23, i64 16
  %27 = bitcast i8* %26 to i8**
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0), i8** %27, align 8
  %28 = getelementptr inbounds i8, i8* %23, i64 24
  %29 = bitcast i8* %28 to i64*
  store i64 10, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %23, i64 32
  %31 = ptrtoint i8* %30 to i64
  %32 = ptrtoint i8* %23 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* nonnull align 8 %13, i64 16, i1 false) #11
  store i64 %32, i64* %21, align 8
  store i64 %31, i64* %20, align 8
  store i64 %25, i64* %22, align 8
  tail call void @_ZdlPv(i8* nonnull %13) #12
  %33 = ptrtoint i8* %30 to i64
  %34 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %35 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %33, %36
  %38 = ashr exact i64 %37, 4
  %39 = add nsw i64 %38, 1
  %40 = icmp ugt i64 %39, 1152921504606846975
  br i1 %40, label %41, label %43

41:                                               ; preds = %3
  %42 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %42) #13
  unreachable

43:                                               ; preds = %3
  %44 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %45 = sub i64 %25, %36
  %46 = ashr exact i64 %45, 4
  %47 = icmp ult i64 %46, 576460752303423487
  br i1 %47, label %48, label %56

48:                                               ; preds = %43
  %49 = ashr exact i64 %45, 3
  %50 = icmp ult i64 %49, %39
  %51 = select i1 %50, i64 %39, i64 %49
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %61, label %53

53:                                               ; preds = %48
  %54 = icmp ugt i64 %51, 1152921504606846975
  br i1 %54, label %55, label %56

55:                                               ; preds = %53
  tail call void @abort() #13
  unreachable

56:                                               ; preds = %53, %43
  %57 = phi i64 [ %51, %53 ], [ 1152921504606846975, %43 ]
  %58 = shl i64 %57, 4
  %59 = tail call i8* @_Znwm(i64 %58) #12
  %60 = bitcast i8* %59 to %"class.base::BasicStringPiece"*
  br label %61

61:                                               ; preds = %56, %48
  %62 = phi i64 [ %57, %56 ], [ 0, %48 ]
  %63 = phi %"class.base::BasicStringPiece"* [ %60, %56 ], [ null, %48 ]
  %64 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %63, i64 %38
  %65 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %63, i64 %62
  %66 = ptrtoint %"class.base::BasicStringPiece"* %65 to i64
  %67 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %64, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i64 0, i64 0), i8** %67, align 8
  %68 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %63, i64 %38, i32 1
  store i64 7, i64* %68, align 8
  %69 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %64, i64 1
  %70 = ptrtoint %"class.base::BasicStringPiece"* %69 to i64
  %71 = sub i64 %31, %36
  %72 = ashr exact i64 %71, 4
  %73 = sub nsw i64 0, %72
  %74 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %64, i64 %73
  %75 = ptrtoint %"class.base::BasicStringPiece"* %74 to i64
  %76 = icmp sgt i64 %71, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %61
  %78 = bitcast %"class.base::BasicStringPiece"* %74 to i8*
  %79 = inttoptr i64 %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 %71, i1 false) #11
  br label %80

80:                                               ; preds = %77, %61
  store i64 %75, i64* %35, align 8
  store i64 %70, i64* %34, align 8
  store i64 %66, i64* %44, align 8
  %81 = icmp eq i64 %36, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %80
  %83 = inttoptr i64 %36 to i8*
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %80, %82
  %85 = icmp ult %"class.base::BasicStringPiece"* %69, %65
  br i1 %85, label %86, label %94

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %69, i64 0, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0), i8** %87, align 8
  %88 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %69, i64 0, i32 1
  store i64 11, i64* %88, align 8
  %89 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %69, i64 1
  %90 = ptrtoint %"class.base::BasicStringPiece"* %89 to i64
  %91 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %90, i64* %91, align 8
  %92 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %93 = ptrtoint %"class.base::BasicStringPiece"* %92 to i64
  br label %146

94:                                               ; preds = %84
  %95 = ptrtoint %"class.base::BasicStringPiece"* %69 to i64
  %96 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %97 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %95, %98
  %100 = ashr exact i64 %99, 4
  %101 = add nsw i64 %100, 1
  %102 = icmp ugt i64 %101, 1152921504606846975
  br i1 %102, label %103, label %105

103:                                              ; preds = %94
  %104 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %104) #13
  unreachable

105:                                              ; preds = %94
  %106 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %107 = sub i64 %66, %98
  %108 = ashr exact i64 %107, 4
  %109 = icmp ult i64 %108, 576460752303423487
  br i1 %109, label %110, label %118

110:                                              ; preds = %105
  %111 = ashr exact i64 %107, 3
  %112 = icmp ult i64 %111, %101
  %113 = select i1 %112, i64 %101, i64 %111
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %123, label %115

115:                                              ; preds = %110
  %116 = icmp ugt i64 %113, 1152921504606846975
  br i1 %116, label %117, label %118

117:                                              ; preds = %115
  tail call void @abort() #13
  unreachable

118:                                              ; preds = %115, %105
  %119 = phi i64 [ %113, %115 ], [ 1152921504606846975, %105 ]
  %120 = shl i64 %119, 4
  %121 = tail call i8* @_Znwm(i64 %120) #12
  %122 = bitcast i8* %121 to %"class.base::BasicStringPiece"*
  br label %123

123:                                              ; preds = %118, %110
  %124 = phi i64 [ %119, %118 ], [ 0, %110 ]
  %125 = phi %"class.base::BasicStringPiece"* [ %122, %118 ], [ null, %110 ]
  %126 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %125, i64 %100
  %127 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %125, i64 %124
  %128 = ptrtoint %"class.base::BasicStringPiece"* %127 to i64
  %129 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %126, i64 0, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0), i8** %129, align 8
  %130 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %125, i64 %100, i32 1
  store i64 11, i64* %130, align 8
  %131 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %126, i64 1
  %132 = ptrtoint %"class.base::BasicStringPiece"* %131 to i64
  %133 = sub i64 %70, %98
  %134 = ashr exact i64 %133, 4
  %135 = sub nsw i64 0, %134
  %136 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %126, i64 %135
  %137 = ptrtoint %"class.base::BasicStringPiece"* %136 to i64
  %138 = icmp sgt i64 %133, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %123
  %140 = bitcast %"class.base::BasicStringPiece"* %136 to i8*
  %141 = inttoptr i64 %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* align 8 %141, i64 %133, i1 false) #11
  br label %142

142:                                              ; preds = %139, %123
  store i64 %137, i64* %97, align 8
  store i64 %132, i64* %96, align 8
  store i64 %128, i64* %106, align 8
  %143 = icmp eq i64 %98, 0
  br i1 %143, label %146, label %144

144:                                              ; preds = %142
  %145 = inttoptr i64 %98 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  br label %146

146:                                              ; preds = %86, %142, %144
  %147 = phi i64 [ %93, %86 ], [ %128, %142 ], [ %128, %144 ]
  %148 = phi i64 [ %90, %86 ], [ %132, %142 ], [ %132, %144 ]
  %149 = phi %"class.base::BasicStringPiece"* [ %92, %86 ], [ %127, %142 ], [ %127, %144 ]
  %150 = phi %"class.base::BasicStringPiece"* [ %89, %86 ], [ %131, %142 ], [ %131, %144 ]
  %151 = icmp ult %"class.base::BasicStringPiece"* %150, %149
  br i1 %151, label %152, label %160

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %150, i64 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0), i8** %153, align 8
  %154 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %150, i64 0, i32 1
  store i64 3, i64* %154, align 8
  %155 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %150, i64 1
  %156 = ptrtoint %"class.base::BasicStringPiece"* %155 to i64
  %157 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %156, i64* %157, align 8
  %158 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %159 = ptrtoint %"class.base::BasicStringPiece"* %158 to i64
  br label %212

160:                                              ; preds = %146
  %161 = ptrtoint %"class.base::BasicStringPiece"* %150 to i64
  %162 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %163 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = sub i64 %161, %164
  %166 = ashr exact i64 %165, 4
  %167 = add nsw i64 %166, 1
  %168 = icmp ugt i64 %167, 1152921504606846975
  br i1 %168, label %169, label %171

169:                                              ; preds = %160
  %170 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %170) #13
  unreachable

171:                                              ; preds = %160
  %172 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %173 = sub i64 %147, %164
  %174 = ashr exact i64 %173, 4
  %175 = icmp ult i64 %174, 576460752303423487
  br i1 %175, label %176, label %184

176:                                              ; preds = %171
  %177 = ashr exact i64 %173, 3
  %178 = icmp ult i64 %177, %167
  %179 = select i1 %178, i64 %167, i64 %177
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %189, label %181

181:                                              ; preds = %176
  %182 = icmp ugt i64 %179, 1152921504606846975
  br i1 %182, label %183, label %184

183:                                              ; preds = %181
  tail call void @abort() #13
  unreachable

184:                                              ; preds = %181, %171
  %185 = phi i64 [ %179, %181 ], [ 1152921504606846975, %171 ]
  %186 = shl i64 %185, 4
  %187 = tail call i8* @_Znwm(i64 %186) #12
  %188 = bitcast i8* %187 to %"class.base::BasicStringPiece"*
  br label %189

189:                                              ; preds = %184, %176
  %190 = phi i64 [ %185, %184 ], [ 0, %176 ]
  %191 = phi %"class.base::BasicStringPiece"* [ %188, %184 ], [ null, %176 ]
  %192 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %191, i64 %166
  %193 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %191, i64 %190
  %194 = ptrtoint %"class.base::BasicStringPiece"* %193 to i64
  %195 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %192, i64 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0), i8** %195, align 8
  %196 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %191, i64 %166, i32 1
  store i64 3, i64* %196, align 8
  %197 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %192, i64 1
  %198 = ptrtoint %"class.base::BasicStringPiece"* %197 to i64
  %199 = sub i64 %148, %164
  %200 = ashr exact i64 %199, 4
  %201 = sub nsw i64 0, %200
  %202 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %192, i64 %201
  %203 = ptrtoint %"class.base::BasicStringPiece"* %202 to i64
  %204 = icmp sgt i64 %199, 0
  br i1 %204, label %205, label %208

205:                                              ; preds = %189
  %206 = bitcast %"class.base::BasicStringPiece"* %202 to i8*
  %207 = inttoptr i64 %164 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %206, i8* align 8 %207, i64 %199, i1 false) #11
  br label %208

208:                                              ; preds = %205, %189
  store i64 %203, i64* %163, align 8
  store i64 %198, i64* %162, align 8
  store i64 %194, i64* %172, align 8
  %209 = icmp eq i64 %164, 0
  br i1 %209, label %212, label %210

210:                                              ; preds = %208
  %211 = inttoptr i64 %164 to i8*
  tail call void @_ZdlPv(i8* %211) #12
  br label %212

212:                                              ; preds = %152, %208, %210
  %213 = phi i64 [ %159, %152 ], [ %194, %208 ], [ %194, %210 ]
  %214 = phi i64 [ %156, %152 ], [ %198, %208 ], [ %198, %210 ]
  %215 = phi %"class.base::BasicStringPiece"* [ %158, %152 ], [ %193, %208 ], [ %193, %210 ]
  %216 = phi %"class.base::BasicStringPiece"* [ %155, %152 ], [ %197, %208 ], [ %197, %210 ]
  %217 = icmp ult %"class.base::BasicStringPiece"* %216, %215
  br i1 %217, label %218, label %226

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %216, i64 0, i32 0
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.31, i64 0, i64 0), i8** %219, align 8
  %220 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %216, i64 0, i32 1
  store i64 20, i64* %220, align 8
  %221 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %216, i64 1
  %222 = ptrtoint %"class.base::BasicStringPiece"* %221 to i64
  %223 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %222, i64* %223, align 8
  %224 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %225 = ptrtoint %"class.base::BasicStringPiece"* %224 to i64
  br label %278

226:                                              ; preds = %212
  %227 = ptrtoint %"class.base::BasicStringPiece"* %216 to i64
  %228 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %229 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = sub i64 %227, %230
  %232 = ashr exact i64 %231, 4
  %233 = add nsw i64 %232, 1
  %234 = icmp ugt i64 %233, 1152921504606846975
  br i1 %234, label %235, label %237

235:                                              ; preds = %226
  %236 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %236) #13
  unreachable

237:                                              ; preds = %226
  %238 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %239 = sub i64 %213, %230
  %240 = ashr exact i64 %239, 4
  %241 = icmp ult i64 %240, 576460752303423487
  br i1 %241, label %242, label %250

242:                                              ; preds = %237
  %243 = ashr exact i64 %239, 3
  %244 = icmp ult i64 %243, %233
  %245 = select i1 %244, i64 %233, i64 %243
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %255, label %247

247:                                              ; preds = %242
  %248 = icmp ugt i64 %245, 1152921504606846975
  br i1 %248, label %249, label %250

249:                                              ; preds = %247
  tail call void @abort() #13
  unreachable

250:                                              ; preds = %247, %237
  %251 = phi i64 [ %245, %247 ], [ 1152921504606846975, %237 ]
  %252 = shl i64 %251, 4
  %253 = tail call i8* @_Znwm(i64 %252) #12
  %254 = bitcast i8* %253 to %"class.base::BasicStringPiece"*
  br label %255

255:                                              ; preds = %250, %242
  %256 = phi i64 [ %251, %250 ], [ 0, %242 ]
  %257 = phi %"class.base::BasicStringPiece"* [ %254, %250 ], [ null, %242 ]
  %258 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %257, i64 %232
  %259 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %257, i64 %256
  %260 = ptrtoint %"class.base::BasicStringPiece"* %259 to i64
  %261 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %258, i64 0, i32 0
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.31, i64 0, i64 0), i8** %261, align 8
  %262 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %257, i64 %232, i32 1
  store i64 20, i64* %262, align 8
  %263 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %258, i64 1
  %264 = ptrtoint %"class.base::BasicStringPiece"* %263 to i64
  %265 = sub i64 %214, %230
  %266 = ashr exact i64 %265, 4
  %267 = sub nsw i64 0, %266
  %268 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %258, i64 %267
  %269 = ptrtoint %"class.base::BasicStringPiece"* %268 to i64
  %270 = icmp sgt i64 %265, 0
  br i1 %270, label %271, label %274

271:                                              ; preds = %255
  %272 = bitcast %"class.base::BasicStringPiece"* %268 to i8*
  %273 = inttoptr i64 %230 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 %273, i64 %265, i1 false) #11
  br label %274

274:                                              ; preds = %271, %255
  store i64 %269, i64* %229, align 8
  store i64 %264, i64* %228, align 8
  store i64 %260, i64* %238, align 8
  %275 = icmp eq i64 %230, 0
  br i1 %275, label %278, label %276

276:                                              ; preds = %274
  %277 = inttoptr i64 %230 to i8*
  tail call void @_ZdlPv(i8* %277) #12
  br label %278

278:                                              ; preds = %218, %274, %276
  %279 = phi i64 [ %225, %218 ], [ %260, %274 ], [ %260, %276 ]
  %280 = phi i64 [ %222, %218 ], [ %264, %274 ], [ %264, %276 ]
  %281 = phi %"class.base::BasicStringPiece"* [ %224, %218 ], [ %259, %274 ], [ %259, %276 ]
  %282 = phi %"class.base::BasicStringPiece"* [ %221, %218 ], [ %263, %274 ], [ %263, %276 ]
  %283 = icmp ult %"class.base::BasicStringPiece"* %282, %281
  br i1 %283, label %284, label %292

284:                                              ; preds = %278
  %285 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %282, i64 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i64 0, i64 0), i8** %285, align 8
  %286 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %282, i64 0, i32 1
  store i64 15, i64* %286, align 8
  %287 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %282, i64 1
  %288 = ptrtoint %"class.base::BasicStringPiece"* %287 to i64
  %289 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %288, i64* %289, align 8
  %290 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %291 = ptrtoint %"class.base::BasicStringPiece"* %290 to i64
  br label %344

292:                                              ; preds = %278
  %293 = ptrtoint %"class.base::BasicStringPiece"* %282 to i64
  %294 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %295 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %296 = load i64, i64* %295, align 8
  %297 = sub i64 %293, %296
  %298 = ashr exact i64 %297, 4
  %299 = add nsw i64 %298, 1
  %300 = icmp ugt i64 %299, 1152921504606846975
  br i1 %300, label %301, label %303

301:                                              ; preds = %292
  %302 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %302) #13
  unreachable

303:                                              ; preds = %292
  %304 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %305 = sub i64 %279, %296
  %306 = ashr exact i64 %305, 4
  %307 = icmp ult i64 %306, 576460752303423487
  br i1 %307, label %308, label %316

308:                                              ; preds = %303
  %309 = ashr exact i64 %305, 3
  %310 = icmp ult i64 %309, %299
  %311 = select i1 %310, i64 %299, i64 %309
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %321, label %313

313:                                              ; preds = %308
  %314 = icmp ugt i64 %311, 1152921504606846975
  br i1 %314, label %315, label %316

315:                                              ; preds = %313
  tail call void @abort() #13
  unreachable

316:                                              ; preds = %313, %303
  %317 = phi i64 [ %311, %313 ], [ 1152921504606846975, %303 ]
  %318 = shl i64 %317, 4
  %319 = tail call i8* @_Znwm(i64 %318) #12
  %320 = bitcast i8* %319 to %"class.base::BasicStringPiece"*
  br label %321

321:                                              ; preds = %316, %308
  %322 = phi i64 [ %317, %316 ], [ 0, %308 ]
  %323 = phi %"class.base::BasicStringPiece"* [ %320, %316 ], [ null, %308 ]
  %324 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %323, i64 %298
  %325 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %323, i64 %322
  %326 = ptrtoint %"class.base::BasicStringPiece"* %325 to i64
  %327 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %324, i64 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i64 0, i64 0), i8** %327, align 8
  %328 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %323, i64 %298, i32 1
  store i64 15, i64* %328, align 8
  %329 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %324, i64 1
  %330 = ptrtoint %"class.base::BasicStringPiece"* %329 to i64
  %331 = sub i64 %280, %296
  %332 = ashr exact i64 %331, 4
  %333 = sub nsw i64 0, %332
  %334 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %324, i64 %333
  %335 = ptrtoint %"class.base::BasicStringPiece"* %334 to i64
  %336 = icmp sgt i64 %331, 0
  br i1 %336, label %337, label %340

337:                                              ; preds = %321
  %338 = bitcast %"class.base::BasicStringPiece"* %334 to i8*
  %339 = inttoptr i64 %296 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %338, i8* align 8 %339, i64 %331, i1 false) #11
  br label %340

340:                                              ; preds = %337, %321
  store i64 %335, i64* %295, align 8
  store i64 %330, i64* %294, align 8
  store i64 %326, i64* %304, align 8
  %341 = icmp eq i64 %296, 0
  br i1 %341, label %344, label %342

342:                                              ; preds = %340
  %343 = inttoptr i64 %296 to i8*
  tail call void @_ZdlPv(i8* %343) #12
  br label %344

344:                                              ; preds = %284, %340, %342
  %345 = phi i64 [ %291, %284 ], [ %326, %340 ], [ %326, %342 ]
  %346 = phi i64 [ %288, %284 ], [ %330, %340 ], [ %330, %342 ]
  %347 = phi %"class.base::BasicStringPiece"* [ %290, %284 ], [ %325, %340 ], [ %325, %342 ]
  %348 = phi %"class.base::BasicStringPiece"* [ %287, %284 ], [ %329, %340 ], [ %329, %342 ]
  %349 = icmp ult %"class.base::BasicStringPiece"* %348, %347
  br i1 %349, label %350, label %358

350:                                              ; preds = %344
  %351 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %348, i64 0, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), i8** %351, align 8
  %352 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %348, i64 0, i32 1
  store i64 12, i64* %352, align 8
  %353 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %348, i64 1
  %354 = ptrtoint %"class.base::BasicStringPiece"* %353 to i64
  %355 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %354, i64* %355, align 8
  %356 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %357 = ptrtoint %"class.base::BasicStringPiece"* %356 to i64
  br label %410

358:                                              ; preds = %344
  %359 = ptrtoint %"class.base::BasicStringPiece"* %348 to i64
  %360 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %361 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %362 = load i64, i64* %361, align 8
  %363 = sub i64 %359, %362
  %364 = ashr exact i64 %363, 4
  %365 = add nsw i64 %364, 1
  %366 = icmp ugt i64 %365, 1152921504606846975
  br i1 %366, label %367, label %369

367:                                              ; preds = %358
  %368 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %368) #13
  unreachable

369:                                              ; preds = %358
  %370 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %371 = sub i64 %345, %362
  %372 = ashr exact i64 %371, 4
  %373 = icmp ult i64 %372, 576460752303423487
  br i1 %373, label %374, label %382

374:                                              ; preds = %369
  %375 = ashr exact i64 %371, 3
  %376 = icmp ult i64 %375, %365
  %377 = select i1 %376, i64 %365, i64 %375
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %387, label %379

379:                                              ; preds = %374
  %380 = icmp ugt i64 %377, 1152921504606846975
  br i1 %380, label %381, label %382

381:                                              ; preds = %379
  tail call void @abort() #13
  unreachable

382:                                              ; preds = %379, %369
  %383 = phi i64 [ %377, %379 ], [ 1152921504606846975, %369 ]
  %384 = shl i64 %383, 4
  %385 = tail call i8* @_Znwm(i64 %384) #12
  %386 = bitcast i8* %385 to %"class.base::BasicStringPiece"*
  br label %387

387:                                              ; preds = %382, %374
  %388 = phi i64 [ %383, %382 ], [ 0, %374 ]
  %389 = phi %"class.base::BasicStringPiece"* [ %386, %382 ], [ null, %374 ]
  %390 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %389, i64 %364
  %391 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %389, i64 %388
  %392 = ptrtoint %"class.base::BasicStringPiece"* %391 to i64
  %393 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %390, i64 0, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), i8** %393, align 8
  %394 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %389, i64 %364, i32 1
  store i64 12, i64* %394, align 8
  %395 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %390, i64 1
  %396 = ptrtoint %"class.base::BasicStringPiece"* %395 to i64
  %397 = sub i64 %346, %362
  %398 = ashr exact i64 %397, 4
  %399 = sub nsw i64 0, %398
  %400 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %390, i64 %399
  %401 = ptrtoint %"class.base::BasicStringPiece"* %400 to i64
  %402 = icmp sgt i64 %397, 0
  br i1 %402, label %403, label %406

403:                                              ; preds = %387
  %404 = bitcast %"class.base::BasicStringPiece"* %400 to i8*
  %405 = inttoptr i64 %362 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %404, i8* align 8 %405, i64 %397, i1 false) #11
  br label %406

406:                                              ; preds = %403, %387
  store i64 %401, i64* %361, align 8
  store i64 %396, i64* %360, align 8
  store i64 %392, i64* %370, align 8
  %407 = icmp eq i64 %362, 0
  br i1 %407, label %410, label %408

408:                                              ; preds = %406
  %409 = inttoptr i64 %362 to i8*
  tail call void @_ZdlPv(i8* %409) #12
  br label %410

410:                                              ; preds = %350, %406, %408
  %411 = phi i64 [ %357, %350 ], [ %392, %406 ], [ %392, %408 ]
  %412 = phi i64 [ %354, %350 ], [ %396, %406 ], [ %396, %408 ]
  %413 = phi %"class.base::BasicStringPiece"* [ %356, %350 ], [ %391, %406 ], [ %391, %408 ]
  %414 = phi %"class.base::BasicStringPiece"* [ %353, %350 ], [ %395, %406 ], [ %395, %408 ]
  %415 = icmp ult %"class.base::BasicStringPiece"* %414, %413
  br i1 %415, label %416, label %424

416:                                              ; preds = %410
  %417 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %414, i64 0, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i64 0, i64 0), i8** %417, align 8
  %418 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %414, i64 0, i32 1
  store i64 11, i64* %418, align 8
  %419 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %414, i64 1
  %420 = ptrtoint %"class.base::BasicStringPiece"* %419 to i64
  %421 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %420, i64* %421, align 8
  %422 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %423 = ptrtoint %"class.base::BasicStringPiece"* %422 to i64
  br label %476

424:                                              ; preds = %410
  %425 = ptrtoint %"class.base::BasicStringPiece"* %414 to i64
  %426 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %427 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %428 = load i64, i64* %427, align 8
  %429 = sub i64 %425, %428
  %430 = ashr exact i64 %429, 4
  %431 = add nsw i64 %430, 1
  %432 = icmp ugt i64 %431, 1152921504606846975
  br i1 %432, label %433, label %435

433:                                              ; preds = %424
  %434 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %434) #13
  unreachable

435:                                              ; preds = %424
  %436 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %437 = sub i64 %411, %428
  %438 = ashr exact i64 %437, 4
  %439 = icmp ult i64 %438, 576460752303423487
  br i1 %439, label %440, label %448

440:                                              ; preds = %435
  %441 = ashr exact i64 %437, 3
  %442 = icmp ult i64 %441, %431
  %443 = select i1 %442, i64 %431, i64 %441
  %444 = icmp eq i64 %443, 0
  br i1 %444, label %453, label %445

445:                                              ; preds = %440
  %446 = icmp ugt i64 %443, 1152921504606846975
  br i1 %446, label %447, label %448

447:                                              ; preds = %445
  tail call void @abort() #13
  unreachable

448:                                              ; preds = %445, %435
  %449 = phi i64 [ %443, %445 ], [ 1152921504606846975, %435 ]
  %450 = shl i64 %449, 4
  %451 = tail call i8* @_Znwm(i64 %450) #12
  %452 = bitcast i8* %451 to %"class.base::BasicStringPiece"*
  br label %453

453:                                              ; preds = %448, %440
  %454 = phi i64 [ %449, %448 ], [ 0, %440 ]
  %455 = phi %"class.base::BasicStringPiece"* [ %452, %448 ], [ null, %440 ]
  %456 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %455, i64 %430
  %457 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %455, i64 %454
  %458 = ptrtoint %"class.base::BasicStringPiece"* %457 to i64
  %459 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %456, i64 0, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i64 0, i64 0), i8** %459, align 8
  %460 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %455, i64 %430, i32 1
  store i64 11, i64* %460, align 8
  %461 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %456, i64 1
  %462 = ptrtoint %"class.base::BasicStringPiece"* %461 to i64
  %463 = sub i64 %412, %428
  %464 = ashr exact i64 %463, 4
  %465 = sub nsw i64 0, %464
  %466 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %456, i64 %465
  %467 = ptrtoint %"class.base::BasicStringPiece"* %466 to i64
  %468 = icmp sgt i64 %463, 0
  br i1 %468, label %469, label %472

469:                                              ; preds = %453
  %470 = bitcast %"class.base::BasicStringPiece"* %466 to i8*
  %471 = inttoptr i64 %428 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %470, i8* align 8 %471, i64 %463, i1 false) #11
  br label %472

472:                                              ; preds = %469, %453
  store i64 %467, i64* %427, align 8
  store i64 %462, i64* %426, align 8
  store i64 %458, i64* %436, align 8
  %473 = icmp eq i64 %428, 0
  br i1 %473, label %476, label %474

474:                                              ; preds = %472
  %475 = inttoptr i64 %428 to i8*
  tail call void @_ZdlPv(i8* %475) #12
  br label %476

476:                                              ; preds = %416, %472, %474
  %477 = phi i64 [ %423, %416 ], [ %458, %472 ], [ %458, %474 ]
  %478 = phi i64 [ %420, %416 ], [ %462, %472 ], [ %462, %474 ]
  %479 = phi %"class.base::BasicStringPiece"* [ %422, %416 ], [ %457, %472 ], [ %457, %474 ]
  %480 = phi %"class.base::BasicStringPiece"* [ %419, %416 ], [ %461, %472 ], [ %461, %474 ]
  %481 = icmp ult %"class.base::BasicStringPiece"* %480, %479
  br i1 %481, label %482, label %488

482:                                              ; preds = %476
  %483 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %480, i64 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i64 0, i64 0), i8** %483, align 8
  %484 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %480, i64 0, i32 1
  store i64 15, i64* %484, align 8
  %485 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %480, i64 1
  %486 = ptrtoint %"class.base::BasicStringPiece"* %485 to i64
  %487 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %486, i64* %487, align 8
  br label %540

488:                                              ; preds = %476
  %489 = ptrtoint %"class.base::BasicStringPiece"* %480 to i64
  %490 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %491 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %492 = load i64, i64* %491, align 8
  %493 = sub i64 %489, %492
  %494 = ashr exact i64 %493, 4
  %495 = add nsw i64 %494, 1
  %496 = icmp ugt i64 %495, 1152921504606846975
  br i1 %496, label %497, label %499

497:                                              ; preds = %488
  %498 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %498) #13
  unreachable

499:                                              ; preds = %488
  %500 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %501 = sub i64 %477, %492
  %502 = ashr exact i64 %501, 4
  %503 = icmp ult i64 %502, 576460752303423487
  br i1 %503, label %504, label %512

504:                                              ; preds = %499
  %505 = ashr exact i64 %501, 3
  %506 = icmp ult i64 %505, %495
  %507 = select i1 %506, i64 %495, i64 %505
  %508 = icmp eq i64 %507, 0
  br i1 %508, label %517, label %509

509:                                              ; preds = %504
  %510 = icmp ugt i64 %507, 1152921504606846975
  br i1 %510, label %511, label %512

511:                                              ; preds = %509
  tail call void @abort() #13
  unreachable

512:                                              ; preds = %509, %499
  %513 = phi i64 [ %507, %509 ], [ 1152921504606846975, %499 ]
  %514 = shl i64 %513, 4
  %515 = tail call i8* @_Znwm(i64 %514) #12
  %516 = bitcast i8* %515 to %"class.base::BasicStringPiece"*
  br label %517

517:                                              ; preds = %512, %504
  %518 = phi i64 [ %513, %512 ], [ 0, %504 ]
  %519 = phi %"class.base::BasicStringPiece"* [ %516, %512 ], [ null, %504 ]
  %520 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %519, i64 %494
  %521 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %519, i64 %518
  %522 = ptrtoint %"class.base::BasicStringPiece"* %521 to i64
  %523 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %520, i64 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i64 0, i64 0), i8** %523, align 8
  %524 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %519, i64 %494, i32 1
  store i64 15, i64* %524, align 8
  %525 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %520, i64 1
  %526 = ptrtoint %"class.base::BasicStringPiece"* %525 to i64
  %527 = sub i64 %478, %492
  %528 = ashr exact i64 %527, 4
  %529 = sub nsw i64 0, %528
  %530 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %520, i64 %529
  %531 = ptrtoint %"class.base::BasicStringPiece"* %530 to i64
  %532 = icmp sgt i64 %527, 0
  br i1 %532, label %533, label %536

533:                                              ; preds = %517
  %534 = bitcast %"class.base::BasicStringPiece"* %530 to i8*
  %535 = inttoptr i64 %492 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %534, i8* align 8 %535, i64 %527, i1 false) #11
  br label %536

536:                                              ; preds = %533, %517
  store i64 %531, i64* %491, align 8
  store i64 %526, i64* %490, align 8
  store i64 %522, i64* %500, align 8
  %537 = icmp eq i64 %492, 0
  br i1 %537, label %540, label %538

538:                                              ; preds = %536
  %539 = inttoptr i64 %492 to i8*
  tail call void @_ZdlPv(i8* %539) #12
  br label %540

540:                                              ; preds = %482, %536, %538
  %541 = phi %"class.base::BasicStringPiece"* [ %485, %482 ], [ %525, %536 ], [ %525, %538 ]
  %542 = phi i64 [ %486, %482 ], [ %526, %536 ], [ %526, %538 ]
  %543 = icmp slt i32 %1, 68
  br i1 %543, label %544, label %606

544:                                              ; preds = %540
  %545 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %546 = icmp ult %"class.base::BasicStringPiece"* %541, %545
  %547 = ptrtoint %"class.base::BasicStringPiece"* %545 to i64
  br i1 %546, label %548, label %554

548:                                              ; preds = %544
  %549 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %541, i64 0, i32 0
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i64 0, i64 0), i8** %549, align 8
  %550 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %541, i64 0, i32 1
  store i64 20, i64* %550, align 8
  %551 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %541, i64 1
  %552 = ptrtoint %"class.base::BasicStringPiece"* %551 to i64
  %553 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %552, i64* %553, align 8
  br label %606

554:                                              ; preds = %544
  %555 = ptrtoint %"class.base::BasicStringPiece"* %541 to i64
  %556 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %557 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %558 = load i64, i64* %557, align 8
  %559 = sub i64 %555, %558
  %560 = ashr exact i64 %559, 4
  %561 = add nsw i64 %560, 1
  %562 = icmp ugt i64 %561, 1152921504606846975
  br i1 %562, label %563, label %565

563:                                              ; preds = %554
  %564 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %564) #13
  unreachable

565:                                              ; preds = %554
  %566 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %567 = sub i64 %547, %558
  %568 = ashr exact i64 %567, 4
  %569 = icmp ult i64 %568, 576460752303423487
  br i1 %569, label %570, label %578

570:                                              ; preds = %565
  %571 = ashr exact i64 %567, 3
  %572 = icmp ult i64 %571, %561
  %573 = select i1 %572, i64 %561, i64 %571
  %574 = icmp eq i64 %573, 0
  br i1 %574, label %583, label %575

575:                                              ; preds = %570
  %576 = icmp ugt i64 %573, 1152921504606846975
  br i1 %576, label %577, label %578

577:                                              ; preds = %575
  tail call void @abort() #13
  unreachable

578:                                              ; preds = %575, %565
  %579 = phi i64 [ %573, %575 ], [ 1152921504606846975, %565 ]
  %580 = shl i64 %579, 4
  %581 = tail call i8* @_Znwm(i64 %580) #12
  %582 = bitcast i8* %581 to %"class.base::BasicStringPiece"*
  br label %583

583:                                              ; preds = %578, %570
  %584 = phi i64 [ %579, %578 ], [ 0, %570 ]
  %585 = phi %"class.base::BasicStringPiece"* [ %582, %578 ], [ null, %570 ]
  %586 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %585, i64 %560
  %587 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %585, i64 %584
  %588 = ptrtoint %"class.base::BasicStringPiece"* %587 to i64
  %589 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %586, i64 0, i32 0
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i64 0, i64 0), i8** %589, align 8
  %590 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %585, i64 %560, i32 1
  store i64 20, i64* %590, align 8
  %591 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %586, i64 1
  %592 = ptrtoint %"class.base::BasicStringPiece"* %591 to i64
  %593 = sub i64 %542, %558
  %594 = ashr exact i64 %593, 4
  %595 = sub nsw i64 0, %594
  %596 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %586, i64 %595
  %597 = ptrtoint %"class.base::BasicStringPiece"* %596 to i64
  %598 = icmp sgt i64 %593, 0
  br i1 %598, label %599, label %602

599:                                              ; preds = %583
  %600 = bitcast %"class.base::BasicStringPiece"* %596 to i8*
  %601 = inttoptr i64 %558 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %600, i8* align 8 %601, i64 %593, i1 false) #11
  br label %602

602:                                              ; preds = %599, %583
  store i64 %597, i64* %557, align 8
  store i64 %592, i64* %556, align 8
  store i64 %588, i64* %566, align 8
  %603 = icmp eq i64 %558, 0
  br i1 %603, label %606, label %604

604:                                              ; preds = %602
  %605 = inttoptr i64 %558 to i8*
  tail call void @_ZdlPv(i8* %605) #12
  br label %606

606:                                              ; preds = %604, %602, %548, %540
  %607 = phi i64 [ %592, %604 ], [ %592, %602 ], [ %552, %548 ], [ %542, %540 ]
  %608 = phi %"class.base::BasicStringPiece"* [ %591, %604 ], [ %591, %602 ], [ %551, %548 ], [ %541, %540 ]
  %609 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %610 = icmp ult %"class.base::BasicStringPiece"* %608, %609
  %611 = ptrtoint %"class.base::BasicStringPiece"* %609 to i64
  br i1 %610, label %612, label %620

612:                                              ; preds = %606
  %613 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %608, i64 0, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37, i64 0, i64 0), i8** %613, align 8
  %614 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %608, i64 0, i32 1
  store i64 11, i64* %614, align 8
  %615 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %608, i64 1
  %616 = ptrtoint %"class.base::BasicStringPiece"* %615 to i64
  %617 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %616, i64* %617, align 8
  %618 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %619 = ptrtoint %"class.base::BasicStringPiece"* %618 to i64
  br label %672

620:                                              ; preds = %606
  %621 = ptrtoint %"class.base::BasicStringPiece"* %608 to i64
  %622 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %623 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %624 = load i64, i64* %623, align 8
  %625 = sub i64 %621, %624
  %626 = ashr exact i64 %625, 4
  %627 = add nsw i64 %626, 1
  %628 = icmp ugt i64 %627, 1152921504606846975
  br i1 %628, label %629, label %631

629:                                              ; preds = %620
  %630 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %630) #13
  unreachable

631:                                              ; preds = %620
  %632 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %633 = sub i64 %611, %624
  %634 = ashr exact i64 %633, 4
  %635 = icmp ult i64 %634, 576460752303423487
  br i1 %635, label %636, label %644

636:                                              ; preds = %631
  %637 = ashr exact i64 %633, 3
  %638 = icmp ult i64 %637, %627
  %639 = select i1 %638, i64 %627, i64 %637
  %640 = icmp eq i64 %639, 0
  br i1 %640, label %649, label %641

641:                                              ; preds = %636
  %642 = icmp ugt i64 %639, 1152921504606846975
  br i1 %642, label %643, label %644

643:                                              ; preds = %641
  tail call void @abort() #13
  unreachable

644:                                              ; preds = %641, %631
  %645 = phi i64 [ %639, %641 ], [ 1152921504606846975, %631 ]
  %646 = shl i64 %645, 4
  %647 = tail call i8* @_Znwm(i64 %646) #12
  %648 = bitcast i8* %647 to %"class.base::BasicStringPiece"*
  br label %649

649:                                              ; preds = %644, %636
  %650 = phi i64 [ %645, %644 ], [ 0, %636 ]
  %651 = phi %"class.base::BasicStringPiece"* [ %648, %644 ], [ null, %636 ]
  %652 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %651, i64 %626
  %653 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %651, i64 %650
  %654 = ptrtoint %"class.base::BasicStringPiece"* %653 to i64
  %655 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %652, i64 0, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37, i64 0, i64 0), i8** %655, align 8
  %656 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %651, i64 %626, i32 1
  store i64 11, i64* %656, align 8
  %657 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %652, i64 1
  %658 = ptrtoint %"class.base::BasicStringPiece"* %657 to i64
  %659 = sub i64 %607, %624
  %660 = ashr exact i64 %659, 4
  %661 = sub nsw i64 0, %660
  %662 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %652, i64 %661
  %663 = ptrtoint %"class.base::BasicStringPiece"* %662 to i64
  %664 = icmp sgt i64 %659, 0
  br i1 %664, label %665, label %668

665:                                              ; preds = %649
  %666 = bitcast %"class.base::BasicStringPiece"* %662 to i8*
  %667 = inttoptr i64 %624 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %666, i8* align 8 %667, i64 %659, i1 false) #11
  br label %668

668:                                              ; preds = %665, %649
  store i64 %663, i64* %623, align 8
  store i64 %658, i64* %622, align 8
  store i64 %654, i64* %632, align 8
  %669 = icmp eq i64 %624, 0
  br i1 %669, label %672, label %670

670:                                              ; preds = %668
  %671 = inttoptr i64 %624 to i8*
  tail call void @_ZdlPv(i8* %671) #12
  br label %672

672:                                              ; preds = %612, %668, %670
  %673 = phi i64 [ %619, %612 ], [ %654, %668 ], [ %654, %670 ]
  %674 = phi i64 [ %616, %612 ], [ %658, %668 ], [ %658, %670 ]
  %675 = phi %"class.base::BasicStringPiece"* [ %618, %612 ], [ %653, %668 ], [ %653, %670 ]
  %676 = phi %"class.base::BasicStringPiece"* [ %615, %612 ], [ %657, %668 ], [ %657, %670 ]
  %677 = icmp ult %"class.base::BasicStringPiece"* %676, %675
  br i1 %677, label %678, label %684

678:                                              ; preds = %672
  %679 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %676, i64 0, i32 0
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i64 0, i64 0), i8** %679, align 8
  %680 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %676, i64 0, i32 1
  store i64 14, i64* %680, align 8
  %681 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %676, i64 1
  %682 = ptrtoint %"class.base::BasicStringPiece"* %681 to i64
  %683 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %682, i64* %683, align 8
  br label %736

684:                                              ; preds = %672
  %685 = ptrtoint %"class.base::BasicStringPiece"* %676 to i64
  %686 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %687 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %688 = load i64, i64* %687, align 8
  %689 = sub i64 %685, %688
  %690 = ashr exact i64 %689, 4
  %691 = add nsw i64 %690, 1
  %692 = icmp ugt i64 %691, 1152921504606846975
  br i1 %692, label %693, label %695

693:                                              ; preds = %684
  %694 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %694) #13
  unreachable

695:                                              ; preds = %684
  %696 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %697 = sub i64 %673, %688
  %698 = ashr exact i64 %697, 4
  %699 = icmp ult i64 %698, 576460752303423487
  br i1 %699, label %700, label %708

700:                                              ; preds = %695
  %701 = ashr exact i64 %697, 3
  %702 = icmp ult i64 %701, %691
  %703 = select i1 %702, i64 %691, i64 %701
  %704 = icmp eq i64 %703, 0
  br i1 %704, label %713, label %705

705:                                              ; preds = %700
  %706 = icmp ugt i64 %703, 1152921504606846975
  br i1 %706, label %707, label %708

707:                                              ; preds = %705
  tail call void @abort() #13
  unreachable

708:                                              ; preds = %705, %695
  %709 = phi i64 [ %703, %705 ], [ 1152921504606846975, %695 ]
  %710 = shl i64 %709, 4
  %711 = tail call i8* @_Znwm(i64 %710) #12
  %712 = bitcast i8* %711 to %"class.base::BasicStringPiece"*
  br label %713

713:                                              ; preds = %708, %700
  %714 = phi i64 [ %709, %708 ], [ 0, %700 ]
  %715 = phi %"class.base::BasicStringPiece"* [ %712, %708 ], [ null, %700 ]
  %716 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %715, i64 %690
  %717 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %715, i64 %714
  %718 = ptrtoint %"class.base::BasicStringPiece"* %717 to i64
  %719 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %716, i64 0, i32 0
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i64 0, i64 0), i8** %719, align 8
  %720 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %715, i64 %690, i32 1
  store i64 14, i64* %720, align 8
  %721 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %716, i64 1
  %722 = ptrtoint %"class.base::BasicStringPiece"* %721 to i64
  %723 = sub i64 %674, %688
  %724 = ashr exact i64 %723, 4
  %725 = sub nsw i64 0, %724
  %726 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %716, i64 %725
  %727 = ptrtoint %"class.base::BasicStringPiece"* %726 to i64
  %728 = icmp sgt i64 %723, 0
  br i1 %728, label %729, label %732

729:                                              ; preds = %713
  %730 = bitcast %"class.base::BasicStringPiece"* %726 to i8*
  %731 = inttoptr i64 %688 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %730, i8* align 8 %731, i64 %723, i1 false) #11
  br label %732

732:                                              ; preds = %729, %713
  store i64 %727, i64* %687, align 8
  store i64 %722, i64* %686, align 8
  store i64 %718, i64* %696, align 8
  %733 = icmp eq i64 %688, 0
  br i1 %733, label %736, label %734

734:                                              ; preds = %732
  %735 = inttoptr i64 %688 to i8*
  tail call void @_ZdlPv(i8* %735) #12
  br label %736

736:                                              ; preds = %678, %732, %734
  %737 = phi %"class.base::BasicStringPiece"* [ %681, %678 ], [ %721, %732 ], [ %721, %734 ]
  %738 = phi i64 [ %682, %678 ], [ %722, %732 ], [ %722, %734 ]
  %739 = icmp slt i32 %1, 45
  br i1 %739, label %740, label %868

740:                                              ; preds = %736
  %741 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %742 = icmp ult %"class.base::BasicStringPiece"* %737, %741
  %743 = ptrtoint %"class.base::BasicStringPiece"* %741 to i64
  br i1 %742, label %744, label %752

744:                                              ; preds = %740
  %745 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %737, i64 0, i32 0
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.39, i64 0, i64 0), i8** %745, align 8
  %746 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %737, i64 0, i32 1
  store i64 20, i64* %746, align 8
  %747 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %737, i64 1
  %748 = ptrtoint %"class.base::BasicStringPiece"* %747 to i64
  %749 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %748, i64* %749, align 8
  %750 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %751 = ptrtoint %"class.base::BasicStringPiece"* %750 to i64
  br label %804

752:                                              ; preds = %740
  %753 = ptrtoint %"class.base::BasicStringPiece"* %737 to i64
  %754 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %755 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %756 = load i64, i64* %755, align 8
  %757 = sub i64 %753, %756
  %758 = ashr exact i64 %757, 4
  %759 = add nsw i64 %758, 1
  %760 = icmp ugt i64 %759, 1152921504606846975
  br i1 %760, label %761, label %763

761:                                              ; preds = %752
  %762 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %762) #13
  unreachable

763:                                              ; preds = %752
  %764 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %765 = sub i64 %743, %756
  %766 = ashr exact i64 %765, 4
  %767 = icmp ult i64 %766, 576460752303423487
  br i1 %767, label %768, label %776

768:                                              ; preds = %763
  %769 = ashr exact i64 %765, 3
  %770 = icmp ult i64 %769, %759
  %771 = select i1 %770, i64 %759, i64 %769
  %772 = icmp eq i64 %771, 0
  br i1 %772, label %781, label %773

773:                                              ; preds = %768
  %774 = icmp ugt i64 %771, 1152921504606846975
  br i1 %774, label %775, label %776

775:                                              ; preds = %773
  tail call void @abort() #13
  unreachable

776:                                              ; preds = %773, %763
  %777 = phi i64 [ %771, %773 ], [ 1152921504606846975, %763 ]
  %778 = shl i64 %777, 4
  %779 = tail call i8* @_Znwm(i64 %778) #12
  %780 = bitcast i8* %779 to %"class.base::BasicStringPiece"*
  br label %781

781:                                              ; preds = %776, %768
  %782 = phi i64 [ %777, %776 ], [ 0, %768 ]
  %783 = phi %"class.base::BasicStringPiece"* [ %780, %776 ], [ null, %768 ]
  %784 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %783, i64 %758
  %785 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %783, i64 %782
  %786 = ptrtoint %"class.base::BasicStringPiece"* %785 to i64
  %787 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %784, i64 0, i32 0
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.39, i64 0, i64 0), i8** %787, align 8
  %788 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %783, i64 %758, i32 1
  store i64 20, i64* %788, align 8
  %789 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %784, i64 1
  %790 = ptrtoint %"class.base::BasicStringPiece"* %789 to i64
  %791 = sub i64 %738, %756
  %792 = ashr exact i64 %791, 4
  %793 = sub nsw i64 0, %792
  %794 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %784, i64 %793
  %795 = ptrtoint %"class.base::BasicStringPiece"* %794 to i64
  %796 = icmp sgt i64 %791, 0
  br i1 %796, label %797, label %800

797:                                              ; preds = %781
  %798 = bitcast %"class.base::BasicStringPiece"* %794 to i8*
  %799 = inttoptr i64 %756 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %798, i8* align 8 %799, i64 %791, i1 false) #11
  br label %800

800:                                              ; preds = %797, %781
  store i64 %795, i64* %755, align 8
  store i64 %790, i64* %754, align 8
  store i64 %786, i64* %764, align 8
  %801 = icmp eq i64 %756, 0
  br i1 %801, label %804, label %802

802:                                              ; preds = %800
  %803 = inttoptr i64 %756 to i8*
  tail call void @_ZdlPv(i8* %803) #12
  br label %804

804:                                              ; preds = %744, %800, %802
  %805 = phi i64 [ %751, %744 ], [ %786, %800 ], [ %786, %802 ]
  %806 = phi i64 [ %748, %744 ], [ %790, %800 ], [ %790, %802 ]
  %807 = phi %"class.base::BasicStringPiece"* [ %750, %744 ], [ %785, %800 ], [ %785, %802 ]
  %808 = phi %"class.base::BasicStringPiece"* [ %747, %744 ], [ %789, %800 ], [ %789, %802 ]
  %809 = icmp ult %"class.base::BasicStringPiece"* %808, %807
  br i1 %809, label %810, label %816

810:                                              ; preds = %804
  %811 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %808, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i64 0, i64 0), i8** %811, align 8
  %812 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %808, i64 0, i32 1
  store i64 7, i64* %812, align 8
  %813 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %808, i64 1
  %814 = ptrtoint %"class.base::BasicStringPiece"* %813 to i64
  %815 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %814, i64* %815, align 8
  br label %868

816:                                              ; preds = %804
  %817 = ptrtoint %"class.base::BasicStringPiece"* %808 to i64
  %818 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %819 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %820 = load i64, i64* %819, align 8
  %821 = sub i64 %817, %820
  %822 = ashr exact i64 %821, 4
  %823 = add nsw i64 %822, 1
  %824 = icmp ugt i64 %823, 1152921504606846975
  br i1 %824, label %825, label %827

825:                                              ; preds = %816
  %826 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %826) #13
  unreachable

827:                                              ; preds = %816
  %828 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %829 = sub i64 %805, %820
  %830 = ashr exact i64 %829, 4
  %831 = icmp ult i64 %830, 576460752303423487
  br i1 %831, label %832, label %840

832:                                              ; preds = %827
  %833 = ashr exact i64 %829, 3
  %834 = icmp ult i64 %833, %823
  %835 = select i1 %834, i64 %823, i64 %833
  %836 = icmp eq i64 %835, 0
  br i1 %836, label %845, label %837

837:                                              ; preds = %832
  %838 = icmp ugt i64 %835, 1152921504606846975
  br i1 %838, label %839, label %840

839:                                              ; preds = %837
  tail call void @abort() #13
  unreachable

840:                                              ; preds = %837, %827
  %841 = phi i64 [ %835, %837 ], [ 1152921504606846975, %827 ]
  %842 = shl i64 %841, 4
  %843 = tail call i8* @_Znwm(i64 %842) #12
  %844 = bitcast i8* %843 to %"class.base::BasicStringPiece"*
  br label %845

845:                                              ; preds = %840, %832
  %846 = phi i64 [ %841, %840 ], [ 0, %832 ]
  %847 = phi %"class.base::BasicStringPiece"* [ %844, %840 ], [ null, %832 ]
  %848 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %847, i64 %822
  %849 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %847, i64 %846
  %850 = ptrtoint %"class.base::BasicStringPiece"* %849 to i64
  %851 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %848, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i64 0, i64 0), i8** %851, align 8
  %852 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %847, i64 %822, i32 1
  store i64 7, i64* %852, align 8
  %853 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %848, i64 1
  %854 = ptrtoint %"class.base::BasicStringPiece"* %853 to i64
  %855 = sub i64 %806, %820
  %856 = ashr exact i64 %855, 4
  %857 = sub nsw i64 0, %856
  %858 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %848, i64 %857
  %859 = ptrtoint %"class.base::BasicStringPiece"* %858 to i64
  %860 = icmp sgt i64 %855, 0
  br i1 %860, label %861, label %864

861:                                              ; preds = %845
  %862 = bitcast %"class.base::BasicStringPiece"* %858 to i8*
  %863 = inttoptr i64 %820 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %862, i8* align 8 %863, i64 %855, i1 false) #11
  br label %864

864:                                              ; preds = %861, %845
  store i64 %859, i64* %819, align 8
  store i64 %854, i64* %818, align 8
  store i64 %850, i64* %828, align 8
  %865 = icmp eq i64 %820, 0
  br i1 %865, label %868, label %866

866:                                              ; preds = %864
  %867 = inttoptr i64 %820 to i8*
  tail call void @_ZdlPv(i8* %867) #12
  br label %868

868:                                              ; preds = %866, %864, %810, %736
  %869 = phi i64 [ %854, %866 ], [ %854, %864 ], [ %814, %810 ], [ %738, %736 ]
  %870 = phi %"class.base::BasicStringPiece"* [ %853, %866 ], [ %853, %864 ], [ %813, %810 ], [ %737, %736 ]
  %871 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %872 = icmp ult %"class.base::BasicStringPiece"* %870, %871
  %873 = ptrtoint %"class.base::BasicStringPiece"* %871 to i64
  br i1 %872, label %874, label %880

874:                                              ; preds = %868
  %875 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %870, i64 0, i32 0
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i64 0, i64 0), i8** %875, align 8
  %876 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %870, i64 0, i32 1
  store i64 17, i64* %876, align 8
  %877 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %870, i64 1
  %878 = ptrtoint %"class.base::BasicStringPiece"* %877 to i64
  %879 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %878, i64* %879, align 8
  br label %932

880:                                              ; preds = %868
  %881 = ptrtoint %"class.base::BasicStringPiece"* %870 to i64
  %882 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %883 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %884 = load i64, i64* %883, align 8
  %885 = sub i64 %881, %884
  %886 = ashr exact i64 %885, 4
  %887 = add nsw i64 %886, 1
  %888 = icmp ugt i64 %887, 1152921504606846975
  br i1 %888, label %889, label %891

889:                                              ; preds = %880
  %890 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %890) #13
  unreachable

891:                                              ; preds = %880
  %892 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %893 = sub i64 %873, %884
  %894 = ashr exact i64 %893, 4
  %895 = icmp ult i64 %894, 576460752303423487
  br i1 %895, label %896, label %904

896:                                              ; preds = %891
  %897 = ashr exact i64 %893, 3
  %898 = icmp ult i64 %897, %887
  %899 = select i1 %898, i64 %887, i64 %897
  %900 = icmp eq i64 %899, 0
  br i1 %900, label %909, label %901

901:                                              ; preds = %896
  %902 = icmp ugt i64 %899, 1152921504606846975
  br i1 %902, label %903, label %904

903:                                              ; preds = %901
  tail call void @abort() #13
  unreachable

904:                                              ; preds = %901, %891
  %905 = phi i64 [ %899, %901 ], [ 1152921504606846975, %891 ]
  %906 = shl i64 %905, 4
  %907 = tail call i8* @_Znwm(i64 %906) #12
  %908 = bitcast i8* %907 to %"class.base::BasicStringPiece"*
  br label %909

909:                                              ; preds = %904, %896
  %910 = phi i64 [ %905, %904 ], [ 0, %896 ]
  %911 = phi %"class.base::BasicStringPiece"* [ %908, %904 ], [ null, %896 ]
  %912 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %911, i64 %886
  %913 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %911, i64 %910
  %914 = ptrtoint %"class.base::BasicStringPiece"* %913 to i64
  %915 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %912, i64 0, i32 0
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i64 0, i64 0), i8** %915, align 8
  %916 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %911, i64 %886, i32 1
  store i64 17, i64* %916, align 8
  %917 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %912, i64 1
  %918 = ptrtoint %"class.base::BasicStringPiece"* %917 to i64
  %919 = sub i64 %869, %884
  %920 = ashr exact i64 %919, 4
  %921 = sub nsw i64 0, %920
  %922 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %912, i64 %921
  %923 = ptrtoint %"class.base::BasicStringPiece"* %922 to i64
  %924 = icmp sgt i64 %919, 0
  br i1 %924, label %925, label %928

925:                                              ; preds = %909
  %926 = bitcast %"class.base::BasicStringPiece"* %922 to i8*
  %927 = inttoptr i64 %884 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %926, i8* align 8 %927, i64 %919, i1 false) #11
  br label %928

928:                                              ; preds = %925, %909
  store i64 %923, i64* %883, align 8
  store i64 %918, i64* %882, align 8
  store i64 %914, i64* %892, align 8
  %929 = icmp eq i64 %884, 0
  br i1 %929, label %932, label %930

930:                                              ; preds = %928
  %931 = inttoptr i64 %884 to i8*
  tail call void @_ZdlPv(i8* %931) #12
  br label %932

932:                                              ; preds = %874, %928, %930
  %933 = phi %"class.base::BasicStringPiece"* [ %877, %874 ], [ %917, %928 ], [ %917, %930 ]
  %934 = phi i64 [ %878, %874 ], [ %918, %928 ], [ %918, %930 ]
  %935 = icmp slt i32 %1, 76
  br i1 %935, label %936, label %998

936:                                              ; preds = %932
  %937 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %938 = icmp ult %"class.base::BasicStringPiece"* %933, %937
  %939 = ptrtoint %"class.base::BasicStringPiece"* %937 to i64
  br i1 %938, label %940, label %946

940:                                              ; preds = %936
  %941 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %933, i64 0, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42, i64 0, i64 0), i8** %941, align 8
  %942 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %933, i64 0, i32 1
  store i64 11, i64* %942, align 8
  %943 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %933, i64 1
  %944 = ptrtoint %"class.base::BasicStringPiece"* %943 to i64
  %945 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %944, i64* %945, align 8
  br label %998

946:                                              ; preds = %936
  %947 = ptrtoint %"class.base::BasicStringPiece"* %933 to i64
  %948 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %949 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %950 = load i64, i64* %949, align 8
  %951 = sub i64 %947, %950
  %952 = ashr exact i64 %951, 4
  %953 = add nsw i64 %952, 1
  %954 = icmp ugt i64 %953, 1152921504606846975
  br i1 %954, label %955, label %957

955:                                              ; preds = %946
  %956 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %956) #13
  unreachable

957:                                              ; preds = %946
  %958 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %959 = sub i64 %939, %950
  %960 = ashr exact i64 %959, 4
  %961 = icmp ult i64 %960, 576460752303423487
  br i1 %961, label %962, label %970

962:                                              ; preds = %957
  %963 = ashr exact i64 %959, 3
  %964 = icmp ult i64 %963, %953
  %965 = select i1 %964, i64 %953, i64 %963
  %966 = icmp eq i64 %965, 0
  br i1 %966, label %975, label %967

967:                                              ; preds = %962
  %968 = icmp ugt i64 %965, 1152921504606846975
  br i1 %968, label %969, label %970

969:                                              ; preds = %967
  tail call void @abort() #13
  unreachable

970:                                              ; preds = %967, %957
  %971 = phi i64 [ %965, %967 ], [ 1152921504606846975, %957 ]
  %972 = shl i64 %971, 4
  %973 = tail call i8* @_Znwm(i64 %972) #12
  %974 = bitcast i8* %973 to %"class.base::BasicStringPiece"*
  br label %975

975:                                              ; preds = %970, %962
  %976 = phi i64 [ %971, %970 ], [ 0, %962 ]
  %977 = phi %"class.base::BasicStringPiece"* [ %974, %970 ], [ null, %962 ]
  %978 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %977, i64 %952
  %979 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %977, i64 %976
  %980 = ptrtoint %"class.base::BasicStringPiece"* %979 to i64
  %981 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %978, i64 0, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42, i64 0, i64 0), i8** %981, align 8
  %982 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %977, i64 %952, i32 1
  store i64 11, i64* %982, align 8
  %983 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %978, i64 1
  %984 = ptrtoint %"class.base::BasicStringPiece"* %983 to i64
  %985 = sub i64 %934, %950
  %986 = ashr exact i64 %985, 4
  %987 = sub nsw i64 0, %986
  %988 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %978, i64 %987
  %989 = ptrtoint %"class.base::BasicStringPiece"* %988 to i64
  %990 = icmp sgt i64 %985, 0
  br i1 %990, label %991, label %994

991:                                              ; preds = %975
  %992 = bitcast %"class.base::BasicStringPiece"* %988 to i8*
  %993 = inttoptr i64 %950 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %992, i8* align 8 %993, i64 %985, i1 false) #11
  br label %994

994:                                              ; preds = %991, %975
  store i64 %989, i64* %949, align 8
  store i64 %984, i64* %948, align 8
  store i64 %980, i64* %958, align 8
  %995 = icmp eq i64 %950, 0
  br i1 %995, label %998, label %996

996:                                              ; preds = %994
  %997 = inttoptr i64 %950 to i8*
  tail call void @_ZdlPv(i8* %997) #12
  br label %998

998:                                              ; preds = %996, %994, %940, %932
  %999 = phi i64 [ %984, %996 ], [ %984, %994 ], [ %944, %940 ], [ %934, %932 ]
  %1000 = phi %"class.base::BasicStringPiece"* [ %983, %996 ], [ %983, %994 ], [ %943, %940 ], [ %933, %932 ]
  %1001 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %1002 = icmp ult %"class.base::BasicStringPiece"* %1000, %1001
  %1003 = ptrtoint %"class.base::BasicStringPiece"* %1001 to i64
  br i1 %1002, label %1004, label %1012

1004:                                             ; preds = %998
  %1005 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1000, i64 0, i32 0
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43, i64 0, i64 0), i8** %1005, align 8
  %1006 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1000, i64 0, i32 1
  store i64 13, i64* %1006, align 8
  %1007 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1000, i64 1
  %1008 = ptrtoint %"class.base::BasicStringPiece"* %1007 to i64
  %1009 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %1008, i64* %1009, align 8
  %1010 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %1011 = ptrtoint %"class.base::BasicStringPiece"* %1010 to i64
  br label %1064

1012:                                             ; preds = %998
  %1013 = ptrtoint %"class.base::BasicStringPiece"* %1000 to i64
  %1014 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %1015 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %1016 = load i64, i64* %1015, align 8
  %1017 = sub i64 %1013, %1016
  %1018 = ashr exact i64 %1017, 4
  %1019 = add nsw i64 %1018, 1
  %1020 = icmp ugt i64 %1019, 1152921504606846975
  br i1 %1020, label %1021, label %1023

1021:                                             ; preds = %1012
  %1022 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1022) #13
  unreachable

1023:                                             ; preds = %1012
  %1024 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %1025 = sub i64 %1003, %1016
  %1026 = ashr exact i64 %1025, 4
  %1027 = icmp ult i64 %1026, 576460752303423487
  br i1 %1027, label %1028, label %1036

1028:                                             ; preds = %1023
  %1029 = ashr exact i64 %1025, 3
  %1030 = icmp ult i64 %1029, %1019
  %1031 = select i1 %1030, i64 %1019, i64 %1029
  %1032 = icmp eq i64 %1031, 0
  br i1 %1032, label %1041, label %1033

1033:                                             ; preds = %1028
  %1034 = icmp ugt i64 %1031, 1152921504606846975
  br i1 %1034, label %1035, label %1036

1035:                                             ; preds = %1033
  tail call void @abort() #13
  unreachable

1036:                                             ; preds = %1033, %1023
  %1037 = phi i64 [ %1031, %1033 ], [ 1152921504606846975, %1023 ]
  %1038 = shl i64 %1037, 4
  %1039 = tail call i8* @_Znwm(i64 %1038) #12
  %1040 = bitcast i8* %1039 to %"class.base::BasicStringPiece"*
  br label %1041

1041:                                             ; preds = %1036, %1028
  %1042 = phi i64 [ %1037, %1036 ], [ 0, %1028 ]
  %1043 = phi %"class.base::BasicStringPiece"* [ %1040, %1036 ], [ null, %1028 ]
  %1044 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1043, i64 %1018
  %1045 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1043, i64 %1042
  %1046 = ptrtoint %"class.base::BasicStringPiece"* %1045 to i64
  %1047 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1044, i64 0, i32 0
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43, i64 0, i64 0), i8** %1047, align 8
  %1048 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1043, i64 %1018, i32 1
  store i64 13, i64* %1048, align 8
  %1049 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1044, i64 1
  %1050 = ptrtoint %"class.base::BasicStringPiece"* %1049 to i64
  %1051 = sub i64 %999, %1016
  %1052 = ashr exact i64 %1051, 4
  %1053 = sub nsw i64 0, %1052
  %1054 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1044, i64 %1053
  %1055 = ptrtoint %"class.base::BasicStringPiece"* %1054 to i64
  %1056 = icmp sgt i64 %1051, 0
  br i1 %1056, label %1057, label %1060

1057:                                             ; preds = %1041
  %1058 = bitcast %"class.base::BasicStringPiece"* %1054 to i8*
  %1059 = inttoptr i64 %1016 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1058, i8* align 8 %1059, i64 %1051, i1 false) #11
  br label %1060

1060:                                             ; preds = %1057, %1041
  store i64 %1055, i64* %1015, align 8
  store i64 %1050, i64* %1014, align 8
  store i64 %1046, i64* %1024, align 8
  %1061 = icmp eq i64 %1016, 0
  br i1 %1061, label %1064, label %1062

1062:                                             ; preds = %1060
  %1063 = inttoptr i64 %1016 to i8*
  tail call void @_ZdlPv(i8* %1063) #12
  br label %1064

1064:                                             ; preds = %1004, %1060, %1062
  %1065 = phi i64 [ %1011, %1004 ], [ %1046, %1060 ], [ %1046, %1062 ]
  %1066 = phi i64 [ %1008, %1004 ], [ %1050, %1060 ], [ %1050, %1062 ]
  %1067 = phi %"class.base::BasicStringPiece"* [ %1010, %1004 ], [ %1045, %1060 ], [ %1045, %1062 ]
  %1068 = phi %"class.base::BasicStringPiece"* [ %1007, %1004 ], [ %1049, %1060 ], [ %1049, %1062 ]
  %1069 = icmp ult %"class.base::BasicStringPiece"* %1068, %1067
  br i1 %1069, label %1070, label %1076

1070:                                             ; preds = %1064
  %1071 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1068, i64 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i64 0, i64 0), i8** %1071, align 8
  %1072 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1068, i64 0, i32 1
  store i64 9, i64* %1072, align 8
  %1073 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1068, i64 1
  %1074 = ptrtoint %"class.base::BasicStringPiece"* %1073 to i64
  %1075 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %1074, i64* %1075, align 8
  br label %1128

1076:                                             ; preds = %1064
  %1077 = ptrtoint %"class.base::BasicStringPiece"* %1068 to i64
  %1078 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %1079 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %1080 = load i64, i64* %1079, align 8
  %1081 = sub i64 %1077, %1080
  %1082 = ashr exact i64 %1081, 4
  %1083 = add nsw i64 %1082, 1
  %1084 = icmp ugt i64 %1083, 1152921504606846975
  br i1 %1084, label %1085, label %1087

1085:                                             ; preds = %1076
  %1086 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1086) #13
  unreachable

1087:                                             ; preds = %1076
  %1088 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %1089 = sub i64 %1065, %1080
  %1090 = ashr exact i64 %1089, 4
  %1091 = icmp ult i64 %1090, 576460752303423487
  br i1 %1091, label %1092, label %1100

1092:                                             ; preds = %1087
  %1093 = ashr exact i64 %1089, 3
  %1094 = icmp ult i64 %1093, %1083
  %1095 = select i1 %1094, i64 %1083, i64 %1093
  %1096 = icmp eq i64 %1095, 0
  br i1 %1096, label %1105, label %1097

1097:                                             ; preds = %1092
  %1098 = icmp ugt i64 %1095, 1152921504606846975
  br i1 %1098, label %1099, label %1100

1099:                                             ; preds = %1097
  tail call void @abort() #13
  unreachable

1100:                                             ; preds = %1097, %1087
  %1101 = phi i64 [ %1095, %1097 ], [ 1152921504606846975, %1087 ]
  %1102 = shl i64 %1101, 4
  %1103 = tail call i8* @_Znwm(i64 %1102) #12
  %1104 = bitcast i8* %1103 to %"class.base::BasicStringPiece"*
  br label %1105

1105:                                             ; preds = %1100, %1092
  %1106 = phi i64 [ %1101, %1100 ], [ 0, %1092 ]
  %1107 = phi %"class.base::BasicStringPiece"* [ %1104, %1100 ], [ null, %1092 ]
  %1108 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1107, i64 %1082
  %1109 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1107, i64 %1106
  %1110 = ptrtoint %"class.base::BasicStringPiece"* %1109 to i64
  %1111 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1108, i64 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i64 0, i64 0), i8** %1111, align 8
  %1112 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1107, i64 %1082, i32 1
  store i64 9, i64* %1112, align 8
  %1113 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1108, i64 1
  %1114 = ptrtoint %"class.base::BasicStringPiece"* %1113 to i64
  %1115 = sub i64 %1066, %1080
  %1116 = ashr exact i64 %1115, 4
  %1117 = sub nsw i64 0, %1116
  %1118 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1108, i64 %1117
  %1119 = ptrtoint %"class.base::BasicStringPiece"* %1118 to i64
  %1120 = icmp sgt i64 %1115, 0
  br i1 %1120, label %1121, label %1124

1121:                                             ; preds = %1105
  %1122 = bitcast %"class.base::BasicStringPiece"* %1118 to i8*
  %1123 = inttoptr i64 %1080 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1122, i8* align 8 %1123, i64 %1115, i1 false) #11
  br label %1124

1124:                                             ; preds = %1121, %1105
  store i64 %1119, i64* %1079, align 8
  store i64 %1114, i64* %1078, align 8
  store i64 %1110, i64* %1088, align 8
  %1125 = icmp eq i64 %1080, 0
  br i1 %1125, label %1128, label %1126

1126:                                             ; preds = %1124
  %1127 = inttoptr i64 %1080 to i8*
  tail call void @_ZdlPv(i8* %1127) #12
  br label %1128

1128:                                             ; preds = %1070, %1124, %1126
  %1129 = phi i64 [ %1074, %1070 ], [ %1114, %1124 ], [ %1114, %1126 ]
  %1130 = phi %"class.base::BasicStringPiece"* [ %1073, %1070 ], [ %1113, %1124 ], [ %1113, %1126 ]
  %1131 = icmp sgt i32 %1, 46
  br i1 %1131, label %1132, label %1788

1132:                                             ; preds = %1128
  %1133 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %1134 = icmp ult %"class.base::BasicStringPiece"* %1130, %1133
  %1135 = ptrtoint %"class.base::BasicStringPiece"* %1133 to i64
  br i1 %1134, label %1136, label %1142

1136:                                             ; preds = %1132
  %1137 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1130, i64 0, i32 0
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i64 0, i64 0), i8** %1137, align 8
  %1138 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1130, i64 0, i32 1
  store i64 14, i64* %1138, align 8
  %1139 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1130, i64 1
  %1140 = ptrtoint %"class.base::BasicStringPiece"* %1139 to i64
  %1141 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %1140, i64* %1141, align 8
  br label %1194

1142:                                             ; preds = %1132
  %1143 = ptrtoint %"class.base::BasicStringPiece"* %1130 to i64
  %1144 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %1145 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %1146 = load i64, i64* %1145, align 8
  %1147 = sub i64 %1143, %1146
  %1148 = ashr exact i64 %1147, 4
  %1149 = add nsw i64 %1148, 1
  %1150 = icmp ugt i64 %1149, 1152921504606846975
  br i1 %1150, label %1151, label %1153

1151:                                             ; preds = %1142
  %1152 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1152) #13
  unreachable

1153:                                             ; preds = %1142
  %1154 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %1155 = sub i64 %1135, %1146
  %1156 = ashr exact i64 %1155, 4
  %1157 = icmp ult i64 %1156, 576460752303423487
  br i1 %1157, label %1158, label %1166

1158:                                             ; preds = %1153
  %1159 = ashr exact i64 %1155, 3
  %1160 = icmp ult i64 %1159, %1149
  %1161 = select i1 %1160, i64 %1149, i64 %1159
  %1162 = icmp eq i64 %1161, 0
  br i1 %1162, label %1171, label %1163

1163:                                             ; preds = %1158
  %1164 = icmp ugt i64 %1161, 1152921504606846975
  br i1 %1164, label %1165, label %1166

1165:                                             ; preds = %1163
  tail call void @abort() #13
  unreachable

1166:                                             ; preds = %1163, %1153
  %1167 = phi i64 [ %1161, %1163 ], [ 1152921504606846975, %1153 ]
  %1168 = shl i64 %1167, 4
  %1169 = tail call i8* @_Znwm(i64 %1168) #12
  %1170 = bitcast i8* %1169 to %"class.base::BasicStringPiece"*
  br label %1171

1171:                                             ; preds = %1166, %1158
  %1172 = phi i64 [ %1167, %1166 ], [ 0, %1158 ]
  %1173 = phi %"class.base::BasicStringPiece"* [ %1170, %1166 ], [ null, %1158 ]
  %1174 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1173, i64 %1148
  %1175 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1173, i64 %1172
  %1176 = ptrtoint %"class.base::BasicStringPiece"* %1175 to i64
  %1177 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1174, i64 0, i32 0
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i64 0, i64 0), i8** %1177, align 8
  %1178 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1173, i64 %1148, i32 1
  store i64 14, i64* %1178, align 8
  %1179 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1174, i64 1
  %1180 = ptrtoint %"class.base::BasicStringPiece"* %1179 to i64
  %1181 = sub i64 %1129, %1146
  %1182 = ashr exact i64 %1181, 4
  %1183 = sub nsw i64 0, %1182
  %1184 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1174, i64 %1183
  %1185 = ptrtoint %"class.base::BasicStringPiece"* %1184 to i64
  %1186 = icmp sgt i64 %1181, 0
  br i1 %1186, label %1187, label %1190

1187:                                             ; preds = %1171
  %1188 = bitcast %"class.base::BasicStringPiece"* %1184 to i8*
  %1189 = inttoptr i64 %1146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1188, i8* align 8 %1189, i64 %1181, i1 false) #11
  br label %1190

1190:                                             ; preds = %1187, %1171
  store i64 %1185, i64* %1145, align 8
  store i64 %1180, i64* %1144, align 8
  store i64 %1176, i64* %1154, align 8
  %1191 = icmp eq i64 %1146, 0
  br i1 %1191, label %1194, label %1192

1192:                                             ; preds = %1190
  %1193 = inttoptr i64 %1146 to i8*
  tail call void @_ZdlPv(i8* %1193) #12
  br label %1194

1194:                                             ; preds = %1192, %1190, %1136
  %1195 = phi %"class.base::BasicStringPiece"* [ %1179, %1192 ], [ %1179, %1190 ], [ %1139, %1136 ]
  %1196 = phi i64 [ %1180, %1192 ], [ %1180, %1190 ], [ %1140, %1136 ]
  %1197 = add nsw i32 %1, -49
  %1198 = icmp ult i32 %1197, 27
  br i1 %1198, label %1199, label %1261

1199:                                             ; preds = %1194
  %1200 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %1201 = icmp ult %"class.base::BasicStringPiece"* %1195, %1200
  %1202 = ptrtoint %"class.base::BasicStringPiece"* %1200 to i64
  br i1 %1201, label %1203, label %1209

1203:                                             ; preds = %1199
  %1204 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1195, i64 0, i32 0
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.46, i64 0, i64 0), i8** %1204, align 8
  %1205 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1195, i64 0, i32 1
  store i64 28, i64* %1205, align 8
  %1206 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1195, i64 1
  %1207 = ptrtoint %"class.base::BasicStringPiece"* %1206 to i64
  %1208 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %1207, i64* %1208, align 8
  br label %1261

1209:                                             ; preds = %1199
  %1210 = ptrtoint %"class.base::BasicStringPiece"* %1195 to i64
  %1211 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %1212 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %1213 = load i64, i64* %1212, align 8
  %1214 = sub i64 %1210, %1213
  %1215 = ashr exact i64 %1214, 4
  %1216 = add nsw i64 %1215, 1
  %1217 = icmp ugt i64 %1216, 1152921504606846975
  br i1 %1217, label %1218, label %1220

1218:                                             ; preds = %1209
  %1219 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1219) #13
  unreachable

1220:                                             ; preds = %1209
  %1221 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %1222 = sub i64 %1202, %1213
  %1223 = ashr exact i64 %1222, 4
  %1224 = icmp ult i64 %1223, 576460752303423487
  br i1 %1224, label %1225, label %1233

1225:                                             ; preds = %1220
  %1226 = ashr exact i64 %1222, 3
  %1227 = icmp ult i64 %1226, %1216
  %1228 = select i1 %1227, i64 %1216, i64 %1226
  %1229 = icmp eq i64 %1228, 0
  br i1 %1229, label %1238, label %1230

1230:                                             ; preds = %1225
  %1231 = icmp ugt i64 %1228, 1152921504606846975
  br i1 %1231, label %1232, label %1233

1232:                                             ; preds = %1230
  tail call void @abort() #13
  unreachable

1233:                                             ; preds = %1230, %1220
  %1234 = phi i64 [ %1228, %1230 ], [ 1152921504606846975, %1220 ]
  %1235 = shl i64 %1234, 4
  %1236 = tail call i8* @_Znwm(i64 %1235) #12
  %1237 = bitcast i8* %1236 to %"class.base::BasicStringPiece"*
  br label %1238

1238:                                             ; preds = %1233, %1225
  %1239 = phi i64 [ %1234, %1233 ], [ 0, %1225 ]
  %1240 = phi %"class.base::BasicStringPiece"* [ %1237, %1233 ], [ null, %1225 ]
  %1241 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1240, i64 %1215
  %1242 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1240, i64 %1239
  %1243 = ptrtoint %"class.base::BasicStringPiece"* %1242 to i64
  %1244 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1241, i64 0, i32 0
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.46, i64 0, i64 0), i8** %1244, align 8
  %1245 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1240, i64 %1215, i32 1
  store i64 28, i64* %1245, align 8
  %1246 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1241, i64 1
  %1247 = ptrtoint %"class.base::BasicStringPiece"* %1246 to i64
  %1248 = sub i64 %1196, %1213
  %1249 = ashr exact i64 %1248, 4
  %1250 = sub nsw i64 0, %1249
  %1251 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1241, i64 %1250
  %1252 = ptrtoint %"class.base::BasicStringPiece"* %1251 to i64
  %1253 = icmp sgt i64 %1248, 0
  br i1 %1253, label %1254, label %1257

1254:                                             ; preds = %1238
  %1255 = bitcast %"class.base::BasicStringPiece"* %1251 to i8*
  %1256 = inttoptr i64 %1213 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1255, i8* align 8 %1256, i64 %1248, i1 false) #11
  br label %1257

1257:                                             ; preds = %1254, %1238
  store i64 %1252, i64* %1212, align 8
  store i64 %1247, i64* %1211, align 8
  store i64 %1243, i64* %1221, align 8
  %1258 = icmp eq i64 %1213, 0
  br i1 %1258, label %1261, label %1259

1259:                                             ; preds = %1257
  %1260 = inttoptr i64 %1213 to i8*
  tail call void @_ZdlPv(i8* %1260) #12
  br label %1261

1261:                                             ; preds = %1259, %1257, %1203, %1194
  %1262 = phi i64 [ %1247, %1259 ], [ %1247, %1257 ], [ %1207, %1203 ], [ %1196, %1194 ]
  %1263 = phi %"class.base::BasicStringPiece"* [ %1246, %1259 ], [ %1246, %1257 ], [ %1206, %1203 ], [ %1195, %1194 ]
  %1264 = icmp sgt i32 %1, 51
  br i1 %1264, label %1265, label %1788

1265:                                             ; preds = %1261
  %1266 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %1267 = icmp ult %"class.base::BasicStringPiece"* %1263, %1266
  %1268 = ptrtoint %"class.base::BasicStringPiece"* %1266 to i64
  br i1 %1267, label %1269, label %1277

1269:                                             ; preds = %1265
  %1270 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1263, i64 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i64 0, i64 0), i8** %1270, align 8
  %1271 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1263, i64 0, i32 1
  store i64 9, i64* %1271, align 8
  %1272 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1263, i64 1
  %1273 = ptrtoint %"class.base::BasicStringPiece"* %1272 to i64
  %1274 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %1273, i64* %1274, align 8
  %1275 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %1276 = ptrtoint %"class.base::BasicStringPiece"* %1275 to i64
  br label %1329

1277:                                             ; preds = %1265
  %1278 = ptrtoint %"class.base::BasicStringPiece"* %1263 to i64
  %1279 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %1280 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %1281 = load i64, i64* %1280, align 8
  %1282 = sub i64 %1278, %1281
  %1283 = ashr exact i64 %1282, 4
  %1284 = add nsw i64 %1283, 1
  %1285 = icmp ugt i64 %1284, 1152921504606846975
  br i1 %1285, label %1286, label %1288

1286:                                             ; preds = %1277
  %1287 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1287) #13
  unreachable

1288:                                             ; preds = %1277
  %1289 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %1290 = sub i64 %1268, %1281
  %1291 = ashr exact i64 %1290, 4
  %1292 = icmp ult i64 %1291, 576460752303423487
  br i1 %1292, label %1293, label %1301

1293:                                             ; preds = %1288
  %1294 = ashr exact i64 %1290, 3
  %1295 = icmp ult i64 %1294, %1284
  %1296 = select i1 %1295, i64 %1284, i64 %1294
  %1297 = icmp eq i64 %1296, 0
  br i1 %1297, label %1306, label %1298

1298:                                             ; preds = %1293
  %1299 = icmp ugt i64 %1296, 1152921504606846975
  br i1 %1299, label %1300, label %1301

1300:                                             ; preds = %1298
  tail call void @abort() #13
  unreachable

1301:                                             ; preds = %1298, %1288
  %1302 = phi i64 [ %1296, %1298 ], [ 1152921504606846975, %1288 ]
  %1303 = shl i64 %1302, 4
  %1304 = tail call i8* @_Znwm(i64 %1303) #12
  %1305 = bitcast i8* %1304 to %"class.base::BasicStringPiece"*
  br label %1306

1306:                                             ; preds = %1301, %1293
  %1307 = phi i64 [ %1302, %1301 ], [ 0, %1293 ]
  %1308 = phi %"class.base::BasicStringPiece"* [ %1305, %1301 ], [ null, %1293 ]
  %1309 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1308, i64 %1283
  %1310 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1308, i64 %1307
  %1311 = ptrtoint %"class.base::BasicStringPiece"* %1310 to i64
  %1312 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1309, i64 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i64 0, i64 0), i8** %1312, align 8
  %1313 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1308, i64 %1283, i32 1
  store i64 9, i64* %1313, align 8
  %1314 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1309, i64 1
  %1315 = ptrtoint %"class.base::BasicStringPiece"* %1314 to i64
  %1316 = sub i64 %1262, %1281
  %1317 = ashr exact i64 %1316, 4
  %1318 = sub nsw i64 0, %1317
  %1319 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1309, i64 %1318
  %1320 = ptrtoint %"class.base::BasicStringPiece"* %1319 to i64
  %1321 = icmp sgt i64 %1316, 0
  br i1 %1321, label %1322, label %1325

1322:                                             ; preds = %1306
  %1323 = bitcast %"class.base::BasicStringPiece"* %1319 to i8*
  %1324 = inttoptr i64 %1281 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1323, i8* align 8 %1324, i64 %1316, i1 false) #11
  br label %1325

1325:                                             ; preds = %1322, %1306
  store i64 %1320, i64* %1280, align 8
  store i64 %1315, i64* %1279, align 8
  store i64 %1311, i64* %1289, align 8
  %1326 = icmp eq i64 %1281, 0
  br i1 %1326, label %1329, label %1327

1327:                                             ; preds = %1325
  %1328 = inttoptr i64 %1281 to i8*
  tail call void @_ZdlPv(i8* %1328) #12
  br label %1329

1329:                                             ; preds = %1269, %1325, %1327
  %1330 = phi i64 [ %1276, %1269 ], [ %1311, %1325 ], [ %1311, %1327 ]
  %1331 = phi i64 [ %1273, %1269 ], [ %1315, %1325 ], [ %1315, %1327 ]
  %1332 = phi %"class.base::BasicStringPiece"* [ %1275, %1269 ], [ %1310, %1325 ], [ %1310, %1327 ]
  %1333 = phi %"class.base::BasicStringPiece"* [ %1272, %1269 ], [ %1314, %1325 ], [ %1314, %1327 ]
  %1334 = icmp ult %"class.base::BasicStringPiece"* %1333, %1332
  br i1 %1334, label %1335, label %1343

1335:                                             ; preds = %1329
  %1336 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1333, i64 0, i32 0
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.48, i64 0, i64 0), i8** %1336, align 8
  %1337 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1333, i64 0, i32 1
  store i64 22, i64* %1337, align 8
  %1338 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1333, i64 1
  %1339 = ptrtoint %"class.base::BasicStringPiece"* %1338 to i64
  %1340 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %1339, i64* %1340, align 8
  %1341 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %1342 = ptrtoint %"class.base::BasicStringPiece"* %1341 to i64
  br label %1395

1343:                                             ; preds = %1329
  %1344 = ptrtoint %"class.base::BasicStringPiece"* %1333 to i64
  %1345 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %1346 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %1347 = load i64, i64* %1346, align 8
  %1348 = sub i64 %1344, %1347
  %1349 = ashr exact i64 %1348, 4
  %1350 = add nsw i64 %1349, 1
  %1351 = icmp ugt i64 %1350, 1152921504606846975
  br i1 %1351, label %1352, label %1354

1352:                                             ; preds = %1343
  %1353 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1353) #13
  unreachable

1354:                                             ; preds = %1343
  %1355 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %1356 = sub i64 %1330, %1347
  %1357 = ashr exact i64 %1356, 4
  %1358 = icmp ult i64 %1357, 576460752303423487
  br i1 %1358, label %1359, label %1367

1359:                                             ; preds = %1354
  %1360 = ashr exact i64 %1356, 3
  %1361 = icmp ult i64 %1360, %1350
  %1362 = select i1 %1361, i64 %1350, i64 %1360
  %1363 = icmp eq i64 %1362, 0
  br i1 %1363, label %1372, label %1364

1364:                                             ; preds = %1359
  %1365 = icmp ugt i64 %1362, 1152921504606846975
  br i1 %1365, label %1366, label %1367

1366:                                             ; preds = %1364
  tail call void @abort() #13
  unreachable

1367:                                             ; preds = %1364, %1354
  %1368 = phi i64 [ %1362, %1364 ], [ 1152921504606846975, %1354 ]
  %1369 = shl i64 %1368, 4
  %1370 = tail call i8* @_Znwm(i64 %1369) #12
  %1371 = bitcast i8* %1370 to %"class.base::BasicStringPiece"*
  br label %1372

1372:                                             ; preds = %1367, %1359
  %1373 = phi i64 [ %1368, %1367 ], [ 0, %1359 ]
  %1374 = phi %"class.base::BasicStringPiece"* [ %1371, %1367 ], [ null, %1359 ]
  %1375 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1374, i64 %1349
  %1376 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1374, i64 %1373
  %1377 = ptrtoint %"class.base::BasicStringPiece"* %1376 to i64
  %1378 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1375, i64 0, i32 0
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.48, i64 0, i64 0), i8** %1378, align 8
  %1379 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1374, i64 %1349, i32 1
  store i64 22, i64* %1379, align 8
  %1380 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1375, i64 1
  %1381 = ptrtoint %"class.base::BasicStringPiece"* %1380 to i64
  %1382 = sub i64 %1331, %1347
  %1383 = ashr exact i64 %1382, 4
  %1384 = sub nsw i64 0, %1383
  %1385 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1375, i64 %1384
  %1386 = ptrtoint %"class.base::BasicStringPiece"* %1385 to i64
  %1387 = icmp sgt i64 %1382, 0
  br i1 %1387, label %1388, label %1391

1388:                                             ; preds = %1372
  %1389 = bitcast %"class.base::BasicStringPiece"* %1385 to i8*
  %1390 = inttoptr i64 %1347 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1389, i8* align 8 %1390, i64 %1382, i1 false) #11
  br label %1391

1391:                                             ; preds = %1388, %1372
  store i64 %1386, i64* %1346, align 8
  store i64 %1381, i64* %1345, align 8
  store i64 %1377, i64* %1355, align 8
  %1392 = icmp eq i64 %1347, 0
  br i1 %1392, label %1395, label %1393

1393:                                             ; preds = %1391
  %1394 = inttoptr i64 %1347 to i8*
  tail call void @_ZdlPv(i8* %1394) #12
  br label %1395

1395:                                             ; preds = %1335, %1391, %1393
  %1396 = phi i64 [ %1342, %1335 ], [ %1377, %1391 ], [ %1377, %1393 ]
  %1397 = phi i64 [ %1339, %1335 ], [ %1381, %1391 ], [ %1381, %1393 ]
  %1398 = phi %"class.base::BasicStringPiece"* [ %1341, %1335 ], [ %1376, %1391 ], [ %1376, %1393 ]
  %1399 = phi %"class.base::BasicStringPiece"* [ %1338, %1335 ], [ %1380, %1391 ], [ %1380, %1393 ]
  %1400 = icmp ult %"class.base::BasicStringPiece"* %1399, %1398
  br i1 %1400, label %1401, label %1407

1401:                                             ; preds = %1395
  %1402 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1399, i64 0, i32 0
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.49, i64 0, i64 0), i8** %1402, align 8
  %1403 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1399, i64 0, i32 1
  store i64 23, i64* %1403, align 8
  %1404 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1399, i64 1
  %1405 = ptrtoint %"class.base::BasicStringPiece"* %1404 to i64
  %1406 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %1405, i64* %1406, align 8
  br label %1459

1407:                                             ; preds = %1395
  %1408 = ptrtoint %"class.base::BasicStringPiece"* %1399 to i64
  %1409 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %1410 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %1411 = load i64, i64* %1410, align 8
  %1412 = sub i64 %1408, %1411
  %1413 = ashr exact i64 %1412, 4
  %1414 = add nsw i64 %1413, 1
  %1415 = icmp ugt i64 %1414, 1152921504606846975
  br i1 %1415, label %1416, label %1418

1416:                                             ; preds = %1407
  %1417 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1417) #13
  unreachable

1418:                                             ; preds = %1407
  %1419 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %1420 = sub i64 %1396, %1411
  %1421 = ashr exact i64 %1420, 4
  %1422 = icmp ult i64 %1421, 576460752303423487
  br i1 %1422, label %1423, label %1431

1423:                                             ; preds = %1418
  %1424 = ashr exact i64 %1420, 3
  %1425 = icmp ult i64 %1424, %1414
  %1426 = select i1 %1425, i64 %1414, i64 %1424
  %1427 = icmp eq i64 %1426, 0
  br i1 %1427, label %1436, label %1428

1428:                                             ; preds = %1423
  %1429 = icmp ugt i64 %1426, 1152921504606846975
  br i1 %1429, label %1430, label %1431

1430:                                             ; preds = %1428
  tail call void @abort() #13
  unreachable

1431:                                             ; preds = %1428, %1418
  %1432 = phi i64 [ %1426, %1428 ], [ 1152921504606846975, %1418 ]
  %1433 = shl i64 %1432, 4
  %1434 = tail call i8* @_Znwm(i64 %1433) #12
  %1435 = bitcast i8* %1434 to %"class.base::BasicStringPiece"*
  br label %1436

1436:                                             ; preds = %1431, %1423
  %1437 = phi i64 [ %1432, %1431 ], [ 0, %1423 ]
  %1438 = phi %"class.base::BasicStringPiece"* [ %1435, %1431 ], [ null, %1423 ]
  %1439 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1438, i64 %1413
  %1440 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1438, i64 %1437
  %1441 = ptrtoint %"class.base::BasicStringPiece"* %1440 to i64
  %1442 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1439, i64 0, i32 0
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.49, i64 0, i64 0), i8** %1442, align 8
  %1443 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1438, i64 %1413, i32 1
  store i64 23, i64* %1443, align 8
  %1444 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1439, i64 1
  %1445 = ptrtoint %"class.base::BasicStringPiece"* %1444 to i64
  %1446 = sub i64 %1397, %1411
  %1447 = ashr exact i64 %1446, 4
  %1448 = sub nsw i64 0, %1447
  %1449 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1439, i64 %1448
  %1450 = ptrtoint %"class.base::BasicStringPiece"* %1449 to i64
  %1451 = icmp sgt i64 %1446, 0
  br i1 %1451, label %1452, label %1455

1452:                                             ; preds = %1436
  %1453 = bitcast %"class.base::BasicStringPiece"* %1449 to i8*
  %1454 = inttoptr i64 %1411 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1453, i8* align 8 %1454, i64 %1446, i1 false) #11
  br label %1455

1455:                                             ; preds = %1452, %1436
  store i64 %1450, i64* %1410, align 8
  store i64 %1445, i64* %1409, align 8
  store i64 %1441, i64* %1419, align 8
  %1456 = icmp eq i64 %1411, 0
  br i1 %1456, label %1459, label %1457

1457:                                             ; preds = %1455
  %1458 = inttoptr i64 %1411 to i8*
  tail call void @_ZdlPv(i8* %1458) #12
  br label %1459

1459:                                             ; preds = %1457, %1455, %1401
  %1460 = phi %"class.base::BasicStringPiece"* [ %1444, %1457 ], [ %1444, %1455 ], [ %1404, %1401 ]
  %1461 = phi i64 [ %1445, %1457 ], [ %1445, %1455 ], [ %1405, %1401 ]
  %1462 = add nsw i32 %1, -52
  %1463 = icmp ult i32 %1462, 24
  br i1 %1463, label %1464, label %1526

1464:                                             ; preds = %1459
  %1465 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %1466 = icmp ult %"class.base::BasicStringPiece"* %1460, %1465
  %1467 = ptrtoint %"class.base::BasicStringPiece"* %1465 to i64
  br i1 %1466, label %1468, label %1474

1468:                                             ; preds = %1464
  %1469 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1460, i64 0, i32 0
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.50, i64 0, i64 0), i8** %1469, align 8
  %1470 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1460, i64 0, i32 1
  store i64 23, i64* %1470, align 8
  %1471 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1460, i64 1
  %1472 = ptrtoint %"class.base::BasicStringPiece"* %1471 to i64
  %1473 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %1472, i64* %1473, align 8
  br label %1526

1474:                                             ; preds = %1464
  %1475 = ptrtoint %"class.base::BasicStringPiece"* %1460 to i64
  %1476 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %1477 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %1478 = load i64, i64* %1477, align 8
  %1479 = sub i64 %1475, %1478
  %1480 = ashr exact i64 %1479, 4
  %1481 = add nsw i64 %1480, 1
  %1482 = icmp ugt i64 %1481, 1152921504606846975
  br i1 %1482, label %1483, label %1485

1483:                                             ; preds = %1474
  %1484 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1484) #13
  unreachable

1485:                                             ; preds = %1474
  %1486 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %1487 = sub i64 %1467, %1478
  %1488 = ashr exact i64 %1487, 4
  %1489 = icmp ult i64 %1488, 576460752303423487
  br i1 %1489, label %1490, label %1498

1490:                                             ; preds = %1485
  %1491 = ashr exact i64 %1487, 3
  %1492 = icmp ult i64 %1491, %1481
  %1493 = select i1 %1492, i64 %1481, i64 %1491
  %1494 = icmp eq i64 %1493, 0
  br i1 %1494, label %1503, label %1495

1495:                                             ; preds = %1490
  %1496 = icmp ugt i64 %1493, 1152921504606846975
  br i1 %1496, label %1497, label %1498

1497:                                             ; preds = %1495
  tail call void @abort() #13
  unreachable

1498:                                             ; preds = %1495, %1485
  %1499 = phi i64 [ %1493, %1495 ], [ 1152921504606846975, %1485 ]
  %1500 = shl i64 %1499, 4
  %1501 = tail call i8* @_Znwm(i64 %1500) #12
  %1502 = bitcast i8* %1501 to %"class.base::BasicStringPiece"*
  br label %1503

1503:                                             ; preds = %1498, %1490
  %1504 = phi i64 [ %1499, %1498 ], [ 0, %1490 ]
  %1505 = phi %"class.base::BasicStringPiece"* [ %1502, %1498 ], [ null, %1490 ]
  %1506 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1505, i64 %1480
  %1507 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1505, i64 %1504
  %1508 = ptrtoint %"class.base::BasicStringPiece"* %1507 to i64
  %1509 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1506, i64 0, i32 0
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.50, i64 0, i64 0), i8** %1509, align 8
  %1510 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1505, i64 %1480, i32 1
  store i64 23, i64* %1510, align 8
  %1511 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1506, i64 1
  %1512 = ptrtoint %"class.base::BasicStringPiece"* %1511 to i64
  %1513 = sub i64 %1461, %1478
  %1514 = ashr exact i64 %1513, 4
  %1515 = sub nsw i64 0, %1514
  %1516 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1506, i64 %1515
  %1517 = ptrtoint %"class.base::BasicStringPiece"* %1516 to i64
  %1518 = icmp sgt i64 %1513, 0
  br i1 %1518, label %1519, label %1522

1519:                                             ; preds = %1503
  %1520 = bitcast %"class.base::BasicStringPiece"* %1516 to i8*
  %1521 = inttoptr i64 %1478 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1520, i8* align 8 %1521, i64 %1513, i1 false) #11
  br label %1522

1522:                                             ; preds = %1519, %1503
  store i64 %1517, i64* %1477, align 8
  store i64 %1512, i64* %1476, align 8
  store i64 %1508, i64* %1486, align 8
  %1523 = icmp eq i64 %1478, 0
  br i1 %1523, label %1526, label %1524

1524:                                             ; preds = %1522
  %1525 = inttoptr i64 %1478 to i8*
  tail call void @_ZdlPv(i8* %1525) #12
  br label %1526

1526:                                             ; preds = %1459, %1468, %1522, %1524
  %1527 = phi i64 [ %1461, %1459 ], [ %1472, %1468 ], [ %1512, %1522 ], [ %1512, %1524 ]
  %1528 = phi %"class.base::BasicStringPiece"* [ %1460, %1459 ], [ %1471, %1468 ], [ %1511, %1522 ], [ %1511, %1524 ]
  %1529 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %1530 = icmp ult %"class.base::BasicStringPiece"* %1528, %1529
  %1531 = ptrtoint %"class.base::BasicStringPiece"* %1529 to i64
  br i1 %1530, label %1532, label %1538

1532:                                             ; preds = %1526
  %1533 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1528, i64 0, i32 0
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.51, i64 0, i64 0), i8** %1533, align 8
  %1534 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1528, i64 0, i32 1
  store i64 21, i64* %1534, align 8
  %1535 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1528, i64 1
  %1536 = ptrtoint %"class.base::BasicStringPiece"* %1535 to i64
  %1537 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %1536, i64* %1537, align 8
  br label %1590

1538:                                             ; preds = %1526
  %1539 = ptrtoint %"class.base::BasicStringPiece"* %1528 to i64
  %1540 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %1541 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %1542 = load i64, i64* %1541, align 8
  %1543 = sub i64 %1539, %1542
  %1544 = ashr exact i64 %1543, 4
  %1545 = add nsw i64 %1544, 1
  %1546 = icmp ugt i64 %1545, 1152921504606846975
  br i1 %1546, label %1547, label %1549

1547:                                             ; preds = %1538
  %1548 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1548) #13
  unreachable

1549:                                             ; preds = %1538
  %1550 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %1551 = sub i64 %1531, %1542
  %1552 = ashr exact i64 %1551, 4
  %1553 = icmp ult i64 %1552, 576460752303423487
  br i1 %1553, label %1554, label %1562

1554:                                             ; preds = %1549
  %1555 = ashr exact i64 %1551, 3
  %1556 = icmp ult i64 %1555, %1545
  %1557 = select i1 %1556, i64 %1545, i64 %1555
  %1558 = icmp eq i64 %1557, 0
  br i1 %1558, label %1567, label %1559

1559:                                             ; preds = %1554
  %1560 = icmp ugt i64 %1557, 1152921504606846975
  br i1 %1560, label %1561, label %1562

1561:                                             ; preds = %1559
  tail call void @abort() #13
  unreachable

1562:                                             ; preds = %1559, %1549
  %1563 = phi i64 [ %1557, %1559 ], [ 1152921504606846975, %1549 ]
  %1564 = shl i64 %1563, 4
  %1565 = tail call i8* @_Znwm(i64 %1564) #12
  %1566 = bitcast i8* %1565 to %"class.base::BasicStringPiece"*
  br label %1567

1567:                                             ; preds = %1562, %1554
  %1568 = phi i64 [ %1563, %1562 ], [ 0, %1554 ]
  %1569 = phi %"class.base::BasicStringPiece"* [ %1566, %1562 ], [ null, %1554 ]
  %1570 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1569, i64 %1544
  %1571 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1569, i64 %1568
  %1572 = ptrtoint %"class.base::BasicStringPiece"* %1571 to i64
  %1573 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1570, i64 0, i32 0
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.51, i64 0, i64 0), i8** %1573, align 8
  %1574 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1569, i64 %1544, i32 1
  store i64 21, i64* %1574, align 8
  %1575 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1570, i64 1
  %1576 = ptrtoint %"class.base::BasicStringPiece"* %1575 to i64
  %1577 = sub i64 %1527, %1542
  %1578 = ashr exact i64 %1577, 4
  %1579 = sub nsw i64 0, %1578
  %1580 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1570, i64 %1579
  %1581 = ptrtoint %"class.base::BasicStringPiece"* %1580 to i64
  %1582 = icmp sgt i64 %1577, 0
  br i1 %1582, label %1583, label %1586

1583:                                             ; preds = %1567
  %1584 = bitcast %"class.base::BasicStringPiece"* %1580 to i8*
  %1585 = inttoptr i64 %1542 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1584, i8* align 8 %1585, i64 %1577, i1 false) #11
  br label %1586

1586:                                             ; preds = %1583, %1567
  store i64 %1581, i64* %1541, align 8
  store i64 %1576, i64* %1540, align 8
  store i64 %1572, i64* %1550, align 8
  %1587 = icmp eq i64 %1542, 0
  br i1 %1587, label %1590, label %1588

1588:                                             ; preds = %1586
  %1589 = inttoptr i64 %1542 to i8*
  tail call void @_ZdlPv(i8* %1589) #12
  br label %1590

1590:                                             ; preds = %1588, %1586, %1532
  %1591 = phi i64 [ %1576, %1588 ], [ %1576, %1586 ], [ %1536, %1532 ]
  %1592 = phi %"class.base::BasicStringPiece"* [ %1575, %1588 ], [ %1575, %1586 ], [ %1535, %1532 ]
  %1593 = icmp sgt i32 %1, 52
  br i1 %1593, label %1594, label %1788

1594:                                             ; preds = %1590
  %1595 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %1596 = icmp ult %"class.base::BasicStringPiece"* %1592, %1595
  %1597 = ptrtoint %"class.base::BasicStringPiece"* %1595 to i64
  br i1 %1596, label %1598, label %1604

1598:                                             ; preds = %1594
  %1599 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1592, i64 0, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i64 0, i64 0), i8** %1599, align 8
  %1600 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1592, i64 0, i32 1
  store i64 11, i64* %1600, align 8
  %1601 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1592, i64 1
  %1602 = ptrtoint %"class.base::BasicStringPiece"* %1601 to i64
  %1603 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %1602, i64* %1603, align 8
  br label %1656

1604:                                             ; preds = %1594
  %1605 = ptrtoint %"class.base::BasicStringPiece"* %1592 to i64
  %1606 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %1607 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %1608 = load i64, i64* %1607, align 8
  %1609 = sub i64 %1605, %1608
  %1610 = ashr exact i64 %1609, 4
  %1611 = add nsw i64 %1610, 1
  %1612 = icmp ugt i64 %1611, 1152921504606846975
  br i1 %1612, label %1613, label %1615

1613:                                             ; preds = %1604
  %1614 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1614) #13
  unreachable

1615:                                             ; preds = %1604
  %1616 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %1617 = sub i64 %1597, %1608
  %1618 = ashr exact i64 %1617, 4
  %1619 = icmp ult i64 %1618, 576460752303423487
  br i1 %1619, label %1620, label %1628

1620:                                             ; preds = %1615
  %1621 = ashr exact i64 %1617, 3
  %1622 = icmp ult i64 %1621, %1611
  %1623 = select i1 %1622, i64 %1611, i64 %1621
  %1624 = icmp eq i64 %1623, 0
  br i1 %1624, label %1633, label %1625

1625:                                             ; preds = %1620
  %1626 = icmp ugt i64 %1623, 1152921504606846975
  br i1 %1626, label %1627, label %1628

1627:                                             ; preds = %1625
  tail call void @abort() #13
  unreachable

1628:                                             ; preds = %1625, %1615
  %1629 = phi i64 [ %1623, %1625 ], [ 1152921504606846975, %1615 ]
  %1630 = shl i64 %1629, 4
  %1631 = tail call i8* @_Znwm(i64 %1630) #12
  %1632 = bitcast i8* %1631 to %"class.base::BasicStringPiece"*
  br label %1633

1633:                                             ; preds = %1628, %1620
  %1634 = phi i64 [ %1629, %1628 ], [ 0, %1620 ]
  %1635 = phi %"class.base::BasicStringPiece"* [ %1632, %1628 ], [ null, %1620 ]
  %1636 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1635, i64 %1610
  %1637 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1635, i64 %1634
  %1638 = ptrtoint %"class.base::BasicStringPiece"* %1637 to i64
  %1639 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1636, i64 0, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i64 0, i64 0), i8** %1639, align 8
  %1640 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1635, i64 %1610, i32 1
  store i64 11, i64* %1640, align 8
  %1641 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1636, i64 1
  %1642 = ptrtoint %"class.base::BasicStringPiece"* %1641 to i64
  %1643 = sub i64 %1591, %1608
  %1644 = ashr exact i64 %1643, 4
  %1645 = sub nsw i64 0, %1644
  %1646 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1636, i64 %1645
  %1647 = ptrtoint %"class.base::BasicStringPiece"* %1646 to i64
  %1648 = icmp sgt i64 %1643, 0
  br i1 %1648, label %1649, label %1652

1649:                                             ; preds = %1633
  %1650 = bitcast %"class.base::BasicStringPiece"* %1646 to i8*
  %1651 = inttoptr i64 %1608 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1650, i8* align 8 %1651, i64 %1643, i1 false) #11
  br label %1652

1652:                                             ; preds = %1649, %1633
  store i64 %1647, i64* %1607, align 8
  store i64 %1642, i64* %1606, align 8
  store i64 %1638, i64* %1616, align 8
  %1653 = icmp eq i64 %1608, 0
  br i1 %1653, label %1656, label %1654

1654:                                             ; preds = %1652
  %1655 = inttoptr i64 %1608 to i8*
  tail call void @_ZdlPv(i8* %1655) #12
  br label %1656

1656:                                             ; preds = %1654, %1652, %1598
  %1657 = phi i64 [ %1642, %1654 ], [ %1642, %1652 ], [ %1602, %1598 ]
  %1658 = phi %"class.base::BasicStringPiece"* [ %1641, %1654 ], [ %1641, %1652 ], [ %1601, %1598 ]
  %1659 = icmp sgt i32 %1, 68
  br i1 %1659, label %1660, label %1788

1660:                                             ; preds = %1656
  %1661 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %1662 = icmp ult %"class.base::BasicStringPiece"* %1658, %1661
  %1663 = ptrtoint %"class.base::BasicStringPiece"* %1661 to i64
  br i1 %1662, label %1664, label %1670

1664:                                             ; preds = %1660
  %1665 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1658, i64 0, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i64 0, i64 0), i8** %1665, align 8
  %1666 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1658, i64 0, i32 1
  store i64 12, i64* %1666, align 8
  %1667 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1658, i64 1
  %1668 = ptrtoint %"class.base::BasicStringPiece"* %1667 to i64
  %1669 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %1668, i64* %1669, align 8
  br label %1722

1670:                                             ; preds = %1660
  %1671 = ptrtoint %"class.base::BasicStringPiece"* %1658 to i64
  %1672 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %1673 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %1674 = load i64, i64* %1673, align 8
  %1675 = sub i64 %1671, %1674
  %1676 = ashr exact i64 %1675, 4
  %1677 = add nsw i64 %1676, 1
  %1678 = icmp ugt i64 %1677, 1152921504606846975
  br i1 %1678, label %1679, label %1681

1679:                                             ; preds = %1670
  %1680 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1680) #13
  unreachable

1681:                                             ; preds = %1670
  %1682 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %1683 = sub i64 %1663, %1674
  %1684 = ashr exact i64 %1683, 4
  %1685 = icmp ult i64 %1684, 576460752303423487
  br i1 %1685, label %1686, label %1694

1686:                                             ; preds = %1681
  %1687 = ashr exact i64 %1683, 3
  %1688 = icmp ult i64 %1687, %1677
  %1689 = select i1 %1688, i64 %1677, i64 %1687
  %1690 = icmp eq i64 %1689, 0
  br i1 %1690, label %1699, label %1691

1691:                                             ; preds = %1686
  %1692 = icmp ugt i64 %1689, 1152921504606846975
  br i1 %1692, label %1693, label %1694

1693:                                             ; preds = %1691
  tail call void @abort() #13
  unreachable

1694:                                             ; preds = %1691, %1681
  %1695 = phi i64 [ %1689, %1691 ], [ 1152921504606846975, %1681 ]
  %1696 = shl i64 %1695, 4
  %1697 = tail call i8* @_Znwm(i64 %1696) #12
  %1698 = bitcast i8* %1697 to %"class.base::BasicStringPiece"*
  br label %1699

1699:                                             ; preds = %1694, %1686
  %1700 = phi i64 [ %1695, %1694 ], [ 0, %1686 ]
  %1701 = phi %"class.base::BasicStringPiece"* [ %1698, %1694 ], [ null, %1686 ]
  %1702 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1701, i64 %1676
  %1703 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1701, i64 %1700
  %1704 = ptrtoint %"class.base::BasicStringPiece"* %1703 to i64
  %1705 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1702, i64 0, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i64 0, i64 0), i8** %1705, align 8
  %1706 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1701, i64 %1676, i32 1
  store i64 12, i64* %1706, align 8
  %1707 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1702, i64 1
  %1708 = ptrtoint %"class.base::BasicStringPiece"* %1707 to i64
  %1709 = sub i64 %1657, %1674
  %1710 = ashr exact i64 %1709, 4
  %1711 = sub nsw i64 0, %1710
  %1712 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1702, i64 %1711
  %1713 = ptrtoint %"class.base::BasicStringPiece"* %1712 to i64
  %1714 = icmp sgt i64 %1709, 0
  br i1 %1714, label %1715, label %1718

1715:                                             ; preds = %1699
  %1716 = bitcast %"class.base::BasicStringPiece"* %1712 to i8*
  %1717 = inttoptr i64 %1674 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1716, i8* align 8 %1717, i64 %1709, i1 false) #11
  br label %1718

1718:                                             ; preds = %1715, %1699
  store i64 %1713, i64* %1673, align 8
  store i64 %1708, i64* %1672, align 8
  store i64 %1704, i64* %1682, align 8
  %1719 = icmp eq i64 %1674, 0
  br i1 %1719, label %1722, label %1720

1720:                                             ; preds = %1718
  %1721 = inttoptr i64 %1674 to i8*
  tail call void @_ZdlPv(i8* %1721) #12
  br label %1722

1722:                                             ; preds = %1720, %1718, %1664
  %1723 = phi i64 [ %1708, %1720 ], [ %1708, %1718 ], [ %1668, %1664 ]
  %1724 = phi %"class.base::BasicStringPiece"* [ %1707, %1720 ], [ %1707, %1718 ], [ %1667, %1664 ]
  %1725 = icmp sgt i32 %1, 81
  br i1 %1725, label %1726, label %1788

1726:                                             ; preds = %1722
  %1727 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %1728 = icmp ult %"class.base::BasicStringPiece"* %1724, %1727
  %1729 = ptrtoint %"class.base::BasicStringPiece"* %1727 to i64
  br i1 %1728, label %1730, label %1736

1730:                                             ; preds = %1726
  %1731 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1724, i64 0, i32 0
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.54, i64 0, i64 0), i8** %1731, align 8
  %1732 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1724, i64 0, i32 1
  store i64 21, i64* %1732, align 8
  %1733 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1724, i64 1
  %1734 = ptrtoint %"class.base::BasicStringPiece"* %1733 to i64
  %1735 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  store i64 %1734, i64* %1735, align 8
  br label %1788

1736:                                             ; preds = %1726
  %1737 = ptrtoint %"class.base::BasicStringPiece"* %1724 to i64
  %1738 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %1739 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %1740 = load i64, i64* %1739, align 8
  %1741 = sub i64 %1737, %1740
  %1742 = ashr exact i64 %1741, 4
  %1743 = add nsw i64 %1742, 1
  %1744 = icmp ugt i64 %1743, 1152921504606846975
  br i1 %1744, label %1745, label %1747

1745:                                             ; preds = %1736
  %1746 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1746) #13
  unreachable

1747:                                             ; preds = %1736
  %1748 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %1749 = sub i64 %1729, %1740
  %1750 = ashr exact i64 %1749, 4
  %1751 = icmp ult i64 %1750, 576460752303423487
  br i1 %1751, label %1752, label %1760

1752:                                             ; preds = %1747
  %1753 = ashr exact i64 %1749, 3
  %1754 = icmp ult i64 %1753, %1743
  %1755 = select i1 %1754, i64 %1743, i64 %1753
  %1756 = icmp eq i64 %1755, 0
  br i1 %1756, label %1765, label %1757

1757:                                             ; preds = %1752
  %1758 = icmp ugt i64 %1755, 1152921504606846975
  br i1 %1758, label %1759, label %1760

1759:                                             ; preds = %1757
  tail call void @abort() #13
  unreachable

1760:                                             ; preds = %1757, %1747
  %1761 = phi i64 [ %1755, %1757 ], [ 1152921504606846975, %1747 ]
  %1762 = shl i64 %1761, 4
  %1763 = tail call i8* @_Znwm(i64 %1762) #12
  %1764 = bitcast i8* %1763 to %"class.base::BasicStringPiece"*
  br label %1765

1765:                                             ; preds = %1760, %1752
  %1766 = phi i64 [ %1761, %1760 ], [ 0, %1752 ]
  %1767 = phi %"class.base::BasicStringPiece"* [ %1764, %1760 ], [ null, %1752 ]
  %1768 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1767, i64 %1742
  %1769 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1767, i64 %1766
  %1770 = ptrtoint %"class.base::BasicStringPiece"* %1769 to i64
  %1771 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1768, i64 0, i32 0
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.54, i64 0, i64 0), i8** %1771, align 8
  %1772 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1767, i64 %1742, i32 1
  store i64 21, i64* %1772, align 8
  %1773 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1768, i64 1
  %1774 = ptrtoint %"class.base::BasicStringPiece"* %1773 to i64
  %1775 = sub i64 %1723, %1740
  %1776 = ashr exact i64 %1775, 4
  %1777 = sub nsw i64 0, %1776
  %1778 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1768, i64 %1777
  %1779 = ptrtoint %"class.base::BasicStringPiece"* %1778 to i64
  %1780 = icmp sgt i64 %1775, 0
  br i1 %1780, label %1781, label %1784

1781:                                             ; preds = %1765
  %1782 = bitcast %"class.base::BasicStringPiece"* %1778 to i8*
  %1783 = inttoptr i64 %1740 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1782, i8* align 8 %1783, i64 %1775, i1 false) #11
  br label %1784

1784:                                             ; preds = %1781, %1765
  store i64 %1779, i64* %1739, align 8
  store i64 %1774, i64* %1738, align 8
  store i64 %1770, i64* %1748, align 8
  %1785 = icmp eq i64 %1740, 0
  br i1 %1785, label %1788, label %1786

1786:                                             ; preds = %1784
  %1787 = inttoptr i64 %1740 to i8*
  tail call void @_ZdlPv(i8* %1787) #12
  br label %1788

1788:                                             ; preds = %1261, %1128, %1590, %1656, %1786, %1784, %1730, %1722
  %1789 = phi i64 [ %1262, %1261 ], [ %1129, %1128 ], [ %1591, %1590 ], [ %1657, %1656 ], [ %1774, %1786 ], [ %1774, %1784 ], [ %1734, %1730 ], [ %1723, %1722 ]
  %1790 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %1791 = load i64, i64* %1790, align 8
  %1792 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %1793 = sub i64 %1789, %1791
  %1794 = ashr exact i64 %1793, 4
  %1795 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1795) #11
  %1796 = select i1 %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0)
  %1797 = select i1 %2, i64 4, i64 2
  %1798 = trunc i64 %1797 to i8
  %1799 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1800 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1799, i64 0, i32 1, i32 0
  store i8 %1798, i8* %1800, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1795, i8* align 1 %1796, i64 %1797, i1 false) #11
  %1801 = getelementptr inbounds i8, i8* %1795, i64 %1797
  store i8 0, i8* %1801, align 2
  %1802 = load i8, i8* %1800, align 1
  %1803 = icmp slt i8 %1802, 0
  %1804 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1805 = load i8*, i8** %1804, align 8
  %1806 = select i1 %1803, i8* %1805, i8* %1795
  %1807 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1808 = load i64, i64* %1807, align 8
  %1809 = zext i8 %1802 to i64
  %1810 = select i1 %1803, i64 %1808, i64 %1809
  %1811 = inttoptr i64 %1791 to %"class.base::BasicStringPiece"*
  call void @_ZN4base10JoinStringENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEES5_(%"class.std::__1::basic_string"* sret %0, i64 %1794, %"class.base::BasicStringPiece"* %1811, i8* %1806, i64 %1810) #11
  %1812 = load i8, i8* %1800, align 1
  %1813 = icmp slt i8 %1812, 0
  br i1 %1813, label %1814, label %1816

1814:                                             ; preds = %1788
  %1815 = load i8*, i8** %1804, align 8
  call void @_ZdlPv(i8* %1815) #12
  br label %1816

1816:                                             ; preds = %1788, %1814
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1795) #11
  %1817 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %7, align 8
  %1818 = icmp eq %"class.base::BasicStringPiece"* %1817, null
  br i1 %1818, label %1822, label %1819

1819:                                             ; preds = %1816
  %1820 = ptrtoint %"class.base::BasicStringPiece"* %1817 to i64
  store i64 %1820, i64* %1792, align 8
  %1821 = bitcast %"class.base::BasicStringPiece"* %1817 to i8*
  call void @_ZdlPv(i8* %1821) #12
  br label %1822

1822:                                             ; preds = %1816, %1819
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret void
}

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare i64 @_ZN4base4Time9FromTimeTEl(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"*, i8*, i64, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"*, i32, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"*) local_unnamed_addr #1

declare void @_ZN15TemplateURLData12SetShortNameERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%struct.TemplateURLData*, %"class.std::__1::basic_string.43"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK3sql9Statement14ColumnString16Ei(%"class.std::__1::basic_string.43"* sret, %"class.sql::Statement"*, i32) local_unnamed_addr #1

declare void @_ZN15TemplateURLData10SetKeywordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%struct.TemplateURLData*, %"class.std::__1::basic_string.43"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* sret, %"class.sql::Statement"*, i32) local_unnamed_addr #1

declare void @_ZN15TemplateURLData6SetURLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%struct.TemplateURLData*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

declare zeroext i1 @_ZNK3sql9Statement10ColumnBoolEi(%"class.sql::Statement"*, i32) local_unnamed_addr #1

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.36"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #1

declare i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN4base10JSONReader4ReadENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEim(%"class.absl::optional"* sret, i8*, i64, i32, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4base5Value9GetAsListEPPNS_9ListValueE(%"class.base::Value"*, %"class.base::ListValue"**) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base9ListValue9GetStringEmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::ListValue"*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_118BindURLToStatementERK15TemplateURLDataPN3sql9StatementEii(%struct.TemplateURLData* dereferenceable(848), %"class.sql::Statement"*, i32, i32) unnamed_addr #0 {
  %5 = alloca %"class.base::ListValue", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"class.base::ListValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  %11 = bitcast %"class.base::ListValue"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %5) #11
  %12 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 22
  %13 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 22, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.36"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %15, %17
  br i1 %18, label %19, label %61

19:                                               ; preds = %61, %4
  %20 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #11
  %22 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %5, i64 0, i32 0
  %23 = call zeroext i1 @_ZN4base10JSONWriter5WriteERKNS_5ValueEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEm(%"class.base::Value"* nonnull dereferenceable(32) %22, %"class.std::__1::basic_string"* nonnull %6, i64 200) #11
  %24 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* %1, i32 %2, i64 %25) #11
  %27 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 23
  %28 = bitcast %"class.std::__1::basic_string.43"* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string.43", %"class.std::__1::basic_string.43"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string.43"* %27 to i16*
  %35 = select i1 %31, i16* %33, i16* %34
  %36 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %30 to i64
  %39 = select i1 %31, i64 %37, i64 %38
  %40 = call zeroext i1 @_ZN3sql9Statement12BindString16EiN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.sql::Statement"* %1, i32 %3, i16* %35, i64 %39) #11
  %41 = add nsw i32 %3, 1
  %42 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 24
  %43 = bitcast %"class.std::__1::basic_string.43"* %42 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %43, i64 0, i32 1, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string.43", %"class.std::__1::basic_string.43"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i16*, i16** %47, align 8
  %49 = bitcast %"class.std::__1::basic_string.43"* %42 to i16*
  %50 = select i1 %46, i16* %48, i16* %49
  %51 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = zext i8 %45 to i64
  %54 = select i1 %46, i64 %52, i64 %53
  %55 = call zeroext i1 @_ZN3sql9Statement12BindString16EiN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.sql::Statement"* %1, i32 %41, i16* %50, i64 %54) #11
  %56 = add nsw i32 %3, 2
  %57 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #11
  %58 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 9, i32 1
  %59 = load i8, i8* %58, align 8, !range !29
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %86, label %84

61:                                               ; preds = %4, %61
  %62 = phi i64 [ %80, %61 ], [ %17, %4 ]
  %63 = phi i64 [ %78, %61 ], [ 0, %4 ]
  %64 = inttoptr i64 %62 to %"class.std::__1::basic_string"*
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 %63
  %66 = bitcast %"class.std::__1::basic_string"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  %73 = select i1 %69, i8* %71, i8* %72
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 %63, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = zext i8 %68 to i64
  %77 = select i1 %69, i64 %75, i64 %76
  call void @_ZN4base9ListValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::ListValue"* nonnull %5, i8* %73, i64 %77) #11
  %78 = add nuw i64 %63, 1
  %79 = load i64, i64* %14, align 8
  %80 = load i64, i64* %16, align 8
  %81 = sub i64 %79, %80
  %82 = sdiv exact i64 %81, 24
  %83 = icmp ult i64 %78, %82
  br i1 %83, label %61, label %19

84:                                               ; preds = %19
  %85 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 9
  call void @_ZN14database_utils17GurlToDatabaseUrlERK4GURL(%"class.std::__1::basic_string"* nonnull sret %7, %class.GURL* dereferenceable(120) %85) #11
  br label %87

86:                                               ; preds = %19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 24, i1 false) #11
  br label %87

87:                                               ; preds = %86, %84
  %88 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* %1, i32 %56, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #11
  %89 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #12
  br label %96

96:                                               ; preds = %87, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #11
  %97 = add nsw i32 %3, 3
  %98 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 25
  %99 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* %1, i32 %97, %"class.std::__1::basic_string"* dereferenceable(24) %98) #11
  %100 = add nsw i32 %3, 4
  %101 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 11
  %102 = load i8, i8* %101, align 8, !range !29
  %103 = icmp ne i8 %102, 0
  %104 = call zeroext i1 @_ZN3sql9Statement8BindBoolEib(%"class.sql::Statement"* %1, i32 %100, i1 zeroext %103) #11
  %105 = add nsw i32 %3, 5
  %106 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #11
  %107 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 10, i32 1
  %108 = load i8, i8* %107, align 8, !range !29
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %96
  %111 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 10
  call void @_ZN14database_utils17GurlToDatabaseUrlERK4GURL(%"class.std::__1::basic_string"* nonnull sret %8, %class.GURL* dereferenceable(120) %111) #11
  br label %113

112:                                              ; preds = %96
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 0, i64 24, i1 false) #11
  br label %113

113:                                              ; preds = %112, %110
  %114 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* %1, i32 %105, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #11
  %115 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  call void @_ZdlPv(i8* %121) #12
  br label %122

122:                                              ; preds = %113, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #11
  %123 = add nsw i32 %3, 6
  %124 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 14, i32 0, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* %1, i32 %123, i64 %125) #11
  %127 = add nsw i32 %3, 7
  %128 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 19
  %129 = load i32, i32* %128, align 4
  %130 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* %1, i32 %127, i32 %129) #11
  %131 = add nsw i32 %3, 8
  %132 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #11
  %133 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 12
  %134 = bitcast %"class.std::__1::vector.36"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 12, i32 0, i32 1
  %137 = bitcast %"class.std::__1::basic_string"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = sub i64 %138, %135
  %140 = sdiv exact i64 %139, 24
  %141 = inttoptr i64 %135 to %"class.std::__1::basic_string"*
  call void @_ZN4base10JoinStringENS_4spanIKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELm18446744073709551615EEENS_16BasicStringPieceIcS4_EE(%"class.std::__1::basic_string"* nonnull sret %9, i64 %140, %"class.std::__1::basic_string"* %141, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i64 1) #11
  %142 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* %1, i32 %131, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #11
  %143 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %143, i64 0, i32 1, i32 0
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %122
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  call void @_ZdlPv(i8* %149) #12
  br label %150

150:                                              ; preds = %122, %147
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #11
  %151 = add nsw i32 %3, 9
  %152 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 0
  %153 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* %1, i32 %151, %"class.std::__1::basic_string"* dereferenceable(24) %152) #11
  %154 = add nsw i32 %3, 10
  %155 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 20
  %156 = load i32, i32* %155, align 8
  %157 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* %1, i32 %154, i32 %156) #11
  %158 = add nsw i32 %3, 11
  %159 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 17
  %160 = load i8, i8* %159, align 8, !range !29
  %161 = icmp ne i8 %160, 0
  %162 = call zeroext i1 @_ZN3sql9Statement8BindBoolEib(%"class.sql::Statement"* %1, i32 %158, i1 zeroext %161) #11
  %163 = add nsw i32 %3, 12
  %164 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 15, i32 0, i32 0
  %165 = load i64, i64* %164, align 8
  %166 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* %1, i32 %163, i64 %165) #11
  %167 = add nsw i32 %3, 13
  %168 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 21
  %169 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* %1, i32 %167, %"class.std::__1::basic_string"* dereferenceable(24) %168) #11
  %170 = add nsw i32 %3, 14
  %171 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* %1, i32 %170, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #11
  %172 = add nsw i32 %3, 15
  %173 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 1
  %174 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* %1, i32 %172, %"class.std::__1::basic_string"* dereferenceable(24) %173) #11
  %175 = add nsw i32 %3, 16
  %176 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 6
  %177 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* %1, i32 %175, %"class.std::__1::basic_string"* dereferenceable(24) %176) #11
  %178 = add nsw i32 %3, 17
  %179 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 7
  %180 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* %1, i32 %178, %"class.std::__1::basic_string"* dereferenceable(24) %179) #11
  %181 = add nsw i32 %3, 18
  %182 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 8
  %183 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* %1, i32 %181, %"class.std::__1::basic_string"* dereferenceable(24) %182) #11
  %184 = add nsw i32 %3, 19
  %185 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 2
  %186 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* %1, i32 %184, %"class.std::__1::basic_string"* dereferenceable(24) %185) #11
  %187 = add nsw i32 %3, 20
  %188 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 16, i32 0, i32 0
  %189 = load i64, i64* %188, align 8
  %190 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* %1, i32 %187, i64 %189) #11
  %191 = add nsw i32 %3, 21
  %192 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 18
  %193 = load i8, i8* %192, align 1, !range !29
  %194 = icmp ne i8 %193, 0
  %195 = call zeroext i1 @_ZN3sql9Statement8BindBoolEib(%"class.sql::Statement"* %1, i32 %191, i1 zeroext %194) #11
  %196 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %196, i64 0, i32 1, i32 0
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %202

200:                                              ; preds = %150
  %201 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %201) #12
  br label %202

202:                                              ; preds = %150, %200
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12KeywordTable18GetKeywordAsStringElRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%class.KeywordTable* nocapture readonly, i64, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.sql::Statement", align 8
  %11 = alloca %"class.logging::LogMessage", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %17 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  %18 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = load i32, i32* @_ZN11WebDatabase21kCurrentVersionNumberE, align 4
  call fastcc void @_ZN12_GLOBAL__N_117ColumnsForVersionEib(%"class.std::__1::basic_string"* nonnull sret %9, i32 %20, i1 zeroext true)
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #11
  %21 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #11, !noalias !31
  %22 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %22, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #11, !noalias !31
  %23 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1, !noalias !34
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8, !noalias !34
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8, !noalias !34
  %31 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %32 = zext i8 %25 to i64
  %33 = select i1 %26, i8* %28, i8* %31
  %34 = select i1 %26, i64 %30, i64 %32
  %35 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* %33, i64 %34) #11, !noalias !34
  %36 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %36, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #11, !noalias !34
  %37 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0)) #11, !noalias !37
  %38 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %38, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #11, !noalias !37
  %39 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %4
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #12
  br label %46

46:                                               ; preds = %4, %43
  %47 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %46, %51
  %55 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %54, %59
  %63 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %62, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  %71 = bitcast %"class.sql::Statement"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #11
  %72 = getelementptr inbounds %class.KeywordTable, %class.KeywordTable* %0, i64 0, i32 0, i32 1
  %73 = bitcast %"class.sql::Statement"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 16, i1 false)
  %74 = load %"class.sql::Database"*, %"class.sql::Database"** %72, align 8
  %75 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  %79 = load i8*, i8** %14, align 8
  %80 = select i1 %78, i8* %79, i8* %13
  %81 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %74, i8* %80) #11
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %10, %"class.sql::Database::StatementRef"* %81) #11
  %82 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %10, i32 0, i64 %1) #11
  %83 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %10) #11
  br i1 %83, label %95, label %84

84:                                               ; preds = %70
  %85 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #11
  br i1 %85, label %86, label %108

86:                                               ; preds = %84
  %87 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %10) #11
  br i1 %87, label %88, label %108

88:                                               ; preds = %86
  %89 = bitcast %"class.logging::LogMessage"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %89) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %11, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i32 555, i32 1) #11
  %90 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %11, i64 0, i32 2
  %91 = bitcast %"class.std::__1::basic_ostringstream"* %90 to %"class.std::__1::basic_ostream"*
  %92 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %91, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24, i64 0, i64 0), i64 20) #11
  %93 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %92, i64 %1) #11
  %94 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %93, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0), i64 11) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %89) #11
  br label %108

95:                                               ; preds = %70
  %96 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %10) #11
  br i1 %96, label %97, label %108

97:                                               ; preds = %95
  %98 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #11
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %12, %"class.sql::Statement"* nonnull %10, i32 0) #11
  %99 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %105) #12
  br label %106

106:                                              ; preds = %103, %97
  %107 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* nonnull align 8 %98, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #11
  br label %108

108:                                              ; preds = %88, %84, %86, %95, %106
  %109 = phi i1 [ true, %106 ], [ false, %95 ], [ true, %86 ], [ true, %84 ], [ true, %88 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #11
  %110 = load i8, i8* %76, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %108
  %113 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %113) #12
  br label %114

114:                                              ; preds = %108, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  ret i1 %109
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #2

declare void @_ZN4base10JoinStringENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEES5_(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: noreturn nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::vector.112"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() local_unnamed_addr #9 comdat {
  tail call void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() #13
  unreachable
}

; Function Attrs: noreturn
declare void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #2

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #1

declare void @_ZN4base9ListValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::ListValue"*, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4base10JSONWriter5WriteERKNS_5ValueEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEm(%"class.base::Value"* dereferenceable(32), %"class.std::__1::basic_string"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql9Statement12BindString16EiN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.sql::Statement"*, i32, i16*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN14database_utils17GurlToDatabaseUrlERK4GURL(%"class.std::__1::basic_string"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql9Statement8BindBoolEib(%"class.sql::Statement"*, i32, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"*, i32, i32) local_unnamed_addr #1

declare void @_ZN4base10JoinStringENS_4spanIKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELm18446744073709551615EEENS_16BasicStringPieceIcS4_EE(%"class.std::__1::basic_string"* sret, i64, %"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !29
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE7destroyEPNS_11__tree_nodeIlPvEE(%"class.std::__1::__tree.66"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE7destroyEPNS_11__tree_nodeIlPvEE(%"class.std::__1::__tree.66"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE7destroyEPNS_11__tree_nodeIlPvEE(%"class.std::__1::__tree.66"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI15TemplateURLDataNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector.57"*, %struct.TemplateURLData* dereferenceable(848)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %struct.TemplateURLData** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.57"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 848
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 21753235935978244
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.57"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %struct.TemplateURLData** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 848
  %20 = icmp ult i64 %19, 10876617967989122
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 21753235935978244, %14 ]
  %28 = mul i64 %27, 848
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %struct.TemplateURLData*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %struct.TemplateURLData* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %33, i64 %9
  %35 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %33, i64 %32
  %36 = ptrtoint %struct.TemplateURLData* %35 to i64
  tail call void @_ZN15TemplateURLDataC1ERKS_(%struct.TemplateURLData* %34, %struct.TemplateURLData* dereferenceable(848) %1) #11
  %37 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %34, i64 1
  %38 = ptrtoint %struct.TemplateURLData* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %0, i64 0, i32 0, i32 0
  %40 = load %struct.TemplateURLData*, %struct.TemplateURLData** %39, align 8
  %41 = load %struct.TemplateURLData*, %struct.TemplateURLData** %3, align 8
  %42 = icmp eq %struct.TemplateURLData* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %struct.TemplateURLData* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %struct.TemplateURLData* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %struct.TemplateURLData* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %46, i64 -1
  %49 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %47, i64 -1
  tail call void @_ZN15TemplateURLDataC1ERKS_(%struct.TemplateURLData* %48, %struct.TemplateURLData* dereferenceable(848) %49) #11
  %50 = icmp eq %struct.TemplateURLData* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %struct.TemplateURLData*, %struct.TemplateURLData** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %struct.TemplateURLData* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %struct.TemplateURLData* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %struct.TemplateURLData* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %struct.TemplateURLData*
  %60 = icmp eq %struct.TemplateURLData* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %struct.TemplateURLData* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %62, i64 -1
  tail call void @_ZN15TemplateURLDataD1Ev(%struct.TemplateURLData* %63) #11
  %64 = icmp eq %struct.TemplateURLData* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN15TemplateURLDataC1ERKS_(%struct.TemplateURLData*, %struct.TemplateURLData* dereferenceable(848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !29
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !29
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !29
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.36"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.36"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.36"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #11
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #11
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #11
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #12
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN12KeywordTable17GetKeywordColumnsEv: argument 0"}
!10 = distinct !{!10, !"_ZN12KeywordTable17GetKeywordColumnsEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN12KeywordTable17GetKeywordColumnsEv: argument 0"}
!19 = distinct !{!19, !"_ZN12KeywordTable17GetKeywordColumnsEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE16__construct_nodeIJlEEENS_10unique_ptrINS_11__tree_nodeIlPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!28 = distinct !{!28, !"_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE16__construct_nodeIJlEEENS_10unique_ptrINS_11__tree_nodeIlPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!29 = !{i8 0, i8 2}
!30 = !{!"branch_weights", i32 2000, i32 1}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!36 = distinct !{!36, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!39 = distinct !{!39, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
