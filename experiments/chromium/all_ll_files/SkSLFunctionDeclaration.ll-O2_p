; ModuleID = '../../third_party/skia/src/sksl/ir/SkSLFunctionDeclaration.cpp'
source_filename = "../../third_party/skia/src/sksl/ir/SkSLFunctionDeclaration.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.148" }
%"class.std::__1::__hash_table.148" = type <{ %"class.std::__1::unique_ptr.149", %"class.std::__1::__compressed_pair.159", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.167", [4 x i8] }>
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151", %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.std::__1::__hash_node_base.152"** }
%"struct.std::__1::__hash_node_base.152" = type { %"struct.std::__1::__hash_node_base.152"* }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.std::__1::__bucket_list_deallocator.154" }
%"class.std::__1::__bucket_list_deallocator.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.std::__1::__hash_node_base.152" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { float }
%"class.SkSL::FunctionDeclaration" = type { %"class.SkSL::Symbol", %"class.SkSL::FunctionDefinition"*, %"struct.SkSL::Modifiers"*, %"class.std::__1::vector.23", %"class.SkSL::Type"*, i8, i8, i32 }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::FunctionDefinition" = type { %"class.SkSL::ProgramElement", %"class.SkSL::FunctionDeclaration"*, i8, %"class.std::__1::unique_ptr", %"class.std::__1::unordered_set", %"struct.SkSL::ASTNode"* }
%"class.SkSL::ProgramElement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.1", %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.15", [4 x i8] }>
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3", %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.SkSL::ASTNode" = type { %"class.std::__1::vector"*, %"struct.SkSL::ASTNode::NodeData", i32, i32, %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.SkSL::ASTNode"* }
%"struct.SkSL::ASTNode::NodeData" = type { [128 x i8], i32 }
%"class.SkSL::ASTNode::ID" = type { i32 }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.SkSL::Variable"**, %"class.SkSL::Variable"**, %"class.std::__1::__compressed_pair.50" }
%"class.SkSL::Variable" = type <{ %"class.SkSL::Symbol", %"class.SkSL::VarDeclaration"*, %"struct.SkSL::Modifiers"*, i8, i8, [6 x i8] }>
%"class.SkSL::VarDeclaration" = type { %"class.SkSL::Statement", %"class.SkSL::Variable"*, %"class.SkSL::Type"*, i32, %"class.std::__1::unique_ptr.44" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.SkSL::Variable"** }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector.30", i32, i32, %"class.std::__1::vector.37", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.39" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.SkSL::Type::Field"* }
%"struct.std::__1::pair.172" = type <{ %"class.SkSL::String", i32, [4 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.SkSL::Type"* }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set.62" }
%"class.std::__1::unordered_set.62" = type { %"class.std::__1::__hash_table.63" }
%"class.std::__1::__hash_table.63" = type <{ %"class.std::__1::unique_ptr.64", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.82", [4 x i8] }>
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.std::__1::__hash_node_base.67"** }
%"struct.std::__1::__hash_node_base.67" = type { %"struct.std::__1::__hash_node_base.67"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator.69" }
%"class.std::__1::__bucket_list_deallocator.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base.67" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.87"* }
%"class.std::__1::vector.87" = type opaque
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr", %"class.std::__1::vector.88", i8, %"class.std::__1::vector.96", %"class.std::__1::forward_list", %class.SkTHashMap, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"*, %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.std::__1::unique_ptr.90"* }
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { %"class.std::__1::unique_ptr.98"*, %"class.std::__1::unique_ptr.98"*, %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.std::__1::unique_ptr.98"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.109" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::vector.115" = type { %"class.std::__1::__vector_base.116" }
%"class.std::__1::__vector_base.116" = type { %"class.std::__1::unique_ptr.117"*, %"class.std::__1::unique_ptr.117"*, %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.SkSL::Variable"* }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.std::__1::unique_ptr.117"* }
%"class.std::__1::vector.198" = type { %"class.std::__1::__vector_base.199" }
%"class.std::__1::__vector_base.199" = type { %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"**, %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.SkSL::FunctionDeclaration"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr.44"*, i64 }
%class.SkSTArray.135 = type { %class.SkAlignedSTStorage.136, %class.SkTArray.137 }
%class.SkAlignedSTStorage.136 = type { [64 x i8] }
%class.SkTArray.137 = type { %"class.SkSL::Type"**, i64 }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }

$_ZN4SkSL19FunctionDeclarationD2Ev = comdat any

$_ZN4SkSL19FunctionDeclarationD0Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_13IntrinsicKindEEENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS3_JRKNS_4pairIKS3_S4_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_13IntrinsicKindEEENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_13IntrinsicKindEEENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm = comdat any

$_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_13IntrinsicKindEEENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_ = comdat any

$_ZN4SkSL13ErrorReporter5errorEiPKc = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNK4SkSL6LayouteqERKS0_ = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIPKN4SkSL19FunctionDeclarationENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZN8SkTArrayIPKN4SkSL4TypeELb0EE12checkReallocEiNS4_11ReallocTypeE = comdat any

@_ZTVN4SkSL19FunctionDeclarationE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::FunctionDeclaration"*)* @_ZN4SkSL19FunctionDeclarationD2Ev to i8*), i8* bitcast (void (%"class.SkSL::FunctionDeclaration"*)* @_ZN4SkSL19FunctionDeclarationD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::FunctionDeclaration"*)* @_ZNK4SkSL19FunctionDeclaration11descriptionEv to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"_\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"x_\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c")\00", align 1
@_ZZN4SkSLL18identify_intrinsicERKNS_6StringEE14kAllIntrinsics = internal unnamed_addr global %"class.std::__1::unordered_map"* null, align 8
@_ZGVZN4SkSLL18identify_intrinsicERKNS_6StringEE14kAllIntrinsics = internal global i64 0, align 8
@.str.7 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"acosh\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"any\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"asinh\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"atanh\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"clamp\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"cos\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"cross\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"degrees\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"determinant\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"dot\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"EmitVertex\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"EndPrimitive\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"equal\00", align 1
@.str.32 = private unnamed_addr constant [4 x i8] c"exp\00", align 1
@.str.33 = private unnamed_addr constant [12 x i8] c"faceforward\00", align 1
@.str.34 = private unnamed_addr constant [8 x i8] c"findLSB\00", align 1
@.str.35 = private unnamed_addr constant [8 x i8] c"findMSB\00", align 1
@.str.36 = private unnamed_addr constant [15 x i8] c"floatBitsToInt\00", align 1
@.str.37 = private unnamed_addr constant [16 x i8] c"floatBitsToUint\00", align 1
@.str.38 = private unnamed_addr constant [6 x i8] c"floor\00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"fma\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"fract\00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"frexp\00", align 1
@.str.42 = private unnamed_addr constant [7 x i8] c"fwidth\00", align 1
@.str.43 = private unnamed_addr constant [17 x i8] c"greaterThanEqual\00", align 1
@.str.44 = private unnamed_addr constant [12 x i8] c"greaterThan\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"intBitsToFloat\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"inversesqrt\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"inverse\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"isinf\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"isnan\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"ldexp\00", align 1
@.str.51 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c"lessThanEqual\00", align 1
@.str.55 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.56 = private unnamed_addr constant [14 x i8] c"makeSampler2D\00", align 1
@.str.57 = private unnamed_addr constant [15 x i8] c"matrixCompMult\00", align 1
@.str.58 = private unnamed_addr constant [14 x i8] c"matrixInverse\00", align 1
@.str.59 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.60 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mix\00", align 1
@.str.63 = private unnamed_addr constant [4 x i8] c"mod\00", align 1
@.str.64 = private unnamed_addr constant [10 x i8] c"normalize\00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"not\00", align 1
@.str.67 = private unnamed_addr constant [13 x i8] c"outerProduct\00", align 1
@.str.68 = private unnamed_addr constant [15 x i8] c"packDouble2x32\00", align 1
@.str.69 = private unnamed_addr constant [13 x i8] c"packHalf2x16\00", align 1
@.str.70 = private unnamed_addr constant [14 x i8] c"packSnorm2x16\00", align 1
@.str.71 = private unnamed_addr constant [13 x i8] c"packSnorm4x8\00", align 1
@.str.72 = private unnamed_addr constant [14 x i8] c"packUnorm2x16\00", align 1
@.str.73 = private unnamed_addr constant [13 x i8] c"packUnorm4x8\00", align 1
@.str.74 = private unnamed_addr constant [4 x i8] c"pow\00", align 1
@.str.75 = private unnamed_addr constant [8 x i8] c"radians\00", align 1
@.str.76 = private unnamed_addr constant [8 x i8] c"reflect\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c"refract\00", align 1
@.str.78 = private unnamed_addr constant [10 x i8] c"roundEven\00", align 1
@.str.79 = private unnamed_addr constant [6 x i8] c"round\00", align 1
@.str.80 = private unnamed_addr constant [7 x i8] c"sample\00", align 1
@.str.84 = private unnamed_addr constant [4 x i8] c"sin\00", align 1
@.str.85 = private unnamed_addr constant [11 x i8] c"smoothstep\00", align 1
@.str.88 = private unnamed_addr constant [12 x i8] c"subpassLoad\00", align 1
@.str.90 = private unnamed_addr constant [4 x i8] c"tan\00", align 1
@.str.91 = private unnamed_addr constant [10 x i8] c"transpose\00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c"trunc\00", align 1
@.str.93 = private unnamed_addr constant [16 x i8] c"uintBitsToFloat\00", align 1
@.str.94 = private unnamed_addr constant [17 x i8] c"unpackDouble2x32\00", align 1
@.str.95 = private unnamed_addr constant [15 x i8] c"unpackHalf2x16\00", align 1
@.str.96 = private unnamed_addr constant [16 x i8] c"unpackSnorm2x16\00", align 1
@.str.97 = private unnamed_addr constant [15 x i8] c"unpackSnorm4x8\00", align 1
@.str.98 = private unnamed_addr constant [16 x i8] c"unpackUnorm2x16\00", align 1
@.str.99 = private unnamed_addr constant [15 x i8] c"unpackUnorm4x8\00", align 1
@.str.102 = private unnamed_addr constant [49 x i8] c"functions cannot be both 'inline' and 'noinline'\00", align 1
@.str.103 = private unnamed_addr constant [32 x i8] c"functions may not return type '\00", align 1
@.str.104 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.105 = private unnamed_addr constant [51 x i8] c"functions may not return structs containing arrays\00", align 1
@.str.106 = private unnamed_addr constant [39 x i8] c"functions may not return opaque type '\00", align 1
@.str.107 = private unnamed_addr constant [21 x i8] c"parameters of type '\00", align 1
@.str.108 = private unnamed_addr constant [14 x i8] c"' not allowed\00", align 1
@.str.109 = private unnamed_addr constant [49 x i8] c"'main' must return: 'vec4', 'float4', or 'half4'\00", align 1
@.str.110 = private unnamed_addr constant [54 x i8] c"'main' parameter must be 'vec4', 'float4', or 'half4'\00", align 1
@.str.111 = private unnamed_addr constant [57 x i8] c"'main' parameters must be (float2, (vec4|float4|half4)?)\00", align 1
@.str.112 = private unnamed_addr constant [31 x i8] c".fp 'main' must return 'half4'\00", align 1
@.str.113 = private unnamed_addr constant [51 x i8] c".fp 'main' must be declared main() or main(float2)\00", align 1
@.str.114 = private unnamed_addr constant [45 x i8] c"shader 'main' must be main() or main(float2)\00", align 1
@.str.115 = private unnamed_addr constant [40 x i8] c"shader 'main' must have zero parameters\00", align 1
@.str.116 = private unnamed_addr constant [9 x i8] c"symbol '\00", align 1
@.str.117 = private unnamed_addr constant [22 x i8] c"' was already defined\00", align 1
@.str.118 = private unnamed_addr constant [12 x i8] c"functions '\00", align 1
@.str.119 = private unnamed_addr constant [8 x i8] c"' and '\00", align 1
@.str.120 = private unnamed_addr constant [29 x i8] c"' differ only in return type\00", align 1
@.str.121 = private unnamed_addr constant [24 x i8] c"modifiers on parameter \00", align 1
@.str.122 = private unnamed_addr constant [43 x i8] c" differ between declaration and definition\00", align 1
@.str.123 = private unnamed_addr constant [25 x i8] c"duplicate definition of \00", align 1

@_ZN4SkSL19FunctionDeclarationC1EiPKNS_9ModifiersENS_14StringFragmentENSt3__16vectorIPKNS_8VariableENS5_9allocatorIS9_EEEEPKNS_4TypeEb = hidden unnamed_addr alias void (%"class.SkSL::FunctionDeclaration"*, i32, %"struct.SkSL::Modifiers"*, i8*, i64, %"class.std::__1::vector.23"*, %"class.SkSL::Type"*, i1), void (%"class.SkSL::FunctionDeclaration"*, i32, %"struct.SkSL::Modifiers"*, i8*, i64, %"class.std::__1::vector.23"*, %"class.SkSL::Type"*, i1)* @_ZN4SkSL19FunctionDeclarationC2EiPKNS_9ModifiersENS_14StringFragmentENSt3__16vectorIPKNS_8VariableENS5_9allocatorIS9_EEEEPKNS_4TypeEb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL19FunctionDeclarationC2EiPKNS_9ModifiersENS_14StringFragmentENSt3__16vectorIPKNS_8VariableENS5_9allocatorIS9_EEEEPKNS_4TypeEb(%"class.SkSL::FunctionDeclaration"* nocapture, i32, %"struct.SkSL::Modifiers"*, i8*, i64, %"class.std::__1::vector.23"* nocapture, %"class.SkSL::Type"*, i1 zeroext) unnamed_addr #0 align 2 {
  %9 = alloca [94 x %"struct.std::__1::pair.172"], align 8
  %10 = alloca %"struct.SkSL::StringFragment", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %10, i64 0, i32 0
  store i8* %3, i8** %12, align 8
  %13 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %10, i64 0, i32 1
  store i64 %4, i64* %13, align 8
  %14 = zext i1 %7 to i8
  %15 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %1, i32* %16, align 8
  %17 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 11, i32* %17, align 4
  %18 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 0, i32 1, i32 0
  store i8* %3, i8** %18, align 8
  %19 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 0, i32 1, i32 1
  store i64 %4, i64* %19, align 8
  %20 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 0, i32 2
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %20, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL19FunctionDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %21 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 1
  store %"class.SkSL::FunctionDefinition"* null, %"class.SkSL::FunctionDefinition"** %21, align 8
  %22 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 2
  store %"struct.SkSL::Modifiers"* %2, %"struct.SkSL::Modifiers"** %22, align 8
  %23 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 3
  %24 = bitcast %"class.std::__1::vector.23"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #11
  %25 = bitcast %"class.std::__1::vector.23"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector.23"* %23 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %5, i64 0, i32 0, i32 1
  %29 = bitcast %"class.SkSL::Variable"*** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 3, i32 0, i32 1
  %32 = bitcast %"class.SkSL::Variable"*** %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"class.SkSL::Variable"*** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"class.SkSL::Variable"*** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast %"class.std::__1::vector.23"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #11
  %39 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 4
  store %"class.SkSL::Type"* %6, %"class.SkSL::Type"** %39, align 8
  %40 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 5
  store i8 %14, i8* %40, align 8
  %41 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 6
  %42 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqEPKc(%"struct.SkSL::StringFragment"* nonnull %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #11
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %41, align 1
  %44 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 7
  br i1 %7, label %45, label %708

45:                                               ; preds = %8
  %46 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #11
  %47 = load i8*, i8** %12, align 8
  %48 = load i64, i64* %13, align 8
  %49 = icmp ugt i64 %48, -17
  br i1 %49, label %50, label %52

50:                                               ; preds = %45
  %51 = bitcast %"class.SkSL::String"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %51) #12
  unreachable

52:                                               ; preds = %45
  %53 = icmp ult i64 %48, 23
  br i1 %53, label %62, label %54

54:                                               ; preds = %52
  %55 = add nuw i64 %48, 16
  %56 = and i64 %55, -16
  %57 = call i8* @_Znwm(i64 %56) #13
  %58 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %57, i8** %58, align 8
  %59 = or i64 %56, -9223372036854775808
  %60 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %48, i64* %61, align 8
  br label %67

62:                                               ; preds = %52
  %63 = trunc i64 %48 to i8
  %64 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  store i8 %63, i8* %65, align 1
  %66 = icmp eq i64 %48, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %62, %54
  %68 = phi i8* [ %57, %54 ], [ %46, %62 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* align 1 %47, i64 %48, i1 false) #11
  br label %69

69:                                               ; preds = %62, %67
  %70 = phi i8* [ %46, %62 ], [ %68, %67 ]
  %71 = getelementptr inbounds i8, i8* %70, i64 %48
  store i8 0, i8* %71, align 1
  %72 = load atomic i8, i8* bitcast (i64* @_ZGVZN4SkSLL18identify_intrinsicERKNS_6StringEE14kAllIntrinsics to i8*) acquire, align 8
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %689, !prof !2

74:                                               ; preds = %69
  %75 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4SkSLL18identify_intrinsicERKNS_6StringEE14kAllIntrinsics) #11
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %689, label %77

77:                                               ; preds = %74
  %78 = call i8* @_Znwm(i64 40) #13
  %79 = bitcast [94 x %"struct.std::__1::pair.172"]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3008, i8* nonnull %79) #11
  %80 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 0
  %81 = bitcast [94 x %"struct.std::__1::pair.172"]* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  store i8 3, i8* %82, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %79, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i64 3, i1 false) #11
  %83 = getelementptr inbounds i8, i8* %79, i64 3
  store i8 0, i8* %83, align 1
  %84 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 0, i32 1
  store i32 0, i32* %84, align 8
  %85 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 1
  %86 = bitcast %"struct.std::__1::pair.172"* %85 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  store i8 5, i8* %87, align 1
  %88 = bitcast %"struct.std::__1::pair.172"* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i64 5, i1 false) #11
  %89 = getelementptr inbounds i8, i8* %88, i64 5
  store i8 0, i8* %89, align 1
  %90 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 1, i32 1
  store i32 1, i32* %90, align 8
  %91 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 2
  %92 = bitcast %"struct.std::__1::pair.172"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  store i8 4, i8* %93, align 1
  %94 = bitcast %"struct.std::__1::pair.172"* %91 to i8*
  %95 = bitcast %"struct.std::__1::pair.172"* %91 to i32*
  store i32 1936679777, i32* %95, align 8
  %96 = getelementptr inbounds i8, i8* %94, i64 4
  store i8 0, i8* %96, align 4
  %97 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 2, i32 1
  store i32 2, i32* %97, align 8
  %98 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 3
  %99 = bitcast %"struct.std::__1::pair.172"* %98 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  store i8 3, i8* %100, align 1
  %101 = bitcast %"struct.std::__1::pair.172"* %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i64 3, i1 false) #11
  %102 = getelementptr inbounds i8, i8* %101, i64 3
  store i8 0, i8* %102, align 1
  %103 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 3, i32 1
  store i32 3, i32* %103, align 8
  %104 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 4
  %105 = bitcast %"struct.std::__1::pair.172"* %104 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  store i8 3, i8* %106, align 1
  %107 = bitcast %"struct.std::__1::pair.172"* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i64 3, i1 false) #11
  %108 = getelementptr inbounds i8, i8* %107, i64 3
  store i8 0, i8* %108, align 1
  %109 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 4, i32 1
  store i32 4, i32* %109, align 8
  %110 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 5
  %111 = bitcast %"struct.std::__1::pair.172"* %110 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  store i8 5, i8* %112, align 1
  %113 = bitcast %"struct.std::__1::pair.172"* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i64 5, i1 false) #11
  %114 = getelementptr inbounds i8, i8* %113, i64 5
  store i8 0, i8* %114, align 1
  %115 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 5, i32 1
  store i32 5, i32* %115, align 8
  %116 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 6
  %117 = bitcast %"struct.std::__1::pair.172"* %116 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  store i8 4, i8* %118, align 1
  %119 = bitcast %"struct.std::__1::pair.172"* %116 to i8*
  %120 = bitcast %"struct.std::__1::pair.172"* %116 to i32*
  store i32 1852404577, i32* %120, align 8
  %121 = getelementptr inbounds i8, i8* %119, i64 4
  store i8 0, i8* %121, align 4
  %122 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 6, i32 1
  store i32 6, i32* %122, align 8
  %123 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 7
  %124 = bitcast %"struct.std::__1::pair.172"* %123 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  store i8 5, i8* %125, align 1
  %126 = bitcast %"struct.std::__1::pair.172"* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), i64 5, i1 false) #11
  %127 = getelementptr inbounds i8, i8* %126, i64 5
  store i8 0, i8* %127, align 1
  %128 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 7, i32 1
  store i32 7, i32* %128, align 8
  %129 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 8
  %130 = bitcast %"struct.std::__1::pair.172"* %129 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  store i8 4, i8* %131, align 1
  %132 = bitcast %"struct.std::__1::pair.172"* %129 to i8*
  %133 = bitcast %"struct.std::__1::pair.172"* %129 to i32*
  store i32 1851880545, i32* %133, align 8
  %134 = getelementptr inbounds i8, i8* %132, i64 4
  store i8 0, i8* %134, align 4
  %135 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 8, i32 1
  store i32 8, i32* %135, align 8
  %136 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 9
  %137 = bitcast %"struct.std::__1::pair.172"* %136 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  store i8 8, i8* %138, align 1
  %139 = bitcast %"struct.std::__1::pair.172"* %136 to i64*
  store i64 8389772276571335010, i64* %139, align 8
  %140 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %141 = bitcast i64* %140 to i8*
  store i8 0, i8* %141, align 8
  %142 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 9, i32 1
  store i32 9, i32* %142, align 8
  %143 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 10
  %144 = bitcast %"struct.std::__1::pair.172"* %143 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %144, i64 0, i32 1, i32 0
  store i8 4, i8* %145, align 1
  %146 = bitcast %"struct.std::__1::pair.172"* %143 to i8*
  %147 = bitcast %"struct.std::__1::pair.172"* %143 to i32*
  store i32 1818846563, i32* %147, align 8
  %148 = getelementptr inbounds i8, i8* %146, i64 4
  store i8 0, i8* %148, align 4
  %149 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 10, i32 1
  store i32 10, i32* %149, align 8
  %150 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 11
  %151 = bitcast %"struct.std::__1::pair.172"* %150 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %152 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %151, i64 0, i32 1, i32 0
  store i8 5, i8* %152, align 1
  %153 = bitcast %"struct.std::__1::pair.172"* %150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0), i64 5, i1 false) #11
  %154 = getelementptr inbounds i8, i8* %153, i64 5
  store i8 0, i8* %154, align 1
  %155 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 11, i32 1
  store i32 11, i32* %155, align 8
  %156 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 12
  %157 = bitcast %"struct.std::__1::pair.172"* %156 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %158 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %157, i64 0, i32 1, i32 0
  store i8 4, i8* %158, align 1
  %159 = bitcast %"struct.std::__1::pair.172"* %156 to i8*
  %160 = bitcast %"struct.std::__1::pair.172"* %156 to i32*
  store i32 1752395619, i32* %160, align 8
  %161 = getelementptr inbounds i8, i8* %159, i64 4
  store i8 0, i8* %161, align 4
  %162 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 12, i32 1
  store i32 12, i32* %162, align 8
  %163 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 13
  %164 = bitcast %"struct.std::__1::pair.172"* %163 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %165 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %164, i64 0, i32 1, i32 0
  store i8 3, i8* %165, align 1
  %166 = bitcast %"struct.std::__1::pair.172"* %163 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i64 0, i64 0), i64 3, i1 false) #11
  %167 = getelementptr inbounds i8, i8* %166, i64 3
  store i8 0, i8* %167, align 1
  %168 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 13, i32 1
  store i32 13, i32* %168, align 8
  %169 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 14
  %170 = bitcast %"struct.std::__1::pair.172"* %169 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %171 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %170, i64 0, i32 1, i32 0
  store i8 5, i8* %171, align 1
  %172 = bitcast %"struct.std::__1::pair.172"* %169 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0), i64 5, i1 false) #11
  %173 = getelementptr inbounds i8, i8* %172, i64 5
  store i8 0, i8* %173, align 1
  %174 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 14, i32 1
  store i32 14, i32* %174, align 8
  %175 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 15
  %176 = bitcast %"struct.std::__1::pair.172"* %175 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  store i8 7, i8* %177, align 1
  %178 = bitcast %"struct.std::__1::pair.172"* %175 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i64 0, i64 0), i64 7, i1 false) #11
  %179 = getelementptr inbounds i8, i8* %178, i64 7
  store i8 0, i8* %179, align 1
  %180 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 15, i32 1
  store i32 15, i32* %180, align 8
  %181 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 16
  %182 = bitcast %"struct.std::__1::pair.172"* %181 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %183 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %182, i64 0, i32 1, i32 0
  store i8 11, i8* %183, align 1
  %184 = bitcast %"struct.std::__1::pair.172"* %181 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %184, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i64 11, i1 false) #11
  %185 = getelementptr inbounds i8, i8* %184, i64 11
  store i8 0, i8* %185, align 1
  %186 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 16, i32 1
  store i32 16, i32* %186, align 8
  %187 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 17
  %188 = bitcast %"struct.std::__1::pair.172"* %187 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %188, i64 0, i32 1, i32 0
  store i8 4, i8* %189, align 1
  %190 = bitcast %"struct.std::__1::pair.172"* %187 to i8*
  %191 = bitcast %"struct.std::__1::pair.172"* %187 to i32*
  store i32 2019837540, i32* %191, align 8
  %192 = getelementptr inbounds i8, i8* %190, i64 4
  store i8 0, i8* %192, align 4
  %193 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 17, i32 1
  store i32 17, i32* %193, align 8
  %194 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 18
  %195 = bitcast %"struct.std::__1::pair.172"* %194 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %196 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %195, i64 0, i32 1, i32 0
  store i8 4, i8* %196, align 1
  %197 = bitcast %"struct.std::__1::pair.172"* %194 to i8*
  %198 = bitcast %"struct.std::__1::pair.172"* %194 to i32*
  store i32 2036614756, i32* %198, align 8
  %199 = getelementptr inbounds i8, i8* %197, i64 4
  store i8 0, i8* %199, align 4
  %200 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 18, i32 1
  store i32 18, i32* %200, align 8
  %201 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 19
  %202 = bitcast %"struct.std::__1::pair.172"* %201 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %203 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %202, i64 0, i32 1, i32 0
  store i8 8, i8* %203, align 1
  %204 = bitcast %"struct.std::__1::pair.172"* %201 to i64*
  store i64 7305804385369680228, i64* %204, align 8
  %205 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 19, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %206 = bitcast i64* %205 to i8*
  store i8 0, i8* %206, align 8
  %207 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 19, i32 1
  store i32 19, i32* %207, align 8
  %208 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 20
  %209 = bitcast %"struct.std::__1::pair.172"* %208 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %209, i64 0, i32 1, i32 0
  store i8 3, i8* %210, align 1
  %211 = bitcast %"struct.std::__1::pair.172"* %208 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0), i64 3, i1 false) #11
  %212 = getelementptr inbounds i8, i8* %211, i64 3
  store i8 0, i8* %212, align 1
  %213 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 20, i32 1
  store i32 20, i32* %213, align 8
  %214 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 21
  %215 = bitcast %"struct.std::__1::pair.172"* %214 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %216 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %215, i64 0, i32 1, i32 0
  store i8 10, i8* %216, align 1
  %217 = bitcast %"struct.std::__1::pair.172"* %214 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %217, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0), i64 10, i1 false) #11
  %218 = getelementptr inbounds i8, i8* %217, i64 10
  store i8 0, i8* %218, align 2
  %219 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 21, i32 1
  store i32 21, i32* %219, align 8
  %220 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 22
  %221 = bitcast %"struct.std::__1::pair.172"* %220 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %222 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %221, i64 0, i32 1, i32 0
  store i8 12, i8* %222, align 1
  %223 = bitcast %"struct.std::__1::pair.172"* %220 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i64 12, i1 false) #11
  %224 = getelementptr inbounds i8, i8* %223, i64 12
  store i8 0, i8* %224, align 4
  %225 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 22, i32 1
  store i32 22, i32* %225, align 8
  %226 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 23
  %227 = bitcast %"struct.std::__1::pair.172"* %226 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %228 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %227, i64 0, i32 1, i32 0
  store i8 5, i8* %228, align 1
  %229 = bitcast %"struct.std::__1::pair.172"* %226 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %229, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i64 5, i1 false) #11
  %230 = getelementptr inbounds i8, i8* %229, i64 5
  store i8 0, i8* %230, align 1
  %231 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 23, i32 1
  store i32 23, i32* %231, align 8
  %232 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 24
  %233 = bitcast %"struct.std::__1::pair.172"* %232 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %234 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %233, i64 0, i32 1, i32 0
  store i8 4, i8* %234, align 1
  %235 = bitcast %"struct.std::__1::pair.172"* %232 to i8*
  %236 = bitcast %"struct.std::__1::pair.172"* %232 to i32*
  store i32 846231653, i32* %236, align 8
  %237 = getelementptr inbounds i8, i8* %235, i64 4
  store i8 0, i8* %237, align 4
  %238 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 24, i32 1
  store i32 24, i32* %238, align 8
  %239 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 25
  %240 = bitcast %"struct.std::__1::pair.172"* %239 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %241 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %240, i64 0, i32 1, i32 0
  store i8 3, i8* %241, align 1
  %242 = bitcast %"struct.std::__1::pair.172"* %239 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %242, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0), i64 3, i1 false) #11
  %243 = getelementptr inbounds i8, i8* %242, i64 3
  store i8 0, i8* %243, align 1
  %244 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 25, i32 1
  store i32 25, i32* %244, align 8
  %245 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 26
  %246 = bitcast %"struct.std::__1::pair.172"* %245 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %247 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %246, i64 0, i32 1, i32 0
  store i8 11, i8* %247, align 1
  %248 = bitcast %"struct.std::__1::pair.172"* %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %248, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0), i64 11, i1 false) #11
  %249 = getelementptr inbounds i8, i8* %248, i64 11
  store i8 0, i8* %249, align 1
  %250 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 26, i32 1
  store i32 26, i32* %250, align 8
  %251 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 27
  %252 = bitcast %"struct.std::__1::pair.172"* %251 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %253 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %252, i64 0, i32 1, i32 0
  store i8 7, i8* %253, align 1
  %254 = bitcast %"struct.std::__1::pair.172"* %251 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %254, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i64 0, i64 0), i64 7, i1 false) #11
  %255 = getelementptr inbounds i8, i8* %254, i64 7
  store i8 0, i8* %255, align 1
  %256 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 27, i32 1
  store i32 27, i32* %256, align 8
  %257 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 28
  %258 = bitcast %"struct.std::__1::pair.172"* %257 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %259 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %258, i64 0, i32 1, i32 0
  store i8 7, i8* %259, align 1
  %260 = bitcast %"struct.std::__1::pair.172"* %257 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %260, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35, i64 0, i64 0), i64 7, i1 false) #11
  %261 = getelementptr inbounds i8, i8* %260, i64 7
  store i8 0, i8* %261, align 1
  %262 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 28, i32 1
  store i32 28, i32* %262, align 8
  %263 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 29
  %264 = bitcast %"struct.std::__1::pair.172"* %263 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %265 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %264, i64 0, i32 1, i32 0
  store i8 14, i8* %265, align 1
  %266 = bitcast %"struct.std::__1::pair.172"* %263 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %266, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i64 0, i64 0), i64 14, i1 false) #11
  %267 = getelementptr inbounds i8, i8* %266, i64 14
  store i8 0, i8* %267, align 2
  %268 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 29, i32 1
  store i32 29, i32* %268, align 8
  %269 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 30
  %270 = bitcast %"struct.std::__1::pair.172"* %269 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %271 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %270, i64 0, i32 1, i32 0
  store i8 15, i8* %271, align 1
  %272 = bitcast %"struct.std::__1::pair.172"* %269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %272, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.37, i64 0, i64 0), i64 15, i1 false) #11
  %273 = getelementptr inbounds i8, i8* %272, i64 15
  store i8 0, i8* %273, align 1
  %274 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 30, i32 1
  store i32 30, i32* %274, align 8
  %275 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 31
  %276 = bitcast %"struct.std::__1::pair.172"* %275 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %277 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %276, i64 0, i32 1, i32 0
  store i8 5, i8* %277, align 1
  %278 = bitcast %"struct.std::__1::pair.172"* %275 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %278, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i64 0, i64 0), i64 5, i1 false) #11
  %279 = getelementptr inbounds i8, i8* %278, i64 5
  store i8 0, i8* %279, align 1
  %280 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 31, i32 1
  store i32 31, i32* %280, align 8
  %281 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 32
  %282 = bitcast %"struct.std::__1::pair.172"* %281 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %283 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %282, i64 0, i32 1, i32 0
  store i8 3, i8* %283, align 1
  %284 = bitcast %"struct.std::__1::pair.172"* %281 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %284, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i64 0, i64 0), i64 3, i1 false) #11
  %285 = getelementptr inbounds i8, i8* %284, i64 3
  store i8 0, i8* %285, align 1
  %286 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 32, i32 1
  store i32 32, i32* %286, align 8
  %287 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 33
  %288 = bitcast %"struct.std::__1::pair.172"* %287 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %289 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %288, i64 0, i32 1, i32 0
  store i8 5, i8* %289, align 1
  %290 = bitcast %"struct.std::__1::pair.172"* %287 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %290, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0), i64 5, i1 false) #11
  %291 = getelementptr inbounds i8, i8* %290, i64 5
  store i8 0, i8* %291, align 1
  %292 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 33, i32 1
  store i32 33, i32* %292, align 8
  %293 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 34
  %294 = bitcast %"struct.std::__1::pair.172"* %293 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %295 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %294, i64 0, i32 1, i32 0
  store i8 5, i8* %295, align 1
  %296 = bitcast %"struct.std::__1::pair.172"* %293 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %296, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0), i64 5, i1 false) #11
  %297 = getelementptr inbounds i8, i8* %296, i64 5
  store i8 0, i8* %297, align 1
  %298 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 34, i32 1
  store i32 34, i32* %298, align 8
  %299 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 35
  %300 = bitcast %"struct.std::__1::pair.172"* %299 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %301 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %300, i64 0, i32 1, i32 0
  store i8 6, i8* %301, align 1
  %302 = bitcast %"struct.std::__1::pair.172"* %299 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %302, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i64 0, i64 0), i64 6, i1 false) #11
  %303 = getelementptr inbounds i8, i8* %302, i64 6
  store i8 0, i8* %303, align 2
  %304 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 35, i32 1
  store i32 35, i32* %304, align 8
  %305 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 36
  %306 = bitcast %"struct.std::__1::pair.172"* %305 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %307 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %306, i64 0, i32 1, i32 0
  store i8 16, i8* %307, align 1
  %308 = bitcast %"struct.std::__1::pair.172"* %305 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %308, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i64 16, i1 false) #11
  %309 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 36, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %310 = bitcast i64* %309 to i8*
  store i8 0, i8* %310, align 8
  %311 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 36, i32 1
  store i32 36, i32* %311, align 8
  %312 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 37
  %313 = bitcast %"struct.std::__1::pair.172"* %312 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %314 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %313, i64 0, i32 1, i32 0
  store i8 11, i8* %314, align 1
  %315 = bitcast %"struct.std::__1::pair.172"* %312 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %315, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.44, i64 0, i64 0), i64 11, i1 false) #11
  %316 = getelementptr inbounds i8, i8* %315, i64 11
  store i8 0, i8* %316, align 1
  %317 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 37, i32 1
  store i32 37, i32* %317, align 8
  %318 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 38
  %319 = bitcast %"struct.std::__1::pair.172"* %318 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %320 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %319, i64 0, i32 1, i32 0
  store i8 14, i8* %320, align 1
  %321 = bitcast %"struct.std::__1::pair.172"* %318 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %321, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i64 0, i64 0), i64 14, i1 false) #11
  %322 = getelementptr inbounds i8, i8* %321, i64 14
  store i8 0, i8* %322, align 2
  %323 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 38, i32 1
  store i32 38, i32* %323, align 8
  %324 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 39
  %325 = bitcast %"struct.std::__1::pair.172"* %324 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %326 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %325, i64 0, i32 1, i32 0
  store i8 11, i8* %326, align 1
  %327 = bitcast %"struct.std::__1::pair.172"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %327, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i64 0, i64 0), i64 11, i1 false) #11
  %328 = getelementptr inbounds i8, i8* %327, i64 11
  store i8 0, i8* %328, align 1
  %329 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 39, i32 1
  store i32 39, i32* %329, align 8
  %330 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 40
  %331 = bitcast %"struct.std::__1::pair.172"* %330 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %331, i64 0, i32 1, i32 0
  store i8 7, i8* %332, align 1
  %333 = bitcast %"struct.std::__1::pair.172"* %330 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %333, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i64 0, i64 0), i64 7, i1 false) #11
  %334 = getelementptr inbounds i8, i8* %333, i64 7
  store i8 0, i8* %334, align 1
  %335 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 40, i32 1
  store i32 40, i32* %335, align 8
  %336 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 41
  %337 = bitcast %"struct.std::__1::pair.172"* %336 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %338 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %337, i64 0, i32 1, i32 0
  store i8 5, i8* %338, align 1
  %339 = bitcast %"struct.std::__1::pair.172"* %336 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %339, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0), i64 5, i1 false) #11
  %340 = getelementptr inbounds i8, i8* %339, i64 5
  store i8 0, i8* %340, align 1
  %341 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 41, i32 1
  store i32 41, i32* %341, align 8
  %342 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 42
  %343 = bitcast %"struct.std::__1::pair.172"* %342 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %344 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %343, i64 0, i32 1, i32 0
  store i8 5, i8* %344, align 1
  %345 = bitcast %"struct.std::__1::pair.172"* %342 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %345, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0), i64 5, i1 false) #11
  %346 = getelementptr inbounds i8, i8* %345, i64 5
  store i8 0, i8* %346, align 1
  %347 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 42, i32 1
  store i32 42, i32* %347, align 8
  %348 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 43
  %349 = bitcast %"struct.std::__1::pair.172"* %348 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %350 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %349, i64 0, i32 1, i32 0
  store i8 5, i8* %350, align 1
  %351 = bitcast %"struct.std::__1::pair.172"* %348 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %351, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i64 0, i64 0), i64 5, i1 false) #11
  %352 = getelementptr inbounds i8, i8* %351, i64 5
  store i8 0, i8* %352, align 1
  %353 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 43, i32 1
  store i32 43, i32* %353, align 8
  %354 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 44
  %355 = bitcast %"struct.std::__1::pair.172"* %354 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %356 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %355, i64 0, i32 1, i32 0
  store i8 6, i8* %356, align 1
  %357 = bitcast %"struct.std::__1::pair.172"* %354 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %357, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0), i64 6, i1 false) #11
  %358 = getelementptr inbounds i8, i8* %357, i64 6
  store i8 0, i8* %358, align 2
  %359 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 44, i32 1
  store i32 44, i32* %359, align 8
  %360 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 45
  %361 = bitcast %"struct.std::__1::pair.172"* %360 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %362 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %361, i64 0, i32 1, i32 0
  store i8 13, i8* %362, align 1
  %363 = bitcast %"struct.std::__1::pair.172"* %360 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %363, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i64 0, i64 0), i64 13, i1 false) #11
  %364 = getelementptr inbounds i8, i8* %363, i64 13
  store i8 0, i8* %364, align 1
  %365 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 45, i32 1
  store i32 45, i32* %365, align 8
  %366 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 46
  %367 = bitcast %"struct.std::__1::pair.172"* %366 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %368 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %367, i64 0, i32 1, i32 0
  store i8 8, i8* %368, align 1
  %369 = bitcast %"struct.std::__1::pair.172"* %366 to i64*
  store i64 7953753128836490604, i64* %369, align 8
  %370 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 46, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %371 = bitcast i64* %370 to i8*
  store i8 0, i8* %371, align 8
  %372 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 46, i32 1
  store i32 46, i32* %372, align 8
  %373 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 47
  %374 = bitcast %"struct.std::__1::pair.172"* %373 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %375 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %374, i64 0, i32 1, i32 0
  store i8 4, i8* %375, align 1
  %376 = bitcast %"struct.std::__1::pair.172"* %373 to i8*
  %377 = bitcast %"struct.std::__1::pair.172"* %373 to i32*
  store i32 845639532, i32* %377, align 8
  %378 = getelementptr inbounds i8, i8* %376, i64 4
  store i8 0, i8* %378, align 4
  %379 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 47, i32 1
  store i32 47, i32* %379, align 8
  %380 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 48
  %381 = bitcast %"struct.std::__1::pair.172"* %380 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %382 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %381, i64 0, i32 1, i32 0
  store i8 3, i8* %382, align 1
  %383 = bitcast %"struct.std::__1::pair.172"* %380 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %383, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i64 3, i1 false) #11
  %384 = getelementptr inbounds i8, i8* %383, i64 3
  store i8 0, i8* %384, align 1
  %385 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 48, i32 1
  store i32 48, i32* %385, align 8
  %386 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 49
  %387 = bitcast %"struct.std::__1::pair.172"* %386 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %388 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %387, i64 0, i32 1, i32 0
  store i8 13, i8* %388, align 1
  %389 = bitcast %"struct.std::__1::pair.172"* %386 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %389, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i64 0, i64 0), i64 13, i1 false) #11
  %390 = getelementptr inbounds i8, i8* %389, i64 13
  store i8 0, i8* %390, align 1
  %391 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 49, i32 1
  store i32 49, i32* %391, align 8
  %392 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 50
  %393 = bitcast %"struct.std::__1::pair.172"* %392 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %394 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %393, i64 0, i32 1, i32 0
  store i8 14, i8* %394, align 1
  %395 = bitcast %"struct.std::__1::pair.172"* %392 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %395, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.57, i64 0, i64 0), i64 14, i1 false) #11
  %396 = getelementptr inbounds i8, i8* %395, i64 14
  store i8 0, i8* %396, align 2
  %397 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 50, i32 1
  store i32 50, i32* %397, align 8
  %398 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 51
  %399 = bitcast %"struct.std::__1::pair.172"* %398 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %400 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %399, i64 0, i32 1, i32 0
  store i8 13, i8* %400, align 1
  %401 = bitcast %"struct.std::__1::pair.172"* %398 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %401, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58, i64 0, i64 0), i64 13, i1 false) #11
  %402 = getelementptr inbounds i8, i8* %401, i64 13
  store i8 0, i8* %402, align 1
  %403 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 51, i32 1
  store i32 51, i32* %403, align 8
  %404 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 52
  %405 = bitcast %"struct.std::__1::pair.172"* %404 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %406 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %405, i64 0, i32 1, i32 0
  store i8 3, i8* %406, align 1
  %407 = bitcast %"struct.std::__1::pair.172"* %404 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %407, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.59, i64 0, i64 0), i64 3, i1 false) #11
  %408 = getelementptr inbounds i8, i8* %407, i64 3
  store i8 0, i8* %408, align 1
  %409 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 52, i32 1
  store i32 52, i32* %409, align 8
  %410 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 53
  %411 = bitcast %"struct.std::__1::pair.172"* %410 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %412 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %411, i64 0, i32 1, i32 0
  store i8 3, i8* %412, align 1
  %413 = bitcast %"struct.std::__1::pair.172"* %410 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %413, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.60, i64 0, i64 0), i64 3, i1 false) #11
  %414 = getelementptr inbounds i8, i8* %413, i64 3
  store i8 0, i8* %414, align 1
  %415 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 53, i32 1
  store i32 53, i32* %415, align 8
  %416 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 54
  %417 = bitcast %"struct.std::__1::pair.172"* %416 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %418 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %417, i64 0, i32 1, i32 0
  store i8 3, i8* %418, align 1
  %419 = bitcast %"struct.std::__1::pair.172"* %416 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %419, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i64 0, i64 0), i64 3, i1 false) #11
  %420 = getelementptr inbounds i8, i8* %419, i64 3
  store i8 0, i8* %420, align 1
  %421 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 54, i32 1
  store i32 54, i32* %421, align 8
  %422 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 55
  %423 = bitcast %"struct.std::__1::pair.172"* %422 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %424 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %423, i64 0, i32 1, i32 0
  store i8 4, i8* %424, align 1
  %425 = bitcast %"struct.std::__1::pair.172"* %422 to i8*
  %426 = bitcast %"struct.std::__1::pair.172"* %422 to i32*
  store i32 1717858157, i32* %426, align 8
  %427 = getelementptr inbounds i8, i8* %425, i64 4
  store i8 0, i8* %427, align 4
  %428 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 55, i32 1
  store i32 55, i32* %428, align 8
  %429 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 56
  %430 = bitcast %"struct.std::__1::pair.172"* %429 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %431 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %430, i64 0, i32 1, i32 0
  store i8 3, i8* %431, align 1
  %432 = bitcast %"struct.std::__1::pair.172"* %429 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %432, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.63, i64 0, i64 0), i64 3, i1 false) #11
  %433 = getelementptr inbounds i8, i8* %432, i64 3
  store i8 0, i8* %433, align 1
  %434 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 56, i32 1
  store i32 56, i32* %434, align 8
  %435 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 57
  %436 = bitcast %"struct.std::__1::pair.172"* %435 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %437 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %436, i64 0, i32 1, i32 0
  store i8 9, i8* %437, align 1
  %438 = bitcast %"struct.std::__1::pair.172"* %435 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %438, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i64 0, i64 0), i64 9, i1 false) #11
  %439 = getelementptr inbounds i8, i8* %438, i64 9
  store i8 0, i8* %439, align 1
  %440 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 57, i32 1
  store i32 57, i32* %440, align 8
  %441 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 58
  %442 = bitcast %"struct.std::__1::pair.172"* %441 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %443 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %442, i64 0, i32 1, i32 0
  store i8 8, i8* %443, align 1
  %444 = bitcast %"struct.std::__1::pair.172"* %441 to i64*
  store i64 7809652358194163566, i64* %444, align 8
  %445 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 58, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %446 = bitcast i64* %445 to i8*
  store i8 0, i8* %446, align 8
  %447 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 58, i32 1
  store i32 58, i32* %447, align 8
  %448 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 59
  %449 = bitcast %"struct.std::__1::pair.172"* %448 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %450 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %449, i64 0, i32 1, i32 0
  store i8 3, i8* %450, align 1
  %451 = bitcast %"struct.std::__1::pair.172"* %448 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %451, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i64 0, i64 0), i64 3, i1 false) #11
  %452 = getelementptr inbounds i8, i8* %451, i64 3
  store i8 0, i8* %452, align 1
  %453 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 59, i32 1
  store i32 59, i32* %453, align 8
  %454 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 60
  %455 = bitcast %"struct.std::__1::pair.172"* %454 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %456 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %455, i64 0, i32 1, i32 0
  store i8 12, i8* %456, align 1
  %457 = bitcast %"struct.std::__1::pair.172"* %454 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %457, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.67, i64 0, i64 0), i64 12, i1 false) #11
  %458 = getelementptr inbounds i8, i8* %457, i64 12
  store i8 0, i8* %458, align 4
  %459 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 60, i32 1
  store i32 60, i32* %459, align 8
  %460 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 61
  %461 = bitcast %"struct.std::__1::pair.172"* %460 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %462 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %461, i64 0, i32 1, i32 0
  store i8 14, i8* %462, align 1
  %463 = bitcast %"struct.std::__1::pair.172"* %460 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %463, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.68, i64 0, i64 0), i64 14, i1 false) #11
  %464 = getelementptr inbounds i8, i8* %463, i64 14
  store i8 0, i8* %464, align 2
  %465 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 61, i32 1
  store i32 61, i32* %465, align 8
  %466 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 62
  %467 = bitcast %"struct.std::__1::pair.172"* %466 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %468 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %467, i64 0, i32 1, i32 0
  store i8 12, i8* %468, align 1
  %469 = bitcast %"struct.std::__1::pair.172"* %466 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %469, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.69, i64 0, i64 0), i64 12, i1 false) #11
  %470 = getelementptr inbounds i8, i8* %469, i64 12
  store i8 0, i8* %470, align 4
  %471 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 62, i32 1
  store i32 62, i32* %471, align 8
  %472 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 63
  %473 = bitcast %"struct.std::__1::pair.172"* %472 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %474 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %473, i64 0, i32 1, i32 0
  store i8 13, i8* %474, align 1
  %475 = bitcast %"struct.std::__1::pair.172"* %472 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %475, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.70, i64 0, i64 0), i64 13, i1 false) #11
  %476 = getelementptr inbounds i8, i8* %475, i64 13
  store i8 0, i8* %476, align 1
  %477 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 63, i32 1
  store i32 63, i32* %477, align 8
  %478 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 64
  %479 = bitcast %"struct.std::__1::pair.172"* %478 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %480 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %479, i64 0, i32 1, i32 0
  store i8 12, i8* %480, align 1
  %481 = bitcast %"struct.std::__1::pair.172"* %478 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %481, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.71, i64 0, i64 0), i64 12, i1 false) #11
  %482 = getelementptr inbounds i8, i8* %481, i64 12
  store i8 0, i8* %482, align 4
  %483 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 64, i32 1
  store i32 64, i32* %483, align 8
  %484 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 65
  %485 = bitcast %"struct.std::__1::pair.172"* %484 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %486 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %485, i64 0, i32 1, i32 0
  store i8 13, i8* %486, align 1
  %487 = bitcast %"struct.std::__1::pair.172"* %484 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %487, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.72, i64 0, i64 0), i64 13, i1 false) #11
  %488 = getelementptr inbounds i8, i8* %487, i64 13
  store i8 0, i8* %488, align 1
  %489 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 65, i32 1
  store i32 65, i32* %489, align 8
  %490 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 66
  %491 = bitcast %"struct.std::__1::pair.172"* %490 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %492 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %491, i64 0, i32 1, i32 0
  store i8 12, i8* %492, align 1
  %493 = bitcast %"struct.std::__1::pair.172"* %490 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %493, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.73, i64 0, i64 0), i64 12, i1 false) #11
  %494 = getelementptr inbounds i8, i8* %493, i64 12
  store i8 0, i8* %494, align 4
  %495 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 66, i32 1
  store i32 66, i32* %495, align 8
  %496 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 67
  %497 = bitcast %"struct.std::__1::pair.172"* %496 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %498 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %497, i64 0, i32 1, i32 0
  store i8 3, i8* %498, align 1
  %499 = bitcast %"struct.std::__1::pair.172"* %496 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %499, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64 3, i1 false) #11
  %500 = getelementptr inbounds i8, i8* %499, i64 3
  store i8 0, i8* %500, align 1
  %501 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 67, i32 1
  store i32 67, i32* %501, align 8
  %502 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 68
  %503 = bitcast %"struct.std::__1::pair.172"* %502 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %504 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %503, i64 0, i32 1, i32 0
  store i8 7, i8* %504, align 1
  %505 = bitcast %"struct.std::__1::pair.172"* %502 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %505, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i64 0, i64 0), i64 7, i1 false) #11
  %506 = getelementptr inbounds i8, i8* %505, i64 7
  store i8 0, i8* %506, align 1
  %507 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 68, i32 1
  store i32 68, i32* %507, align 8
  %508 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 69
  %509 = bitcast %"struct.std::__1::pair.172"* %508 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %510 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %509, i64 0, i32 1, i32 0
  store i8 7, i8* %510, align 1
  %511 = bitcast %"struct.std::__1::pair.172"* %508 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %511, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.76, i64 0, i64 0), i64 7, i1 false) #11
  %512 = getelementptr inbounds i8, i8* %511, i64 7
  store i8 0, i8* %512, align 1
  %513 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 69, i32 1
  store i32 69, i32* %513, align 8
  %514 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 70
  %515 = bitcast %"struct.std::__1::pair.172"* %514 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %516 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %515, i64 0, i32 1, i32 0
  store i8 7, i8* %516, align 1
  %517 = bitcast %"struct.std::__1::pair.172"* %514 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %517, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i64 7, i1 false) #11
  %518 = getelementptr inbounds i8, i8* %517, i64 7
  store i8 0, i8* %518, align 1
  %519 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 70, i32 1
  store i32 70, i32* %519, align 8
  %520 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 71
  %521 = bitcast %"struct.std::__1::pair.172"* %520 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %522 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %521, i64 0, i32 1, i32 0
  store i8 9, i8* %522, align 1
  %523 = bitcast %"struct.std::__1::pair.172"* %520 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %523, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.78, i64 0, i64 0), i64 9, i1 false) #11
  %524 = getelementptr inbounds i8, i8* %523, i64 9
  store i8 0, i8* %524, align 1
  %525 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 71, i32 1
  store i32 71, i32* %525, align 8
  %526 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 72
  %527 = bitcast %"struct.std::__1::pair.172"* %526 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %528 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %527, i64 0, i32 1, i32 0
  store i8 5, i8* %528, align 1
  %529 = bitcast %"struct.std::__1::pair.172"* %526 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %529, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0), i64 5, i1 false) #11
  %530 = getelementptr inbounds i8, i8* %529, i64 5
  store i8 0, i8* %530, align 1
  %531 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 72, i32 1
  store i32 72, i32* %531, align 8
  %532 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 73
  %533 = bitcast %"struct.std::__1::pair.172"* %532 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %534 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %533, i64 0, i32 1, i32 0
  store i8 6, i8* %534, align 1
  %535 = bitcast %"struct.std::__1::pair.172"* %532 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %535, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i64 0, i64 0), i64 6, i1 false) #11
  %536 = getelementptr inbounds i8, i8* %535, i64 6
  store i8 0, i8* %536, align 2
  %537 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 73, i32 1
  store i32 73, i32* %537, align 8
  %538 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 74
  %539 = bitcast %"struct.std::__1::pair.172"* %538 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %540 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %539, i64 0, i32 1, i32 0
  store i8 8, i8* %540, align 1
  %541 = bitcast %"struct.std::__1::pair.172"* %538 to i64*
  store i64 7310575239353885043, i64* %541, align 8
  %542 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 74, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %543 = bitcast i64* %542 to i8*
  store i8 0, i8* %543, align 8
  %544 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 74, i32 1
  store i32 74, i32* %544, align 8
  %545 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 75
  %546 = bitcast %"struct.std::__1::pair.172"* %545 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %547 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %546, i64 0, i32 1, i32 0
  store i8 4, i8* %547, align 1
  %548 = bitcast %"struct.std::__1::pair.172"* %545 to i8*
  %549 = bitcast %"struct.std::__1::pair.172"* %545 to i32*
  store i32 1852270963, i32* %549, align 8
  %550 = getelementptr inbounds i8, i8* %548, i64 4
  store i8 0, i8* %550, align 4
  %551 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 75, i32 1
  store i32 75, i32* %551, align 8
  %552 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 76
  %553 = bitcast %"struct.std::__1::pair.172"* %552 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %554 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %553, i64 0, i32 1, i32 0
  store i8 4, i8* %554, align 1
  %555 = bitcast %"struct.std::__1::pair.172"* %552 to i8*
  %556 = bitcast %"struct.std::__1::pair.172"* %552 to i32*
  store i32 1752066419, i32* %556, align 8
  %557 = getelementptr inbounds i8, i8* %555, i64 4
  store i8 0, i8* %557, align 4
  %558 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 76, i32 1
  store i32 76, i32* %558, align 8
  %559 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 77
  %560 = bitcast %"struct.std::__1::pair.172"* %559 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %561 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %560, i64 0, i32 1, i32 0
  store i8 3, i8* %561, align 1
  %562 = bitcast %"struct.std::__1::pair.172"* %559 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %562, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.84, i64 0, i64 0), i64 3, i1 false) #11
  %563 = getelementptr inbounds i8, i8* %562, i64 3
  store i8 0, i8* %563, align 1
  %564 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 77, i32 1
  store i32 77, i32* %564, align 8
  %565 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 78
  %566 = bitcast %"struct.std::__1::pair.172"* %565 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %567 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %566, i64 0, i32 1, i32 0
  store i8 10, i8* %567, align 1
  %568 = bitcast %"struct.std::__1::pair.172"* %565 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %568, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i64 0, i64 0), i64 10, i1 false) #11
  %569 = getelementptr inbounds i8, i8* %568, i64 10
  store i8 0, i8* %569, align 2
  %570 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 78, i32 1
  store i32 78, i32* %570, align 8
  %571 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 79
  %572 = bitcast %"struct.std::__1::pair.172"* %571 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %573 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %572, i64 0, i32 1, i32 0
  store i8 4, i8* %573, align 1
  %574 = bitcast %"struct.std::__1::pair.172"* %571 to i8*
  %575 = bitcast %"struct.std::__1::pair.172"* %571 to i32*
  store i32 1953657203, i32* %575, align 8
  %576 = getelementptr inbounds i8, i8* %574, i64 4
  store i8 0, i8* %576, align 4
  %577 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 79, i32 1
  store i32 79, i32* %577, align 8
  %578 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 80
  %579 = bitcast %"struct.std::__1::pair.172"* %578 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %580 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %579, i64 0, i32 1, i32 0
  store i8 4, i8* %580, align 1
  %581 = bitcast %"struct.std::__1::pair.172"* %578 to i8*
  %582 = bitcast %"struct.std::__1::pair.172"* %578 to i32*
  store i32 1885697139, i32* %582, align 8
  %583 = getelementptr inbounds i8, i8* %581, i64 4
  store i8 0, i8* %583, align 4
  %584 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 80, i32 1
  store i32 80, i32* %584, align 8
  %585 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 81
  %586 = bitcast %"struct.std::__1::pair.172"* %585 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %587 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %586, i64 0, i32 1, i32 0
  store i8 11, i8* %587, align 1
  %588 = bitcast %"struct.std::__1::pair.172"* %585 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %588, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i64 0, i64 0), i64 11, i1 false) #11
  %589 = getelementptr inbounds i8, i8* %588, i64 11
  store i8 0, i8* %589, align 1
  %590 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 81, i32 1
  store i32 81, i32* %590, align 8
  %591 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 82
  %592 = bitcast %"struct.std::__1::pair.172"* %591 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %593 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %592, i64 0, i32 1, i32 0
  store i8 4, i8* %593, align 1
  %594 = bitcast %"struct.std::__1::pair.172"* %591 to i8*
  %595 = bitcast %"struct.std::__1::pair.172"* %591 to i32*
  store i32 1752064372, i32* %595, align 8
  %596 = getelementptr inbounds i8, i8* %594, i64 4
  store i8 0, i8* %596, align 4
  %597 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 82, i32 1
  store i32 82, i32* %597, align 8
  %598 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 83
  %599 = bitcast %"struct.std::__1::pair.172"* %598 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %600 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %599, i64 0, i32 1, i32 0
  store i8 3, i8* %600, align 1
  %601 = bitcast %"struct.std::__1::pair.172"* %598 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %601, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0), i64 3, i1 false) #11
  %602 = getelementptr inbounds i8, i8* %601, i64 3
  store i8 0, i8* %602, align 1
  %603 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 83, i32 1
  store i32 83, i32* %603, align 8
  %604 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 84
  %605 = bitcast %"struct.std::__1::pair.172"* %604 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %606 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %605, i64 0, i32 1, i32 0
  store i8 9, i8* %606, align 1
  %607 = bitcast %"struct.std::__1::pair.172"* %604 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %607, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.91, i64 0, i64 0), i64 9, i1 false) #11
  %608 = getelementptr inbounds i8, i8* %607, i64 9
  store i8 0, i8* %608, align 1
  %609 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 84, i32 1
  store i32 84, i32* %609, align 8
  %610 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 85
  %611 = bitcast %"struct.std::__1::pair.172"* %610 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %612 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %611, i64 0, i32 1, i32 0
  store i8 5, i8* %612, align 1
  %613 = bitcast %"struct.std::__1::pair.172"* %610 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %613, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0), i64 5, i1 false) #11
  %614 = getelementptr inbounds i8, i8* %613, i64 5
  store i8 0, i8* %614, align 1
  %615 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 85, i32 1
  store i32 85, i32* %615, align 8
  %616 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 86
  %617 = bitcast %"struct.std::__1::pair.172"* %616 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %618 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %617, i64 0, i32 1, i32 0
  store i8 15, i8* %618, align 1
  %619 = bitcast %"struct.std::__1::pair.172"* %616 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %619, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.93, i64 0, i64 0), i64 15, i1 false) #11
  %620 = getelementptr inbounds i8, i8* %619, i64 15
  store i8 0, i8* %620, align 1
  %621 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 86, i32 1
  store i32 86, i32* %621, align 8
  %622 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 87
  %623 = bitcast %"struct.std::__1::pair.172"* %622 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %624 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %623, i64 0, i32 1, i32 0
  store i8 16, i8* %624, align 1
  %625 = bitcast %"struct.std::__1::pair.172"* %622 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %625, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.94, i64 0, i64 0), i64 16, i1 false) #11
  %626 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 87, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %627 = bitcast i64* %626 to i8*
  store i8 0, i8* %627, align 8
  %628 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 87, i32 1
  store i32 87, i32* %628, align 8
  %629 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 88
  %630 = bitcast %"struct.std::__1::pair.172"* %629 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %631 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %630, i64 0, i32 1, i32 0
  store i8 14, i8* %631, align 1
  %632 = bitcast %"struct.std::__1::pair.172"* %629 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %632, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i64 0, i64 0), i64 14, i1 false) #11
  %633 = getelementptr inbounds i8, i8* %632, i64 14
  store i8 0, i8* %633, align 2
  %634 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 88, i32 1
  store i32 88, i32* %634, align 8
  %635 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 89
  %636 = bitcast %"struct.std::__1::pair.172"* %635 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %637 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %636, i64 0, i32 1, i32 0
  store i8 15, i8* %637, align 1
  %638 = bitcast %"struct.std::__1::pair.172"* %635 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %638, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.96, i64 0, i64 0), i64 15, i1 false) #11
  %639 = getelementptr inbounds i8, i8* %638, i64 15
  store i8 0, i8* %639, align 1
  %640 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 89, i32 1
  store i32 89, i32* %640, align 8
  %641 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 90
  %642 = bitcast %"struct.std::__1::pair.172"* %641 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %643 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %642, i64 0, i32 1, i32 0
  store i8 14, i8* %643, align 1
  %644 = bitcast %"struct.std::__1::pair.172"* %641 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %644, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.97, i64 0, i64 0), i64 14, i1 false) #11
  %645 = getelementptr inbounds i8, i8* %644, i64 14
  store i8 0, i8* %645, align 2
  %646 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 90, i32 1
  store i32 90, i32* %646, align 8
  %647 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 91
  %648 = bitcast %"struct.std::__1::pair.172"* %647 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %649 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %648, i64 0, i32 1, i32 0
  store i8 15, i8* %649, align 1
  %650 = bitcast %"struct.std::__1::pair.172"* %647 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %650, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.98, i64 0, i64 0), i64 15, i1 false) #11
  %651 = getelementptr inbounds i8, i8* %650, i64 15
  store i8 0, i8* %651, align 1
  %652 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 91, i32 1
  store i32 91, i32* %652, align 8
  %653 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 92
  %654 = bitcast %"struct.std::__1::pair.172"* %653 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %655 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %654, i64 0, i32 1, i32 0
  store i8 14, i8* %655, align 1
  %656 = bitcast %"struct.std::__1::pair.172"* %653 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %656, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.99, i64 0, i64 0), i64 14, i1 false) #11
  %657 = getelementptr inbounds i8, i8* %656, i64 14
  store i8 0, i8* %657, align 2
  %658 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 92, i32 1
  store i32 92, i32* %658, align 8
  %659 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 93
  %660 = bitcast %"struct.std::__1::pair.172"* %659 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %661 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %660, i64 0, i32 1, i32 0
  store i8 8, i8* %661, align 1
  %662 = bitcast %"struct.std::__1::pair.172"* %659 to i64*
  store i64 7815273010850459253, i64* %662, align 8
  %663 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 93, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %664 = bitcast i64* %663 to i8*
  store i8 0, i8* %664, align 8
  %665 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 93, i32 1
  store i32 93, i32* %665, align 8
  %666 = bitcast i8* %78 to %"class.std::__1::__hash_table.148"*
  %667 = getelementptr inbounds i8, i8* %78, i64 32
  %668 = bitcast i8* %667 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %668, align 4
  %669 = getelementptr inbounds [94 x %"struct.std::__1::pair.172"], [94 x %"struct.std::__1::pair.172"]* %9, i64 0, i64 94
  br label %670

670:                                              ; preds = %670, %77
  %671 = phi %"struct.std::__1::pair.172"* [ %674, %670 ], [ %80, %77 ]
  %672 = getelementptr inbounds %"struct.std::__1::pair.172", %"struct.std::__1::pair.172"* %671, i64 0, i32 0
  %673 = call { %"struct.std::__1::__hash_node_base.152"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_13IntrinsicKindEEENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS3_JRKNS_4pairIKS3_S4_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.148"* nonnull %666, %"class.SkSL::String"* dereferenceable(24) %672, %"struct.std::__1::pair.172"* dereferenceable(32) %671) #11
  %674 = getelementptr inbounds %"struct.std::__1::pair.172", %"struct.std::__1::pair.172"* %671, i64 1
  %675 = icmp eq %"struct.std::__1::pair.172"* %674, %669
  br i1 %675, label %676, label %670

676:                                              ; preds = %670, %686
  %677 = phi %"struct.std::__1::pair.172"* [ %678, %686 ], [ %669, %670 ]
  %678 = getelementptr inbounds %"struct.std::__1::pair.172", %"struct.std::__1::pair.172"* %677, i64 -1
  %679 = bitcast %"struct.std::__1::pair.172"* %678 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %680 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %679, i64 0, i32 1, i32 0
  %681 = load i8, i8* %680, align 1
  %682 = icmp slt i8 %681, 0
  br i1 %682, label %683, label %686

683:                                              ; preds = %676
  %684 = getelementptr inbounds %"struct.std::__1::pair.172", %"struct.std::__1::pair.172"* %678, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %685 = load i8*, i8** %684, align 8
  call void @_ZdlPv(i8* %685) #13
  br label %686

686:                                              ; preds = %683, %676
  %687 = icmp eq %"struct.std::__1::pair.172"* %678, %80
  br i1 %687, label %688, label %676

688:                                              ; preds = %686
  call void @llvm.lifetime.end.p0i8(i64 3008, i8* nonnull %79) #11
  store i8* %78, i8** bitcast (%"class.std::__1::unordered_map"** @_ZZN4SkSLL18identify_intrinsicERKNS_6StringEE14kAllIntrinsics to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN4SkSLL18identify_intrinsicERKNS_6StringEE14kAllIntrinsics) #11
  br label %689

689:                                              ; preds = %688, %74, %69
  %690 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZZN4SkSLL18identify_intrinsicERKNS_6StringEE14kAllIntrinsics, align 8
  %691 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %690, i64 0, i32 0
  %692 = call %"struct.std::__1::__hash_node_base.152"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_13IntrinsicKindEEENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.148"* %691, %"class.SkSL::String"* nonnull dereferenceable(24) %11) #11
  %693 = icmp eq %"struct.std::__1::__hash_node_base.152"* %692, null
  br i1 %693, label %698, label %694

694:                                              ; preds = %689
  %695 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %692, i64 5
  %696 = bitcast %"struct.std::__1::__hash_node_base.152"* %695 to i32*
  %697 = load i32, i32* %696, align 8
  br label %698

698:                                              ; preds = %689, %694
  %699 = phi i32 [ -1, %689 ], [ %697, %694 ]
  %700 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %701 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %700, i64 0, i32 1, i32 0
  %702 = load i8, i8* %701, align 1
  %703 = icmp slt i8 %702, 0
  br i1 %703, label %704, label %707

704:                                              ; preds = %698
  %705 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %706 = load i8*, i8** %705, align 8
  call void @_ZdlPv(i8* %706) #13
  br label %707

707:                                              ; preds = %698, %704
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #11
  br label %708

708:                                              ; preds = %8, %707
  %709 = phi i32 [ %699, %707 ], [ -1, %8 ]
  store i32 %709, i32* %44, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqEPKc(%"struct.SkSL::StringFragment"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::FunctionDeclaration"* @_ZN4SkSL19FunctionDeclaration7ConvertERKNS_7ContextERNS_11SymbolTableEiPKNS_9ModifiersENS_14StringFragmentENSt3__16vectorINSA_10unique_ptrINS_8VariableENSA_14default_deleteISD_EEEENSA_9allocatorISG_EEEEPKNS_4TypeEb(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::SymbolTable"* dereferenceable(104), i32, %"struct.SkSL::Modifiers"*, i8*, i64, %"class.std::__1::vector.115"* nocapture readonly, %"class.SkSL::Type"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.std::__1::unique_ptr.90", align 8
  %11 = alloca %"class.std::__1::vector.23", align 16
  %12 = alloca %"class.std::__1::unique_ptr.90", align 8
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %"struct.SkSL::StringFragment"*
  %15 = alloca <2 x i64>, align 16
  %16 = bitcast <2 x i64>* %15 to %"struct.SkSL::StringFragment"*
  %17 = alloca %"class.std::__1::vector.198", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.std::__1::vector.23", align 8
  %22 = alloca %"class.SkSL::FunctionDeclaration", align 8
  %23 = alloca %"class.std::__1::vector.23", align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = alloca %"class.SkSL::String", align 8
  %26 = alloca %"class.SkSL::String", align 8
  %27 = alloca %"class.SkSL::String", align 8
  %28 = alloca %"class.SkSL::String", align 8
  %29 = alloca %"class.SkSL::String", align 8
  %30 = alloca %"class.SkSL::String", align 8
  %31 = alloca %"class.SkSL::String", align 8
  %32 = alloca %"class.SkSL::String", align 8
  %33 = alloca %"class.SkSL::String", align 8
  %34 = alloca %"class.SkSL::String", align 8
  %35 = alloca <2 x i64>, align 16
  %36 = bitcast <2 x i64>* %35 to %"struct.SkSL::StringFragment"*
  %37 = alloca <2 x i64>, align 16
  %38 = bitcast <2 x i64>* %37 to %"struct.SkSL::StringFragment"*
  %39 = alloca <2 x i64>, align 16
  %40 = bitcast <2 x i64>* %39 to %"struct.SkSL::StringFragment"*
  %41 = alloca <2 x i64>, align 16
  %42 = bitcast <2 x i64>* %41 to %"struct.SkSL::StringFragment"*
  %43 = alloca <2 x i64>, align 16
  %44 = bitcast <2 x i64>* %43 to %"struct.SkSL::StringFragment"*
  %45 = alloca <2 x i64>, align 16
  %46 = bitcast <2 x i64>* %45 to %"struct.SkSL::StringFragment"*
  %47 = alloca <2 x i64>, align 16
  %48 = bitcast <2 x i64>* %47 to %"struct.SkSL::StringFragment"*
  %49 = alloca <2 x i64>, align 16
  %50 = bitcast <2 x i64>* %49 to %"struct.SkSL::StringFragment"*
  %51 = alloca <2 x i64>, align 16
  %52 = bitcast <2 x i64>* %51 to %"struct.SkSL::StringFragment"*
  %53 = alloca <2 x i64>, align 16
  %54 = bitcast <2 x i64>* %53 to %"struct.SkSL::StringFragment"*
  %55 = alloca <2 x i64>, align 16
  %56 = bitcast <2 x i64>* %55 to %"struct.SkSL::StringFragment"*
  %57 = alloca <2 x i64>, align 16
  %58 = bitcast <2 x i64>* %57 to %"struct.SkSL::StringFragment"*
  %59 = alloca <2 x i64>, align 16
  %60 = bitcast <2 x i64>* %59 to %"struct.SkSL::StringFragment"*
  %61 = alloca <2 x i64>, align 16
  %62 = bitcast <2 x i64>* %61 to %"struct.SkSL::StringFragment"*
  %63 = alloca <2 x i64>, align 16
  %64 = bitcast <2 x i64>* %63 to %"struct.SkSL::StringFragment"*
  %65 = alloca <2 x i64>, align 16
  %66 = bitcast <2 x i64>* %65 to %"struct.SkSL::StringFragment"*
  %67 = alloca <2 x i64>, align 16
  %68 = bitcast <2 x i64>* %67 to %"struct.SkSL::StringFragment"*
  %69 = alloca %"class.SkSL::String", align 8
  %70 = alloca %"class.SkSL::String", align 8
  %71 = alloca %"class.SkSL::String", align 8
  %72 = alloca %"struct.SkSL::Modifiers", align 8
  %73 = alloca %"class.SkSL::String", align 8
  %74 = alloca %"class.SkSL::String", align 8
  %75 = alloca %"class.SkSL::String", align 8
  %76 = alloca %"class.SkSL::String", align 8
  %77 = alloca %"class.SkSL::String", align 8
  %78 = alloca %"class.SkSL::String", align 8
  %79 = alloca %"struct.SkSL::StringFragment", align 8
  %80 = alloca %"class.std::__1::vector.23", align 16
  %81 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %79, i64 0, i32 0
  store i8* %4, i8** %81, align 8
  %82 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %79, i64 0, i32 1
  store i64 %5, i64* %82, align 8
  %83 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqEPKc(%"struct.SkSL::StringFragment"* nonnull %79, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #11
  call void @_ZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEii(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %2, %"struct.SkSL::Modifiers"* dereferenceable(80) %3, i32 832, i32 0) #11
  %84 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %3, i64 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = and i32 %85, 768
  %87 = icmp eq i32 %86, 768
  br i1 %87, label %88, label %91

88:                                               ; preds = %9
  %89 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 1
  %90 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %89, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %90, i32 %2, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.102, i64 0, i64 0)) #11
  br label %1400

91:                                               ; preds = %9
  %92 = bitcast %"class.SkSL::String"* %73 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92)
  %93 = bitcast %"class.SkSL::String"* %76 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93)
  %94 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 1
  %95 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %94, align 8
  %96 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %7, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %161

99:                                               ; preds = %91
  %100 = bitcast %"class.SkSL::String"* %74 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #11
  %101 = bitcast %"class.SkSL::String"* %75 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #11
  %102 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %7, i64 0, i32 18
  %103 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %102, align 8, !noalias !3
  %104 = icmp eq %"class.SkSL::Type"* %103, null
  %105 = select i1 %104, %"class.SkSL::Type"* %7, %"class.SkSL::Type"* %103
  %106 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %105, i64 0, i32 0, i32 1, i32 0
  %107 = load i8*, i8** %106, align 8, !noalias !3
  %108 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %105, i64 0, i32 0, i32 1, i32 1
  %109 = load i64, i64* %108, align 8, !noalias !3
  %110 = icmp ugt i64 %109, -17
  br i1 %110, label %111, label %113

111:                                              ; preds = %99
  %112 = bitcast %"class.SkSL::String"* %75 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %112) #12
  unreachable

113:                                              ; preds = %99
  %114 = icmp ult i64 %109, 23
  br i1 %114, label %123, label %115

115:                                              ; preds = %113
  %116 = add nuw i64 %109, 16
  %117 = and i64 %116, -16
  %118 = call i8* @_Znwm(i64 %117) #13
  %119 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %118, i8** %119, align 8, !alias.scope !3
  %120 = or i64 %117, -9223372036854775808
  %121 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %120, i64* %121, align 8, !alias.scope !3
  %122 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %109, i64* %122, align 8, !alias.scope !3
  br label %128

123:                                              ; preds = %113
  %124 = trunc i64 %109 to i8
  %125 = bitcast %"class.SkSL::String"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  store i8 %124, i8* %126, align 1, !alias.scope !3
  %127 = icmp eq i64 %109, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %123, %115
  %129 = phi i8* [ %118, %115 ], [ %101, %123 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %129, i8* align 1 %107, i64 %109, i1 false) #11
  br label %130

130:                                              ; preds = %128, %123
  %131 = phi i8* [ %101, %123 ], [ %129, %128 ]
  %132 = getelementptr inbounds i8, i8* %131, i64 %109
  store i8 0, i8* %132, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %74, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.103, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %75) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %73, %"class.SkSL::String"* nonnull %74, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.104, i64 0, i64 0)) #11
  %133 = bitcast %"class.SkSL::ErrorReporter"* %95 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %134 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %134, i64 2
  %136 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %135, align 8
  call void %136(%"class.SkSL::ErrorReporter"* %95, i32 %2, %"class.SkSL::String"* nonnull %73) #11
  %137 = bitcast %"class.SkSL::String"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %130
  %142 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  call void @_ZdlPv(i8* %143) #13
  br label %144

144:                                              ; preds = %141, %130
  %145 = bitcast %"class.SkSL::String"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %145, i64 0, i32 1, i32 0
  %147 = load i8, i8* %146, align 1
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %149, label %152

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  call void @_ZdlPv(i8* %151) #13
  br label %152

152:                                              ; preds = %149, %144
  %153 = bitcast %"class.SkSL::String"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %153, i64 0, i32 1, i32 0
  %155 = load i8, i8* %154, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  call void @_ZdlPv(i8* %159) #13
  br label %160

160:                                              ; preds = %157, %152
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #11
  br label %250

161:                                              ; preds = %91
  %162 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 4
  %163 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %162, align 8
  %164 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %163, i64 0, i32 1, i32 19
  %165 = load i8, i8* %164, align 1, !range !6
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %177, label %167

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %163, i64 0, i32 0
  %169 = load i8, i8* %168, align 8
  %170 = add i8 %169, -4
  %171 = icmp ult i8 %170, 3
  br i1 %171, label %172, label %177

172:                                              ; preds = %167
  %173 = call zeroext i1 @_ZNK4SkSL4Type17isOrContainsArrayEv(%"class.SkSL::Type"* %7) #11
  br i1 %173, label %176, label %174

174:                                              ; preds = %172
  %175 = load i32, i32* %96, align 8
  br label %177

176:                                              ; preds = %172
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %95, i32 %2, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.105, i64 0, i64 0)) #11
  br label %250

177:                                              ; preds = %174, %167, %161
  %178 = phi i32 [ %175, %174 ], [ %97, %161 ], [ %97, %167 ]
  %179 = icmp eq i32 %178, 12
  %180 = or i1 %179, %8
  br i1 %180, label %251, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %7, i64 0, i32 6
  %183 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %182, align 8
  %184 = icmp eq %"class.SkSL::Type"* %183, null
  %185 = select i1 %184, %"class.SkSL::Type"* %7, %"class.SkSL::Type"* %183
  %186 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %185, i64 0, i32 3
  %187 = load i32, i32* %186, align 8
  switch i32 %187, label %251 [
    i32 13, label %188
    i32 2, label %188
    i32 5, label %188
    i32 6, label %188
    i32 7, label %188
    i32 14, label %188
    i32 10, label %188
    i32 12, label %188
  ]

188:                                              ; preds = %181, %181, %181, %181, %181, %181, %181, %181
  %189 = bitcast %"class.SkSL::String"* %77 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %189) #11
  %190 = bitcast %"class.SkSL::String"* %78 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %190) #11
  %191 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %7, i64 0, i32 18
  %192 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %191, align 8, !noalias !7
  %193 = icmp eq %"class.SkSL::Type"* %192, null
  %194 = select i1 %193, %"class.SkSL::Type"* %7, %"class.SkSL::Type"* %192
  %195 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %194, i64 0, i32 0, i32 1, i32 0
  %196 = load i8*, i8** %195, align 8, !noalias !7
  %197 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %194, i64 0, i32 0, i32 1, i32 1
  %198 = load i64, i64* %197, align 8, !noalias !7
  %199 = icmp ugt i64 %198, -17
  br i1 %199, label %200, label %202

200:                                              ; preds = %188
  %201 = bitcast %"class.SkSL::String"* %78 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %201) #12
  unreachable

202:                                              ; preds = %188
  %203 = icmp ult i64 %198, 23
  br i1 %203, label %212, label %204

204:                                              ; preds = %202
  %205 = add nuw i64 %198, 16
  %206 = and i64 %205, -16
  %207 = call i8* @_Znwm(i64 %206) #13
  %208 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %207, i8** %208, align 8, !alias.scope !7
  %209 = or i64 %206, -9223372036854775808
  %210 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %209, i64* %210, align 8, !alias.scope !7
  %211 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %198, i64* %211, align 8, !alias.scope !7
  br label %217

212:                                              ; preds = %202
  %213 = trunc i64 %198 to i8
  %214 = bitcast %"class.SkSL::String"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %215 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %214, i64 0, i32 1, i32 0
  store i8 %213, i8* %215, align 1, !alias.scope !7
  %216 = icmp eq i64 %198, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %212, %204
  %218 = phi i8* [ %207, %204 ], [ %190, %212 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %218, i8* align 1 %196, i64 %198, i1 false) #11
  br label %219

219:                                              ; preds = %217, %212
  %220 = phi i8* [ %190, %212 ], [ %218, %217 ]
  %221 = getelementptr inbounds i8, i8* %220, i64 %198
  store i8 0, i8* %221, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %77, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.106, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %78) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %76, %"class.SkSL::String"* nonnull %77, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.104, i64 0, i64 0)) #11
  %222 = bitcast %"class.SkSL::ErrorReporter"* %95 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %223 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %223, i64 2
  %225 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %224, align 8
  call void %225(%"class.SkSL::ErrorReporter"* %95, i32 %2, %"class.SkSL::String"* nonnull %76) #11
  %226 = bitcast %"class.SkSL::String"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %227 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %226, i64 0, i32 1, i32 0
  %228 = load i8, i8* %227, align 1
  %229 = icmp slt i8 %228, 0
  br i1 %229, label %230, label %233

230:                                              ; preds = %219
  %231 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load i8*, i8** %231, align 8
  call void @_ZdlPv(i8* %232) #13
  br label %233

233:                                              ; preds = %230, %219
  %234 = bitcast %"class.SkSL::String"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %234, i64 0, i32 1, i32 0
  %236 = load i8, i8* %235, align 1
  %237 = icmp slt i8 %236, 0
  br i1 %237, label %238, label %241

238:                                              ; preds = %233
  %239 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = load i8*, i8** %239, align 8
  call void @_ZdlPv(i8* %240) #13
  br label %241

241:                                              ; preds = %238, %233
  %242 = bitcast %"class.SkSL::String"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %243 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %242, i64 0, i32 1, i32 0
  %244 = load i8, i8* %243, align 1
  %245 = icmp slt i8 %244, 0
  br i1 %245, label %246, label %249

246:                                              ; preds = %241
  %247 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load i8*, i8** %247, align 8
  call void @_ZdlPv(i8* %248) #13
  br label %249

249:                                              ; preds = %246, %241
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %190) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %189) #11
  br label %250

250:                                              ; preds = %160, %176, %249
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93)
  br label %1400

251:                                              ; preds = %181, %177
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93)
  %252 = bitcast %"class.SkSL::String"* %69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %252)
  %253 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %6, i64 0, i32 0, i32 0
  %254 = load %"class.std::__1::unique_ptr.117"*, %"class.std::__1::unique_ptr.117"** %253, align 8
  %255 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %6, i64 0, i32 0, i32 1
  %256 = load %"class.std::__1::unique_ptr.117"*, %"class.std::__1::unique_ptr.117"** %255, align 8
  %257 = icmp eq %"class.std::__1::unique_ptr.117"* %254, %256
  br i1 %257, label %431, label %258

258:                                              ; preds = %251
  %259 = bitcast %"struct.SkSL::Modifiers"* %72 to i8*
  %260 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %261 = bitcast <2 x i64>* %67 to i8*
  %262 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %72, i64 0, i32 0, i32 6
  %263 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 3
  %264 = bitcast <2 x i64>* %61 to i8*
  %265 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0
  %266 = bitcast <2 x i64>* %63 to i8*
  %267 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %268 = bitcast <2 x i64>* %65 to i8*
  br label %269

269:                                              ; preds = %427, %258
  %270 = phi %"class.std::__1::unique_ptr.117"* [ %254, %258 ], [ %428, %427 ]
  %271 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %270, i64 0, i32 0, i32 0, i32 0
  %272 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %271, align 8
  %273 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %272, i64 0, i32 0, i32 0, i32 1
  %274 = load i32, i32* %273, align 8
  %275 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %272, i64 0, i32 2
  %276 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %275, align 8
  call void @_ZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEii(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %274, %"struct.SkSL::Modifiers"* dereferenceable(80) %276, i32 7, i32 0) #11
  %277 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %271, align 8
  %278 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %277, i64 0, i32 0, i32 2
  %279 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %278, align 8
  %280 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %279, i64 0, i32 3
  %281 = load i32, i32* %280, align 8
  %282 = add i32 %281, -13
  %283 = icmp ult i32 %282, 2
  br i1 %283, label %287, label %284

284:                                              ; preds = %269
  %285 = icmp ne i32 %281, 2
  %286 = or i1 %285, %8
  br i1 %286, label %352, label %288

287:                                              ; preds = %269
  br i1 %8, label %352, label %288

288:                                              ; preds = %287, %284
  %289 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %94, align 8
  %290 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %277, i64 0, i32 0, i32 0, i32 1
  %291 = load i32, i32* %290, align 8
  %292 = bitcast %"class.SkSL::String"* %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %292) #11
  %293 = bitcast %"class.SkSL::String"* %71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %293) #11
  %294 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %279, i64 0, i32 18
  %295 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %294, align 8, !noalias !10
  %296 = icmp eq %"class.SkSL::Type"* %295, null
  %297 = select i1 %296, %"class.SkSL::Type"* %279, %"class.SkSL::Type"* %295
  %298 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %297, i64 0, i32 0, i32 1, i32 0
  %299 = load i8*, i8** %298, align 8, !noalias !10
  %300 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %297, i64 0, i32 0, i32 1, i32 1
  %301 = load i64, i64* %300, align 8, !noalias !10
  %302 = icmp ugt i64 %301, -17
  br i1 %302, label %303, label %305

303:                                              ; preds = %288
  %304 = bitcast %"class.SkSL::String"* %71 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %304) #12
  unreachable

305:                                              ; preds = %288
  %306 = icmp ult i64 %301, 23
  br i1 %306, label %315, label %307

307:                                              ; preds = %305
  %308 = add nuw i64 %301, 16
  %309 = and i64 %308, -16
  %310 = call i8* @_Znwm(i64 %309) #13
  %311 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %310, i8** %311, align 8, !alias.scope !10
  %312 = or i64 %309, -9223372036854775808
  %313 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %312, i64* %313, align 8, !alias.scope !10
  %314 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %301, i64* %314, align 8, !alias.scope !10
  br label %320

315:                                              ; preds = %305
  %316 = trunc i64 %301 to i8
  %317 = bitcast %"class.SkSL::String"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %318 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %317, i64 0, i32 1, i32 0
  store i8 %316, i8* %318, align 1, !alias.scope !10
  %319 = icmp eq i64 %301, 0
  br i1 %319, label %322, label %320

320:                                              ; preds = %315, %307
  %321 = phi i8* [ %310, %307 ], [ %293, %315 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %321, i8* align 1 %299, i64 %301, i1 false) #11
  br label %322

322:                                              ; preds = %320, %315
  %323 = phi i8* [ %293, %315 ], [ %321, %320 ]
  %324 = getelementptr inbounds i8, i8* %323, i64 %301
  store i8 0, i8* %324, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %70, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.107, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %71) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %69, %"class.SkSL::String"* nonnull %70, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.108, i64 0, i64 0)) #11
  %325 = bitcast %"class.SkSL::ErrorReporter"* %289 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %326 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %325, align 8
  %327 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %326, i64 2
  %328 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %327, align 8
  call void %328(%"class.SkSL::ErrorReporter"* %289, i32 %291, %"class.SkSL::String"* nonnull %69) #11
  %329 = bitcast %"class.SkSL::String"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %330 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %329, i64 0, i32 1, i32 0
  %331 = load i8, i8* %330, align 1
  %332 = icmp slt i8 %331, 0
  br i1 %332, label %333, label %336

333:                                              ; preds = %322
  %334 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = load i8*, i8** %334, align 8
  call void @_ZdlPv(i8* %335) #13
  br label %336

336:                                              ; preds = %333, %322
  %337 = bitcast %"class.SkSL::String"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %338 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %337, i64 0, i32 1, i32 0
  %339 = load i8, i8* %338, align 1
  %340 = icmp slt i8 %339, 0
  br i1 %340, label %341, label %344

341:                                              ; preds = %336
  %342 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i8*, i8** %342, align 8
  call void @_ZdlPv(i8* %343) #13
  br label %344

344:                                              ; preds = %341, %336
  %345 = bitcast %"class.SkSL::String"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %346 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %345, i64 0, i32 1, i32 0
  %347 = load i8, i8* %346, align 1
  %348 = icmp slt i8 %347, 0
  br i1 %348, label %349, label %430

349:                                              ; preds = %344
  %350 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %351 = load i8*, i8** %350, align 8
  call void @_ZdlPv(i8* %351) #13
  br label %430

352:                                              ; preds = %287, %284
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %259) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %259, i8 -86, i64 80, i1 false) #11
  %353 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %271, align 8
  %354 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %353, i64 0, i32 2
  %355 = bitcast %"struct.SkSL::Modifiers"** %354 to i8**
  %356 = load i8*, i8** %355, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %259, i8* align 8 %356, i64 80, i1 false) #11
  %357 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %162, align 8
  %358 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %357, i64 0, i32 0
  %359 = load i8, i8* %358, align 8
  %360 = add i8 %359, -3
  %361 = icmp ult i8 %360, 3
  %362 = and i1 %83, %361
  br i1 %362, label %363, label %405

363:                                              ; preds = %352
  %364 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %260, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %264) #11
  %365 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %279, i64 0, i32 0, i32 1, i32 0
  %366 = bitcast i8** %365 to <2 x i64>*
  %367 = load <2 x i64>, <2 x i64>* %366, align 8
  store <2 x i64> %367, <2 x i64>* %61, align 16
  %368 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %364, i64 0, i32 0, i32 1, i32 0
  %369 = load i8*, i8** %368, align 8
  %370 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %364, i64 0, i32 0, i32 1, i32 1
  %371 = load i64, i64* %370, align 8
  %372 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %62, i8* %369, i64 %371) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %264) #11
  br i1 %372, label %394, label %373

373:                                              ; preds = %363
  %374 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %265, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %266) #11
  %375 = bitcast i8** %365 to <2 x i64>*
  %376 = load <2 x i64>, <2 x i64>* %375, align 8
  store <2 x i64> %376, <2 x i64>* %63, align 16
  %377 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %374, i64 0, i32 0, i32 1, i32 0
  %378 = load i8*, i8** %377, align 8
  %379 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %374, i64 0, i32 0, i32 1, i32 1
  %380 = load i64, i64* %379, align 8
  %381 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %64, i8* %378, i64 %380) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %266) #11
  br i1 %381, label %394, label %382

382:                                              ; preds = %373
  %383 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %267, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %268) #11
  %384 = bitcast i8** %365 to <2 x i64>*
  %385 = load <2 x i64>, <2 x i64>* %384, align 8
  store <2 x i64> %385, <2 x i64>* %65, align 16
  %386 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %383, i64 0, i32 0, i32 1, i32 0
  %387 = load i8*, i8** %386, align 8
  %388 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %383, i64 0, i32 0, i32 1, i32 1
  %389 = load i64, i64* %388, align 8
  %390 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %66, i8* %387, i64 %389) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %268) #11
  br i1 %390, label %394, label %391

391:                                              ; preds = %382
  %392 = load i32, i32* %262, align 8
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %427, label %396

394:                                              ; preds = %373, %382, %363
  %395 = phi i32 [ 10009, %363 ], [ 10010, %382 ], [ 10010, %373 ]
  store i32 %395, i32* %262, align 8
  br label %396

396:                                              ; preds = %394, %391
  %397 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %271, align 8
  %398 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %263, align 8
  %399 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %398, i64 0, i32 0, i32 0
  %400 = call { %"struct.std::__1::__hash_node_base.67"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.63"* %399, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %72, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %72) #11
  %401 = extractvalue { %"struct.std::__1::__hash_node_base.67"*, i8 } %400, 0
  %402 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %401, i64 2
  %403 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %397, i64 0, i32 2
  %404 = bitcast %"struct.SkSL::Modifiers"** %403 to %"struct.std::__1::__hash_node_base.67"**
  store %"struct.std::__1::__hash_node_base.67"* %402, %"struct.std::__1::__hash_node_base.67"** %404, align 8
  br label %427

405:                                              ; preds = %352
  %406 = icmp eq i8 %359, 0
  %407 = and i1 %83, %406
  br i1 %407, label %408, label %427

408:                                              ; preds = %405
  %409 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %260, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %261) #11
  %410 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %279, i64 0, i32 0, i32 1, i32 0
  %411 = bitcast i8** %410 to <2 x i64>*
  %412 = load <2 x i64>, <2 x i64>* %411, align 8
  store <2 x i64> %412, <2 x i64>* %67, align 16
  %413 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %409, i64 0, i32 0, i32 1, i32 0
  %414 = load i8*, i8** %413, align 8
  %415 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %409, i64 0, i32 0, i32 1, i32 1
  %416 = load i64, i64* %415, align 8
  %417 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %68, i8* %414, i64 %416) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %261) #11
  br i1 %417, label %418, label %427

418:                                              ; preds = %408
  store i32 15, i32* %262, align 8
  %419 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %271, align 8
  %420 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %263, align 8
  %421 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %420, i64 0, i32 0, i32 0
  %422 = call { %"struct.std::__1::__hash_node_base.67"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.63"* %421, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %72, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %72) #11
  %423 = extractvalue { %"struct.std::__1::__hash_node_base.67"*, i8 } %422, 0
  %424 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %423, i64 2
  %425 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %419, i64 0, i32 2
  %426 = bitcast %"struct.SkSL::Modifiers"** %425 to %"struct.std::__1::__hash_node_base.67"**
  store %"struct.std::__1::__hash_node_base.67"* %424, %"struct.std::__1::__hash_node_base.67"** %426, align 8
  br label %427

427:                                              ; preds = %418, %408, %405, %396, %391
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %259) #11
  %428 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %270, i64 1
  %429 = icmp eq %"class.std::__1::unique_ptr.117"* %428, %256
  br i1 %429, label %431, label %269

430:                                              ; preds = %344, %349
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %293) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %292) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %252)
  br label %1400

431:                                              ; preds = %427, %251
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %252)
  br i1 %83, label %432, label %730

432:                                              ; preds = %431
  %433 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %94, align 8
  %434 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %162, align 8
  %435 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %434, i64 0, i32 0
  %436 = load i8, i8* %435, align 8
  switch i8 %436, label %730 [
    i8 4, label %437
    i8 5, label %509
    i8 3, label %640
    i8 2, label %723
    i8 0, label %688
    i8 1, label %723
  ]

437:                                              ; preds = %432
  %438 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0
  %439 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %438, align 8
  %440 = bitcast <2 x i64>* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %440) #11
  %441 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %7, i64 0, i32 0, i32 1, i32 0
  %442 = bitcast i8** %441 to <2 x i64>*
  %443 = load <2 x i64>, <2 x i64>* %442, align 8
  store <2 x i64> %443, <2 x i64>* %57, align 16
  %444 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %439, i64 0, i32 0, i32 1, i32 0
  %445 = load i8*, i8** %444, align 8
  %446 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %439, i64 0, i32 0, i32 1, i32 1
  %447 = load i64, i64* %446, align 8
  %448 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %58, i8* %445, i64 %447) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %440) #11
  br i1 %448, label %461, label %449

449:                                              ; preds = %437
  %450 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %451 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %450, align 8
  %452 = bitcast <2 x i64>* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %452) #11
  %453 = bitcast i8** %441 to <2 x i64>*
  %454 = load <2 x i64>, <2 x i64>* %453, align 8
  store <2 x i64> %454, <2 x i64>* %59, align 16
  %455 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %451, i64 0, i32 0, i32 1, i32 0
  %456 = load i8*, i8** %455, align 8
  %457 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %451, i64 0, i32 0, i32 1, i32 1
  %458 = load i64, i64* %457, align 8
  %459 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %60, i8* %456, i64 %458) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %452) #11
  br i1 %459, label %461, label %460

460:                                              ; preds = %449
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %433, i32 %2, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.109, i64 0, i64 0)) #11
  br label %1400

461:                                              ; preds = %449, %437
  %462 = bitcast %"class.std::__1::unique_ptr.117"** %255 to i64*
  %463 = load i64, i64* %462, align 8
  %464 = bitcast %"class.std::__1::vector.115"* %6 to i64*
  %465 = load i64, i64* %464, align 8
  %466 = sub i64 %463, %465
  %467 = icmp eq i64 %466, 8
  br i1 %467, label %468, label %508

468:                                              ; preds = %461
  %469 = inttoptr i64 %465 to %"class.std::__1::unique_ptr.117"*
  %470 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %469, i64 0, i32 0, i32 0, i32 0
  %471 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %470, align 8
  %472 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %471, i64 0, i32 0, i32 2
  %473 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %472, align 8
  %474 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %438, align 8
  %475 = bitcast <2 x i64>* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %475) #11
  %476 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %473, i64 0, i32 0, i32 1, i32 0
  %477 = bitcast i8** %476 to <2 x i64>*
  %478 = load <2 x i64>, <2 x i64>* %477, align 8
  store <2 x i64> %478, <2 x i64>* %53, align 16
  %479 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %474, i64 0, i32 0, i32 1, i32 0
  %480 = load i8*, i8** %479, align 8
  %481 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %474, i64 0, i32 0, i32 1, i32 1
  %482 = load i64, i64* %481, align 8
  %483 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %54, i8* %480, i64 %482) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %475) #11
  br i1 %483, label %495, label %484

484:                                              ; preds = %468
  %485 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %486 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %485, align 8
  %487 = bitcast <2 x i64>* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %487) #11
  %488 = bitcast i8** %476 to <2 x i64>*
  %489 = load <2 x i64>, <2 x i64>* %488, align 8
  store <2 x i64> %489, <2 x i64>* %55, align 16
  %490 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %486, i64 0, i32 0, i32 1, i32 0
  %491 = load i8*, i8** %490, align 8
  %492 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %486, i64 0, i32 0, i32 1, i32 1
  %493 = load i64, i64* %492, align 8
  %494 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %56, i8* %491, i64 %493) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %487) #11
  br i1 %494, label %495, label %508

495:                                              ; preds = %484, %468
  %496 = load %"class.std::__1::unique_ptr.117"*, %"class.std::__1::unique_ptr.117"** %253, align 8
  %497 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %496, i64 0, i32 0, i32 0, i32 0
  %498 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %497, align 8
  %499 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %498, i64 0, i32 2
  %500 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %499, align 8
  %501 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %500, i64 0, i32 1
  %502 = load i32, i32* %501, align 8
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %504, label %508

504:                                              ; preds = %495
  %505 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %500, i64 0, i32 0, i32 6
  %506 = load i32, i32* %505, align 8
  %507 = icmp eq i32 %506, 10010
  br i1 %507, label %730, label %508

508:                                              ; preds = %504, %495, %484, %461
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %433, i32 %2, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.110, i64 0, i64 0)) #11
  br label %1400

509:                                              ; preds = %432
  %510 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0
  %511 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %510, align 8
  %512 = bitcast <2 x i64>* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %512) #11
  %513 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %7, i64 0, i32 0, i32 1, i32 0
  %514 = bitcast i8** %513 to <2 x i64>*
  %515 = load <2 x i64>, <2 x i64>* %514, align 8
  store <2 x i64> %515, <2 x i64>* %49, align 16
  %516 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %511, i64 0, i32 0, i32 1, i32 0
  %517 = load i8*, i8** %516, align 8
  %518 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %511, i64 0, i32 0, i32 1, i32 1
  %519 = load i64, i64* %518, align 8
  %520 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %50, i8* %517, i64 %519) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %512) #11
  br i1 %520, label %533, label %521

521:                                              ; preds = %509
  %522 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %523 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %522, align 8
  %524 = bitcast <2 x i64>* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %524) #11
  %525 = bitcast i8** %513 to <2 x i64>*
  %526 = load <2 x i64>, <2 x i64>* %525, align 8
  store <2 x i64> %526, <2 x i64>* %51, align 16
  %527 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %523, i64 0, i32 0, i32 1, i32 0
  %528 = load i8*, i8** %527, align 8
  %529 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %523, i64 0, i32 0, i32 1, i32 1
  %530 = load i64, i64* %529, align 8
  %531 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %52, i8* %528, i64 %530) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %524) #11
  br i1 %531, label %533, label %532

532:                                              ; preds = %521
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %433, i32 %2, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.109, i64 0, i64 0)) #11
  br label %1400

533:                                              ; preds = %521, %509
  %534 = bitcast %"class.std::__1::unique_ptr.117"** %255 to i64*
  %535 = load i64, i64* %534, align 8
  %536 = bitcast %"class.std::__1::vector.115"* %6 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = sub i64 %535, %537
  %539 = icmp eq i64 %538, 8
  br i1 %539, label %540, label %567

540:                                              ; preds = %533
  %541 = inttoptr i64 %537 to %"class.std::__1::unique_ptr.117"*
  %542 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %541, i64 0, i32 0, i32 0, i32 0
  %543 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %542, align 8
  %544 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %543, i64 0, i32 0, i32 2
  %545 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %544, align 8
  %546 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %547 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %546, align 8
  %548 = bitcast <2 x i64>* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %548) #11
  %549 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %545, i64 0, i32 0, i32 1, i32 0
  %550 = bitcast i8** %549 to <2 x i64>*
  %551 = load <2 x i64>, <2 x i64>* %550, align 8
  store <2 x i64> %551, <2 x i64>* %47, align 16
  %552 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %547, i64 0, i32 0, i32 1, i32 0
  %553 = load i8*, i8** %552, align 8
  %554 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %547, i64 0, i32 0, i32 1, i32 1
  %555 = load i64, i64* %554, align 8
  %556 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %48, i8* %553, i64 %555) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %548) #11
  br i1 %556, label %557, label %567

557:                                              ; preds = %540
  %558 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %543, i64 0, i32 2
  %559 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %558, align 8
  %560 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %559, i64 0, i32 1
  %561 = load i32, i32* %560, align 8
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %563, label %567

563:                                              ; preds = %557
  %564 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %559, i64 0, i32 0, i32 6
  %565 = load i32, i32* %564, align 8
  %566 = icmp eq i32 %565, 10009
  br i1 %566, label %730, label %567

567:                                              ; preds = %563, %557, %540, %533
  %568 = load i64, i64* %534, align 8
  %569 = load i64, i64* %536, align 8
  %570 = sub i64 %568, %569
  %571 = icmp eq i64 %570, 16
  br i1 %571, label %572, label %639

572:                                              ; preds = %567
  %573 = inttoptr i64 %569 to %"class.std::__1::unique_ptr.117"*
  %574 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %573, i64 0, i32 0, i32 0, i32 0
  %575 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %574, align 8
  %576 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %575, i64 0, i32 0, i32 2
  %577 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %576, align 8
  %578 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %579 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %578, align 8
  %580 = bitcast <2 x i64>* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %580) #11
  %581 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %577, i64 0, i32 0, i32 1, i32 0
  %582 = bitcast i8** %581 to <2 x i64>*
  %583 = load <2 x i64>, <2 x i64>* %582, align 8
  store <2 x i64> %583, <2 x i64>* %45, align 16
  %584 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %579, i64 0, i32 0, i32 1, i32 0
  %585 = load i8*, i8** %584, align 8
  %586 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %579, i64 0, i32 0, i32 1, i32 1
  %587 = load i64, i64* %586, align 8
  %588 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %46, i8* %585, i64 %587) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %580) #11
  br i1 %588, label %589, label %639

589:                                              ; preds = %572
  %590 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %575, i64 0, i32 2
  %591 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %590, align 8
  %592 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %591, i64 0, i32 1
  %593 = load i32, i32* %592, align 8
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %595, label %639

595:                                              ; preds = %589
  %596 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %591, i64 0, i32 0, i32 6
  %597 = load i32, i32* %596, align 8
  %598 = icmp eq i32 %597, 10009
  br i1 %598, label %599, label %639

599:                                              ; preds = %595
  %600 = load %"class.std::__1::unique_ptr.117"*, %"class.std::__1::unique_ptr.117"** %253, align 8
  %601 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %600, i64 1, i32 0, i32 0, i32 0
  %602 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %601, align 8
  %603 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %602, i64 0, i32 0, i32 2
  %604 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %603, align 8
  %605 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %510, align 8
  %606 = bitcast <2 x i64>* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %606) #11
  %607 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %604, i64 0, i32 0, i32 1, i32 0
  %608 = bitcast i8** %607 to <2 x i64>*
  %609 = load <2 x i64>, <2 x i64>* %608, align 8
  store <2 x i64> %609, <2 x i64>* %41, align 16
  %610 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %605, i64 0, i32 0, i32 1, i32 0
  %611 = load i8*, i8** %610, align 8
  %612 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %605, i64 0, i32 0, i32 1, i32 1
  %613 = load i64, i64* %612, align 8
  %614 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %42, i8* %611, i64 %613) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %606) #11
  br i1 %614, label %626, label %615

615:                                              ; preds = %599
  %616 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %617 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %616, align 8
  %618 = bitcast <2 x i64>* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %618) #11
  %619 = bitcast i8** %607 to <2 x i64>*
  %620 = load <2 x i64>, <2 x i64>* %619, align 8
  store <2 x i64> %620, <2 x i64>* %43, align 16
  %621 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %617, i64 0, i32 0, i32 1, i32 0
  %622 = load i8*, i8** %621, align 8
  %623 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %617, i64 0, i32 0, i32 1, i32 1
  %624 = load i64, i64* %623, align 8
  %625 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %44, i8* %622, i64 %624) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %618) #11
  br i1 %625, label %626, label %639

626:                                              ; preds = %615, %599
  %627 = load %"class.std::__1::unique_ptr.117"*, %"class.std::__1::unique_ptr.117"** %253, align 8
  %628 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %627, i64 1, i32 0, i32 0, i32 0
  %629 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %628, align 8
  %630 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %629, i64 0, i32 2
  %631 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %630, align 8
  %632 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %631, i64 0, i32 1
  %633 = load i32, i32* %632, align 8
  %634 = icmp eq i32 %633, 0
  br i1 %634, label %635, label %639

635:                                              ; preds = %626
  %636 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %631, i64 0, i32 0, i32 6
  %637 = load i32, i32* %636, align 8
  %638 = icmp eq i32 %637, 10010
  br i1 %638, label %730, label %639

639:                                              ; preds = %635, %626, %615, %595, %589, %572, %567
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %433, i32 %2, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.111, i64 0, i64 0)) #11
  br label %1400

640:                                              ; preds = %432
  %641 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0
  %642 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %641, align 8
  %643 = bitcast <2 x i64>* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %643) #11
  %644 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %7, i64 0, i32 0, i32 1, i32 0
  %645 = bitcast i8** %644 to <2 x i64>*
  %646 = load <2 x i64>, <2 x i64>* %645, align 8
  store <2 x i64> %646, <2 x i64>* %39, align 16
  %647 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %642, i64 0, i32 0, i32 1, i32 0
  %648 = load i8*, i8** %647, align 8
  %649 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %642, i64 0, i32 0, i32 1, i32 1
  %650 = load i64, i64* %649, align 8
  %651 = call zeroext i1 @_ZNK4SkSL14StringFragmentneES0_(%"struct.SkSL::StringFragment"* nonnull %40, i8* %648, i64 %650) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %643) #11
  br i1 %651, label %652, label %653

652:                                              ; preds = %640
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %433, i32 %2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.112, i64 0, i64 0)) #11
  br label %1400

653:                                              ; preds = %640
  %654 = bitcast %"class.std::__1::unique_ptr.117"** %255 to i64*
  %655 = load i64, i64* %654, align 8
  %656 = bitcast %"class.std::__1::vector.115"* %6 to i64*
  %657 = load i64, i64* %656, align 8
  %658 = sub i64 %655, %657
  %659 = ashr exact i64 %658, 3
  switch i64 %659, label %687 [
    i64 0, label %730
    i64 1, label %660
  ]

660:                                              ; preds = %653
  %661 = inttoptr i64 %657 to %"class.std::__1::unique_ptr.117"*
  %662 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %661, i64 0, i32 0, i32 0, i32 0
  %663 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %662, align 8
  %664 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %663, i64 0, i32 0, i32 2
  %665 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %664, align 8
  %666 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %667 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %666, align 8
  %668 = bitcast <2 x i64>* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %668) #11
  %669 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %665, i64 0, i32 0, i32 1, i32 0
  %670 = bitcast i8** %669 to <2 x i64>*
  %671 = load <2 x i64>, <2 x i64>* %670, align 8
  store <2 x i64> %671, <2 x i64>* %37, align 16
  %672 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %667, i64 0, i32 0, i32 1, i32 0
  %673 = load i8*, i8** %672, align 8
  %674 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %667, i64 0, i32 0, i32 1, i32 1
  %675 = load i64, i64* %674, align 8
  %676 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %38, i8* %673, i64 %675) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %668) #11
  br i1 %676, label %677, label %687

677:                                              ; preds = %660
  %678 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %663, i64 0, i32 2
  %679 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %678, align 8
  %680 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %679, i64 0, i32 1
  %681 = load i32, i32* %680, align 8
  %682 = icmp eq i32 %681, 0
  br i1 %682, label %683, label %687

683:                                              ; preds = %677
  %684 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %679, i64 0, i32 0, i32 6
  %685 = load i32, i32* %684, align 8
  %686 = icmp eq i32 %685, 10009
  br i1 %686, label %730, label %687

687:                                              ; preds = %683, %677, %660, %653
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %433, i32 %2, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.113, i64 0, i64 0)) #11
  br label %1400

688:                                              ; preds = %432
  %689 = bitcast %"class.std::__1::unique_ptr.117"** %255 to i64*
  %690 = load i64, i64* %689, align 8
  %691 = bitcast %"class.std::__1::vector.115"* %6 to i64*
  %692 = load i64, i64* %691, align 8
  %693 = sub i64 %690, %692
  %694 = ashr exact i64 %693, 3
  switch i64 %694, label %722 [
    i64 0, label %730
    i64 1, label %695
  ]

695:                                              ; preds = %688
  %696 = inttoptr i64 %692 to %"class.std::__1::unique_ptr.117"*
  %697 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %696, i64 0, i32 0, i32 0, i32 0
  %698 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %697, align 8
  %699 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %698, i64 0, i32 0, i32 2
  %700 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %699, align 8
  %701 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %702 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %701, align 8
  %703 = bitcast <2 x i64>* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %703) #11
  %704 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %700, i64 0, i32 0, i32 1, i32 0
  %705 = bitcast i8** %704 to <2 x i64>*
  %706 = load <2 x i64>, <2 x i64>* %705, align 8
  store <2 x i64> %706, <2 x i64>* %35, align 16
  %707 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %702, i64 0, i32 0, i32 1, i32 0
  %708 = load i8*, i8** %707, align 8
  %709 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %702, i64 0, i32 0, i32 1, i32 1
  %710 = load i64, i64* %709, align 8
  %711 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %36, i8* %708, i64 %710) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %703) #11
  br i1 %711, label %712, label %722

712:                                              ; preds = %695
  %713 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %698, i64 0, i32 2
  %714 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %713, align 8
  %715 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %714, i64 0, i32 1
  %716 = load i32, i32* %715, align 8
  %717 = icmp eq i32 %716, 0
  br i1 %717, label %718, label %722

718:                                              ; preds = %712
  %719 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %714, i64 0, i32 0, i32 6
  %720 = load i32, i32* %719, align 8
  %721 = icmp eq i32 %720, 15
  br i1 %721, label %730, label %722

722:                                              ; preds = %718, %712, %695, %688
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %433, i32 %2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.114, i64 0, i64 0)) #11
  br label %1400

723:                                              ; preds = %432, %432
  %724 = bitcast %"class.std::__1::unique_ptr.117"** %255 to i64*
  %725 = load i64, i64* %724, align 8
  %726 = bitcast %"class.std::__1::vector.115"* %6 to i64*
  %727 = load i64, i64* %726, align 8
  %728 = icmp eq i64 %725, %727
  br i1 %728, label %730, label %729

729:                                              ; preds = %723
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %433, i32 %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.115, i64 0, i64 0)) #11
  br label %1400

730:                                              ; preds = %432, %723, %504, %635, %563, %683, %653, %718, %688, %431
  %731 = load i8*, i8** %81, align 8
  %732 = load i64, i64* %82, align 8
  %733 = bitcast %"class.SkSL::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %733)
  %734 = bitcast %"class.std::__1::vector.23"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %734)
  %735 = bitcast %"class.SkSL::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %735)
  %736 = bitcast %"class.SkSL::String"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %736)
  %737 = bitcast %"class.SkSL::String"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %737)
  %738 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %94, align 8
  %739 = call %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"* %1, i8* %731, i64 %732) #11
  %740 = icmp eq %"class.SkSL::Symbol"* %739, null
  br i1 %740, label %1220, label %741

741:                                              ; preds = %730
  %742 = bitcast %"class.std::__1::vector.198"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %742) #11
  %743 = getelementptr inbounds %"class.std::__1::vector.198", %"class.std::__1::vector.198"* %17, i64 0, i32 0, i32 0
  %744 = getelementptr inbounds %"class.std::__1::vector.198", %"class.std::__1::vector.198"* %17, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %742, i8 0, i64 24, i1 false) #11
  %745 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %739, i64 0, i32 0, i32 2
  %746 = load i32, i32* %745, align 4
  switch i32 %746, label %764 [
    i32 14, label %747
    i32 11, label %751
  ]

747:                                              ; preds = %741
  %748 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %739, i64 1
  %749 = bitcast %"class.SkSL::Symbol"* %748 to %"class.std::__1::vector.198"*
  %750 = icmp eq %"class.std::__1::vector.198"* %17, %749
  br i1 %750, label %1205, label %818

751:                                              ; preds = %741
  %752 = getelementptr inbounds %"class.std::__1::vector.198", %"class.std::__1::vector.198"* %17, i64 0, i32 0, i32 2, i32 0, i32 0
  %753 = ptrtoint %"class.SkSL::Symbol"* %739 to i64
  %754 = bitcast %"class.SkSL::FunctionDeclaration"*** %744 to i64*
  %755 = bitcast %"class.std::__1::vector.198"* %17 to i64*
  %756 = bitcast %"class.SkSL::FunctionDeclaration"*** %752 to i64*
  %757 = call i8* @_Znwm(i64 8) #13
  %758 = bitcast i8* %757 to %"class.SkSL::FunctionDeclaration"**
  %759 = getelementptr inbounds i8, i8* %757, i64 8
  %760 = bitcast i8* %759 to %"class.SkSL::FunctionDeclaration"**
  %761 = ptrtoint i8* %759 to i64
  %762 = bitcast i8* %757 to i64*
  store i64 %753, i64* %762, align 8
  %763 = ptrtoint i8* %757 to i64
  store i64 %763, i64* %755, align 8
  store i64 %761, i64* %754, align 8
  store i64 %761, i64* %756, align 8
  br label %827

764:                                              ; preds = %741
  %765 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %765) #11
  %766 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %766) #11
  %767 = icmp ugt i64 %732, -17
  br i1 %767, label %768, label %770

768:                                              ; preds = %764
  %769 = bitcast %"class.SkSL::String"* %20 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %769) #12
  unreachable

770:                                              ; preds = %764
  %771 = icmp ult i64 %732, 23
  br i1 %771, label %780, label %772

772:                                              ; preds = %770
  %773 = add nuw i64 %732, 16
  %774 = and i64 %773, -16
  %775 = call i8* @_Znwm(i64 %774) #13
  %776 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %775, i8** %776, align 8
  %777 = or i64 %774, -9223372036854775808
  %778 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %777, i64* %778, align 8
  %779 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %732, i64* %779, align 8
  br label %785

780:                                              ; preds = %770
  %781 = trunc i64 %732 to i8
  %782 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %783 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %782, i64 0, i32 1, i32 0
  store i8 %781, i8* %783, align 1
  %784 = icmp eq i64 %732, 0
  br i1 %784, label %787, label %785

785:                                              ; preds = %780, %772
  %786 = phi i8* [ %775, %772 ], [ %766, %780 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %786, i8* align 1 %731, i64 %732, i1 false) #11
  br label %787

787:                                              ; preds = %785, %780
  %788 = phi i8* [ %766, %780 ], [ %786, %785 ]
  %789 = getelementptr inbounds i8, i8* %788, i64 %732
  store i8 0, i8* %789, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %19, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.116, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %20) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %18, %"class.SkSL::String"* nonnull %19, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.117, i64 0, i64 0)) #11
  %790 = bitcast %"class.SkSL::ErrorReporter"* %738 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %791 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %790, align 8
  %792 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %791, i64 2
  %793 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %792, align 8
  call void %793(%"class.SkSL::ErrorReporter"* %738, i32 %2, %"class.SkSL::String"* nonnull %18) #11
  %794 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %795 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %794, i64 0, i32 1, i32 0
  %796 = load i8, i8* %795, align 1
  %797 = icmp slt i8 %796, 0
  br i1 %797, label %798, label %801

798:                                              ; preds = %787
  %799 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %800 = load i8*, i8** %799, align 8
  call void @_ZdlPv(i8* %800) #13
  br label %801

801:                                              ; preds = %798, %787
  %802 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %803 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %802, i64 0, i32 1, i32 0
  %804 = load i8, i8* %803, align 1
  %805 = icmp slt i8 %804, 0
  br i1 %805, label %806, label %809

806:                                              ; preds = %801
  %807 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %808 = load i8*, i8** %807, align 8
  call void @_ZdlPv(i8* %808) #13
  br label %809

809:                                              ; preds = %806, %801
  %810 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %811 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %810, i64 0, i32 1, i32 0
  %812 = load i8, i8* %811, align 1
  %813 = icmp slt i8 %812, 0
  br i1 %813, label %814, label %817

814:                                              ; preds = %809
  %815 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %816 = load i8*, i8** %815, align 8
  call void @_ZdlPv(i8* %816) #13
  br label %817

817:                                              ; preds = %814, %809
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %766) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %765) #11
  br label %1205

818:                                              ; preds = %747
  %819 = bitcast %"class.SkSL::Symbol"* %748 to %"class.SkSL::FunctionDeclaration"***
  %820 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %819, align 8
  %821 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %739, i64 1, i32 0, i32 1
  %822 = bitcast i32* %821 to %"class.SkSL::FunctionDeclaration"***
  %823 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %822, align 8
  call void @_ZNSt3__16vectorIPKN4SkSL19FunctionDeclarationENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.198"* nonnull %17, %"class.SkSL::FunctionDeclaration"** %820, %"class.SkSL::FunctionDeclaration"** %823) #11
  %824 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %743, align 8
  %825 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %744, align 8
  %826 = icmp eq %"class.SkSL::FunctionDeclaration"** %824, %825
  br i1 %826, label %1209, label %827

827:                                              ; preds = %818, %751
  %828 = phi %"class.SkSL::FunctionDeclaration"** [ %758, %751 ], [ %824, %818 ]
  %829 = phi %"class.SkSL::FunctionDeclaration"** [ %760, %751 ], [ %825, %818 ]
  %830 = bitcast %"class.std::__1::unique_ptr.117"** %255 to i64*
  %831 = bitcast %"class.std::__1::vector.115"* %6 to i64*
  %832 = bitcast <2 x i64>* %15 to i8*
  br label %833

833:                                              ; preds = %1202, %827
  %834 = phi %"class.SkSL::FunctionDeclaration"** [ %828, %827 ], [ %1203, %1202 ]
  %835 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %834, align 8
  %836 = load i64, i64* %830, align 8
  %837 = load i64, i64* %831, align 8
  %838 = sub i64 %836, %837
  %839 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %835, i64 0, i32 3
  %840 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %835, i64 0, i32 3, i32 0, i32 1
  %841 = bitcast %"class.SkSL::Variable"*** %840 to i64*
  %842 = load i64, i64* %841, align 8
  %843 = bitcast %"class.std::__1::vector.23"* %839 to i64*
  %844 = load i64, i64* %843, align 8
  %845 = sub i64 %842, %844
  %846 = icmp eq i64 %838, %845
  br i1 %846, label %847, label %1202

847:                                              ; preds = %833
  %848 = icmp eq i64 %836, %837
  br i1 %848, label %896, label %849

849:                                              ; preds = %847
  %850 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %839, i64 0, i32 0, i32 0
  %851 = inttoptr i64 %837 to %"class.std::__1::unique_ptr.117"*
  %852 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %851, i64 0, i32 0, i32 0, i32 0
  %853 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %852, align 8
  %854 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %853, i64 0, i32 0, i32 2
  %855 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %854, align 8
  %856 = inttoptr i64 %844 to %"class.SkSL::Symbol"**
  %857 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %856, align 8
  %858 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %857, i64 0, i32 2
  %859 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %858, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %832) #11
  %860 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %855, i64 0, i32 0, i32 1, i32 0
  %861 = bitcast i8** %860 to <2 x i64>*
  %862 = load <2 x i64>, <2 x i64>* %861, align 8
  store <2 x i64> %862, <2 x i64>* %15, align 16
  %863 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %859, i64 0, i32 0, i32 1, i32 0
  %864 = load i8*, i8** %863, align 8
  %865 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %859, i64 0, i32 0, i32 1, i32 1
  %866 = load i64, i64* %865, align 8
  %867 = call zeroext i1 @_ZNK4SkSL14StringFragmentneES0_(%"struct.SkSL::StringFragment"* nonnull %16, i8* %864, i64 %866) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %832) #11
  br i1 %867, label %1202, label %868

868:                                              ; preds = %849, %875
  %869 = phi i64 [ %895, %875 ], [ 1, %849 ]
  %870 = load i64, i64* %830, align 8
  %871 = load i64, i64* %831, align 8
  %872 = sub i64 %870, %871
  %873 = ashr exact i64 %872, 3
  %874 = icmp ult i64 %869, %873
  br i1 %874, label %875, label %896

875:                                              ; preds = %868
  %876 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %850, align 8
  %877 = inttoptr i64 %871 to %"class.std::__1::unique_ptr.117"*
  %878 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %877, i64 %869, i32 0, i32 0, i32 0
  %879 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %878, align 8
  %880 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %879, i64 0, i32 0, i32 2
  %881 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %880, align 8
  %882 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %876, i64 %869
  %883 = bitcast %"class.SkSL::Variable"** %882 to %"class.SkSL::Symbol"**
  %884 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %883, align 8
  %885 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %884, i64 0, i32 2
  %886 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %885, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %832) #11
  %887 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %881, i64 0, i32 0, i32 1, i32 0
  %888 = bitcast i8** %887 to <2 x i64>*
  %889 = load <2 x i64>, <2 x i64>* %888, align 8
  store <2 x i64> %889, <2 x i64>* %15, align 16
  %890 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %886, i64 0, i32 0, i32 1, i32 0
  %891 = load i8*, i8** %890, align 8
  %892 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %886, i64 0, i32 0, i32 1, i32 1
  %893 = load i64, i64* %892, align 8
  %894 = call zeroext i1 @_ZNK4SkSL14StringFragmentneES0_(%"struct.SkSL::StringFragment"* nonnull %16, i8* %891, i64 %893) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %832) #11
  %895 = add nuw i64 %869, 1
  br i1 %894, label %1202, label %868

896:                                              ; preds = %847, %868
  %897 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %835, i64 0, i32 4
  %898 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %897, align 8
  %899 = bitcast <2 x i64>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %899) #11
  %900 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %7, i64 0, i32 0, i32 1, i32 0
  %901 = bitcast i8** %900 to <2 x i64>*
  %902 = load <2 x i64>, <2 x i64>* %901, align 8
  store <2 x i64> %902, <2 x i64>* %13, align 16
  %903 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %898, i64 0, i32 0, i32 1, i32 0
  %904 = load i8*, i8** %903, align 8
  %905 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %898, i64 0, i32 0, i32 1, i32 1
  %906 = load i64, i64* %905, align 8
  %907 = call zeroext i1 @_ZNK4SkSL14StringFragmentneES0_(%"struct.SkSL::StringFragment"* nonnull %14, i8* %904, i64 %906) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %899) #11
  br i1 %907, label %914, label %908

908:                                              ; preds = %896
  %909 = load i64, i64* %830, align 8
  %910 = load i64, i64* %831, align 8
  %911 = icmp eq i64 %909, %910
  br i1 %911, label %1172, label %912

912:                                              ; preds = %908
  %913 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %839, i64 0, i32 0, i32 0
  br label %1111

914:                                              ; preds = %896
  %915 = bitcast %"class.std::__1::vector.23"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %915) #11
  %916 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %21, i64 0, i32 0, i32 0
  %917 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %21, i64 0, i32 0, i32 1
  %918 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %21, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %915, i8 0, i64 24, i1 false) #11
  %919 = load i64, i64* %830, align 8
  %920 = load i64, i64* %831, align 8
  %921 = sub i64 %919, %920
  %922 = ashr exact i64 %921, 3
  %923 = bitcast %"class.SkSL::Variable"*** %918 to i64*
  %924 = bitcast %"class.std::__1::vector.23"* %21 to i64*
  %925 = icmp eq i64 %921, 0
  %926 = inttoptr i64 %920 to %"class.std::__1::unique_ptr.117"*
  %927 = inttoptr i64 %919 to %"class.std::__1::unique_ptr.117"*
  br i1 %925, label %928, label %930

928:                                              ; preds = %914
  %929 = bitcast %"class.SkSL::Variable"*** %917 to i64*
  br label %940

930:                                              ; preds = %914
  %931 = icmp ugt i64 %922, 2305843009213693951
  br i1 %931, label %932, label %933

932:                                              ; preds = %930
  call void @abort() #12
  unreachable

933:                                              ; preds = %930
  %934 = bitcast %"class.SkSL::Variable"*** %917 to i64*
  %935 = call i8* @_Znwm(i64 %921) #13
  %936 = bitcast i8* %935 to %"class.SkSL::Variable"**
  %937 = ptrtoint i8* %935 to i64
  %938 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %936, i64 %922
  %939 = ptrtoint %"class.SkSL::Variable"** %938 to i64
  store i64 %937, i64* %924, align 8
  store i64 %937, i64* %934, align 8
  store i64 %939, i64* %923, align 8
  br label %940

940:                                              ; preds = %928, %933
  %941 = phi i64* [ %929, %928 ], [ %934, %933 ]
  %942 = phi i64 [ 0, %928 ], [ %939, %933 ]
  %943 = phi i64 [ 0, %928 ], [ %937, %933 ]
  %944 = phi %"class.SkSL::Variable"** [ null, %928 ], [ %938, %933 ]
  %945 = phi %"class.SkSL::Variable"** [ null, %928 ], [ %936, %933 ]
  %946 = icmp eq %"class.std::__1::unique_ptr.117"* %926, %927
  br i1 %946, label %951, label %1043

947:                                              ; preds = %1104
  %948 = load i64, i64* %924, align 8
  %949 = load i64, i64* %941, align 8
  %950 = load i64, i64* %923, align 8
  br label %951

951:                                              ; preds = %947, %940
  %952 = phi i64 [ %950, %947 ], [ %942, %940 ]
  %953 = phi i64 [ %949, %947 ], [ %943, %940 ]
  %954 = phi i64 [ %948, %947 ], [ %943, %940 ]
  %955 = bitcast %"class.SkSL::FunctionDeclaration"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %955) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %955, i8 -86, i64 96, i1 false) #11
  %956 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %835, i64 0, i32 2
  %957 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %956, align 8
  %958 = bitcast %"class.std::__1::vector.23"* %23 to i64*
  store i64 %954, i64* %958, align 8
  %959 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %23, i64 0, i32 0, i32 1
  %960 = bitcast %"class.SkSL::Variable"*** %959 to i64*
  store i64 %953, i64* %960, align 8
  %961 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %23, i64 0, i32 0, i32 2, i32 0, i32 0
  %962 = bitcast %"class.SkSL::Variable"*** %961 to i64*
  store i64 %952, i64* %962, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %915, i8 0, i64 24, i1 false) #11
  call void @_ZN4SkSL19FunctionDeclarationC2EiPKNS_9ModifiersENS_14StringFragmentENSt3__16vectorIPKNS_8VariableENS5_9allocatorIS9_EEEEPKNS_4TypeEb(%"class.SkSL::FunctionDeclaration"* nonnull %22, i32 %2, %"struct.SkSL::Modifiers"* %957, i8* %731, i64 %732, %"class.std::__1::vector.23"* nonnull %23, %"class.SkSL::Type"* %7, i1 zeroext %8) #11
  %963 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %23, i64 0, i32 0, i32 0
  %964 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %963, align 8
  %965 = icmp eq %"class.SkSL::Variable"** %964, null
  br i1 %965, label %969, label %966

966:                                              ; preds = %951
  %967 = ptrtoint %"class.SkSL::Variable"** %964 to i64
  store i64 %967, i64* %960, align 8
  %968 = bitcast %"class.SkSL::Variable"** %964 to i8*
  call void @_ZdlPv(i8* %968) #13
  br label %969

969:                                              ; preds = %966, %951
  %970 = bitcast %"class.SkSL::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %970) #11
  %971 = bitcast %"class.SkSL::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %971) #11
  %972 = bitcast %"class.SkSL::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %972) #11
  %973 = bitcast %"class.SkSL::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %973) #11
  call void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* nonnull sret %28, %"class.SkSL::FunctionDeclaration"* nonnull %22) #11
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %27, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.118, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %28) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %26, %"class.SkSL::String"* nonnull %27, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.119, i64 0, i64 0)) #11
  %974 = bitcast %"class.SkSL::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %974) #11
  call void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* nonnull sret %29, %"class.SkSL::FunctionDeclaration"* %835) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %25, %"class.SkSL::String"* nonnull %26, %"class.SkSL::String"* nonnull dereferenceable(24) %29) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %24, %"class.SkSL::String"* nonnull %25, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.120, i64 0, i64 0)) #11
  %975 = bitcast %"class.SkSL::ErrorReporter"* %738 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %976 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %975, align 8
  %977 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %976, i64 2
  %978 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %977, align 8
  call void %978(%"class.SkSL::ErrorReporter"* %738, i32 %2, %"class.SkSL::String"* nonnull %24) #11
  %979 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %980 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %979, i64 0, i32 1, i32 0
  %981 = load i8, i8* %980, align 1
  %982 = icmp slt i8 %981, 0
  br i1 %982, label %983, label %986

983:                                              ; preds = %969
  %984 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %985 = load i8*, i8** %984, align 8
  call void @_ZdlPv(i8* %985) #13
  br label %986

986:                                              ; preds = %983, %969
  %987 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %988 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %987, i64 0, i32 1, i32 0
  %989 = load i8, i8* %988, align 1
  %990 = icmp slt i8 %989, 0
  br i1 %990, label %991, label %994

991:                                              ; preds = %986
  %992 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %993 = load i8*, i8** %992, align 8
  call void @_ZdlPv(i8* %993) #13
  br label %994

994:                                              ; preds = %991, %986
  %995 = bitcast %"class.SkSL::String"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %996 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %995, i64 0, i32 1, i32 0
  %997 = load i8, i8* %996, align 1
  %998 = icmp slt i8 %997, 0
  br i1 %998, label %999, label %1002

999:                                              ; preds = %994
  %1000 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1001 = load i8*, i8** %1000, align 8
  call void @_ZdlPv(i8* %1001) #13
  br label %1002

1002:                                             ; preds = %999, %994
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %974) #11
  %1003 = bitcast %"class.SkSL::String"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1004 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1003, i64 0, i32 1, i32 0
  %1005 = load i8, i8* %1004, align 1
  %1006 = icmp slt i8 %1005, 0
  br i1 %1006, label %1007, label %1010

1007:                                             ; preds = %1002
  %1008 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1009 = load i8*, i8** %1008, align 8
  call void @_ZdlPv(i8* %1009) #13
  br label %1010

1010:                                             ; preds = %1007, %1002
  %1011 = bitcast %"class.SkSL::String"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1012 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1011, i64 0, i32 1, i32 0
  %1013 = load i8, i8* %1012, align 1
  %1014 = icmp slt i8 %1013, 0
  br i1 %1014, label %1015, label %1018

1015:                                             ; preds = %1010
  %1016 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1017 = load i8*, i8** %1016, align 8
  call void @_ZdlPv(i8* %1017) #13
  br label %1018

1018:                                             ; preds = %1015, %1010
  %1019 = bitcast %"class.SkSL::String"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1020 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1019, i64 0, i32 1, i32 0
  %1021 = load i8, i8* %1020, align 1
  %1022 = icmp slt i8 %1021, 0
  br i1 %1022, label %1023, label %1026

1023:                                             ; preds = %1018
  %1024 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1025 = load i8*, i8** %1024, align 8
  call void @_ZdlPv(i8* %1025) #13
  br label %1026

1026:                                             ; preds = %1023, %1018
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %973) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %972) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %971) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %970) #11
  %1027 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %22, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL19FunctionDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1027, align 8
  %1028 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %22, i64 0, i32 3, i32 0, i32 0
  %1029 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %1028, align 8
  %1030 = icmp eq %"class.SkSL::Variable"** %1029, null
  br i1 %1030, label %1036, label %1031

1031:                                             ; preds = %1026
  %1032 = ptrtoint %"class.SkSL::Variable"** %1029 to i64
  %1033 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %22, i64 0, i32 3, i32 0, i32 1
  %1034 = bitcast %"class.SkSL::Variable"*** %1033 to i64*
  store i64 %1032, i64* %1034, align 8
  %1035 = bitcast %"class.SkSL::Variable"** %1029 to i8*
  call void @_ZdlPv(i8* %1035) #13
  br label %1036

1036:                                             ; preds = %1031, %1026
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %955) #11
  %1037 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %916, align 8
  %1038 = icmp eq %"class.SkSL::Variable"** %1037, null
  br i1 %1038, label %1042, label %1039

1039:                                             ; preds = %1036
  %1040 = ptrtoint %"class.SkSL::Variable"** %1037 to i64
  store i64 %1040, i64* %941, align 8
  %1041 = bitcast %"class.SkSL::Variable"** %1037 to i8*
  call void @_ZdlPv(i8* %1041) #13
  br label %1042

1042:                                             ; preds = %1039, %1036
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %915) #11
  br label %1205

1043:                                             ; preds = %940, %1107
  %1044 = phi i64 [ %1110, %1107 ], [ %943, %940 ]
  %1045 = phi %"class.SkSL::Variable"** [ %1109, %1107 ], [ %944, %940 ]
  %1046 = phi %"class.SkSL::Variable"** [ %1108, %1107 ], [ %945, %940 ]
  %1047 = phi %"class.std::__1::unique_ptr.117"* [ %1105, %1107 ], [ %926, %940 ]
  %1048 = bitcast %"class.std::__1::unique_ptr.117"* %1047 to i64*
  %1049 = load i64, i64* %1048, align 8
  %1050 = icmp ult %"class.SkSL::Variable"** %1046, %1045
  %1051 = ptrtoint %"class.SkSL::Variable"** %1045 to i64
  br i1 %1050, label %1052, label %1056

1052:                                             ; preds = %1043
  %1053 = bitcast %"class.SkSL::Variable"** %1046 to i64*
  store i64 %1049, i64* %1053, align 8
  %1054 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %1046, i64 1
  %1055 = ptrtoint %"class.SkSL::Variable"** %1054 to i64
  store i64 %1055, i64* %941, align 8
  br label %1104

1056:                                             ; preds = %1043
  %1057 = ptrtoint %"class.SkSL::Variable"** %1046 to i64
  %1058 = load i64, i64* %924, align 8
  %1059 = sub i64 %1057, %1058
  %1060 = ashr exact i64 %1059, 3
  %1061 = add nsw i64 %1060, 1
  %1062 = icmp ugt i64 %1061, 2305843009213693951
  br i1 %1062, label %1063, label %1065

1063:                                             ; preds = %1056
  %1064 = bitcast %"class.std::__1::vector.23"* %21 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1064) #12
  unreachable

1065:                                             ; preds = %1056
  %1066 = sub i64 %1051, %1058
  %1067 = ashr exact i64 %1066, 3
  %1068 = icmp ult i64 %1067, 1152921504606846975
  br i1 %1068, label %1069, label %1077

1069:                                             ; preds = %1065
  %1070 = ashr exact i64 %1066, 2
  %1071 = icmp ult i64 %1070, %1061
  %1072 = select i1 %1071, i64 %1061, i64 %1070
  %1073 = icmp eq i64 %1072, 0
  br i1 %1073, label %1082, label %1074

1074:                                             ; preds = %1069
  %1075 = icmp ugt i64 %1072, 2305843009213693951
  br i1 %1075, label %1076, label %1077

1076:                                             ; preds = %1074
  call void @abort() #12
  unreachable

1077:                                             ; preds = %1074, %1065
  %1078 = phi i64 [ %1072, %1074 ], [ 2305843009213693951, %1065 ]
  %1079 = shl i64 %1078, 3
  %1080 = call i8* @_Znwm(i64 %1079) #13
  %1081 = bitcast i8* %1080 to %"class.SkSL::Variable"**
  br label %1082

1082:                                             ; preds = %1077, %1069
  %1083 = phi i64 [ %1078, %1077 ], [ 0, %1069 ]
  %1084 = phi %"class.SkSL::Variable"** [ %1081, %1077 ], [ null, %1069 ]
  %1085 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %1084, i64 %1060
  %1086 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %1084, i64 %1083
  %1087 = ptrtoint %"class.SkSL::Variable"** %1086 to i64
  %1088 = bitcast %"class.SkSL::Variable"** %1085 to i64*
  store i64 %1049, i64* %1088, align 8
  %1089 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %1085, i64 1
  %1090 = ptrtoint %"class.SkSL::Variable"** %1089 to i64
  %1091 = sub i64 %1044, %1058
  %1092 = ashr exact i64 %1091, 3
  %1093 = sub nsw i64 0, %1092
  %1094 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %1085, i64 %1093
  %1095 = ptrtoint %"class.SkSL::Variable"** %1094 to i64
  %1096 = icmp sgt i64 %1091, 0
  br i1 %1096, label %1097, label %1100

1097:                                             ; preds = %1082
  %1098 = bitcast %"class.SkSL::Variable"** %1094 to i8*
  %1099 = inttoptr i64 %1058 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1098, i8* align 8 %1099, i64 %1091, i1 false) #11
  br label %1100

1100:                                             ; preds = %1097, %1082
  store i64 %1095, i64* %924, align 8
  store i64 %1090, i64* %941, align 8
  store i64 %1087, i64* %923, align 8
  %1101 = icmp eq i64 %1058, 0
  br i1 %1101, label %1104, label %1102

1102:                                             ; preds = %1100
  %1103 = inttoptr i64 %1058 to i8*
  call void @_ZdlPv(i8* %1103) #13
  br label %1104

1104:                                             ; preds = %1102, %1100, %1052
  %1105 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %1047, i64 1
  %1106 = icmp eq %"class.std::__1::unique_ptr.117"* %1105, %927
  br i1 %1106, label %947, label %1107

1107:                                             ; preds = %1104
  %1108 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %917, align 8
  %1109 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %918, align 8
  %1110 = ptrtoint %"class.SkSL::Variable"** %1108 to i64
  br label %1043

1111:                                             ; preds = %1164, %912
  %1112 = phi i64 [ %910, %912 ], [ %1167, %1164 ]
  %1113 = phi i64 [ 0, %912 ], [ %1165, %1164 ]
  %1114 = inttoptr i64 %1112 to %"class.std::__1::unique_ptr.117"*
  %1115 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %1114, i64 %1113, i32 0, i32 0, i32 0
  %1116 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %1115, align 8
  %1117 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1116, i64 0, i32 2
  %1118 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %1117, align 8
  %1119 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %913, align 8
  %1120 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %1119, i64 %1113
  %1121 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %1120, align 8
  %1122 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1121, i64 0, i32 2
  %1123 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %1122, align 8
  %1124 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1118, i64 0, i32 0
  %1125 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1123, i64 0, i32 0
  %1126 = call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %1124, %"struct.SkSL::Layout"* dereferenceable(72) %1125) #11
  br i1 %1126, label %1127, label %1133

1127:                                             ; preds = %1111
  %1128 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1118, i64 0, i32 1
  %1129 = load i32, i32* %1128, align 8
  %1130 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1123, i64 0, i32 1
  %1131 = load i32, i32* %1130, align 8
  %1132 = icmp eq i32 %1129, %1131
  br i1 %1132, label %1164, label %1133

1133:                                             ; preds = %1127, %1111
  %1134 = bitcast %"class.SkSL::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1134) #11
  %1135 = bitcast %"class.SkSL::String"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1135) #11
  %1136 = add nuw i64 %1113, 1
  call void @_ZN4SkSL9to_stringEm(%"class.SkSL::String"* nonnull sret %32, i64 %1136) #11
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %31, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.121, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %32) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %30, %"class.SkSL::String"* nonnull %31, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.122, i64 0, i64 0)) #11
  %1137 = bitcast %"class.SkSL::ErrorReporter"* %738 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %1138 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %1137, align 8
  %1139 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %1138, i64 2
  %1140 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %1139, align 8
  call void %1140(%"class.SkSL::ErrorReporter"* %738, i32 %2, %"class.SkSL::String"* nonnull %30) #11
  %1141 = bitcast %"class.SkSL::String"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1141, i64 0, i32 1, i32 0
  %1143 = load i8, i8* %1142, align 1
  %1144 = icmp slt i8 %1143, 0
  br i1 %1144, label %1145, label %1148

1145:                                             ; preds = %1133
  %1146 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1147 = load i8*, i8** %1146, align 8
  call void @_ZdlPv(i8* %1147) #13
  br label %1148

1148:                                             ; preds = %1145, %1133
  %1149 = bitcast %"class.SkSL::String"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1150 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1149, i64 0, i32 1, i32 0
  %1151 = load i8, i8* %1150, align 1
  %1152 = icmp slt i8 %1151, 0
  br i1 %1152, label %1153, label %1156

1153:                                             ; preds = %1148
  %1154 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1155 = load i8*, i8** %1154, align 8
  call void @_ZdlPv(i8* %1155) #13
  br label %1156

1156:                                             ; preds = %1153, %1148
  %1157 = bitcast %"class.SkSL::String"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1158 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1157, i64 0, i32 1, i32 0
  %1159 = load i8, i8* %1158, align 1
  %1160 = icmp slt i8 %1159, 0
  br i1 %1160, label %1161, label %1171

1161:                                             ; preds = %1156
  %1162 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1163 = load i8*, i8** %1162, align 8
  call void @_ZdlPv(i8* %1163) #13
  br label %1171

1164:                                             ; preds = %1127
  %1165 = add nuw i64 %1113, 1
  %1166 = load i64, i64* %830, align 8
  %1167 = load i64, i64* %831, align 8
  %1168 = sub i64 %1166, %1167
  %1169 = ashr exact i64 %1168, 3
  %1170 = icmp ult i64 %1165, %1169
  br i1 %1170, label %1111, label %1172

1171:                                             ; preds = %1161, %1156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1135) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1134) #11
  br label %1205

1172:                                             ; preds = %1164, %908
  %1173 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %835, i64 0, i32 1
  %1174 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %1173, align 8
  %1175 = icmp eq %"class.SkSL::FunctionDefinition"* %1174, null
  br i1 %1175, label %1205, label %1176

1176:                                             ; preds = %1172
  %1177 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %835, i64 0, i32 5
  %1178 = load i8, i8* %1177, align 8, !range !6
  %1179 = icmp eq i8 %1178, 0
  br i1 %1179, label %1180, label %1205

1180:                                             ; preds = %1176
  %1181 = bitcast %"class.SkSL::String"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1181) #11
  call void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* nonnull sret %34, %"class.SkSL::FunctionDeclaration"* %835) #11
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %33, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %34) #11
  %1182 = bitcast %"class.SkSL::ErrorReporter"* %738 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %1183 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %1182, align 8
  %1184 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %1183, i64 2
  %1185 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %1184, align 8
  call void %1185(%"class.SkSL::ErrorReporter"* %738, i32 %2, %"class.SkSL::String"* nonnull %33) #11
  %1186 = bitcast %"class.SkSL::String"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1187 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1186, i64 0, i32 1, i32 0
  %1188 = load i8, i8* %1187, align 1
  %1189 = icmp slt i8 %1188, 0
  br i1 %1189, label %1190, label %1193

1190:                                             ; preds = %1180
  %1191 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1192 = load i8*, i8** %1191, align 8
  call void @_ZdlPv(i8* %1192) #13
  br label %1193

1193:                                             ; preds = %1190, %1180
  %1194 = bitcast %"class.SkSL::String"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1195 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1194, i64 0, i32 1, i32 0
  %1196 = load i8, i8* %1195, align 1
  %1197 = icmp slt i8 %1196, 0
  br i1 %1197, label %1198, label %1201

1198:                                             ; preds = %1193
  %1199 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1200 = load i8*, i8** %1199, align 8
  call void @_ZdlPv(i8* %1200) #13
  br label %1201

1201:                                             ; preds = %1198, %1193
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1181) #11
  br label %1205

1202:                                             ; preds = %875, %849, %833
  %1203 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %834, i64 1
  %1204 = icmp eq %"class.SkSL::FunctionDeclaration"** %1203, %829
  br i1 %1204, label %1205, label %833

1205:                                             ; preds = %1202, %1172, %1176, %1201, %1171, %1042, %817, %747
  %1206 = phi %"class.SkSL::FunctionDeclaration"* [ null, %817 ], [ null, %1042 ], [ null, %1201 ], [ null, %1171 ], [ null, %747 ], [ %835, %1176 ], [ %835, %1172 ], [ null, %1202 ]
  %1207 = phi i32 [ 1, %817 ], [ 1, %1042 ], [ 1, %1201 ], [ 1, %1171 ], [ 0, %747 ], [ 0, %1176 ], [ 0, %1172 ], [ 0, %1202 ]
  %1208 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %743, align 8
  br label %1209

1209:                                             ; preds = %1205, %818
  %1210 = phi %"class.SkSL::FunctionDeclaration"* [ %1206, %1205 ], [ null, %818 ]
  %1211 = phi %"class.SkSL::FunctionDeclaration"** [ %1208, %1205 ], [ %824, %818 ]
  %1212 = phi i32 [ %1207, %1205 ], [ 0, %818 ]
  %1213 = icmp eq %"class.SkSL::FunctionDeclaration"** %1211, null
  br i1 %1213, label %1218, label %1214

1214:                                             ; preds = %1209
  %1215 = ptrtoint %"class.SkSL::FunctionDeclaration"** %1211 to i64
  %1216 = bitcast %"class.SkSL::FunctionDeclaration"*** %744 to i64*
  store i64 %1215, i64* %1216, align 8
  %1217 = bitcast %"class.SkSL::FunctionDeclaration"** %1211 to i8*
  call void @_ZdlPv(i8* %1217) #13
  br label %1218

1218:                                             ; preds = %1214, %1209
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %742) #11
  %1219 = icmp eq i32 %1212, 0
  br i1 %1219, label %1220, label %1222

1220:                                             ; preds = %1218, %730
  %1221 = phi %"class.SkSL::FunctionDeclaration"* [ null, %730 ], [ %1210, %1218 ]
  br label %1222

1222:                                             ; preds = %1218, %1220
  %1223 = phi %"class.SkSL::FunctionDeclaration"* [ %1221, %1220 ], [ %1210, %1218 ]
  %1224 = phi i1 [ true, %1220 ], [ false, %1218 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %733)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %734)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %735)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %736)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %737)
  br i1 %1224, label %1225, label %1400

1225:                                             ; preds = %1222
  %1226 = bitcast %"class.std::__1::vector.23"* %80 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1226) #11
  %1227 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %80, i64 0, i32 0, i32 0
  %1228 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %80, i64 0, i32 0, i32 1
  %1229 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %80, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1226, i8 0, i64 24, i1 false) #11
  %1230 = bitcast %"class.std::__1::unique_ptr.117"** %255 to i64*
  %1231 = load i64, i64* %1230, align 8
  %1232 = bitcast %"class.std::__1::vector.115"* %6 to i64*
  %1233 = load i64, i64* %1232, align 8
  %1234 = sub i64 %1231, %1233
  %1235 = ashr exact i64 %1234, 3
  %1236 = bitcast %"class.SkSL::Variable"*** %1229 to i64*
  %1237 = bitcast %"class.std::__1::vector.23"* %80 to i64*
  %1238 = icmp eq i64 %1234, 0
  %1239 = inttoptr i64 %1233 to %"class.std::__1::unique_ptr.117"*
  %1240 = inttoptr i64 %1231 to %"class.std::__1::unique_ptr.117"*
  br i1 %1238, label %1253, label %1241

1241:                                             ; preds = %1225
  %1242 = icmp ugt i64 %1235, 2305843009213693951
  br i1 %1242, label %1243, label %1244

1243:                                             ; preds = %1241
  call void @abort() #12
  unreachable

1244:                                             ; preds = %1241
  %1245 = call i8* @_Znwm(i64 %1234) #13
  %1246 = bitcast i8* %1245 to %"class.SkSL::Variable"**
  %1247 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %1246, i64 %1235
  %1248 = ptrtoint %"class.SkSL::Variable"** %1247 to i64
  %1249 = insertelement <2 x i8*> undef, i8* %1245, i32 0
  %1250 = shufflevector <2 x i8*> %1249, <2 x i8*> undef, <2 x i32> zeroinitializer
  %1251 = ptrtoint <2 x i8*> %1250 to <2 x i64>
  %1252 = bitcast %"class.std::__1::vector.23"* %80 to <2 x i64>*
  store <2 x i64> %1251, <2 x i64>* %1252, align 16
  store i64 %1248, i64* %1236, align 16
  br label %1253

1253:                                             ; preds = %1244, %1225
  %1254 = icmp eq %"class.std::__1::unique_ptr.117"* %1239, %1240
  br i1 %1254, label %1264, label %1255

1255:                                             ; preds = %1253
  %1256 = bitcast %"class.std::__1::unique_ptr.90"* %12 to i8*
  %1257 = bitcast %"class.std::__1::unique_ptr.90"* %12 to i64*
  %1258 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1, i64 0, i32 1, i32 0, i32 1
  %1259 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %1260 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1, i64 0, i32 1
  %1261 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %12, i64 0, i32 0, i32 0, i32 0
  %1262 = bitcast %"class.std::__1::unique_ptr.90"** %1258 to i64*
  %1263 = bitcast %"class.SkSL::Variable"*** %1228 to i64*
  br label %1266

1264:                                             ; preds = %1340, %1253
  %1265 = icmp eq %"class.SkSL::FunctionDeclaration"* %1223, null
  br i1 %1265, label %1343, label %1391

1266:                                             ; preds = %1255, %1340
  %1267 = phi %"class.std::__1::unique_ptr.117"* [ %1239, %1255 ], [ %1341, %1340 ]
  %1268 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %1267, i64 0, i32 0, i32 0, i32 0
  %1269 = bitcast %"class.std::__1::unique_ptr.117"* %1267 to i64*
  %1270 = load i64, i64* %1269, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %1268, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1256) #11
  store i64 %1270, i64* %1257, align 8
  %1271 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %1258, align 8
  %1272 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %1259, align 8
  %1273 = icmp ult %"class.std::__1::unique_ptr.90"* %1271, %1272
  br i1 %1273, label %1274, label %1278

1274:                                             ; preds = %1266
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %1261, align 8
  %1275 = bitcast %"class.std::__1::unique_ptr.90"* %1271 to i64*
  store i64 %1270, i64* %1275, align 8
  %1276 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %1271, i64 1
  %1277 = ptrtoint %"class.std::__1::unique_ptr.90"* %1276 to i64
  store i64 %1277, i64* %1262, align 8
  br label %1279

1278:                                             ; preds = %1266
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.88"* %1260, %"class.std::__1::unique_ptr.90"* nonnull dereferenceable(8) %12) #11
  br label %1279

1279:                                             ; preds = %1278, %1274
  %1280 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %1261, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %1261, align 8
  %1281 = icmp eq %"class.SkSL::Symbol"* %1280, null
  br i1 %1281, label %1287, label %1282

1282:                                             ; preds = %1279
  %1283 = bitcast %"class.SkSL::Symbol"* %1280 to void (%"class.SkSL::Symbol"*)***
  %1284 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %1283, align 8
  %1285 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %1284, i64 1
  %1286 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %1285, align 8
  call void %1286(%"class.SkSL::Symbol"* nonnull %1280) #11
  br label %1287

1287:                                             ; preds = %1279, %1282
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1256) #11
  %1288 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %1228, align 8
  %1289 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %1229, align 16
  %1290 = icmp ult %"class.SkSL::Variable"** %1288, %1289
  %1291 = ptrtoint %"class.SkSL::Variable"** %1289 to i64
  br i1 %1290, label %1292, label %1296

1292:                                             ; preds = %1287
  %1293 = bitcast %"class.SkSL::Variable"** %1288 to i64*
  store i64 %1270, i64* %1293, align 8
  %1294 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %1288, i64 1
  %1295 = ptrtoint %"class.SkSL::Variable"** %1294 to i64
  store i64 %1295, i64* %1263, align 8
  br label %1340

1296:                                             ; preds = %1287
  %1297 = ptrtoint %"class.SkSL::Variable"** %1288 to i64
  %1298 = load i64, i64* %1237, align 16
  %1299 = sub i64 %1297, %1298
  %1300 = ashr exact i64 %1299, 3
  %1301 = add nsw i64 %1300, 1
  %1302 = icmp ugt i64 %1301, 2305843009213693951
  br i1 %1302, label %1303, label %1305

1303:                                             ; preds = %1296
  %1304 = bitcast %"class.std::__1::vector.23"* %80 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1304) #12
  unreachable

1305:                                             ; preds = %1296
  %1306 = sub i64 %1291, %1298
  %1307 = ashr exact i64 %1306, 3
  %1308 = icmp ult i64 %1307, 1152921504606846975
  br i1 %1308, label %1309, label %1317

1309:                                             ; preds = %1305
  %1310 = ashr exact i64 %1306, 2
  %1311 = icmp ult i64 %1310, %1301
  %1312 = select i1 %1311, i64 %1301, i64 %1310
  %1313 = icmp eq i64 %1312, 0
  br i1 %1313, label %1322, label %1314

1314:                                             ; preds = %1309
  %1315 = icmp ugt i64 %1312, 2305843009213693951
  br i1 %1315, label %1316, label %1317

1316:                                             ; preds = %1314
  call void @abort() #12
  unreachable

1317:                                             ; preds = %1314, %1305
  %1318 = phi i64 [ %1312, %1314 ], [ 2305843009213693951, %1305 ]
  %1319 = shl i64 %1318, 3
  %1320 = call i8* @_Znwm(i64 %1319) #13
  %1321 = bitcast i8* %1320 to %"class.SkSL::Variable"**
  br label %1322

1322:                                             ; preds = %1317, %1309
  %1323 = phi i64 [ %1318, %1317 ], [ 0, %1309 ]
  %1324 = phi i8* [ %1320, %1317 ], [ null, %1309 ]
  %1325 = phi %"class.SkSL::Variable"** [ %1321, %1317 ], [ null, %1309 ]
  %1326 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %1325, i64 %1300
  %1327 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %1325, i64 %1323
  %1328 = ptrtoint %"class.SkSL::Variable"** %1327 to i64
  %1329 = bitcast %"class.SkSL::Variable"** %1326 to i64*
  store i64 %1270, i64* %1329, align 8
  %1330 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %1326, i64 1
  %1331 = ptrtoint %"class.SkSL::Variable"** %1330 to i64
  %1332 = ptrtoint %"class.SkSL::Variable"** %1325 to i64
  %1333 = icmp sgt i64 %1299, 0
  br i1 %1333, label %1334, label %1336

1334:                                             ; preds = %1322
  %1335 = inttoptr i64 %1298 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1324, i8* align 8 %1335, i64 %1299, i1 false) #11
  br label %1336

1336:                                             ; preds = %1334, %1322
  store i64 %1332, i64* %1237, align 16
  store i64 %1331, i64* %1263, align 8
  store i64 %1328, i64* %1236, align 16
  %1337 = icmp eq i64 %1298, 0
  br i1 %1337, label %1340, label %1338

1338:                                             ; preds = %1336
  %1339 = inttoptr i64 %1298 to i8*
  call void @_ZdlPv(i8* %1339) #13
  br label %1340

1340:                                             ; preds = %1292, %1336, %1338
  %1341 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %1267, i64 1
  %1342 = icmp eq %"class.std::__1::unique_ptr.117"* %1341, %1240
  br i1 %1342, label %1264, label %1266

1343:                                             ; preds = %1264
  %1344 = bitcast %"class.std::__1::vector.23"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1344)
  %1345 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 96) #11
  %1346 = bitcast i8* %1345 to %"class.SkSL::FunctionDeclaration"*
  %1347 = load i8*, i8** %81, align 8
  %1348 = load i64, i64* %82, align 8
  %1349 = bitcast %"class.std::__1::vector.23"* %80 to <2 x i64>*
  %1350 = load <2 x i64>, <2 x i64>* %1349, align 16
  %1351 = bitcast %"class.std::__1::vector.23"* %11 to <2 x i64>*
  store <2 x i64> %1350, <2 x i64>* %1351, align 16
  %1352 = load i64, i64* %1236, align 16
  %1353 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %1354 = bitcast %"class.SkSL::Variable"*** %1353 to i64*
  store i64 %1352, i64* %1354, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1226, i8 0, i64 24, i1 false) #11
  call void @_ZN4SkSL19FunctionDeclarationC2EiPKNS_9ModifiersENS_14StringFragmentENSt3__16vectorIPKNS_8VariableENS5_9allocatorIS9_EEEEPKNS_4TypeEb(%"class.SkSL::FunctionDeclaration"* %1346, i32 %2, %"struct.SkSL::Modifiers"* %3, i8* %1347, i64 %1348, %"class.std::__1::vector.23"* nonnull %11, %"class.SkSL::Type"* %7, i1 zeroext %8) #11
  %1355 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %11, i64 0, i32 0, i32 0
  %1356 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %1355, align 16
  %1357 = icmp eq %"class.SkSL::Variable"** %1356, null
  br i1 %1357, label %1363, label %1358

1358:                                             ; preds = %1343
  %1359 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %11, i64 0, i32 0, i32 1
  %1360 = bitcast %"class.SkSL::Variable"*** %1359 to i64*
  %1361 = ptrtoint %"class.SkSL::Variable"** %1356 to i64
  store i64 %1361, i64* %1360, align 8
  %1362 = bitcast %"class.SkSL::Variable"** %1356 to i8*
  call void @_ZdlPv(i8* %1362) #13
  br label %1363

1363:                                             ; preds = %1343, %1358
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1344)
  %1364 = ptrtoint i8* %1345 to i64
  %1365 = bitcast i8* %1345 to %"class.SkSL::Symbol"*
  call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %1, %"class.SkSL::Symbol"* %1365) #11
  %1366 = bitcast %"class.std::__1::unique_ptr.90"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1366) #11
  %1367 = bitcast %"class.std::__1::unique_ptr.90"* %10 to i64*
  store i64 %1364, i64* %1367, align 8
  %1368 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1, i64 0, i32 1, i32 0, i32 1
  %1369 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %1368, align 8
  %1370 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %1371 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %1370, align 8
  %1372 = icmp ult %"class.std::__1::unique_ptr.90"* %1369, %1371
  br i1 %1372, label %1373, label %1379

1373:                                             ; preds = %1363
  %1374 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %1374, align 8
  %1375 = bitcast %"class.std::__1::unique_ptr.90"* %1369 to i64*
  store i64 %1364, i64* %1375, align 8
  %1376 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %1369, i64 1
  %1377 = ptrtoint %"class.std::__1::unique_ptr.90"* %1376 to i64
  %1378 = bitcast %"class.std::__1::unique_ptr.90"** %1368 to i64*
  store i64 %1377, i64* %1378, align 8
  br label %1381

1379:                                             ; preds = %1363
  %1380 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.88"* %1380, %"class.std::__1::unique_ptr.90"* nonnull dereferenceable(8) %10) #11
  br label %1381

1381:                                             ; preds = %1379, %1373
  %1382 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %10, i64 0, i32 0, i32 0, i32 0
  %1383 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %1382, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %1382, align 8
  %1384 = icmp eq %"class.SkSL::Symbol"* %1383, null
  br i1 %1384, label %1390, label %1385

1385:                                             ; preds = %1381
  %1386 = bitcast %"class.SkSL::Symbol"* %1383 to void (%"class.SkSL::Symbol"*)***
  %1387 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %1386, align 8
  %1388 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %1387, i64 1
  %1389 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %1388, align 8
  call void %1389(%"class.SkSL::Symbol"* nonnull %1383) #11
  br label %1390

1390:                                             ; preds = %1385, %1381
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1366) #11
  br label %1391

1391:                                             ; preds = %1264, %1390
  %1392 = phi %"class.SkSL::FunctionDeclaration"* [ %1346, %1390 ], [ %1223, %1264 ]
  %1393 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %1227, align 16
  %1394 = icmp eq %"class.SkSL::Variable"** %1393, null
  br i1 %1394, label %1399, label %1395

1395:                                             ; preds = %1391
  %1396 = ptrtoint %"class.SkSL::Variable"** %1393 to i64
  %1397 = bitcast %"class.SkSL::Variable"*** %1228 to i64*
  store i64 %1396, i64* %1397, align 8
  %1398 = bitcast %"class.SkSL::Variable"** %1393 to i8*
  call void @_ZdlPv(i8* %1398) #13
  br label %1399

1399:                                             ; preds = %1391, %1395
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1226) #11
  br label %1400

1400:                                             ; preds = %729, %722, %687, %652, %639, %532, %508, %460, %430, %250, %88, %1222, %1399
  %1401 = phi %"class.SkSL::FunctionDeclaration"* [ %1392, %1399 ], [ null, %1222 ], [ null, %430 ], [ null, %88 ], [ null, %250 ], [ null, %460 ], [ null, %508 ], [ null, %532 ], [ null, %639 ], [ null, %652 ], [ null, %687 ], [ null, %722 ], [ null, %729 ]
  ret %"class.SkSL::FunctionDeclaration"* %1401
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4SkSL19FunctionDeclaration11mangledNameEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::FunctionDeclaration"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.SkSL::StringFragment"*
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"struct.SkSL::StringFragment"*
  %9 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 5
  %10 = load i8, i8* %9, align 8, !range !6
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 1
  %14 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %13, align 8
  %15 = icmp eq %"class.SkSL::FunctionDefinition"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %2, %12
  %17 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 6
  %18 = load i8, i8* %17, align 1, !range !6
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %49, label %20

20:                                               ; preds = %16, %12
  %21 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 0, i32 1, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 0, i32 1, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp ugt i64 %24, -17
  br i1 %25, label %26, label %28

26:                                               ; preds = %20
  %27 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %27) #12
  unreachable

28:                                               ; preds = %20
  %29 = icmp ult i64 %24, 23
  br i1 %29, label %38, label %30

30:                                               ; preds = %28
  %31 = add nuw i64 %24, 16
  %32 = and i64 %31, -16
  %33 = tail call i8* @_Znwm(i64 %32) #13
  %34 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %33, i8** %34, align 8
  %35 = or i64 %32, -9223372036854775808
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %24, i64* %37, align 8
  br label %44

38:                                               ; preds = %28
  %39 = trunc i64 %24 to i8
  %40 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  store i8 %39, i8* %41, align 1
  %42 = bitcast %"class.SkSL::String"* %0 to i8*
  %43 = icmp eq i64 %24, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %38, %30
  %45 = phi i8* [ %33, %30 ], [ %42, %38 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 1 %22, i64 %24, i1 false) #11
  br label %46

46:                                               ; preds = %38, %44
  %47 = phi i8* [ %42, %38 ], [ %45, %44 ]
  %48 = getelementptr inbounds i8, i8* %47, i64 %24
  store i8 0, i8* %48, align 1
  br label %92

49:                                               ; preds = %16
  %50 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #11
  %51 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 0, i32 1, i32 0
  %52 = bitcast i8** %51 to <2 x i64>*
  %53 = load <2 x i64>, <2 x i64>* %52, align 8
  store <2 x i64> %53, <2 x i64>* %3, align 16
  %54 = call zeroext i1 @_ZNK4SkSL14StringFragment8endsWithEPKc(%"struct.SkSL::StringFragment"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #11
  %55 = select i1 %54, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #11
  %56 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #11
  %57 = bitcast %"class.SkSL::String"* %6 to i8*
  %58 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #11
  %59 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #11
  %60 = bitcast i8** %51 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8
  store <2 x i64> %61, <2 x i64>* %7, align 16
  call void @_ZNK4SkSL14StringFragmentplEPKc(%"class.SkSL::String"* nonnull sret %6, %"struct.SkSL::StringFragment"* nonnull %8, i8* %55) #11
  %62 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 4
  %63 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %62, align 8
  %64 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %63, i64 0, i32 1
  %65 = load i8*, i8** %64, align 8
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::String"* nonnull %6, i8* %65) #11
  %66 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %49
  %71 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %72) #13
  br label %73

73:                                               ; preds = %49, %70
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #11
  %74 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 3, i32 0, i32 0
  %75 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %74, align 8
  %76 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 3, i32 0, i32 1
  %77 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %76, align 8
  %78 = icmp eq %"class.SkSL::Variable"** %75, %77
  br i1 %78, label %79, label %81

79:                                               ; preds = %81, %73
  %80 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* nonnull align 8 %56, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #11
  br label %92

81:                                               ; preds = %73, %81
  %82 = phi %"class.SkSL::Variable"** [ %90, %81 ], [ %75, %73 ]
  %83 = bitcast %"class.SkSL::Variable"** %82 to %"class.SkSL::Symbol"**
  %84 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %83, align 8
  %85 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %84, i64 0, i32 2
  %86 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %85, align 8
  %87 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 1
  %88 = load i8*, i8** %87, align 8
  %89 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* nonnull %5, i8* %88) #11
  %90 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %82, i64 1
  %91 = icmp eq %"class.SkSL::Variable"** %90, %77
  br i1 %91, label %79, label %81

92:                                               ; preds = %79, %46
  ret void
}

declare zeroext i1 @_ZNK4SkSL14StringFragment8endsWithEPKc(%"struct.SkSL::StringFragment"*, i8*) local_unnamed_addr #2

declare void @_ZNK4SkSL14StringFragmentplEPKc(%"class.SkSL::String"* sret, %"struct.SkSL::StringFragment"*, i8*) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #2

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::FunctionDeclaration"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = bitcast %"class.SkSL::String"* %3 to i8*
  %10 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %11 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 4
  %14 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %14, i64 0, i32 18
  %16 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %15, align 8, !noalias !13
  %17 = icmp eq %"class.SkSL::Type"* %16, null
  %18 = select i1 %17, %"class.SkSL::Type"* %14, %"class.SkSL::Type"* %16
  %19 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %18, i64 0, i32 0, i32 1, i32 0
  %20 = load i8*, i8** %19, align 8, !noalias !13
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %18, i64 0, i32 0, i32 1, i32 1
  %22 = load i64, i64* %21, align 8, !noalias !13
  %23 = icmp ugt i64 %22, -17
  br i1 %23, label %24, label %26

24:                                               ; preds = %2
  %25 = bitcast %"class.SkSL::String"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #12
  unreachable

26:                                               ; preds = %2
  %27 = icmp ult i64 %22, 23
  br i1 %27, label %36, label %28

28:                                               ; preds = %26
  %29 = add nuw i64 %22, 16
  %30 = and i64 %29, -16
  %31 = tail call i8* @_Znwm(i64 %30) #13
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %31, i8** %32, align 8, !alias.scope !13
  %33 = or i64 %30, -9223372036854775808
  %34 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %33, i64* %34, align 8, !alias.scope !13
  %35 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %35, align 8, !alias.scope !13
  br label %41

36:                                               ; preds = %26
  %37 = trunc i64 %22 to i8
  %38 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  store i8 %37, i8* %39, align 1, !alias.scope !13
  %40 = icmp eq i64 %22, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %36, %28
  %42 = phi i8* [ %31, %28 ], [ %12, %36 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %42, i8* align 1 %20, i64 %22, i1 false) #11
  br label %43

43:                                               ; preds = %36, %41
  %44 = phi i8* [ %12, %36 ], [ %42, %41 ]
  %45 = getelementptr inbounds i8, i8* %44, i64 %22
  store i8 0, i8* %45, align 1
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #11
  %46 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 0, i32 1, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 0, i32 1, i32 1
  %49 = load i64, i64* %48, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* %47, i64 %49) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #11
  %50 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %43
  %55 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %56) #13
  br label %57

57:                                               ; preds = %43, %54
  %58 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #13
  br label %65

65:                                               ; preds = %57, %62
  %66 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %72) #13
  br label %73

73:                                               ; preds = %65, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  %74 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #11
  %75 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 24, i1 false) #11
  %76 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 3, i32 0, i32 0
  %77 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %76, align 8
  %78 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 3, i32 0, i32 1
  %79 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %78, align 8
  %80 = icmp eq %"class.SkSL::Variable"** %77, %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %73
  %82 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %97

83:                                               ; preds = %73
  %84 = bitcast %"class.SkSL::String"* %7 to i8*
  %85 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = bitcast %"class.SkSL::String"* %7 to i16*
  %88 = getelementptr inbounds i8, i8* %84, i64 2
  %89 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = bitcast %"class.SkSL::String"* %8 to i8*
  %92 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %94 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  br label %106

97:                                               ; preds = %149, %81
  %98 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %82, %81 ], [ %89, %149 ]
  %99 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #11
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %97
  %104 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %104) #13
  br label %105

105:                                              ; preds = %97, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #11
  ret void

106:                                              ; preds = %83, %149
  %107 = phi %"class.SkSL::Variable"** [ %77, %83 ], [ %156, %149 ]
  %108 = bitcast %"class.SkSL::Variable"** %107 to %"class.SkSL::Symbol"**
  %109 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %108, align 8
  %110 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %6) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #11
  store i8 2, i8* %86, align 1
  store i16 8236, i16* %87, align 8
  store i8 0, i8* %88, align 2
  %111 = load i8, i8* %90, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %114) #13
  br label %115

115:                                              ; preds = %106, %113
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* nonnull align 8 %84, i64 24, i1 false) #11
  %116 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %109, i64 0, i32 2
  %117 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %116, align 8
  %118 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %117, i64 0, i32 18
  %119 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %118, align 8, !noalias !16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #11
  %120 = icmp eq %"class.SkSL::Type"* %119, null
  %121 = select i1 %120, %"class.SkSL::Type"* %117, %"class.SkSL::Type"* %119
  %122 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %121, i64 0, i32 0, i32 1, i32 0
  %123 = load i8*, i8** %122, align 8, !noalias !16
  %124 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %121, i64 0, i32 0, i32 1, i32 1
  %125 = load i64, i64* %124, align 8, !noalias !16
  %126 = icmp ugt i64 %125, -17
  br i1 %126, label %127, label %129

127:                                              ; preds = %115
  %128 = bitcast %"class.SkSL::String"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %128) #12
  unreachable

129:                                              ; preds = %115
  %130 = icmp ult i64 %125, 23
  br i1 %130, label %136, label %131

131:                                              ; preds = %129
  %132 = add nuw i64 %125, 16
  %133 = and i64 %132, -16
  %134 = call i8* @_Znwm(i64 %133) #13
  store i8* %134, i8** %92, align 8, !alias.scope !16
  %135 = or i64 %133, -9223372036854775808
  store i64 %135, i64* %93, align 8, !alias.scope !16
  store i64 %125, i64* %94, align 8, !alias.scope !16
  br label %139

136:                                              ; preds = %129
  %137 = trunc i64 %125 to i8
  store i8 %137, i8* %96, align 1, !alias.scope !16
  %138 = icmp eq i64 %125, 0
  br i1 %138, label %141, label %139

139:                                              ; preds = %136, %131
  %140 = phi i8* [ %134, %131 ], [ %91, %136 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %140, i8* align 1 %123, i64 %125, i1 false) #11
  br label %141

141:                                              ; preds = %136, %139
  %142 = phi i8* [ %91, %136 ], [ %140, %139 ]
  %143 = getelementptr inbounds i8, i8* %142, i64 %125
  store i8 0, i8* %143, align 1
  %144 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %8) #11
  %145 = load i8, i8* %96, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %141
  %148 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %148) #13
  br label %149

149:                                              ; preds = %141, %147
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #11
  %150 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #11
  %151 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %109, i64 0, i32 1, i32 0
  %152 = load i8*, i8** %151, align 8
  %153 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %109, i64 0, i32 1, i32 1
  %154 = load i64, i64* %153, align 8
  %155 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLENS_14StringFragmentE(%"class.SkSL::String"* %0, i8* %152, i64 %154) #11
  %156 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %107, i64 1
  %157 = icmp eq %"class.SkSL::Variable"** %156, %79
  br i1 %157, label %97, label %106
}

declare void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLENS_14StringFragmentE(%"class.SkSL::String"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4SkSL19FunctionDeclaration7matchesERKS0_(%"class.SkSL::FunctionDeclaration"* nocapture readonly, %"class.SkSL::FunctionDeclaration"* nocapture readonly dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.SkSL::StringFragment"*
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"struct.SkSL::StringFragment"*
  %7 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 0, i32 1, i32 0
  %9 = bitcast i8** %8 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  store <2 x i64> %10, <2 x i64>* %5, align 16
  %11 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 0, i32 1, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 0, i32 1, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = call zeroext i1 @_ZNK4SkSL14StringFragmentneES0_(%"struct.SkSL::StringFragment"* nonnull %6, i8* %12, i64 %14) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  br i1 %15, label %82, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 3
  %19 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 3, i32 0, i32 1
  %20 = bitcast %"class.SkSL::Variable"*** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.23"* %17 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 3, i32 0, i32 1
  %26 = bitcast %"class.SkSL::Variable"*** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector.23"* %18 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = icmp eq i64 %24, %30
  br i1 %31, label %32, label %82

32:                                               ; preds = %16
  %33 = icmp eq i64 %21, %23
  br i1 %33, label %82, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %18, i64 0, i32 0, i32 0
  %36 = bitcast <2 x i64>* %3 to i8*
  %37 = inttoptr i64 %23 to %"class.SkSL::Symbol"**
  %38 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %37, align 8
  %39 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %38, i64 0, i32 2
  %40 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %39, align 8
  %41 = inttoptr i64 %29 to %"class.SkSL::Symbol"**
  %42 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %41, align 8
  %43 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %42, i64 0, i32 2
  %44 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %43, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #11
  %45 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %40, i64 0, i32 0, i32 1, i32 0
  %46 = bitcast i8** %45 to <2 x i64>*
  %47 = load <2 x i64>, <2 x i64>* %46, align 8
  store <2 x i64> %47, <2 x i64>* %3, align 16
  %48 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %44, i64 0, i32 0, i32 1, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %44, i64 0, i32 0, i32 1, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = call zeroext i1 @_ZNK4SkSL14StringFragmentneES0_(%"struct.SkSL::StringFragment"* nonnull %4, i8* %49, i64 %51) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #11
  br i1 %52, label %82, label %53

53:                                               ; preds = %34, %60
  %54 = phi i64 [ %81, %60 ], [ 1, %34 ]
  %55 = load i64, i64* %20, align 8
  %56 = load i64, i64* %22, align 8
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = icmp ult i64 %54, %58
  br i1 %59, label %60, label %82

60:                                               ; preds = %53
  %61 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %35, align 8
  %62 = inttoptr i64 %56 to %"class.SkSL::Variable"**
  %63 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %62, i64 %54
  %64 = bitcast %"class.SkSL::Variable"** %63 to %"class.SkSL::Symbol"**
  %65 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %64, align 8
  %66 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %65, i64 0, i32 2
  %67 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %66, align 8
  %68 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %61, i64 %54
  %69 = bitcast %"class.SkSL::Variable"** %68 to %"class.SkSL::Symbol"**
  %70 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %69, align 8
  %71 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %70, i64 0, i32 2
  %72 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %71, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #11
  %73 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %67, i64 0, i32 0, i32 1, i32 0
  %74 = bitcast i8** %73 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 8
  store <2 x i64> %75, <2 x i64>* %3, align 16
  %76 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %72, i64 0, i32 0, i32 1, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %72, i64 0, i32 0, i32 1, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = call zeroext i1 @_ZNK4SkSL14StringFragmentneES0_(%"struct.SkSL::StringFragment"* nonnull %4, i8* %77, i64 %79) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #11
  %81 = add nuw i64 %54, 1
  br i1 %80, label %82, label %53

82:                                               ; preds = %53, %60, %34, %32, %2, %16
  %83 = phi i1 [ false, %16 ], [ false, %2 ], [ true, %32 ], [ false, %34 ], [ false, %60 ], [ true, %53 ]
  ret i1 %83
}

declare zeroext i1 @_ZNK4SkSL14StringFragmentneES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4SkSL19FunctionDeclaration19determineFinalTypesERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EEPS1_ILi8EPKNS_4TypeELb0EEPSD_(%"class.SkSL::FunctionDeclaration"* nocapture readonly, %class.SkSTArray* nocapture readonly dereferenceable(32), %class.SkSTArray.135*, %"class.SkSL::Type"** nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkSTArray.135, %class.SkSTArray.135* %2, i64 0, i32 0, i32 0, i64 64
  %6 = bitcast i8* %5 to %class.SkTArray.137*
  %7 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %1, i64 0, i32 0, i32 0, i64 16
  %8 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %1, i64 0, i32 0, i32 0, i64 24
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = lshr i64 %10, 1
  %12 = trunc i64 %11 to i32
  %13 = and i32 %12, 2147483647
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %23, label %15

15:                                               ; preds = %4
  tail call void @_ZN8SkTArrayIPKN4SkSL4TypeELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.137* %6, i32 %13, i32 0) #11
  %16 = getelementptr inbounds %class.SkSTArray.135, %class.SkSTArray.135* %2, i64 0, i32 0, i32 0, i64 72
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = shl i64 %18, 32
  %20 = and i64 %19, 4294967296
  %21 = and i64 %18, -4294967297
  %22 = or i64 %20, %21
  store i64 %22, i64* %17, align 8
  br label %28

23:                                               ; preds = %4
  %24 = getelementptr inbounds %class.SkSTArray.135, %class.SkSTArray.135* %2, i64 0, i32 0, i32 0, i64 72
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, -4294967297
  store i64 %27, i64* %25, align 8
  br label %28

28:                                               ; preds = %15, %23
  %29 = load i64, i64* %9, align 8
  %30 = and i64 %29, 4294967294
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %128, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 3, i32 0, i32 0
  %34 = bitcast i8* %5 to %"class.SkSL::Type"***
  %35 = getelementptr inbounds %class.SkSTArray.135, %class.SkSTArray.135* %2, i64 0, i32 0, i32 0, i64 72
  %36 = bitcast i8* %35 to i64*
  %37 = bitcast i8* %7 to %"class.std::__1::unique_ptr.44"**
  br label %38

38:                                               ; preds = %32, %118
  %39 = phi i64 [ 0, %32 ], [ %123, %118 ]
  %40 = phi i32 [ -1, %32 ], [ %121, %118 ]
  %41 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %33, align 8
  %42 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %41, i64 %39
  %43 = bitcast %"class.SkSL::Variable"** %42 to %"class.SkSL::Symbol"**
  %44 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %43, align 8
  %45 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %44, i64 0, i32 2
  %46 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %45, align 8
  %47 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %46, i64 0, i32 3
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 3
  br i1 %49, label %61, label %50

50:                                               ; preds = %38
  %51 = ptrtoint %"class.SkSL::Type"* %46 to i64
  tail call void @_ZN8SkTArrayIPKN4SkSL4TypeELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.137* %6, i32 1, i32 1) #11
  %52 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %34, align 8
  %53 = load i64, i64* %36, align 8
  %54 = lshr i64 %53, 1
  %55 = and i64 %54, 2147483647
  %56 = getelementptr inbounds %"class.SkSL::Type"*, %"class.SkSL::Type"** %52, i64 %55
  %57 = add i64 %53, 2
  %58 = and i64 %57, 4294967294
  %59 = and i64 %53, -4294967295
  %60 = or i64 %58, %59
  store i64 %60, i64* %36, align 8
  br label %118

61:                                               ; preds = %38
  %62 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %46, i64 0, i32 7
  %63 = icmp eq i32 %40, -1
  br i1 %63, label %64, label %101

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %46, i64 0, i32 7, i32 0, i32 1
  %66 = bitcast %"class.SkSL::Type"*** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.std::__1::vector.30"* %62 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %67, %69
  br i1 %70, label %145, label %71

71:                                               ; preds = %64
  %72 = shl i64 %39, 32
  %73 = ashr exact i64 %72, 32
  %74 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %62, i64 0, i32 0, i32 0
  br label %75

75:                                               ; preds = %71, %91
  %76 = phi i64 [ 0, %71 ], [ %92, %91 ]
  %77 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %37, align 8
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %77, i64 %73, i32 0, i32 0, i32 0
  %79 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %78, align 8
  %80 = bitcast %"class.SkSL::Expression"* %79 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %81 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %81, i64 3
  %83 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %82, align 8
  %84 = tail call dereferenceable(184) %"class.SkSL::Type"* %83(%"class.SkSL::Expression"* %79) #11
  %85 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %74, align 8
  %86 = getelementptr inbounds %"class.SkSL::Type"*, %"class.SkSL::Type"** %85, i64 %76
  %87 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %86, align 8
  %88 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %84, %"class.SkSL::Type"* dereferenceable(184) %87) #11
  %89 = extractvalue { i64, i8 } %88, 1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %98, label %91

91:                                               ; preds = %75
  %92 = add nuw i64 %76, 1
  %93 = load i64, i64* %66, align 8
  %94 = load i64, i64* %68, align 8
  %95 = sub i64 %93, %94
  %96 = ashr exact i64 %95, 3
  %97 = icmp ult i64 %92, %96
  br i1 %97, label %75, label %145

98:                                               ; preds = %75
  %99 = trunc i64 %76 to i32
  %100 = icmp eq i32 %99, -1
  br i1 %100, label %145, label %101

101:                                              ; preds = %98, %61
  %102 = phi i32 [ %99, %98 ], [ %40, %61 ]
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %62, i64 0, i32 0, i32 0
  %105 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %104, align 8
  %106 = getelementptr inbounds %"class.SkSL::Type"*, %"class.SkSL::Type"** %105, i64 %103
  tail call void @_ZN8SkTArrayIPKN4SkSL4TypeELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.137* %6, i32 1, i32 1) #11
  %107 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %34, align 8
  %108 = load i64, i64* %36, align 8
  %109 = lshr i64 %108, 1
  %110 = and i64 %109, 2147483647
  %111 = getelementptr inbounds %"class.SkSL::Type"*, %"class.SkSL::Type"** %107, i64 %110
  %112 = add i64 %108, 2
  %113 = and i64 %112, 4294967294
  %114 = and i64 %108, -4294967295
  %115 = or i64 %113, %114
  store i64 %115, i64* %36, align 8
  %116 = bitcast %"class.SkSL::Type"** %106 to i64*
  %117 = load i64, i64* %116, align 8
  br label %118

118:                                              ; preds = %50, %101
  %119 = phi %"class.SkSL::Type"** [ %56, %50 ], [ %111, %101 ]
  %120 = phi i64 [ %51, %50 ], [ %117, %101 ]
  %121 = phi i32 [ %40, %50 ], [ %102, %101 ]
  %122 = bitcast %"class.SkSL::Type"** %119 to i64*
  store i64 %120, i64* %122, align 8
  %123 = add nuw nsw i64 %39, 1
  %124 = load i64, i64* %9, align 8
  %125 = lshr i64 %124, 1
  %126 = and i64 %125, 2147483647
  %127 = icmp ult i64 %123, %126
  br i1 %127, label %38, label %128

128:                                              ; preds = %118, %28
  %129 = phi i32 [ -1, %28 ], [ %121, %118 ]
  %130 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 4
  %131 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %130, align 8
  %132 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %131, i64 0, i32 3
  %133 = load i32, i32* %132, align 8
  %134 = icmp eq i32 %133, 3
  br i1 %134, label %135, label %143

135:                                              ; preds = %128
  %136 = icmp eq i32 %129, -1
  br i1 %136, label %145, label %137

137:                                              ; preds = %135
  %138 = sext i32 %129 to i64
  %139 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %131, i64 0, i32 7, i32 0, i32 0
  %140 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %139, align 8
  %141 = getelementptr inbounds %"class.SkSL::Type"*, %"class.SkSL::Type"** %140, i64 %138
  %142 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %141, align 8
  br label %143

143:                                              ; preds = %128, %137
  %144 = phi %"class.SkSL::Type"* [ %142, %137 ], [ %131, %128 ]
  store %"class.SkSL::Type"* %144, %"class.SkSL::Type"** %3, align 8
  br label %145

145:                                              ; preds = %64, %98, %91, %143, %135
  %146 = phi i1 [ true, %143 ], [ false, %135 ], [ false, %91 ], [ false, %98 ], [ false, %64 ]
  ret i1 %146
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL19FunctionDeclarationD2Ev(%"class.SkSL::FunctionDeclaration"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL19FunctionDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %3, align 8
  %5 = icmp eq %"class.SkSL::Variable"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.SkSL::Variable"** %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast %"class.SkSL::Variable"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.SkSL::Variable"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL19FunctionDeclarationD0Ev(%"class.SkSL::FunctionDeclaration"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL19FunctionDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %3, align 8
  %5 = icmp eq %"class.SkSL::Variable"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.SkSL::Variable"** %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast %"class.SkSL::Variable"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.SkSL::Variable"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.SkSL::FunctionDeclaration"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %12) #11
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.152"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_13IntrinsicKindEEENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS3_JRKNS_4pairIKS3_S4_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.148"*, %"class.SkSL::String"* dereferenceable(24), %"struct.std::__1::pair.172"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.SkSL::String"* %1 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  %18 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %15, i64 %16) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.148", %"class.std::__1::__hash_table.148"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %65, label %22

22:                                               ; preds = %3
  %23 = call i64 @llvm.ctpop.i64(i64 %20) #11, !range !19
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.148", %"class.std::__1::__hash_table.148"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.152"**, %"struct.std::__1::__hash_node_base.152"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.152"* %37, null
  br i1 %38, label %65, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.152"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.152"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.152"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %65

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.152"* %62 to %"class.SkSL::String"*
  %64 = call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %63, %"class.SkSL::String"* dereferenceable(24) %1) #11
  br i1 %64, label %167, label %41

65:                                               ; preds = %41, %58, %32, %3
  %66 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %67 = call i8* @_Znwm(i64 48) #13, !noalias !20
  %68 = getelementptr inbounds i8, i8* %67, i64 16
  %69 = bitcast %"struct.std::__1::pair.172"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1, !noalias !20
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %65
  %74 = bitcast %"struct.std::__1::pair.172"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %74, i64 24, i1 false) #11, !noalias !20
  br label %81

75:                                               ; preds = %65
  %76 = bitcast i8* %68 to %"class.std::__1::basic_string"*
  %77 = getelementptr inbounds %"struct.std::__1::pair.172", %"struct.std::__1::pair.172"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8, !noalias !20
  %79 = getelementptr inbounds %"struct.std::__1::pair.172", %"struct.std::__1::pair.172"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8, !noalias !20
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %76, i8* %78, i64 %80) #11, !noalias !20
  br label %81

81:                                               ; preds = %73, %75
  %82 = getelementptr inbounds i8, i8* %67, i64 40
  %83 = bitcast i8* %82 to i32*
  %84 = getelementptr inbounds %"struct.std::__1::pair.172", %"struct.std::__1::pair.172"* %2, i64 0, i32 1
  %85 = load i32, i32* %84, align 8, !noalias !20
  store i32 %85, i32* %83, align 8, !noalias !20
  %86 = getelementptr inbounds i8, i8* %67, i64 8
  %87 = bitcast i8* %86 to i64*
  store i64 %18, i64* %87, align 8, !noalias !20
  %88 = bitcast i8* %67 to %"struct.std::__1::__hash_node_base.152"**
  store %"struct.std::__1::__hash_node_base.152"* null, %"struct.std::__1::__hash_node_base.152"** %88, align 8, !noalias !20
  %89 = getelementptr inbounds %"class.std::__1::__hash_table.148", %"class.std::__1::__hash_table.148"* %0, i64 0, i32 2, i32 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, 1
  %92 = uitofp i64 %91 to float
  %93 = uitofp i64 %20 to float
  %94 = getelementptr inbounds %"class.std::__1::__hash_table.148", %"class.std::__1::__hash_table.148"* %0, i64 0, i32 3, i32 0, i32 0
  %95 = load float, float* %94, align 4
  %96 = fmul float %95, %93
  %97 = fcmp olt float %96, %92
  %98 = or i1 %21, %97
  br i1 %98, label %99, label %122

99:                                               ; preds = %81
  %100 = shl i64 %20, 1
  %101 = icmp ult i64 %20, 3
  %102 = call i64 @llvm.ctpop.i64(i64 %20) #11, !range !19
  %103 = icmp ugt i64 %102, 1
  %104 = or i1 %101, %103
  %105 = zext i1 %104 to i64
  %106 = or i64 %100, %105
  %107 = fdiv float %92, %95
  %108 = call float @llvm.ceil.f32(float %107) #11
  %109 = fptoui float %108 to i64
  %110 = icmp ult i64 %106, %109
  %111 = select i1 %110, i64 %109, i64 %106
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_13IntrinsicKindEEENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.148"* %0, i64 %111)
  %112 = load i64, i64* %19, align 8
  %113 = call i64 @llvm.ctpop.i64(i64 %112) #11, !range !19
  %114 = icmp ugt i64 %113, 1
  br i1 %114, label %118, label %115

115:                                              ; preds = %99
  %116 = add i64 %112, -1
  %117 = and i64 %116, %18
  br label %122

118:                                              ; preds = %99
  %119 = icmp ult i64 %18, %112
  br i1 %119, label %122, label %120

120:                                              ; preds = %118
  %121 = urem i64 %18, %112
  br label %122

122:                                              ; preds = %120, %118, %115, %81
  %123 = phi i64 [ %20, %81 ], [ %112, %115 ], [ %112, %118 ], [ %112, %120 ]
  %124 = phi i64 [ %66, %81 ], [ %117, %115 ], [ %18, %118 ], [ %121, %120 ]
  %125 = getelementptr inbounds %"class.std::__1::__hash_table.148", %"class.std::__1::__hash_table.148"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.152"**, %"struct.std::__1::__hash_node_base.152"*** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %126, i64 %124
  %128 = load %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %127, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.152"* %128, null
  br i1 %129, label %130, label %156

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"class.std::__1::__hash_table.148", %"class.std::__1::__hash_table.148"* %0, i64 0, i32 1, i32 0, i32 0
  %132 = bitcast %"struct.std::__1::__hash_node_base.152"* %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast i8* %67 to i64*
  store i64 %133, i64* %134, align 8
  %135 = bitcast %"struct.std::__1::__hash_node_base.152"* %131 to i8**
  store i8* %67, i8** %135, align 8
  store %"struct.std::__1::__hash_node_base.152"* %131, %"struct.std::__1::__hash_node_base.152"** %127, align 8
  %136 = load %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %88, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.152"* %136, null
  br i1 %137, label %163, label %138

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %136, i64 1
  %140 = bitcast %"struct.std::__1::__hash_node_base.152"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = call i64 @llvm.ctpop.i64(i64 %123) #11, !range !19
  %143 = icmp ugt i64 %142, 1
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = add i64 %123, -1
  %146 = and i64 %141, %145
  br label %151

147:                                              ; preds = %138
  %148 = icmp ult i64 %141, %123
  br i1 %148, label %151, label %149

149:                                              ; preds = %147
  %150 = urem i64 %141, %123
  br label %151

151:                                              ; preds = %144, %147, %149
  %152 = phi i64 [ %146, %144 ], [ %150, %149 ], [ %141, %147 ]
  %153 = load %"struct.std::__1::__hash_node_base.152"**, %"struct.std::__1::__hash_node_base.152"*** %125, align 8
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %153, i64 %152
  %155 = bitcast %"struct.std::__1::__hash_node_base.152"** %154 to i8**
  br label %161

156:                                              ; preds = %122
  %157 = bitcast %"struct.std::__1::__hash_node_base.152"* %128 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast i8* %67 to i64*
  store i64 %158, i64* %159, align 8
  %160 = bitcast %"struct.std::__1::__hash_node_base.152"* %128 to i8**
  br label %161

161:                                              ; preds = %151, %156
  %162 = phi i8** [ %160, %156 ], [ %155, %151 ]
  store i8* %67, i8** %162, align 8
  br label %163

163:                                              ; preds = %161, %130
  %164 = bitcast i8* %67 to %"struct.std::__1::__hash_node_base.152"*
  %165 = load i64, i64* %89, align 8
  %166 = add i64 %165, 1
  store i64 %166, i64* %89, align 8
  br label %167

167:                                              ; preds = %61, %163
  %168 = phi i8 [ 1, %163 ], [ 0, %61 ]
  %169 = phi %"struct.std::__1::__hash_node_base.152"* [ %164, %163 ], [ %44, %61 ]
  %170 = insertvalue { %"struct.std::__1::__hash_node_base.152"*, i8 } undef, %"struct.std::__1::__hash_node_base.152"* %169, 0
  %171 = insertvalue { %"struct.std::__1::__hash_node_base.152"*, i8 } %170, i8 %168, 1
  ret { %"struct.std::__1::__hash_node_base.152"*, i8 } %171
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_13IntrinsicKindEEENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.148"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !19
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.148", %"class.std::__1::__hash_table.148"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_13IntrinsicKindEEENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.148"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !19
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.148", %"class.std::__1::__hash_table.148"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.148", %"class.std::__1::__hash_table.148"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !19
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_13IntrinsicKindEEENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.148"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_13IntrinsicKindEEENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.148"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.148", %"class.std::__1::__hash_table.148"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %141, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.148", %"class.std::__1::__hash_table.148"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.152"**, %"struct.std::__1::__hash_node_base.152"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.148"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.152"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.152"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.154", %"class.std::__1::__bucket_list_deallocator.154"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.152"**, %"struct.std::__1::__hash_node_base.152"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.152"* null, %"struct.std::__1::__hash_node_base.152"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !23

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.148", %"class.std::__1::__hash_table.148"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.152"* %38, null
  br i1 %39, label %149, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.152"**, %"struct.std::__1::__hash_node_base.152"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.152"* null, %"struct.std::__1::__hash_node_base.152"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.152"**, %"struct.std::__1::__hash_node_base.152"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.152"* null, %"struct.std::__1::__hash_node_base.152"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.152"**, %"struct.std::__1::__hash_node_base.152"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.152"* null, %"struct.std::__1::__hash_node_base.152"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.152"**, %"struct.std::__1::__hash_node_base.152"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.152"* null, %"struct.std::__1::__hash_node_base.152"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.152"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !19
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.152"**, %"struct.std::__1::__hash_node_base.152"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.152"* %36, %"struct.std::__1::__hash_node_base.152"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.152"* %75, null
  br i1 %76, label %149, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %135
  %80 = phi %"struct.std::__1::__hash_node_base.152"* [ %75, %77 ], [ %139, %135 ]
  %81 = phi i64 [ %71, %77 ], [ %137, %135 ]
  %82 = phi %"struct.std::__1::__hash_node_base.152"* [ %38, %77 ], [ %136, %135 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.152"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %135, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.152"**, %"struct.std::__1::__hash_node_base.152"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.152"* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.152"* %102, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.152"* %105 to %"class.SkSL::String"*
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %102, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base.152"* %107 to %"class.SkSL::String"*
  %109 = tail call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %106, %"class.SkSL::String"* dereferenceable(24) %108) #11
  br i1 %109, label %115, label %121

110:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.152"* %82, %"struct.std::__1::__hash_node_base.152"** %97, align 8
  br label %135

111:                                              ; preds = %115
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %119, i64 2
  %113 = bitcast %"struct.std::__1::__hash_node_base.152"* %112 to %"class.SkSL::String"*
  %114 = tail call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %106, %"class.SkSL::String"* dereferenceable(24) %113) #11
  br i1 %114, label %115, label %121

115:                                              ; preds = %104, %111
  %116 = phi %"struct.std::__1::__hash_node_base.152"** [ %118, %111 ], [ %101, %104 ]
  %117 = load %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %117, i64 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.152"* %119, null
  br i1 %120, label %121, label %111

121:                                              ; preds = %115, %111, %104, %100
  %122 = phi %"struct.std::__1::__hash_node_base.152"* [ %80, %100 ], [ %80, %104 ], [ %117, %111 ], [ %117, %115 ]
  %123 = bitcast %"struct.std::__1::__hash_node_base.152"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::__hash_node_base.152"* %82 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.std::__1::__hash_node_base.152"**, %"struct.std::__1::__hash_node_base.152"*** %11, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %126, i64 %93
  %128 = bitcast %"struct.std::__1::__hash_node_base.152"** %127 to i64**
  %129 = load i64*, i64** %128, align 8
  %130 = load i64, i64* %129, align 8
  store i64 %130, i64* %123, align 8
  %131 = load %"struct.std::__1::__hash_node_base.152"**, %"struct.std::__1::__hash_node_base.152"*** %11, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %131, i64 %93
  %133 = load %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %132, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %133, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.152"* %80, %"struct.std::__1::__hash_node_base.152"** %134, align 8
  br label %135

135:                                              ; preds = %92, %121, %110
  %136 = phi %"struct.std::__1::__hash_node_base.152"* [ %80, %110 ], [ %82, %121 ], [ %80, %92 ]
  %137 = phi i64 [ %93, %110 ], [ %81, %121 ], [ %81, %92 ]
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %136, i64 0, i32 0
  %139 = load %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %138, align 8
  %140 = icmp eq %"struct.std::__1::__hash_node_base.152"* %139, null
  br i1 %140, label %149, label %79

141:                                              ; preds = %2
  %142 = getelementptr inbounds %"class.std::__1::__hash_table.148", %"class.std::__1::__hash_table.148"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = load %"struct.std::__1::__hash_node_base.152"**, %"struct.std::__1::__hash_node_base.152"*** %142, align 8
  store %"struct.std::__1::__hash_node_base.152"** null, %"struct.std::__1::__hash_node_base.152"*** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.152"** %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %141
  %146 = bitcast %"struct.std::__1::__hash_node_base.152"** %143 to i8*
  tail call void @_ZdlPv(i8* %146) #13
  br label %147

147:                                              ; preds = %141, %145
  %148 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.154", %"class.std::__1::__bucket_list_deallocator.154"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %148, align 8
  br label %149

149:                                              ; preds = %135, %70, %35, %147
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.152"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_13IntrinsicKindEEENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.148"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.SkSL::String"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #11
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #11
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.148", %"class.std::__1::__hash_table.148"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %68, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #11, !range !19
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.148", %"class.std::__1::__hash_table.148"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.152"**, %"struct.std::__1::__hash_node_base.152"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.152"* %36, null
  br i1 %37, label %68, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.152"* %40, null
  br i1 %41, label %68, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.152"* [ %40, %42 ], [ %66, %64 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base.152"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %17, %48
  br i1 %49, label %60, label %50

50:                                               ; preds = %44
  br i1 %23, label %53, label %51

51:                                               ; preds = %50
  %52 = and i64 %48, %43
  br label %57

53:                                               ; preds = %50
  %54 = icmp ult i64 %48, %19
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %48, %19
  br label %57

57:                                               ; preds = %51, %53, %55
  %58 = phi i64 [ %52, %51 ], [ %56, %55 ], [ %48, %53 ]
  %59 = icmp eq i64 %58, %32
  br i1 %59, label %64, label %68

60:                                               ; preds = %44
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %45, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base.152"* %61 to %"class.SkSL::String"*
  %63 = call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %62, %"class.SkSL::String"* dereferenceable(24) %1) #11
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %60
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.152", %"struct.std::__1::__hash_node_base.152"* %45, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.152"*, %"struct.std::__1::__hash_node_base.152"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.152"* %66, null
  br i1 %67, label %68, label %44

68:                                               ; preds = %60, %64, %57, %38, %2, %31
  %69 = phi %"struct.std::__1::__hash_node_base.152"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %45, %60 ], [ null, %64 ], [ null, %57 ]
  ret %"struct.std::__1::__hash_node_base.152"* %69
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

declare void @_ZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEii(%"class.SkSL::Context"* dereferenceable(744), i32, %"struct.SkSL::Modifiers"* dereferenceable(80), i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"*, i32, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = tail call i64 @strlen(i8* %2) #11
  %6 = icmp ugt i64 %5, -17
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = bitcast %"class.SkSL::String"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %8) #12
  unreachable

9:                                                ; preds = %3
  %10 = icmp ult i64 %5, 23
  br i1 %10, label %20, label %11

11:                                               ; preds = %9
  %12 = add nuw i64 %5, 16
  %13 = and i64 %12, -16
  %14 = tail call i8* @_Znwm(i64 %13) #13
  %15 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = or i64 %13, -9223372036854775808
  %17 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %5, i64* %18, align 8
  %19 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

20:                                               ; preds = %9
  %21 = trunc i64 %5 to i8
  %22 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = bitcast %"class.SkSL::String"* %4 to i8*
  %25 = icmp eq i64 %5, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20, %11
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %19, %11 ]
  %28 = phi i8* [ %24, %20 ], [ %14, %11 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %2, i64 %5, i1 false) #11
  br label %29

29:                                               ; preds = %20, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %27, %26 ]
  %31 = phi i8* [ %24, %20 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %5
  store i8 0, i8* %32, align 1
  %33 = bitcast %"class.SkSL::ErrorReporter"* %0 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %34 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %34, i64 2
  %36 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %35, align 8
  call void %36(%"class.SkSL::ErrorReporter"* %0, i32 %1, %"class.SkSL::String"* nonnull %4) #11
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #13
  br label %43

43:                                               ; preds = %29, %40
  ret void
}

declare void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret, i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK4SkSL4Type17isOrContainsArrayEv(%"class.SkSL::Type"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.67"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.63"*, %"struct.SkSL::Modifiers"* dereferenceable(80), %"struct.SkSL::Modifiers"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = shl nsw i64 %9, 8
  %11 = xor i64 %10, %6
  %12 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = shl nsw i64 %14, 16
  %16 = xor i64 %11, %15
  %17 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %74, label %20

20:                                               ; preds = %3
  %21 = tail call i64 @llvm.ctpop.i64(i64 %18) #11, !range !19
  %22 = icmp ugt i64 %21, 1
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = add i64 %18, -1
  %25 = and i64 %16, %24
  br label %30

26:                                               ; preds = %20
  %27 = icmp ult i64 %16, %18
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = urem i64 %16, %18
  br label %30

30:                                               ; preds = %23, %26, %28
  %31 = phi i64 [ %25, %23 ], [ %29, %28 ], [ %16, %26 ]
  %32 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %33, i64 %31
  %35 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base.67"* %35, null
  br i1 %36, label %74, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %35, i64 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.67"* %39, null
  br i1 %40, label %74, label %41

41:                                               ; preds = %37
  %42 = add i64 %18, -1
  %43 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0
  br label %44

44:                                               ; preds = %41, %70
  %45 = phi %"struct.std::__1::__hash_node_base.67"* [ %39, %41 ], [ %72, %70 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base.67"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %16
  br i1 %49, label %60, label %50

50:                                               ; preds = %44
  br i1 %22, label %53, label %51

51:                                               ; preds = %50
  %52 = and i64 %48, %42
  br label %57

53:                                               ; preds = %50
  %54 = icmp ult i64 %48, %18
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %48, %18
  br label %57

57:                                               ; preds = %51, %53, %55
  %58 = phi i64 [ %52, %51 ], [ %56, %55 ], [ %48, %53 ]
  %59 = icmp eq i64 %58, %31
  br i1 %59, label %60, label %74

60:                                               ; preds = %44, %57
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %45, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base.67"* %61 to %"struct.SkSL::Layout"*
  %63 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %62, %"struct.SkSL::Layout"* dereferenceable(72) %43) #11
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %45, i64 11
  %66 = bitcast %"struct.std::__1::__hash_node_base.67"* %65 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = load i32, i32* %4, align 8
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %160, label %70

70:                                               ; preds = %64, %60
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %45, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.67"* %72, null
  br i1 %73, label %74, label %44

74:                                               ; preds = %57, %70, %37, %30, %3
  %75 = phi i64 [ %31, %30 ], [ -6148914691236517206, %3 ], [ %31, %37 ], [ %31, %70 ], [ %31, %57 ]
  %76 = tail call i8* @_Znwm(i64 96) #13, !noalias !25
  %77 = getelementptr inbounds i8, i8* %76, i64 16
  %78 = bitcast %"struct.SkSL::Modifiers"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 80, i1 false) #11, !noalias !25
  %79 = getelementptr inbounds i8, i8* %76, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %16, i64* %80, align 8, !noalias !25
  %81 = bitcast i8* %76 to %"struct.std::__1::__hash_node_base.67"**
  store %"struct.std::__1::__hash_node_base.67"* null, %"struct.std::__1::__hash_node_base.67"** %81, align 8, !noalias !25
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %18 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %19, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %74
  %93 = shl i64 %18, 1
  %94 = icmp ult i64 %18, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %18) #11, !range !19
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.63"* %0, i64 %104)
  %105 = load i64, i64* %17, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !19
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %16
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %16, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %16, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %74
  %116 = phi i64 [ %18, %74 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %75, %74 ], [ %110, %108 ], [ %16, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.67"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.67"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %76 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.67"* %124 to i8**
  store i8* %76, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.67"* %124, %"struct.std::__1::__hash_node_base.67"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.67"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.67"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !19
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.67"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.67"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %76 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.67"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %76, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %76 to %"struct.std::__1::__hash_node_base.67"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.67"* [ %157, %156 ], [ %45, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.67"*, i8 } undef, %"struct.std::__1::__hash_node_base.67"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.67"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.67"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.63"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !19
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.63"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !19
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !19
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.63"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"*, %"struct.SkSL::Layout"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %81

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %81

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %81

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %81

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %81

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 5
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %81

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 6
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 6
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %81

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 7
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 7
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %81

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 8
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 8
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %56, label %81

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 9
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 9
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %62, label %81

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 10
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 10
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %64, %66
  br i1 %67, label %68, label %81

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 12
  %70 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = tail call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* %69, i8* %71, i64 %73) #11
  br i1 %74, label %75, label %81

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 13
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 13
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %77, %79
  br label %81

81:                                               ; preds = %75, %68, %62, %56, %50, %44, %38, %32, %26, %20, %14, %8, %2
  %82 = phi i1 [ false, %68 ], [ false, %62 ], [ false, %56 ], [ false, %50 ], [ false, %44 ], [ false, %38 ], [ false, %32 ], [ false, %26 ], [ false, %20 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %80, %75 ]
  ret i1 %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.63"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %151, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.63"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.67"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.67"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.69", %"class.std::__1::__bucket_list_deallocator.69"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.67"* null, %"struct.std::__1::__hash_node_base.67"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !28

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.67"* %38, null
  br i1 %39, label %159, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.67"* null, %"struct.std::__1::__hash_node_base.67"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.67"* null, %"struct.std::__1::__hash_node_base.67"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.67"* null, %"struct.std::__1::__hash_node_base.67"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.67"* null, %"struct.std::__1::__hash_node_base.67"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.67"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !19
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.67"* %36, %"struct.std::__1::__hash_node_base.67"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.67"* %75, null
  br i1 %76, label %159, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %145
  %80 = phi %"struct.std::__1::__hash_node_base.67"* [ %75, %77 ], [ %149, %145 ]
  %81 = phi i64 [ %71, %77 ], [ %147, %145 ]
  %82 = phi %"struct.std::__1::__hash_node_base.67"* [ %38, %77 ], [ %146, %145 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.67"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %145, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.67"* %98, null
  br i1 %99, label %112, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %80, i64 11
  %102 = bitcast %"struct.std::__1::__hash_node_base.67"* %101 to i32*
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %80, i64 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.67"* %104, null
  br i1 %105, label %131, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %80, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base.67"* %107 to %"struct.SkSL::Layout"*
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %104, i64 2
  %110 = bitcast %"struct.std::__1::__hash_node_base.67"* %109 to %"struct.SkSL::Layout"*
  %111 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %108, %"struct.SkSL::Layout"* dereferenceable(72) %110) #11
  br i1 %111, label %117, label %131

112:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.67"* %82, %"struct.std::__1::__hash_node_base.67"** %97, align 8
  br label %145

113:                                              ; preds = %126
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %129, i64 2
  %115 = bitcast %"struct.std::__1::__hash_node_base.67"* %114 to %"struct.SkSL::Layout"*
  %116 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %108, %"struct.SkSL::Layout"* dereferenceable(72) %115) #11
  br i1 %116, label %117, label %131

117:                                              ; preds = %106, %113
  %118 = phi %"struct.std::__1::__hash_node_base.67"* [ %127, %113 ], [ %80, %106 ]
  %119 = phi %"struct.std::__1::__hash_node_base.67"** [ %128, %113 ], [ %103, %106 ]
  %120 = phi %"struct.std::__1::__hash_node_base.67"* [ %129, %113 ], [ %104, %106 ]
  %121 = load i32, i32* %102, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %120, i64 11
  %123 = bitcast %"struct.std::__1::__hash_node_base.67"* %122 to i32*
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %121, %124
  br i1 %125, label %126, label %131

126:                                              ; preds = %117
  %127 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %119, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %127, i64 0, i32 0
  %129 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %128, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.67"* %129, null
  br i1 %130, label %131, label %113

131:                                              ; preds = %113, %126, %117, %106, %100
  %132 = phi %"struct.std::__1::__hash_node_base.67"* [ %80, %100 ], [ %80, %106 ], [ %118, %117 ], [ %127, %126 ], [ %127, %113 ]
  %133 = bitcast %"struct.std::__1::__hash_node_base.67"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"struct.std::__1::__hash_node_base.67"* %82 to i64*
  store i64 %134, i64* %135, align 8
  %136 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %136, i64 %93
  %138 = bitcast %"struct.std::__1::__hash_node_base.67"** %137 to i64**
  %139 = load i64*, i64** %138, align 8
  %140 = load i64, i64* %139, align 8
  store i64 %140, i64* %133, align 8
  %141 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %141, i64 %93
  %143 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %142, align 8
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %143, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.67"* %80, %"struct.std::__1::__hash_node_base.67"** %144, align 8
  br label %145

145:                                              ; preds = %92, %131, %112
  %146 = phi %"struct.std::__1::__hash_node_base.67"* [ %80, %112 ], [ %82, %131 ], [ %80, %92 ]
  %147 = phi i64 [ %93, %112 ], [ %81, %131 ], [ %81, %92 ]
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %146, i64 0, i32 0
  %149 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %148, align 8
  %150 = icmp eq %"struct.std::__1::__hash_node_base.67"* %149, null
  br i1 %150, label %159, label %79

151:                                              ; preds = %2
  %152 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %153 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %152, align 8
  store %"struct.std::__1::__hash_node_base.67"** null, %"struct.std::__1::__hash_node_base.67"*** %152, align 8
  %154 = icmp eq %"struct.std::__1::__hash_node_base.67"** %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %151
  %156 = bitcast %"struct.std::__1::__hash_node_base.67"** %153 to i8*
  tail call void @_ZdlPv(i8* %156) #13
  br label %157

157:                                              ; preds = %151, %155
  %158 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.69", %"class.std::__1::__bucket_list_deallocator.69"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %158, align 8
  br label %159

159:                                              ; preds = %145, %70, %35, %157
  ret void
}

declare %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret, %"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4SkSL9to_stringEm(%"class.SkSL::String"* sret, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPKN4SkSL19FunctionDeclarationENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.198"*, %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"**) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.SkSL::FunctionDeclaration"** %2 to i64
  %5 = ptrtoint %"class.SkSL::FunctionDeclaration"** %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.198", %"class.std::__1::vector.198"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.SkSL::FunctionDeclaration"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.198"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.SkSL::FunctionDeclaration"**
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.198", %"class.std::__1::vector.198"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.SkSL::FunctionDeclaration"*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, i64 %22
  %25 = select i1 %23, %"class.SkSL::FunctionDeclaration"** %24, %"class.SkSL::FunctionDeclaration"** %2
  %26 = ptrtoint %"class.SkSL::FunctionDeclaration"** %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.SkSL::FunctionDeclaration"** %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to %"class.SkSL::FunctionDeclaration"**
  %43 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %42, i64 %39
  %44 = ptrtoint %"class.SkSL::FunctionDeclaration"** %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %16, i64 %28
  store %"class.SkSL::FunctionDeclaration"** %48, %"class.SkSL::FunctionDeclaration"*** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.198", %"class.std::__1::vector.198"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.SkSL::FunctionDeclaration"*** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  %55 = bitcast %"class.std::__1::vector.198"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.198"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #12
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.198"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #12
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #13
  %75 = bitcast i8* %74 to %"class.SkSL::FunctionDeclaration"**
  %76 = getelementptr inbounds %"class.std::__1::vector.198", %"class.std::__1::vector.198"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.SkSL::FunctionDeclaration"*** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.198"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %75, i64 %72
  store %"class.SkSL::FunctionDeclaration"** %79, %"class.SkSL::FunctionDeclaration"*** %8, align 8
  %80 = bitcast %"class.SkSL::FunctionDeclaration"*** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %75, i64 %84
  %87 = ptrtoint %"class.SkSL::FunctionDeclaration"** %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #2

declare void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.88"*, %"class.std::__1::unique_ptr.90"* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.90"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.88"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.88"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.90"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.90"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.90"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.90"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.90"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.90"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.90"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.90"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.90"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.SkSL::Symbol"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.90"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.90"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.90"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.90"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !29

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.90"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.90"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.90"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.90"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.90"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.90"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.90"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.90"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.90"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.90"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.90"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.90"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.90"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.90"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.90"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.90"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.90"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.90"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.90"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.90"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.90"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.90"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.90"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.90"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.90"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.90"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.90"*
  %138 = icmp eq %"class.std::__1::unique_ptr.90"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.90"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %142, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %142, align 8
  %144 = icmp eq %"class.SkSL::Symbol"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::Symbol"* %143 to void (%"class.SkSL::Symbol"*)***
  %147 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %147, i64 1
  %149 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %148, align 8
  tail call void %149(%"class.SkSL::Symbol"* nonnull %143) #11
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.90"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #13
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #2

declare void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"*, %"class.SkSL::Symbol"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIPKN4SkSL4TypeELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.137*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.137, %class.SkTArray.137* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #11
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.137, %class.SkTArray.137* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %49, align 8
  %55 = getelementptr inbounds %"class.SkSL::Type"*, %"class.SkSL::Type"** %54, i64 %51
  %56 = bitcast %"class.SkSL::Type"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8* %53 to i64*
  store i64 %57, i64* %58, align 8
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray.137* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #11
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4SkSL4Type11displayNameEv"}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4SkSL4Type11displayNameEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!12 = distinct !{!12, !"_ZNK4SkSL4Type11displayNameEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!15 = distinct !{!15, !"_ZNK4SkSL4Type11displayNameEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!18 = distinct !{!18, !"_ZNK4SkSL4Type11displayNameEv"}
!19 = !{i64 0, i64 65}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_13IntrinsicKindEEENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashIRKNS_4pairIKS3_S4_EEJEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_13IntrinsicKindEEENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashIRKNS_4pairIKS3_S4_EEJEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISQ_EEEEEEmOT_DpOT0_"}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.unroll.disable"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!27 = distinct !{!27, !"_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_"}
!28 = distinct !{!28, !24}
!29 = distinct !{!29, !24}
