; ModuleID = '../../net/cert/internal/parse_certificate.cc'
source_filename = "../../net/cert/internal/parse_certificate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::ParsedTbsCertificate" = type { i32, %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"struct.net::der::GeneralizedTime", %"struct.net::der::GeneralizedTime", %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8], %"class.net::der::BitString", i8, [7 x i8], %"class.net::der::BitString", i8, %"class.net::der::Input" }
%"struct.net::der::GeneralizedTime" = type { i16, i8, i8, i8, i8, i8 }
%"class.net::der::BitString" = type <{ %"class.net::der::Input", i8, [7 x i8] }>
%"class.net::der::Input" = type { i8*, i64 }
%"struct.net::ParsedDistributionPoint" = type <{ %"class.std::__1::vector.14", i8, [7 x i8] }>
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.16" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.base::BasicStringPiece"* }
%"struct.net::ParsedAuthorityKeyIdentifier" = type { %"class.absl::optional", %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.net::der::Input" }
%"class.net::CertErrors" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::CertError"*, %"struct.net::CertError"*, %"class.std::__1::__compressed_pair.1" }
%"struct.net::CertError" = type { i32, i8*, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::CertErrorParams"* }
%"class.net::CertErrorParams" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.net::CertError"* }
%"class.net::der::Parser" = type { %struct.cbs_st, i64 }
%struct.cbs_st = type { i8*, i64 }
%"struct.net::ParseCertificateOptions" = type { i8 }
%"struct.net::ParsedExtension" = type <{ %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"struct.std::__1::pair.12" = type { %"class.net::der::Input", %"struct.net::ParsedExtension" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.13" }
%"struct.std::__1::pair.13" = type { %"class.net::der::Input", %"struct.net::ParsedExtension" }
%"struct.net::ParsedBasicConstraints" = type { i8, i8, i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"struct.net::ParsedDistributionPoint"*, %"struct.net::ParsedDistributionPoint"*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.net::ParsedDistributionPoint"* }
%"struct.net::GeneralNames" = type <{ %"class.std::__1::vector.31", %"class.std::__1::vector.14", %"class.std::__1::vector.14", %"class.std::__1::vector.31", %"class.std::__1::vector.31", %"class.std::__1::vector.31", %"class.std::__1::vector.14", %"class.std::__1::vector.38", %"class.std::__1::vector.45", %"class.std::__1::vector.31", i32, [4 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.net::IPAddress"*, %"class.net::IPAddress"*, %"class.std::__1::__compressed_pair.40" }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.net::IPAddress"* }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.std::__1::pair.47"*, %"struct.std::__1::pair.47"*, %"class.std::__1::__compressed_pair.48" }
%"struct.std::__1::pair.47" = type opaque
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::pair.47"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.net::der::Input"* }

$_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE6assignIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__16vectorIN3net23ParsedDistributionPointENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JNS_4pairIS4_S5_EEEEENSF_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@.str = private unnamed_addr constant [37 x i8] c"Serial number is not a valid INTEGER\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"Serial number is negative\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"Serial number is zero\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"Serial number is longer than 20 octets\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"Failed parsing Certificate SEQUENCE\00", align 1
@.str.6 = private unnamed_addr constant [41 x i8] c"Couldn't read tbsCertificate as SEQUENCE\00", align 1
@.str.7 = private unnamed_addr constant [57 x i8] c"Couldn't read Certificate.signatureAlgorithm as SEQUENCE\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"Couldn't read Certificate.signatureValue as BIT STRING\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"Unconsumed data inside Certificate SEQUENCE\00", align 1
@.str.10 = private unnamed_addr constant [43 x i8] c"Unconsumed data after Certificate SEQUENCE\00", align 1
@.str.11 = private unnamed_addr constant [39 x i8] c"Failed parsing TBSCertificate SEQUENCE\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"Failed reading version\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"Failed parsing version\00", align 1
@.str.14 = private unnamed_addr constant [42 x i8] c"Version explicitly V1 (should be omitted)\00", align 1
@.str.15 = private unnamed_addr constant [28 x i8] c"Failed reading serialNumber\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"Failed reading signature\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"Failed reading issuer\00", align 1
@.str.18 = private unnamed_addr constant [24 x i8] c"Failed reading validity\00", align 1
@.str.19 = private unnamed_addr constant [24 x i8] c"Failed parsing validity\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"Failed reading subject\00", align 1
@.str.21 = private unnamed_addr constant [36 x i8] c"Failed reading subjectPublicKeyInfo\00", align 1
@.str.22 = private unnamed_addr constant [30 x i8] c"Failed reading issuerUniqueId\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"Failed parsing issuerUniqueId\00", align 1
@.str.24 = private unnamed_addr constant [57 x i8] c"Unexpected issuerUniqueId (must be V2 or V3 certificate)\00", align 1
@.str.25 = private unnamed_addr constant [31 x i8] c"Failed reading subjectUniqueId\00", align 1
@.str.26 = private unnamed_addr constant [31 x i8] c"Failed parsing subjectUniqueId\00", align 1
@.str.27 = private unnamed_addr constant [58 x i8] c"Unexpected subjectUniqueId (must be V2 or V3 certificate)\00", align 1
@.str.28 = private unnamed_addr constant [35 x i8] c"Failed reading extensions SEQUENCE\00", align 1
@.str.29 = private unnamed_addr constant [47 x i8] c"Unexpected extensions (must be V3 certificate)\00", align 1
@.str.30 = private unnamed_addr constant [38 x i8] c"Unconsumed data inside TBSCertificate\00", align 1
@_ZZN3net23SubjectKeyIdentifierOidEvE3oid = internal constant [3 x i8] c"U\1D\0E", align 1
@_ZZN3net11KeyUsageOidEvE3oid = internal constant [3 x i8] c"U\1D\0F", align 1
@_ZZN3net17SubjectAltNameOidEvE3oid = internal constant [3 x i8] c"U\1D\11", align 1
@_ZZN3net19BasicConstraintsOidEvE3oid = internal constant [3 x i8] c"U\1D\13", align 1
@_ZZN3net18NameConstraintsOidEvE3oid = internal constant [3 x i8] c"U\1D\1E", align 1
@_ZZN3net22CertificatePoliciesOidEvE3oid = internal constant [3 x i8] c"U\1D ", align 1
@_ZZN3net25AuthorityKeyIdentifierOidEvE3oid = internal constant [3 x i8] c"U\1D#", align 1
@_ZZN3net20PolicyConstraintsOidEvE3oid = internal constant [3 x i8] c"U\1D$", align 1
@_ZZN3net14ExtKeyUsageOidEvE3oid = internal constant [3 x i8] c"U\1D%", align 1
@_ZZN3net22AuthorityInfoAccessOidEvE3oid = internal constant [8 x i8] c"+\06\01\05\05\07\01\01", align 1
@_ZZN3net14AdCaIssuersOidEvE3oid = internal constant [8 x i8] c"+\06\01\05\05\070\02", align 1
@_ZZN3net9AdOcspOidEvE3oid = internal constant [8 x i8] c"+\06\01\05\05\070\01", align 1
@_ZZN3net24CrlDistributionPointsOidEvE3oid = internal constant [3 x i8] c"U\1D\1F", align 1

@_ZN3net20ParsedTbsCertificateC1Ev = hidden unnamed_addr alias void (%"struct.net::ParsedTbsCertificate"*), void (%"struct.net::ParsedTbsCertificate"*)* @_ZN3net20ParsedTbsCertificateC2Ev
@_ZN3net20ParsedTbsCertificateD1Ev = hidden unnamed_addr alias void (%"struct.net::ParsedTbsCertificate"*), void (%"struct.net::ParsedTbsCertificate"*)* @_ZN3net20ParsedTbsCertificateD2Ev
@_ZN3net23ParsedDistributionPointC1Ev = hidden unnamed_addr alias void (%"struct.net::ParsedDistributionPoint"*), void (%"struct.net::ParsedDistributionPoint"*)* @_ZN3net23ParsedDistributionPointC2Ev
@_ZN3net23ParsedDistributionPointC1EOS0_ = hidden unnamed_addr alias void (%"struct.net::ParsedDistributionPoint"*, %"struct.net::ParsedDistributionPoint"*), void (%"struct.net::ParsedDistributionPoint"*, %"struct.net::ParsedDistributionPoint"*)* @_ZN3net23ParsedDistributionPointC2EOS0_
@_ZN3net23ParsedDistributionPointD1Ev = hidden unnamed_addr alias void (%"struct.net::ParsedDistributionPoint"*), void (%"struct.net::ParsedDistributionPoint"*)* @_ZN3net23ParsedDistributionPointD2Ev
@_ZN3net28ParsedAuthorityKeyIdentifierC1Ev = hidden unnamed_addr alias void (%"struct.net::ParsedAuthorityKeyIdentifier"*), void (%"struct.net::ParsedAuthorityKeyIdentifier"*)* @_ZN3net28ParsedAuthorityKeyIdentifierC2Ev
@_ZN3net28ParsedAuthorityKeyIdentifierD1Ev = hidden unnamed_addr alias void (%"struct.net::ParsedAuthorityKeyIdentifier"*), void (%"struct.net::ParsedAuthorityKeyIdentifier"*)* @_ZN3net28ParsedAuthorityKeyIdentifierD2Ev
@_ZN3net28ParsedAuthorityKeyIdentifierC1EOS0_ = hidden unnamed_addr alias void (%"struct.net::ParsedAuthorityKeyIdentifier"*, %"struct.net::ParsedAuthorityKeyIdentifier"*), void (%"struct.net::ParsedAuthorityKeyIdentifier"*, %"struct.net::ParsedAuthorityKeyIdentifier"*)* @_ZN3net28ParsedAuthorityKeyIdentifierC2EOS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20ParsedTbsCertificateC2Ev(%"struct.net::ParsedTbsCertificate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %0, i64 0, i32 1
  tail call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %3) #11
  %4 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %0, i64 0, i32 2
  tail call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %4) #11
  %5 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %0, i64 0, i32 3
  tail call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %5) #11
  %6 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %0, i64 0, i32 6
  tail call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %6) #11
  %7 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %0, i64 0, i32 7
  tail call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %7) #11
  %8 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %0, i64 0, i32 8
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %0, i64 0, i32 10, i32 0
  tail call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %9) #11
  %10 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %0, i64 0, i32 10, i32 1
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %0, i64 0, i32 11
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %0, i64 0, i32 13, i32 0
  tail call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %12) #11
  %13 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %0, i64 0, i32 13, i32 1
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %0, i64 0, i32 14
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %0, i64 0, i32 15
  tail call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %15) #11
  ret void
}

declare void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net20ParsedTbsCertificateD2Ev(%"struct.net::ParsedTbsCertificate"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net18VerifySerialNumberERKNS_3der5InputEbPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), i1 zeroext, %"class.net::CertErrors"*) local_unnamed_addr #0 {
  %4 = alloca i8, align 1
  %5 = zext i1 %1 to i32
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %6 = call zeroext i1 @_ZN3net3der14IsValidIntegerERKNS0_5InputEPb(%"class.net::der::Input"* dereferenceable(16) %0, i8* nonnull %4) #11
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  call void @_ZN3net10CertErrors3AddENS_9CertError8SeverityEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS5_14default_deleteIS7_EEEE(%"class.net::CertErrors"* %2, i32 %5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), %"class.net::CertErrorParams"* null) #11
  br label %28

8:                                                ; preds = %3
  %9 = load i8, i8* %4, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  call void @_ZN3net10CertErrors10AddWarningEPKv(%"class.net::CertErrors"* %2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #11
  br label %12

12:                                               ; preds = %8, %11
  %13 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %0, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 1
  br i1 %15, label %16, label %23

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %0, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %16
  call void @_ZN3net10CertErrors10AddWarningEPKv(%"class.net::CertErrors"* %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #11
  %22 = load i64, i64* %13, align 8
  br label %23

23:                                               ; preds = %21, %12
  %24 = phi i64 [ %14, %12 ], [ %22, %21 ]
  %25 = icmp ugt i64 %24, 20
  br i1 %25, label %26, label %28

26:                                               ; preds = %23
  %27 = call %"class.net::CertErrorParams"* @_ZN3net27CreateCertErrorParams1SizeTEPKcm(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 %24) #11
  call void @_ZN3net10CertErrors3AddENS_9CertError8SeverityEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS5_14default_deleteIS7_EEEE(%"class.net::CertErrors"* %2, i32 %5, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0), %"class.net::CertErrorParams"* %27) #11
  br label %28

28:                                               ; preds = %16, %23, %26, %7
  %29 = phi i1 [ false, %26 ], [ false, %7 ], [ true, %23 ], [ true, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  ret i1 %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN3net3der14IsValidIntegerERKNS0_5InputEPb(%"class.net::der::Input"* dereferenceable(16), i8*) local_unnamed_addr #1

declare void @_ZN3net10CertErrors3AddENS_9CertError8SeverityEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS5_14default_deleteIS7_EEEE(%"class.net::CertErrors"*, i32, i8*, %"class.net::CertErrorParams"*) local_unnamed_addr #1

declare void @_ZN3net10CertErrors10AddWarningEPKv(%"class.net::CertErrors"*, i8*) local_unnamed_addr #1

declare %"class.net::CertErrorParams"* @_ZN3net27CreateCertErrorParams1SizeTEPKcm(i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net24ReadUTCOrGeneralizedTimeEPNS_3der6ParserEPNS0_15GeneralizedTimeE(%"class.net::der::Parser"*, %"struct.net::der::GeneralizedTime"*) local_unnamed_addr #0 {
  %3 = alloca %"class.net::der::Input", align 8
  %4 = alloca i32, align 4
  %5 = bitcast %"class.net::der::Input"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = bitcast %"class.net::der::Input"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %3) #11
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  store i32 -1431655766, i32* %4, align 4
  %8 = call zeroext i1 @_ZN3net3der6Parser15ReadTagAndValueEPjPNS0_5InputE(%"class.net::der::Parser"* %0, i32* nonnull %4, %"class.net::der::Input"* nonnull %3) #11
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = load i32, i32* %4, align 4
  switch i32 %10, label %15 [
    i32 23, label %11
    i32 24, label %13
  ]

11:                                               ; preds = %9
  %12 = call zeroext i1 @_ZN3net3der12ParseUTCTimeERKNS0_5InputEPNS0_15GeneralizedTimeE(%"class.net::der::Input"* nonnull dereferenceable(16) %3, %"struct.net::der::GeneralizedTime"* %1) #11
  br label %15

13:                                               ; preds = %9
  %14 = call zeroext i1 @_ZN3net3der20ParseGeneralizedTimeERKNS0_5InputEPNS0_15GeneralizedTimeE(%"class.net::der::Input"* nonnull dereferenceable(16) %3, %"struct.net::der::GeneralizedTime"* %1) #11
  br label %15

15:                                               ; preds = %9, %2, %13, %11
  %16 = phi i1 [ %12, %11 ], [ %14, %13 ], [ false, %2 ], [ false, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret i1 %16
}

declare zeroext i1 @_ZN3net3der6Parser15ReadTagAndValueEPjPNS0_5InputE(%"class.net::der::Parser"*, i32*, %"class.net::der::Input"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net3der12ParseUTCTimeERKNS0_5InputEPNS0_15GeneralizedTimeE(%"class.net::der::Input"* dereferenceable(16), %"struct.net::der::GeneralizedTime"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net3der20ParseGeneralizedTimeERKNS0_5InputEPNS0_15GeneralizedTimeE(%"class.net::der::Input"* dereferenceable(16), %"struct.net::der::GeneralizedTime"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net13ParseValidityERKNS_3der5InputEPNS0_15GeneralizedTimeES5_(%"class.net::der::Input"* dereferenceable(16), %"struct.net::der::GeneralizedTime"*, %"struct.net::der::GeneralizedTime"*) local_unnamed_addr #0 {
  %4 = alloca %"class.net::der::Input", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.net::der::Input", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.net::der::Parser", align 8
  %9 = alloca %"class.net::der::Parser", align 8
  %10 = bitcast %"class.net::der::Parser"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = bitcast %"class.net::der::Parser"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %8, %"class.net::der::Input"* dereferenceable(16) %0) #11
  %12 = bitcast %"class.net::der::Parser"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = bitcast %"class.net::der::Parser"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %9) #11
  %14 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %8, %"class.net::der::Parser"* nonnull %9) #11
  br i1 %14, label %15, label %42

15:                                               ; preds = %3
  %16 = bitcast %"class.net::der::Input"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #11
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %6) #11
  %17 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #11
  store i32 -1431655766, i32* %7, align 4
  %18 = call zeroext i1 @_ZN3net3der6Parser15ReadTagAndValueEPjPNS0_5InputE(%"class.net::der::Parser"* nonnull %9, i32* nonnull %7, %"class.net::der::Input"* nonnull %6) #11
  br i1 %18, label %19, label %23

19:                                               ; preds = %15
  %20 = load i32, i32* %7, align 4
  switch i32 %20, label %23 [
    i32 23, label %21
    i32 24, label %24
  ]

21:                                               ; preds = %19
  %22 = call zeroext i1 @_ZN3net3der12ParseUTCTimeERKNS0_5InputEPNS0_15GeneralizedTimeE(%"class.net::der::Input"* nonnull dereferenceable(16) %6, %"struct.net::der::GeneralizedTime"* %1) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  br i1 %22, label %26, label %42

23:                                               ; preds = %15, %19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  br label %42

24:                                               ; preds = %19
  %25 = call zeroext i1 @_ZN3net3der20ParseGeneralizedTimeERKNS0_5InputEPNS0_15GeneralizedTimeE(%"class.net::der::Input"* nonnull dereferenceable(16) %6, %"struct.net::der::GeneralizedTime"* %1) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  br i1 %25, label %26, label %42

26:                                               ; preds = %21, %24
  %27 = bitcast %"class.net::der::Input"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false) #11
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %4) #11
  %28 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #11
  store i32 -1431655766, i32* %5, align 4
  %29 = call zeroext i1 @_ZN3net3der6Parser15ReadTagAndValueEPjPNS0_5InputE(%"class.net::der::Parser"* nonnull %9, i32* nonnull %5, %"class.net::der::Input"* nonnull %4) #11
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = load i32, i32* %5, align 4
  switch i32 %31, label %34 [
    i32 23, label %32
    i32 24, label %35
  ]

32:                                               ; preds = %30
  %33 = call zeroext i1 @_ZN3net3der12ParseUTCTimeERKNS0_5InputEPNS0_15GeneralizedTimeE(%"class.net::der::Input"* nonnull dereferenceable(16) %4, %"struct.net::der::GeneralizedTime"* %2) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #11
  br i1 %33, label %37, label %42

34:                                               ; preds = %26, %30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #11
  br label %42

35:                                               ; preds = %30
  %36 = call zeroext i1 @_ZN3net3der20ParseGeneralizedTimeERKNS0_5InputEPNS0_15GeneralizedTimeE(%"class.net::der::Input"* nonnull dereferenceable(16) %4, %"struct.net::der::GeneralizedTime"* %2) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #11
  br i1 %36, label %37, label %42

37:                                               ; preds = %32, %35
  %38 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %8) #11
  br i1 %38, label %42, label %39

39:                                               ; preds = %37
  %40 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %9) #11
  %41 = xor i1 %40, true
  br label %42

42:                                               ; preds = %32, %34, %21, %23, %39, %37, %35, %24, %3
  %43 = phi i1 [ false, %3 ], [ false, %24 ], [ false, %35 ], [ false, %37 ], [ %41, %39 ], [ false, %23 ], [ false, %21 ], [ false, %34 ], [ false, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  ret i1 %43
}

declare void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"*, %"class.net::der::Input"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"*) unnamed_addr #1

declare zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"*, %"class.net::der::Parser"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net16ParseCertificateERKNS_3der5InputEPS1_S4_PNS0_9BitStringEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.net::der::BitString"*, %"class.net::CertErrors"*) local_unnamed_addr #0 {
  %6 = alloca %"class.net::der::Parser", align 8
  %7 = alloca %"class.net::der::Parser", align 8
  %8 = alloca %"class.net::der::Parser", align 8
  %9 = alloca %"class.net::der::Parser", align 8
  %10 = alloca %"class.net::CertErrors", align 8
  %11 = alloca %"class.net::der::Parser", align 8
  %12 = alloca %"class.net::der::Parser", align 8
  %13 = icmp eq %"class.net::CertErrors"* %4, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %5
  %15 = bitcast %"class.net::CertErrors"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = bitcast %"class.net::CertErrors"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"* nonnull %10) #11
  %17 = call zeroext i1 @_ZN3net16ParseCertificateERKNS_3der5InputEPS1_S4_PNS0_9BitStringEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16) %0, %"class.net::der::Input"* %1, %"class.net::der::Input"* %2, %"class.net::der::BitString"* %3, %"class.net::CertErrors"* nonnull %10)
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %10) #11
  br label %52

18:                                               ; preds = %5
  %19 = bitcast %"class.net::der::Parser"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = bitcast %"class.net::der::Parser"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %11, %"class.net::der::Input"* dereferenceable(16) %0) #11
  %21 = bitcast %"class.net::der::Parser"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  %22 = bitcast %"class.net::der::Parser"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %12) #11
  %23 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %11, %"class.net::der::Parser"* nonnull %12) #11
  br i1 %23, label %24, label %48

24:                                               ; preds = %18
  %25 = call zeroext i1 @_ZN3net3der6Parser10ReadRawTLVEPNS0_5InputE(%"class.net::der::Parser"* nonnull %12, %"class.net::der::Input"* %1) #11
  br i1 %25, label %26, label %48

26:                                               ; preds = %24
  %27 = bitcast %"class.net::der::Parser"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #11
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %6, %"class.net::der::Input"* dereferenceable(16) %1) #11
  %28 = bitcast %"class.net::der::Parser"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false) #11
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %7) #11
  %29 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %6, %"class.net::der::Parser"* nonnull %7) #11
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  br label %48

31:                                               ; preds = %26
  %32 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  br i1 %32, label %48, label %33

33:                                               ; preds = %31
  %34 = call zeroext i1 @_ZN3net3der6Parser10ReadRawTLVEPNS0_5InputE(%"class.net::der::Parser"* nonnull %12, %"class.net::der::Input"* %2) #11
  br i1 %34, label %35, label %48

35:                                               ; preds = %33
  %36 = bitcast %"class.net::der::Parser"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false) #11
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %8, %"class.net::der::Input"* dereferenceable(16) %2) #11
  %37 = bitcast %"class.net::der::Parser"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 24, i1 false) #11
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %9) #11
  %38 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %8, %"class.net::der::Parser"* nonnull %9) #11
  br i1 %38, label %40, label %39

39:                                               ; preds = %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  br label %48

40:                                               ; preds = %35
  %41 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  br i1 %41, label %48, label %42

42:                                               ; preds = %40
  %43 = call zeroext i1 @_ZN3net3der6Parser13ReadBitStringEPNS0_9BitStringE(%"class.net::der::Parser"* nonnull %12, %"class.net::der::BitString"* %3) #11
  br i1 %43, label %44, label %48

44:                                               ; preds = %42
  %45 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %12) #11
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %11) #11
  br i1 %47, label %48, label %50

48:                                               ; preds = %46, %44, %42, %39, %33, %40, %30, %24, %31, %18
  %49 = phi i8* [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0), %18 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), %31 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), %24 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), %30 ], [ getelementptr inbounds ([57 x i8], [57 x i8]* @.str.7, i64 0, i64 0), %40 ], [ getelementptr inbounds ([57 x i8], [57 x i8]* @.str.7, i64 0, i64 0), %33 ], [ getelementptr inbounds ([57 x i8], [57 x i8]* @.str.7, i64 0, i64 0), %39 ], [ getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), %42 ], [ getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), %44 ], [ getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0), %46 ]
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %4, i8* %49) #11
  br label %50

50:                                               ; preds = %48, %46
  %51 = phi i1 [ true, %46 ], [ false, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  br label %52

52:                                               ; preds = %50, %14
  %53 = phi i8* [ %19, %50 ], [ %15, %14 ]
  %54 = phi i1 [ %51, %50 ], [ %17, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #11
  ret i1 %54
}

declare void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"*) unnamed_addr #4

declare void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net3der6Parser13ReadBitStringEPNS0_9BitStringE(%"class.net::der::Parser"*, %"class.net::der::BitString"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net19ParseTbsCertificateERKNS_3der5InputERKNS_23ParseCertificateOptionsEPNS_20ParsedTbsCertificateEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), %"struct.net::ParseCertificateOptions"* nocapture readonly dereferenceable(1), %"struct.net::ParsedTbsCertificate"*, %"class.net::CertErrors"*) local_unnamed_addr #0 {
  %5 = alloca %"class.net::der::Parser", align 8
  %6 = alloca %"class.net::der::Parser", align 8
  %7 = alloca %"class.net::der::Parser", align 8
  %8 = alloca %"class.net::der::Parser", align 8
  %9 = alloca %"class.net::der::Parser", align 8
  %10 = alloca %"class.net::der::Parser", align 8
  %11 = alloca %"class.net::der::Parser", align 8
  %12 = alloca %"class.net::der::Parser", align 8
  %13 = alloca %"class.net::der::Parser", align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.net::der::Parser", align 8
  %16 = alloca %"class.net::der::Parser", align 8
  %17 = alloca %"class.net::CertErrors", align 8
  %18 = alloca %"class.net::der::Parser", align 8
  %19 = alloca %"class.net::der::Parser", align 8
  %20 = alloca %"class.net::der::Input", align 8
  %21 = alloca i8, align 1
  %22 = alloca %"class.net::der::Input", align 8
  %23 = alloca %"class.net::der::Input", align 8
  %24 = alloca %"class.net::der::Input", align 8
  %25 = icmp eq %"class.net::CertErrors"* %3, null
  br i1 %25, label %26, label %30

26:                                               ; preds = %4
  %27 = bitcast %"class.net::CertErrors"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  %28 = bitcast %"class.net::CertErrors"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  call void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"* nonnull %17) #11
  %29 = call zeroext i1 @_ZN3net19ParseTbsCertificateERKNS_3der5InputERKNS_23ParseCertificateOptionsEPNS_20ParsedTbsCertificateEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16) %0, %"struct.net::ParseCertificateOptions"* dereferenceable(1) %1, %"struct.net::ParsedTbsCertificate"* %2, %"class.net::CertErrors"* nonnull %17)
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %17) #11
  br label %206

30:                                               ; preds = %4
  %31 = bitcast %"class.net::der::Parser"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = bitcast %"class.net::der::Parser"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %18, %"class.net::der::Input"* dereferenceable(16) %0) #11
  %33 = bitcast %"class.net::der::Parser"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11
  %34 = bitcast %"class.net::der::Parser"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %19) #11
  %35 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %18, %"class.net::der::Parser"* nonnull %19) #11
  br i1 %35, label %37, label %36

36:                                               ; preds = %30
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11, i64 0, i64 0)) #11
  br label %204

37:                                               ; preds = %30
  %38 = bitcast %"class.net::der::Input"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #11
  %39 = bitcast %"class.net::der::Input"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %20) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %21) #11
  store i8 -86, i8* %21, align 1
  %40 = call i32 @_ZN3net3der26ContextSpecificConstructedEh(i8 zeroext 0) #11
  %41 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPNS0_5InputEPb(%"class.net::der::Parser"* nonnull %19, i32 %40, %"class.net::der::Input"* nonnull %20, i8* nonnull %21) #11
  br i1 %41, label %43, label %42

42:                                               ; preds = %37
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0)) #11
  br label %202

43:                                               ; preds = %37
  %44 = load i8, i8* %21, align 1, !range !2
  %45 = icmp eq i8 %44, 0
  %46 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %2, i64 0, i32 0
  br i1 %45, label %63, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.net::der::Parser"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 24, i1 false) #11
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %13, %"class.net::der::Input"* nonnull dereferenceable(16) %20) #11
  %49 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #11
  store i64 -6148914691236517206, i64* %14, align 8
  %50 = call zeroext i1 @_ZN3net3der6Parser10ReadUint64EPm(%"class.net::der::Parser"* nonnull %13, i64* nonnull %14) #11
  br i1 %50, label %51, label %54

51:                                               ; preds = %47
  %52 = load i64, i64* %14, align 8
  %53 = icmp ult i64 %52, 3
  br i1 %53, label %55, label %54

54:                                               ; preds = %51, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #11
  br label %58

55:                                               ; preds = %51
  %56 = trunc i64 %52 to i32
  store i32 %56, i32* %46, align 4
  %57 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #11
  br i1 %57, label %58, label %59

58:                                               ; preds = %55, %54
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0)) #11
  br label %202

59:                                               ; preds = %55
  %60 = load i32, i32* %46, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %59
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.14, i64 0, i64 0)) #11
  br label %202

63:                                               ; preds = %43
  store i32 0, i32* %46, align 8
  br label %64

64:                                               ; preds = %59, %63
  %65 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %2, i64 0, i32 1
  %66 = call zeroext i1 @_ZN3net3der6Parser7ReadTagEjPNS0_5InputE(%"class.net::der::Parser"* nonnull %19, i32 2, %"class.net::der::Input"* %65) #11
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0)) #11
  br label %202

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"struct.net::ParseCertificateOptions", %"struct.net::ParseCertificateOptions"* %1, i64 0, i32 0
  %70 = load i8, i8* %69, align 1, !range !2
  %71 = icmp ne i8 %70, 0
  %72 = call zeroext i1 @_ZN3net18VerifySerialNumberERKNS_3der5InputEbPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16) %65, i1 zeroext %71, %"class.net::CertErrors"* nonnull %3)
  %73 = xor i1 %72, true
  %74 = load i8, i8* %69, align 1
  %75 = icmp eq i8 %74, 0
  %76 = and i1 %75, %73
  br i1 %76, label %202, label %77

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %2, i64 0, i32 2
  %79 = call zeroext i1 @_ZN3net3der6Parser10ReadRawTLVEPNS0_5InputE(%"class.net::der::Parser"* nonnull %19, %"class.net::der::Input"* %78) #11
  br i1 %79, label %80, label %87

80:                                               ; preds = %77
  %81 = bitcast %"class.net::der::Parser"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 24, i1 false) #11
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %11, %"class.net::der::Input"* dereferenceable(16) %78) #11
  %82 = bitcast %"class.net::der::Parser"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 24, i1 false) #11
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %12) #11
  %83 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %11, %"class.net::der::Parser"* nonnull %12) #11
  br i1 %83, label %85, label %84

84:                                               ; preds = %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #11
  br label %87

85:                                               ; preds = %80
  %86 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #11
  br i1 %86, label %87, label %88

87:                                               ; preds = %85, %77, %84
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0)) #11
  br label %202

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %2, i64 0, i32 3
  %90 = call zeroext i1 @_ZN3net3der6Parser10ReadRawTLVEPNS0_5InputE(%"class.net::der::Parser"* nonnull %19, %"class.net::der::Input"* %89) #11
  br i1 %90, label %91, label %98

91:                                               ; preds = %88
  %92 = bitcast %"class.net::der::Parser"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 24, i1 false) #11
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %9, %"class.net::der::Input"* dereferenceable(16) %89) #11
  %93 = bitcast %"class.net::der::Parser"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 24, i1 false) #11
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %10) #11
  %94 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %9, %"class.net::der::Parser"* nonnull %10) #11
  br i1 %94, label %96, label %95

95:                                               ; preds = %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #11
  br label %98

96:                                               ; preds = %91
  %97 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #11
  br i1 %97, label %98, label %99

98:                                               ; preds = %96, %88, %95
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0)) #11
  br label %202

99:                                               ; preds = %96
  %100 = bitcast %"class.net::der::Input"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #11
  %101 = bitcast %"class.net::der::Input"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %22) #11
  %102 = call zeroext i1 @_ZN3net3der6Parser10ReadRawTLVEPNS0_5InputE(%"class.net::der::Parser"* nonnull %19, %"class.net::der::Input"* nonnull %22) #11
  br i1 %102, label %104, label %103

103:                                              ; preds = %99
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i64 0, i64 0)) #11
  br label %200

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %2, i64 0, i32 4
  %106 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %2, i64 0, i32 5
  %107 = call zeroext i1 @_ZN3net13ParseValidityERKNS_3der5InputEPNS0_15GeneralizedTimeES5_(%"class.net::der::Input"* nonnull dereferenceable(16) %22, %"struct.net::der::GeneralizedTime"* %105, %"struct.net::der::GeneralizedTime"* %106)
  br i1 %107, label %109, label %108

108:                                              ; preds = %104
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.19, i64 0, i64 0)) #11
  br label %200

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %2, i64 0, i32 6
  %111 = call zeroext i1 @_ZN3net3der6Parser10ReadRawTLVEPNS0_5InputE(%"class.net::der::Parser"* nonnull %19, %"class.net::der::Input"* %110) #11
  br i1 %111, label %112, label %119

112:                                              ; preds = %109
  %113 = bitcast %"class.net::der::Parser"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 -86, i64 24, i1 false) #11
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %7, %"class.net::der::Input"* dereferenceable(16) %110) #11
  %114 = bitcast %"class.net::der::Parser"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 24, i1 false) #11
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %8) #11
  %115 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %7, %"class.net::der::Parser"* nonnull %8) #11
  br i1 %115, label %117, label %116

116:                                              ; preds = %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #11
  br label %119

117:                                              ; preds = %112
  %118 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #11
  br i1 %118, label %119, label %120

119:                                              ; preds = %117, %109, %116
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0)) #11
  br label %200

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %2, i64 0, i32 7
  %122 = call zeroext i1 @_ZN3net3der6Parser10ReadRawTLVEPNS0_5InputE(%"class.net::der::Parser"* nonnull %19, %"class.net::der::Input"* %121) #11
  br i1 %122, label %123, label %130

123:                                              ; preds = %120
  %124 = bitcast %"class.net::der::Parser"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 -86, i64 24, i1 false) #11
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %5, %"class.net::der::Input"* dereferenceable(16) %121) #11
  %125 = bitcast %"class.net::der::Parser"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 -86, i64 24, i1 false) #11
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %6) #11
  %126 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %5, %"class.net::der::Parser"* nonnull %6) #11
  br i1 %126, label %128, label %127

127:                                              ; preds = %123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #11
  br label %130

128:                                              ; preds = %123
  %129 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #11
  br i1 %129, label %130, label %131

130:                                              ; preds = %128, %120, %127
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21, i64 0, i64 0)) #11
  br label %200

131:                                              ; preds = %128
  %132 = bitcast %"class.net::der::Input"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %132) #11
  %133 = bitcast %"class.net::der::Input"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %23) #11
  %134 = call i32 @_ZN3net3der24ContextSpecificPrimitiveEh(i8 zeroext 1) #11
  %135 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %2, i64 0, i32 8
  %136 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPNS0_5InputEPb(%"class.net::der::Parser"* nonnull %19, i32 %134, %"class.net::der::Input"* nonnull %23, i8* %135) #11
  br i1 %136, label %138, label %137

137:                                              ; preds = %131
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.22, i64 0, i64 0)) #11
  br label %198

138:                                              ; preds = %131
  %139 = load i8, i8* %135, align 8, !range !2
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %150, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %2, i64 0, i32 10
  %143 = call zeroext i1 @_ZN3net3der14ParseBitStringERKNS0_5InputEPNS0_9BitStringE(%"class.net::der::Input"* nonnull dereferenceable(16) %23, %"class.net::der::BitString"* %142) #11
  br i1 %143, label %145, label %144

144:                                              ; preds = %141
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i64 0, i64 0)) #11
  br label %198

145:                                              ; preds = %141
  %146 = load i32, i32* %46, align 8
  %147 = add i32 %146, -1
  %148 = icmp ult i32 %147, 2
  br i1 %148, label %150, label %149

149:                                              ; preds = %145
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.24, i64 0, i64 0)) #11
  br label %198

150:                                              ; preds = %145, %138
  %151 = bitcast %"class.net::der::Input"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %151) #11
  %152 = bitcast %"class.net::der::Input"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %152, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %24) #11
  %153 = call i32 @_ZN3net3der24ContextSpecificPrimitiveEh(i8 zeroext 2) #11
  %154 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %2, i64 0, i32 11
  %155 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPNS0_5InputEPb(%"class.net::der::Parser"* nonnull %19, i32 %153, %"class.net::der::Input"* nonnull %24, i8* %154) #11
  br i1 %155, label %157, label %156

156:                                              ; preds = %150
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.25, i64 0, i64 0)) #11
  br label %196

157:                                              ; preds = %150
  %158 = load i8, i8* %154, align 8, !range !2
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %169, label %160

160:                                              ; preds = %157
  %161 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %2, i64 0, i32 13
  %162 = call zeroext i1 @_ZN3net3der14ParseBitStringERKNS0_5InputEPNS0_9BitStringE(%"class.net::der::Input"* nonnull dereferenceable(16) %24, %"class.net::der::BitString"* %161) #11
  br i1 %162, label %164, label %163

163:                                              ; preds = %160
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.26, i64 0, i64 0)) #11
  br label %196

164:                                              ; preds = %160
  %165 = load i32, i32* %46, align 8
  %166 = add i32 %165, -1
  %167 = icmp ult i32 %166, 2
  br i1 %167, label %169, label %168

168:                                              ; preds = %164
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.27, i64 0, i64 0)) #11
  br label %196

169:                                              ; preds = %164, %157
  %170 = call i32 @_ZN3net3der26ContextSpecificConstructedEh(i8 zeroext 3) #11
  %171 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %2, i64 0, i32 15
  %172 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %2, i64 0, i32 14
  %173 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPNS0_5InputEPb(%"class.net::der::Parser"* nonnull %19, i32 %170, %"class.net::der::Input"* %171, i8* %172) #11
  br i1 %173, label %175, label %174

174:                                              ; preds = %169
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.28, i64 0, i64 0)) #11
  br label %196

175:                                              ; preds = %169
  %176 = load i8, i8* %172, align 8, !range !2
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %190, label %178

178:                                              ; preds = %175
  %179 = bitcast %"class.net::der::Parser"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %179) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %179, i8 -86, i64 24, i1 false) #11
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %15, %"class.net::der::Input"* dereferenceable(16) %171) #11
  %180 = bitcast %"class.net::der::Parser"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %180) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %180, i8 -86, i64 24, i1 false) #11
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %16) #11
  %181 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %15, %"class.net::der::Parser"* nonnull %16) #11
  br i1 %181, label %183, label %182

182:                                              ; preds = %178
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %180) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #11
  br label %185

183:                                              ; preds = %178
  %184 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %180) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #11
  br i1 %184, label %185, label %186

185:                                              ; preds = %183, %182
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.28, i64 0, i64 0)) #11
  br label %196

186:                                              ; preds = %183
  %187 = load i32, i32* %46, align 8
  %188 = icmp eq i32 %187, 2
  br i1 %188, label %190, label %189

189:                                              ; preds = %186
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.29, i64 0, i64 0)) #11
  br label %196

190:                                              ; preds = %186, %175
  %191 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %19) #11
  br i1 %191, label %192, label %193

192:                                              ; preds = %190
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* nonnull %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.30, i64 0, i64 0)) #11
  br label %196

193:                                              ; preds = %190
  %194 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %18) #11
  %195 = xor i1 %194, true
  br label %196

196:                                              ; preds = %193, %192, %189, %185, %174, %168, %163, %156
  %197 = phi i1 [ false, %168 ], [ false, %189 ], [ false, %192 ], [ false, %185 ], [ false, %174 ], [ false, %163 ], [ false, %156 ], [ %195, %193 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %151) #11
  br label %198

198:                                              ; preds = %196, %149, %144, %137
  %199 = phi i1 [ false, %149 ], [ %197, %196 ], [ false, %144 ], [ false, %137 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %132) #11
  br label %200

200:                                              ; preds = %198, %130, %119, %108, %103
  %201 = phi i1 [ %199, %198 ], [ false, %130 ], [ false, %119 ], [ false, %108 ], [ false, %103 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #11
  br label %202

202:                                              ; preds = %68, %200, %98, %87, %67, %62, %58, %42
  %203 = phi i1 [ false, %62 ], [ %201, %200 ], [ false, %98 ], [ false, %87 ], [ false, %67 ], [ false, %58 ], [ false, %42 ], [ false, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #11
  br label %204

204:                                              ; preds = %202, %36
  %205 = phi i1 [ %203, %202 ], [ false, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  br label %206

206:                                              ; preds = %204, %26
  %207 = phi i8* [ %31, %204 ], [ %27, %26 ]
  %208 = phi i1 [ %205, %204 ], [ %29, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #11
  ret i1 %208
}

declare zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPNS0_5InputEPb(%"class.net::der::Parser"*, i32, %"class.net::der::Input"*, i8*) local_unnamed_addr #1

declare i32 @_ZN3net3der26ContextSpecificConstructedEh(i8 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN3net3der6Parser7ReadTagEjPNS0_5InputE(%"class.net::der::Parser"*, i32, %"class.net::der::Input"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net3der6Parser10ReadRawTLVEPNS0_5InputE(%"class.net::der::Parser"*, %"class.net::der::Input"*) local_unnamed_addr #1

declare i32 @_ZN3net3der24ContextSpecificPrimitiveEh(i8 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN3net3der14ParseBitStringERKNS0_5InputEPNS0_9BitStringE(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::BitString"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net14ParseExtensionERKNS_3der5InputEPNS_15ParsedExtensionE(%"class.net::der::Input"* dereferenceable(16), %"struct.net::ParsedExtension"*) local_unnamed_addr #0 {
  %3 = alloca %"class.net::der::Parser", align 8
  %4 = alloca %"class.net::der::Parser", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.net::der::Input", align 8
  %7 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Input"* dereferenceable(16) %0) #11
  %9 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %4) #11
  %11 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Parser"* nonnull %4) #11
  br i1 %11, label %12, label %38

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.net::ParsedExtension", %"struct.net::ParsedExtension"* %1, i64 0, i32 0
  %14 = call zeroext i1 @_ZN3net3der6Parser7ReadTagEjPNS0_5InputE(%"class.net::der::Parser"* nonnull %4, i32 6, %"class.net::der::Input"* %13) #11
  br i1 %14, label %15, label %38

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.net::ParsedExtension", %"struct.net::ParsedExtension"* %1, i64 0, i32 2
  store i8 0, i8* %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #11
  store i8 -86, i8* %5, align 1
  %17 = bitcast %"class.net::der::Input"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  %18 = bitcast %"class.net::der::Input"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %6) #11
  %19 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPNS0_5InputEPb(%"class.net::der::Parser"* nonnull %4, i32 1, %"class.net::der::Input"* nonnull %6, i8* nonnull %5) #11
  br i1 %19, label %20, label %36

20:                                               ; preds = %15
  %21 = load i8, i8* %5, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %20
  %24 = call zeroext i1 @_ZN3net3der9ParseBoolERKNS0_5InputEPb(%"class.net::der::Input"* nonnull dereferenceable(16) %6, i8* %16) #11
  br i1 %24, label %25, label %36

25:                                               ; preds = %23
  %26 = load i8, i8* %16, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %25, %20
  %29 = getelementptr inbounds %"struct.net::ParsedExtension", %"struct.net::ParsedExtension"* %1, i64 0, i32 1
  %30 = call zeroext i1 @_ZN3net3der6Parser7ReadTagEjPNS0_5InputE(%"class.net::der::Parser"* nonnull %4, i32 4, %"class.net::der::Input"* %29) #11
  br i1 %30, label %31, label %36

31:                                               ; preds = %28
  %32 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #11
  br i1 %32, label %36, label %33

33:                                               ; preds = %31
  %34 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %3) #11
  %35 = xor i1 %34, true
  br label %36

36:                                               ; preds = %33, %31, %28, %25, %23, %15
  %37 = phi i1 [ false, %15 ], [ false, %23 ], [ false, %25 ], [ false, %28 ], [ false, %31 ], [ %35, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  br label %38

38:                                               ; preds = %12, %2, %36
  %39 = phi i1 [ %37, %36 ], [ false, %2 ], [ false, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret i1 %39
}

declare zeroext i1 @_ZN3net3der9ParseBoolERKNS0_5InputEPb(%"class.net::der::Input"* dereferenceable(16), i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net23SubjectKeyIdentifierOidEv() local_unnamed_addr #2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN3net23SubjectKeyIdentifierOidEvE3oid, i64 0, i64 0), i64 3 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net11KeyUsageOidEv() local_unnamed_addr #2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN3net11KeyUsageOidEvE3oid, i64 0, i64 0), i64 3 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net17SubjectAltNameOidEv() local_unnamed_addr #2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN3net17SubjectAltNameOidEvE3oid, i64 0, i64 0), i64 3 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net19BasicConstraintsOidEv() local_unnamed_addr #2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN3net19BasicConstraintsOidEvE3oid, i64 0, i64 0), i64 3 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net18NameConstraintsOidEv() local_unnamed_addr #2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN3net18NameConstraintsOidEvE3oid, i64 0, i64 0), i64 3 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net22CertificatePoliciesOidEv() local_unnamed_addr #2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN3net22CertificatePoliciesOidEvE3oid, i64 0, i64 0), i64 3 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net25AuthorityKeyIdentifierOidEv() local_unnamed_addr #2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN3net25AuthorityKeyIdentifierOidEvE3oid, i64 0, i64 0), i64 3 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net20PolicyConstraintsOidEv() local_unnamed_addr #2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN3net20PolicyConstraintsOidEvE3oid, i64 0, i64 0), i64 3 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net14ExtKeyUsageOidEv() local_unnamed_addr #2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN3net14ExtKeyUsageOidEvE3oid, i64 0, i64 0), i64 3 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net22AuthorityInfoAccessOidEv() local_unnamed_addr #2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZZN3net22AuthorityInfoAccessOidEvE3oid, i64 0, i64 0), i64 8 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net14AdCaIssuersOidEv() local_unnamed_addr #2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZZN3net14AdCaIssuersOidEvE3oid, i64 0, i64 0), i64 8 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net9AdOcspOidEv() local_unnamed_addr #2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZZN3net9AdOcspOidEvE3oid, i64 0, i64 0), i64 8 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net24CrlDistributionPointsOidEv() local_unnamed_addr #2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN3net24CrlDistributionPointsOidEvE3oid, i64 0, i64 0), i64 3 }
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net15ParseExtensionsERKNS_3der5InputEPNSt3__13mapIS1_NS_15ParsedExtensionENS4_4lessIS1_EENS4_9allocatorINS4_4pairIS2_S6_EEEEEE(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::map"*) local_unnamed_addr #0 {
  %3 = alloca %"class.net::der::Parser", align 8
  %4 = alloca %"class.net::der::Parser", align 8
  %5 = alloca %"struct.net::ParsedExtension", align 8
  %6 = alloca %"class.net::der::Input", align 8
  %7 = alloca %"struct.std::__1::pair.12", align 8
  %8 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Input"* dereferenceable(16) %0) #11
  %10 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %4) #11
  %12 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Parser"* nonnull %4) #11
  br i1 %12, label %13, label %50

13:                                               ; preds = %2
  %14 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #11
  br i1 %14, label %15, label %50

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %16, %"class.std::__1::__tree_node"* %19) #11
  %20 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %17, %"class.std::__1::__tree_end_node"** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %22, align 8
  %23 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #11
  br i1 %23, label %24, label %47

24:                                               ; preds = %15
  %25 = bitcast %"struct.net::ParsedExtension"* %5 to i8*
  %26 = getelementptr inbounds %"struct.net::ParsedExtension", %"struct.net::ParsedExtension"* %5, i64 0, i32 0
  %27 = getelementptr inbounds %"struct.net::ParsedExtension", %"struct.net::ParsedExtension"* %5, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.net::ParsedExtension", %"struct.net::ParsedExtension"* %5, i64 0, i32 2
  %29 = bitcast %"class.net::der::Input"* %6 to i8*
  %30 = bitcast %"struct.std::__1::pair.12"* %7 to i8*
  %31 = getelementptr inbounds %"struct.std::__1::pair.12", %"struct.std::__1::pair.12"* %7, i64 0, i32 1
  %32 = bitcast %"struct.net::ParsedExtension"* %31 to i8*
  %33 = getelementptr inbounds %"struct.std::__1::pair.12", %"struct.std::__1::pair.12"* %7, i64 0, i32 0
  %34 = bitcast %"class.net::der::Input"* %6 to i8*
  br label %35

35:                                               ; preds = %24, %45
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 40, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %26) #11
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %27) #11
  store i8 0, i8* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %6) #11
  %36 = call zeroext i1 @_ZN3net3der6Parser10ReadRawTLVEPNS0_5InputE(%"class.net::der::Parser"* nonnull %4, %"class.net::der::Input"* nonnull %6) #11
  br i1 %36, label %37, label %44

37:                                               ; preds = %35
  %38 = call zeroext i1 @_ZN3net14ParseExtensionERKNS_3der5InputEPNS_15ParsedExtensionE(%"class.net::der::Input"* nonnull dereferenceable(16) %6, %"struct.net::ParsedExtension"* nonnull %5)
  br i1 %38, label %39, label %44

39:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %30) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %25, i64 16, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* nonnull align 8 %25, i64 40, i1 false) #11
  %40 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JNS_4pairIS4_S5_EEEEENSF_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %16, %"class.net::der::Input"* nonnull dereferenceable(16) %33, %"struct.std::__1::pair.12"* nonnull dereferenceable(56) %7) #11
  %41 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %40, 1
  %42 = and i8 %41, 1
  %43 = icmp eq i8 %42, 0
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %30) #11
  br i1 %43, label %44, label %45

44:                                               ; preds = %35, %37, %39
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #11
  br label %50

45:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #11
  %46 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #11
  br i1 %46, label %35, label %47

47:                                               ; preds = %45, %15
  %48 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %3) #11
  %49 = xor i1 %48, true
  br label %50

50:                                               ; preds = %44, %47, %13, %2
  %51 = phi i1 [ false, %2 ], [ false, %13 ], [ %49, %47 ], [ false, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret i1 %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net16ConsumeExtensionERKNS_3der5InputEPNSt3__13mapIS1_NS_15ParsedExtensionENS4_4lessIS1_EENS4_9allocatorINS4_4pairIS2_S6_EEEEEEPS6_(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::map"*, %"struct.net::ParsedExtension"* nocapture) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %74, label %8

8:                                                ; preds = %3, %8
  %9 = phi %"class.std::__1::__tree_end_node"* [ %18, %8 ], [ %4, %3 ]
  %10 = phi %"class.std::__1::__tree_node"* [ %19, %8 ], [ %6, %3 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %11, %"class.net::der::Input"* dereferenceable(16) %0) #11
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %10 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %8

21:                                               ; preds = %8
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %4
  br i1 %22, label %74, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.net::der::Input"*
  %26 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %0, %"class.net::der::Input"* dereferenceable(16) %25) #11
  br i1 %26, label %74, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 6
  %29 = bitcast %"struct.net::ParsedExtension"* %2 to i8*
  %30 = bitcast %"class.std::__1::__tree_end_node"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 33, i1 false)
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 1, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, null
  br i1 %33, label %34, label %42

34:                                               ; preds = %27
  %35 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node_base"*
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 2
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_end_node"**
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %35
  br i1 %41, label %58, label %49

42:                                               ; preds = %27, %42
  %43 = phi %"class.std::__1::__tree_node_base"* [ %45, %42 ], [ %32, %27 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %47, label %42

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 0
  br label %58

49:                                               ; preds = %34, %49
  %50 = phi %"class.std::__1::__tree_end_node"** [ %53, %49 ], [ %37, %34 ]
  %51 = bitcast %"class.std::__1::__tree_end_node"** %50 to %"class.std::__1::__tree_node_base"**
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %52, i64 0, i32 2
  %54 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, %52
  br i1 %57, label %58, label %49

58:                                               ; preds = %49, %47, %34
  %59 = phi %"class.std::__1::__tree_end_node"* [ %48, %47 ], [ %38, %34 ], [ %54, %49 ]
  %60 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 0
  %61 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_end_node"* %61, %18
  br i1 %62, label %63, label %66

63:                                               ; preds = %58
  %64 = ptrtoint %"class.std::__1::__tree_end_node"* %59 to i64
  %65 = bitcast %"class.std::__1::map"* %1 to i64*
  store i64 %64, i64* %65, align 8
  br label %66

66:                                               ; preds = %58, %63
  %67 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, -1
  store i64 %69, i64* %67, align 8
  %70 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %71, %"class.std::__1::__tree_node_base"* %72) #11
  %73 = bitcast %"class.std::__1::__tree_end_node"* %18 to i8*
  tail call void @_ZdlPv(i8* %73) #12
  br label %74

74:                                               ; preds = %23, %21, %3, %66
  %75 = phi i1 [ true, %66 ], [ false, %3 ], [ false, %21 ], [ false, %23 ]
  ret i1 %75
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net21ParseBasicConstraintsERKNS_3der5InputEPNS_22ParsedBasicConstraintsE(%"class.net::der::Input"* dereferenceable(16), %"struct.net::ParsedBasicConstraints"*) local_unnamed_addr #0 {
  %3 = alloca %"class.net::der::Parser", align 8
  %4 = alloca %"class.net::der::Parser", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.net::der::Input", align 8
  %7 = alloca %"class.net::der::Input", align 8
  %8 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Input"* dereferenceable(16) %0) #11
  %10 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %4) #11
  %12 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Parser"* nonnull %4) #11
  br i1 %12, label %13, label %44

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.net::ParsedBasicConstraints", %"struct.net::ParsedBasicConstraints"* %1, i64 0, i32 0
  store i8 0, i8* %14, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #11
  store i8 -86, i8* %5, align 1
  %15 = bitcast %"class.net::der::Input"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #11
  %16 = bitcast %"class.net::der::Input"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %6) #11
  %17 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPNS0_5InputEPb(%"class.net::der::Parser"* nonnull %4, i32 1, %"class.net::der::Input"* nonnull %6, i8* nonnull %5) #11
  br i1 %17, label %18, label %42

18:                                               ; preds = %13
  %19 = load i8, i8* %5, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %18
  %22 = call zeroext i1 @_ZN3net3der9ParseBoolERKNS0_5InputEPb(%"class.net::der::Input"* nonnull dereferenceable(16) %6, i8* %14) #11
  br i1 %22, label %23, label %42

23:                                               ; preds = %18, %21
  %24 = bitcast %"class.net::der::Input"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #11
  %25 = bitcast %"class.net::der::Input"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %7) #11
  %26 = getelementptr inbounds %"struct.net::ParsedBasicConstraints", %"struct.net::ParsedBasicConstraints"* %1, i64 0, i32 1
  %27 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPNS0_5InputEPb(%"class.net::der::Parser"* nonnull %4, i32 2, %"class.net::der::Input"* nonnull %7, i8* %26) #11
  br i1 %27, label %28, label %40

28:                                               ; preds = %23
  %29 = load i8, i8* %26, align 1, !range !2
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %"struct.net::ParsedBasicConstraints", %"struct.net::ParsedBasicConstraints"* %1, i64 0, i32 2
  br i1 %30, label %34, label %32

32:                                               ; preds = %28
  %33 = call zeroext i1 @_ZN3net3der10ParseUint8ERKNS0_5InputEPh(%"class.net::der::Input"* nonnull dereferenceable(16) %7, i8* %31) #11
  br i1 %33, label %35, label %40

34:                                               ; preds = %28
  store i8 0, i8* %31, align 1
  br label %35

35:                                               ; preds = %32, %34
  %36 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #11
  br i1 %36, label %40, label %37

37:                                               ; preds = %35
  %38 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %3) #11
  %39 = xor i1 %38, true
  br label %40

40:                                               ; preds = %37, %35, %32, %23
  %41 = phi i1 [ false, %23 ], [ false, %32 ], [ false, %35 ], [ %39, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  br label %42

42:                                               ; preds = %21, %13, %40
  %43 = phi i1 [ %41, %40 ], [ false, %13 ], [ false, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  br label %44

44:                                               ; preds = %2, %42
  %45 = phi i1 [ %43, %42 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret i1 %45
}

declare zeroext i1 @_ZN3net3der10ParseUint8ERKNS0_5InputEPh(%"class.net::der::Input"* dereferenceable(16), i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net13ParseKeyUsageERKNS_3der5InputEPNS0_9BitStringE(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::BitString"*) local_unnamed_addr #0 {
  %3 = alloca %"class.net::der::Parser", align 8
  %4 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Input"* dereferenceable(16) %0) #11
  %6 = call zeroext i1 @_ZN3net3der6Parser13ReadBitStringEPNS0_9BitStringE(%"class.net::der::Parser"* nonnull %3, %"class.net::der::BitString"* %1) #11
  br i1 %6, label %7, label %24

7:                                                ; preds = %2
  %8 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %3) #11
  br i1 %8, label %24, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %1, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %1, i64 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  br label %18

16:                                               ; preds = %18
  %17 = icmp eq i64 %23, %11
  br i1 %17, label %24, label %18

18:                                               ; preds = %16, %13
  %19 = phi i64 [ 0, %13 ], [ %23, %16 ]
  %20 = getelementptr inbounds i8, i8* %15, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  %23 = add nuw i64 %19, 1
  br i1 %22, label %16, label %24

24:                                               ; preds = %18, %16, %9, %7, %2
  %25 = phi i1 [ false, %2 ], [ false, %7 ], [ false, %9 ], [ false, %16 ], [ true, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net24ParseAuthorityInfoAccessERKNS_3der5InputEPNSt3__16vectorIN4base16BasicStringPieceIcNS4_11char_traitsIcEEEENS4_9allocatorISA_EEEESE_(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::vector.14"*, %"class.std::__1::vector.14"*) local_unnamed_addr #0 {
  %4 = alloca %"class.net::der::Parser", align 8
  %5 = alloca %"class.net::der::Parser", align 8
  %6 = alloca %"class.net::der::Parser", align 8
  %7 = alloca %"class.net::der::Input", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.net::der::Input", align 8
  %10 = alloca %"class.net::der::Input", align 8
  %11 = alloca %"class.net::der::Input", align 8
  %12 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %4, %"class.net::der::Input"* dereferenceable(16) %0) #11
  %14 = bitcast %"class.std::__1::vector.14"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %1, i64 0, i32 0, i32 1
  %17 = bitcast %"class.base::BasicStringPiece"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"class.std::__1::vector.14"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %2, i64 0, i32 0, i32 1
  %21 = bitcast %"class.base::BasicStringPiece"** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"class.net::der::Parser"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  %23 = bitcast %"class.net::der::Parser"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %5) #11
  %24 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %4, %"class.net::der::Parser"* nonnull %5) #11
  br i1 %24, label %25, label %202

25:                                               ; preds = %3
  %26 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %5) #11
  br i1 %26, label %27, label %202

27:                                               ; preds = %25
  %28 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %5) #11
  br i1 %28, label %29, label %202

29:                                               ; preds = %27
  %30 = bitcast %"class.net::der::Parser"* %6 to i8*
  %31 = bitcast %"class.net::der::Input"* %7 to i8*
  %32 = bitcast i32* %8 to i8*
  %33 = bitcast %"class.net::der::Input"* %9 to i8*
  %34 = bitcast %"class.net::der::Input"* %10 to i8*
  %35 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %10, i64 0, i32 0
  %36 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %10, i64 0, i32 1
  %37 = bitcast %"class.net::der::Input"* %11 to i8*
  %38 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %11, i64 0, i32 0
  %39 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %11, i64 0, i32 1
  %40 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.base::BasicStringPiece"** %40 to i64*
  %42 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %2, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast %"class.base::BasicStringPiece"** %43 to i64*
  %45 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %1, i64 0, i32 0, i32 0
  %46 = bitcast %"class.net::der::Parser"* %6 to i8*
  %47 = bitcast %"class.net::der::Input"* %7 to i8*
  %48 = bitcast %"class.net::der::Input"* %9 to i8*
  br label %49

49:                                               ; preds = %29, %198
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %6) #11
  %50 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %5, %"class.net::der::Parser"* nonnull %6) #11
  br i1 %50, label %52, label %51

51:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #11
  br label %202

52:                                               ; preds = %49
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %7) #11
  %53 = call zeroext i1 @_ZN3net3der6Parser7ReadTagEjPNS0_5InputE(%"class.net::der::Parser"* nonnull %6, i32 6, %"class.net::der::Input"* nonnull %7) #11
  br i1 %53, label %55, label %54

54:                                               ; preds = %52
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #11
  br label %202

55:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #11
  store i32 -1431655766, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %9) #11
  %56 = call zeroext i1 @_ZN3net3der6Parser15ReadTagAndValueEPjPNS0_5InputE(%"class.net::der::Parser"* nonnull %6, i32* nonnull %8, %"class.net::der::Input"* nonnull %9) #11
  br i1 %56, label %57, label %200

57:                                               ; preds = %55
  %58 = load i32, i32* %8, align 4
  %59 = call i32 @_ZN3net3der24ContextSpecificPrimitiveEh(i8 zeroext 6) #11
  %60 = icmp eq i32 %58, %59
  br i1 %60, label %61, label %198

61:                                               ; preds = %57
  %62 = call { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"* nonnull %9) #11
  %63 = extractvalue { i8*, i64 } %62, 0
  %64 = extractvalue { i8*, i64 } %62, 1
  %65 = call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %63, i64 %64) #11
  br i1 %65, label %66, label %201

66:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #11
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZZN3net14AdCaIssuersOidEvE3oid, i64 0, i64 0), i8** %35, align 8
  store i64 8, i64* %36, align 8
  %67 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* nonnull dereferenceable(16) %7, %"class.net::der::Input"* nonnull dereferenceable(16) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #11
  br i1 %67, label %68, label %132

68:                                               ; preds = %66
  %69 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %16, align 8
  %70 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %43, align 8
  %71 = icmp eq %"class.base::BasicStringPiece"* %69, %70
  %72 = ptrtoint %"class.base::BasicStringPiece"* %70 to i64
  br i1 %71, label %78, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %69, i64 0, i32 0
  store i8* %63, i8** %74, align 8
  %75 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %69, i64 0, i32 1
  store i64 %64, i64* %75, align 8
  %76 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %69, i64 1
  %77 = ptrtoint %"class.base::BasicStringPiece"* %76 to i64
  store i64 %77, i64* %17, align 8
  br label %198

78:                                               ; preds = %68
  %79 = ptrtoint %"class.base::BasicStringPiece"* %69 to i64
  %80 = load i64, i64* %14, align 8
  %81 = sub i64 %79, %80
  %82 = ashr exact i64 %81, 4
  %83 = add nsw i64 %82, 1
  %84 = icmp ugt i64 %83, 1152921504606846975
  br i1 %84, label %85, label %87

85:                                               ; preds = %78
  %86 = bitcast %"class.std::__1::vector.14"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %86) #13
  unreachable

87:                                               ; preds = %78
  %88 = sub i64 %72, %80
  %89 = ashr exact i64 %88, 4
  %90 = icmp ult i64 %89, 576460752303423487
  br i1 %90, label %91, label %99

91:                                               ; preds = %87
  %92 = ashr exact i64 %88, 3
  %93 = icmp ult i64 %92, %83
  %94 = select i1 %93, i64 %83, i64 %92
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %91
  %97 = icmp ugt i64 %94, 1152921504606846975
  br i1 %97, label %98, label %99

98:                                               ; preds = %96
  call void @abort() #13
  unreachable

99:                                               ; preds = %96, %87
  %100 = phi i64 [ %94, %96 ], [ 1152921504606846975, %87 ]
  %101 = shl i64 %100, 4
  %102 = call i8* @_Znwm(i64 %101) #12
  %103 = bitcast i8* %102 to %"class.base::BasicStringPiece"*
  br label %104

104:                                              ; preds = %99, %91
  %105 = phi i64 [ %100, %99 ], [ 0, %91 ]
  %106 = phi %"class.base::BasicStringPiece"* [ %103, %99 ], [ null, %91 ]
  %107 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %106, i64 %82
  %108 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %106, i64 %105
  %109 = ptrtoint %"class.base::BasicStringPiece"* %108 to i64
  %110 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %107, i64 0, i32 0
  store i8* %63, i8** %110, align 8
  %111 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %106, i64 %82, i32 1
  store i64 %64, i64* %111, align 8
  %112 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %107, i64 1
  %113 = ptrtoint %"class.base::BasicStringPiece"* %112 to i64
  %114 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %45, align 8
  %115 = load i64, i64* %17, align 8
  %116 = ptrtoint %"class.base::BasicStringPiece"* %114 to i64
  %117 = sub i64 %115, %116
  %118 = ashr exact i64 %117, 4
  %119 = sub nsw i64 0, %118
  %120 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %107, i64 %119
  %121 = ptrtoint %"class.base::BasicStringPiece"* %120 to i64
  %122 = icmp sgt i64 %117, 0
  br i1 %122, label %123, label %127

123:                                              ; preds = %104
  %124 = bitcast %"class.base::BasicStringPiece"* %120 to i8*
  %125 = bitcast %"class.base::BasicStringPiece"* %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 %117, i1 false) #11
  %126 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %45, align 8
  br label %127

127:                                              ; preds = %123, %104
  %128 = phi %"class.base::BasicStringPiece"* [ %114, %104 ], [ %126, %123 ]
  store i64 %121, i64* %14, align 8
  store i64 %113, i64* %17, align 8
  store i64 %109, i64* %44, align 8
  %129 = icmp eq %"class.base::BasicStringPiece"* %128, null
  br i1 %129, label %198, label %130

130:                                              ; preds = %127
  %131 = bitcast %"class.base::BasicStringPiece"* %128 to i8*
  call void @_ZdlPv(i8* %131) #12
  br label %198

132:                                              ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #11
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZZN3net9AdOcspOidEvE3oid, i64 0, i64 0), i8** %38, align 8
  store i64 8, i64* %39, align 8
  %133 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* nonnull dereferenceable(16) %7, %"class.net::der::Input"* nonnull dereferenceable(16) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #11
  br i1 %133, label %134, label %198

134:                                              ; preds = %132
  %135 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %20, align 8
  %136 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %40, align 8
  %137 = icmp eq %"class.base::BasicStringPiece"* %135, %136
  %138 = ptrtoint %"class.base::BasicStringPiece"* %136 to i64
  br i1 %137, label %144, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %135, i64 0, i32 0
  store i8* %63, i8** %140, align 8
  %141 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %135, i64 0, i32 1
  store i64 %64, i64* %141, align 8
  %142 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %135, i64 1
  %143 = ptrtoint %"class.base::BasicStringPiece"* %142 to i64
  store i64 %143, i64* %21, align 8
  br label %198

144:                                              ; preds = %134
  %145 = ptrtoint %"class.base::BasicStringPiece"* %135 to i64
  %146 = load i64, i64* %18, align 8
  %147 = sub i64 %145, %146
  %148 = ashr exact i64 %147, 4
  %149 = add nsw i64 %148, 1
  %150 = icmp ugt i64 %149, 1152921504606846975
  br i1 %150, label %151, label %153

151:                                              ; preds = %144
  %152 = bitcast %"class.std::__1::vector.14"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %152) #13
  unreachable

153:                                              ; preds = %144
  %154 = sub i64 %138, %146
  %155 = ashr exact i64 %154, 4
  %156 = icmp ult i64 %155, 576460752303423487
  br i1 %156, label %157, label %165

157:                                              ; preds = %153
  %158 = ashr exact i64 %154, 3
  %159 = icmp ult i64 %158, %149
  %160 = select i1 %159, i64 %149, i64 %158
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %170, label %162

162:                                              ; preds = %157
  %163 = icmp ugt i64 %160, 1152921504606846975
  br i1 %163, label %164, label %165

164:                                              ; preds = %162
  call void @abort() #13
  unreachable

165:                                              ; preds = %162, %153
  %166 = phi i64 [ %160, %162 ], [ 1152921504606846975, %153 ]
  %167 = shl i64 %166, 4
  %168 = call i8* @_Znwm(i64 %167) #12
  %169 = bitcast i8* %168 to %"class.base::BasicStringPiece"*
  br label %170

170:                                              ; preds = %165, %157
  %171 = phi i64 [ %166, %165 ], [ 0, %157 ]
  %172 = phi %"class.base::BasicStringPiece"* [ %169, %165 ], [ null, %157 ]
  %173 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %172, i64 %148
  %174 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %172, i64 %171
  %175 = ptrtoint %"class.base::BasicStringPiece"* %174 to i64
  %176 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %173, i64 0, i32 0
  store i8* %63, i8** %176, align 8
  %177 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %172, i64 %148, i32 1
  store i64 %64, i64* %177, align 8
  %178 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %173, i64 1
  %179 = ptrtoint %"class.base::BasicStringPiece"* %178 to i64
  %180 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %42, align 8
  %181 = load i64, i64* %21, align 8
  %182 = ptrtoint %"class.base::BasicStringPiece"* %180 to i64
  %183 = sub i64 %181, %182
  %184 = ashr exact i64 %183, 4
  %185 = sub nsw i64 0, %184
  %186 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %173, i64 %185
  %187 = ptrtoint %"class.base::BasicStringPiece"* %186 to i64
  %188 = icmp sgt i64 %183, 0
  br i1 %188, label %189, label %193

189:                                              ; preds = %170
  %190 = bitcast %"class.base::BasicStringPiece"* %186 to i8*
  %191 = bitcast %"class.base::BasicStringPiece"* %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %190, i8* align 8 %191, i64 %183, i1 false) #11
  %192 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %42, align 8
  br label %193

193:                                              ; preds = %189, %170
  %194 = phi %"class.base::BasicStringPiece"* [ %180, %170 ], [ %192, %189 ]
  store i64 %187, i64* %18, align 8
  store i64 %179, i64* %21, align 8
  store i64 %175, i64* %41, align 8
  %195 = icmp eq %"class.base::BasicStringPiece"* %194, null
  br i1 %195, label %198, label %196

196:                                              ; preds = %193
  %197 = bitcast %"class.base::BasicStringPiece"* %194 to i8*
  call void @_ZdlPv(i8* %197) #12
  br label %198

198:                                              ; preds = %196, %193, %139, %130, %127, %73, %132, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #11
  %199 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %5) #11
  br i1 %199, label %49, label %202

200:                                              ; preds = %55
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #11
  br label %202

201:                                              ; preds = %61
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #11
  br label %202

202:                                              ; preds = %198, %27, %201, %200, %54, %51, %25, %3
  %203 = phi i1 [ false, %3 ], [ false, %25 ], [ false, %51 ], [ false, %54 ], [ false, %200 ], [ false, %201 ], [ true, %27 ], [ true, %198 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  ret i1 %203
}

declare { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23ParsedDistributionPointC2Ev(%"struct.net::ParsedDistributionPoint"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.net::ParsedDistributionPoint"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 25, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23ParsedDistributionPointC2EOS0_(%"struct.net::ParsedDistributionPoint"* nocapture, %"struct.net::ParsedDistributionPoint"* nocapture dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::ParsedDistributionPoint"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #11
  %4 = bitcast %"struct.net::ParsedDistributionPoint"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.net::ParsedDistributionPoint"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.base::BasicStringPiece"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.base::BasicStringPiece"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.base::BasicStringPiece"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::BasicStringPiece"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"struct.net::ParsedDistributionPoint"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #11
  %18 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %1, i64 0, i32 1
  %20 = load i8, i8* %19, align 8, !range !2
  store i8 %20, i8* %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23ParsedDistributionPointD2Ev(%"struct.net::ParsedDistributionPoint"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %2, align 8
  %4 = icmp eq %"class.base::BasicStringPiece"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.base::BasicStringPiece"* %3 to i64
  %7 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.base::BasicStringPiece"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net26ParseCrlDistributionPointsERKNS_3der5InputEPNSt3__16vectorINS_23ParsedDistributionPointENS4_9allocatorIS6_EEEE(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::vector.21"*) local_unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.net::der::Input", align 8
  %5 = alloca %"class.net::der::Parser", align 8
  %6 = alloca %"class.net::CertErrors", align 8
  %7 = alloca %"struct.net::ParsedDistributionPoint", align 8
  %8 = alloca %"class.net::der::Parser", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.net::der::Input", align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca %"class.net::der::Input", align 8
  %14 = alloca %"class.net::der::Parser", align 8
  %15 = alloca %"class.net::der::Parser", align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %1, i64 0, i32 0, i32 0
  %17 = load %"struct.net::ParsedDistributionPoint"*, %"struct.net::ParsedDistributionPoint"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %1, i64 0, i32 0, i32 1
  %19 = load %"struct.net::ParsedDistributionPoint"*, %"struct.net::ParsedDistributionPoint"** %18, align 8
  %20 = icmp eq %"struct.net::ParsedDistributionPoint"* %19, %17
  br i1 %20, label %34, label %21

21:                                               ; preds = %2, %32
  %22 = phi %"struct.net::ParsedDistributionPoint"* [ %23, %32 ], [ %19, %2 ]
  %23 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %22, i64 -1
  %24 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %24, align 8
  %26 = icmp eq %"class.base::BasicStringPiece"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %21
  %28 = ptrtoint %"class.base::BasicStringPiece"* %25 to i64
  %29 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %22, i64 -1, i32 0, i32 0, i32 1
  %30 = bitcast %"class.base::BasicStringPiece"** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast %"class.base::BasicStringPiece"* %25 to i8*
  tail call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %27, %21
  %33 = icmp eq %"struct.net::ParsedDistributionPoint"* %23, %17
  br i1 %33, label %34, label %21

34:                                               ; preds = %32, %2
  store %"struct.net::ParsedDistributionPoint"* %17, %"struct.net::ParsedDistributionPoint"** %18, align 8
  %35 = bitcast %"class.net::der::Parser"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #11
  %36 = bitcast %"class.net::der::Parser"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %14, %"class.net::der::Input"* dereferenceable(16) %0) #11
  %37 = bitcast %"class.net::der::Parser"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  %38 = bitcast %"class.net::der::Parser"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %15) #11
  %39 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %14, %"class.net::der::Parser"* nonnull %15) #11
  br i1 %39, label %40, label %137

40:                                               ; preds = %34
  %41 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %14) #11
  br i1 %41, label %137, label %42

42:                                               ; preds = %40
  %43 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %15) #11
  br i1 %43, label %44, label %137

44:                                               ; preds = %42
  %45 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %15) #11
  br i1 %45, label %46, label %137

46:                                               ; preds = %44
  %47 = bitcast %"struct.net::ParsedDistributionPoint"* %7 to i8*
  %48 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %7, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %7, i64 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %7, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %7, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %7, i64 0, i32 1
  %53 = bitcast %"class.net::der::Parser"* %8 to i8*
  %54 = bitcast %"class.net::der::Input"* %10 to i8*
  %55 = bitcast %"class.net::der::Input"* %4 to i8*
  %56 = bitcast %"class.net::der::Parser"* %5 to i8*
  %57 = bitcast %"class.net::CertErrors"* %6 to i8*
  %58 = bitcast %"class.net::der::Input"* %13 to i8*
  %59 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %60 = bitcast %"struct.net::ParsedDistributionPoint"* %7 to i64*
  %61 = bitcast %"class.base::BasicStringPiece"** %50 to i64*
  %62 = bitcast %"class.base::BasicStringPiece"** %51 to i64*
  %63 = bitcast %"struct.net::ParsedDistributionPoint"** %18 to i64*
  br label %64

64:                                               ; preds = %46, %135
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %47) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 32, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 25, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 24, i1 false) #11
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %8) #11
  %65 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %15, %"class.net::der::Parser"* nonnull %8) #11
  br i1 %65, label %67, label %66

66:                                               ; preds = %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #11
  br label %137

67:                                               ; preds = %64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #11
  store i8 -86, i8* %9, align 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 16, i1 false) #11
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %10) #11
  %68 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPNS0_5InputEPb(%"class.net::der::Parser"* nonnull %8, i32 -1610612736, %"class.net::der::Input"* nonnull %10, i8* nonnull %9) #11
  br i1 %68, label %69, label %127

69:                                               ; preds = %67
  %70 = load i8, i8* %9, align 1, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %127, label %72

72:                                               ; preds = %69
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #11
  store i8 -86, i8* %11, align 1
  %73 = call zeroext i1 @_ZN3net3der6Parser15SkipOptionalTagEjPb(%"class.net::der::Parser"* nonnull %8, i32 -2147483647, i8* nonnull %11) #11
  br i1 %73, label %74, label %123

74:                                               ; preds = %72
  %75 = load i8, i8* %11, align 1, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %123

77:                                               ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #11
  store i8 -86, i8* %3, align 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 16, i1 false) #11
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %4) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #11
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %5, %"class.net::der::Input"* nonnull dereferenceable(16) %10) #11
  %78 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPNS0_5InputEPb(%"class.net::der::Parser"* nonnull %5, i32 -1610612736, %"class.net::der::Input"* nonnull %4, i8* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #11
  br i1 %78, label %80, label %79

79:                                               ; preds = %77
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #11
  br label %123

80:                                               ; preds = %77
  %81 = load i8, i8* %3, align 1, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %97, label %83

83:                                               ; preds = %80
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 24, i1 false) #11
  call void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"* nonnull %6) #11
  %84 = call %"struct.net::GeneralNames"* @_ZN3net12GeneralNames15CreateFromValueERKNS_3der5InputEPNS_10CertErrorsE(%"class.net::der::Input"* nonnull dereferenceable(16) %4, %"class.net::CertErrors"* nonnull %6) #11
  %85 = icmp eq %"struct.net::GeneralNames"* %84, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"struct.net::GeneralNames", %"struct.net::GeneralNames"* %84, i64 0, i32 6
  %88 = icmp eq %"class.std::__1::vector.14"* %87, %48
  br i1 %88, label %94, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %87, i64 0, i32 0, i32 0
  %91 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %90, align 8
  %92 = getelementptr inbounds %"struct.net::GeneralNames", %"struct.net::GeneralNames"* %84, i64 0, i32 6, i32 0, i32 1
  %93 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %92, align 8
  call void @_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE6assignIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.14"* nonnull %48, %"class.base::BasicStringPiece"* %91, %"class.base::BasicStringPiece"* %93) #11
  br label %94

94:                                               ; preds = %89, %86
  call void @_ZN3net12GeneralNamesD1Ev(%"struct.net::GeneralNames"* nonnull %84) #11
  %95 = bitcast %"struct.net::GeneralNames"* %84 to i8*
  call void @_ZdlPv(i8* %95) #12
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #11
  br label %97

96:                                               ; preds = %83
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #11
  br label %123

97:                                               ; preds = %80, %94
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #11
  store i8 -86, i8* %12, align 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 16, i1 false) #11
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %13) #11
  %98 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPNS0_5InputEPb(%"class.net::der::Parser"* nonnull %8, i32 -1610612734, %"class.net::der::Input"* nonnull %13, i8* nonnull %12) #11
  br i1 %98, label %99, label %121

99:                                               ; preds = %97
  %100 = load i8, i8* %12, align 1, !range !2
  store i8 %100, i8* %52, align 8
  %101 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %8) #11
  br i1 %101, label %121, label %102

102:                                              ; preds = %99
  %103 = load %"struct.net::ParsedDistributionPoint"*, %"struct.net::ParsedDistributionPoint"** %18, align 8
  %104 = load %"struct.net::ParsedDistributionPoint"*, %"struct.net::ParsedDistributionPoint"** %59, align 8
  %105 = icmp ult %"struct.net::ParsedDistributionPoint"* %103, %104
  br i1 %105, label %106, label %120

106:                                              ; preds = %102
  %107 = bitcast %"struct.net::ParsedDistributionPoint"* %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #11
  %108 = load i64, i64* %60, align 8
  %109 = bitcast %"struct.net::ParsedDistributionPoint"* %103 to i64*
  store i64 %108, i64* %109, align 8
  %110 = load i64, i64* %61, align 8
  %111 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %103, i64 0, i32 0, i32 0, i32 1
  %112 = bitcast %"class.base::BasicStringPiece"** %111 to i64*
  store i64 %110, i64* %112, align 8
  %113 = load i64, i64* %62, align 8
  %114 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %103, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %115 = bitcast %"class.base::BasicStringPiece"** %114 to i64*
  store i64 %113, i64* %115, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 24, i1 false) #11
  %116 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %103, i64 0, i32 1
  %117 = load i8, i8* %52, align 8, !range !2
  store i8 %117, i8* %116, align 8
  %118 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %103, i64 1
  %119 = ptrtoint %"struct.net::ParsedDistributionPoint"* %118 to i64
  store i64 %119, i64* %63, align 8
  br label %121

120:                                              ; preds = %102
  call void @_ZNSt3__16vectorIN3net23ParsedDistributionPointENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.21"* %1, %"struct.net::ParsedDistributionPoint"* nonnull dereferenceable(32) %7) #11
  br label %121

121:                                              ; preds = %120, %106, %99, %97
  %122 = phi i1 [ false, %97 ], [ false, %99 ], [ true, %106 ], [ true, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #11
  br label %123

123:                                              ; preds = %121, %96, %79, %74, %72
  %124 = phi i1 [ %122, %121 ], [ false, %72 ], [ true, %74 ], [ false, %96 ], [ false, %79 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #11
  %125 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %49, align 8
  %126 = bitcast %"class.base::BasicStringPiece"* %125 to i8*
  br label %127

127:                                              ; preds = %123, %69, %67
  %128 = phi i8* [ %126, %123 ], [ null, %67 ], [ null, %69 ]
  %129 = phi %"class.base::BasicStringPiece"* [ %125, %123 ], [ null, %67 ], [ null, %69 ]
  %130 = phi i1 [ %124, %123 ], [ false, %67 ], [ true, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #11
  %131 = icmp eq %"class.base::BasicStringPiece"* %129, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %127
  %133 = ptrtoint %"class.base::BasicStringPiece"* %129 to i64
  store i64 %133, i64* %61, align 8
  call void @_ZdlPv(i8* %128) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #11
  br i1 %130, label %135, label %137

134:                                              ; preds = %127
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #11
  br i1 %130, label %135, label %137

135:                                              ; preds = %134, %132
  %136 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %15) #11
  br i1 %136, label %64, label %137

137:                                              ; preds = %134, %135, %132, %44, %66, %42, %40, %34
  %138 = phi i1 [ false, %34 ], [ false, %40 ], [ false, %42 ], [ false, %66 ], [ true, %44 ], [ false, %134 ], [ true, %135 ], [ false, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #11
  ret i1 %138
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net28ParsedAuthorityKeyIdentifierC2Ev(%"struct.net::ParsedAuthorityKeyIdentifier"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"struct.net::ParsedAuthorityKeyIdentifier", %"struct.net::ParsedAuthorityKeyIdentifier"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"struct.net::ParsedAuthorityKeyIdentifier", %"struct.net::ParsedAuthorityKeyIdentifier"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.net::ParsedAuthorityKeyIdentifier", %"struct.net::ParsedAuthorityKeyIdentifier"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net28ParsedAuthorityKeyIdentifierD2Ev(%"struct.net::ParsedAuthorityKeyIdentifier"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net28ParsedAuthorityKeyIdentifierC2EOS0_(%"struct.net::ParsedAuthorityKeyIdentifier"* nocapture, %"struct.net::ParsedAuthorityKeyIdentifier"* nocapture readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::ParsedAuthorityKeyIdentifier", %"struct.net::ParsedAuthorityKeyIdentifier"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.net::ParsedAuthorityKeyIdentifier", %"struct.net::ParsedAuthorityKeyIdentifier"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 72, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"struct.net::ParsedAuthorityKeyIdentifier"* @_ZN3net28ParsedAuthorityKeyIdentifieraSEOS0_(%"struct.net::ParsedAuthorityKeyIdentifier"* returned, %"struct.net::ParsedAuthorityKeyIdentifier"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::ParsedAuthorityKeyIdentifier", %"struct.net::ParsedAuthorityKeyIdentifier"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.net::ParsedAuthorityKeyIdentifier", %"struct.net::ParsedAuthorityKeyIdentifier"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 72, i1 false)
  ret %"struct.net::ParsedAuthorityKeyIdentifier"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net27ParseAuthorityKeyIdentifierERKNS_3der5InputEPNS_28ParsedAuthorityKeyIdentifierE(%"class.net::der::Input"* dereferenceable(16), %"struct.net::ParsedAuthorityKeyIdentifier"*) local_unnamed_addr #0 {
  %3 = alloca %"class.net::der::Parser", align 8
  %4 = alloca %"class.net::der::Parser", align 8
  %5 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Input"* dereferenceable(16) %0) #11
  %7 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %4) #11
  %9 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Parser"* nonnull %4) #11
  br i1 %9, label %10, label %35

10:                                               ; preds = %2
  %11 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %3) #11
  br i1 %11, label %35, label %12

12:                                               ; preds = %10
  %13 = call i32 @_ZN3net3der24ContextSpecificPrimitiveEh(i8 zeroext 0) #11
  %14 = getelementptr inbounds %"struct.net::ParsedAuthorityKeyIdentifier", %"struct.net::ParsedAuthorityKeyIdentifier"* %1, i64 0, i32 0
  %15 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPN4absl8optionalINS0_5InputEEE(%"class.net::der::Parser"* nonnull %4, i32 %13, %"class.absl::optional"* %14) #11
  br i1 %15, label %16, label %35

16:                                               ; preds = %12
  %17 = call i32 @_ZN3net3der26ContextSpecificConstructedEh(i8 zeroext 1) #11
  %18 = getelementptr inbounds %"struct.net::ParsedAuthorityKeyIdentifier", %"struct.net::ParsedAuthorityKeyIdentifier"* %1, i64 0, i32 1
  %19 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPN4absl8optionalINS0_5InputEEE(%"class.net::der::Parser"* nonnull %4, i32 %17, %"class.absl::optional"* %18) #11
  br i1 %19, label %20, label %35

20:                                               ; preds = %16
  %21 = call i32 @_ZN3net3der24ContextSpecificPrimitiveEh(i8 zeroext 2) #11
  %22 = getelementptr inbounds %"struct.net::ParsedAuthorityKeyIdentifier", %"struct.net::ParsedAuthorityKeyIdentifier"* %1, i64 0, i32 2
  %23 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPN4absl8optionalINS0_5InputEEE(%"class.net::der::Parser"* nonnull %4, i32 %21, %"class.absl::optional"* %22) #11
  br i1 %23, label %24, label %35

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp ne i8 %26, 0
  %28 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = xor i1 %27, %30
  br i1 %31, label %35, label %32

32:                                               ; preds = %24
  %33 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #11
  %34 = xor i1 %33, true
  br label %35

35:                                               ; preds = %32, %24, %20, %16, %12, %10, %2
  %36 = phi i1 [ false, %2 ], [ false, %10 ], [ false, %12 ], [ false, %16 ], [ false, %20 ], [ false, %24 ], [ %34, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret i1 %36
}

declare zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPN4absl8optionalINS0_5InputEEE(%"class.net::der::Parser"*, i32, %"class.absl::optional"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net25ParseSubjectKeyIdentifierERKNS_3der5InputEPS1_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"*) local_unnamed_addr #0 {
  %3 = alloca %"class.net::der::Parser", align 8
  %4 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Input"* dereferenceable(16) %0) #11
  %6 = call zeroext i1 @_ZN3net3der6Parser7ReadTagEjPNS0_5InputE(%"class.net::der::Parser"* nonnull %3, i32 4, %"class.net::der::Input"* %1) #11
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %3) #11
  %9 = xor i1 %8, true
  br label %10

10:                                               ; preds = %7, %2
  %11 = phi i1 [ false, %2 ], [ %9, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret i1 %11
}

declare zeroext i1 @_ZN3net3der6Parser10ReadUint64EPm(%"class.net::der::Parser"*, i64*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net3der6Parser15SkipOptionalTagEjPb(%"class.net::der::Parser"*, i32, i8*) local_unnamed_addr #1

declare %"struct.net::GeneralNames"* @_ZN3net12GeneralNames15CreateFromValueERKNS_3der5InputEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), %"class.net::CertErrors"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE6assignIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.14"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.base::BasicStringPiece"* %2 to i64
  %5 = ptrtoint %"class.base::BasicStringPiece"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.14"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.base::BasicStringPiece"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.base::BasicStringPiece"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 %22
  %25 = select i1 %23, %"class.base::BasicStringPiece"* %24, %"class.base::BasicStringPiece"* %2
  %26 = ptrtoint %"class.base::BasicStringPiece"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 4
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 4
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.base::BasicStringPiece"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to %"class.base::BasicStringPiece"*
  %43 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %42, i64 %39
  %44 = ptrtoint %"class.base::BasicStringPiece"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 %28
  store %"class.base::BasicStringPiece"* %48, %"class.base::BasicStringPiece"** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.base::BasicStringPiece"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector.14"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 1152921504606846975
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.14"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 4
  %63 = icmp ult i64 %62, 576460752303423487
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 3
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 1152921504606846975
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.14"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #13
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 1152921504606846975, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 4
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to %"class.base::BasicStringPiece"*
  %76 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.base::BasicStringPiece"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.14"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %75, i64 %72
  store %"class.base::BasicStringPiece"* %79, %"class.base::BasicStringPiece"** %8, align 8
  %80 = bitcast %"class.base::BasicStringPiece"** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 4
  %85 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %75, i64 %84
  %87 = ptrtoint %"class.base::BasicStringPiece"* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN3net12GeneralNamesD1Ev(%"struct.net::GeneralNames"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net23ParsedDistributionPointENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.21"*, %"struct.net::ParsedDistributionPoint"* dereferenceable(32)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.net::ParsedDistributionPoint"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.21"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.21"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.net::ParsedDistributionPoint"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"struct.net::ParsedDistributionPoint"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.net::ParsedDistributionPoint"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %36, i64 %35
  %39 = ptrtoint %"struct.net::ParsedDistributionPoint"* %38 to i64
  %40 = bitcast %"struct.net::ParsedDistributionPoint"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #11
  %41 = bitcast %"struct.net::ParsedDistributionPoint"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.net::ParsedDistributionPoint"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %1, i64 0, i32 0, i32 0, i32 1
  %45 = bitcast %"class.base::BasicStringPiece"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %36, i64 %9, i32 0, i32 0, i32 1
  %48 = bitcast %"class.base::BasicStringPiece"** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast %"class.base::BasicStringPiece"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %36, i64 %9, i32 0, i32 0, i32 2, i32 0, i32 0
  %53 = bitcast %"class.base::BasicStringPiece"** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = bitcast %"struct.net::ParsedDistributionPoint"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #11
  %55 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %36, i64 %9, i32 1
  %56 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %1, i64 0, i32 1
  %57 = load i8, i8* %56, align 8, !range !2
  store i8 %57, i8* %55, align 8
  %58 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %37, i64 1
  %59 = ptrtoint %"struct.net::ParsedDistributionPoint"* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 0
  %61 = load %"struct.net::ParsedDistributionPoint"*, %"struct.net::ParsedDistributionPoint"** %60, align 8
  %62 = ptrtoint %"struct.net::ParsedDistributionPoint"* %61 to i64
  %63 = load %"struct.net::ParsedDistributionPoint"*, %"struct.net::ParsedDistributionPoint"** %3, align 8
  %64 = icmp eq %"struct.net::ParsedDistributionPoint"* %63, %61
  br i1 %64, label %145, label %65

65:                                               ; preds = %34
  %66 = getelementptr %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %63, i64 -1, i32 0, i32 0, i32 0
  %67 = ptrtoint %"class.base::BasicStringPiece"** %66 to i64
  %68 = sub i64 %67, %62
  %69 = and i64 %68, 32
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %92

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %37, i64 -1
  %73 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %63, i64 -1
  %74 = bitcast %"struct.net::ParsedDistributionPoint"* %72 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #11
  %75 = bitcast %"struct.net::ParsedDistributionPoint"* %73 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"struct.net::ParsedDistributionPoint"* %72 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %63, i64 -1, i32 0, i32 0, i32 1
  %79 = bitcast %"class.base::BasicStringPiece"** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %37, i64 -1, i32 0, i32 0, i32 1
  %82 = bitcast %"class.base::BasicStringPiece"** %81 to i64*
  store i64 %80, i64* %82, align 8
  %83 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %63, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %84 = bitcast %"class.base::BasicStringPiece"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %37, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast %"class.base::BasicStringPiece"** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = bitcast %"struct.net::ParsedDistributionPoint"* %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #11
  %89 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %37, i64 -1, i32 1
  %90 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %63, i64 -1, i32 1
  %91 = load i8, i8* %90, align 8, !range !2
  store i8 %91, i8* %89, align 8
  br label %92

92:                                               ; preds = %71, %65
  %93 = phi %"struct.net::ParsedDistributionPoint"* [ undef, %65 ], [ %72, %71 ]
  %94 = phi %"struct.net::ParsedDistributionPoint"* [ %37, %65 ], [ %72, %71 ]
  %95 = phi %"struct.net::ParsedDistributionPoint"* [ %63, %65 ], [ %73, %71 ]
  %96 = icmp ult i64 %68, 32
  br i1 %96, label %141, label %97

97:                                               ; preds = %92, %97
  %98 = phi %"struct.net::ParsedDistributionPoint"* [ %120, %97 ], [ %94, %92 ]
  %99 = phi %"struct.net::ParsedDistributionPoint"* [ %121, %97 ], [ %95, %92 ]
  %100 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %98, i64 -1
  %101 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %99, i64 -1
  %102 = bitcast %"struct.net::ParsedDistributionPoint"* %100 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 24, i1 false) #11
  %103 = bitcast %"struct.net::ParsedDistributionPoint"* %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.net::ParsedDistributionPoint"* %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %99, i64 -1, i32 0, i32 0, i32 1
  %107 = bitcast %"class.base::BasicStringPiece"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %98, i64 -1, i32 0, i32 0, i32 1
  %110 = bitcast %"class.base::BasicStringPiece"** %109 to i64*
  store i64 %108, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %99, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %112 = bitcast %"class.base::BasicStringPiece"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %98, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %115 = bitcast %"class.base::BasicStringPiece"** %114 to i64*
  store i64 %113, i64* %115, align 8
  %116 = bitcast %"struct.net::ParsedDistributionPoint"* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 24, i1 false) #11
  %117 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %98, i64 -1, i32 1
  %118 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %99, i64 -1, i32 1
  %119 = load i8, i8* %118, align 8, !range !2
  store i8 %119, i8* %117, align 8
  %120 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %98, i64 -2
  %121 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %99, i64 -2
  %122 = bitcast %"struct.net::ParsedDistributionPoint"* %120 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 24, i1 false) #11
  %123 = bitcast %"struct.net::ParsedDistributionPoint"* %121 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.net::ParsedDistributionPoint"* %120 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %99, i64 -2, i32 0, i32 0, i32 1
  %127 = bitcast %"class.base::BasicStringPiece"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %98, i64 -2, i32 0, i32 0, i32 1
  %130 = bitcast %"class.base::BasicStringPiece"** %129 to i64*
  store i64 %128, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %99, i64 -2, i32 0, i32 0, i32 2, i32 0, i32 0
  %132 = bitcast %"class.base::BasicStringPiece"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %98, i64 -2, i32 0, i32 0, i32 2, i32 0, i32 0
  %135 = bitcast %"class.base::BasicStringPiece"** %134 to i64*
  store i64 %133, i64* %135, align 8
  %136 = bitcast %"struct.net::ParsedDistributionPoint"* %121 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 24, i1 false) #11
  %137 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %98, i64 -2, i32 1
  %138 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %99, i64 -2, i32 1
  %139 = load i8, i8* %138, align 8, !range !2
  store i8 %139, i8* %137, align 8
  %140 = icmp eq %"struct.net::ParsedDistributionPoint"* %121, %61
  br i1 %140, label %141, label %97

141:                                              ; preds = %97, %92
  %142 = phi %"struct.net::ParsedDistributionPoint"* [ %93, %92 ], [ %120, %97 ]
  %143 = load i64, i64* %6, align 8
  %144 = load %"struct.net::ParsedDistributionPoint"*, %"struct.net::ParsedDistributionPoint"** %3, align 8
  br label %145

145:                                              ; preds = %34, %141
  %146 = phi %"struct.net::ParsedDistributionPoint"* [ %144, %141 ], [ %61, %34 ]
  %147 = phi %"struct.net::ParsedDistributionPoint"* [ %142, %141 ], [ %37, %34 ]
  %148 = phi i64 [ %143, %141 ], [ %62, %34 ]
  %149 = ptrtoint %"struct.net::ParsedDistributionPoint"* %147 to i64
  store i64 %149, i64* %6, align 8
  store i64 %59, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %150 = inttoptr i64 %148 to %"struct.net::ParsedDistributionPoint"*
  %151 = icmp eq %"struct.net::ParsedDistributionPoint"* %146, %150
  br i1 %151, label %165, label %152

152:                                              ; preds = %145, %163
  %153 = phi %"struct.net::ParsedDistributionPoint"* [ %154, %163 ], [ %146, %145 ]
  %154 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %153, i64 -1
  %155 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %154, i64 0, i32 0, i32 0, i32 0
  %156 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %155, align 8
  %157 = icmp eq %"class.base::BasicStringPiece"* %156, null
  br i1 %157, label %163, label %158

158:                                              ; preds = %152
  %159 = ptrtoint %"class.base::BasicStringPiece"* %156 to i64
  %160 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %153, i64 -1, i32 0, i32 0, i32 1
  %161 = bitcast %"class.base::BasicStringPiece"** %160 to i64*
  store i64 %159, i64* %161, align 8
  %162 = bitcast %"class.base::BasicStringPiece"* %156 to i8*
  tail call void @_ZdlPv(i8* %162) #12
  br label %163

163:                                              ; preds = %158, %152
  %164 = icmp eq %"struct.net::ParsedDistributionPoint"* %154, %150
  br i1 %164, label %165, label %152

165:                                              ; preds = %163, %145
  %166 = icmp eq i64 %148, 0
  br i1 %166, label %169, label %167

167:                                              ; preds = %165
  %168 = inttoptr i64 %148 to i8*
  tail call void @_ZdlPv(i8* %168) #12
  br label %169

169:                                              ; preds = %165, %167
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JNS_4pairIS4_S5_EEEEENSF_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.net::der::Input"* dereferenceable(16), %"struct.std::__1::pair.12"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %31, %8
  %11 = phi %"class.std::__1::__tree_node"* [ %34, %31 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %33, %31 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1, i32 0, i32 0
  %14 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %1, %"class.net::der::Input"* dereferenceable(16) %13) #11
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

21:                                               ; preds = %10
  %22 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %13, %"class.net::der::Input"* dereferenceable(16) %1) #11
  br i1 %22, label %23, label %29

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

31:                                               ; preds = %23, %15
  %32 = phi %"class.std::__1::__tree_node_base"* [ %17, %15 ], [ %25, %23 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %16, %15 ], [ %24, %23 ]
  %34 = bitcast %"class.std::__1::__tree_node_base"* %32 to %"class.std::__1::__tree_node"*
  br label %10

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %37

37:                                               ; preds = %19, %27, %29, %35
  %38 = phi %"class.std::__1::__tree_end_node"* [ %4, %35 ], [ %20, %19 ], [ %28, %27 ], [ %30, %29 ]
  %39 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %16, %19 ], [ %24, %27 ], [ %12, %29 ]
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node"**
  %41 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node"* %41, null
  br i1 %42, label %43, label %71

43:                                               ; preds = %37
  %44 = tail call i8* @_Znwm(i64 88) #12, !noalias !3
  %45 = getelementptr inbounds i8, i8* %44, i64 32
  %46 = bitcast %"struct.std::__1::pair.12"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 16, i1 false) #11, !noalias !3
  %47 = getelementptr inbounds i8, i8* %44, i64 48
  %48 = getelementptr inbounds %"struct.std::__1::pair.12", %"struct.std::__1::pair.12"* %2, i64 0, i32 1
  %49 = bitcast %"struct.net::ParsedExtension"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %49, i64 40, i1 false) #11, !noalias !3
  %50 = bitcast i8* %44 to %"class.std::__1::__tree_node"*
  %51 = bitcast i8* %44 to %"class.std::__1::__tree_node_base"*
  %52 = getelementptr inbounds i8, i8* %44, i64 16
  %53 = bitcast i8* %52 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %53, align 8
  %54 = bitcast %"class.std::__1::__tree_node_base"** %39 to i8**
  store i8* %44, i8** %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %43
  %61 = ptrtoint %"class.std::__1::__tree_node_base"* %58 to i64
  %62 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %61, i64* %62, align 8
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  br label %64

64:                                               ; preds = %60, %43
  %65 = phi %"class.std::__1::__tree_node_base"* [ %51, %43 ], [ %63, %60 ]
  %66 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"* %65) #11
  %68 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %68, align 8
  br label %71

71:                                               ; preds = %64, %37
  %72 = phi i8 [ 1, %64 ], [ 0, %37 ]
  %73 = phi %"class.std::__1::__tree_node"* [ %50, %64 ], [ %41, %37 ]
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %73, i64 0, i32 0, i32 0
  %75 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %74, 0
  %76 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %75, i8 %72, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %76
}

declare zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIS4_S5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISK_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIS4_S5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISK_EEEEEEDpOT_"}
