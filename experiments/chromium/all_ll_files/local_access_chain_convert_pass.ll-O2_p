; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/local_access_chain_convert_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/local_access_chain_convert_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.spv_position_t = type { i64, i64, i64 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spvtools::opt::LocalAccessChainConvertPass" = type { %"class.spvtools::opt::MemPass", %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.932" }
%"class.spvtools::opt::MemPass" = type { %"class.spvtools::opt::Pass.base", [7 x i8], %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_map.249" }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.910" = type { %"class.std::__1::__hash_table.911" }
%"class.std::__1::__hash_table.911" = type <{ %"class.std::__1::unique_ptr.912", %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.929", [4 x i8] }>
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914", %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"struct.std::__1::__hash_node_base.915"** }
%"struct.std::__1::__hash_node_base.915" = type { %"struct.std::__1::__hash_node_base.915"* }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.std::__1::__bucket_list_deallocator.917" }
%"class.std::__1::__bucket_list_deallocator.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.915" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.932" = type { %"class.std::__1::__hash_table.933" }
%"class.std::__1::__hash_table.933" = type <{ %"class.std::__1::unique_ptr.934", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.949", %"class.std::__1::__compressed_pair.953", [4 x i8] }>
%"class.std::__1::unique_ptr.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936", %"struct.std::__1::__compressed_pair_elem.938" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"struct.std::__1::__hash_node_base.937"** }
%"struct.std::__1::__hash_node_base.937" = type { %"struct.std::__1::__hash_node_base.937"* }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"class.std::__1::__bucket_list_deallocator.939" }
%"class.std::__1::__bucket_list_deallocator.939" = type { %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"struct.std::__1::__hash_node_base.937" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.std::__1::function.973" = type { %"class.std::__1::__function::__policy_func.977" }
%"class.std::__1::__function::__policy_func.977" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.978", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.978" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::function.959" = type { %"class.std::__1::__function::__policy_func.963" }
%"class.std::__1::__function::__policy_func.963" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.964", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.964" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::vector.965" = type { %"class.std::__1::__vector_base.966" }
%"class.std::__1::__vector_base.966" = type { i32*, i32*, %"class.std::__1::__compressed_pair.967" }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.968" }
%"struct.std::__1::__compressed_pair_elem.968" = type { i32* }
%"struct.std::__1::default_delete.150" = type { i8 }
%"class.std::__1::function.980" = type { %"class.std::__1::__function::__policy_func.984" }
%"class.std::__1::__function::__policy_func.984" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.985", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.985" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.std::__1::vector.987" = type { %"class.std::__1::__vector_base.988" }
%"class.std::__1::__vector_base.988" = type { %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**, %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.spvtools::opt::Instruction"** }
%"class.spvtools::opt::InstructionList::iterator" = type { %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" }
%"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" = type { %"class.spvtools::opt::Instruction"* }
%"class.std::__1::function.994" = type { %"class.std::__1::__function::__policy_func.998" }
%"class.std::__1::__function::__policy_func.998" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.999", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.999" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1002" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node.1046" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1011" }
%"struct.std::__1::pair.1011" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"struct.std::__1::__hash_node_base.1027" = type { %"struct.std::__1::__hash_node_base.1027"* }
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060", %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"struct.std::__1::__hash_node.1048"* }
%"struct.std::__1::__hash_node.1048" = type <{ %"struct.std::__1::__hash_node_base.915", i64, i32, [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.925"*, i8, [7 x i8] }>
%"class.std::__1::allocator.925" = type { i8 }
%"class.std::__1::__function::__default_alloc_func.1069" = type { %class.anon }
%class.anon = type { i32*, %"class.std::__1::vector"**, %"class.spvtools::opt::LocalAccessChainConvertPass"* }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools3opt27LocalAccessChainConvertPassD2Ev = comdat any

$_ZN8spvtools3opt27LocalAccessChainConvertPassD0Ev = comdat any

$_ZNK8spvtools3opt27LocalAccessChainConvertPass4nameEv = comdat any

$_ZN8spvtools3opt27LocalAccessChainConvertPass20GetPreservedAnalysesEv = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPKjEE11__call_implINS0_20__default_alloc_funcIZNK8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS3_EEEEUlS3_E_S4_EEEEbPKNS0_16__policy_storageES3_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_ = comdat any

$_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev = comdat any

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE = comdat any

$_ZN8spvtools3opt7MemPassD2Ev = comdat any

$_ZN8spvtools3opt7MemPassD0Ev = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt11InstructionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRS3_EEEvDpOT_ = comdat any

$_ZNKSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPKjEEEEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools3opt7MemPassE = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@_ZTVN8spvtools3opt27LocalAccessChainConvertPassE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::LocalAccessChainConvertPass"*)* @_ZN8spvtools3opt27LocalAccessChainConvertPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::LocalAccessChainConvertPass"*)* @_ZN8spvtools3opt27LocalAccessChainConvertPassD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::LocalAccessChainConvertPass"*)* @_ZNK8spvtools3opt27LocalAccessChainConvertPass4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::LocalAccessChainConvertPass"*)* @_ZN8spvtools3opt27LocalAccessChainConvertPass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::LocalAccessChainConvertPass"*)* @_ZN8spvtools3opt27LocalAccessChainConvertPass7ProcessEv to i8*)] }, align 8
@.str = private unnamed_addr constant [41 x i8] c"SPV_AMD_shader_explicit_vertex_parameter\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"SPV_AMD_shader_trinary_minmax\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"SPV_AMD_gcn_shader\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"SPV_KHR_shader_ballot\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"SPV_AMD_shader_ballot\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"SPV_AMD_gpu_shader_half_float\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"SPV_KHR_shader_draw_parameters\00", align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"SPV_KHR_subgroup_vote\00", align 1
@.str.10 = private unnamed_addr constant [21 x i8] c"SPV_KHR_8bit_storage\00", align 1
@.str.11 = private unnamed_addr constant [22 x i8] c"SPV_KHR_16bit_storage\00", align 1
@.str.12 = private unnamed_addr constant [21 x i8] c"SPV_KHR_device_group\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"SPV_KHR_multiview\00", align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"SPV_NVX_multiview_per_view_attributes\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"SPV_NV_viewport_array2\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"SPV_NV_stereo_view_rendering\00", align 1
@.str.17 = private unnamed_addr constant [37 x i8] c"SPV_NV_sample_mask_override_coverage\00", align 1
@.str.18 = private unnamed_addr constant [35 x i8] c"SPV_NV_geometry_shader_passthrough\00", align 1
@.str.19 = private unnamed_addr constant [32 x i8] c"SPV_AMD_texture_gather_bias_lod\00", align 1
@.str.20 = private unnamed_addr constant [37 x i8] c"SPV_KHR_storage_buffer_storage_class\00", align 1
@.str.21 = private unnamed_addr constant [25 x i8] c"SPV_AMD_gpu_shader_int16\00", align 1
@.str.22 = private unnamed_addr constant [28 x i8] c"SPV_KHR_post_depth_coverage\00", align 1
@.str.23 = private unnamed_addr constant [34 x i8] c"SPV_KHR_shader_atomic_counter_ops\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"SPV_EXT_shader_stencil_export\00", align 1
@.str.25 = private unnamed_addr constant [36 x i8] c"SPV_EXT_shader_viewport_index_layer\00", align 1
@.str.26 = private unnamed_addr constant [36 x i8] c"SPV_AMD_shader_image_load_store_lod\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"SPV_AMD_shader_fragment_mask\00", align 1
@.str.28 = private unnamed_addr constant [31 x i8] c"SPV_EXT_fragment_fully_covered\00", align 1
@.str.29 = private unnamed_addr constant [36 x i8] c"SPV_AMD_gpu_shader_half_float_fetch\00", align 1
@.str.30 = private unnamed_addr constant [27 x i8] c"SPV_GOOGLE_decorate_string\00", align 1
@.str.31 = private unnamed_addr constant [31 x i8] c"SPV_GOOGLE_hlsl_functionality1\00", align 1
@.str.32 = private unnamed_addr constant [21 x i8] c"SPV_GOOGLE_user_type\00", align 1
@.str.33 = private unnamed_addr constant [35 x i8] c"SPV_NV_shader_subgroup_partitioned\00", align 1
@.str.34 = private unnamed_addr constant [36 x i8] c"SPV_EXT_demote_to_helper_invocation\00", align 1
@.str.35 = private unnamed_addr constant [28 x i8] c"SPV_EXT_descriptor_indexing\00", align 1
@.str.36 = private unnamed_addr constant [35 x i8] c"SPV_NV_fragment_shader_barycentric\00", align 1
@.str.37 = private unnamed_addr constant [34 x i8] c"SPV_NV_compute_shader_derivatives\00", align 1
@.str.38 = private unnamed_addr constant [30 x i8] c"SPV_NV_shader_image_footprint\00", align 1
@.str.39 = private unnamed_addr constant [20 x i8] c"SPV_NV_shading_rate\00", align 1
@.str.40 = private unnamed_addr constant [19 x i8] c"SPV_NV_mesh_shader\00", align 1
@.str.41 = private unnamed_addr constant [19 x i8] c"SPV_NV_ray_tracing\00", align 1
@.str.42 = private unnamed_addr constant [20 x i8] c"SPV_KHR_ray_tracing\00", align 1
@.str.43 = private unnamed_addr constant [18 x i8] c"SPV_KHR_ray_query\00", align 1
@.str.44 = private unnamed_addr constant [36 x i8] c"SPV_EXT_fragment_invocation_density\00", align 1
@.str.45 = private unnamed_addr constant [29 x i8] c"SPV_KHR_terminate_invocation\00", align 1
@.str.46 = private unnamed_addr constant [38 x i8] c"ID overflow. Try running compact-ids.\00", align 1
@.str.47 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.ref.tmp.48 = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPKjEEEEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN8spvtools3opt7MemPassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.49 = private unnamed_addr constant [28 x i8] c"convert-local-access-chains\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt27LocalAccessChainConvertPass22AppendConstantOperandsEPKNS5_11InstructionEPNS_6vectorINS5_7OperandENS_9allocatorISB_EEEEE3$_0FvPKjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt27LocalAccessChainConvertPass22AppendConstantOperandsEPKNS5_11InstructionEPNS_6vectorINS5_7OperandENS_9allocatorISB_EEEEE3$_0FvPKjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt27LocalAccessChainConvertPass22AppendConstantOperandsEPKNS5_11InstructionEPNS_6vectorINS5_7OperandENS_9allocatorISB_EEEEE3$_0FvPKjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt27LocalAccessChainConvertPass26IsConstantIndexAccessChainEPKNS5_11InstructionEE3$_1FbPKjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt27LocalAccessChainConvertPass20HasOnlySupportedRefsEjE3$_2FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt27LocalAccessChainConvertPass24ConvertLocalAccessChainsEPNS5_8FunctionEE3$_3FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

@_ZN8spvtools3opt27LocalAccessChainConvertPassC1Ev = hidden unnamed_addr alias void (%"class.spvtools::opt::LocalAccessChainConvertPass"*), void (%"class.spvtools::opt::LocalAccessChainConvertPass"*)* @_ZN8spvtools3opt27LocalAccessChainConvertPassC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt27LocalAccessChainConvertPass18BuildAndAppendInstE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS3_9allocatorIS5_EEEEPNS4_INS3_10unique_ptrINS0_11InstructionENS3_14default_deleteISC_EEEENS6_ISF_EEEE(%"class.spvtools::opt::LocalAccessChainConvertPass"* nocapture readonly, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector.31"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::unique_ptr.21", align 8
  %8 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = tail call i8* @_Znwm(i64 112) #13
  %11 = bitcast i8* %10 to %"class.spvtools::opt::Instruction"*
  %12 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 0, i32 2
  %13 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  tail call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %11, %"class.spvtools::opt::IRContext"* %13, i32 %1, i32 %2, i32 %3, %"class.std::__1::vector"* dereferenceable(24) %4) #12
  %14 = ptrtoint i8* %10 to i64
  %15 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i64*
  store i64 %14, i64* %15, align 8
  %16 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 11
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = bitcast i8* %10 to %"class.spvtools::opt::Instruction"*
  br i1 %20, label %22, label %46

22:                                               ; preds = %6
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %23, align 8
  %25 = tail call i8* @_Znwm(i64 104) #13
  %26 = bitcast i8* %25 to %"class.spvtools::opt::analysis::DefUseManager"*
  %27 = getelementptr inbounds i8, i8* %25, i64 32
  %28 = bitcast i8* %27 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %25, i64 48
  %30 = getelementptr inbounds i8, i8* %25, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #12
  %31 = bitcast i8* %30 to i8**
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds i8, i8* %25, i64 64
  %33 = getelementptr inbounds i8, i8* %25, i64 96
  %34 = bitcast i8* %33 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %34, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %26, %"class.spvtools::opt::Module"* %24) #12
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 6
  %36 = ptrtoint i8* %25 to i64
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %35, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %37, align 8
  %39 = bitcast %"class.std::__1::unique_ptr.62"* %35 to i64*
  store i64 %36, i64* %39, align 8
  %40 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %38, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %22
  %42 = bitcast %"class.std::__1::unique_ptr.62"* %35 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %42, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %38) #12
  br label %43

43:                                               ; preds = %41, %22
  %44 = load i32, i32* %17, align 8
  %45 = or i32 %44, 1
  store i32 %45, i32* %17, align 8
  br label %46

46:                                               ; preds = %6, %43
  %47 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 6, i32 0, i32 0, i32 0
  %48 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %47, align 8
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %48, %"class.spvtools::opt::Instruction"* nonnull %21) #12
  %49 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %5, i64 0, i32 0, i32 1
  %50 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %52 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %51, align 8
  %53 = icmp ult %"class.std::__1::unique_ptr.21"* %50, %52
  br i1 %53, label %54, label %59

54:                                               ; preds = %46
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %9, align 8
  %55 = bitcast %"class.std::__1::unique_ptr.21"* %50 to i64*
  store i64 %14, i64* %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %50, i64 1
  %57 = ptrtoint %"class.std::__1::unique_ptr.21"* %56 to i64
  %58 = bitcast %"class.std::__1::unique_ptr.21"** %49 to i64*
  store i64 %57, i64* %58, align 8
  br label %60

59:                                               ; preds = %46
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt11InstructionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.31"* %5, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %7) #12
  br label %60

60:                                               ; preds = %54, %59
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %9, align 8
  %62 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %60
  %64 = bitcast %"class.spvtools::opt::Instruction"* %61 to void (%"class.spvtools::opt::Instruction"*)***
  %65 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %65, i64 1
  %67 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %66, align 8
  call void %67(%"class.spvtools::opt::Instruction"* nonnull %61) #12
  br label %68

68:                                               ; preds = %60, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #3

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt27LocalAccessChainConvertPass21BuildAndAppendVarLoadEPKNS0_11InstructionEPjS5_PNSt3__16vectorINS6_10unique_ptrIS2_NS6_14default_deleteIS2_EEEENS6_9allocatorISB_EEEE(%"class.spvtools::opt::LocalAccessChainConvertPass"*, %"class.spvtools::opt::Instruction"*, i32* nocapture, i32* nocapture, %"class.std::__1::vector.31"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = bitcast %"class.spvtools::opt::LocalAccessChainConvertPass"* %0 to %"class.spvtools::opt::Pass"*
  %10 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 0, i32 2
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %12, align 8
  %14 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %13) #12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 5, i32 0, i32 2
  %18 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %18, i64 0, i32 2
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %185

22:                                               ; preds = %16
  %23 = tail call i8* @_Znwm(i64 48) #13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %23, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.46, i64 0, i64 0), i64 37, i1 false) #12
  %24 = getelementptr inbounds i8, i8* %23, i64 37
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 5, i32 0, i32 1, i32 0
  %26 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 5, i32 0, i32 0
  tail call void %26(%"union.std::__1::__function::__policy_storage"* %27, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.47, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.48, i8* nonnull %23) #12
  tail call void @_ZdlPv(i8* nonnull %23) #13
  br label %185

28:                                               ; preds = %5
  %29 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %30 = load i8, i8* %29, align 4, !range !2
  %31 = icmp eq i8 %30, 0
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %33 = load i8, i8* %32, align 1, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = select i1 %34, i32 1, i32 2
  %36 = xor i1 %34, true
  %37 = zext i1 %36 to i32
  %38 = select i1 %31, i32 %37, i32 %35
  %39 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %38) #12
  store i32 %39, i32* %2, align 4
  %40 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 11
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %70

45:                                               ; preds = %28
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %46, align 8
  %48 = tail call i8* @_Znwm(i64 104) #13
  %49 = bitcast i8* %48 to %"class.spvtools::opt::analysis::DefUseManager"*
  %50 = getelementptr inbounds i8, i8* %48, i64 32
  %51 = bitcast i8* %50 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %51, align 4
  %52 = getelementptr inbounds i8, i8* %48, i64 48
  %53 = getelementptr inbounds i8, i8* %48, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #12
  %54 = bitcast i8* %53 to i8**
  store i8* %52, i8** %54, align 8
  %55 = getelementptr inbounds i8, i8* %48, i64 64
  %56 = getelementptr inbounds i8, i8* %48, i64 96
  %57 = bitcast i8* %56 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %57, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %49, %"class.spvtools::opt::Module"* %47) #12
  %58 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 6
  %59 = ptrtoint i8* %48 to i64
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %58, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %60, align 8
  %62 = bitcast %"class.std::__1::unique_ptr.62"* %58 to i64*
  store i64 %59, i64* %62, align 8
  %63 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %61, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %45
  %65 = bitcast %"class.std::__1::unique_ptr.62"* %58 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %65, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %61) #12
  br label %66

66:                                               ; preds = %64, %45
  %67 = load i32, i32* %41, align 8
  %68 = or i32 %67, 1
  store i32 %68, i32* %41, align 8
  %69 = load i32, i32* %2, align 4
  br label %70

70:                                               ; preds = %28, %66
  %71 = phi i32 [ %39, %28 ], [ %69, %66 ]
  %72 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 6, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %72, align 8
  %74 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %73, i32 %71) #12
  %75 = tail call i32 @_ZNK8spvtools3opt4Pass16GetPointeeTypeIdEPKNS0_11InstructionE(%"class.spvtools::opt::Pass"* %9, %"class.spvtools::opt::Instruction"* %74) #12
  store i32 %75, i32* %3, align 4
  %76 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #12
  %77 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %77) #12
  %78 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %78) #12
  %79 = load i32, i32* %2, align 4
  %80 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %80, align 8
  %81 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %82 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %83 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %84 = bitcast i32** %82 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %83, %"struct.std::__1::aligned_storage<4, 4>::type"** %84, align 8
  %85 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %86 = bitcast %"class.std::__1::unique_ptr.0"* %85 to i64*
  store i64 0, i64* %86, align 8
  %87 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %83 to i32*
  store i64 1, i64* %81, align 8
  store i32 %79, i32* %87, align 8
  %88 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  store i32 1, i32* %88, align 8
  %89 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %90 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %89, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %91, align 8
  %92 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 2
  %93 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 3, i64 0
  %94 = bitcast i32** %92 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %93, %"struct.std::__1::aligned_storage<4, 4>::type"** %94, align 8
  %95 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4
  %96 = bitcast %"class.std::__1::unique_ptr.0"* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %89, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #12
  %98 = call i8* @_Znwm(i64 48) #13
  %99 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %100 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %98, i8** %100, align 8
  %101 = getelementptr inbounds i8, i8* %98, i64 48
  %102 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %103 = bitcast %"struct.spvtools::opt::Operand"** %102 to i8**
  store i8* %101, i8** %103, align 8
  %104 = bitcast i8* %98 to i32*
  %105 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  %106 = load i32, i32* %105, align 8
  store i32 %106, i32* %104, align 8
  %107 = getelementptr inbounds i8, i8* %98, i64 8
  %108 = bitcast i8* %107 to %"class.spvtools::utils::SmallVector"*
  %109 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %110 = bitcast i8* %107 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %110, align 8
  %111 = getelementptr inbounds i8, i8* %98, i64 16
  %112 = bitcast i8* %111 to i64*
  store i64 0, i64* %112, align 8
  %113 = getelementptr inbounds i8, i8* %98, i64 24
  %114 = getelementptr inbounds i8, i8* %98, i64 32
  %115 = bitcast i8* %113 to i8**
  store i8* %114, i8** %115, align 8
  %116 = getelementptr inbounds i8, i8* %98, i64 40
  %117 = bitcast i8* %116 to i64*
  store i64 0, i64* %117, align 8
  %118 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %108, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %109) #12
  %119 = getelementptr inbounds i8, i8* %98, i64 48
  %120 = bitcast %"struct.spvtools::opt::Operand"** %99 to i64*
  %121 = ptrtoint i8* %119 to i64
  store i64 %121, i64* %120, align 8
  call void @_ZN8spvtools3opt27LocalAccessChainConvertPass18BuildAndAppendInstE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS3_9allocatorIS5_EEEEPNS4_INS3_10unique_ptrINS0_11InstructionENS3_14default_deleteISC_EEEENS6_ISF_EEEE(%"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i32 61, i32 %75, i32 %14, %"class.std::__1::vector"* nonnull dereferenceable(24) %6, %"class.std::__1::vector.31"* %4)
  %122 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %123 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %122, align 8
  %124 = icmp eq %"struct.spvtools::opt::Operand"* %123, null
  br i1 %124, label %153, label %125

125:                                              ; preds = %70
  %126 = bitcast %"struct.spvtools::opt::Operand"* %123 to i8*
  %127 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %99, align 8
  %128 = icmp eq %"struct.spvtools::opt::Operand"* %127, %123
  br i1 %128, label %151, label %129

129:                                              ; preds = %125, %147
  %130 = phi %"struct.spvtools::opt::Operand"* [ %131, %147 ], [ %127, %125 ]
  %131 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %130, i64 -1
  %132 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %130, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %132, align 8
  %133 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %130, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %134 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %133, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %133, align 8
  %135 = icmp eq %"class.std::__1::vector.3"* %134, null
  br i1 %135, label %147, label %136

136:                                              ; preds = %129
  %137 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %134, i64 0, i32 0, i32 0
  %138 = load i32*, i32** %137, align 8
  %139 = icmp eq i32* %138, null
  br i1 %139, label %145, label %140

140:                                              ; preds = %136
  %141 = ptrtoint i32* %138 to i64
  %142 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %134, i64 0, i32 0, i32 1
  %143 = bitcast i32** %142 to i64*
  store i64 %141, i64* %143, align 8
  %144 = bitcast i32* %138 to i8*
  call void @_ZdlPv(i8* %144) #13
  br label %145

145:                                              ; preds = %140, %136
  %146 = bitcast %"class.std::__1::vector.3"* %134 to i8*
  call void @_ZdlPv(i8* %146) #13
  br label %147

147:                                              ; preds = %145, %129
  %148 = icmp eq %"struct.spvtools::opt::Operand"* %131, %123
  br i1 %148, label %149, label %129

149:                                              ; preds = %147
  %150 = load i8*, i8** %100, align 8
  br label %151

151:                                              ; preds = %149, %125
  %152 = phi i8* [ %150, %149 ], [ %126, %125 ]
  store %"struct.spvtools::opt::Operand"* %123, %"struct.spvtools::opt::Operand"** %99, align 8
  call void @_ZdlPv(i8* %152) #13
  br label %153

153:                                              ; preds = %70, %151
  %154 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %154, align 8
  %155 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %156 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %155, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %155, align 8
  %157 = icmp eq %"class.std::__1::vector.3"* %156, null
  br i1 %157, label %169, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %156, i64 0, i32 0, i32 0
  %160 = load i32*, i32** %159, align 8
  %161 = icmp eq i32* %160, null
  br i1 %161, label %167, label %162

162:                                              ; preds = %158
  %163 = ptrtoint i32* %160 to i64
  %164 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %156, i64 0, i32 0, i32 1
  %165 = bitcast i32** %164 to i64*
  store i64 %163, i64* %165, align 8
  %166 = bitcast i32* %160 to i8*
  call void @_ZdlPv(i8* %166) #13
  br label %167

167:                                              ; preds = %162, %158
  %168 = bitcast %"class.std::__1::vector.3"* %156 to i8*
  call void @_ZdlPv(i8* %168) #13
  br label %169

169:                                              ; preds = %153, %167
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %80, align 8
  %170 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %171 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %170, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %170, align 8
  %172 = icmp eq %"class.std::__1::vector.3"* %171, null
  br i1 %172, label %184, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %171, i64 0, i32 0, i32 0
  %175 = load i32*, i32** %174, align 8
  %176 = icmp eq i32* %175, null
  br i1 %176, label %182, label %177

177:                                              ; preds = %173
  %178 = ptrtoint i32* %175 to i64
  %179 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %171, i64 0, i32 0, i32 1
  %180 = bitcast i32** %179 to i64*
  store i64 %178, i64* %180, align 8
  %181 = bitcast i32* %175 to i8*
  call void @_ZdlPv(i8* %181) #13
  br label %182

182:                                              ; preds = %177, %173
  %183 = bitcast %"class.std::__1::vector.3"* %171 to i8*
  call void @_ZdlPv(i8* %183) #13
  br label %184

184:                                              ; preds = %169, %182
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %78) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %77) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #12
  br label %185

185:                                              ; preds = %22, %16, %184
  ret i32 %14
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #3

declare i32 @_ZNK8spvtools3opt4Pass16GetPointeeTypeIdEPKNS0_11InstructionE(%"class.spvtools::opt::Pass"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #13
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt27LocalAccessChainConvertPass22AppendConstantOperandsEPKNS0_11InstructionEPNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::LocalAccessChainConvertPass"*, %"class.spvtools::opt::Instruction"* nocapture readonly, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::function.973", align 8
  %5 = alloca %"class.std::__1::vector"*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::function.959", align 8
  store %"class.std::__1::vector"* %2, %"class.std::__1::vector"** %5, align 8
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #12
  store i32 0, i32* %6, align 4
  %9 = bitcast %"class.std::__1::function.959"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.std::__1::function.959", %"class.std::__1::function.959"* %7, i64 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::function.959", %"class.std::__1::function.959"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPKjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt27LocalAccessChainConvertPass22AppendConstantOperandsEPKNS9_11InstructionEPNS_6vectorINS9_7OperandENS_9allocatorISF_EEEEE3$_0S4_EEEEvPKNS0_16__policy_storageES3_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %10, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt27LocalAccessChainConvertPass22AppendConstantOperandsEPKNS5_11InstructionEPNS_6vectorINS5_7OperandENS_9allocatorISB_EEEEE3$_0FvPKjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %11, align 8
  %12 = tail call i8* @_Znwm(i64 24) #13, !noalias !3
  %13 = bitcast i8* %12 to i32**
  store i32* %6, i32** %13, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = bitcast i8* %14 to %"class.std::__1::vector"***
  store %"class.std::__1::vector"** %5, %"class.std::__1::vector"*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 16
  %17 = bitcast i8* %16 to %"class.spvtools::opt::LocalAccessChainConvertPass"**
  store %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, %"class.spvtools::opt::LocalAccessChainConvertPass"** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::function.959", %"class.std::__1::function.959"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %12, i8** %18, align 8
  %19 = bitcast %"class.std::__1::function.973"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #12
  %20 = ptrtoint %"class.std::__1::function.959"* %7 to i64
  %21 = getelementptr inbounds %"class.std::__1::function.973", %"class.std::__1::function.973"* %4, i64 0, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.std::__1::function.973", %"class.std::__1::function.973"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPKjEE11__call_implINS0_20__default_alloc_funcIZNK8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS3_EEEEUlS3_E_S4_EEEEbPKNS0_16__policy_storageES3_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %21, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPKjEEEEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %22, align 8
  %23 = bitcast %"class.std::__1::function.973"* %4 to i64*
  store i64 %20, i64* %23, align 8
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %25 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %24, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %25, %27
  br i1 %28, label %51, label %29

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.std::__1::function.973", %"class.std::__1::function.973"* %4, i64 0, i32 0, i32 0
  br label %31

31:                                               ; preds = %46, %29
  %32 = phi %"struct.spvtools::opt::Operand"* [ %25, %29 ], [ %47, %46 ]
  %33 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %34) #12
  br i1 %35, label %36, label %46

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %38 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %37, align 8
  %39 = icmp eq %"class.std::__1::vector.3"* %38, null
  %40 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %38, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 1, i32 2
  %42 = select i1 %39, i32** %41, i32** %40
  %43 = load i32*, i32** %42, align 8
  %44 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %21, align 8
  %45 = call zeroext i1 %44(%"union.std::__1::__function::__policy_storage"* nonnull %30, i32* %43) #12
  br i1 %45, label %46, label %49

46:                                               ; preds = %36, %31
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 1
  %48 = icmp eq %"struct.spvtools::opt::Operand"* %47, %27
  br i1 %48, label %49, label %31

49:                                               ; preds = %46, %36
  %50 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %22, align 8
  br label %51

51:                                               ; preds = %49, %3
  %52 = phi %"struct.std::__1::__function::__policy"* [ %50, %49 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPKjEEEEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %3 ]
  %53 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %52, i64 0, i32 1
  %54 = load void (i8*)*, void (i8*)** %53, align 8
  %55 = icmp eq void (i8*)* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.std::__1::function.973", %"class.std::__1::function.973"* %4, i64 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  call void %54(i8* %58) #12
  br label %59

59:                                               ; preds = %51, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #12
  %60 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %11, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %60, i64 0, i32 1
  %62 = load void (i8*)*, void (i8*)** %61, align 8
  %63 = icmp eq void (i8*)* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %59
  %65 = load i8*, i8** %18, align 8
  call void %62(i8* %65) #12
  br label %66

66:                                               ; preds = %59, %64
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt27LocalAccessChainConvertPass22ReplaceAccessChainLoadEPKNS0_11InstructionEPS2_(%"class.spvtools::opt::LocalAccessChainConvertPass"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.31", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::vector.965", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"struct.spvtools::opt::Operand", align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %13 = bitcast %"struct.spvtools::opt::Operand"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 48
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = select i1 %24, i32 1, i32 2
  %26 = xor i1 %24, true
  %27 = zext i1 %26 to i32
  %28 = select i1 %21, i32 %27, i32 %25
  %29 = trunc i64 %18 to i32
  %30 = sub i32 %29, %28
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %55

32:                                               ; preds = %3
  %33 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 0, i32 2
  %34 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  br i1 %24, label %35, label %37

35:                                               ; preds = %32
  %36 = icmp eq i8 %20, 0
  br label %44

37:                                               ; preds = %32
  %38 = zext i8 %20 to i32
  %39 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %38) #12
  %40 = load i8, i8* %19, align 4, !range !2
  %41 = load i8, i8* %22, align 1, !range !2
  %42 = icmp eq i8 %41, 0
  %43 = icmp eq i8 %40, 0
  br i1 %42, label %44, label %47

44:                                               ; preds = %35, %37
  %45 = phi i1 [ %36, %35 ], [ %43, %37 ]
  %46 = phi i32 [ 0, %35 ], [ %39, %37 ]
  br label %47

47:                                               ; preds = %37, %44
  %48 = phi i1 [ %45, %44 ], [ %43, %37 ]
  %49 = phi i32 [ %46, %44 ], [ %39, %37 ]
  %50 = phi i32 [ 0, %44 ], [ 1, %37 ]
  %51 = phi i32 [ 1, %44 ], [ 2, %37 ]
  %52 = select i1 %48, i32 %50, i32 %51
  %53 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %52) #12
  %54 = tail call zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"* %34, i32 %49, i32 %53) #12
  br label %323

55:                                               ; preds = %3
  %56 = bitcast %"class.std::__1::vector.31"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #12
  %57 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %4, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 24, i1 false) #12
  %59 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #12
  store i32 -1431655766, i32* %5, align 4
  %60 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60) #12
  store i32 -1431655766, i32* %6, align 4
  %61 = call i32 @_ZN8spvtools3opt27LocalAccessChainConvertPass21BuildAndAppendVarLoadEPKNS0_11InstructionEPjS5_PNSt3__16vectorINS6_10unique_ptrIS2_NS6_14default_deleteIS2_EEEENS6_9allocatorISB_EEEE(%"class.spvtools::opt::LocalAccessChainConvertPass"* %0, %"class.spvtools::opt::Instruction"* %1, i32* nonnull %5, i32* nonnull %6, %"class.std::__1::vector.31"* nonnull %4)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %296, label %63

63:                                               ; preds = %55
  %64 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %57, align 8
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %65, align 8
  call void @_ZN8spvtools3opt11Instruction19UpdateDebugInfoFromEPKS1_(%"class.spvtools::opt::Instruction"* %66, %"class.spvtools::opt::Instruction"* %2) #12
  %67 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 0, i32 2
  %68 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %67, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %68, i64 0, i32 11
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %94

73:                                               ; preds = %63
  %74 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %68, i64 0, i32 4, i32 0, i32 0, i32 0
  %75 = bitcast %"class.spvtools::opt::Module"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = call i8* @_Znwm(i64 48) #13
  %78 = bitcast i8* %77 to %"class.spvtools::opt::analysis::DecorationManager"*
  %79 = getelementptr inbounds i8, i8* %77, i64 32
  %80 = bitcast i8* %79 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %80, align 4
  %81 = getelementptr inbounds i8, i8* %77, i64 40
  %82 = bitcast i8* %81 to i64*
  store i64 %76, i64* %82, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %78) #12
  %83 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %68, i64 0, i32 7
  %84 = ptrtoint i8* %77 to i64
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %83, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %85, align 8
  %87 = bitcast %"class.std::__1::unique_ptr.122"* %83 to i64*
  store i64 %84, i64* %87, align 8
  %88 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %86, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %73
  %90 = bitcast %"class.std::__1::unique_ptr.122"* %83 to %"struct.std::__1::default_delete.150"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %90, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %86) #12
  br label %91

91:                                               ; preds = %89, %73
  %92 = load i32, i32* %69, align 8
  %93 = or i32 %92, 4
  store i32 %93, i32* %69, align 8
  br label %94

94:                                               ; preds = %63, %91
  %95 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %68, i64 0, i32 7, i32 0, i32 0, i32 0
  %96 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %95, align 8
  %97 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 4
  %98 = load i8, i8* %97, align 1, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %105, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 3
  %102 = load i8, i8* %101, align 4, !range !2
  %103 = zext i8 %102 to i32
  %104 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 %103) #12
  br label %105

105:                                              ; preds = %94, %100
  %106 = phi i32 [ %104, %100 ], [ 0, %94 ]
  %107 = bitcast %"class.std::__1::vector.965"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #12
  %108 = call i8* @_Znwm(i64 4) #13
  %109 = getelementptr inbounds %"class.std::__1::vector.965", %"class.std::__1::vector.965"* %7, i64 0, i32 0, i32 1
  %110 = bitcast %"class.std::__1::vector.965"* %7 to i8**
  store i8* %108, i8** %110, align 8
  %111 = getelementptr inbounds i8, i8* %108, i64 4
  %112 = getelementptr inbounds %"class.std::__1::vector.965", %"class.std::__1::vector.965"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %113 = bitcast i32** %112 to i8**
  store i8* %111, i8** %113, align 8
  %114 = bitcast i32** %109 to i64*
  %115 = bitcast i8* %108 to i32*
  store i32 0, i32* %115, align 4
  %116 = ptrtoint i8* %111 to i64
  store i64 %116, i64* %114, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjjRKNSt3__16vectorI14SpvDecoration_NS3_9allocatorIS5_EEEE(%"class.spvtools::opt::analysis::DecorationManager"* %96, i32 %106, i32 %61, %"class.std::__1::vector.965"* nonnull dereferenceable(24) %7) #12
  %117 = getelementptr inbounds %"class.std::__1::vector.965", %"class.std::__1::vector.965"* %7, i64 0, i32 0, i32 0
  %118 = load i32*, i32** %117, align 8
  %119 = icmp eq i32* %118, null
  br i1 %119, label %123, label %120

120:                                              ; preds = %105
  %121 = ptrtoint i32* %118 to i64
  store i64 %121, i64* %114, align 8
  %122 = bitcast i32* %118 to i8*
  call void @_ZdlPv(i8* %122) #13
  br label %123

123:                                              ; preds = %105, %120
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #12
  %124 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt11Instruction12InsertBeforeEONSt3__16vectorINS2_10unique_ptrIS1_NS2_14default_deleteIS1_EEEENS2_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* %2, %"class.std::__1::vector.31"* nonnull dereferenceable(24) %4) #12
  %125 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %67, align 8
  %126 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %125, i64 0, i32 11
  %127 = load i32, i32* %126, align 8
  %128 = and i32 %127, 65536
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %144

130:                                              ; preds = %123
  %131 = call i8* @_Znwm(i64 232) #13
  %132 = bitcast i8* %131 to %"class.spvtools::opt::analysis::DebugInfoManager"*
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %132, %"class.spvtools::opt::IRContext"* %125) #12
  %133 = ptrtoint i8* %131 to i64
  %134 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %125, i64 0, i32 21
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593"* %134, i64 0, i32 0, i32 0, i32 0
  %136 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %135, align 8
  %137 = bitcast %"class.std::__1::unique_ptr.593"* %134 to i64*
  store i64 %133, i64* %137, align 8
  %138 = icmp eq %"class.spvtools::opt::analysis::DebugInfoManager"* %136, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %130
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %136) #12
  %140 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"* %136 to i8*
  call void @_ZdlPv(i8* %140) #13
  br label %141

141:                                              ; preds = %139, %130
  %142 = load i32, i32* %126, align 8
  %143 = or i32 %142, 65536
  store i32 %143, i32* %126, align 8
  br label %144

144:                                              ; preds = %123, %141
  %145 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %125, i64 0, i32 21, i32 0, i32 0, i32 0
  %146 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %145, align 8
  %147 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 0, i32 2
  %148 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %147, align 8
  %149 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %148, i64 0, i32 0, i32 3
  %150 = load i8, i8* %149, align 8, !range !2
  %151 = icmp eq i8 %150, 0
  %152 = select i1 %151, %"class.spvtools::opt::Instruction"* %148, %"class.spvtools::opt::Instruction"* null
  call void @_ZN8spvtools3opt8analysis16DebugInfoManager16AnalyzeDebugInstEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DebugInfoManager"* %146, %"class.spvtools::opt::Instruction"* %152) #12
  %153 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %153) #12
  %154 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %156 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 0, i64 24, i1 false) #12
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 6, i32 0, i32 0
  %158 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %157, align 8
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRS3_EEEvDpOT_(%"class.std::__1::vector"* nonnull %8, %"struct.spvtools::opt::Operand"* dereferenceable(48) %158) #12
  %159 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %157, align 8
  %160 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %155, align 8
  %161 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %156, align 8
  %162 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %159, i64 1
  %163 = icmp ult %"struct.spvtools::opt::Operand"* %160, %161
  br i1 %163, label %164, label %181

164:                                              ; preds = %144
  %165 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %160, i64 0, i32 0
  %166 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %162, i64 0, i32 0
  %167 = load i32, i32* %166, align 8
  store i32 %167, i32* %165, align 8
  %168 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %160, i64 0, i32 1
  %169 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %159, i64 1, i32 1
  %170 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %168, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %170, align 8
  %171 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %160, i64 0, i32 1, i32 1
  store i64 0, i64* %171, align 8
  %172 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %160, i64 0, i32 1, i32 2
  %173 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %160, i64 0, i32 1, i32 3, i64 0
  %174 = bitcast i32** %172 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %173, %"struct.std::__1::aligned_storage<4, 4>::type"** %174, align 8
  %175 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %160, i64 0, i32 1, i32 4
  %176 = bitcast %"class.std::__1::unique_ptr.0"* %175 to i64*
  store i64 0, i64* %176, align 8
  %177 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %168, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %169) #12
  %178 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %160, i64 1
  %179 = ptrtoint %"struct.spvtools::opt::Operand"* %178 to i64
  %180 = bitcast %"struct.spvtools::opt::Operand"** %155 to i64*
  store i64 %179, i64* %180, align 8
  br label %182

181:                                              ; preds = %144
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRS3_EEEvDpOT_(%"class.std::__1::vector"* nonnull %8, %"struct.spvtools::opt::Operand"* dereferenceable(48) %162) #12
  br label %182

182:                                              ; preds = %164, %181
  %183 = bitcast %"struct.spvtools::opt::Operand"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %183) #12
  %184 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %184) #12
  %185 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %185, align 8
  %186 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %187 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %188 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %189 = bitcast i32** %187 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %188, %"struct.std::__1::aligned_storage<4, 4>::type"** %189, align 8
  %190 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %191 = bitcast %"class.std::__1::unique_ptr.0"* %190 to i64*
  store i64 0, i64* %191, align 8
  %192 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %188 to i32*
  store i64 1, i64* %186, align 8
  store i32 %61, i32* %192, align 8
  %193 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 0
  store i32 1, i32* %193, align 8
  %194 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1
  %195 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %194, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %195, align 8
  %196 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 1
  store i64 0, i64* %196, align 8
  %197 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 2
  %198 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 3, i64 0
  %199 = bitcast i32** %197 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %198, %"struct.std::__1::aligned_storage<4, 4>::type"** %199, align 8
  %200 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 4
  %201 = bitcast %"class.std::__1::unique_ptr.0"* %200 to i64*
  store i64 0, i64* %201, align 8
  %202 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %194, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #12
  %203 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %155, align 8
  %204 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %156, align 8
  %205 = icmp ult %"struct.spvtools::opt::Operand"* %203, %204
  br i1 %205, label %206, label %221

206:                                              ; preds = %182
  %207 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %203, i64 0, i32 0
  %208 = load i32, i32* %193, align 8
  store i32 %208, i32* %207, align 8
  %209 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %203, i64 0, i32 1
  %210 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %209, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %210, align 8
  %211 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %203, i64 0, i32 1, i32 1
  store i64 0, i64* %211, align 8
  %212 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %203, i64 0, i32 1, i32 2
  %213 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %203, i64 0, i32 1, i32 3, i64 0
  %214 = bitcast i32** %212 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %213, %"struct.std::__1::aligned_storage<4, 4>::type"** %214, align 8
  %215 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %203, i64 0, i32 1, i32 4
  %216 = bitcast %"class.std::__1::unique_ptr.0"* %215 to i64*
  store i64 0, i64* %216, align 8
  %217 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %209, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %194) #12
  %218 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %203, i64 1
  %219 = ptrtoint %"struct.spvtools::opt::Operand"* %218 to i64
  %220 = bitcast %"struct.spvtools::opt::Operand"** %155 to i64*
  store i64 %219, i64* %220, align 8
  br label %222

221:                                              ; preds = %182
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"* nonnull %8, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %9) #12
  br label %222

222:                                              ; preds = %206, %221
  %223 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %223, align 8
  %224 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %225 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %224, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %224, align 8
  %226 = icmp eq %"class.std::__1::vector.3"* %225, null
  br i1 %226, label %238, label %227

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %225, i64 0, i32 0, i32 0
  %229 = load i32*, i32** %228, align 8
  %230 = icmp eq i32* %229, null
  br i1 %230, label %236, label %231

231:                                              ; preds = %227
  %232 = ptrtoint i32* %229 to i64
  %233 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %225, i64 0, i32 0, i32 1
  %234 = bitcast i32** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = bitcast i32* %229 to i8*
  call void @_ZdlPv(i8* %235) #13
  br label %236

236:                                              ; preds = %231, %227
  %237 = bitcast %"class.std::__1::vector.3"* %225 to i8*
  call void @_ZdlPv(i8* %237) #13
  br label %238

238:                                              ; preds = %222, %236
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %185, align 8
  %239 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %240 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %239, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %239, align 8
  %241 = icmp eq %"class.std::__1::vector.3"* %240, null
  br i1 %241, label %253, label %242

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %240, i64 0, i32 0, i32 0
  %244 = load i32*, i32** %243, align 8
  %245 = icmp eq i32* %244, null
  br i1 %245, label %251, label %246

246:                                              ; preds = %242
  %247 = ptrtoint i32* %244 to i64
  %248 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %240, i64 0, i32 0, i32 1
  %249 = bitcast i32** %248 to i64*
  store i64 %247, i64* %249, align 8
  %250 = bitcast i32* %244 to i8*
  call void @_ZdlPv(i8* %250) #13
  br label %251

251:                                              ; preds = %246, %242
  %252 = bitcast %"class.std::__1::vector.3"* %240 to i8*
  call void @_ZdlPv(i8* %252) #13
  br label %253

253:                                              ; preds = %238, %251
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %184) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %183) #12
  call void @_ZN8spvtools3opt27LocalAccessChainConvertPass22AppendConstantOperandsEPKNS0_11InstructionEPNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::LocalAccessChainConvertPass"* %0, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::vector"* nonnull %8)
  %254 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 2
  store i32 81, i32* %254, align 8
  call void @_ZN8spvtools3opt11Instruction15ReplaceOperandsERKNSt3__16vectorINS0_7OperandENS2_9allocatorIS4_EEEE(%"class.spvtools::opt::Instruction"* %2, %"class.std::__1::vector"* nonnull dereferenceable(24) %8) #12
  %255 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %67, align 8
  %256 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %255, i64 0, i32 11
  %257 = load i32, i32* %256, align 8
  %258 = and i32 %257, 1
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %263, label %260

260:                                              ; preds = %253
  %261 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %255, i64 0, i32 6, i32 0, i32 0, i32 0
  %262 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %261, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %262, %"class.spvtools::opt::Instruction"* %2) #12
  br label %263

263:                                              ; preds = %253, %260
  %264 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %154, align 8
  %265 = icmp eq %"struct.spvtools::opt::Operand"* %264, null
  br i1 %265, label %295, label %266

266:                                              ; preds = %263
  %267 = bitcast %"struct.spvtools::opt::Operand"* %264 to i8*
  %268 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %155, align 8
  %269 = icmp eq %"struct.spvtools::opt::Operand"* %268, %264
  br i1 %269, label %293, label %270

270:                                              ; preds = %266, %288
  %271 = phi %"struct.spvtools::opt::Operand"* [ %272, %288 ], [ %268, %266 ]
  %272 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 -1
  %273 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %273, align 8
  %274 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %275 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %274, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %274, align 8
  %276 = icmp eq %"class.std::__1::vector.3"* %275, null
  br i1 %276, label %288, label %277

277:                                              ; preds = %270
  %278 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %275, i64 0, i32 0, i32 0
  %279 = load i32*, i32** %278, align 8
  %280 = icmp eq i32* %279, null
  br i1 %280, label %286, label %281

281:                                              ; preds = %277
  %282 = ptrtoint i32* %279 to i64
  %283 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %275, i64 0, i32 0, i32 1
  %284 = bitcast i32** %283 to i64*
  store i64 %282, i64* %284, align 8
  %285 = bitcast i32* %279 to i8*
  call void @_ZdlPv(i8* %285) #13
  br label %286

286:                                              ; preds = %281, %277
  %287 = bitcast %"class.std::__1::vector.3"* %275 to i8*
  call void @_ZdlPv(i8* %287) #13
  br label %288

288:                                              ; preds = %286, %270
  %289 = icmp eq %"struct.spvtools::opt::Operand"* %272, %264
  br i1 %289, label %290, label %270

290:                                              ; preds = %288
  %291 = bitcast %"class.std::__1::vector"* %8 to i8**
  %292 = load i8*, i8** %291, align 8
  br label %293

293:                                              ; preds = %290, %266
  %294 = phi i8* [ %292, %290 ], [ %267, %266 ]
  store %"struct.spvtools::opt::Operand"* %264, %"struct.spvtools::opt::Operand"** %155, align 8
  call void @_ZdlPv(i8* %294) #13
  br label %295

295:                                              ; preds = %263, %293
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %153) #12
  br label %296

296:                                              ; preds = %55, %295
  %297 = phi i1 [ true, %295 ], [ false, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #12
  %298 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %57, align 8
  %299 = icmp eq %"class.std::__1::unique_ptr.21"* %298, null
  br i1 %299, label %322, label %300

300:                                              ; preds = %296
  %301 = bitcast %"class.std::__1::unique_ptr.21"* %298 to i8*
  %302 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %58, align 8
  %303 = icmp eq %"class.std::__1::unique_ptr.21"* %302, %298
  br i1 %303, label %320, label %304

304:                                              ; preds = %300, %315
  %305 = phi %"class.std::__1::unique_ptr.21"* [ %306, %315 ], [ %302, %300 ]
  %306 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %305, i64 -1
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %306, i64 0, i32 0, i32 0, i32 0
  %308 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %307, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %307, align 8
  %309 = icmp eq %"class.spvtools::opt::Instruction"* %308, null
  br i1 %309, label %315, label %310

310:                                              ; preds = %304
  %311 = bitcast %"class.spvtools::opt::Instruction"* %308 to void (%"class.spvtools::opt::Instruction"*)***
  %312 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %311, align 8
  %313 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %312, i64 1
  %314 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %313, align 8
  call void %314(%"class.spvtools::opt::Instruction"* nonnull %308) #12
  br label %315

315:                                              ; preds = %310, %304
  %316 = icmp eq %"class.std::__1::unique_ptr.21"* %306, %298
  br i1 %316, label %317, label %304

317:                                              ; preds = %315
  %318 = bitcast %"class.std::__1::vector.31"* %4 to i8**
  %319 = load i8*, i8** %318, align 8
  br label %320

320:                                              ; preds = %317, %300
  %321 = phi i8* [ %319, %317 ], [ %301, %300 ]
  store %"class.std::__1::unique_ptr.21"* %298, %"class.std::__1::unique_ptr.21"** %58, align 8
  call void @_ZdlPv(i8* %321) #13
  br label %322

322:                                              ; preds = %296, %320
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #12
  br label %323

323:                                              ; preds = %322, %47
  %324 = phi i1 [ true, %47 ], [ %297, %322 ]
  ret i1 %324
}

declare zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"*, i32, i32) local_unnamed_addr #3

declare void @_ZN8spvtools3opt11Instruction19UpdateDebugInfoFromEPKS1_(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3

declare void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjjRKNSt3__16vectorI14SpvDecoration_NS3_9allocatorIS5_EEEE(%"class.spvtools::opt::analysis::DecorationManager"*, i32, i32, %"class.std::__1::vector.965"* dereferenceable(24)) local_unnamed_addr #3

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt11Instruction12InsertBeforeEONSt3__16vectorINS2_10unique_ptrIS1_NS2_14default_deleteIS1_EEEENS2_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.31"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN8spvtools3opt8analysis16DebugInfoManager16AnalyzeDebugInstEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3

declare void @_ZN8spvtools3opt11Instruction15ReplaceOperandsERKNSt3__16vectorINS0_7OperandENS2_9allocatorIS4_EEEE(%"class.spvtools::opt::Instruction"*, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt27LocalAccessChainConvertPass30GenAccessChainStoreReplacementEPKNS0_11InstructionEjPNSt3__16vectorINS5_10unique_ptrIS2_NS5_14default_deleteIS2_EEEENS5_9allocatorISA_EEEE(%"class.spvtools::opt::LocalAccessChainConvertPass"*, %"class.spvtools::opt::Instruction"*, i32, %"class.std::__1::vector.31"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::__1::vector.965", align 8
  %12 = alloca %"class.std::__1::vector", align 8
  %13 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %14 = alloca %"class.spvtools::utils::SmallVector", align 8
  %15 = alloca %"class.spvtools::utils::SmallVector", align 8
  %16 = alloca %"class.std::__1::vector.965", align 8
  %17 = alloca %"class.std::__1::vector", align 8
  %18 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %19 = alloca %"class.spvtools::utils::SmallVector", align 8
  %20 = alloca %"class.spvtools::utils::SmallVector", align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %23 = bitcast %"struct.spvtools::opt::Operand"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector"* %21 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = sdiv exact i64 %27, 48
  %29 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %30 = load i8, i8* %29, align 4, !range !2
  %31 = icmp eq i8 %30, 0
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %33 = load i8, i8* %32, align 1, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = select i1 %34, i32 1, i32 2
  %36 = xor i1 %34, true
  %37 = zext i1 %36 to i32
  %38 = select i1 %31, i32 %37, i32 %35
  %39 = trunc i64 %28 to i32
  %40 = sub i32 %39, %38
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %203

42:                                               ; preds = %4
  %43 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #12
  %44 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %44) #12
  %45 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %45) #12
  %46 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %38) #12
  %47 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %49 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %50 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %51 = bitcast i32** %49 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %50, %"struct.std::__1::aligned_storage<4, 4>::type"** %51, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %50 to i32*
  store i64 1, i64* %48, align 8
  store i32 %46, i32* %54, align 8
  %55 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 0
  store i32 1, i32* %55, align 8
  %56 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1
  %57 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %56, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %58, align 8
  %59 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 2
  %60 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 3, i64 0
  %61 = bitcast i32** %59 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %60, %"struct.std::__1::aligned_storage<4, 4>::type"** %61, align 8
  %62 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4
  %63 = bitcast %"class.std::__1::unique_ptr.0"* %62 to i64*
  store i64 0, i64* %63, align 8
  %64 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %56, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #12
  %65 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %65) #12
  %66 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %70 = bitcast i32** %68 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %69, %"struct.std::__1::aligned_storage<4, 4>::type"** %70, align 8
  %71 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %72 = bitcast %"class.std::__1::unique_ptr.0"* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %69 to i32*
  store i64 1, i64* %67, align 8
  store i32 %2, i32* %73, align 8
  %74 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 0
  store i32 1, i32* %74, align 8
  %75 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1
  %76 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %75, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %77, align 8
  %78 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 2
  %79 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 3, i64 0
  %80 = bitcast i32** %78 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %79, %"struct.std::__1::aligned_storage<4, 4>::type"** %80, align 8
  %81 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 4
  %82 = bitcast %"class.std::__1::unique_ptr.0"* %81 to i64*
  store i64 0, i64* %82, align 8
  %83 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %75, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #12
  %84 = call i8* @_Znwm(i64 96) #13
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %86 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %84, i8** %86, align 8
  %87 = getelementptr inbounds i8, i8* %84, i64 96
  %88 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %89 = bitcast %"struct.spvtools::opt::Operand"** %88 to i8**
  store i8* %87, i8** %89, align 8
  %90 = bitcast i8* %84 to i32*
  %91 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 0
  %92 = load i32, i32* %91, align 8
  store i32 %92, i32* %90, align 8
  %93 = getelementptr inbounds i8, i8* %84, i64 8
  %94 = bitcast i8* %93 to %"class.spvtools::utils::SmallVector"*
  %95 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1
  %96 = bitcast i8* %93 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %96, align 8
  %97 = getelementptr inbounds i8, i8* %84, i64 16
  %98 = bitcast i8* %97 to i64*
  store i64 0, i64* %98, align 8
  %99 = getelementptr inbounds i8, i8* %84, i64 24
  %100 = getelementptr inbounds i8, i8* %84, i64 32
  %101 = bitcast i8* %99 to i8**
  store i8* %100, i8** %101, align 8
  %102 = getelementptr inbounds i8, i8* %84, i64 40
  %103 = bitcast i8* %102 to i64*
  store i64 0, i64* %103, align 8
  %104 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %94, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %95) #12
  %105 = getelementptr inbounds i8, i8* %84, i64 48
  %106 = bitcast i8* %105 to i32*
  %107 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 0
  %108 = load i32, i32* %107, align 8
  store i32 %108, i32* %106, align 8
  %109 = getelementptr inbounds i8, i8* %84, i64 56
  %110 = bitcast i8* %109 to %"class.spvtools::utils::SmallVector"*
  %111 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1
  %112 = bitcast i8* %109 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8
  %113 = getelementptr inbounds i8, i8* %84, i64 64
  %114 = bitcast i8* %113 to i64*
  store i64 0, i64* %114, align 8
  %115 = getelementptr inbounds i8, i8* %84, i64 72
  %116 = getelementptr inbounds i8, i8* %84, i64 80
  %117 = bitcast i8* %115 to i8**
  store i8* %116, i8** %117, align 8
  %118 = getelementptr inbounds i8, i8* %84, i64 88
  %119 = bitcast i8* %118 to i64*
  store i64 0, i64* %119, align 8
  %120 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %110, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %111) #12
  %121 = getelementptr inbounds i8, i8* %84, i64 96
  %122 = bitcast %"struct.spvtools::opt::Operand"** %85 to i64*
  %123 = ptrtoint i8* %121 to i64
  store i64 %123, i64* %122, align 8
  call void @_ZN8spvtools3opt27LocalAccessChainConvertPass18BuildAndAppendInstE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS3_9allocatorIS5_EEEEPNS4_INS3_10unique_ptrINS0_11InstructionENS3_14default_deleteISC_EEEENS6_ISF_EEEE(%"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i32 62, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %5, %"class.std::__1::vector.31"* %3)
  %124 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %125 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %124, align 8
  %126 = icmp eq %"struct.spvtools::opt::Operand"* %125, null
  br i1 %126, label %155, label %127

127:                                              ; preds = %42
  %128 = bitcast %"struct.spvtools::opt::Operand"* %125 to i8*
  %129 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %85, align 8
  %130 = icmp eq %"struct.spvtools::opt::Operand"* %129, %125
  br i1 %130, label %153, label %131

131:                                              ; preds = %127, %149
  %132 = phi %"struct.spvtools::opt::Operand"* [ %133, %149 ], [ %129, %127 ]
  %133 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %132, i64 -1
  %134 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %132, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %134, align 8
  %135 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %132, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %136 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %135, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %135, align 8
  %137 = icmp eq %"class.std::__1::vector.3"* %136, null
  br i1 %137, label %149, label %138

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %136, i64 0, i32 0, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %147, label %142

142:                                              ; preds = %138
  %143 = ptrtoint i32* %140 to i64
  %144 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %136, i64 0, i32 0, i32 1
  %145 = bitcast i32** %144 to i64*
  store i64 %143, i64* %145, align 8
  %146 = bitcast i32* %140 to i8*
  call void @_ZdlPv(i8* %146) #13
  br label %147

147:                                              ; preds = %142, %138
  %148 = bitcast %"class.std::__1::vector.3"* %136 to i8*
  call void @_ZdlPv(i8* %148) #13
  br label %149

149:                                              ; preds = %147, %131
  %150 = icmp eq %"struct.spvtools::opt::Operand"* %133, %125
  br i1 %150, label %151, label %131

151:                                              ; preds = %149
  %152 = load i8*, i8** %86, align 8
  br label %153

153:                                              ; preds = %151, %127
  %154 = phi i8* [ %152, %151 ], [ %128, %127 ]
  store %"struct.spvtools::opt::Operand"* %125, %"struct.spvtools::opt::Operand"** %85, align 8
  call void @_ZdlPv(i8* %154) #13
  br label %155

155:                                              ; preds = %42, %153
  %156 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %156, align 8
  %157 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %158 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %157, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %157, align 8
  %159 = icmp eq %"class.std::__1::vector.3"* %158, null
  br i1 %159, label %171, label %160

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %158, i64 0, i32 0, i32 0
  %162 = load i32*, i32** %161, align 8
  %163 = icmp eq i32* %162, null
  br i1 %163, label %169, label %164

164:                                              ; preds = %160
  %165 = ptrtoint i32* %162 to i64
  %166 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %158, i64 0, i32 0, i32 1
  %167 = bitcast i32** %166 to i64*
  store i64 %165, i64* %167, align 8
  %168 = bitcast i32* %162 to i8*
  call void @_ZdlPv(i8* %168) #13
  br label %169

169:                                              ; preds = %164, %160
  %170 = bitcast %"class.std::__1::vector.3"* %158 to i8*
  call void @_ZdlPv(i8* %170) #13
  br label %171

171:                                              ; preds = %155, %169
  %172 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %172, align 8
  %173 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %174 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %173, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %173, align 8
  %175 = icmp eq %"class.std::__1::vector.3"* %174, null
  br i1 %175, label %659, label %648

176:                                              ; preds = %659
  %177 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %661, i64 0, i32 0, i32 0
  %178 = load i32*, i32** %177, align 8
  %179 = icmp eq i32* %178, null
  br i1 %179, label %185, label %180

180:                                              ; preds = %176
  %181 = ptrtoint i32* %178 to i64
  %182 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %661, i64 0, i32 0, i32 1
  %183 = bitcast i32** %182 to i64*
  store i64 %181, i64* %183, align 8
  %184 = bitcast i32* %178 to i8*
  call void @_ZdlPv(i8* %184) #13
  br label %185

185:                                              ; preds = %180, %176
  %186 = bitcast %"class.std::__1::vector.3"* %661 to i8*
  call void @_ZdlPv(i8* %186) #13
  br label %187

187:                                              ; preds = %659, %185
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %65) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %188 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %189 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %188, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %188, align 8
  %190 = icmp eq %"class.std::__1::vector.3"* %189, null
  br i1 %190, label %202, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %189, i64 0, i32 0, i32 0
  %193 = load i32*, i32** %192, align 8
  %194 = icmp eq i32* %193, null
  br i1 %194, label %200, label %195

195:                                              ; preds = %191
  %196 = ptrtoint i32* %193 to i64
  %197 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %189, i64 0, i32 0, i32 1
  %198 = bitcast i32** %197 to i64*
  store i64 %196, i64* %198, align 8
  %199 = bitcast i32* %193 to i8*
  call void @_ZdlPv(i8* %199) #13
  br label %200

200:                                              ; preds = %195, %191
  %201 = bitcast %"class.std::__1::vector.3"* %189 to i8*
  call void @_ZdlPv(i8* %201) #13
  br label %202

202:                                              ; preds = %187, %200
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %44) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #12
  br label %646

203:                                              ; preds = %4
  %204 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %204) #12
  store i32 -1431655766, i32* %9, align 4
  %205 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %205) #12
  store i32 -1431655766, i32* %10, align 4
  %206 = call i32 @_ZN8spvtools3opt27LocalAccessChainConvertPass21BuildAndAppendVarLoadEPKNS0_11InstructionEPjS5_PNSt3__16vectorINS6_10unique_ptrIS2_NS6_14default_deleteIS2_EEEENS6_9allocatorISB_EEEE(%"class.spvtools::opt::LocalAccessChainConvertPass"* %0, %"class.spvtools::opt::Instruction"* %1, i32* nonnull %9, i32* nonnull %10, %"class.std::__1::vector.31"* %3)
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %644, label %208

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 0, i32 2
  %210 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %209, align 8
  %211 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %210, i64 0, i32 11
  %212 = load i32, i32* %211, align 8
  %213 = and i32 %212, 4
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %236

215:                                              ; preds = %208
  %216 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %210, i64 0, i32 4, i32 0, i32 0, i32 0
  %217 = bitcast %"class.spvtools::opt::Module"** %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = tail call i8* @_Znwm(i64 48) #13
  %220 = bitcast i8* %219 to %"class.spvtools::opt::analysis::DecorationManager"*
  %221 = getelementptr inbounds i8, i8* %219, i64 32
  %222 = bitcast i8* %221 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %219, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %222, align 4
  %223 = getelementptr inbounds i8, i8* %219, i64 40
  %224 = bitcast i8* %223 to i64*
  store i64 %218, i64* %224, align 8
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %220) #12
  %225 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %210, i64 0, i32 7
  %226 = ptrtoint i8* %219 to i64
  %227 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %225, i64 0, i32 0, i32 0, i32 0
  %228 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %227, align 8
  %229 = bitcast %"class.std::__1::unique_ptr.122"* %225 to i64*
  store i64 %226, i64* %229, align 8
  %230 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %228, null
  br i1 %230, label %233, label %231

231:                                              ; preds = %215
  %232 = bitcast %"class.std::__1::unique_ptr.122"* %225 to %"struct.std::__1::default_delete.150"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %232, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %228) #12
  br label %233

233:                                              ; preds = %231, %215
  %234 = load i32, i32* %211, align 8
  %235 = or i32 %234, 4
  store i32 %235, i32* %211, align 8
  br label %236

236:                                              ; preds = %208, %233
  %237 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %210, i64 0, i32 7, i32 0, i32 0, i32 0
  %238 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %237, align 8
  %239 = load i32, i32* %9, align 4
  %240 = bitcast %"class.std::__1::vector.965"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %240) #12
  %241 = tail call i8* @_Znwm(i64 4) #13
  %242 = getelementptr inbounds %"class.std::__1::vector.965", %"class.std::__1::vector.965"* %11, i64 0, i32 0, i32 1
  %243 = bitcast %"class.std::__1::vector.965"* %11 to i8**
  store i8* %241, i8** %243, align 8
  %244 = getelementptr inbounds i8, i8* %241, i64 4
  %245 = getelementptr inbounds %"class.std::__1::vector.965", %"class.std::__1::vector.965"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %246 = bitcast i32** %245 to i8**
  store i8* %244, i8** %246, align 8
  %247 = bitcast i32** %242 to i64*
  %248 = bitcast i8* %241 to i32*
  store i32 0, i32* %248, align 4
  %249 = ptrtoint i8* %244 to i64
  store i64 %249, i64* %247, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjjRKNSt3__16vectorI14SpvDecoration_NS3_9allocatorIS5_EEEE(%"class.spvtools::opt::analysis::DecorationManager"* %238, i32 %239, i32 %206, %"class.std::__1::vector.965"* nonnull dereferenceable(24) %11) #12
  %250 = getelementptr inbounds %"class.std::__1::vector.965", %"class.std::__1::vector.965"* %11, i64 0, i32 0, i32 0
  %251 = load i32*, i32** %250, align 8
  %252 = icmp eq i32* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %236
  %254 = ptrtoint i32* %251 to i64
  store i64 %254, i64* %247, align 8
  %255 = bitcast i32* %251 to i8*
  call void @_ZdlPv(i8* %255) #13
  br label %256

256:                                              ; preds = %236, %253
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %240) #12
  %257 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %209, align 8
  %258 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %257, i64 0, i32 4, i32 0, i32 0, i32 0
  %259 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %258, align 8
  %260 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %259) #12
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %274

262:                                              ; preds = %256
  %263 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %257, i64 0, i32 5, i32 0, i32 2
  %264 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %263, align 8
  %265 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %264, i64 0, i32 2
  %266 = load i8, i8* %265, align 8, !range !2
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %268, label %644

268:                                              ; preds = %262
  %269 = call i8* @_Znwm(i64 48) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %269, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.46, i64 0, i64 0), i64 37, i1 false) #12
  %270 = getelementptr inbounds i8, i8* %269, i64 37
  store i8 0, i8* %270, align 1
  %271 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %257, i64 0, i32 5, i32 0, i32 1, i32 0
  %272 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %271, align 8
  %273 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %257, i64 0, i32 5, i32 0, i32 0
  call void %272(%"union.std::__1::__function::__policy_storage"* %273, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.47, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.48, i8* nonnull %269) #12
  call void @_ZdlPv(i8* nonnull %269) #13
  br label %644

274:                                              ; preds = %256
  %275 = bitcast %"class.std::__1::vector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %275) #12
  %276 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %277 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  %278 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %279 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %13 to i8*
  %280 = bitcast %"class.std::__1::vector"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %280, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %279) #12
  %281 = bitcast %"class.spvtools::utils::SmallVector"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %281) #12
  %282 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %282, align 8
  %283 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 1
  %284 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 2
  %285 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 3, i64 0
  %286 = bitcast i32** %284 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %285, %"struct.std::__1::aligned_storage<4, 4>::type"** %286, align 8
  %287 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 4
  %288 = bitcast %"class.std::__1::unique_ptr.0"* %287 to i64*
  store i64 0, i64* %288, align 8
  %289 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %285 to i32*
  store i64 1, i64* %283, align 8
  store i32 %2, i32* %289, align 8
  %290 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 0
  store i32 1, i32* %290, align 8
  %291 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1
  %292 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %291, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %292, align 8
  %293 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %293, align 8
  %294 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1, i32 2
  %295 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1, i32 3, i64 0
  %296 = bitcast i32** %294 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %295, %"struct.std::__1::aligned_storage<4, 4>::type"** %296, align 8
  %297 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1, i32 4
  %298 = bitcast %"class.std::__1::unique_ptr.0"* %297 to i64*
  store i64 0, i64* %298, align 8
  %299 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %291, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %14) #12
  %300 = bitcast %"class.spvtools::utils::SmallVector"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %300) #12
  %301 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %15, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %301, align 8
  %302 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %15, i64 0, i32 1
  %303 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %15, i64 0, i32 2
  %304 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %15, i64 0, i32 3, i64 0
  %305 = bitcast i32** %303 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %304, %"struct.std::__1::aligned_storage<4, 4>::type"** %305, align 8
  %306 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %15, i64 0, i32 4
  %307 = bitcast %"class.std::__1::unique_ptr.0"* %306 to i64*
  store i64 0, i64* %307, align 8
  %308 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %304 to i32*
  store i64 1, i64* %302, align 8
  store i32 %206, i32* %308, align 8
  %309 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 1, i32 0
  store i32 1, i32* %309, align 8
  %310 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 1, i32 1
  %311 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %310, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %311, align 8
  %312 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %312, align 8
  %313 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 1, i32 1, i32 2
  %314 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 1, i32 1, i32 3, i64 0
  %315 = bitcast i32** %313 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %314, %"struct.std::__1::aligned_storage<4, 4>::type"** %315, align 8
  %316 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 1, i32 1, i32 4
  %317 = bitcast %"class.std::__1::unique_ptr.0"* %316 to i64*
  store i64 0, i64* %317, align 8
  %318 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %310, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %15) #12
  %319 = call i8* @_Znwm(i64 96) #13
  %320 = bitcast %"struct.spvtools::opt::Operand"** %277 to i8**
  store i8* %319, i8** %320, align 8
  %321 = bitcast %"class.std::__1::vector"* %12 to i8**
  store i8* %319, i8** %321, align 8
  %322 = getelementptr inbounds i8, i8* %319, i64 96
  %323 = bitcast %"struct.spvtools::opt::Operand"** %278 to i8**
  store i8* %322, i8** %323, align 8
  %324 = bitcast i8* %319 to i32*
  %325 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 0
  %326 = load i32, i32* %325, align 8
  store i32 %326, i32* %324, align 8
  %327 = getelementptr inbounds i8, i8* %319, i64 8
  %328 = bitcast i8* %327 to %"class.spvtools::utils::SmallVector"*
  %329 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1
  %330 = bitcast i8* %327 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %330, align 8
  %331 = getelementptr inbounds i8, i8* %319, i64 16
  %332 = bitcast i8* %331 to i64*
  store i64 0, i64* %332, align 8
  %333 = getelementptr inbounds i8, i8* %319, i64 24
  %334 = getelementptr inbounds i8, i8* %319, i64 32
  %335 = bitcast i8* %333 to i8**
  store i8* %334, i8** %335, align 8
  %336 = getelementptr inbounds i8, i8* %319, i64 40
  %337 = bitcast i8* %336 to i64*
  store i64 0, i64* %337, align 8
  %338 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %328, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %329) #12
  %339 = getelementptr inbounds i8, i8* %319, i64 48
  %340 = bitcast i8* %339 to i32*
  %341 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 1, i32 0
  %342 = load i32, i32* %341, align 8
  store i32 %342, i32* %340, align 8
  %343 = getelementptr inbounds i8, i8* %319, i64 56
  %344 = bitcast i8* %343 to %"class.spvtools::utils::SmallVector"*
  %345 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 1, i32 1
  %346 = bitcast i8* %343 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %346, align 8
  %347 = getelementptr inbounds i8, i8* %319, i64 64
  %348 = bitcast i8* %347 to i64*
  store i64 0, i64* %348, align 8
  %349 = getelementptr inbounds i8, i8* %319, i64 72
  %350 = getelementptr inbounds i8, i8* %319, i64 80
  %351 = bitcast i8* %349 to i8**
  store i8* %350, i8** %351, align 8
  %352 = getelementptr inbounds i8, i8* %319, i64 88
  %353 = bitcast i8* %352 to i64*
  store i64 0, i64* %353, align 8
  %354 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %344, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %345) #12
  %355 = getelementptr inbounds i8, i8* %319, i64 96
  %356 = bitcast %"struct.spvtools::opt::Operand"** %277 to i64*
  %357 = ptrtoint i8* %355 to i64
  store i64 %357, i64* %356, align 8
  %358 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %358, align 8
  %359 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %360 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %359, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %359, align 8
  %361 = icmp eq %"class.std::__1::vector.3"* %360, null
  br i1 %361, label %373, label %362

362:                                              ; preds = %274
  %363 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %360, i64 0, i32 0, i32 0
  %364 = load i32*, i32** %363, align 8
  %365 = icmp eq i32* %364, null
  br i1 %365, label %371, label %366

366:                                              ; preds = %362
  %367 = ptrtoint i32* %364 to i64
  %368 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %360, i64 0, i32 0, i32 1
  %369 = bitcast i32** %368 to i64*
  store i64 %367, i64* %369, align 8
  %370 = bitcast i32* %364 to i8*
  call void @_ZdlPv(i8* %370) #13
  br label %371

371:                                              ; preds = %366, %362
  %372 = bitcast %"class.std::__1::vector.3"* %360 to i8*
  call void @_ZdlPv(i8* %372) #13
  br label %373

373:                                              ; preds = %274, %371
  %374 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %374, align 8
  %375 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %376 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %375, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %375, align 8
  %377 = icmp eq %"class.std::__1::vector.3"* %376, null
  br i1 %377, label %689, label %678

378:                                              ; preds = %689
  %379 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %691, i64 0, i32 0, i32 0
  %380 = load i32*, i32** %379, align 8
  %381 = icmp eq i32* %380, null
  br i1 %381, label %387, label %382

382:                                              ; preds = %378
  %383 = ptrtoint i32* %380 to i64
  %384 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %691, i64 0, i32 0, i32 1
  %385 = bitcast i32** %384 to i64*
  store i64 %383, i64* %385, align 8
  %386 = bitcast i32* %380 to i8*
  call void @_ZdlPv(i8* %386) #13
  br label %387

387:                                              ; preds = %382, %378
  %388 = bitcast %"class.std::__1::vector.3"* %691 to i8*
  call void @_ZdlPv(i8* %388) #13
  br label %389

389:                                              ; preds = %689, %387
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %300) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %282, align 8
  %390 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %391 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %390, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %390, align 8
  %392 = icmp eq %"class.std::__1::vector.3"* %391, null
  br i1 %392, label %404, label %393

393:                                              ; preds = %389
  %394 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %391, i64 0, i32 0, i32 0
  %395 = load i32*, i32** %394, align 8
  %396 = icmp eq i32* %395, null
  br i1 %396, label %402, label %397

397:                                              ; preds = %393
  %398 = ptrtoint i32* %395 to i64
  %399 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %391, i64 0, i32 0, i32 1
  %400 = bitcast i32** %399 to i64*
  store i64 %398, i64* %400, align 8
  %401 = bitcast i32* %395 to i8*
  call void @_ZdlPv(i8* %401) #13
  br label %402

402:                                              ; preds = %397, %393
  %403 = bitcast %"class.std::__1::vector.3"* %391 to i8*
  call void @_ZdlPv(i8* %403) #13
  br label %404

404:                                              ; preds = %389, %402
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %281) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %279) #12
  call void @_ZN8spvtools3opt27LocalAccessChainConvertPass22AppendConstantOperandsEPKNS0_11InstructionEPNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::LocalAccessChainConvertPass"* %0, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::vector"* nonnull %12)
  %405 = load i32, i32* %10, align 4
  call void @_ZN8spvtools3opt27LocalAccessChainConvertPass18BuildAndAppendInstE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS3_9allocatorIS5_EEEEPNS4_INS3_10unique_ptrINS0_11InstructionENS3_14default_deleteISC_EEEENS6_ISF_EEEE(%"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i32 82, i32 %405, i32 %260, %"class.std::__1::vector"* nonnull dereferenceable(24) %12, %"class.std::__1::vector.31"* %3)
  %406 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %209, align 8
  %407 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %406, i64 0, i32 11
  %408 = load i32, i32* %407, align 8
  %409 = and i32 %408, 4
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %411, label %432

411:                                              ; preds = %404
  %412 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %406, i64 0, i32 4, i32 0, i32 0, i32 0
  %413 = bitcast %"class.spvtools::opt::Module"** %412 to i64*
  %414 = load i64, i64* %413, align 8
  %415 = call i8* @_Znwm(i64 48) #13
  %416 = bitcast i8* %415 to %"class.spvtools::opt::analysis::DecorationManager"*
  %417 = getelementptr inbounds i8, i8* %415, i64 32
  %418 = bitcast i8* %417 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %415, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %418, align 4
  %419 = getelementptr inbounds i8, i8* %415, i64 40
  %420 = bitcast i8* %419 to i64*
  store i64 %414, i64* %420, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %416) #12
  %421 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %406, i64 0, i32 7
  %422 = ptrtoint i8* %415 to i64
  %423 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %421, i64 0, i32 0, i32 0, i32 0
  %424 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %423, align 8
  %425 = bitcast %"class.std::__1::unique_ptr.122"* %421 to i64*
  store i64 %422, i64* %425, align 8
  %426 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %424, null
  br i1 %426, label %429, label %427

427:                                              ; preds = %411
  %428 = bitcast %"class.std::__1::unique_ptr.122"* %421 to %"struct.std::__1::default_delete.150"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %428, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %424) #12
  br label %429

429:                                              ; preds = %427, %411
  %430 = load i32, i32* %407, align 8
  %431 = or i32 %430, 4
  store i32 %431, i32* %407, align 8
  br label %432

432:                                              ; preds = %404, %429
  %433 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %406, i64 0, i32 7, i32 0, i32 0, i32 0
  %434 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %433, align 8
  %435 = load i32, i32* %9, align 4
  %436 = bitcast %"class.std::__1::vector.965"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %436) #12
  %437 = call i8* @_Znwm(i64 4) #13
  %438 = getelementptr inbounds %"class.std::__1::vector.965", %"class.std::__1::vector.965"* %16, i64 0, i32 0, i32 1
  %439 = bitcast %"class.std::__1::vector.965"* %16 to i8**
  store i8* %437, i8** %439, align 8
  %440 = getelementptr inbounds i8, i8* %437, i64 4
  %441 = getelementptr inbounds %"class.std::__1::vector.965", %"class.std::__1::vector.965"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  %442 = bitcast i32** %441 to i8**
  store i8* %440, i8** %442, align 8
  %443 = bitcast i32** %438 to i64*
  %444 = bitcast i8* %437 to i32*
  store i32 0, i32* %444, align 4
  %445 = ptrtoint i8* %440 to i64
  store i64 %445, i64* %443, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjjRKNSt3__16vectorI14SpvDecoration_NS3_9allocatorIS5_EEEE(%"class.spvtools::opt::analysis::DecorationManager"* %434, i32 %435, i32 %260, %"class.std::__1::vector.965"* nonnull dereferenceable(24) %16) #12
  %446 = getelementptr inbounds %"class.std::__1::vector.965", %"class.std::__1::vector.965"* %16, i64 0, i32 0, i32 0
  %447 = load i32*, i32** %446, align 8
  %448 = icmp eq i32* %447, null
  br i1 %448, label %452, label %449

449:                                              ; preds = %432
  %450 = ptrtoint i32* %447 to i64
  store i64 %450, i64* %443, align 8
  %451 = bitcast i32* %447 to i8*
  call void @_ZdlPv(i8* %451) #13
  br label %452

452:                                              ; preds = %432, %449
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %436) #12
  %453 = bitcast %"class.std::__1::vector"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %453) #12
  %454 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %454) #12
  %455 = bitcast %"class.spvtools::utils::SmallVector"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %455) #12
  %456 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %19, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %456, align 8
  %457 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %19, i64 0, i32 1
  %458 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %19, i64 0, i32 2
  %459 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %19, i64 0, i32 3, i64 0
  %460 = bitcast i32** %458 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %459, %"struct.std::__1::aligned_storage<4, 4>::type"** %460, align 8
  %461 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %19, i64 0, i32 4
  %462 = bitcast %"class.std::__1::unique_ptr.0"* %461 to i64*
  store i64 0, i64* %462, align 8
  %463 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %459 to i32*
  store i64 1, i64* %457, align 8
  store i32 %435, i32* %463, align 8
  %464 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 0, i32 0
  store i32 1, i32* %464, align 8
  %465 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 0, i32 1
  %466 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %465, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %466, align 8
  %467 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %467, align 8
  %468 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 0, i32 1, i32 2
  %469 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 0, i32 1, i32 3, i64 0
  %470 = bitcast i32** %468 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %469, %"struct.std::__1::aligned_storage<4, 4>::type"** %470, align 8
  %471 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 0, i32 1, i32 4
  %472 = bitcast %"class.std::__1::unique_ptr.0"* %471 to i64*
  store i64 0, i64* %472, align 8
  %473 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %465, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %19) #12
  %474 = bitcast %"class.spvtools::utils::SmallVector"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %474) #12
  %475 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %475, align 8
  %476 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 1
  %477 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 2
  %478 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 3, i64 0
  %479 = bitcast i32** %477 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %478, %"struct.std::__1::aligned_storage<4, 4>::type"** %479, align 8
  %480 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 4
  %481 = bitcast %"class.std::__1::unique_ptr.0"* %480 to i64*
  store i64 0, i64* %481, align 8
  %482 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %478 to i32*
  store i64 1, i64* %476, align 8
  store i32 %260, i32* %482, align 8
  %483 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 1, i32 0
  store i32 1, i32* %483, align 8
  %484 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 1, i32 1
  %485 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %484, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %485, align 8
  %486 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %486, align 8
  %487 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 1, i32 1, i32 2
  %488 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 1, i32 1, i32 3, i64 0
  %489 = bitcast i32** %487 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %488, %"struct.std::__1::aligned_storage<4, 4>::type"** %489, align 8
  %490 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 1, i32 1, i32 4
  %491 = bitcast %"class.std::__1::unique_ptr.0"* %490 to i64*
  store i64 0, i64* %491, align 8
  %492 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %484, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %20) #12
  %493 = call i8* @_Znwm(i64 96) #13
  %494 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 1
  %495 = bitcast %"struct.spvtools::opt::Operand"** %494 to i8**
  store i8* %493, i8** %495, align 8
  %496 = bitcast %"class.std::__1::vector"* %17 to i8**
  store i8* %493, i8** %496, align 8
  %497 = getelementptr inbounds i8, i8* %493, i64 96
  %498 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 2, i32 0, i32 0
  %499 = bitcast %"struct.spvtools::opt::Operand"** %498 to i8**
  store i8* %497, i8** %499, align 8
  %500 = bitcast i8* %493 to i32*
  %501 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 0, i32 0
  %502 = load i32, i32* %501, align 8
  store i32 %502, i32* %500, align 8
  %503 = getelementptr inbounds i8, i8* %493, i64 8
  %504 = bitcast i8* %503 to %"class.spvtools::utils::SmallVector"*
  %505 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 0, i32 1
  %506 = bitcast i8* %503 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %506, align 8
  %507 = getelementptr inbounds i8, i8* %493, i64 16
  %508 = bitcast i8* %507 to i64*
  store i64 0, i64* %508, align 8
  %509 = getelementptr inbounds i8, i8* %493, i64 24
  %510 = getelementptr inbounds i8, i8* %493, i64 32
  %511 = bitcast i8* %509 to i8**
  store i8* %510, i8** %511, align 8
  %512 = getelementptr inbounds i8, i8* %493, i64 40
  %513 = bitcast i8* %512 to i64*
  store i64 0, i64* %513, align 8
  %514 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %504, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %505) #12
  %515 = getelementptr inbounds i8, i8* %493, i64 48
  %516 = bitcast i8* %515 to i32*
  %517 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 1, i32 0
  %518 = load i32, i32* %517, align 8
  store i32 %518, i32* %516, align 8
  %519 = getelementptr inbounds i8, i8* %493, i64 56
  %520 = bitcast i8* %519 to %"class.spvtools::utils::SmallVector"*
  %521 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 1, i32 1
  %522 = bitcast i8* %519 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %522, align 8
  %523 = getelementptr inbounds i8, i8* %493, i64 64
  %524 = bitcast i8* %523 to i64*
  store i64 0, i64* %524, align 8
  %525 = getelementptr inbounds i8, i8* %493, i64 72
  %526 = getelementptr inbounds i8, i8* %493, i64 80
  %527 = bitcast i8* %525 to i8**
  store i8* %526, i8** %527, align 8
  %528 = getelementptr inbounds i8, i8* %493, i64 88
  %529 = bitcast i8* %528 to i64*
  store i64 0, i64* %529, align 8
  %530 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %520, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %521) #12
  %531 = getelementptr inbounds i8, i8* %493, i64 96
  %532 = bitcast %"struct.spvtools::opt::Operand"** %494 to i64*
  %533 = ptrtoint i8* %531 to i64
  store i64 %533, i64* %532, align 8
  call void @_ZN8spvtools3opt27LocalAccessChainConvertPass18BuildAndAppendInstE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS3_9allocatorIS5_EEEEPNS4_INS3_10unique_ptrINS0_11InstructionENS3_14default_deleteISC_EEEENS6_ISF_EEEE(%"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i32 62, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %17, %"class.std::__1::vector.31"* %3)
  %534 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %535 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %534, align 8
  %536 = icmp eq %"struct.spvtools::opt::Operand"* %535, null
  br i1 %536, label %565, label %537

537:                                              ; preds = %452
  %538 = bitcast %"struct.spvtools::opt::Operand"* %535 to i8*
  %539 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %494, align 8
  %540 = icmp eq %"struct.spvtools::opt::Operand"* %539, %535
  br i1 %540, label %563, label %541

541:                                              ; preds = %537, %559
  %542 = phi %"struct.spvtools::opt::Operand"* [ %543, %559 ], [ %539, %537 ]
  %543 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %542, i64 -1
  %544 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %542, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %544, align 8
  %545 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %542, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %546 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %545, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %545, align 8
  %547 = icmp eq %"class.std::__1::vector.3"* %546, null
  br i1 %547, label %559, label %548

548:                                              ; preds = %541
  %549 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %546, i64 0, i32 0, i32 0
  %550 = load i32*, i32** %549, align 8
  %551 = icmp eq i32* %550, null
  br i1 %551, label %557, label %552

552:                                              ; preds = %548
  %553 = ptrtoint i32* %550 to i64
  %554 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %546, i64 0, i32 0, i32 1
  %555 = bitcast i32** %554 to i64*
  store i64 %553, i64* %555, align 8
  %556 = bitcast i32* %550 to i8*
  call void @_ZdlPv(i8* %556) #13
  br label %557

557:                                              ; preds = %552, %548
  %558 = bitcast %"class.std::__1::vector.3"* %546 to i8*
  call void @_ZdlPv(i8* %558) #13
  br label %559

559:                                              ; preds = %557, %541
  %560 = icmp eq %"struct.spvtools::opt::Operand"* %543, %535
  br i1 %560, label %561, label %541

561:                                              ; preds = %559
  %562 = load i8*, i8** %496, align 8
  br label %563

563:                                              ; preds = %561, %537
  %564 = phi i8* [ %562, %561 ], [ %538, %537 ]
  store %"struct.spvtools::opt::Operand"* %535, %"struct.spvtools::opt::Operand"** %494, align 8
  call void @_ZdlPv(i8* %564) #13
  br label %565

565:                                              ; preds = %452, %563
  %566 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %566, align 8
  %567 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %568 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %567, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %567, align 8
  %569 = icmp eq %"class.std::__1::vector.3"* %568, null
  br i1 %569, label %581, label %570

570:                                              ; preds = %565
  %571 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %568, i64 0, i32 0, i32 0
  %572 = load i32*, i32** %571, align 8
  %573 = icmp eq i32* %572, null
  br i1 %573, label %579, label %574

574:                                              ; preds = %570
  %575 = ptrtoint i32* %572 to i64
  %576 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %568, i64 0, i32 0, i32 1
  %577 = bitcast i32** %576 to i64*
  store i64 %575, i64* %577, align 8
  %578 = bitcast i32* %572 to i8*
  call void @_ZdlPv(i8* %578) #13
  br label %579

579:                                              ; preds = %574, %570
  %580 = bitcast %"class.std::__1::vector.3"* %568 to i8*
  call void @_ZdlPv(i8* %580) #13
  br label %581

581:                                              ; preds = %565, %579
  %582 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %582, align 8
  %583 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %18, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %584 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %583, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %583, align 8
  %585 = icmp eq %"class.std::__1::vector.3"* %584, null
  br i1 %585, label %674, label %663

586:                                              ; preds = %674
  %587 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %676, i64 0, i32 0, i32 0
  %588 = load i32*, i32** %587, align 8
  %589 = icmp eq i32* %588, null
  br i1 %589, label %595, label %590

590:                                              ; preds = %586
  %591 = ptrtoint i32* %588 to i64
  %592 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %676, i64 0, i32 0, i32 1
  %593 = bitcast i32** %592 to i64*
  store i64 %591, i64* %593, align 8
  %594 = bitcast i32* %588 to i8*
  call void @_ZdlPv(i8* %594) #13
  br label %595

595:                                              ; preds = %590, %586
  %596 = bitcast %"class.std::__1::vector.3"* %676 to i8*
  call void @_ZdlPv(i8* %596) #13
  br label %597

597:                                              ; preds = %674, %595
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %474) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %456, align 8
  %598 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %599 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %598, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %598, align 8
  %600 = icmp eq %"class.std::__1::vector.3"* %599, null
  br i1 %600, label %612, label %601

601:                                              ; preds = %597
  %602 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %599, i64 0, i32 0, i32 0
  %603 = load i32*, i32** %602, align 8
  %604 = icmp eq i32* %603, null
  br i1 %604, label %610, label %605

605:                                              ; preds = %601
  %606 = ptrtoint i32* %603 to i64
  %607 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %599, i64 0, i32 0, i32 1
  %608 = bitcast i32** %607 to i64*
  store i64 %606, i64* %608, align 8
  %609 = bitcast i32* %603 to i8*
  call void @_ZdlPv(i8* %609) #13
  br label %610

610:                                              ; preds = %605, %601
  %611 = bitcast %"class.std::__1::vector.3"* %599 to i8*
  call void @_ZdlPv(i8* %611) #13
  br label %612

612:                                              ; preds = %597, %610
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %455) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %454) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %453) #12
  %613 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %276, align 8
  %614 = icmp eq %"struct.spvtools::opt::Operand"* %613, null
  br i1 %614, label %643, label %615

615:                                              ; preds = %612
  %616 = bitcast %"struct.spvtools::opt::Operand"* %613 to i8*
  %617 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %277, align 8
  %618 = icmp eq %"struct.spvtools::opt::Operand"* %617, %613
  br i1 %618, label %641, label %619

619:                                              ; preds = %615, %637
  %620 = phi %"struct.spvtools::opt::Operand"* [ %621, %637 ], [ %617, %615 ]
  %621 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %620, i64 -1
  %622 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %620, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %622, align 8
  %623 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %620, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %624 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %623, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %623, align 8
  %625 = icmp eq %"class.std::__1::vector.3"* %624, null
  br i1 %625, label %637, label %626

626:                                              ; preds = %619
  %627 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %624, i64 0, i32 0, i32 0
  %628 = load i32*, i32** %627, align 8
  %629 = icmp eq i32* %628, null
  br i1 %629, label %635, label %630

630:                                              ; preds = %626
  %631 = ptrtoint i32* %628 to i64
  %632 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %624, i64 0, i32 0, i32 1
  %633 = bitcast i32** %632 to i64*
  store i64 %631, i64* %633, align 8
  %634 = bitcast i32* %628 to i8*
  call void @_ZdlPv(i8* %634) #13
  br label %635

635:                                              ; preds = %630, %626
  %636 = bitcast %"class.std::__1::vector.3"* %624 to i8*
  call void @_ZdlPv(i8* %636) #13
  br label %637

637:                                              ; preds = %635, %619
  %638 = icmp eq %"struct.spvtools::opt::Operand"* %621, %613
  br i1 %638, label %639, label %619

639:                                              ; preds = %637
  %640 = load i8*, i8** %321, align 8
  br label %641

641:                                              ; preds = %639, %615
  %642 = phi i8* [ %640, %639 ], [ %616, %615 ]
  store %"struct.spvtools::opt::Operand"* %613, %"struct.spvtools::opt::Operand"** %277, align 8
  call void @_ZdlPv(i8* %642) #13
  br label %643

643:                                              ; preds = %612, %641
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %275) #12
  br label %644

644:                                              ; preds = %268, %262, %643, %203
  %645 = phi i1 [ false, %203 ], [ true, %643 ], [ false, %262 ], [ false, %268 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %205) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %204) #12
  br label %646

646:                                              ; preds = %644, %202
  %647 = phi i1 [ true, %202 ], [ %645, %644 ]
  ret i1 %647

648:                                              ; preds = %171
  %649 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %174, i64 0, i32 0, i32 0
  %650 = load i32*, i32** %649, align 8
  %651 = icmp eq i32* %650, null
  br i1 %651, label %657, label %652

652:                                              ; preds = %648
  %653 = ptrtoint i32* %650 to i64
  %654 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %174, i64 0, i32 0, i32 1
  %655 = bitcast i32** %654 to i64*
  store i64 %653, i64* %655, align 8
  %656 = bitcast i32* %650 to i8*
  call void @_ZdlPv(i8* %656) #13
  br label %657

657:                                              ; preds = %652, %648
  %658 = bitcast %"class.std::__1::vector.3"* %174 to i8*
  call void @_ZdlPv(i8* %658) #13
  br label %659

659:                                              ; preds = %657, %171
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %660 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %661 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %660, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %660, align 8
  %662 = icmp eq %"class.std::__1::vector.3"* %661, null
  br i1 %662, label %187, label %176

663:                                              ; preds = %581
  %664 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %584, i64 0, i32 0, i32 0
  %665 = load i32*, i32** %664, align 8
  %666 = icmp eq i32* %665, null
  br i1 %666, label %672, label %667

667:                                              ; preds = %663
  %668 = ptrtoint i32* %665 to i64
  %669 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %584, i64 0, i32 0, i32 1
  %670 = bitcast i32** %669 to i64*
  store i64 %668, i64* %670, align 8
  %671 = bitcast i32* %665 to i8*
  call void @_ZdlPv(i8* %671) #13
  br label %672

672:                                              ; preds = %667, %663
  %673 = bitcast %"class.std::__1::vector.3"* %584 to i8*
  call void @_ZdlPv(i8* %673) #13
  br label %674

674:                                              ; preds = %672, %581
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %475, align 8
  %675 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 4, i32 0, i32 0, i32 0
  %676 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %675, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %675, align 8
  %677 = icmp eq %"class.std::__1::vector.3"* %676, null
  br i1 %677, label %597, label %586

678:                                              ; preds = %373
  %679 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %376, i64 0, i32 0, i32 0
  %680 = load i32*, i32** %679, align 8
  %681 = icmp eq i32* %680, null
  br i1 %681, label %687, label %682

682:                                              ; preds = %678
  %683 = ptrtoint i32* %680 to i64
  %684 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %376, i64 0, i32 0, i32 1
  %685 = bitcast i32** %684 to i64*
  store i64 %683, i64* %685, align 8
  %686 = bitcast i32* %680 to i8*
  call void @_ZdlPv(i8* %686) #13
  br label %687

687:                                              ; preds = %682, %678
  %688 = bitcast %"class.std::__1::vector.3"* %376 to i8*
  call void @_ZdlPv(i8* %688) #13
  br label %689

689:                                              ; preds = %687, %373
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %301, align 8
  %690 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %15, i64 0, i32 4, i32 0, i32 0, i32 0
  %691 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %690, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %690, align 8
  %692 = icmp eq %"class.std::__1::vector.3"* %691, null
  br i1 %692, label %389, label %378
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt27LocalAccessChainConvertPass26IsConstantIndexAccessChainEPKNS0_11InstructionE(%"class.spvtools::opt::LocalAccessChainConvertPass"*, %"class.spvtools::opt::Instruction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::function.973", align 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #12
  store i32 0, i32* %3, align 4
  %6 = bitcast %"class.std::__1::function.973"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.std::__1::function.973", %"class.std::__1::function.973"* %4, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.std::__1::function.973", %"class.std::__1::function.973"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFbPKjEE11__call_implINS0_20__default_alloc_funcIZNK8spvtools3opt27LocalAccessChainConvertPass26IsConstantIndexAccessChainEPKNS9_11InstructionEE3$_1S4_EEEEbPKNS0_16__policy_storageES3_", i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %7, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt27LocalAccessChainConvertPass26IsConstantIndexAccessChainEPKNS5_11InstructionEE3$_1FbPKjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %8, align 8
  %9 = bitcast %"class.std::__1::function.973"* %4 to i32**
  store i32* %3, i32** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::function.973", %"class.std::__1::function.973"* %4, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast [8 x i8]* %10 to %"class.spvtools::opt::LocalAccessChainConvertPass"**
  store %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, %"class.spvtools::opt::LocalAccessChainConvertPass"** %11, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %13 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %15 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %14, align 8
  %16 = icmp eq %"struct.spvtools::opt::Operand"* %13, %15
  br i1 %16, label %40, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.std::__1::function.973", %"class.std::__1::function.973"* %4, i64 0, i32 0, i32 0
  br label %19

19:                                               ; preds = %34, %17
  %20 = phi %"struct.spvtools::opt::Operand"* [ %13, %17 ], [ %35, %34 ]
  %21 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %22) #12
  br i1 %23, label %24, label %34

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %20, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %25, align 8
  %27 = icmp eq %"class.std::__1::vector.3"* %26, null
  %28 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %26, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %20, i64 0, i32 1, i32 2
  %30 = select i1 %27, i32** %29, i32** %28
  %31 = load i32*, i32** %30, align 8
  %32 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %7, align 8
  %33 = call zeroext i1 %32(%"union.std::__1::__function::__policy_storage"* nonnull %18, i32* %31) #12
  br i1 %33, label %34, label %37

34:                                               ; preds = %24, %19
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %20, i64 1
  %36 = icmp eq %"struct.spvtools::opt::Operand"* %35, %15
  br i1 %36, label %37, label %19

37:                                               ; preds = %34, %24
  %38 = phi i1 [ true, %34 ], [ false, %24 ]
  %39 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %8, align 8
  br label %40

40:                                               ; preds = %37, %2
  %41 = phi %"struct.std::__1::__function::__policy"* [ @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt27LocalAccessChainConvertPass26IsConstantIndexAccessChainEPKNS5_11InstructionEE3$_1FbPKjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %2 ], [ %39, %37 ]
  %42 = phi i1 [ true, %2 ], [ %38, %37 ]
  %43 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %41, i64 0, i32 1
  %44 = load void (i8*)*, void (i8*)** %43, align 8
  %45 = icmp eq void (i8*)* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.std::__1::function.973", %"class.std::__1::function.973"* %4, i64 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void %44(i8* %48) #12
  br label %49

49:                                               ; preds = %40, %46
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #12
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt27LocalAccessChainConvertPass20HasOnlySupportedRefsEj(%"class.spvtools::opt::LocalAccessChainConvertPass"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::function.980", align 8
  store i32 %1, i32* %3, align 4
  %5 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 1
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %58, label %10

10:                                               ; preds = %2
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #12, !range !8
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, 4294967295
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ugt i64 %8, %6
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %18, %16, %13
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.915"* %25, null
  br i1 %26, label %58, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %25, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.915"* %29, null
  br i1 %30, label %58, label %31

31:                                               ; preds = %27
  %32 = add i64 %8, -1
  br label %33

33:                                               ; preds = %54, %31
  %34 = phi %"struct.std::__1::__hash_node_base.915"* [ %29, %31 ], [ %56, %54 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %34, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.915"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %33
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %32
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %44, %42, %40
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %54, label %58

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %34, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base.915"* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %1
  br i1 %53, label %109, label %54

54:                                               ; preds = %49, %46
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %34, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.915"* %56, null
  br i1 %57, label %58, label %33

58:                                               ; preds = %46, %54, %20, %2, %27
  %59 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 0, i32 2
  %60 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %60, i64 0, i32 11
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %89

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %67 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %66, align 8
  %68 = tail call i8* @_Znwm(i64 104) #13
  %69 = bitcast i8* %68 to %"class.spvtools::opt::analysis::DefUseManager"*
  %70 = getelementptr inbounds i8, i8* %68, i64 32
  %71 = bitcast i8* %70 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %71, align 4
  %72 = getelementptr inbounds i8, i8* %68, i64 48
  %73 = getelementptr inbounds i8, i8* %68, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 16, i1 false) #12
  %74 = bitcast i8* %73 to i8**
  store i8* %72, i8** %74, align 8
  %75 = getelementptr inbounds i8, i8* %68, i64 64
  %76 = getelementptr inbounds i8, i8* %68, i64 96
  %77 = bitcast i8* %76 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %77, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %69, %"class.spvtools::opt::Module"* %67) #12
  %78 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %60, i64 0, i32 6
  %79 = ptrtoint i8* %68 to i64
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %78, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %80, align 8
  %82 = bitcast %"class.std::__1::unique_ptr.62"* %78 to i64*
  store i64 %79, i64* %82, align 8
  %83 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %81, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %65
  %85 = bitcast %"class.std::__1::unique_ptr.62"* %78 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %85, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %81) #12
  br label %86

86:                                               ; preds = %84, %65
  %87 = load i32, i32* %61, align 8
  %88 = or i32 %87, 1
  store i32 %88, i32* %61, align 8
  br label %89

89:                                               ; preds = %58, %86
  %90 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %60, i64 0, i32 6, i32 0, i32 0, i32 0
  %91 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %90, align 8
  %92 = bitcast %"class.std::__1::function.980"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %92) #12
  %93 = ptrtoint %"class.spvtools::opt::LocalAccessChainConvertPass"* %0 to i64
  %94 = getelementptr inbounds %"class.std::__1::function.980", %"class.std::__1::function.980"* %4, i64 0, i32 0, i32 1, i32 0
  %95 = getelementptr inbounds %"class.std::__1::function.980", %"class.std::__1::function.980"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_27LocalAccessChainConvertPass20HasOnlySupportedRefsEjE3$_2S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %94, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt27LocalAccessChainConvertPass20HasOnlySupportedRefsEjE3$_2FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %95, align 8
  %96 = bitcast %"class.std::__1::function.980"* %4 to i64*
  store i64 %93, i64* %96, align 8
  %97 = call zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEjRKNSt3__18functionIFbPNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DefUseManager"* %91, i32 %1, %"class.std::__1::function.980"* nonnull dereferenceable(32) %4) #12
  %98 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %95, align 8
  %99 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %98, i64 0, i32 1
  %100 = load void (i8*)*, void (i8*)** %99, align 8
  %101 = icmp eq void (i8*)* %100, null
  br i1 %101, label %105, label %102

102:                                              ; preds = %89
  %103 = getelementptr inbounds %"class.std::__1::function.980", %"class.std::__1::function.980"* %4, i64 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  call void %100(i8* %104) #12
  br label %105

105:                                              ; preds = %89, %102
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %92) #12
  br i1 %97, label %106, label %109

106:                                              ; preds = %105
  %107 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %5, i64 0, i32 0
  %108 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %107, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3) #12
  br label %109

109:                                              ; preds = %49, %105, %106
  %110 = phi i1 [ true, %106 ], [ false, %105 ], [ true, %49 ]
  ret i1 %110
}

declare zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEjRKNSt3__18functionIFbPNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DefUseManager"*, i32, %"class.std::__1::function.980"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt27LocalAccessChainConvertPass14FindTargetVarsEPNS0_8FunctionE(%"class.spvtools::opt::LocalAccessChainConvertPass"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::function.973", align 8
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.40"* %7, %9
  br i1 %10, label %25, label %11

11:                                               ; preds = %2
  %12 = bitcast i32* %5 to i8*
  %13 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0
  %14 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 3, i32 0
  %15 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 2, i32 0
  %16 = bitcast i32* %3 to i8*
  %17 = bitcast %"class.std::__1::function.973"* %4 to i8*
  %18 = getelementptr inbounds %"class.std::__1::function.973", %"class.std::__1::function.973"* %4, i64 0, i32 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.std::__1::function.973", %"class.std::__1::function.973"* %4, i64 0, i32 0, i32 2
  %20 = bitcast %"class.std::__1::function.973"* %4 to i32**
  %21 = getelementptr inbounds %"class.std::__1::function.973", %"class.std::__1::function.973"* %4, i64 0, i32 0, i32 0, i32 1
  %22 = bitcast [8 x i8]* %21 to %"class.spvtools::opt::LocalAccessChainConvertPass"**
  %23 = getelementptr inbounds %"class.std::__1::function.973", %"class.std::__1::function.973"* %4, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::function.973", %"class.std::__1::function.973"* %4, i64 0, i32 0, i32 0, i32 0
  br label %26

25:                                               ; preds = %39, %2
  ret void

26:                                               ; preds = %11, %39
  %27 = phi %"class.std::__1::unique_ptr.40"* [ %9, %11 ], [ %40, %39 ]
  %28 = phi %"class.std::__1::unique_ptr.40"* [ %7, %11 ], [ %41, %39 ]
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %29, align 8
  %31 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %30, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %32 = bitcast %"class.spvtools::opt::Instruction"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %30, i64 0, i32 2, i32 0, i32 1
  %35 = inttoptr i64 %33 to %"class.spvtools::opt::Instruction"*
  %36 = icmp eq %"class.spvtools::opt::Instruction"* %34, %35
  br i1 %36, label %39, label %43

37:                                               ; preds = %123
  %38 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %8, align 8
  br label %39

39:                                               ; preds = %37, %26
  %40 = phi %"class.std::__1::unique_ptr.40"* [ %38, %37 ], [ %27, %26 ]
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %28, i64 1
  %42 = icmp eq %"class.std::__1::unique_ptr.40"* %41, %40
  br i1 %42, label %25, label %26

43:                                               ; preds = %26, %123
  %44 = phi %"class.spvtools::opt::BasicBlock"* [ %124, %123 ], [ %30, %26 ]
  %45 = phi %"class.spvtools::opt::Instruction"* [ %130, %123 ], [ %35, %26 ]
  %46 = phi i64 [ %128, %123 ], [ %33, %26 ]
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = add i32 %48, -61
  %50 = icmp ult i32 %49, 2
  br i1 %50, label %51, label %123

51:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #12
  store i32 -1431655766, i32* %5, align 4
  %52 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt7MemPass6GetPtrEPNS0_11InstructionEPj(%"class.spvtools::opt::MemPass"* %13, %"class.spvtools::opt::Instruction"* %45, i32* nonnull %5) #12
  %53 = load i32, i32* %5, align 4
  %54 = call zeroext i1 @_ZN8spvtools3opt7MemPass11IsTargetVarEj(%"class.spvtools::opt::MemPass"* %13, i32 %53) #12
  br i1 %54, label %55, label %121

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = load i32, i32* %5, align 4
  %59 = call zeroext i1 @_ZN8spvtools3opt27LocalAccessChainConvertPass20HasOnlySupportedRefsEj(%"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i32 %58)
  br i1 %59, label %63, label %60

60:                                               ; preds = %55
  %61 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %14, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %5) #12
  %62 = call i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.911"* %15, i32* nonnull dereferenceable(4) %5) #12
  br label %121

63:                                               ; preds = %55
  %64 = call zeroext i1 @_ZNK8spvtools3opt7MemPass19IsNonPtrAccessChainE6SpvOp_(%"class.spvtools::opt::MemPass"* %13, i32 %57) #12
  br i1 %64, label %65, label %82

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 3
  %67 = load i8, i8* %66, align 4, !range !2
  %68 = icmp eq i8 %67, 0
  %69 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 4
  %70 = load i8, i8* %69, align 1, !range !2
  %71 = icmp eq i8 %70, 0
  %72 = select i1 %71, i32 1, i32 2
  %73 = xor i1 %71, true
  %74 = zext i1 %73 to i32
  %75 = select i1 %68, i32 %74, i32 %72
  %76 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %52, i32 %75) #12
  %77 = load i32, i32* %5, align 4
  %78 = icmp eq i32 %76, %77
  br i1 %78, label %82, label %79

79:                                               ; preds = %65
  %80 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %14, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %5) #12
  %81 = call i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.911"* %15, i32* nonnull dereferenceable(4) %5) #12
  br label %121

82:                                               ; preds = %65, %63
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #12
  store i32 0, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #12
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFbPKjEE11__call_implINS0_20__default_alloc_funcIZNK8spvtools3opt27LocalAccessChainConvertPass26IsConstantIndexAccessChainEPKNS9_11InstructionEE3$_1S4_EEEEbPKNS0_16__policy_storageES3_", i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %18, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt27LocalAccessChainConvertPass26IsConstantIndexAccessChainEPKNS5_11InstructionEE3$_1FbPKjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %19, align 8
  store i32* %3, i32** %20, align 8
  store %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, %"class.spvtools::opt::LocalAccessChainConvertPass"** %22, align 8
  %83 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 6, i32 0, i32 0
  %84 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %83, align 8
  %85 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 6, i32 0, i32 1
  %86 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %85, align 8
  %87 = icmp eq %"struct.spvtools::opt::Operand"* %84, %86
  br i1 %87, label %109, label %88

88:                                               ; preds = %82, %103
  %89 = phi %"struct.spvtools::opt::Operand"* [ %104, %103 ], [ %84, %82 ]
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %89, i64 0, i32 0
  %91 = load i32, i32* %90, align 8
  %92 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %91) #12
  br i1 %92, label %93, label %103

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %89, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %95 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %94, align 8
  %96 = icmp eq %"class.std::__1::vector.3"* %95, null
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %95, i64 0, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %89, i64 0, i32 1, i32 2
  %99 = select i1 %96, i32** %98, i32** %97
  %100 = load i32*, i32** %99, align 8
  %101 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %18, align 8
  %102 = call zeroext i1 %101(%"union.std::__1::__function::__policy_storage"* nonnull %23, i32* %100) #12
  br i1 %102, label %103, label %106

103:                                              ; preds = %93, %88
  %104 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %89, i64 1
  %105 = icmp eq %"struct.spvtools::opt::Operand"* %104, %86
  br i1 %105, label %106, label %88

106:                                              ; preds = %103, %93
  %107 = phi i1 [ true, %103 ], [ false, %93 ]
  %108 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %19, align 8
  br label %109

109:                                              ; preds = %106, %82
  %110 = phi %"struct.std::__1::__function::__policy"* [ @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt27LocalAccessChainConvertPass26IsConstantIndexAccessChainEPKNS5_11InstructionEE3$_1FbPKjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %82 ], [ %108, %106 ]
  %111 = phi i1 [ true, %82 ], [ %107, %106 ]
  %112 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %110, i64 0, i32 1
  %113 = load void (i8*)*, void (i8*)** %112, align 8
  %114 = icmp eq void (i8*)* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %109
  %116 = load i8*, i8** %24, align 8
  call void %113(i8* %116) #12
  br label %117

117:                                              ; preds = %109, %115
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #12
  br i1 %111, label %121, label %118

118:                                              ; preds = %117
  %119 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %14, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %5) #12
  %120 = call i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.911"* %15, i32* nonnull dereferenceable(4) %5) #12
  br label %121

121:                                              ; preds = %60, %79, %118, %117, %51
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #12
  %122 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %29, align 8
  br label %123

123:                                              ; preds = %121, %43
  %124 = phi %"class.spvtools::opt::BasicBlock"* [ %122, %121 ], [ %44, %43 ]
  %125 = inttoptr i64 %46 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %126 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %125, i64 0, i32 1
  %127 = bitcast %"class.spvtools::opt::Instruction"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %124, i64 0, i32 2, i32 0, i32 1
  %130 = inttoptr i64 %128 to %"class.spvtools::opt::Instruction"*
  %131 = icmp eq %"class.spvtools::opt::Instruction"* %129, %130
  br i1 %131, label %37, label %43
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt7MemPass6GetPtrEPNS0_11InstructionEPj(%"class.spvtools::opt::MemPass"*, %"class.spvtools::opt::Instruction"*, i32*) local_unnamed_addr #3

declare zeroext i1 @_ZN8spvtools3opt7MemPass11IsTargetVarEj(%"class.spvtools::opt::MemPass"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK8spvtools3opt7MemPass19IsNonPtrAccessChainE6SpvOp_(%"class.spvtools::opt::MemPass"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt27LocalAccessChainConvertPass24ConvertLocalAccessChainsEPNS0_8FunctionE(%"class.spvtools::opt::LocalAccessChainConvertPass"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.987", align 8
  %4 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::vector.31", align 8
  %8 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %9 = alloca %"class.std::__1::function.994", align 8
  tail call void @_ZN8spvtools3opt27LocalAccessChainConvertPass14FindTargetVarsEPNS0_8FunctionE(%"class.spvtools::opt::LocalAccessChainConvertPass"* %0, %"class.spvtools::opt::Function"* %1)
  %10 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.40"* %11, %13
  br i1 %14, label %274, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__1::vector.987"* %3 to i8*
  %17 = getelementptr inbounds %"class.std::__1::vector.987", %"class.std::__1::vector.987"* %3, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.987", %"class.std::__1::vector.987"* %3, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::vector.987", %"class.std::__1::vector.987"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %4 to i8*
  %21 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %4, i64 0, i32 0, i32 0
  %22 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %4 to i64*
  %23 = bitcast i32* %6 to i8*
  %24 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0
  %25 = bitcast %"class.std::__1::vector.31"* %7 to i8*
  %26 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %7, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %7, i64 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::unique_ptr.21"** %27 to i64*
  %29 = bitcast %"class.std::__1::vector.31"* %7 to i64*
  %30 = bitcast %"class.spvtools::opt::Instruction"*** %18 to i64*
  %31 = bitcast %"class.std::__1::vector.987"* %3 to i64*
  %32 = bitcast %"class.spvtools::opt::Instruction"*** %19 to i64*
  %33 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %4 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %34 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %8 to i8*
  %35 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %8 to i64*
  %36 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 0, i32 2
  %37 = bitcast %"class.std::__1::vector.31"* %7 to i8**
  %38 = bitcast i32* %5 to i8*
  %39 = bitcast %"class.std::__1::function.994"* %9 to i8*
  %40 = ptrtoint %"class.std::__1::vector.987"* %3 to i64
  %41 = getelementptr inbounds %"class.std::__1::function.994", %"class.std::__1::function.994"* %9, i64 0, i32 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.std::__1::function.994", %"class.std::__1::function.994"* %9, i64 0, i32 0, i32 2
  %43 = bitcast %"class.std::__1::function.994"* %9 to i64*
  %44 = getelementptr inbounds %"class.std::__1::function.994", %"class.std::__1::function.994"* %9, i64 0, i32 0, i32 0, i32 0
  br label %50

45:                                               ; preds = %62, %272
  %46 = phi i8 [ %51, %62 ], [ %266, %272 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %52, i64 1
  %48 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %12, align 8
  %49 = icmp eq %"class.std::__1::unique_ptr.40"* %47, %48
  br i1 %49, label %274, label %50

50:                                               ; preds = %15, %45
  %51 = phi i8 [ 0, %15 ], [ %46, %45 ]
  %52 = phi %"class.std::__1::unique_ptr.40"* [ %11, %15 ], [ %47, %45 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %21, align 8
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %53, align 8
  %55 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %54, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %56 = bitcast %"class.spvtools::opt::Instruction"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %22, align 8
  %58 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %53, align 8
  %59 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %58, i64 0, i32 2, i32 0, i32 1
  %60 = inttoptr i64 %57 to %"class.spvtools::opt::Instruction"*
  %61 = icmp eq %"class.spvtools::opt::Instruction"* %59, %60
  br i1 %61, label %62, label %63

62:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  br label %45

63:                                               ; preds = %50, %232
  %64 = phi %"class.spvtools::opt::Instruction"* [ %240, %232 ], [ %60, %50 ]
  %65 = phi i64 [ %237, %232 ], [ %57, %50 ]
  %66 = phi i8 [ %233, %232 ], [ %51, %50 ]
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 2
  %68 = load i32, i32* %67, align 8
  switch i32 %68, label %232 [
    i32 61, label %69
    i32 62, label %83
  ]

69:                                               ; preds = %63
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #12
  store i32 -1431655766, i32* %5, align 4
  %70 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt7MemPass6GetPtrEPNS0_11InstructionEPj(%"class.spvtools::opt::MemPass"* %24, %"class.spvtools::opt::Instruction"* %64, i32* nonnull %5) #12
  %71 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %70, i64 0, i32 2
  %72 = load i32, i32* %71, align 8
  %73 = call zeroext i1 @_ZNK8spvtools3opt7MemPass19IsNonPtrAccessChainE6SpvOp_(%"class.spvtools::opt::MemPass"* %24, i32 %72) #12
  br i1 %73, label %74, label %80

74:                                               ; preds = %69
  %75 = load i32, i32* %5, align 4
  %76 = call zeroext i1 @_ZN8spvtools3opt7MemPass11IsTargetVarEj(%"class.spvtools::opt::MemPass"* %24, i32 %75) #12
  br i1 %76, label %77, label %80

77:                                               ; preds = %74
  %78 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %21, align 8
  %79 = call zeroext i1 @_ZN8spvtools3opt27LocalAccessChainConvertPass22ReplaceAccessChainLoadEPKNS0_11InstructionEPS2_(%"class.spvtools::opt::LocalAccessChainConvertPass"* %0, %"class.spvtools::opt::Instruction"* %70, %"class.spvtools::opt::Instruction"* %78)
  br i1 %79, label %80, label %82

80:                                               ; preds = %69, %74, %77
  %81 = phi i8 [ %66, %74 ], [ %66, %69 ], [ 1, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #12
  br label %232

82:                                               ; preds = %77
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #12
  br label %242

83:                                               ; preds = %63
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #12
  store i32 -1431655766, i32* %6, align 4
  %84 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt7MemPass6GetPtrEPNS0_11InstructionEPj(%"class.spvtools::opt::MemPass"* %24, %"class.spvtools::opt::Instruction"* %64, i32* nonnull %6) #12
  %85 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %84, i64 0, i32 2
  %86 = load i32, i32* %85, align 8
  %87 = call zeroext i1 @_ZNK8spvtools3opt7MemPass19IsNonPtrAccessChainE6SpvOp_(%"class.spvtools::opt::MemPass"* %24, i32 %86) #12
  br i1 %87, label %88, label %229

88:                                               ; preds = %83
  %89 = load i32, i32* %6, align 4
  %90 = call zeroext i1 @_ZN8spvtools3opt7MemPass11IsTargetVarEj(%"class.spvtools::opt::MemPass"* %24, i32 %89) #12
  br i1 %90, label %91, label %229

91:                                               ; preds = %88
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #12
  %92 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 3
  %93 = load i8, i8* %92, align 4, !range !2
  %94 = icmp eq i8 %93, 0
  %95 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 4
  %96 = load i8, i8* %95, align 1, !range !2
  %97 = icmp eq i8 %96, 0
  %98 = select i1 %97, i32 1, i32 2
  %99 = xor i1 %97, true
  %100 = zext i1 %99 to i32
  %101 = select i1 %94, i32 %100, i32 %98
  %102 = add nuw nsw i32 %101, 1
  %103 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %64, i32 %102) #12
  %104 = call zeroext i1 @_ZN8spvtools3opt27LocalAccessChainConvertPass30GenAccessChainStoreReplacementEPKNS0_11InstructionEjPNSt3__16vectorINS5_10unique_ptrIS2_NS5_14default_deleteIS2_EEEENS5_9allocatorISA_EEEE(%"class.spvtools::opt::LocalAccessChainConvertPass"* %0, %"class.spvtools::opt::Instruction"* %84, i32 %103, %"class.std::__1::vector.31"* nonnull %7)
  br i1 %104, label %105, label %203

105:                                              ; preds = %91
  %106 = load i64, i64* %28, align 8
  %107 = load i64, i64* %29, align 8
  %108 = sub i64 %106, %107
  %109 = ashr exact i64 %108, 3
  %110 = add nsw i64 %109, -1
  %111 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %18, align 8
  %112 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %19, align 8
  %113 = icmp eq %"class.spvtools::opt::Instruction"** %111, %112
  %114 = ptrtoint %"class.spvtools::opt::Instruction"** %112 to i64
  br i1 %113, label %119, label %115

115:                                              ; preds = %105
  %116 = bitcast %"class.spvtools::opt::Instruction"** %111 to i64*
  store i64 %65, i64* %116, align 8
  %117 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, i64 1
  %118 = ptrtoint %"class.spvtools::opt::Instruction"** %117 to i64
  store i64 %118, i64* %30, align 8
  br label %163

119:                                              ; preds = %105
  %120 = ptrtoint %"class.spvtools::opt::Instruction"** %111 to i64
  %121 = load i64, i64* %31, align 8
  %122 = sub i64 %120, %121
  %123 = ashr exact i64 %122, 3
  %124 = add nsw i64 %123, 1
  %125 = icmp ugt i64 %124, 2305843009213693951
  br i1 %125, label %126, label %128

126:                                              ; preds = %119
  %127 = bitcast %"class.std::__1::vector.987"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %127) #14
  unreachable

128:                                              ; preds = %119
  %129 = sub i64 %114, %121
  %130 = ashr exact i64 %129, 3
  %131 = icmp ult i64 %130, 1152921504606846975
  br i1 %131, label %132, label %140

132:                                              ; preds = %128
  %133 = ashr exact i64 %129, 2
  %134 = icmp ult i64 %133, %124
  %135 = select i1 %134, i64 %124, i64 %133
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %145, label %137

137:                                              ; preds = %132
  %138 = icmp ugt i64 %135, 2305843009213693951
  br i1 %138, label %139, label %140

139:                                              ; preds = %137
  call void @abort() #14
  unreachable

140:                                              ; preds = %137, %128
  %141 = phi i64 [ %135, %137 ], [ 2305843009213693951, %128 ]
  %142 = shl i64 %141, 3
  %143 = call i8* @_Znwm(i64 %142) #13
  %144 = bitcast i8* %143 to %"class.spvtools::opt::Instruction"**
  br label %145

145:                                              ; preds = %140, %132
  %146 = phi i64 [ %141, %140 ], [ 0, %132 ]
  %147 = phi i8* [ %143, %140 ], [ null, %132 ]
  %148 = phi %"class.spvtools::opt::Instruction"** [ %144, %140 ], [ null, %132 ]
  %149 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %148, i64 %123
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %148, i64 %146
  %151 = ptrtoint %"class.spvtools::opt::Instruction"** %150 to i64
  %152 = bitcast %"class.spvtools::opt::Instruction"** %149 to i64*
  store i64 %65, i64* %152, align 8
  %153 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %149, i64 1
  %154 = ptrtoint %"class.spvtools::opt::Instruction"** %153 to i64
  %155 = ptrtoint %"class.spvtools::opt::Instruction"** %148 to i64
  %156 = icmp sgt i64 %122, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %145
  %158 = inttoptr i64 %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %158, i64 %122, i1 false) #12
  br label %159

159:                                              ; preds = %157, %145
  store i64 %155, i64* %31, align 8
  store i64 %154, i64* %30, align 8
  store i64 %151, i64* %32, align 8
  %160 = icmp eq i64 %121, 0
  br i1 %160, label %163, label %161

161:                                              ; preds = %159
  %162 = inttoptr i64 %121 to i8*
  call void @_ZdlPv(i8* %162) #13
  br label %163

163:                                              ; preds = %115, %159, %161
  %164 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %33, align 8
  %165 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %164, i64 0, i32 1
  %166 = bitcast %"class.spvtools::opt::Instruction"** %165 to i64*
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__16vectorINS3_10unique_ptrINS0_11InstructionENS3_14default_deleteIS6_EEEENS3_9allocatorIS9_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %8, %"class.spvtools::opt::InstructionList::iterator"* nonnull %4, %"class.std::__1::vector.31"* nonnull dereferenceable(24) %7) #12
  %168 = load i64, i64* %35, align 8
  store i64 %168, i64* %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  br label %169

169:                                              ; preds = %197, %163
  %170 = phi i64 [ %168, %163 ], [ %201, %197 ]
  %171 = phi i64 [ 0, %163 ], [ %202, %197 ]
  %172 = inttoptr i64 %170 to %"class.spvtools::opt::Instruction"*
  call void @_ZN8spvtools3opt11Instruction19UpdateDebugInfoFromEPKS1_(%"class.spvtools::opt::Instruction"* %172, %"class.spvtools::opt::Instruction"* %64) #12
  %173 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %36, align 8
  %174 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %173, i64 0, i32 11
  %175 = load i32, i32* %174, align 8
  %176 = and i32 %175, 65536
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %192

178:                                              ; preds = %169
  %179 = call i8* @_Znwm(i64 232) #13
  %180 = bitcast i8* %179 to %"class.spvtools::opt::analysis::DebugInfoManager"*
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %180, %"class.spvtools::opt::IRContext"* %173) #12
  %181 = ptrtoint i8* %179 to i64
  %182 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %173, i64 0, i32 21
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593"* %182, i64 0, i32 0, i32 0, i32 0
  %184 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %183, align 8
  %185 = bitcast %"class.std::__1::unique_ptr.593"* %182 to i64*
  store i64 %181, i64* %185, align 8
  %186 = icmp eq %"class.spvtools::opt::analysis::DebugInfoManager"* %184, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %178
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %184) #12
  %188 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"* %184 to i8*
  call void @_ZdlPv(i8* %188) #13
  br label %189

189:                                              ; preds = %187, %178
  %190 = load i32, i32* %174, align 8
  %191 = or i32 %190, 65536
  store i32 %191, i32* %174, align 8
  br label %192

192:                                              ; preds = %169, %189
  %193 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %173, i64 0, i32 21, i32 0, i32 0, i32 0
  %194 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %193, align 8
  %195 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %21, align 8
  call void @_ZN8spvtools3opt8analysis16DebugInfoManager16AnalyzeDebugInstEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DebugInfoManager"* %194, %"class.spvtools::opt::Instruction"* %195) #12
  %196 = icmp eq i64 %171, %110
  br i1 %196, label %203, label %197

197:                                              ; preds = %192
  %198 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %33, align 8
  %199 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %198, i64 0, i32 1
  %200 = bitcast %"class.spvtools::opt::Instruction"** %199 to i64*
  %201 = load i64, i64* %200, align 8
  store i64 %201, i64* %22, align 8
  %202 = add i64 %171, 1
  br label %169

203:                                              ; preds = %192, %91
  %204 = phi i32 [ 1, %91 ], [ 0, %192 ]
  %205 = phi i8 [ %66, %91 ], [ 1, %192 ]
  %206 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %26, align 8
  %207 = icmp eq %"class.std::__1::unique_ptr.21"* %206, null
  br i1 %207, label %230, label %208

208:                                              ; preds = %203
  %209 = bitcast %"class.std::__1::unique_ptr.21"* %206 to i8*
  %210 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %27, align 8
  %211 = icmp eq %"class.std::__1::unique_ptr.21"* %210, %206
  br i1 %211, label %227, label %212

212:                                              ; preds = %208, %223
  %213 = phi %"class.std::__1::unique_ptr.21"* [ %214, %223 ], [ %210, %208 ]
  %214 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %213, i64 -1
  %215 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %214, i64 0, i32 0, i32 0, i32 0
  %216 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %215, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %215, align 8
  %217 = icmp eq %"class.spvtools::opt::Instruction"* %216, null
  br i1 %217, label %223, label %218

218:                                              ; preds = %212
  %219 = bitcast %"class.spvtools::opt::Instruction"* %216 to void (%"class.spvtools::opt::Instruction"*)***
  %220 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %219, align 8
  %221 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %220, i64 1
  %222 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %221, align 8
  call void %222(%"class.spvtools::opt::Instruction"* nonnull %216) #12
  br label %223

223:                                              ; preds = %218, %212
  %224 = icmp eq %"class.std::__1::unique_ptr.21"* %214, %206
  br i1 %224, label %225, label %212

225:                                              ; preds = %223
  %226 = load i8*, i8** %37, align 8
  br label %227

227:                                              ; preds = %225, %208
  %228 = phi i8* [ %226, %225 ], [ %209, %208 ]
  store %"class.std::__1::unique_ptr.21"* %206, %"class.std::__1::unique_ptr.21"** %27, align 8
  call void @_ZdlPv(i8* %228) #13
  br label %230

229:                                              ; preds = %83, %88
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #12
  br label %232

230:                                              ; preds = %227, %203
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #12
  %231 = icmp eq i32 %204, 0
  br i1 %231, label %232, label %242

232:                                              ; preds = %230, %229, %80, %63
  %233 = phi i8 [ %66, %63 ], [ %205, %230 ], [ %81, %80 ], [ %66, %229 ]
  %234 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %33, align 8
  %235 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %234, i64 0, i32 1
  %236 = bitcast %"class.spvtools::opt::Instruction"** %235 to i64*
  %237 = load i64, i64* %236, align 8
  store i64 %237, i64* %22, align 8
  %238 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %53, align 8
  %239 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %238, i64 0, i32 2, i32 0, i32 1
  %240 = inttoptr i64 %237 to %"class.spvtools::opt::Instruction"*
  %241 = icmp eq %"class.spvtools::opt::Instruction"* %239, %240
  br i1 %241, label %246, label %63

242:                                              ; preds = %230, %82
  %243 = phi i32 [ 1, %82 ], [ %204, %230 ]
  %244 = phi i8 [ %66, %82 ], [ %205, %230 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  %245 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %17, align 8
  br label %264

246:                                              ; preds = %232
  %247 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %17, align 8
  %248 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %18, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  %249 = icmp eq %"class.spvtools::opt::Instruction"** %247, %248
  br i1 %249, label %264, label %250

250:                                              ; preds = %246, %260
  %251 = phi %"class.spvtools::opt::Instruction"** [ %262, %260 ], [ %248, %246 ]
  %252 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %251, i64 -1
  %253 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %252, align 8
  store %"class.spvtools::opt::Instruction"** %252, %"class.spvtools::opt::Instruction"*** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #12
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_27LocalAccessChainConvertPass24ConvertLocalAccessChainsEPNS3_8FunctionEE3$_3S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %41, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt27LocalAccessChainConvertPass24ConvertLocalAccessChainsEPNS5_8FunctionEE3$_3FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %42, align 8
  store i64 %40, i64* %43, align 8
  call void @_ZN8spvtools3opt7MemPass7DCEInstEPNS0_11InstructionERKNSt3__18functionIFvS3_EEE(%"class.spvtools::opt::MemPass"* %24, %"class.spvtools::opt::Instruction"* %253, %"class.std::__1::function.994"* nonnull dereferenceable(32) %9) #12
  %254 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %42, align 8
  %255 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %254, i64 0, i32 1
  %256 = load void (i8*)*, void (i8*)** %255, align 8
  %257 = icmp eq void (i8*)* %256, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %250
  %259 = load i8*, i8** %44, align 8
  call void %256(i8* %259) #12
  br label %260

260:                                              ; preds = %250, %258
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #12
  %261 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %17, align 8
  %262 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %18, align 8
  %263 = icmp eq %"class.spvtools::opt::Instruction"** %261, %262
  br i1 %263, label %264, label %250

264:                                              ; preds = %260, %246, %242
  %265 = phi %"class.spvtools::opt::Instruction"** [ %245, %242 ], [ %248, %246 ], [ %261, %260 ]
  %266 = phi i8 [ %244, %242 ], [ %233, %246 ], [ %233, %260 ]
  %267 = phi i32 [ %243, %242 ], [ 0, %246 ], [ 0, %260 ]
  %268 = icmp eq %"class.spvtools::opt::Instruction"** %265, null
  br i1 %268, label %272, label %269

269:                                              ; preds = %264
  %270 = ptrtoint %"class.spvtools::opt::Instruction"** %265 to i64
  store i64 %270, i64* %30, align 8
  %271 = bitcast %"class.spvtools::opt::Instruction"** %265 to i8*
  call void @_ZdlPv(i8* %271) #13
  br label %272

272:                                              ; preds = %264, %269
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  %273 = icmp eq i32 %267, 0
  br i1 %273, label %45, label %279

274:                                              ; preds = %45, %2
  %275 = phi i8 [ 0, %2 ], [ %46, %45 ]
  %276 = and i8 %275, 1
  %277 = icmp eq i8 %276, 0
  %278 = select i1 %277, i32 17, i32 16
  br label %279

279:                                              ; preds = %272, %274
  %280 = phi i32 [ %278, %274 ], [ 0, %272 ]
  ret i32 %280
}

declare void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__16vectorINS3_10unique_ptrINS0_11InstructionENS3_14default_deleteIS6_EEEENS3_9allocatorIS9_EEEE(%"class.spvtools::opt::InstructionList::iterator"* sret, %"class.spvtools::opt::InstructionList::iterator"*, %"class.std::__1::vector.31"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN8spvtools3opt7MemPass7DCEInstEPNS0_11InstructionERKNSt3__18functionIFvS3_EEE(%"class.spvtools::opt::MemPass"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.994"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt27LocalAccessChainConvertPass10InitializeEv(%"class.spvtools::opt::LocalAccessChainConvertPass"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %6, align 8
  %8 = icmp eq %"struct.std::__1::__hash_node_base.915"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5, %9
  %10 = phi %"struct.std::__1::__hash_node_base.915"* [ %12, %9 ], [ %7, %5 ]
  %11 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %10, i64 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %11, align 8
  %13 = bitcast %"struct.std::__1::__hash_node_base.915"* %10 to i8*
  tail call void @_ZdlPv(i8* %13) #13
  %14 = icmp eq %"struct.std::__1::__hash_node_base.915"* %12, null
  br i1 %14, label %15, label %9

15:                                               ; preds = %9, %5
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %6, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %37, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = add i64 %17, -1
  %22 = and i64 %17, 3
  %23 = icmp ult i64 %21, 3
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = sub i64 %17, %22
  br label %38

26:                                               ; preds = %38, %19
  %27 = phi i64 [ 0, %19 ], [ %52, %38 ]
  %28 = icmp eq i64 %22, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %26, %29
  %30 = phi i64 [ %34, %29 ], [ %27, %26 ]
  %31 = phi i64 [ %35, %29 ], [ %22, %26 ]
  %32 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %20, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %32, i64 %30
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %33, align 8
  %34 = add nuw i64 %30, 1
  %35 = add i64 %31, -1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %29, !llvm.loop !9

37:                                               ; preds = %26, %29, %15
  store i64 0, i64* %2, align 8
  br label %55

38:                                               ; preds = %38, %24
  %39 = phi i64 [ 0, %24 ], [ %52, %38 ]
  %40 = phi i64 [ %25, %24 ], [ %53, %38 ]
  %41 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %20, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %41, i64 %39
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %42, align 8
  %43 = or i64 %39, 1
  %44 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %20, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %44, i64 %43
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %45, align 8
  %46 = or i64 %39, 2
  %47 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %20, align 8
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %47, i64 %46
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %48, align 8
  %49 = or i64 %39, 3
  %50 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %20, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %50, i64 %49
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %51, align 8
  %52 = add nuw i64 %39, 4
  %53 = add i64 %40, -4
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %26, label %38

55:                                               ; preds = %1, %37
  %56 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %109, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.915"* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %59, %63
  %64 = phi %"struct.std::__1::__hash_node_base.915"* [ %66, %63 ], [ %61, %59 ]
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %64, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %65, align 8
  %67 = bitcast %"struct.std::__1::__hash_node_base.915"* %64 to i8*
  tail call void @_ZdlPv(i8* %67) #13
  %68 = icmp eq %"struct.std::__1::__hash_node_base.915"* %66, null
  br i1 %68, label %69, label %63

69:                                               ; preds = %63, %59
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %60, align 8
  %70 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %91, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = add i64 %71, -1
  %76 = and i64 %71, 3
  %77 = icmp ult i64 %75, 3
  br i1 %77, label %80, label %78

78:                                               ; preds = %73
  %79 = sub i64 %71, %76
  br label %92

80:                                               ; preds = %92, %73
  %81 = phi i64 [ 0, %73 ], [ %106, %92 ]
  %82 = icmp eq i64 %76, 0
  br i1 %82, label %91, label %83

83:                                               ; preds = %80, %83
  %84 = phi i64 [ %88, %83 ], [ %81, %80 ]
  %85 = phi i64 [ %89, %83 ], [ %76, %80 ]
  %86 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %74, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %86, i64 %84
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %87, align 8
  %88 = add nuw i64 %84, 1
  %89 = add i64 %85, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %83, !llvm.loop !11

91:                                               ; preds = %80, %83, %69
  store i64 0, i64* %56, align 8
  br label %109

92:                                               ; preds = %92, %78
  %93 = phi i64 [ 0, %78 ], [ %106, %92 ]
  %94 = phi i64 [ %79, %78 ], [ %107, %92 ]
  %95 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %74, align 8
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %95, i64 %93
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %96, align 8
  %97 = or i64 %93, 1
  %98 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %74, align 8
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %98, i64 %97
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %99, align 8
  %100 = or i64 %93, 2
  %101 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %74, align 8
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %101, i64 %100
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %102, align 8
  %103 = or i64 %93, 3
  %104 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %74, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %104, i64 %103
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %105, align 8
  %106 = add nuw i64 %93, 4
  %107 = add i64 %94, -4
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %80, label %92

109:                                              ; preds = %55, %91
  %110 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %163, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.915"* %115, null
  br i1 %116, label %123, label %117

117:                                              ; preds = %113, %117
  %118 = phi %"struct.std::__1::__hash_node_base.915"* [ %120, %117 ], [ %115, %113 ]
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %118, i64 0, i32 0
  %120 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %119, align 8
  %121 = bitcast %"struct.std::__1::__hash_node_base.915"* %118 to i8*
  tail call void @_ZdlPv(i8* %121) #13
  %122 = icmp eq %"struct.std::__1::__hash_node_base.915"* %120, null
  br i1 %122, label %123, label %117

123:                                              ; preds = %117, %113
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %114, align 8
  %124 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %145, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = add i64 %125, -1
  %130 = and i64 %125, 3
  %131 = icmp ult i64 %129, 3
  br i1 %131, label %134, label %132

132:                                              ; preds = %127
  %133 = sub i64 %125, %130
  br label %146

134:                                              ; preds = %146, %127
  %135 = phi i64 [ 0, %127 ], [ %160, %146 ]
  %136 = icmp eq i64 %130, 0
  br i1 %136, label %145, label %137

137:                                              ; preds = %134, %137
  %138 = phi i64 [ %142, %137 ], [ %135, %134 ]
  %139 = phi i64 [ %143, %137 ], [ %130, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %128, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %140, i64 %138
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %141, align 8
  %142 = add nuw i64 %138, 1
  %143 = add i64 %139, -1
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %137, !llvm.loop !12

145:                                              ; preds = %134, %137, %123
  store i64 0, i64* %110, align 8
  br label %163

146:                                              ; preds = %146, %132
  %147 = phi i64 [ 0, %132 ], [ %160, %146 ]
  %148 = phi i64 [ %133, %132 ], [ %161, %146 ]
  %149 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %128, align 8
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %149, i64 %147
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %150, align 8
  %151 = or i64 %147, 1
  %152 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %128, align 8
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %152, i64 %151
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %153, align 8
  %154 = or i64 %147, 2
  %155 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %128, align 8
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %155, i64 %154
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %156, align 8
  %157 = or i64 %147, 3
  %158 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %128, align 8
  %159 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %158, i64 %157
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %159, align 8
  %160 = add nuw i64 %147, 4
  %161 = add i64 %148, -4
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %134, label %146

163:                                              ; preds = %109, %145
  tail call void @_ZN8spvtools3opt27LocalAccessChainConvertPass14InitExtensionsEv(%"class.spvtools::opt::LocalAccessChainConvertPass"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt27LocalAccessChainConvertPass14InitExtensionsEv(%"class.spvtools::opt::LocalAccessChainConvertPass"*) local_unnamed_addr #0 align 2 {
  %2 = alloca [44 x %"class.std::__1::basic_string"], align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %66, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %8, align 8
  %10 = icmp eq %"struct.std::__1::__hash_node_base.937"* %9, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %7, %23
  %12 = phi %"struct.std::__1::__hash_node_base.937"* [ %14, %23 ], [ %9, %7 ]
  %13 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %12, i64 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %12, i64 2
  %16 = bitcast %"struct.std::__1::__hash_node_base.937"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %11
  %21 = bitcast %"struct.std::__1::__hash_node_base.937"* %15 to i8**
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #13
  br label %23

23:                                               ; preds = %20, %11
  %24 = bitcast %"struct.std::__1::__hash_node_base.937"* %12 to i8*
  tail call void @_ZdlPv(i8* %24) #13
  %25 = icmp eq %"struct.std::__1::__hash_node_base.937"* %14, null
  br i1 %25, label %26, label %11

26:                                               ; preds = %23, %7
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %8, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %48, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::unordered_set.932", %"class.std::__1::unordered_set.932"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = add i64 %28, -1
  %33 = and i64 %28, 3
  %34 = icmp ult i64 %32, 3
  br i1 %34, label %37, label %35

35:                                               ; preds = %30
  %36 = sub i64 %28, %33
  br label %49

37:                                               ; preds = %49, %30
  %38 = phi i64 [ 0, %30 ], [ %63, %49 ]
  %39 = icmp eq i64 %33, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %37, %40
  %41 = phi i64 [ %45, %40 ], [ %38, %37 ]
  %42 = phi i64 [ %46, %40 ], [ %33, %37 ]
  %43 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %31, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %44, align 8
  %45 = add nuw i64 %41, 1
  %46 = add i64 %42, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %40, !llvm.loop !13

48:                                               ; preds = %37, %40, %26
  store i64 0, i64* %4, align 8
  br label %66

49:                                               ; preds = %49, %35
  %50 = phi i64 [ 0, %35 ], [ %63, %49 ]
  %51 = phi i64 [ %36, %35 ], [ %64, %49 ]
  %52 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %31, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %52, i64 %50
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %53, align 8
  %54 = or i64 %50, 1
  %55 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %31, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %56, align 8
  %57 = or i64 %50, 2
  %58 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %31, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %58, i64 %57
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %59, align 8
  %60 = or i64 %50, 3
  %61 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %31, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %61, i64 %60
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %62, align 8
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %37, label %49

66:                                               ; preds = %1, %48
  %67 = bitcast [44 x %"class.std::__1::basic_string"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1056, i8* nonnull %67) #12
  %68 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 0
  %69 = tail call i8* @_Znwm(i64 48) #13
  %70 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %69, i8** %70, align 8
  %71 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = bitcast i64* %71 to <2 x i64>*
  store <2 x i64> <i64 40, i64 -9223372036854775760>, <2 x i64>* %72, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %69, i8* align 1 getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i64 40, i1 false) #12
  %73 = getelementptr inbounds i8, i8* %69, i64 40
  store i8 0, i8* %73, align 1
  %74 = tail call i8* @_Znwm(i64 32) #13
  %75 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %74, i8** %75, align 8
  %76 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = bitcast i64* %76 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %77, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %74, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0), i64 29, i1 false) #12
  %78 = getelementptr inbounds i8, i8* %74, i64 29
  store i8 0, i8* %78, align 1
  %79 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 2
  %80 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  store i8 18, i8* %81, align 1
  %82 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i64 18, i1 false) #12
  %83 = getelementptr inbounds i8, i8* %82, i64 18
  store i8 0, i8* %83, align 2
  %84 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 3
  %85 = bitcast %"class.std::__1::basic_string"* %84 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  store i8 21, i8* %86, align 1
  %87 = bitcast %"class.std::__1::basic_string"* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i64 21, i1 false) #12
  %88 = getelementptr inbounds i8, i8* %87, i64 21
  store i8 0, i8* %88, align 1
  %89 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 4
  %90 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  store i8 21, i8* %91, align 1
  %92 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i64 21, i1 false) #12
  %93 = getelementptr inbounds i8, i8* %92, i64 21
  store i8 0, i8* %93, align 1
  %94 = tail call i8* @_Znwm(i64 32) #13
  %95 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %94, i8** %95, align 8
  %96 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = bitcast i64* %96 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %97, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %94, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i64 0, i64 0), i64 29, i1 false) #12
  %98 = getelementptr inbounds i8, i8* %94, i64 29
  store i8 0, i8* %98, align 1
  %99 = tail call i8* @_Znwm(i64 32) #13
  %100 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %99, i8** %100, align 8
  %101 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = bitcast i64* %101 to <2 x i64>*
  store <2 x i64> <i64 30, i64 -9223372036854775776>, <2 x i64>* %102, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %99, i8* align 1 getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i64 30, i1 false) #12
  %103 = getelementptr inbounds i8, i8* %99, i64 30
  store i8 0, i8* %103, align 1
  %104 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 7
  %105 = bitcast %"class.std::__1::basic_string"* %104 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  store i8 21, i8* %106, align 1
  %107 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i64 21, i1 false) #12
  %108 = getelementptr inbounds i8, i8* %107, i64 21
  store i8 0, i8* %108, align 1
  %109 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 8
  %110 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  store i8 20, i8* %111, align 1
  %112 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i64 20, i1 false) #12
  %113 = getelementptr inbounds i8, i8* %112, i64 20
  store i8 0, i8* %113, align 4
  %114 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 9
  %115 = bitcast %"class.std::__1::basic_string"* %114 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  store i8 21, i8* %116, align 1
  %117 = bitcast %"class.std::__1::basic_string"* %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0), i64 21, i1 false) #12
  %118 = getelementptr inbounds i8, i8* %117, i64 21
  store i8 0, i8* %118, align 1
  %119 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 10
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  store i8 20, i8* %121, align 1
  %122 = bitcast %"class.std::__1::basic_string"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0), i64 20, i1 false) #12
  %123 = getelementptr inbounds i8, i8* %122, i64 20
  store i8 0, i8* %123, align 4
  %124 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 11
  %125 = bitcast %"class.std::__1::basic_string"* %124 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  store i8 17, i8* %126, align 1
  %127 = bitcast %"class.std::__1::basic_string"* %124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i64 17, i1 false) #12
  %128 = getelementptr inbounds i8, i8* %127, i64 17
  store i8 0, i8* %128, align 1
  %129 = tail call i8* @_Znwm(i64 48) #13
  %130 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %129, i8** %130, align 8
  %131 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %132 = bitcast i64* %131 to <2 x i64>*
  store <2 x i64> <i64 37, i64 -9223372036854775760>, <2 x i64>* %132, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %129, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0), i64 37, i1 false) #12
  %133 = getelementptr inbounds i8, i8* %129, i64 37
  store i8 0, i8* %133, align 1
  %134 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 13
  %135 = bitcast %"class.std::__1::basic_string"* %134 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  store i8 22, i8* %136, align 1
  %137 = bitcast %"class.std::__1::basic_string"* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i64 22, i1 false) #12
  %138 = getelementptr inbounds i8, i8* %137, i64 22
  store i8 0, i8* %138, align 2
  %139 = tail call i8* @_Znwm(i64 32) #13
  %140 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %139, i8** %140, align 8
  %141 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %142 = bitcast i64* %141 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %142, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %139, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i64 0, i64 0), i64 28, i1 false) #12
  %143 = getelementptr inbounds i8, i8* %139, i64 28
  store i8 0, i8* %143, align 1
  %144 = tail call i8* @_Znwm(i64 48) #13
  %145 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %144, i8** %145, align 8
  %146 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %147 = bitcast i64* %146 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %147, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %144, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.17, i64 0, i64 0), i64 36, i1 false) #12
  %148 = getelementptr inbounds i8, i8* %144, i64 36
  store i8 0, i8* %148, align 1
  %149 = tail call i8* @_Znwm(i64 48) #13
  %150 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %149, i8** %150, align 8
  %151 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %152 = bitcast i64* %151 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %152, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %149, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.18, i64 0, i64 0), i64 34, i1 false) #12
  %153 = getelementptr inbounds i8, i8* %149, i64 34
  store i8 0, i8* %153, align 1
  %154 = tail call i8* @_Znwm(i64 32) #13
  %155 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %154, i8** %155, align 8
  %156 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %157 = bitcast i64* %156 to <2 x i64>*
  store <2 x i64> <i64 31, i64 -9223372036854775776>, <2 x i64>* %157, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %154, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0), i64 31, i1 false) #12
  %158 = getelementptr inbounds i8, i8* %154, i64 31
  store i8 0, i8* %158, align 1
  %159 = tail call i8* @_Znwm(i64 48) #13
  %160 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %159, i8** %160, align 8
  %161 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %162 = bitcast i64* %161 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %162, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %159, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.20, i64 0, i64 0), i64 36, i1 false) #12
  %163 = getelementptr inbounds i8, i8* %159, i64 36
  store i8 0, i8* %163, align 1
  %164 = tail call i8* @_Znwm(i64 32) #13
  %165 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 19, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %164, i8** %165, align 8
  %166 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 19, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %167 = bitcast i64* %166 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %167, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %164, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.21, i64 0, i64 0), i64 24, i1 false) #12
  %168 = getelementptr inbounds i8, i8* %164, i64 24
  store i8 0, i8* %168, align 1
  %169 = tail call i8* @_Znwm(i64 32) #13
  %170 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %169, i8** %170, align 8
  %171 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %172 = bitcast i64* %171 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %172, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %169, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.22, i64 0, i64 0), i64 27, i1 false) #12
  %173 = getelementptr inbounds i8, i8* %169, i64 27
  store i8 0, i8* %173, align 1
  %174 = tail call i8* @_Znwm(i64 48) #13
  %175 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 21, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %174, i8** %175, align 8
  %176 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 21, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %177 = bitcast i64* %176 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %177, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %174, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.23, i64 0, i64 0), i64 33, i1 false) #12
  %178 = getelementptr inbounds i8, i8* %174, i64 33
  store i8 0, i8* %178, align 1
  %179 = tail call i8* @_Znwm(i64 32) #13
  %180 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 22, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %179, i8** %180, align 8
  %181 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 22, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %182 = bitcast i64* %181 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %182, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %179, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i64 0, i64 0), i64 29, i1 false) #12
  %183 = getelementptr inbounds i8, i8* %179, i64 29
  store i8 0, i8* %183, align 1
  %184 = tail call i8* @_Znwm(i64 48) #13
  %185 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %184, i8** %185, align 8
  %186 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %187 = bitcast i64* %186 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %187, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %184, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25, i64 0, i64 0), i64 35, i1 false) #12
  %188 = getelementptr inbounds i8, i8* %184, i64 35
  store i8 0, i8* %188, align 1
  %189 = tail call i8* @_Znwm(i64 48) #13
  %190 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %189, i8** %190, align 8
  %191 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %192 = bitcast i64* %191 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %192, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %189, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.26, i64 0, i64 0), i64 35, i1 false) #12
  %193 = getelementptr inbounds i8, i8* %189, i64 35
  store i8 0, i8* %193, align 1
  %194 = tail call i8* @_Znwm(i64 32) #13
  %195 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %194, i8** %195, align 8
  %196 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %197 = bitcast i64* %196 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %197, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %194, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i64 0, i64 0), i64 28, i1 false) #12
  %198 = getelementptr inbounds i8, i8* %194, i64 28
  store i8 0, i8* %198, align 1
  %199 = tail call i8* @_Znwm(i64 32) #13
  %200 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 26, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %199, i8** %200, align 8
  %201 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 26, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %202 = bitcast i64* %201 to <2 x i64>*
  store <2 x i64> <i64 30, i64 -9223372036854775776>, <2 x i64>* %202, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %199, i8* align 1 getelementptr inbounds ([31 x i8], [31 x i8]* @.str.28, i64 0, i64 0), i64 30, i1 false) #12
  %203 = getelementptr inbounds i8, i8* %199, i64 30
  store i8 0, i8* %203, align 1
  %204 = tail call i8* @_Znwm(i64 48) #13
  %205 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 27, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %204, i8** %205, align 8
  %206 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 27, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %207 = bitcast i64* %206 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %207, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %204, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29, i64 0, i64 0), i64 35, i1 false) #12
  %208 = getelementptr inbounds i8, i8* %204, i64 35
  store i8 0, i8* %208, align 1
  %209 = tail call i8* @_Znwm(i64 32) #13
  %210 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 28, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %209, i8** %210, align 8
  %211 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 28, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %212 = bitcast i64* %211 to <2 x i64>*
  store <2 x i64> <i64 26, i64 -9223372036854775776>, <2 x i64>* %212, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %209, i8* align 1 getelementptr inbounds ([27 x i8], [27 x i8]* @.str.30, i64 0, i64 0), i64 26, i1 false) #12
  %213 = getelementptr inbounds i8, i8* %209, i64 26
  store i8 0, i8* %213, align 1
  %214 = tail call i8* @_Znwm(i64 32) #13
  %215 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %214, i8** %215, align 8
  %216 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 -9223372036854775776, i64* %216, align 8
  %217 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 30, i64* %217, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %214, i8* align 1 getelementptr inbounds ([31 x i8], [31 x i8]* @.str.31, i64 0, i64 0), i64 30, i1 false) #12
  %218 = getelementptr inbounds i8, i8* %214, i64 30
  store i8 0, i8* %218, align 1
  %219 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 30
  %220 = bitcast %"class.std::__1::basic_string"* %219 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %220, i64 0, i32 1, i32 0
  store i8 20, i8* %221, align 1
  %222 = bitcast %"class.std::__1::basic_string"* %219 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32, i64 0, i64 0), i64 20, i1 false) #12
  %223 = getelementptr inbounds i8, i8* %222, i64 20
  store i8 0, i8* %223, align 4
  %224 = tail call i8* @_Znwm(i64 48) #13
  %225 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 31, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %224, i8** %225, align 8
  %226 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 31, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %227 = bitcast i64* %226 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %227, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %224, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.33, i64 0, i64 0), i64 34, i1 false) #12
  %228 = getelementptr inbounds i8, i8* %224, i64 34
  store i8 0, i8* %228, align 1
  %229 = tail call i8* @_Znwm(i64 48) #13
  %230 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 32, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %229, i8** %230, align 8
  %231 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 32, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %232 = bitcast i64* %231 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %232, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %229, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.34, i64 0, i64 0), i64 35, i1 false) #12
  %233 = getelementptr inbounds i8, i8* %229, i64 35
  store i8 0, i8* %233, align 1
  %234 = tail call i8* @_Znwm(i64 32) #13
  %235 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 33, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %234, i8** %235, align 8
  %236 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 33, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %237 = bitcast i64* %236 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %237, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %234, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.35, i64 0, i64 0), i64 27, i1 false) #12
  %238 = getelementptr inbounds i8, i8* %234, i64 27
  store i8 0, i8* %238, align 1
  %239 = tail call i8* @_Znwm(i64 48) #13
  %240 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 34, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %239, i8** %240, align 8
  %241 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 34, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %242 = bitcast i64* %241 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %242, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %239, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.36, i64 0, i64 0), i64 34, i1 false) #12
  %243 = getelementptr inbounds i8, i8* %239, i64 34
  store i8 0, i8* %243, align 1
  %244 = tail call i8* @_Znwm(i64 48) #13
  %245 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 35, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %244, i8** %245, align 8
  %246 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 35, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %247 = bitcast i64* %246 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %247, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %244, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.37, i64 0, i64 0), i64 33, i1 false) #12
  %248 = getelementptr inbounds i8, i8* %244, i64 33
  store i8 0, i8* %248, align 1
  %249 = tail call i8* @_Znwm(i64 32) #13
  %250 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 36, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %249, i8** %250, align 8
  %251 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 36, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %252 = bitcast i64* %251 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %252, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %249, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.38, i64 0, i64 0), i64 29, i1 false) #12
  %253 = getelementptr inbounds i8, i8* %249, i64 29
  store i8 0, i8* %253, align 1
  %254 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 37
  %255 = bitcast %"class.std::__1::basic_string"* %254 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %256 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %255, i64 0, i32 1, i32 0
  store i8 19, i8* %256, align 1
  %257 = bitcast %"class.std::__1::basic_string"* %254 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.39, i64 0, i64 0), i64 19, i1 false) #12
  %258 = getelementptr inbounds i8, i8* %257, i64 19
  store i8 0, i8* %258, align 1
  %259 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 38
  %260 = bitcast %"class.std::__1::basic_string"* %259 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %261 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %260, i64 0, i32 1, i32 0
  store i8 18, i8* %261, align 1
  %262 = bitcast %"class.std::__1::basic_string"* %259 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.40, i64 0, i64 0), i64 18, i1 false) #12
  %263 = getelementptr inbounds i8, i8* %262, i64 18
  store i8 0, i8* %263, align 2
  %264 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 39
  %265 = bitcast %"class.std::__1::basic_string"* %264 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %266 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %265, i64 0, i32 1, i32 0
  store i8 18, i8* %266, align 1
  %267 = bitcast %"class.std::__1::basic_string"* %264 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %267, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.41, i64 0, i64 0), i64 18, i1 false) #12
  %268 = getelementptr inbounds i8, i8* %267, i64 18
  store i8 0, i8* %268, align 2
  %269 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 40
  %270 = bitcast %"class.std::__1::basic_string"* %269 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %271 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %270, i64 0, i32 1, i32 0
  store i8 19, i8* %271, align 1
  %272 = bitcast %"class.std::__1::basic_string"* %269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %272, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.42, i64 0, i64 0), i64 19, i1 false) #12
  %273 = getelementptr inbounds i8, i8* %272, i64 19
  store i8 0, i8* %273, align 1
  %274 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 41
  %275 = bitcast %"class.std::__1::basic_string"* %274 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %276 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %275, i64 0, i32 1, i32 0
  store i8 17, i8* %276, align 1
  %277 = bitcast %"class.std::__1::basic_string"* %274 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %277, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i64 0, i64 0), i64 17, i1 false) #12
  %278 = getelementptr inbounds i8, i8* %277, i64 17
  store i8 0, i8* %278, align 1
  %279 = tail call i8* @_Znwm(i64 48) #13
  %280 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 42, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %279, i8** %280, align 8
  %281 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 42, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %282 = bitcast i64* %281 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %282, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %279, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.44, i64 0, i64 0), i64 35, i1 false) #12
  %283 = getelementptr inbounds i8, i8* %279, i64 35
  store i8 0, i8* %283, align 1
  %284 = tail call i8* @_Znwm(i64 32) #13
  %285 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 43, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %284, i8** %285, align 8
  %286 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 43, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %287 = bitcast i64* %286 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %287, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %284, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.45, i64 0, i64 0), i64 28, i1 false) #12
  %288 = getelementptr inbounds i8, i8* %284, i64 28
  store i8 0, i8* %288, align 1
  %289 = getelementptr inbounds [44 x %"class.std::__1::basic_string"], [44 x %"class.std::__1::basic_string"]* %2, i64 0, i64 44
  %290 = getelementptr inbounds %"class.std::__1::unordered_set.932", %"class.std::__1::unordered_set.932"* %3, i64 0, i32 0
  br label %291

291:                                              ; preds = %291, %66
  %292 = phi %"class.std::__1::basic_string"* [ %68, %66 ], [ %294, %291 ]
  %293 = call { %"struct.std::__1::__hash_node_base.937"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.933"* %290, %"class.std::__1::basic_string"* dereferenceable(24) %292, %"class.std::__1::basic_string"* dereferenceable(24) %292) #12
  %294 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %292, i64 1
  %295 = icmp eq %"class.std::__1::basic_string"* %294, %289
  br i1 %295, label %296, label %291

296:                                              ; preds = %291, %306
  %297 = phi %"class.std::__1::basic_string"* [ %298, %306 ], [ %289, %291 ]
  %298 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %297, i64 -1
  %299 = bitcast %"class.std::__1::basic_string"* %298 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %300 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %299, i64 0, i32 1, i32 0
  %301 = load i8, i8* %300, align 1
  %302 = icmp slt i8 %301, 0
  br i1 %302, label %303, label %306

303:                                              ; preds = %296
  %304 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %298, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = load i8*, i8** %304, align 8
  call void @_ZdlPv(i8* %305) #13
  br label %306

306:                                              ; preds = %296, %303
  %307 = icmp eq %"class.std::__1::basic_string"* %298, %68
  br i1 %307, label %308, label %296

308:                                              ; preds = %306
  call void @llvm.lifetime.end.p0i8(i64 1056, i8* nonnull %67) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt27LocalAccessChainConvertPass22AllExtensionsSupportedEv(%"class.spvtools::opt::LocalAccessChainConvertPass"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 8
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %6, align 8
  %8 = icmp eq %"class.spvtools::opt::FeatureManager"* %7, null
  br i1 %8, label %9, label %47

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 1
  %11 = tail call i8* @_Znwm(i64 48) #13
  %12 = bitcast i8* %11 to %"class.spvtools::AssemblyGrammar"**
  store %"class.spvtools::AssemblyGrammar"* %10, %"class.spvtools::AssemblyGrammar"** %12, align 8
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 40, i1 false) #12
  %14 = ptrtoint i8* %11 to i64
  %15 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %6, align 8
  %16 = bitcast %"class.std::__1::unique_ptr.152"* %5 to i64*
  store i64 %14, i64* %16, align 8
  %17 = icmp eq %"class.spvtools::opt::FeatureManager"* %15, null
  %18 = bitcast i8* %11 to %"class.spvtools::opt::FeatureManager"*
  br i1 %17, label %42, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %15, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %20, align 8
  store %"class.std::__1::set.158"* null, %"class.std::__1::set.158"** %20, align 8
  %22 = icmp eq %"class.std::__1::set.158"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %21, i64 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node.1046"**
  %27 = load %"class.std::__1::__tree_node.1046"*, %"class.std::__1::__tree_node.1046"** %26, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %24, %"class.std::__1::__tree_node.1046"* %27) #12
  %28 = bitcast %"class.std::__1::set.158"* %21 to i8*
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %23, %19
  %30 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %15, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %30, align 8
  store %"class.std::__1::set.158"* null, %"class.std::__1::set.158"** %30, align 8
  %32 = icmp eq %"class.std::__1::set.158"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %31, i64 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %31, i64 0, i32 0, i32 1, i32 0, i32 0
  %36 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node.1046"**
  %37 = load %"class.std::__1::__tree_node.1046"*, %"class.std::__1::__tree_node.1046"** %36, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %34, %"class.std::__1::__tree_node.1046"* %37) #12
  %38 = bitcast %"class.std::__1::set.158"* %31 to i8*
  tail call void @_ZdlPv(i8* %38) #13
  br label %39

39:                                               ; preds = %33, %29
  %40 = bitcast %"class.spvtools::opt::FeatureManager"* %15 to i8*
  tail call void @_ZdlPv(i8* %40) #13
  %41 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %6, align 8
  br label %42

42:                                               ; preds = %39, %9
  %43 = phi %"class.spvtools::opt::FeatureManager"* [ %41, %39 ], [ %18, %9 ]
  %44 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %45 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %44, align 8
  tail call void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"* %43, %"class.spvtools::opt::Module"* %45) #12
  %46 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %6, align 8
  br label %47

47:                                               ; preds = %1, %42
  %48 = phi %"class.spvtools::opt::FeatureManager"* [ %7, %1 ], [ %46, %42 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %48, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %49, align 8
  %51 = icmp eq %"class.std::__1::set.158"* %50, null
  br i1 %51, label %78, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %50, i64 0, i32 0, i32 1, i32 0, i32 0
  %54 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_node.1046"**
  %55 = load %"class.std::__1::__tree_node.1046"*, %"class.std::__1::__tree_node.1046"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node.1046"* %55, null
  br i1 %56, label %78, label %57

57:                                               ; preds = %52, %57
  %58 = phi %"class.std::__1::__tree_end_node"* [ %68, %57 ], [ %53, %52 ]
  %59 = phi %"class.std::__1::__tree_node.1046"* [ %69, %57 ], [ %55, %52 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree_node.1046", %"class.std::__1::__tree_node.1046"* %59, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = icmp ult i32 %61, 4442
  %63 = getelementptr inbounds %"class.std::__1::__tree_node.1046", %"class.std::__1::__tree_node.1046"* %59, i64 0, i32 0, i32 1
  %64 = bitcast %"class.std::__1::__tree_node_base"** %63 to %"class.std::__1::__tree_node.1046"**
  %65 = getelementptr inbounds %"class.std::__1::__tree_node.1046", %"class.std::__1::__tree_node.1046"* %59, i64 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::__tree_node.1046"* %59 to %"class.std::__1::__tree_node.1046"**
  %67 = select i1 %62, %"class.std::__1::__tree_node.1046"** %64, %"class.std::__1::__tree_node.1046"** %66
  %68 = select i1 %62, %"class.std::__1::__tree_end_node"* %58, %"class.std::__1::__tree_end_node"* %65
  %69 = load %"class.std::__1::__tree_node.1046"*, %"class.std::__1::__tree_node.1046"** %67, align 8
  %70 = icmp eq %"class.std::__1::__tree_node.1046"* %69, null
  br i1 %70, label %71, label %57

71:                                               ; preds = %57
  %72 = icmp eq %"class.std::__1::__tree_end_node"* %68, %53
  br i1 %72, label %78, label %73

73:                                               ; preds = %71
  %74 = bitcast %"class.std::__1::__tree_end_node"* %68 to %"class.std::__1::__tree_node.1046"*
  %75 = getelementptr inbounds %"class.std::__1::__tree_node.1046", %"class.std::__1::__tree_node.1046"* %74, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = icmp ult i32 %76, 4443
  br i1 %77, label %152, label %78

78:                                               ; preds = %73, %71, %52, %47
  %79 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %80 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %79, i64 0, i32 4, i32 0, i32 0, i32 0
  %81 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %80, align 8
  %82 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %81, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %83 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %81, i64 0, i32 4, i32 0, i32 1
  %84 = bitcast %"class.spvtools::opt::Instruction"** %82 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = inttoptr i64 %85 to %"class.spvtools::opt::Instruction"*
  %87 = icmp eq %"class.spvtools::opt::Instruction"* %83, %86
  br i1 %87, label %152, label %88

88:                                               ; preds = %78
  %89 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 2, i32 0
  br label %96

96:                                               ; preds = %88, %145
  %97 = phi %"class.spvtools::opt::Instruction"* [ %86, %88 ], [ %150, %145 ]
  %98 = phi i64 [ %85, %88 ], [ %149, %145 ]
  %99 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 3
  %100 = load i8, i8* %99, align 4, !range !2
  %101 = icmp eq i8 %100, 0
  %102 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 4
  %103 = load i8, i8* %102, align 1, !range !2
  %104 = icmp eq i8 %103, 0
  %105 = select i1 %104, i64 1, i64 2
  %106 = xor i1 %104, true
  %107 = zext i1 %106 to i64
  %108 = select i1 %101, i64 %107, i64 %105
  %109 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 6, i32 0, i32 0
  %110 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %109, align 8
  %111 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %110, i64 %108, i32 1, i32 4, i32 0, i32 0, i32 0
  %112 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %111, align 8
  %113 = icmp eq %"class.std::__1::vector.3"* %112, null
  %114 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %112, i64 0, i32 0, i32 0
  %115 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %110, i64 %108, i32 1, i32 2
  %116 = select i1 %113, i32** %115, i32** %114
  %117 = bitcast i32** %116 to i8**
  %118 = load i8*, i8** %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #12
  %119 = call i64 @strlen(i8* %118) #12
  %120 = icmp ugt i64 %119, -17
  br i1 %120, label %121, label %123

121:                                              ; preds = %96
  %122 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %122) #14
  unreachable

123:                                              ; preds = %96
  %124 = icmp ult i64 %119, 23
  br i1 %124, label %130, label %125

125:                                              ; preds = %123
  %126 = add nuw i64 %119, 16
  %127 = and i64 %126, -16
  %128 = call i8* @_Znwm(i64 %127) #13
  store i8* %128, i8** %90, align 8
  %129 = or i64 %127, -9223372036854775808
  store i64 %129, i64* %91, align 8
  store i64 %119, i64* %92, align 8
  br label %133

130:                                              ; preds = %123
  %131 = trunc i64 %119 to i8
  store i8 %131, i8* %94, align 1
  %132 = icmp eq i64 %119, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %130, %125
  %134 = phi i8* [ %128, %125 ], [ %89, %130 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %134, i8* align 1 %118, i64 %119, i1 false) #12
  br label %135

135:                                              ; preds = %130, %133
  %136 = phi i8* [ %89, %130 ], [ %134, %133 ]
  %137 = getelementptr inbounds i8, i8* %136, i64 %119
  store i8 0, i8* %137, align 1
  %138 = call %"struct.std::__1::__hash_node_base.937"* @_ZNKSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.933"* %95, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #12
  %139 = icmp eq %"struct.std::__1::__hash_node_base.937"* %138, null
  %140 = load i8, i8* %94, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %135
  %143 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %143) #13
  br label %144

144:                                              ; preds = %135, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #12
  br i1 %139, label %152, label %145

145:                                              ; preds = %144
  %146 = inttoptr i64 %98 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %147 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %146, i64 0, i32 1
  %148 = bitcast %"class.spvtools::opt::Instruction"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = inttoptr i64 %149 to %"class.spvtools::opt::Instruction"*
  %151 = icmp eq %"class.spvtools::opt::Instruction"* %83, %150
  br i1 %151, label %152, label %96

152:                                              ; preds = %145, %144, %78, %73
  %153 = phi i1 [ false, %73 ], [ true, %78 ], [ true, %145 ], [ false, %144 ]
  ret i1 %153
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt27LocalAccessChainConvertPass11ProcessImplEv(%"class.spvtools::opt::LocalAccessChainConvertPass"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 0, i32 2
  %3 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 14, i32 0, i32 1, i32 0, i32 1
  %7 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 14, i32 0, i32 1
  %8 = bitcast %"class.spvtools::opt::Instruction"** %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = inttoptr i64 %9 to %"class.spvtools::opt::Instruction"*
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %7, %10
  br i1 %11, label %42, label %12

12:                                               ; preds = %1, %31
  %13 = phi %"class.spvtools::opt::Instruction"* [ %36, %31 ], [ %10, %1 ]
  %14 = phi i64 [ %35, %31 ], [ %9, %1 ]
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 21
  br i1 %17, label %18, label %31

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 0, i32 3
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 0, i32 4
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = select i1 %24, i32 1, i32 2
  %26 = xor i1 %24, true
  %27 = zext i1 %26 to i32
  %28 = select i1 %21, i32 %27, i32 %25
  %29 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %13, i32 %28) #12
  %30 = icmp eq i32 %29, 32
  br i1 %30, label %31, label %86

31:                                               ; preds = %12, %18
  %32 = inttoptr i64 %14 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %33 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %32, i64 0, i32 1
  %34 = bitcast %"class.spvtools::opt::Instruction"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = inttoptr i64 %35 to %"class.spvtools::opt::Instruction"*
  %37 = icmp eq %"class.spvtools::opt::Instruction"* %7, %36
  br i1 %37, label %38, label %12

38:                                               ; preds = %31
  %39 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %40 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %41 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %40, align 8
  br label %42

42:                                               ; preds = %38, %1
  %43 = phi %"class.spvtools::opt::Module"* [ %41, %38 ], [ %5, %1 ]
  %44 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %43, i64 0, i32 13, i32 0, i32 1, i32 0, i32 1
  %45 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %43, i64 0, i32 13, i32 0, i32 1
  %46 = bitcast %"class.spvtools::opt::Instruction"** %44 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = inttoptr i64 %47 to %"class.spvtools::opt::Instruction"*
  %49 = icmp eq %"class.spvtools::opt::Instruction"* %45, %48
  br i1 %49, label %63, label %50

50:                                               ; preds = %42, %56
  %51 = phi %"class.spvtools::opt::Instruction"* [ %61, %56 ], [ %48, %42 ]
  %52 = phi i64 [ %60, %56 ], [ %47, %42 ]
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %51, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 74
  br i1 %55, label %86, label %56

56:                                               ; preds = %50
  %57 = inttoptr i64 %52 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = inttoptr i64 %60 to %"class.spvtools::opt::Instruction"*
  %62 = icmp eq %"class.spvtools::opt::Instruction"* %45, %61
  br i1 %62, label %63, label %50

63:                                               ; preds = %56, %42
  %64 = tail call zeroext i1 @_ZNK8spvtools3opt27LocalAccessChainConvertPass22AllExtensionsSupportedEv(%"class.spvtools::opt::LocalAccessChainConvertPass"* %0)
  br i1 %64, label %65, label %86

65:                                               ; preds = %63
  %66 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %66, i64 0, i32 4, i32 0, i32 0, i32 0
  %68 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %67, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %68, i64 0, i32 15, i32 0, i32 0
  %70 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %69, align 8
  %71 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %68, i64 0, i32 15, i32 0, i32 1
  %72 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %71, align 8
  %73 = icmp eq %"class.std::__1::unique_ptr.28"* %70, %72
  br i1 %73, label %86, label %74

74:                                               ; preds = %65, %74
  %75 = phi i32 [ %81, %74 ], [ 17, %65 ]
  %76 = phi %"class.std::__1::unique_ptr.28"* [ %83, %74 ], [ %70, %65 ]
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %77, align 8
  %79 = tail call i32 @_ZN8spvtools3opt27LocalAccessChainConvertPass24ConvertLocalAccessChainsEPNS0_8FunctionE(%"class.spvtools::opt::LocalAccessChainConvertPass"* %0, %"class.spvtools::opt::Function"* %78)
  %80 = icmp slt i32 %79, %75
  %81 = select i1 %80, i32 %79, i32 %75
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %76, i64 1
  %84 = icmp eq %"class.std::__1::unique_ptr.28"* %83, %72
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %74

86:                                               ; preds = %18, %50, %74, %65, %63
  %87 = phi i32 [ 17, %63 ], [ 17, %65 ], [ %81, %74 ], [ 17, %50 ], [ 17, %18 ]
  ret i32 %87
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt27LocalAccessChainConvertPassC2Ev(%"class.spvtools::opt::LocalAccessChainConvertPass"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0
  tail call void @_ZN8spvtools3opt7MemPassC2Ev(%"class.spvtools::opt::MemPass"* %2) #12
  %3 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt27LocalAccessChainConvertPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 1, i32 0, i32 3
  %6 = bitcast %"class.std::__1::__compressed_pair.929"* %5 to i32*
  %7 = bitcast %"class.std::__1::unordered_set.910"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %6, align 4
  %8 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 2, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.953"* %9 to i32*
  %11 = bitcast %"class.std::__1::unordered_set.932"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %10, align 4
  ret void
}

declare void @_ZN8spvtools3opt7MemPassC2Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt27LocalAccessChainConvertPass7ProcessEv(%"class.spvtools::opt::LocalAccessChainConvertPass"*) unnamed_addr #0 align 2 {
  tail call void @_ZN8spvtools3opt27LocalAccessChainConvertPass10InitializeEv(%"class.spvtools::opt::LocalAccessChainConvertPass"* %0)
  %2 = tail call i32 @_ZN8spvtools3opt27LocalAccessChainConvertPass11ProcessImplEv(%"class.spvtools::opt::LocalAccessChainConvertPass"* %0)
  ret i32 %2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt27LocalAccessChainConvertPassD2Ev(%"class.spvtools::opt::LocalAccessChainConvertPass"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt27LocalAccessChainConvertPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.937"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %1, %18
  %7 = phi %"struct.std::__1::__hash_node_base.937"* [ %9, %18 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %7, i64 2
  %11 = bitcast %"struct.std::__1::__hash_node_base.937"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %6
  %16 = bitcast %"struct.std::__1::__hash_node_base.937"* %10 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %15, %6
  %19 = bitcast %"struct.std::__1::__hash_node_base.937"* %7 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  %20 = icmp eq %"struct.std::__1::__hash_node_base.937"* %9, null
  br i1 %20, label %21, label %6

21:                                               ; preds = %18, %1
  %22 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %22, align 8
  store %"struct.std::__1::__hash_node_base.937"** null, %"struct.std::__1::__hash_node_base.937"*** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base.937"** %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"struct.std::__1::__hash_node_base.937"** %23 to i8*
  tail call void @_ZdlPv(i8* %26) #13
  br label %27

27:                                               ; preds = %21, %25
  %28 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.915"* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %27, %31
  %32 = phi %"struct.std::__1::__hash_node_base.915"* [ %34, %31 ], [ %29, %27 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %32, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %33, align 8
  %35 = bitcast %"struct.std::__1::__hash_node_base.915"* %32 to i8*
  tail call void @_ZdlPv(i8* %35) #13
  %36 = icmp eq %"struct.std::__1::__hash_node_base.915"* %34, null
  br i1 %36, label %37, label %31

37:                                               ; preds = %31, %27
  %38 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.915"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.915"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0
  tail call void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"* %44) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt27LocalAccessChainConvertPassD0Ev(%"class.spvtools::opt::LocalAccessChainConvertPass"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt27LocalAccessChainConvertPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.937"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %1, %18
  %7 = phi %"struct.std::__1::__hash_node_base.937"* [ %9, %18 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %7, i64 2
  %11 = bitcast %"struct.std::__1::__hash_node_base.937"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %6
  %16 = bitcast %"struct.std::__1::__hash_node_base.937"* %10 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %15, %6
  %19 = bitcast %"struct.std::__1::__hash_node_base.937"* %7 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  %20 = icmp eq %"struct.std::__1::__hash_node_base.937"* %9, null
  br i1 %20, label %21, label %6

21:                                               ; preds = %18, %1
  %22 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %22, align 8
  store %"struct.std::__1::__hash_node_base.937"** null, %"struct.std::__1::__hash_node_base.937"*** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base.937"** %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"struct.std::__1::__hash_node_base.937"** %23 to i8*
  tail call void @_ZdlPv(i8* %26) #13
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.915"* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %27, %31
  %32 = phi %"struct.std::__1::__hash_node_base.915"* [ %34, %31 ], [ %29, %27 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %32, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %33, align 8
  %35 = bitcast %"struct.std::__1::__hash_node_base.915"* %32 to i8*
  tail call void @_ZdlPv(i8* %35) #13
  %36 = icmp eq %"struct.std::__1::__hash_node_base.915"* %34, null
  br i1 %36, label %37, label %31

37:                                               ; preds = %31, %27
  %38 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.915"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.915"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %0, i64 0, i32 0
  tail call void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"* %44) #12
  %45 = bitcast %"class.spvtools::opt::LocalAccessChainConvertPass"* %0 to i8*
  tail call void @_ZdlPv(i8* %45) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt27LocalAccessChainConvertPass4nameEv(%"class.spvtools::opt::LocalAccessChainConvertPass"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt27LocalAccessChainConvertPass20GetPreservedAnalysesEv(%"class.spvtools::opt::LocalAccessChainConvertPass"*) unnamed_addr #0 comdat align 2 {
  ret i32 49153
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #13
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node"* %34) #12
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #13
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

declare i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"*) local_unnamed_addr #3

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #13
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #13
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPKjEE11__call_implINS0_20__default_alloc_funcIZNK8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS3_EEEEUlS3_E_S4_EEEEbPKNS0_16__policy_storageES3_(%"union.std::__1::__function::__policy_storage"*, i32*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.959"**
  %4 = load %"class.std::__1::function.959"*, %"class.std::__1::function.959"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.959", %"class.std::__1::function.959"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, i32*)*, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.959", %"class.std::__1::function.959"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, i32* %1) #12
  ret i1 true
}

declare void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"*, %"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.130"* %6, null
  br i1 %7, label %44, label %8

8:                                                ; preds = %4, %41
  %9 = phi %"struct.std::__1::__hash_node_base.130"* [ %11, %41 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 9
  %13 = bitcast %"struct.std::__1::__hash_node_base.130"* %12 to %"class.spvtools::opt::Instruction"***
  %14 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %13, align 8
  %15 = icmp eq %"class.spvtools::opt::Instruction"** %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint %"class.spvtools::opt::Instruction"** %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 10
  %19 = bitcast %"struct.std::__1::__hash_node_base.130"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %14 to i8*
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %16, %8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 6
  %23 = bitcast %"struct.std::__1::__hash_node_base.130"* %22 to %"class.spvtools::opt::Instruction"***
  %24 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::Instruction"** %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = ptrtoint %"class.spvtools::opt::Instruction"** %24 to i64
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 7
  %29 = bitcast %"struct.std::__1::__hash_node_base.130"* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.spvtools::opt::Instruction"** %24 to i8*
  tail call void @_ZdlPv(i8* %30) #13
  br label %31

31:                                               ; preds = %26, %21
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 3
  %33 = bitcast %"struct.std::__1::__hash_node_base.130"* %32 to %"class.spvtools::opt::Instruction"***
  %34 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %33, align 8
  %35 = icmp eq %"class.spvtools::opt::Instruction"** %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = ptrtoint %"class.spvtools::opt::Instruction"** %34 to i64
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 4
  %39 = bitcast %"struct.std::__1::__hash_node_base.130"* %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.spvtools::opt::Instruction"** %34 to i8*
  tail call void @_ZdlPv(i8* %40) #13
  br label %41

41:                                               ; preds = %36, %31
  %42 = bitcast %"struct.std::__1::__hash_node_base.130"* %9 to i8*
  tail call void @_ZdlPv(i8* %42) #13
  %43 = icmp eq %"struct.std::__1::__hash_node_base.130"* %11, null
  br i1 %43, label %44, label %8

44:                                               ; preds = %41, %4
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.130"**, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.130"** null, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.130"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.130"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DecorationManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

declare void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.601"* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1, %26
  %6 = phi %"struct.std::__1::__hash_node_base.601"* [ %8, %26 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %6, i64 5
  %10 = bitcast %"struct.std::__1::__hash_node_base.601"* %9 to %"struct.std::__1::__hash_node_base.1027"**
  %11 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %10, align 8
  %12 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %5, %13
  %14 = phi %"struct.std::__1::__hash_node_base.1027"* [ %16, %13 ], [ %11, %5 ]
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %14, i64 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %15, align 8
  %17 = bitcast %"struct.std::__1::__hash_node_base.1027"* %14 to i8*
  tail call void @_ZdlPv(i8* %17) #13
  %18 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %16, null
  br i1 %18, label %19, label %13

19:                                               ; preds = %13, %5
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %6, i64 3
  %21 = bitcast %"struct.std::__1::__hash_node_base.601"* %20 to %"struct.std::__1::__hash_node_base.1027"***
  %22 = load %"struct.std::__1::__hash_node_base.1027"**, %"struct.std::__1::__hash_node_base.1027"*** %21, align 8
  store %"struct.std::__1::__hash_node_base.1027"** null, %"struct.std::__1::__hash_node_base.1027"*** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.1027"** %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = bitcast %"struct.std::__1::__hash_node_base.1027"** %22 to i8*
  tail call void @_ZdlPv(i8* %25) #13
  br label %26

26:                                               ; preds = %24, %19
  %27 = bitcast %"struct.std::__1::__hash_node_base.601"* %6 to i8*
  tail call void @_ZdlPv(i8* %27) #13
  %28 = icmp eq %"struct.std::__1::__hash_node_base.601"* %8, null
  br i1 %28, label %29, label %5

29:                                               ; preds = %26, %1
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %30, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.601"** %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"struct.std::__1::__hash_node_base.601"** %31 to i8*
  tail call void @_ZdlPv(i8* %34) #13
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.601"* %37, null
  br i1 %38, label %63, label %39

39:                                               ; preds = %35, %60
  %40 = phi %"struct.std::__1::__hash_node_base.601"* [ %42, %60 ], [ %37, %35 ]
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %40, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %40, i64 5
  %44 = bitcast %"struct.std::__1::__hash_node_base.601"* %43 to %"struct.std::__1::__hash_node_base.1027"**
  %45 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %39, %47
  %48 = phi %"struct.std::__1::__hash_node_base.1027"* [ %50, %47 ], [ %45, %39 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %48, i64 0, i32 0
  %50 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %49, align 8
  %51 = bitcast %"struct.std::__1::__hash_node_base.1027"* %48 to i8*
  tail call void @_ZdlPv(i8* %51) #13
  %52 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %50, null
  br i1 %52, label %53, label %47

53:                                               ; preds = %47, %39
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %40, i64 3
  %55 = bitcast %"struct.std::__1::__hash_node_base.601"* %54 to %"struct.std::__1::__hash_node_base.1027"***
  %56 = load %"struct.std::__1::__hash_node_base.1027"**, %"struct.std::__1::__hash_node_base.1027"*** %55, align 8
  store %"struct.std::__1::__hash_node_base.1027"** null, %"struct.std::__1::__hash_node_base.1027"*** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.1027"** %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %53
  %59 = bitcast %"struct.std::__1::__hash_node_base.1027"** %56 to i8*
  tail call void @_ZdlPv(i8* %59) #13
  br label %60

60:                                               ; preds = %58, %53
  %61 = bitcast %"struct.std::__1::__hash_node_base.601"* %40 to i8*
  tail call void @_ZdlPv(i8* %61) #13
  %62 = icmp eq %"struct.std::__1::__hash_node_base.601"* %42, null
  br i1 %62, label %63, label %39

63:                                               ; preds = %60, %35
  %64 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %64, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base.601"** %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = bitcast %"struct.std::__1::__hash_node_base.601"** %65 to i8*
  tail call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %63, %67
  %70 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.601"* %71, null
  br i1 %72, label %97, label %73

73:                                               ; preds = %69, %94
  %74 = phi %"struct.std::__1::__hash_node_base.601"* [ %76, %94 ], [ %71, %69 ]
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %74, i64 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %74, i64 5
  %78 = bitcast %"struct.std::__1::__hash_node_base.601"* %77 to %"struct.std::__1::__hash_node_base.1027"**
  %79 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %73, %81
  %82 = phi %"struct.std::__1::__hash_node_base.1027"* [ %84, %81 ], [ %79, %73 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %82, i64 0, i32 0
  %84 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %83, align 8
  %85 = bitcast %"struct.std::__1::__hash_node_base.1027"* %82 to i8*
  tail call void @_ZdlPv(i8* %85) #13
  %86 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %84, null
  br i1 %86, label %87, label %81

87:                                               ; preds = %81, %73
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %74, i64 3
  %89 = bitcast %"struct.std::__1::__hash_node_base.601"* %88 to %"struct.std::__1::__hash_node_base.1027"***
  %90 = load %"struct.std::__1::__hash_node_base.1027"**, %"struct.std::__1::__hash_node_base.1027"*** %89, align 8
  store %"struct.std::__1::__hash_node_base.1027"** null, %"struct.std::__1::__hash_node_base.1027"*** %89, align 8
  %91 = icmp eq %"struct.std::__1::__hash_node_base.1027"** %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %87
  %93 = bitcast %"struct.std::__1::__hash_node_base.1027"** %90 to i8*
  tail call void @_ZdlPv(i8* %93) #13
  br label %94

94:                                               ; preds = %92, %87
  %95 = bitcast %"struct.std::__1::__hash_node_base.601"* %74 to i8*
  tail call void @_ZdlPv(i8* %95) #13
  %96 = icmp eq %"struct.std::__1::__hash_node_base.601"* %76, null
  br i1 %96, label %97, label %73

97:                                               ; preds = %94, %69
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.601"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.601"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #13
  %112 = icmp eq %"struct.std::__1::__hash_node_base"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %114, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #13
  br label %119

119:                                              ; preds = %113, %117
  %120 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %121 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base"* %121, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %119, %123
  %124 = phi %"struct.std::__1::__hash_node_base"* [ %126, %123 ], [ %121, %119 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %124, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i8*
  tail call void @_ZdlPv(i8* %127) #13
  %128 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %128, label %129, label %123

129:                                              ; preds = %123, %119
  %130 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base"** %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %129
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %131 to i8*
  tail call void @_ZdlPv(i8* %134) #13
  br label %135

135:                                              ; preds = %129, %133
  ret void
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3

declare zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32) local_unnamed_addr #3

declare void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"*, %"class.std::__1::__tree_node.1046"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1046"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1046"* %1 to %"class.std::__1::__tree_node.1046"**
  %6 = load %"class.std::__1::__tree_node.1046"*, %"class.std::__1::__tree_node.1046"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %0, %"class.std::__1::__tree_node.1046"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1046", %"class.std::__1::__tree_node.1046"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1046"**
  %9 = load %"class.std::__1::__tree_node.1046"*, %"class.std::__1::__tree_node.1046"** %8, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %0, %"class.std::__1::__tree_node.1046"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node.1046"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt7MemPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.254"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.254"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.254"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  %11 = icmp eq %"struct.std::__1::__hash_node_base.254"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.254"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.254"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.915"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"struct.std::__1::__hash_node_base.915"* [ %25, %22 ], [ %20, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %23, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base.915"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #13
  %27 = icmp eq %"struct.std::__1::__hash_node_base.915"* %25, null
  br i1 %27, label %28, label %22

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.915"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.915"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #13
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.915"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %34, %38
  %39 = phi %"struct.std::__1::__hash_node_base.915"* [ %41, %38 ], [ %36, %34 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base.915"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #13
  %43 = icmp eq %"struct.std::__1::__hash_node_base.915"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %34
  %45 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.915"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.915"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %44, %48
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %52 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %52, i64 0, i32 1
  %54 = load void (i8*)*, void (i8*)** %53, align 8
  %55 = icmp eq void (i8*)* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  tail call void %54(i8* %58) #12
  br label %59

59:                                               ; preds = %50, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7MemPassD0Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt11InstructionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.31"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.21"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.31"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.31"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.21"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.21"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.21"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.21"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.21"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.21"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.21"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.21"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.21"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.spvtools::opt::Instruction"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.21"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.21"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.21"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.21"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !14

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.21"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.21"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.21"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.21"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.21"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.21"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.21"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.21"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.21"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.21"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.21"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.21"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.21"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.21"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.21"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.21"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.21"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.21"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.21"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.21"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.21"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.21"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.21"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.21"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.21"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.21"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.21"*
  %138 = icmp eq %"class.std::__1::unique_ptr.21"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.21"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %142, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %142, align 8
  %144 = icmp eq %"class.spvtools::opt::Instruction"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.spvtools::opt::Instruction"* %143 to void (%"class.spvtools::opt::Instruction"*)***
  %147 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, i64 1
  %149 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %148, align 8
  tail call void %149(%"class.spvtools::opt::Instruction"* nonnull %143) #12
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.21"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #13
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !8
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.915"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.915"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.915"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.915"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.915"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #13, !noalias !15
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !15
  store i32 %58, i32* %57, align 4, !noalias !15
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !15
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.915"**
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %61, align 8, !noalias !15
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !8
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #12
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #12, !range !8
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.915"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.915"* %104, %"struct.std::__1::__hash_node_base.915"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.915"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.915"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #12, !range !8
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.915"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.915"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.915"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } undef, %"struct.std::__1::__hash_node_base.915"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.915"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !8
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !8
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.911"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.915"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.915"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !18

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.915"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.915"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !8
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.915"* %36, %"struct.std::__1::__hash_node_base.915"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.915"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.915"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.915"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.915"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.915"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.915"* %82, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.915"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.915"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.915"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.915"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.915"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.915"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.915"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.915"* %80, %"struct.std::__1::__hash_node_base.915"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.915"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.915"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.915"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.915"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.911"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.1058", align 8
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %65, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !8
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.915"* %24, null
  br i1 %25, label %65, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.915"* %28, null
  br i1 %29, label %65, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base.915"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.915"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %65

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.915"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.915"* %55, null
  br i1 %56, label %65, label %32

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::unique_ptr.1058"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58)
  call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE(%"class.std::__1::unique_ptr.1058"* nonnull sret %3, %"class.std::__1::__hash_table.911"* %0, %"struct.std::__1::__hash_node_base.915"* nonnull %33) #12
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.1058", %"class.std::__1::unique_ptr.1058"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node.1048"*, %"struct.std::__1::__hash_node.1048"** %59, align 8
  store %"struct.std::__1::__hash_node.1048"* null, %"struct.std::__1::__hash_node.1048"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node.1048"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = bitcast %"struct.std::__1::__hash_node.1048"* %60 to i8*
  call void @_ZdlPv(i8* %63) #13
  br label %64

64:                                               ; preds = %57, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58)
  br label %65

65:                                               ; preds = %45, %53, %26, %2, %19, %64
  %66 = phi i64 [ 1, %64 ], [ 0, %19 ], [ 0, %2 ], [ 0, %26 ], [ 0, %53 ], [ 0, %45 ]
  ret i64 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE(%"class.std::__1::unique_ptr.1058"* noalias sret, %"class.std::__1::__hash_table.911"*, %"struct.std::__1::__hash_node_base.915"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.915"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #12, !range !8
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.915"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.915"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.922"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.915"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.915"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.915"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.915"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.915"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.915"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.915"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.915"* %25, %"struct.std::__1::__hash_node_base.915"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.915"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.915"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.915"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1058"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1058", %"class.std::__1::unique_ptr.1058"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.925"** %98 to %"class.std::__1::__compressed_pair.922"**
  store %"class.std::__1::__compressed_pair.922"* %30, %"class.std::__1::__compressed_pair.922"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1058", %"class.std::__1::unique_ptr.1058"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.3"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"* nonnull %8, i32* %15, i32* %17) #12
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #12
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #14
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #13
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #12
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #13
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #13
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #12
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #12
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  %55 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #12
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #14
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #14
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #13
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #12
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #12
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #12
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #13
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #13
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPKjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt27LocalAccessChainConvertPass22AppendConstantOperandsEPKNS9_11InstructionEPNS_6vectorINS9_7OperandENS_9allocatorISF_EEEEE3$_0S4_EEEEvPKNS0_16__policy_storageES3_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = alloca %"struct.spvtools::opt::Operand", align 8
  %4 = alloca %"class.spvtools::utils::SmallVector", align 8
  %5 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1069"**
  %6 = load %"class.std::__1::__function::__default_alloc_func.1069"*, %"class.std::__1::__function::__default_alloc_func.1069"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1069", %"class.std::__1::__function::__default_alloc_func.1069"* %6, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %140, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1069", %"class.std::__1::__function::__default_alloc_func.1069"* %6, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::LocalAccessChainConvertPass"** %12 to %"class.spvtools::opt::Pass"**
  %14 = load %"class.spvtools::opt::Pass"*, %"class.spvtools::opt::Pass"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %14, i64 0, i32 2
  %16 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 11
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %45

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %22, align 8
  %24 = tail call i8* @_Znwm(i64 104) #13
  %25 = bitcast i8* %24 to %"class.spvtools::opt::analysis::DefUseManager"*
  %26 = getelementptr inbounds i8, i8* %24, i64 32
  %27 = bitcast i8* %26 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %24, i64 48
  %29 = getelementptr inbounds i8, i8* %24, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #12
  %30 = bitcast i8* %29 to i8**
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds i8, i8* %24, i64 64
  %32 = getelementptr inbounds i8, i8* %24, i64 96
  %33 = bitcast i8* %32 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %33, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %25, %"class.spvtools::opt::Module"* %23) #12
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 6
  %35 = ptrtoint i8* %24 to i64
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %34, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %36, align 8
  %38 = bitcast %"class.std::__1::unique_ptr.62"* %34 to i64*
  store i64 %35, i64* %38, align 8
  %39 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %37, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %21
  %41 = bitcast %"class.std::__1::unique_ptr.62"* %34 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %41, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %37) #12
  br label %42

42:                                               ; preds = %40, %21
  %43 = load i32, i32* %17, align 8
  %44 = or i32 %43, 1
  store i32 %44, i32* %17, align 8
  br label %45

45:                                               ; preds = %42, %11
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 6, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %46, align 8
  %48 = load i32, i32* %1, align 4
  %49 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %47, i32 %48) #12
  %50 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 3
  %51 = load i8, i8* %50, align 4, !range !2
  %52 = icmp eq i8 %51, 0
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 4
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  %56 = select i1 %55, i32 1, i32 2
  %57 = xor i1 %55, true
  %58 = zext i1 %57 to i32
  %59 = select i1 %52, i32 %58, i32 %56
  %60 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %49, i32 %59) #12
  %61 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1069", %"class.std::__1::__function::__default_alloc_func.1069"* %6, i64 0, i32 0, i32 1
  %62 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %61, align 8
  %63 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %62, align 8
  %64 = bitcast %"struct.spvtools::opt::Operand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %64) #12
  %65 = bitcast %"class.spvtools::utils::SmallVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %65) #12
  %66 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 1
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 2
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 3, i64 0
  %70 = bitcast i32** %68 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %69, %"struct.std::__1::aligned_storage<4, 4>::type"** %70, align 8
  %71 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4
  %72 = bitcast %"class.std::__1::unique_ptr.0"* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %69 to i32*
  store i64 1, i64* %67, align 8
  store i32 %60, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 0
  store i32 6, i32* %74, align 8
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1
  %76 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %75, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 1
  store i64 0, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 2
  %79 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 3, i64 0
  %80 = bitcast i32** %78 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %79, %"struct.std::__1::aligned_storage<4, 4>::type"** %80, align 8
  %81 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 4
  %82 = bitcast %"class.std::__1::unique_ptr.0"* %81 to i64*
  store i64 0, i64* %82, align 8
  %83 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %75, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %4) #12
  %84 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %63, i64 0, i32 0, i32 1
  %85 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %63, i64 0, i32 0, i32 2, i32 0, i32 0
  %87 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %86, align 8
  %88 = icmp ult %"struct.spvtools::opt::Operand"* %85, %87
  br i1 %88, label %89, label %104

89:                                               ; preds = %45
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 0
  %91 = load i32, i32* %74, align 8
  store i32 %91, i32* %90, align 8
  %92 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 1
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %92, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %93, align 8
  %94 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 1, i32 1
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 1, i32 2
  %96 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 1, i32 3, i64 0
  %97 = bitcast i32** %95 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %96, %"struct.std::__1::aligned_storage<4, 4>::type"** %97, align 8
  %98 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 1, i32 4
  %99 = bitcast %"class.std::__1::unique_ptr.0"* %98 to i64*
  store i64 0, i64* %99, align 8
  %100 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %92, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %75) #12
  %101 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 1
  %102 = ptrtoint %"struct.spvtools::opt::Operand"* %101 to i64
  %103 = bitcast %"struct.spvtools::opt::Operand"** %84 to i64*
  store i64 %102, i64* %103, align 8
  br label %105

104:                                              ; preds = %45
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %63, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %3) #12
  br label %105

105:                                              ; preds = %104, %89
  %106 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %106, align 8
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %108 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %107, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %107, align 8
  %109 = icmp eq %"class.std::__1::vector.3"* %108, null
  br i1 %109, label %121, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %108, i64 0, i32 0, i32 0
  %112 = load i32*, i32** %111, align 8
  %113 = icmp eq i32* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %110
  %115 = ptrtoint i32* %112 to i64
  %116 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %108, i64 0, i32 0, i32 1
  %117 = bitcast i32** %116 to i64*
  store i64 %115, i64* %117, align 8
  %118 = bitcast i32* %112 to i8*
  call void @_ZdlPv(i8* %118) #13
  br label %119

119:                                              ; preds = %114, %110
  %120 = bitcast %"class.std::__1::vector.3"* %108 to i8*
  call void @_ZdlPv(i8* %120) #13
  br label %121

121:                                              ; preds = %119, %105
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %122 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %123 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %122, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %122, align 8
  %124 = icmp eq %"class.std::__1::vector.3"* %123, null
  br i1 %124, label %136, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %123, i64 0, i32 0, i32 0
  %127 = load i32*, i32** %126, align 8
  %128 = icmp eq i32* %127, null
  br i1 %128, label %134, label %129

129:                                              ; preds = %125
  %130 = ptrtoint i32* %127 to i64
  %131 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %123, i64 0, i32 0, i32 1
  %132 = bitcast i32** %131 to i64*
  store i64 %130, i64* %132, align 8
  %133 = bitcast i32* %127 to i8*
  call void @_ZdlPv(i8* %133) #13
  br label %134

134:                                              ; preds = %129, %125
  %135 = bitcast %"class.std::__1::vector.3"* %123 to i8*
  call void @_ZdlPv(i8* %135) #13
  br label %136

136:                                              ; preds = %134, %121
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %65) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %64) #12
  %137 = load i32*, i32** %7, align 8
  %138 = load i32, i32* %137, align 4
  %139 = add i32 %138, 1
  br label %140

140:                                              ; preds = %2, %136
  %141 = phi i32 [ 1, %2 ], [ %139, %136 ]
  %142 = phi i32* [ %8, %2 ], [ %137, %136 ]
  store i32 %141, i32* %142, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #12
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #12
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #13
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #13
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt27LocalAccessChainConvertPass22AppendConstantOperandsEPKNS5_11InstructionEPNS_6vectorINS5_7OperandENS_9allocatorISB_EEEEE3$_0FvPKjEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #13, !noalias !19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #12
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt27LocalAccessChainConvertPass22AppendConstantOperandsEPKNS5_11InstructionEPNS_6vectorINS5_7OperandENS_9allocatorISB_EEEEE3$_0FvPKjEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRS3_EEEvDpOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #12
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #12
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #13
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #13
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPKjEE11__call_implINS0_20__default_alloc_funcIZNK8spvtools3opt27LocalAccessChainConvertPass26IsConstantIndexAccessChainEPKNS9_11InstructionEE3$_1S4_EEEEbPKNS0_16__policy_storageES3_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i32**
  %4 = load i32*, i32** %3, align 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %53, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %9 = bitcast [8 x i8]* %8 to %"class.spvtools::opt::Pass"**
  %10 = load %"class.spvtools::opt::Pass"*, %"class.spvtools::opt::Pass"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %10, i64 0, i32 2
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %41

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %18, align 8
  %20 = tail call i8* @_Znwm(i64 104) #13
  %21 = bitcast i8* %20 to %"class.spvtools::opt::analysis::DefUseManager"*
  %22 = getelementptr inbounds i8, i8* %20, i64 32
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %20, i64 48
  %25 = getelementptr inbounds i8, i8* %20, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #12
  %26 = bitcast i8* %25 to i8**
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %20, i64 64
  %28 = getelementptr inbounds i8, i8* %20, i64 96
  %29 = bitcast i8* %28 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %29, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %21, %"class.spvtools::opt::Module"* %19) #12
  %30 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 6
  %31 = ptrtoint i8* %20 to i64
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %30, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %32, align 8
  %34 = bitcast %"class.std::__1::unique_ptr.62"* %30 to i64*
  store i64 %31, i64* %34, align 8
  %35 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %33, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %17
  %37 = bitcast %"class.std::__1::unique_ptr.62"* %30 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %37, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %33) #12
  br label %38

38:                                               ; preds = %36, %17
  %39 = load i32, i32* %13, align 8
  %40 = or i32 %39, 1
  store i32 %40, i32* %13, align 8
  br label %41

41:                                               ; preds = %38, %7
  %42 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 6, i32 0, i32 0, i32 0
  %43 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %42, align 8
  %44 = load i32, i32* %1, align 4
  %45 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %43, i32 %44) #12
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 2
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 43
  br i1 %48, label %49, label %56

49:                                               ; preds = %41
  %50 = load i32*, i32** %3, align 8
  %51 = load i32, i32* %50, align 4
  %52 = add i32 %51, 1
  br label %53

53:                                               ; preds = %49, %2
  %54 = phi i32 [ %52, %49 ], [ 1, %2 ]
  %55 = phi i32* [ %50, %49 ], [ %4, %2 ]
  store i32 %54, i32* %55, align 4
  br label %56

56:                                               ; preds = %41, %53
  %57 = phi i1 [ true, %53 ], [ false, %41 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_27LocalAccessChainConvertPass20HasOnlySupportedRefsEjE3$_2S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::LocalAccessChainConvertPass"**
  %4 = load %"class.spvtools::opt::LocalAccessChainConvertPass"*, %"class.spvtools::opt::LocalAccessChainConvertPass"** %3, align 8
  %5 = tail call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %1) #12
  %6 = icmp eq i32 %5, 29
  br i1 %6, label %31, label %7

7:                                                ; preds = %2
  %8 = tail call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %1) #12
  %9 = icmp eq i32 %8, 28
  br i1 %9, label %31, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::LocalAccessChainConvertPass", %"class.spvtools::opt::LocalAccessChainConvertPass"* %4, i64 0, i32 0
  %14 = tail call zeroext i1 @_ZNK8spvtools3opt7MemPass19IsNonPtrAccessChainE6SpvOp_(%"class.spvtools::opt::MemPass"* %13, i32 %12) #12
  %15 = icmp eq i32 %12, 83
  %16 = or i1 %14, %15
  br i1 %16, label %17, label %29

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %23 = load i8, i8* %22, align 4, !range !2
  %24 = zext i8 %23 to i32
  %25 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %24) #12
  br label %26

26:                                               ; preds = %21, %17
  %27 = phi i32 [ %25, %21 ], [ 0, %17 ]
  %28 = tail call zeroext i1 @_ZN8spvtools3opt27LocalAccessChainConvertPass20HasOnlySupportedRefsEj(%"class.spvtools::opt::LocalAccessChainConvertPass"* %4, i32 %27) #12
  br i1 %28, label %30, label %31

29:                                               ; preds = %10
  switch i32 %12, label %31 [
    i32 62, label %30
    i32 61, label %30
    i32 5, label %30
    i32 332, label %30
    i32 71, label %30
  ]

30:                                               ; preds = %29, %29, %29, %29, %29, %26
  br label %31

31:                                               ; preds = %2, %7, %26, %29, %30
  %32 = phi i1 [ true, %7 ], [ true, %2 ], [ true, %30 ], [ false, %26 ], [ false, %29 ]
  ret i1 %32
}

declare i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_27LocalAccessChainConvertPass24ConvertLocalAccessChainsEPNS3_8FunctionEE3$_3S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::vector.987"**
  %4 = load %"class.std::__1::vector.987"*, %"class.std::__1::vector.987"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.987", %"class.std::__1::vector.987"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.987", %"class.std::__1::vector.987"* %4, i64 0, i32 0, i32 1
  %8 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %7, align 8
  %9 = icmp eq %"class.spvtools::opt::Instruction"** %6, %8
  %10 = ptrtoint %"class.spvtools::opt::Instruction"** %8 to i64
  br i1 %9, label %18, label %11

11:                                               ; preds = %2, %15
  %12 = phi %"class.spvtools::opt::Instruction"** [ %16, %15 ], [ %6, %2 ]
  %13 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %12, align 8
  %14 = icmp eq %"class.spvtools::opt::Instruction"* %13, %1
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %12, i64 1
  %17 = icmp eq %"class.spvtools::opt::Instruction"** %16, %8
  br i1 %17, label %32, label %11

18:                                               ; preds = %11, %2
  %19 = phi %"class.spvtools::opt::Instruction"** [ %6, %2 ], [ %12, %11 ]
  %20 = icmp eq %"class.spvtools::opt::Instruction"** %19, %8
  br i1 %20, label %32, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %19, i64 1
  %23 = ptrtoint %"class.spvtools::opt::Instruction"** %22 to i64
  %24 = sub i64 %10, %23
  %25 = ashr exact i64 %24, 3
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.spvtools::opt::Instruction"** %19 to i8*
  %29 = bitcast %"class.spvtools::opt::Instruction"** %22 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 %24, i1 false) #12
  br label %30

30:                                               ; preds = %27, %21
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %19, i64 %25
  store %"class.spvtools::opt::Instruction"** %31, %"class.spvtools::opt::Instruction"*** %7, align 8
  br label %32

32:                                               ; preds = %15, %18, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.937"* @_ZNKSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.933"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #12
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #12
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #12, !range !8
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.937"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.937"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base.937"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base.937"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %17, %56
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.937"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base.937"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base.937"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base.937"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #12
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.937"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base.937"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base.937"* %112
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #4 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.937"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.933"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #12
  %18 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %15, i64 %16) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #12
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %112, label %22

22:                                               ; preds = %3
  %23 = call i64 @llvm.ctpop.i64(i64 %20) #12, !range !8
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.937"* %37, null
  br i1 %38, label %112, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.937"* %41, null
  br i1 %42, label %112, label %43

43:                                               ; preds = %39
  %44 = add i64 %20, -1
  %45 = load i8, i8* %6, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i64, i64* %11, align 8
  %48 = zext i8 %45 to i64
  %49 = select i1 %46, i64 %47, i64 %48
  %50 = load i8*, i8** %9, align 8
  %51 = select i1 %46, i8* %50, i8* %13
  %52 = icmp eq i64 %49, 0
  br label %53

53:                                               ; preds = %43, %96
  %54 = phi %"struct.std::__1::__hash_node_base.937"* [ %41, %43 ], [ %98, %96 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %54, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base.937"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %18
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  br i1 %24, label %62, label %60

60:                                               ; preds = %59
  %61 = and i64 %57, %44
  br label %66

62:                                               ; preds = %59
  %63 = icmp ult i64 %57, %20
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = urem i64 %57, %20
  br label %66

66:                                               ; preds = %60, %62, %64
  %67 = phi i64 [ %61, %60 ], [ %65, %64 ], [ %57, %62 ]
  %68 = icmp eq i64 %67, %33
  br i1 %68, label %69, label %112

69:                                               ; preds = %53, %66
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %54, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base.937"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %54, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.937"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = zext i8 %73 to i64
  %79 = select i1 %74, i64 %77, i64 %78
  %80 = icmp eq i64 %79, %49
  br i1 %80, label %81, label %96

81:                                               ; preds = %69
  %82 = bitcast %"struct.std::__1::__hash_node_base.937"* %70 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast %"struct.std::__1::__hash_node_base.937"* %70 to i8*
  %85 = select i1 %74, i8* %83, i8* %84
  br i1 %74, label %92, label %86

86:                                               ; preds = %81
  br i1 %52, label %210, label %87

87:                                               ; preds = %86
  %88 = ptrtoint i8* %83 to i64
  %89 = trunc i64 %88 to i8
  %90 = load i8, i8* %51, align 1
  %91 = icmp eq i8 %90, %89
  br i1 %91, label %100, label %96

92:                                               ; preds = %81
  br i1 %52, label %210, label %93

93:                                               ; preds = %92
  %94 = call i32 @bcmp(i8* %85, i8* %51, i64 %49) #12
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %210, label %96

96:                                               ; preds = %107, %69, %87, %93
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %54, i64 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.937"* %98, null
  br i1 %99, label %112, label %53

100:                                              ; preds = %87, %107
  %101 = phi i64 [ %104, %107 ], [ %78, %87 ]
  %102 = phi i8* [ %105, %107 ], [ %84, %87 ]
  %103 = phi i8* [ %108, %107 ], [ %51, %87 ]
  %104 = add i64 %101, -1
  %105 = getelementptr inbounds i8, i8* %102, i64 1
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %210, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds i8, i8* %103, i64 1
  %109 = load i8, i8* %105, align 1
  %110 = load i8, i8* %108, align 1
  %111 = icmp eq i8 %109, %110
  br i1 %111, label %100, label %96

112:                                              ; preds = %66, %96, %39, %32, %3
  %113 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %39 ], [ %33, %96 ], [ %33, %66 ]
  %114 = call i8* @_Znwm(i64 40) #13, !noalias !24
  %115 = getelementptr inbounds i8, i8* %114, i64 16
  %116 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1, !noalias !24
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %112
  %121 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %121, i64 24, i1 false) #12, !noalias !24
  br label %128

122:                                              ; preds = %112
  %123 = bitcast i8* %115 to %"class.std::__1::basic_string"*
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8, !noalias !24
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8, !noalias !24
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %123, i8* %125, i64 %127) #12, !noalias !24
  br label %128

128:                                              ; preds = %120, %122
  %129 = getelementptr inbounds i8, i8* %114, i64 8
  %130 = bitcast i8* %129 to i64*
  store i64 %18, i64* %130, align 8, !noalias !24
  %131 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base.937"**
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %131, align 8, !noalias !24
  %132 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 2, i32 0, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  %135 = uitofp i64 %134 to float
  %136 = uitofp i64 %20 to float
  %137 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 3, i32 0, i32 0
  %138 = load float, float* %137, align 4
  %139 = fmul float %138, %136
  %140 = fcmp olt float %139, %135
  %141 = or i1 %21, %140
  br i1 %141, label %142, label %165

142:                                              ; preds = %128
  %143 = shl i64 %20, 1
  %144 = icmp ult i64 %20, 3
  %145 = call i64 @llvm.ctpop.i64(i64 %20) #12, !range !8
  %146 = icmp ugt i64 %145, 1
  %147 = or i1 %144, %146
  %148 = zext i1 %147 to i64
  %149 = or i64 %143, %148
  %150 = fdiv float %135, %138
  %151 = call float @llvm.ceil.f32(float %150) #12
  %152 = fptoui float %151 to i64
  %153 = icmp ult i64 %149, %152
  %154 = select i1 %153, i64 %152, i64 %149
  call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.933"* %0, i64 %154)
  %155 = load i64, i64* %19, align 8
  %156 = call i64 @llvm.ctpop.i64(i64 %155) #12, !range !8
  %157 = icmp ugt i64 %156, 1
  br i1 %157, label %161, label %158

158:                                              ; preds = %142
  %159 = add i64 %155, -1
  %160 = and i64 %159, %18
  br label %165

161:                                              ; preds = %142
  %162 = icmp ult i64 %18, %155
  br i1 %162, label %165, label %163

163:                                              ; preds = %161
  %164 = urem i64 %18, %155
  br label %165

165:                                              ; preds = %163, %161, %158, %128
  %166 = phi i64 [ %20, %128 ], [ %155, %158 ], [ %155, %161 ], [ %155, %163 ]
  %167 = phi i64 [ %113, %128 ], [ %160, %158 ], [ %18, %161 ], [ %164, %163 ]
  %168 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %169 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %168, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %169, i64 %167
  %171 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %170, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base.937"* %171, null
  br i1 %172, label %173, label %199

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 1, i32 0, i32 0
  %175 = bitcast %"struct.std::__1::__hash_node_base.937"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast i8* %114 to i64*
  store i64 %176, i64* %177, align 8
  %178 = bitcast %"struct.std::__1::__hash_node_base.937"* %174 to i8**
  store i8* %114, i8** %178, align 8
  store %"struct.std::__1::__hash_node_base.937"* %174, %"struct.std::__1::__hash_node_base.937"** %170, align 8
  %179 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %131, align 8
  %180 = icmp eq %"struct.std::__1::__hash_node_base.937"* %179, null
  br i1 %180, label %206, label %181

181:                                              ; preds = %173
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %179, i64 1
  %183 = bitcast %"struct.std::__1::__hash_node_base.937"* %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = call i64 @llvm.ctpop.i64(i64 %166) #12, !range !8
  %186 = icmp ugt i64 %185, 1
  br i1 %186, label %190, label %187

187:                                              ; preds = %181
  %188 = add i64 %166, -1
  %189 = and i64 %184, %188
  br label %194

190:                                              ; preds = %181
  %191 = icmp ult i64 %184, %166
  br i1 %191, label %194, label %192

192:                                              ; preds = %190
  %193 = urem i64 %184, %166
  br label %194

194:                                              ; preds = %187, %190, %192
  %195 = phi i64 [ %189, %187 ], [ %193, %192 ], [ %184, %190 ]
  %196 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %168, align 8
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %196, i64 %195
  %198 = bitcast %"struct.std::__1::__hash_node_base.937"** %197 to i8**
  br label %204

199:                                              ; preds = %165
  %200 = bitcast %"struct.std::__1::__hash_node_base.937"* %171 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast i8* %114 to i64*
  store i64 %201, i64* %202, align 8
  %203 = bitcast %"struct.std::__1::__hash_node_base.937"* %171 to i8**
  br label %204

204:                                              ; preds = %194, %199
  %205 = phi i8** [ %203, %199 ], [ %198, %194 ]
  store i8* %114, i8** %205, align 8
  br label %206

206:                                              ; preds = %204, %173
  %207 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base.937"*
  %208 = load i64, i64* %132, align 8
  %209 = add i64 %208, 1
  store i64 %209, i64* %132, align 8
  br label %210

210:                                              ; preds = %86, %92, %93, %100, %206
  %211 = phi i8 [ 1, %206 ], [ 0, %100 ], [ 0, %93 ], [ 0, %92 ], [ 0, %86 ]
  %212 = phi %"struct.std::__1::__hash_node_base.937"* [ %207, %206 ], [ %54, %100 ], [ %54, %93 ], [ %54, %92 ], [ %54, %86 ]
  %213 = insertvalue { %"struct.std::__1::__hash_node_base.937"*, i8 } undef, %"struct.std::__1::__hash_node_base.937"* %212, 0
  %214 = insertvalue { %"struct.std::__1::__hash_node_base.937"*, i8 } %213, i8 %211, 1
  ret { %"struct.std::__1::__hash_node_base.937"*, i8 } %214
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.933"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.933"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !8
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !8
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.933"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.933"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.933"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.937"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.937"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.939", %"class.std::__1::__bucket_list_deallocator.939"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !27

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.937"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.937"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !8
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.937"* %36, %"struct.std::__1::__hash_node_base.937"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.937"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base.937"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base.937"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.937"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.937"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.937"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.937"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base.937"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base.937"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base.937"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.937"* %82, %"struct.std::__1::__hash_node_base.937"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base.937"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base.937"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base.937"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base.937"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base.937"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.937"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #12
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base.937"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base.937"* [ %80, %100 ], [ %121, %154 ], [ %121, %141 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base.937"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base.937"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base.937"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.937"* %80, %"struct.std::__1::__hash_node_base.937"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base.937"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base.937"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table.933", %"class.std::__1::__hash_table.933"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %187, align 8
  store %"struct.std::__1::__hash_node_base.937"** null, %"struct.std::__1::__hash_node_base.937"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base.937"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base.937"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #13
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.939", %"class.std::__1::__bucket_list_deallocator.939"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!6 = distinct !{!6, !7, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt27LocalAccessChainConvertPass22AppendConstantOperandsEPKNS5_11InstructionEPNS_6vectorINS5_7OperandENS_9allocatorISB_EEEEE3$_0FvPKjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt27LocalAccessChainConvertPass22AppendConstantOperandsEPKNS5_11InstructionEPNS_6vectorINS5_7OperandENS_9allocatorISB_EEEEE3$_0FvPKjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!8 = !{i64 0, i64 65}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !10}
!14 = distinct !{!14, !10}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!18 = distinct !{!18, !10}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!22 = distinct !{!22, !23, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt27LocalAccessChainConvertPass22AppendConstantOperandsEPKNS5_11InstructionEPNS_6vectorINS5_7OperandENS_9allocatorISB_EEEEE3$_0FvPKjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt27LocalAccessChainConvertPass22AppendConstantOperandsEPKNS5_11InstructionEPNS_6vectorINS5_7OperandENS_9allocatorISB_EEEEE3$_0FvPKjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_"}
!27 = distinct !{!27, !10}
