; ModuleID = '../../sandbox/linux/seccomp-bpf-helpers/sigsys_handlers.cc'
source_filename = "../../sandbox/linux/seccomp-bpf-helpers/sigsys_handlers.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::debug::CrashKeyString" = type <{ i8*, i32, [4 x i8] }>
%struct.arch_seccomp_data = type { i32, i32, i64, [6 x i64] }
%"class.(anonymous namespace)::NumberToHex" = type { [11 x i8] }
%"class.(anonymous namespace)::NumberToHex.0" = type { [19 x i8] }
%"class.sandbox::bpf_dsl::internal::ResultExprImpl" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }

@_ZZN7sandbox18SIGSYSCloneFailureERK17arch_seccomp_dataPvE18kSeccompCloneError = internal constant [89 x i8] c"../../sandbox/linux/seccomp-bpf-helpers/sigsys_handlers.cc:**CRASHING**:clone() failure\0A\00", align 16
@_ZZN7sandbox18SIGSYSPrctlFailureERK17arch_seccomp_dataPvE18kSeccompPrctlError = internal constant [89 x i8] c"../../sandbox/linux/seccomp-bpf-helpers/sigsys_handlers.cc:**CRASHING**:prctl() failure\0A\00", align 16
@_ZZN7sandbox18SIGSYSIoctlFailureERK17arch_seccomp_dataPvE18kSeccompIoctlError = internal constant [89 x i8] c"../../sandbox/linux/seccomp-bpf-helpers/sigsys_handlers.cc:**CRASHING**:ioctl() failure\0A\00", align 16
@_ZZN7sandbox17SIGSYSKillFailureERK17arch_seccomp_dataPvE17kSeccompKillError = internal constant [92 x i8] c"../../sandbox/linux/seccomp-bpf-helpers/sigsys_handlers.cc:**CRASHING**:(tg)kill() failure\0A\00", align 16
@_ZZN7sandbox18SIGSYSFutexFailureERK17arch_seccomp_dataPvE18kSeccompFutexError = internal constant [89 x i8] c"../../sandbox/linux/seccomp-bpf-helpers/sigsys_handlers.cc:**CRASHING**:futex() failure\0A\00", align 16
@_ZZN7sandbox19SIGSYSPtraceFailureERK17arch_seccomp_dataPvE19kSeccompPtraceError = internal constant [90 x i8] c"../../sandbox/linux/seccomp-bpf-helpers/sigsys_handlers.cc:**CRASHING**:ptrace() failure\0A\00", align 16
@_ZN12_GLOBAL__N_117seccomp_crash_keyE = internal unnamed_addr global %"struct.base::debug::CrashKeyString"* null, align 8
@.str.1 = private unnamed_addr constant [15 x i8] c"seccomp-sigsys\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"seccomp-bpf failure\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"clone() failure\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"prctl() failure\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"ioctl() failure\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"(tg)kill() failure\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"futex() failure\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"ptrace() failure\00", align 1
@_ZZN12_GLOBAL__N_117PrintSyscallErrorEjE19kSeccompErrorPrefix = internal constant [104 x i8] c"../../sandbox/linux/seccomp-bpf-helpers/sigsys_handlers.cc:**CRASHING**:seccomp-bpf failure in syscall \00", align 16
@_ZZN12_GLOBAL__N_117PrintSyscallErrorEjE20kSeccompErrorPostfix = internal constant [2 x i8] c"\0A\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"nr=\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c" arg1=\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c" arg2=\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c" arg3=\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c" arg4=\00", align 1
@_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars = internal unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 16

; Function Attrs: noreturn nounwind ssp uwtable
define hidden i64 @_ZN7sandbox19CrashSIGSYS_HandlerERK17arch_seccomp_dataPv(%struct.arch_seccomp_data* nocapture readonly dereferenceable(64), i8* nocapture readnone) #0 {
  %3 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, 1023
  %6 = select i1 %5, i32 0, i32 %4
  tail call fastcc void @_ZN12_GLOBAL__N_117PrintSyscallErrorEj(i32 %6)
  tail call fastcc void @_ZN12_GLOBAL__N_118SetSeccompCrashKeyERK17arch_seccomp_data(%struct.arch_seccomp_data* dereferenceable(64) %0)
  %7 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 3, i64 0
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = shl i32 %9, 12
  %11 = and i32 %10, 1044480
  %12 = or i32 %11, %6
  %13 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 3, i64 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = shl i32 %15, 20
  %17 = and i32 %16, 267386880
  %18 = or i32 %12, %17
  %19 = zext i32 %18 to i64
  %20 = inttoptr i64 %19 to i8*
  store volatile i8 0, i8* %20, align 1
  %21 = and i32 %6, 4095
  %22 = zext i32 %21 to i64
  %23 = inttoptr i64 %22 to i8*
  store volatile i8 0, i8* %23, align 1
  tail call void @_exit(i32 1) #9
  unreachable
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_117PrintSyscallErrorEj(i32) unnamed_addr #2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to [4 x i8]*
  %4 = icmp ugt i32 %0, 1023
  %5 = select i1 %4, i32 0, i32 %0
  %6 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #7
  %7 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 1
  %8 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 2
  %9 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 3
  %10 = urem i32 %5, 10
  %11 = udiv i32 %5, 10
  %12 = trunc i32 %10 to i8
  %13 = or i8 %12, 48
  store i8 %13, i8* %9, align 1
  %14 = urem i32 %11, 10
  %15 = udiv i32 %5, 100
  %16 = trunc i32 %14 to i8
  %17 = or i8 %16, 48
  store i8 %17, i8* %8, align 2
  %18 = urem i32 %15, 10
  %19 = udiv i32 %5, 1000
  %20 = trunc i32 %18 to i8
  %21 = or i8 %20, 48
  store i8 %21, i8* %7, align 1
  %22 = urem i32 %19, 10
  %23 = trunc i32 %22 to i8
  %24 = or i8 %23, 48
  store i8 %24, i8* %6, align 4
  br label %25

25:                                               ; preds = %1, %42
  %26 = phi i8* [ %44, %42 ], [ getelementptr inbounds ([104 x i8], [104 x i8]* @_ZZN12_GLOBAL__N_117PrintSyscallErrorEjE19kSeccompErrorPrefix, i64 0, i64 0), %1 ]
  %27 = phi i64 [ %43, %42 ], [ 103, %1 ]
  br label %28

28:                                               ; preds = %31, %25
  %29 = tail call i64 @_ZN7sandbox9sys_writeEiPKcm(i32 2, i8* %26, i64 %27) #7
  %30 = icmp eq i64 %29, -1
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  %32 = tail call i32* @__errno_location() #10
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 4
  br i1 %34, label %28, label %46

35:                                               ; preds = %28
  %36 = trunc i64 %29 to i32
  %37 = icmp slt i32 %36, 1
  br i1 %37, label %46, label %38

38:                                               ; preds = %35
  %39 = shl i64 %29, 32
  %40 = ashr exact i64 %39, 32
  %41 = icmp ult i64 %27, %40
  br i1 %41, label %46, label %42

42:                                               ; preds = %38
  %43 = sub i64 %27, %40
  %44 = getelementptr inbounds i8, i8* %26, i64 %40
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %46, label %25

46:                                               ; preds = %35, %38, %42, %31
  br label %47

47:                                               ; preds = %46, %64
  %48 = phi i8* [ %66, %64 ], [ %6, %46 ]
  %49 = phi i64 [ %65, %64 ], [ 4, %46 ]
  br label %50

50:                                               ; preds = %53, %47
  %51 = call i64 @_ZN7sandbox9sys_writeEiPKcm(i32 2, i8* %48, i64 %49) #7
  %52 = icmp eq i64 %51, -1
  br i1 %52, label %53, label %57

53:                                               ; preds = %50
  %54 = tail call i32* @__errno_location() #10
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 4
  br i1 %56, label %50, label %68

57:                                               ; preds = %50
  %58 = trunc i64 %51 to i32
  %59 = icmp slt i32 %58, 1
  br i1 %59, label %68, label %60

60:                                               ; preds = %57
  %61 = shl i64 %51, 32
  %62 = ashr exact i64 %61, 32
  %63 = icmp ult i64 %49, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %60
  %65 = sub i64 %49, %62
  %66 = getelementptr inbounds i8, i8* %48, i64 %62
  %67 = icmp eq i64 %65, 0
  br i1 %67, label %68, label %47

68:                                               ; preds = %57, %60, %64, %53
  br label %69

69:                                               ; preds = %68, %86
  %70 = phi i8* [ %88, %86 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @_ZZN12_GLOBAL__N_117PrintSyscallErrorEjE20kSeccompErrorPostfix, i64 0, i64 0), %68 ]
  %71 = phi i64 [ %87, %86 ], [ 1, %68 ]
  br label %72

72:                                               ; preds = %75, %69
  %73 = call i64 @_ZN7sandbox9sys_writeEiPKcm(i32 2, i8* %70, i64 %71) #7
  %74 = icmp eq i64 %73, -1
  br i1 %74, label %75, label %79

75:                                               ; preds = %72
  %76 = tail call i32* @__errno_location() #10
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 4
  br i1 %78, label %72, label %90

79:                                               ; preds = %72
  %80 = trunc i64 %73 to i32
  %81 = icmp slt i32 %80, 1
  br i1 %81, label %90, label %82

82:                                               ; preds = %79
  %83 = shl i64 %73, 32
  %84 = ashr exact i64 %83, 32
  %85 = icmp ult i64 %71, %84
  br i1 %85, label %90, label %86

86:                                               ; preds = %82
  %87 = sub i64 %71, %84
  %88 = getelementptr inbounds i8, i8* %70, i64 %84
  %89 = icmp eq i64 %87, 0
  br i1 %89, label %90, label %69

90:                                               ; preds = %79, %82, %86, %75
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_118SetSeccompCrashKeyERK17arch_seccomp_data(%struct.arch_seccomp_data* nocapture readonly dereferenceable(64)) unnamed_addr #2 {
  %2 = alloca %"class.(anonymous namespace)::NumberToHex", align 1
  %3 = alloca %"class.(anonymous namespace)::NumberToHex.0", align 1
  %4 = alloca %"class.(anonymous namespace)::NumberToHex.0", align 1
  %5 = alloca %"class.(anonymous namespace)::NumberToHex.0", align 1
  %6 = alloca %"class.(anonymous namespace)::NumberToHex.0", align 1
  %7 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex", %"class.(anonymous namespace)::NumberToHex"* %2, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 11, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex", %"class.(anonymous namespace)::NumberToHex"* %2, i64 0, i32 0, i64 1
  %9 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex", %"class.(anonymous namespace)::NumberToHex"* %2, i64 0, i32 0, i64 2
  %10 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex", %"class.(anonymous namespace)::NumberToHex"* %2, i64 0, i32 0, i64 3
  %11 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex", %"class.(anonymous namespace)::NumberToHex"* %2, i64 0, i32 0, i64 4
  %12 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex", %"class.(anonymous namespace)::NumberToHex"* %2, i64 0, i32 0, i64 5
  %13 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex", %"class.(anonymous namespace)::NumberToHex"* %2, i64 0, i32 0, i64 6
  %14 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex", %"class.(anonymous namespace)::NumberToHex"* %2, i64 0, i32 0, i64 7
  %15 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex", %"class.(anonymous namespace)::NumberToHex"* %2, i64 0, i32 0, i64 8
  %16 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex", %"class.(anonymous namespace)::NumberToHex"* %2, i64 0, i32 0, i64 9
  %17 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex", %"class.(anonymous namespace)::NumberToHex"* %2, i64 0, i32 0, i64 10
  %18 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  store i8 48, i8* %7, align 1
  store i8 120, i8* %8, align 1
  store i8 0, i8* %17, align 1
  %20 = srem i32 %19, 16
  %21 = sdiv i32 %19, 16
  %22 = sext i32 %20 to i64
  %23 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %22
  %24 = load i8, i8* %23, align 1
  store i8 %24, i8* %16, align 1
  %25 = srem i32 %21, 16
  %26 = sdiv i32 %19, 256
  %27 = sext i32 %25 to i64
  %28 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %27
  %29 = load i8, i8* %28, align 1
  store i8 %29, i8* %15, align 1
  %30 = srem i32 %26, 16
  %31 = sdiv i32 %19, 4096
  %32 = sext i32 %30 to i64
  %33 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %32
  %34 = load i8, i8* %33, align 1
  store i8 %34, i8* %14, align 1
  %35 = srem i32 %31, 16
  %36 = sdiv i32 %19, 65536
  %37 = sext i32 %35 to i64
  %38 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  store i8 %39, i8* %13, align 1
  %40 = srem i32 %36, 16
  %41 = sdiv i32 %19, 1048576
  %42 = sext i32 %40 to i64
  %43 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %42
  %44 = load i8, i8* %43, align 1
  store i8 %44, i8* %12, align 1
  %45 = srem i32 %41, 16
  %46 = sdiv i32 %19, 16777216
  %47 = sext i32 %45 to i64
  %48 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %47
  %49 = load i8, i8* %48, align 1
  store i8 %49, i8* %11, align 1
  %50 = srem i32 %46, 16
  %51 = sdiv i32 %19, 268435456
  %52 = sext i32 %50 to i64
  %53 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %52
  %54 = load i8, i8* %53, align 1
  store i8 %54, i8* %10, align 1
  %55 = sext i32 %51 to i64
  %56 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %55
  %57 = load i8, i8* %56, align 1
  store i8 %57, i8* %9, align 1
  %58 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 19, i8* nonnull %58) #7
  %59 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %3, i64 0, i32 0, i64 1
  %60 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %3, i64 0, i32 0, i64 2
  %61 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %3, i64 0, i32 0, i64 3
  %62 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %3, i64 0, i32 0, i64 4
  %63 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %3, i64 0, i32 0, i64 5
  %64 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %3, i64 0, i32 0, i64 6
  %65 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %3, i64 0, i32 0, i64 7
  %66 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %3, i64 0, i32 0, i64 8
  %67 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %3, i64 0, i32 0, i64 9
  %68 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %3, i64 0, i32 0, i64 10
  %69 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %3, i64 0, i32 0, i64 11
  %70 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %3, i64 0, i32 0, i64 12
  %71 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %3, i64 0, i32 0, i64 13
  %72 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %3, i64 0, i32 0, i64 14
  %73 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %3, i64 0, i32 0, i64 15
  %74 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %3, i64 0, i32 0, i64 16
  %75 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %3, i64 0, i32 0, i64 17
  %76 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %3, i64 0, i32 0, i64 18
  %77 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 3, i64 0
  %78 = load i64, i64* %77, align 8
  store i8 48, i8* %58, align 1
  store i8 120, i8* %59, align 1
  store i8 0, i8* %76, align 1
  %79 = and i64 %78, 15
  %80 = lshr i64 %78, 4
  %81 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %79
  %82 = load i8, i8* %81, align 1
  store i8 %82, i8* %75, align 1
  %83 = and i64 %80, 15
  %84 = lshr i64 %78, 8
  %85 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %83
  %86 = load i8, i8* %85, align 1
  store i8 %86, i8* %74, align 1
  %87 = and i64 %84, 15
  %88 = lshr i64 %78, 12
  %89 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %87
  %90 = load i8, i8* %89, align 1
  store i8 %90, i8* %73, align 1
  %91 = and i64 %88, 15
  %92 = lshr i64 %78, 16
  %93 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %91
  %94 = load i8, i8* %93, align 1
  store i8 %94, i8* %72, align 1
  %95 = and i64 %92, 15
  %96 = lshr i64 %78, 20
  %97 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %95
  %98 = load i8, i8* %97, align 1
  store i8 %98, i8* %71, align 1
  %99 = and i64 %96, 15
  %100 = lshr i64 %78, 24
  %101 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %99
  %102 = load i8, i8* %101, align 1
  store i8 %102, i8* %70, align 1
  %103 = and i64 %100, 15
  %104 = lshr i64 %78, 28
  %105 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %103
  %106 = load i8, i8* %105, align 1
  store i8 %106, i8* %69, align 1
  %107 = and i64 %104, 15
  %108 = lshr i64 %78, 32
  %109 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %107
  %110 = load i8, i8* %109, align 1
  store i8 %110, i8* %68, align 1
  %111 = and i64 %108, 15
  %112 = lshr i64 %78, 36
  %113 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %111
  %114 = load i8, i8* %113, align 1
  store i8 %114, i8* %67, align 1
  %115 = and i64 %112, 15
  %116 = lshr i64 %78, 40
  %117 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %115
  %118 = load i8, i8* %117, align 1
  store i8 %118, i8* %66, align 1
  %119 = and i64 %116, 15
  %120 = lshr i64 %78, 44
  %121 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %119
  %122 = load i8, i8* %121, align 1
  store i8 %122, i8* %65, align 1
  %123 = and i64 %120, 15
  %124 = lshr i64 %78, 48
  %125 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %123
  %126 = load i8, i8* %125, align 1
  store i8 %126, i8* %64, align 1
  %127 = and i64 %124, 15
  %128 = lshr i64 %78, 52
  %129 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %127
  %130 = load i8, i8* %129, align 1
  store i8 %130, i8* %63, align 1
  %131 = and i64 %128, 15
  %132 = lshr i64 %78, 56
  %133 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %131
  %134 = load i8, i8* %133, align 1
  store i8 %134, i8* %62, align 1
  %135 = and i64 %132, 15
  %136 = lshr i64 %78, 60
  %137 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %135
  %138 = load i8, i8* %137, align 1
  store i8 %138, i8* %61, align 1
  %139 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %136
  %140 = load i8, i8* %139, align 1
  store i8 %140, i8* %60, align 1
  %141 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 19, i8* nonnull %141) #7
  %142 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %4, i64 0, i32 0, i64 1
  %143 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %4, i64 0, i32 0, i64 2
  %144 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %4, i64 0, i32 0, i64 3
  %145 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %4, i64 0, i32 0, i64 4
  %146 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %4, i64 0, i32 0, i64 5
  %147 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %4, i64 0, i32 0, i64 6
  %148 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %4, i64 0, i32 0, i64 7
  %149 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %4, i64 0, i32 0, i64 8
  %150 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %4, i64 0, i32 0, i64 9
  %151 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %4, i64 0, i32 0, i64 10
  %152 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %4, i64 0, i32 0, i64 11
  %153 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %4, i64 0, i32 0, i64 12
  %154 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %4, i64 0, i32 0, i64 13
  %155 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %4, i64 0, i32 0, i64 14
  %156 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %4, i64 0, i32 0, i64 15
  %157 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %4, i64 0, i32 0, i64 16
  %158 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %4, i64 0, i32 0, i64 17
  %159 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %4, i64 0, i32 0, i64 18
  %160 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 3, i64 1
  %161 = load i64, i64* %160, align 8
  store i8 48, i8* %141, align 1
  store i8 120, i8* %142, align 1
  store i8 0, i8* %159, align 1
  %162 = and i64 %161, 15
  %163 = lshr i64 %161, 4
  %164 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %162
  %165 = load i8, i8* %164, align 1
  store i8 %165, i8* %158, align 1
  %166 = and i64 %163, 15
  %167 = lshr i64 %161, 8
  %168 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %166
  %169 = load i8, i8* %168, align 1
  store i8 %169, i8* %157, align 1
  %170 = and i64 %167, 15
  %171 = lshr i64 %161, 12
  %172 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %170
  %173 = load i8, i8* %172, align 1
  store i8 %173, i8* %156, align 1
  %174 = and i64 %171, 15
  %175 = lshr i64 %161, 16
  %176 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %174
  %177 = load i8, i8* %176, align 1
  store i8 %177, i8* %155, align 1
  %178 = and i64 %175, 15
  %179 = lshr i64 %161, 20
  %180 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %178
  %181 = load i8, i8* %180, align 1
  store i8 %181, i8* %154, align 1
  %182 = and i64 %179, 15
  %183 = lshr i64 %161, 24
  %184 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %182
  %185 = load i8, i8* %184, align 1
  store i8 %185, i8* %153, align 1
  %186 = and i64 %183, 15
  %187 = lshr i64 %161, 28
  %188 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %186
  %189 = load i8, i8* %188, align 1
  store i8 %189, i8* %152, align 1
  %190 = and i64 %187, 15
  %191 = lshr i64 %161, 32
  %192 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %190
  %193 = load i8, i8* %192, align 1
  store i8 %193, i8* %151, align 1
  %194 = and i64 %191, 15
  %195 = lshr i64 %161, 36
  %196 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %194
  %197 = load i8, i8* %196, align 1
  store i8 %197, i8* %150, align 1
  %198 = and i64 %195, 15
  %199 = lshr i64 %161, 40
  %200 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %198
  %201 = load i8, i8* %200, align 1
  store i8 %201, i8* %149, align 1
  %202 = and i64 %199, 15
  %203 = lshr i64 %161, 44
  %204 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %202
  %205 = load i8, i8* %204, align 1
  store i8 %205, i8* %148, align 1
  %206 = and i64 %203, 15
  %207 = lshr i64 %161, 48
  %208 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %206
  %209 = load i8, i8* %208, align 1
  store i8 %209, i8* %147, align 1
  %210 = and i64 %207, 15
  %211 = lshr i64 %161, 52
  %212 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %210
  %213 = load i8, i8* %212, align 1
  store i8 %213, i8* %146, align 1
  %214 = and i64 %211, 15
  %215 = lshr i64 %161, 56
  %216 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %214
  %217 = load i8, i8* %216, align 1
  store i8 %217, i8* %145, align 1
  %218 = and i64 %215, 15
  %219 = lshr i64 %161, 60
  %220 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %218
  %221 = load i8, i8* %220, align 1
  store i8 %221, i8* %144, align 1
  %222 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %219
  %223 = load i8, i8* %222, align 1
  store i8 %223, i8* %143, align 1
  %224 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 19, i8* nonnull %224) #7
  %225 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %5, i64 0, i32 0, i64 1
  %226 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %5, i64 0, i32 0, i64 2
  %227 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %5, i64 0, i32 0, i64 3
  %228 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %5, i64 0, i32 0, i64 4
  %229 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %5, i64 0, i32 0, i64 5
  %230 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %5, i64 0, i32 0, i64 6
  %231 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %5, i64 0, i32 0, i64 7
  %232 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %5, i64 0, i32 0, i64 8
  %233 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %5, i64 0, i32 0, i64 9
  %234 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %5, i64 0, i32 0, i64 10
  %235 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %5, i64 0, i32 0, i64 11
  %236 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %5, i64 0, i32 0, i64 12
  %237 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %5, i64 0, i32 0, i64 13
  %238 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %5, i64 0, i32 0, i64 14
  %239 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %5, i64 0, i32 0, i64 15
  %240 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %5, i64 0, i32 0, i64 16
  %241 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %5, i64 0, i32 0, i64 17
  %242 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %5, i64 0, i32 0, i64 18
  %243 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 3, i64 2
  %244 = load i64, i64* %243, align 8
  store i8 48, i8* %224, align 1
  store i8 120, i8* %225, align 1
  store i8 0, i8* %242, align 1
  %245 = and i64 %244, 15
  %246 = lshr i64 %244, 4
  %247 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %245
  %248 = load i8, i8* %247, align 1
  store i8 %248, i8* %241, align 1
  %249 = and i64 %246, 15
  %250 = lshr i64 %244, 8
  %251 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %249
  %252 = load i8, i8* %251, align 1
  store i8 %252, i8* %240, align 1
  %253 = and i64 %250, 15
  %254 = lshr i64 %244, 12
  %255 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %253
  %256 = load i8, i8* %255, align 1
  store i8 %256, i8* %239, align 1
  %257 = and i64 %254, 15
  %258 = lshr i64 %244, 16
  %259 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %257
  %260 = load i8, i8* %259, align 1
  store i8 %260, i8* %238, align 1
  %261 = and i64 %258, 15
  %262 = lshr i64 %244, 20
  %263 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %261
  %264 = load i8, i8* %263, align 1
  store i8 %264, i8* %237, align 1
  %265 = and i64 %262, 15
  %266 = lshr i64 %244, 24
  %267 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %265
  %268 = load i8, i8* %267, align 1
  store i8 %268, i8* %236, align 1
  %269 = and i64 %266, 15
  %270 = lshr i64 %244, 28
  %271 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %269
  %272 = load i8, i8* %271, align 1
  store i8 %272, i8* %235, align 1
  %273 = and i64 %270, 15
  %274 = lshr i64 %244, 32
  %275 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %273
  %276 = load i8, i8* %275, align 1
  store i8 %276, i8* %234, align 1
  %277 = and i64 %274, 15
  %278 = lshr i64 %244, 36
  %279 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %277
  %280 = load i8, i8* %279, align 1
  store i8 %280, i8* %233, align 1
  %281 = and i64 %278, 15
  %282 = lshr i64 %244, 40
  %283 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %281
  %284 = load i8, i8* %283, align 1
  store i8 %284, i8* %232, align 1
  %285 = and i64 %282, 15
  %286 = lshr i64 %244, 44
  %287 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %285
  %288 = load i8, i8* %287, align 1
  store i8 %288, i8* %231, align 1
  %289 = and i64 %286, 15
  %290 = lshr i64 %244, 48
  %291 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %289
  %292 = load i8, i8* %291, align 1
  store i8 %292, i8* %230, align 1
  %293 = and i64 %290, 15
  %294 = lshr i64 %244, 52
  %295 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %293
  %296 = load i8, i8* %295, align 1
  store i8 %296, i8* %229, align 1
  %297 = and i64 %294, 15
  %298 = lshr i64 %244, 56
  %299 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %297
  %300 = load i8, i8* %299, align 1
  store i8 %300, i8* %228, align 1
  %301 = and i64 %298, 15
  %302 = lshr i64 %244, 60
  %303 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %301
  %304 = load i8, i8* %303, align 1
  store i8 %304, i8* %227, align 1
  %305 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %302
  %306 = load i8, i8* %305, align 1
  store i8 %306, i8* %226, align 1
  %307 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 19, i8* nonnull %307) #7
  %308 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %6, i64 0, i32 0, i64 1
  %309 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %6, i64 0, i32 0, i64 2
  %310 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %6, i64 0, i32 0, i64 3
  %311 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %6, i64 0, i32 0, i64 4
  %312 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %6, i64 0, i32 0, i64 5
  %313 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %6, i64 0, i32 0, i64 6
  %314 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %6, i64 0, i32 0, i64 7
  %315 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %6, i64 0, i32 0, i64 8
  %316 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %6, i64 0, i32 0, i64 9
  %317 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %6, i64 0, i32 0, i64 10
  %318 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %6, i64 0, i32 0, i64 11
  %319 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %6, i64 0, i32 0, i64 12
  %320 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %6, i64 0, i32 0, i64 13
  %321 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %6, i64 0, i32 0, i64 14
  %322 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %6, i64 0, i32 0, i64 15
  %323 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %6, i64 0, i32 0, i64 16
  %324 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %6, i64 0, i32 0, i64 17
  %325 = getelementptr inbounds %"class.(anonymous namespace)::NumberToHex.0", %"class.(anonymous namespace)::NumberToHex.0"* %6, i64 0, i32 0, i64 18
  %326 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 3, i64 3
  %327 = load i64, i64* %326, align 8
  store i8 48, i8* %307, align 1
  store i8 120, i8* %308, align 1
  store i8 0, i8* %325, align 1
  %328 = and i64 %327, 15
  %329 = lshr i64 %327, 4
  %330 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %328
  %331 = load i8, i8* %330, align 1
  store i8 %331, i8* %324, align 1
  %332 = and i64 %329, 15
  %333 = lshr i64 %327, 8
  %334 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %332
  %335 = load i8, i8* %334, align 1
  store i8 %335, i8* %323, align 1
  %336 = and i64 %333, 15
  %337 = lshr i64 %327, 12
  %338 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %336
  %339 = load i8, i8* %338, align 1
  store i8 %339, i8* %322, align 1
  %340 = and i64 %337, 15
  %341 = lshr i64 %327, 16
  %342 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %340
  %343 = load i8, i8* %342, align 1
  store i8 %343, i8* %321, align 1
  %344 = and i64 %341, 15
  %345 = lshr i64 %327, 20
  %346 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %344
  %347 = load i8, i8* %346, align 1
  store i8 %347, i8* %320, align 1
  %348 = and i64 %345, 15
  %349 = lshr i64 %327, 24
  %350 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %348
  %351 = load i8, i8* %350, align 1
  store i8 %351, i8* %319, align 1
  %352 = and i64 %349, 15
  %353 = lshr i64 %327, 28
  %354 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %352
  %355 = load i8, i8* %354, align 1
  store i8 %355, i8* %318, align 1
  %356 = and i64 %353, 15
  %357 = lshr i64 %327, 32
  %358 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %356
  %359 = load i8, i8* %358, align 1
  store i8 %359, i8* %317, align 1
  %360 = and i64 %357, 15
  %361 = lshr i64 %327, 36
  %362 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %360
  %363 = load i8, i8* %362, align 1
  store i8 %363, i8* %316, align 1
  %364 = and i64 %361, 15
  %365 = lshr i64 %327, 40
  %366 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %364
  %367 = load i8, i8* %366, align 1
  store i8 %367, i8* %315, align 1
  %368 = and i64 %365, 15
  %369 = lshr i64 %327, 44
  %370 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %368
  %371 = load i8, i8* %370, align 1
  store i8 %371, i8* %314, align 1
  %372 = and i64 %369, 15
  %373 = lshr i64 %327, 48
  %374 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %372
  %375 = load i8, i8* %374, align 1
  store i8 %375, i8* %313, align 1
  %376 = and i64 %373, 15
  %377 = lshr i64 %327, 52
  %378 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %376
  %379 = load i8, i8* %378, align 1
  store i8 %379, i8* %312, align 1
  %380 = and i64 %377, 15
  %381 = lshr i64 %327, 56
  %382 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %380
  %383 = load i8, i8* %382, align 1
  store i8 %383, i8* %311, align 1
  %384 = and i64 %381, 15
  %385 = lshr i64 %327, 60
  %386 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %384
  %387 = load i8, i8* %386, align 1
  store i8 %387, i8* %310, align 1
  %388 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN12_GLOBAL__N_111NumberToHexImEC1EmE9kHexChars, i64 0, i64 %385
  %389 = load i8, i8* %388, align 1
  store i8 %389, i8* %309, align 1
  %390 = call i8* @llvm.stacksave()
  %391 = alloca [110 x i8], align 16
  %392 = getelementptr inbounds [110 x i8], [110 x i8]* %391, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %392, i8 0, i64 110, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %392, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i64 3, i1 false)
  %393 = call i64 @strlen(i8* nonnull %7) #11
  %394 = getelementptr inbounds [110 x i8], [110 x i8]* %391, i64 0, i64 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %394, i8* nonnull align 1 %7, i64 %393, i1 false)
  %395 = add i64 %393, 3
  %396 = getelementptr inbounds [110 x i8], [110 x i8]* %391, i64 0, i64 %395
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %396, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i64 6, i1 false)
  %397 = add i64 %393, 9
  %398 = call i64 @strlen(i8* nonnull %58) #11
  %399 = getelementptr inbounds [110 x i8], [110 x i8]* %391, i64 0, i64 %397
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %399, i8* nonnull align 1 %58, i64 %398, i1 false)
  %400 = add i64 %398, %397
  %401 = getelementptr inbounds [110 x i8], [110 x i8]* %391, i64 0, i64 %400
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %401, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i64 6, i1 false)
  %402 = add i64 %400, 6
  %403 = call i64 @strlen(i8* nonnull %141) #11
  %404 = getelementptr inbounds [110 x i8], [110 x i8]* %391, i64 0, i64 %402
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %404, i8* nonnull align 1 %141, i64 %403, i1 false)
  %405 = add i64 %403, %402
  %406 = getelementptr inbounds [110 x i8], [110 x i8]* %391, i64 0, i64 %405
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %406, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i64 6, i1 false)
  %407 = add i64 %405, 6
  %408 = call i64 @strlen(i8* nonnull %224) #11
  %409 = getelementptr inbounds [110 x i8], [110 x i8]* %391, i64 0, i64 %407
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %409, i8* nonnull align 1 %224, i64 %408, i1 false)
  %410 = add i64 %408, %407
  %411 = getelementptr inbounds [110 x i8], [110 x i8]* %391, i64 0, i64 %410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %411, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), i64 6, i1 false)
  %412 = add i64 %410, 6
  %413 = call i64 @strlen(i8* nonnull %307) #11
  %414 = getelementptr inbounds [110 x i8], [110 x i8]* %391, i64 0, i64 %412
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %414, i8* nonnull align 1 %307, i64 %413, i1 false)
  %415 = load %"struct.base::debug::CrashKeyString"*, %"struct.base::debug::CrashKeyString"** @_ZN12_GLOBAL__N_117seccomp_crash_keyE, align 8
  %416 = call i64 @strlen(i8* nonnull %392) #7
  call void @_ZN4base5debug17SetCrashKeyStringEPNS0_14CrashKeyStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.base::debug::CrashKeyString"* %415, i8* nonnull %392, i64 %416) #7
  call void @llvm.stackrestore(i8* %390)
  call void @llvm.lifetime.end.p0i8(i64 19, i8* nonnull %307) #7
  call void @llvm.lifetime.end.p0i8(i64 19, i8* nonnull %224) #7
  call void @llvm.lifetime.end.p0i8(i64 19, i8* nonnull %141) #7
  call void @llvm.lifetime.end.p0i8(i64 19, i8* nonnull %58) #7
  call void @llvm.lifetime.end.p0i8(i64 11, i8* nonnull %7) #7
  ret void
}

; Function Attrs: noreturn
declare void @_exit(i32) local_unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden i64 @_ZN7sandbox18SIGSYSCloneFailureERK17arch_seccomp_dataPv(%struct.arch_seccomp_data* nocapture readonly dereferenceable(64), i8* nocapture readnone) #0 {
  %3 = alloca i64, align 8
  tail call fastcc void @_ZN12_GLOBAL__N_113WriteToStdErrEPKcm(i8* getelementptr inbounds ([89 x i8], [89 x i8]* @_ZZN7sandbox18SIGSYSCloneFailureERK17arch_seccomp_dataPvE18kSeccompCloneError, i64 0, i64 0), i64 88)
  tail call fastcc void @_ZN12_GLOBAL__N_118SetSeccompCrashKeyERK17arch_seccomp_data(%struct.arch_seccomp_data* dereferenceable(64) %0)
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  store volatile i64 -6148914691236517206, i64* %3, align 8
  %5 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 3, i64 0
  %6 = load i64, i64* %5, align 8
  store volatile i64 %6, i64* %3, align 8
  %7 = load volatile i64, i64* %3, align 8
  %8 = and i64 %7, 16777215
  %9 = inttoptr i64 %8 to i8*
  store volatile i8 0, i8* %9, align 1
  %10 = load volatile i64, i64* %3, align 8
  %11 = and i64 %10, 4095
  %12 = inttoptr i64 %11 to i8*
  store volatile i8 0, i8* %12, align 1
  tail call void @_exit(i32 1) #9
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_113WriteToStdErrEPKcm(i8*, i64) unnamed_addr #2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %25, label %4

4:                                                ; preds = %2, %21
  %5 = phi i8* [ %23, %21 ], [ %0, %2 ]
  %6 = phi i64 [ %22, %21 ], [ %1, %2 ]
  br label %7

7:                                                ; preds = %4, %10
  %8 = tail call i64 @_ZN7sandbox9sys_writeEiPKcm(i32 2, i8* %5, i64 %6) #7
  %9 = icmp eq i64 %8, -1
  br i1 %9, label %10, label %14

10:                                               ; preds = %7
  %11 = tail call i32* @__errno_location() #10
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 4
  br i1 %13, label %7, label %25

14:                                               ; preds = %7
  %15 = trunc i64 %8 to i32
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %25, label %17

17:                                               ; preds = %14
  %18 = shl i64 %8, 32
  %19 = ashr exact i64 %18, 32
  %20 = icmp ult i64 %6, %19
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = sub i64 %6, %19
  %23 = getelementptr inbounds i8, i8* %5, i64 %19
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %25, label %4

25:                                               ; preds = %21, %17, %14, %10, %2
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden i64 @_ZN7sandbox18SIGSYSPrctlFailureERK17arch_seccomp_dataPv(%struct.arch_seccomp_data* nocapture readonly dereferenceable(64), i8* nocapture readnone) #0 {
  %3 = alloca i64, align 8
  tail call fastcc void @_ZN12_GLOBAL__N_113WriteToStdErrEPKcm(i8* getelementptr inbounds ([89 x i8], [89 x i8]* @_ZZN7sandbox18SIGSYSPrctlFailureERK17arch_seccomp_dataPvE18kSeccompPrctlError, i64 0, i64 0), i64 88)
  tail call fastcc void @_ZN12_GLOBAL__N_118SetSeccompCrashKeyERK17arch_seccomp_data(%struct.arch_seccomp_data* dereferenceable(64) %0)
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  store volatile i64 -6148914691236517206, i64* %3, align 8
  %5 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 3, i64 0
  %6 = load i64, i64* %5, align 8
  store volatile i64 %6, i64* %3, align 8
  %7 = load volatile i64, i64* %3, align 8
  %8 = and i64 %7, 4095
  %9 = inttoptr i64 %8 to i8*
  store volatile i8 0, i8* %9, align 1
  tail call void @_exit(i32 1) #9
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden i64 @_ZN7sandbox18SIGSYSIoctlFailureERK17arch_seccomp_dataPv(%struct.arch_seccomp_data* nocapture readonly dereferenceable(64), i8* nocapture readnone) #0 {
  %3 = alloca i64, align 8
  tail call fastcc void @_ZN12_GLOBAL__N_113WriteToStdErrEPKcm(i8* getelementptr inbounds ([89 x i8], [89 x i8]* @_ZZN7sandbox18SIGSYSIoctlFailureERK17arch_seccomp_dataPvE18kSeccompIoctlError, i64 0, i64 0), i64 88)
  tail call fastcc void @_ZN12_GLOBAL__N_118SetSeccompCrashKeyERK17arch_seccomp_data(%struct.arch_seccomp_data* dereferenceable(64) %0)
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  store volatile i64 -6148914691236517206, i64* %3, align 8
  %5 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 3, i64 1
  %6 = load i64, i64* %5, align 8
  store volatile i64 %6, i64* %3, align 8
  %7 = load volatile i64, i64* %3, align 8
  %8 = and i64 %7, 65535
  %9 = inttoptr i64 %8 to i8*
  store volatile i8 0, i8* %9, align 1
  %10 = load volatile i64, i64* %3, align 8
  %11 = and i64 %10, 4095
  %12 = inttoptr i64 %11 to i8*
  store volatile i8 0, i8* %12, align 1
  tail call void @_exit(i32 1) #9
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden i64 @_ZN7sandbox17SIGSYSKillFailureERK17arch_seccomp_dataPv(%struct.arch_seccomp_data* nocapture readonly dereferenceable(64), i8* nocapture readnone) #0 {
  %3 = alloca i64, align 8
  tail call fastcc void @_ZN12_GLOBAL__N_113WriteToStdErrEPKcm(i8* getelementptr inbounds ([92 x i8], [92 x i8]* @_ZZN7sandbox17SIGSYSKillFailureERK17arch_seccomp_dataPvE17kSeccompKillError, i64 0, i64 0), i64 91)
  tail call fastcc void @_ZN12_GLOBAL__N_118SetSeccompCrashKeyERK17arch_seccomp_data(%struct.arch_seccomp_data* dereferenceable(64) %0)
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  store volatile i64 -6148914691236517206, i64* %3, align 8
  %5 = tail call i32 @_ZN7sandbox10sys_getpidEv() #7
  %6 = sext i32 %5 to i64
  store volatile i64 %6, i64* %3, align 8
  %7 = load volatile i64, i64* %3, align 8
  %8 = and i64 %7, 4095
  %9 = inttoptr i64 %8 to i8*
  store volatile i8 0, i8* %9, align 1
  tail call void @_exit(i32 1) #9
  unreachable
}

declare i32 @_ZN7sandbox10sys_getpidEv() local_unnamed_addr #4

; Function Attrs: noreturn nounwind ssp uwtable
define hidden i64 @_ZN7sandbox18SIGSYSFutexFailureERK17arch_seccomp_dataPv(%struct.arch_seccomp_data* nocapture readonly dereferenceable(64), i8* nocapture readnone) #0 {
  %3 = alloca i32, align 4
  tail call fastcc void @_ZN12_GLOBAL__N_113WriteToStdErrEPKcm(i8* getelementptr inbounds ([89 x i8], [89 x i8]* @_ZZN7sandbox18SIGSYSFutexFailureERK17arch_seccomp_dataPvE18kSeccompFutexError, i64 0, i64 0), i64 88)
  tail call fastcc void @_ZN12_GLOBAL__N_118SetSeccompCrashKeyERK17arch_seccomp_data(%struct.arch_seccomp_data* dereferenceable(64) %0)
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4)
  store volatile i32 -1431655766, i32* %3, align 4
  %5 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 3, i64 1
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  store volatile i32 %7, i32* %3, align 4
  %8 = load volatile i32, i32* %3, align 4
  %9 = and i32 %8, 4095
  %10 = zext i32 %9 to i64
  %11 = inttoptr i64 %10 to i8*
  store volatile i8 0, i8* %11, align 1
  tail call void @_exit(i32 1) #9
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden i64 @_ZN7sandbox19SIGSYSPtraceFailureERK17arch_seccomp_dataPv(%struct.arch_seccomp_data* nocapture readonly dereferenceable(64), i8* nocapture readnone) #0 {
  %3 = alloca i32, align 4
  tail call fastcc void @_ZN12_GLOBAL__N_113WriteToStdErrEPKcm(i8* getelementptr inbounds ([90 x i8], [90 x i8]* @_ZZN7sandbox19SIGSYSPtraceFailureERK17arch_seccomp_dataPvE19kSeccompPtraceError, i64 0, i64 0), i64 89)
  tail call fastcc void @_ZN12_GLOBAL__N_118SetSeccompCrashKeyERK17arch_seccomp_data(%struct.arch_seccomp_data* dereferenceable(64) %0)
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4)
  store volatile i32 -1431655766, i32* %3, align 4
  %5 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 3, i64 0
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  store volatile i32 %7, i32* %3, align 4
  %8 = load volatile i32, i32* %3, align 4
  %9 = and i32 %8, 4095
  %10 = zext i32 %9 to i64
  %11 = inttoptr i64 %10 to i8*
  store volatile i8 0, i8* %11, align 1
  tail call void @_exit(i32 1) #9
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7sandbox18SIGSYSSchedHandlerERK17arch_seccomp_dataPv(%struct.arch_seccomp_data* nocapture readonly dereferenceable(64), i8* nocapture readnone) #2 {
  %3 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %11 [
    i32 204, label %5
    i32 315, label %5
    i32 143, label %5
    i32 145, label %5
    i32 148, label %5
    i32 203, label %5
    i32 314, label %5
    i32 142, label %5
    i32 144, label %5
  ]

5:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2
  %6 = tail call i32 @_ZN7sandbox10sys_gettidEv() #7
  %7 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 3, i64 0
  %8 = load i64, i64* %7, align 8
  %9 = sext i32 %6 to i64
  %10 = icmp eq i64 %8, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %5, %2
  %12 = tail call i64 @_ZN7sandbox19CrashSIGSYS_HandlerERK17arch_seccomp_dataPv(%struct.arch_seccomp_data* dereferenceable(64) %0, i8* undef)
  unreachable

13:                                               ; preds = %5
  %14 = load i32, i32* %3, align 8
  %15 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 3, i64 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 3, i64 2
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 3, i64 3
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 3, i64 4
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.arch_seccomp_data, %struct.arch_seccomp_data* %0, i64 0, i32 3, i64 5
  %24 = load i64, i64* %23, align 8
  %25 = tail call i64 @_ZN7sandbox7Syscall4CallEillllllll(i32 %14, i64 0, i64 %16, i64 %18, i64 %20, i64 %22, i64 %24, i64 0, i64 0) #7
  ret i64 %25
}

declare i32 @_ZN7sandbox10sys_gettidEv() local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox11CrashSIGSYSEv() local_unnamed_addr #2 {
  %1 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl4TrapEPFlRK17arch_seccomp_dataPvEPKv(i64 (%struct.arch_seccomp_data*, i8*)* nonnull @_ZN7sandbox19CrashSIGSYS_HandlerERK17arch_seccomp_dataPv, i8* null) #7
  ret { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %1
}

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl4TrapEPFlRK17arch_seccomp_dataPvEPKv(i64 (%struct.arch_seccomp_data*, i8*)*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox16CrashSIGSYSCloneEv() local_unnamed_addr #2 {
  %1 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl4TrapEPFlRK17arch_seccomp_dataPvEPKv(i64 (%struct.arch_seccomp_data*, i8*)* nonnull @_ZN7sandbox18SIGSYSCloneFailureERK17arch_seccomp_dataPv, i8* null) #7
  ret { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %1
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox16CrashSIGSYSPrctlEv() local_unnamed_addr #2 {
  %1 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl4TrapEPFlRK17arch_seccomp_dataPvEPKv(i64 (%struct.arch_seccomp_data*, i8*)* nonnull @_ZN7sandbox18SIGSYSPrctlFailureERK17arch_seccomp_dataPv, i8* null) #7
  ret { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %1
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox16CrashSIGSYSIoctlEv() local_unnamed_addr #2 {
  %1 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl4TrapEPFlRK17arch_seccomp_dataPvEPKv(i64 (%struct.arch_seccomp_data*, i8*)* nonnull @_ZN7sandbox18SIGSYSIoctlFailureERK17arch_seccomp_dataPv, i8* null) #7
  ret { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %1
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox15CrashSIGSYSKillEv() local_unnamed_addr #2 {
  %1 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl4TrapEPFlRK17arch_seccomp_dataPvEPKv(i64 (%struct.arch_seccomp_data*, i8*)* nonnull @_ZN7sandbox17SIGSYSKillFailureERK17arch_seccomp_dataPv, i8* null) #7
  ret { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %1
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox16CrashSIGSYSFutexEv() local_unnamed_addr #2 {
  %1 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl4TrapEPFlRK17arch_seccomp_dataPvEPKv(i64 (%struct.arch_seccomp_data*, i8*)* nonnull @_ZN7sandbox18SIGSYSFutexFailureERK17arch_seccomp_dataPv, i8* null) #7
  ret { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %1
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox17CrashSIGSYSPtraceEv() local_unnamed_addr #2 {
  %1 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl4TrapEPFlRK17arch_seccomp_dataPvEPKv(i64 (%struct.arch_seccomp_data*, i8*)* nonnull @_ZN7sandbox19SIGSYSPtraceFailureERK17arch_seccomp_dataPv, i8* null) #7
  ret { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %1
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox18RewriteSchedSIGSYSEv() local_unnamed_addr #2 {
  %1 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl4TrapEPFlRK17arch_seccomp_dataPvEPKv(i64 (%struct.arch_seccomp_data*, i8*)* nonnull @_ZN7sandbox18SIGSYSSchedHandlerERK17arch_seccomp_dataPv, i8* null) #7
  ret { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox17AllocateCrashKeysEv() local_unnamed_addr #2 {
  %1 = load %"struct.base::debug::CrashKeyString"*, %"struct.base::debug::CrashKeyString"** @_ZN12_GLOBAL__N_117seccomp_crash_keyE, align 8
  %2 = icmp eq %"struct.base::debug::CrashKeyString"* %1, null
  br i1 %2, label %3, label %5

3:                                                ; preds = %0
  %4 = tail call %"struct.base::debug::CrashKeyString"* @_ZN4base5debug22AllocateCrashKeyStringEPKcNS0_12CrashKeySizeE(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 256) #7
  store %"struct.base::debug::CrashKeyString"* %4, %"struct.base::debug::CrashKeyString"** @_ZN12_GLOBAL__N_117seccomp_crash_keyE, align 8
  br label %5

5:                                                ; preds = %0, %3
  ret void
}

declare %"struct.base::debug::CrashKeyString"* @_ZN4base5debug22AllocateCrashKeyStringEPKcNS0_12CrashKeySizeE(i8*, i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN7sandbox30GetErrorMessageContentForTestsEv() local_unnamed_addr #5 {
  ret i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN7sandbox35GetCloneErrorMessageContentForTestsEv() local_unnamed_addr #5 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN7sandbox35GetPrctlErrorMessageContentForTestsEv() local_unnamed_addr #5 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN7sandbox35GetIoctlErrorMessageContentForTestsEv() local_unnamed_addr #5 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN7sandbox34GetKillErrorMessageContentForTestsEv() local_unnamed_addr #5 {
  ret i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN7sandbox35GetFutexErrorMessageContentForTestsEv() local_unnamed_addr #5 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN7sandbox36GetPtraceErrorMessageContentForTestsEv() local_unnamed_addr #5 {
  ret i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0)
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base5debug17SetCrashKeyStringEPNS0_14CrashKeyStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.base::debug::CrashKeyString"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #7

declare i64 @_ZN7sandbox9sys_writeEiPKcm(i32, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #8

declare i64 @_ZN7sandbox7Syscall4CallEillllllll(i32, i64, i64, i64, i64, i64, i64, i64, i64) local_unnamed_addr #4

attributes #0 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind readnone }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
