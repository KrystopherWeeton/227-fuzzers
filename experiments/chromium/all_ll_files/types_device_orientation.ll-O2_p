; ModuleID = 'gen/headless/public/devtools/domains/types_device_orientation.cc'
source_filename = "gen/headless/public/devtools/domains/types_device_orientation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.headless::device_orientation::ClearDeviceOrientationOverrideParams" = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.headless::ErrorReporter" = type { %"class.std::__1::vector.31", %"class.std::__1::vector.38" }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { i8**, i8**, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i8** }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::basic_string"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.headless::device_orientation::ClearDeviceOrientationOverrideResult" = type { i8 }
%"class.headless::device_orientation::SetDeviceOrientationOverrideParams" = type { double, double, double }
%"class.headless::device_orientation::SetDeviceOrientationOverrideResult" = type { i8 }

@.str.4 = private unnamed_addr constant [6 x i8] c"alpha\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"beta\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"gamma\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::device_orientation::ClearDeviceOrientationOverrideParams"* @_ZN8headless18device_orientation36ClearDeviceOrientationOverrideParams5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* nocapture readonly dereferenceable(32), %"class.headless::ErrorReporter"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i8
  %6 = icmp eq i8 %5, 6
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = tail call i8* @_Znwm(i64 1) #6
  %9 = bitcast i8* %8 to %"class.headless::device_orientation::ClearDeviceOrientationOverrideParams"*
  br label %10

10:                                               ; preds = %7, %2
  %11 = phi %"class.headless::device_orientation::ClearDeviceOrientationOverrideParams"* [ null, %2 ], [ %9, %7 ]
  ret %"class.headless::device_orientation::ClearDeviceOrientationOverrideParams"* %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::Value"* @_ZNK8headless18device_orientation36ClearDeviceOrientationOverrideParams9SerializeEv(%"class.headless::device_orientation::ClearDeviceOrientationOverrideParams"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #6
  %3 = bitcast i8* %2 to %"class.base::DictionaryValue"*
  tail call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %3) #7
  %4 = bitcast i8* %2 to %"class.base::Value"*
  ret %"class.base::Value"* %4
}

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::device_orientation::ClearDeviceOrientationOverrideParams"* @_ZNK8headless18device_orientation36ClearDeviceOrientationOverrideParams5CloneEv(%"class.headless::device_orientation::ClearDeviceOrientationOverrideParams"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.headless::ErrorReporter", align 8
  %3 = bitcast %"class.headless::ErrorReporter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #7
  %4 = bitcast %"class.headless::ErrorReporter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %2) #7
  %5 = call i8* @_Znwm(i64 32) #6
  %6 = bitcast i8* %5 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %6) #7
  %7 = bitcast i8* %5 to %"class.base::Value"*
  %8 = getelementptr inbounds i8, i8* %5, i64 24
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i8
  %12 = icmp eq i8 %11, 6
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = call i8* @_Znwm(i64 1) #6
  %15 = bitcast i8* %14 to %"class.headless::device_orientation::ClearDeviceOrientationOverrideParams"*
  br label %16

16:                                               ; preds = %1, %13
  %17 = phi %"class.headless::device_orientation::ClearDeviceOrientationOverrideParams"* [ null, %1 ], [ %15, %13 ]
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %7) #7
  call void @_ZdlPv(i8* nonnull %5) #6
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #7
  ret %"class.headless::device_orientation::ClearDeviceOrientationOverrideParams"* %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::device_orientation::ClearDeviceOrientationOverrideResult"* @_ZN8headless18device_orientation36ClearDeviceOrientationOverrideResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* nocapture readonly dereferenceable(32), %"class.headless::ErrorReporter"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i8
  %6 = icmp eq i8 %5, 6
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = tail call i8* @_Znwm(i64 1) #6
  %9 = bitcast i8* %8 to %"class.headless::device_orientation::ClearDeviceOrientationOverrideResult"*
  br label %10

10:                                               ; preds = %7, %2
  %11 = phi %"class.headless::device_orientation::ClearDeviceOrientationOverrideResult"* [ null, %2 ], [ %9, %7 ]
  ret %"class.headless::device_orientation::ClearDeviceOrientationOverrideResult"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::Value"* @_ZNK8headless18device_orientation36ClearDeviceOrientationOverrideResult9SerializeEv(%"class.headless::device_orientation::ClearDeviceOrientationOverrideResult"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #6
  %3 = bitcast i8* %2 to %"class.base::DictionaryValue"*
  tail call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %3) #7
  %4 = bitcast i8* %2 to %"class.base::Value"*
  ret %"class.base::Value"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::device_orientation::ClearDeviceOrientationOverrideResult"* @_ZNK8headless18device_orientation36ClearDeviceOrientationOverrideResult5CloneEv(%"class.headless::device_orientation::ClearDeviceOrientationOverrideResult"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.headless::ErrorReporter", align 8
  %3 = bitcast %"class.headless::ErrorReporter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #7
  %4 = bitcast %"class.headless::ErrorReporter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %2) #7
  %5 = call i8* @_Znwm(i64 32) #6
  %6 = bitcast i8* %5 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %6) #7
  %7 = bitcast i8* %5 to %"class.base::Value"*
  %8 = getelementptr inbounds i8, i8* %5, i64 24
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i8
  %12 = icmp eq i8 %11, 6
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = call i8* @_Znwm(i64 1) #6
  %15 = bitcast i8* %14 to %"class.headless::device_orientation::ClearDeviceOrientationOverrideResult"*
  br label %16

16:                                               ; preds = %1, %13
  %17 = phi %"class.headless::device_orientation::ClearDeviceOrientationOverrideResult"* [ null, %1 ], [ %15, %13 ]
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %7) #7
  call void @_ZdlPv(i8* nonnull %5) #6
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #7
  ret %"class.headless::device_orientation::ClearDeviceOrientationOverrideResult"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::device_orientation::SetDeviceOrientationOverrideParams"* @_ZN8headless18device_orientation34SetDeviceOrientationOverrideParams5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i8
  %6 = icmp eq i8 %5, 6
  br i1 %6, label %7, label %50

7:                                                ; preds = %2
  %8 = tail call i8* @_Znwm(i64 24) #6
  %9 = ptrtoint i8* %8 to i64
  %10 = tail call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 5) #7
  %11 = icmp eq %"class.base::Value"* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, 254
  %16 = icmp eq i64 %15, 2
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = tail call double @_ZNK4base5Value9GetDoubleEv(%"class.base::Value"* nonnull %10) #7
  br label %19

19:                                               ; preds = %12, %17
  %20 = phi double [ %18, %17 ], [ 0.000000e+00, %12 ]
  %21 = bitcast i8* %8 to double*
  store double %20, double* %21, align 8
  br label %22

22:                                               ; preds = %7, %19
  %23 = tail call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i64 4) #7
  %24 = icmp eq %"class.base::Value"* %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 254
  %29 = icmp eq i64 %28, 2
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = tail call double @_ZNK4base5Value9GetDoubleEv(%"class.base::Value"* nonnull %23) #7
  br label %32

32:                                               ; preds = %25, %30
  %33 = phi double [ %31, %30 ], [ 0.000000e+00, %25 ]
  %34 = getelementptr inbounds i8, i8* %8, i64 8
  %35 = bitcast i8* %34 to double*
  store double %33, double* %35, align 8
  br label %36

36:                                               ; preds = %22, %32
  %37 = tail call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i64 5) #7
  %38 = icmp eq %"class.base::Value"* %37, null
  br i1 %38, label %50, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 254
  %43 = icmp eq i64 %42, 2
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = tail call double @_ZNK4base5Value9GetDoubleEv(%"class.base::Value"* nonnull %37) #7
  br label %46

46:                                               ; preds = %39, %44
  %47 = phi double [ %45, %44 ], [ 0.000000e+00, %39 ]
  %48 = getelementptr inbounds i8, i8* %8, i64 16
  %49 = bitcast i8* %48 to double*
  store double %47, double* %49, align 8
  br label %50

50:                                               ; preds = %46, %36, %2
  %51 = phi i64 [ 0, %2 ], [ %9, %36 ], [ %9, %46 ]
  %52 = inttoptr i64 %51 to %"class.headless::device_orientation::SetDeviceOrientationOverrideParams"*
  ret %"class.headless::device_orientation::SetDeviceOrientationOverrideParams"* %52
}

declare %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::Value"* @_ZNK8headless18device_orientation34SetDeviceOrientationOverrideParams9SerializeEv(%"class.headless::device_orientation::SetDeviceOrientationOverrideParams"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #6
  %3 = bitcast i8* %2 to %"class.base::DictionaryValue"*
  tail call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %3) #7
  %4 = getelementptr inbounds %"class.headless::device_orientation::SetDeviceOrientationOverrideParams", %"class.headless::device_orientation::SetDeviceOrientationOverrideParams"* %0, i64 0, i32 0
  %5 = tail call i8* @_Znwm(i64 32) #6
  %6 = bitcast i8* %5 to %"class.base::Value"*
  %7 = load double, double* %4, align 8
  tail call void @_ZN4base5ValueC1Ed(%"class.base::Value"* nonnull %6, double %7) #7
  %8 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue3SetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 5, %"class.base::Value"* nonnull %6) #7
  %9 = getelementptr inbounds %"class.headless::device_orientation::SetDeviceOrientationOverrideParams", %"class.headless::device_orientation::SetDeviceOrientationOverrideParams"* %0, i64 0, i32 1
  %10 = tail call i8* @_Znwm(i64 32) #6
  %11 = bitcast i8* %10 to %"class.base::Value"*
  %12 = load double, double* %9, align 8
  tail call void @_ZN4base5ValueC1Ed(%"class.base::Value"* nonnull %11, double %12) #7
  %13 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue3SetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i64 4, %"class.base::Value"* nonnull %11) #7
  %14 = getelementptr inbounds %"class.headless::device_orientation::SetDeviceOrientationOverrideParams", %"class.headless::device_orientation::SetDeviceOrientationOverrideParams"* %0, i64 0, i32 2
  %15 = tail call i8* @_Znwm(i64 32) #6
  %16 = bitcast i8* %15 to %"class.base::Value"*
  %17 = load double, double* %14, align 8
  tail call void @_ZN4base5ValueC1Ed(%"class.base::Value"* nonnull %16, double %17) #7
  %18 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue3SetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i64 5, %"class.base::Value"* nonnull %16) #7
  %19 = bitcast i8* %2 to %"class.base::Value"*
  ret %"class.base::Value"* %19
}

declare %"class.base::Value"* @_ZN4base15DictionaryValue3SetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::device_orientation::SetDeviceOrientationOverrideParams"* @_ZNK8headless18device_orientation34SetDeviceOrientationOverrideParams5CloneEv(%"class.headless::device_orientation::SetDeviceOrientationOverrideParams"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.headless::ErrorReporter", align 8
  %3 = bitcast %"class.headless::ErrorReporter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #7
  %4 = bitcast %"class.headless::ErrorReporter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %2) #7
  %5 = call %"class.base::Value"* @_ZNK8headless18device_orientation34SetDeviceOrientationOverrideParams9SerializeEv(%"class.headless::device_orientation::SetDeviceOrientationOverrideParams"* %0)
  %6 = call %"class.headless::device_orientation::SetDeviceOrientationOverrideParams"* @_ZN8headless18device_orientation34SetDeviceOrientationOverrideParams5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %5, %"class.headless::ErrorReporter"* nonnull %2)
  %7 = icmp eq %"class.base::Value"* %5, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #7
  %9 = bitcast %"class.base::Value"* %5 to i8*
  call void @_ZdlPv(i8* %9) #6
  br label %10

10:                                               ; preds = %1, %8
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #7
  ret %"class.headless::device_orientation::SetDeviceOrientationOverrideParams"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::device_orientation::SetDeviceOrientationOverrideResult"* @_ZN8headless18device_orientation34SetDeviceOrientationOverrideResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* nocapture readonly dereferenceable(32), %"class.headless::ErrorReporter"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i8
  %6 = icmp eq i8 %5, 6
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = tail call i8* @_Znwm(i64 1) #6
  %9 = bitcast i8* %8 to %"class.headless::device_orientation::SetDeviceOrientationOverrideResult"*
  br label %10

10:                                               ; preds = %7, %2
  %11 = phi %"class.headless::device_orientation::SetDeviceOrientationOverrideResult"* [ null, %2 ], [ %9, %7 ]
  ret %"class.headless::device_orientation::SetDeviceOrientationOverrideResult"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::Value"* @_ZNK8headless18device_orientation34SetDeviceOrientationOverrideResult9SerializeEv(%"class.headless::device_orientation::SetDeviceOrientationOverrideResult"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #6
  %3 = bitcast i8* %2 to %"class.base::DictionaryValue"*
  tail call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %3) #7
  %4 = bitcast i8* %2 to %"class.base::Value"*
  ret %"class.base::Value"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::device_orientation::SetDeviceOrientationOverrideResult"* @_ZNK8headless18device_orientation34SetDeviceOrientationOverrideResult5CloneEv(%"class.headless::device_orientation::SetDeviceOrientationOverrideResult"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.headless::ErrorReporter", align 8
  %3 = bitcast %"class.headless::ErrorReporter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #7
  %4 = bitcast %"class.headless::ErrorReporter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %2) #7
  %5 = call i8* @_Znwm(i64 32) #6
  %6 = bitcast i8* %5 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %6) #7
  %7 = bitcast i8* %5 to %"class.base::Value"*
  %8 = getelementptr inbounds i8, i8* %5, i64 24
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i8
  %12 = icmp eq i8 %11, 6
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = call i8* @_Znwm(i64 1) #6
  %15 = bitcast i8* %14 to %"class.headless::device_orientation::SetDeviceOrientationOverrideResult"*
  br label %16

16:                                               ; preds = %1, %13
  %17 = phi %"class.headless::device_orientation::SetDeviceOrientationOverrideResult"* [ null, %1 ], [ %15, %13 ]
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %7) #7
  call void @_ZdlPv(i8* nonnull %5) #6
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #7
  ret %"class.headless::device_orientation::SetDeviceOrientationOverrideResult"* %17
}

declare double @_ZNK4base5Value9GetDoubleEv(%"class.base::Value"*) local_unnamed_addr #3

declare void @_ZN4base5ValueC1Ed(%"class.base::Value"*, double) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
