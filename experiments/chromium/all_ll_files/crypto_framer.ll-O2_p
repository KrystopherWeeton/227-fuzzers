; ModuleID = '../../net/third_party/quiche/src/quic/core/crypto/crypto_framer.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/crypto/crypto_framer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.quic::CryptoFramer" = type <{ %"class.quic::CryptoMessageParser", %"class.quic::CryptoFramerVisitorInterface"*, i32, [4 x i8], %"class.std::__1::basic_string", i32, [4 x i8], %"class.quic::CryptoHandshakeMessage", %"class.std::__1::basic_string", i16, [6 x i8], %"class.std::__1::vector", i64, i8, [7 x i8] }>
%"class.quic::CryptoMessageParser" = type { i32 (...)** }
%"class.quic::CryptoFramerVisitorInterface" = type { i32 (...)** }
%"class.quic::CryptoHandshakeMessage" = type { i32, %"class.std::__1::map", i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.quic::QuicData"* }
%"class.quic::QuicData" = type <{ i32 (...)**, i8*, i64, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.12" }
%"struct.std::__1::pair" = type { i32, i64 }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.quic::(anonymous namespace)::OneShotVisitor" = type <{ %"class.quic::CryptoFramerVisitorInterface", %"class.std::__1::unique_ptr.17", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.quic::CryptoHandshakeMessage"* }
%"class.quic::QuicDataReader" = type { %"class.quiche::QuicheDataReader.base", [4 x i8] }
%"class.quiche::QuicheDataReader.base" = type <{ i8*, i64, i64, i32 }>
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }
%"class.absl::string_view" = type { i8*, i64 }
%"class.quiche::QuicheDataReader" = type <{ i8*, i64, i64, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.quic::QuicDataWriter" = type { %"class.quiche::QuicheDataWriter.base", [4 x i8] }
%"class.quiche::QuicheDataWriter.base" = type <{ i8*, i64, i64, i32 }>
%"class.quiche::QuicheDataWriter" = type <{ i8*, i64, i64, i32, [4 x i8] }>

@_ZTVN4quic12CryptoFramerE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::CryptoFramer"*)* @_ZN4quic12CryptoFramerD2Ev to i8*), i8* bitcast (void (%"class.quic::CryptoFramer"*)* @_ZN4quic12CryptoFramerD0Ev to i8*), i8* bitcast (i32 (%"class.quic::CryptoFramer"*)* @_ZNK4quic12CryptoFramer5errorEv to i8*), i8* bitcast (%"class.std::__1::basic_string"* (%"class.quic::CryptoFramer"*)* @_ZNK4quic12CryptoFramer12error_detailEv to i8*), i8* bitcast (i1 (%"class.quic::CryptoFramer"*, i8*, i64, i8)* @_ZN4quic12CryptoFramer12ProcessInputEN4absl11string_viewENS_15EncryptionLevelE to i8*), i8* bitcast (i64 (%"class.quic::CryptoFramer"*)* @_ZNK4quic12CryptoFramer19InputBytesRemainingEv to i8*)] }, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [9 x i8] c" entries\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"Duplicate tag:\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"Tag \00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c" out of order\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"End offset: \00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c" vs \00", align 1
@_ZTVN4quic12_GLOBAL__N_114OneShotVisitorE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::(anonymous namespace)::OneShotVisitor"*)* @_ZN4quic12_GLOBAL__N_114OneShotVisitorD2Ev to i8*), i8* bitcast (void (%"class.quic::(anonymous namespace)::OneShotVisitor"*)* @_ZN4quic12_GLOBAL__N_114OneShotVisitorD0Ev to i8*), i8* bitcast (void (%"class.quic::(anonymous namespace)::OneShotVisitor"*, %"class.quic::CryptoFramer"*)* @_ZN4quic12_GLOBAL__N_114OneShotVisitor7OnErrorEPNS_12CryptoFramerE to i8*), i8* bitcast (void (%"class.quic::(anonymous namespace)::OneShotVisitor"*, %"class.quic::CryptoHandshakeMessage"*)* @_ZN4quic12_GLOBAL__N_114OneShotVisitor18OnHandshakeMessageERKNS_22CryptoHandshakeMessageE to i8*)] }, align 8

@_ZN4quic12CryptoFramerC1Ev = hidden unnamed_addr alias void (%"class.quic::CryptoFramer"*), void (%"class.quic::CryptoFramer"*)* @_ZN4quic12CryptoFramerC2Ev
@_ZN4quic12CryptoFramerD1Ev = hidden unnamed_addr alias void (%"class.quic::CryptoFramer"*), void (%"class.quic::CryptoFramer"*)* @_ZN4quic12CryptoFramerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12CryptoFramerC2Ev(%"class.quic::CryptoFramer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4quic12CryptoFramerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 1
  store %"class.quic::CryptoFramerVisitorInterface"* null, %"class.quic::CryptoFramerVisitorInterface"** %3, align 8
  %4 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 4
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #14
  %6 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 7
  tail call void @_ZN4quic22CryptoHandshakeMessageC1Ev(%"class.quic::CryptoHandshakeMessage"* %6) #14
  %7 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 8
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  store i8 0, i8* %9, align 1
  %10 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 9
  store i16 0, i16* %11, align 8
  %12 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11
  %13 = bitcast %"class.std::__1::vector"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 33, i1 false)
  tail call void @_ZN4quic22CryptoHandshakeMessage5ClearEv(%"class.quic::CryptoHandshakeMessage"* %6) #14
  %14 = bitcast %"class.std::__1::vector"* %12 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11, i32 0, i32 1
  %17 = bitcast %"struct.std::__1::pair"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 2
  store i32 0, i32* %18, align 8
  %19 = load i8, i8* %9, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  br label %26

25:                                               ; preds = %1
  store i8 0, i8* %9, align 1
  br label %26

26:                                               ; preds = %21, %25
  %27 = phi i8* [ %24, %21 ], [ %10, %25 ]
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 5
  store i32 0, i32* %28, align 8
  ret void
}

declare void @_ZN4quic22CryptoHandshakeMessageC1Ev(%"class.quic::CryptoHandshakeMessage"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12CryptoFramer5ClearEv(%"class.quic::CryptoFramer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 7
  tail call void @_ZN4quic22CryptoHandshakeMessage5ClearEv(%"class.quic::CryptoHandshakeMessage"* %2) #14
  %3 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11
  %4 = bitcast %"class.std::__1::vector"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair"** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 8
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  br label %20

18:                                               ; preds = %1
  store i8 0, i8* %11, align 1
  %19 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  br label %20

20:                                               ; preds = %14, %18
  %21 = phi i8* [ %17, %14 ], [ %19, %18 ]
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 5
  store i32 0, i32* %22, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12CryptoFramerD2Ev(%"class.quic::CryptoFramer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4quic12CryptoFramerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %8 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.std::__1::pair"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 8
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 7
  tail call void @_ZN4quic22CryptoHandshakeMessageD1Ev(%"class.quic::CryptoHandshakeMessage"* %21) #14
  %22 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 4
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #15
  br label %30

30:                                               ; preds = %20, %27
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4quic22CryptoHandshakeMessageD1Ev(%"class.quic::CryptoHandshakeMessage"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12CryptoFramerD0Ev(%"class.quic::CryptoFramer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4quic12CryptoFramerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %8 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.std::__1::pair"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 8
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %17, %11
  %21 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 7
  tail call void @_ZN4quic22CryptoHandshakeMessageD1Ev(%"class.quic::CryptoHandshakeMessage"* %21) #14
  %22 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 4
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #15
  br label %30

30:                                               ; preds = %20, %27
  %31 = bitcast %"class.quic::CryptoFramer"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.quic::CryptoHandshakeMessage"* @_ZN4quic12CryptoFramer12ParseMessageEN4absl11string_viewE(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.quic::(anonymous namespace)::OneShotVisitor", align 8
  %4 = alloca %"class.quic::CryptoFramer", align 8
  %5 = bitcast %"class.quic::(anonymous namespace)::OneShotVisitor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.quic::(anonymous namespace)::OneShotVisitor", %"class.quic::(anonymous namespace)::OneShotVisitor"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.quic::(anonymous namespace)::OneShotVisitor", %"class.quic::(anonymous namespace)::OneShotVisitor"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.quic::(anonymous namespace)::OneShotVisitor", %"class.quic::(anonymous namespace)::OneShotVisitor"* %3, i64 0, i32 2
  %9 = bitcast %"class.quic::(anonymous namespace)::OneShotVisitor"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4quic12_GLOBAL__N_114OneShotVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %10 = getelementptr inbounds %"class.quic::(anonymous namespace)::OneShotVisitor", %"class.quic::(anonymous namespace)::OneShotVisitor"* %3, i64 0, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr.17"* %10 to i64*
  store i64 0, i64* %11, align 8
  store i8 0, i8* %8, align 8
  %12 = bitcast %"class.quic::CryptoFramer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %12) #14
  %13 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %4, i64 0, i32 2
  %14 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 160, i1 false)
  %15 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4quic12CryptoFramerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %4, i64 0, i32 1
  store %"class.quic::CryptoFramerVisitorInterface"* null, %"class.quic::CryptoFramerVisitorInterface"** %16, align 8
  %17 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %4, i64 0, i32 4
  %18 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #14
  %19 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %4, i64 0, i32 7
  call void @_ZN4quic22CryptoHandshakeMessageC1Ev(%"class.quic::CryptoHandshakeMessage"* %19) #14
  %20 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %4, i64 0, i32 8
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  store i8 0, i8* %22, align 1
  %23 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %4, i64 0, i32 9
  store i16 0, i16* %24, align 8
  %25 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %4, i64 0, i32 11
  %26 = bitcast %"class.std::__1::vector"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 33, i1 false) #14
  call void @_ZN4quic22CryptoHandshakeMessage5ClearEv(%"class.quic::CryptoHandshakeMessage"* %19) #14
  %27 = bitcast %"class.std::__1::vector"* %25 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %4, i64 0, i32 11, i32 0, i32 1
  %30 = bitcast %"struct.std::__1::pair"** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %4, i64 0, i32 2
  store i32 0, i32* %31, align 8
  %32 = load i8, i8* %22, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %4, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  br label %39

38:                                               ; preds = %2
  store i8 0, i8* %22, align 1
  br label %39

39:                                               ; preds = %34, %38
  %40 = phi i8* [ %37, %34 ], [ %23, %38 ]
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %4, i64 0, i32 5
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"class.quic::(anonymous namespace)::OneShotVisitor", %"class.quic::(anonymous namespace)::OneShotVisitor"* %3, i64 0, i32 0
  store %"class.quic::CryptoFramerVisitorInterface"* %42, %"class.quic::CryptoFramerVisitorInterface"** %16, align 8
  %43 = load i32, i32* %31, align 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %69

45:                                               ; preds = %39
  %46 = call i32 @_ZN4quic12CryptoFramer7ProcessEN4absl11string_viewE(%"class.quic::CryptoFramer"* nonnull %4, i8* %0, i64 %1) #14
  store i32 %46, i32* %31, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %54, label %48

48:                                               ; preds = %45
  %49 = load %"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramerVisitorInterface"** %16, align 8
  %50 = bitcast %"class.quic::CryptoFramerVisitorInterface"* %49 to void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)***
  %51 = load void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)**, void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)*, void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)** %51, i64 2
  %53 = load void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)*, void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)** %52, align 8
  call void %53(%"class.quic::CryptoFramerVisitorInterface"* %49, %"class.quic::CryptoFramer"* nonnull %4) #14
  br label %69

54:                                               ; preds = %45
  %55 = load i8, i8* %8, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %54
  %58 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  %62 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = zext i8 %60 to i64
  %65 = select i1 %61, i64 %63, i64 %64
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %57
  %68 = load %"class.quic::CryptoHandshakeMessage"*, %"class.quic::CryptoHandshakeMessage"** %7, align 8
  store %"class.quic::CryptoHandshakeMessage"* null, %"class.quic::CryptoHandshakeMessage"** %7, align 8
  br label %69

69:                                               ; preds = %54, %39, %48, %57, %67
  %70 = phi %"class.quic::CryptoHandshakeMessage"* [ %68, %67 ], [ null, %57 ], [ null, %54 ], [ null, %48 ], [ null, %39 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4quic12CryptoFramerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %71 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %4, i64 0, i32 11, i32 0, i32 0
  %72 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %71, align 8
  %73 = icmp eq %"struct.std::__1::pair"* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = ptrtoint %"struct.std::__1::pair"* %72 to i64
  store i64 %75, i64* %30, align 8
  %76 = bitcast %"struct.std::__1::pair"* %72 to i8*
  call void @_ZdlPv(i8* %76) #15
  br label %77

77:                                               ; preds = %74, %69
  %78 = load i8, i8* %22, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %82) #15
  br label %83

83:                                               ; preds = %80, %77
  call void @_ZN4quic22CryptoHandshakeMessageD1Ev(%"class.quic::CryptoHandshakeMessage"* %19) #14
  %84 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %90) #15
  br label %91

91:                                               ; preds = %83, %88
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %12) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4quic12_GLOBAL__N_114OneShotVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %92 = load %"class.quic::CryptoHandshakeMessage"*, %"class.quic::CryptoHandshakeMessage"** %7, align 8
  store %"class.quic::CryptoHandshakeMessage"* null, %"class.quic::CryptoHandshakeMessage"** %7, align 8
  %93 = icmp eq %"class.quic::CryptoHandshakeMessage"* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %91
  call void @_ZN4quic22CryptoHandshakeMessageD1Ev(%"class.quic::CryptoHandshakeMessage"* nonnull %92) #14
  %95 = bitcast %"class.quic::CryptoHandshakeMessage"* %92 to i8*
  call void @_ZdlPv(i8* %95) #15
  br label %96

96:                                               ; preds = %91, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  ret %"class.quic::CryptoHandshakeMessage"* %70
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic12CryptoFramer12ProcessInputEN4absl11string_viewE(%"class.quic::CryptoFramer"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = tail call i32 @_ZN4quic12CryptoFramer7ProcessEN4absl11string_viewE(%"class.quic::CryptoFramer"* %0, i8* %1, i64 %2)
  store i32 %8, i32* %4, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 1
  %12 = load %"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramerVisitorInterface"** %11, align 8
  %13 = bitcast %"class.quic::CryptoFramerVisitorInterface"* %12 to void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)***
  %14 = load void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)**, void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)*, void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)** %14, i64 2
  %16 = load void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)*, void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)** %15, align 8
  tail call void %16(%"class.quic::CryptoFramerVisitorInterface"* %12, %"class.quic::CryptoFramer"* %0) #14
  br label %17

17:                                               ; preds = %7, %3, %10
  %18 = phi i1 [ false, %10 ], [ false, %3 ], [ true, %7 ]
  ret i1 %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4quic12CryptoFramer19InputBytesRemainingEv(%"class.quic::CryptoFramer"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 4
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %1
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  ret i64 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4quic12_GLOBAL__N_114OneShotVisitorD2Ev(%"class.quic::(anonymous namespace)::OneShotVisitor"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.quic::(anonymous namespace)::OneShotVisitor", %"class.quic::(anonymous namespace)::OneShotVisitor"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4quic12_GLOBAL__N_114OneShotVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::(anonymous namespace)::OneShotVisitor", %"class.quic::(anonymous namespace)::OneShotVisitor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.quic::CryptoHandshakeMessage"*, %"class.quic::CryptoHandshakeMessage"** %3, align 8
  store %"class.quic::CryptoHandshakeMessage"* null, %"class.quic::CryptoHandshakeMessage"** %3, align 8
  %5 = icmp eq %"class.quic::CryptoHandshakeMessage"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN4quic22CryptoHandshakeMessageD1Ev(%"class.quic::CryptoHandshakeMessage"* nonnull %4) #14
  %7 = bitcast %"class.quic::CryptoHandshakeMessage"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK4quic12CryptoFramer5errorEv(%"class.quic::CryptoFramer"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4quic12CryptoFramer12error_detailEv(%"class.quic::CryptoFramer"* readnone) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 8
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic12CryptoFramer12ProcessInputEN4absl11string_viewENS_15EncryptionLevelE(%"class.quic::CryptoFramer"*, i8*, i64, i8 signext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %18

8:                                                ; preds = %4
  %9 = tail call i32 @_ZN4quic12CryptoFramer7ProcessEN4absl11string_viewE(%"class.quic::CryptoFramer"* %0, i8* %1, i64 %2) #14
  store i32 %9, i32* %5, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 1
  %13 = load %"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramerVisitorInterface"** %12, align 8
  %14 = bitcast %"class.quic::CryptoFramerVisitorInterface"* %13 to void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)***
  %15 = load void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)**, void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)*, void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)** %15, i64 2
  %17 = load void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)*, void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramer"*)** %16, align 8
  tail call void %17(%"class.quic::CryptoFramerVisitorInterface"* %13, %"class.quic::CryptoFramer"* %0) #14
  br label %18

18:                                               ; preds = %4, %8, %11
  %19 = phi i1 [ false, %11 ], [ false, %4 ], [ true, %8 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4quic12CryptoFramer7ProcessEN4absl11string_viewE(%"class.quic::CryptoFramer"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.quic::QuicDataReader", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.absl::AlphaNum", align 8
  %8 = alloca %"class.absl::AlphaNum", align 8
  %9 = alloca i16, align 2
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.absl::AlphaNum", align 8
  %13 = alloca %"class.absl::AlphaNum", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.absl::AlphaNum", align 8
  %16 = alloca %"class.absl::AlphaNum", align 8
  %17 = alloca %"class.absl::AlphaNum", align 8
  %18 = alloca i32, align 4
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.absl::AlphaNum", align 8
  %21 = alloca %"class.absl::AlphaNum", align 8
  %22 = alloca %"class.absl::AlphaNum", align 8
  %23 = alloca %"class.absl::AlphaNum", align 8
  %24 = alloca %"class.absl::string_view", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 4
  %27 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %26, i8* %1, i64 %2) #14
  %28 = bitcast %"class.quic::QuicDataReader"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #14
  %29 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = bitcast %"class.quic::QuicDataReader"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false)
  %32 = load i8, i8* %30, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %39

34:                                               ; preds = %3
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  br label %42

39:                                               ; preds = %3
  %40 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %41 = zext i8 %32 to i64
  br label %42

42:                                               ; preds = %34, %39
  %43 = phi i8* [ %36, %34 ], [ %40, %39 ]
  %44 = phi i64 [ %38, %34 ], [ %41, %39 ]
  call void @_ZN4quic14QuicDataReaderC1EPKcmN6quiche10EndiannessE(%"class.quic::QuicDataReader"* nonnull %4, i8* %43, i64 %44, i32 1) #14
  %45 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 5
  %46 = load i32, i32* %45, align 8
  switch i32 %46, label %47 [
    i32 0, label %55
    i32 1, label %49
    i32 2, label %51
    i32 3, label %53
  ]

47:                                               ; preds = %42
  %48 = bitcast %"class.quic::QuicDataReader"* %4 to %"class.quiche::QuicheDataReader"*
  br label %414

49:                                               ; preds = %42
  %50 = bitcast %"class.quic::QuicDataReader"* %4 to %"class.quiche::QuicheDataReader"*
  br label %63

51:                                               ; preds = %42
  %52 = bitcast %"class.quic::QuicDataReader"* %4 to %"class.quiche::QuicheDataReader"*
  br label %135

53:                                               ; preds = %42
  %54 = bitcast %"class.quic::QuicDataReader"* %4 to %"class.quiche::QuicheDataReader"*
  br label %353

55:                                               ; preds = %42
  %56 = bitcast %"class.quic::QuicDataReader"* %4 to %"class.quiche::QuicheDataReader"*
  %57 = call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* nonnull %56) #14
  %58 = icmp ult i64 %57, 4
  br i1 %58, label %414, label %59

59:                                               ; preds = %55
  store i32 -1431655766, i32* %5, align 4
  %60 = call zeroext i1 @_ZN6quiche16QuicheDataReader7ReadTagEPj(%"class.quiche::QuicheDataReader"* nonnull %56, i32* nonnull %5) #14
  %61 = load i32, i32* %5, align 4
  %62 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 7, i32 0
  store i32 %61, i32* %62, align 8
  store i32 1, i32* %45, align 8
  br label %63

63:                                               ; preds = %49, %59
  %64 = phi %"class.quiche::QuicheDataReader"* [ %50, %49 ], [ %56, %59 ]
  %65 = call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* nonnull %64) #14
  %66 = icmp ult i64 %65, 4
  br i1 %66, label %414, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 9
  %69 = call zeroext i1 @_ZN6quiche16QuicheDataReader10ReadUInt16EPt(%"class.quiche::QuicheDataReader"* nonnull %64, i16* %68) #14
  %70 = load i16, i16* %68, align 8
  %71 = icmp ugt i16 %70, 128
  br i1 %71, label %72, label %99

72:                                               ; preds = %67
  %73 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #14
  %74 = bitcast %"class.absl::AlphaNum"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %74) #14
  %75 = zext i16 %70 to i32
  %76 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 1, i64 0
  %77 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32 %75, i8* %76) #14
  %78 = ptrtoint i8* %77 to i64
  %79 = ptrtoint i8* %76 to i64
  %80 = sub i64 %78, %79
  %81 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 0, i32 0
  store i8* %76, i8** %81, align 8
  %82 = icmp sgt i64 %80, -1
  br i1 %82, label %84, label %83, !prof !3

83:                                               ; preds = %72
  call void @llvm.trap() #14
  unreachable

84:                                               ; preds = %72
  %85 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 0, i32 1
  store i64 %80, i64* %85, align 8
  %86 = bitcast %"class.absl::AlphaNum"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %86) #14
  %87 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i8** %87, align 8
  %88 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 1
  store i64 8, i64* %88, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %6, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %7, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %8) #14
  %89 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 8
  %90 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %84
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  call void @_ZdlPv(i8* %96) #15
  br label %97

97:                                               ; preds = %94, %84
  %98 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* nonnull align 8 %73, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %86) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %74) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #14
  br label %454

99:                                               ; preds = %67
  store i16 -21846, i16* %9, align 2
  %100 = call zeroext i1 @_ZN6quiche16QuicheDataReader10ReadUInt16EPt(%"class.quiche::QuicheDataReader"* nonnull %64, i16* nonnull %9) #14
  %101 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11
  %102 = load i16, i16* %68, align 8
  %103 = zext i16 %102 to i64
  %104 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::pair"** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.std::__1::vector"* %101 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = sub i64 %106, %108
  %110 = ashr exact i64 %109, 4
  %111 = icmp ult i64 %110, %103
  br i1 %111, label %112, label %133

112:                                              ; preds = %99
  %113 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11, i32 0, i32 1
  %114 = bitcast %"struct.std::__1::pair"** %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = sub i64 %115, %108
  %117 = ashr exact i64 %116, 4
  %118 = shl nuw nsw i64 %103, 4
  %119 = call i8* @_Znwm(i64 %118) #15
  %120 = bitcast i8* %119 to %"struct.std::__1::pair"*
  %121 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %120, i64 %117
  %122 = ptrtoint %"struct.std::__1::pair"* %121 to i64
  %123 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %120, i64 %103
  %124 = ptrtoint %"struct.std::__1::pair"* %123 to i64
  %125 = ptrtoint i8* %119 to i64
  %126 = icmp sgt i64 %116, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %112
  %128 = inttoptr i64 %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %119, i8* align 8 %128, i64 %116, i1 false) #14
  br label %129

129:                                              ; preds = %127, %112
  store i64 %125, i64* %107, align 8
  store i64 %122, i64* %114, align 8
  store i64 %124, i64* %105, align 8
  %130 = icmp eq i64 %108, 0
  br i1 %130, label %133, label %131

131:                                              ; preds = %129
  %132 = inttoptr i64 %108 to i8*
  call void @_ZdlPv(i8* %132) #15
  br label %133

133:                                              ; preds = %99, %129, %131
  store i32 2, i32* %45, align 8
  %134 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 12
  store i64 0, i64* %134, align 8
  br label %135

135:                                              ; preds = %51, %133
  %136 = phi %"class.quiche::QuicheDataReader"* [ %52, %51 ], [ %64, %133 ]
  %137 = call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* nonnull %136) #14
  %138 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 9
  %139 = load i16, i16* %138, align 8
  %140 = zext i16 %139 to i64
  %141 = shl nuw nsw i64 %140, 3
  %142 = icmp ult i64 %137, %141
  br i1 %142, label %414, label %143

143:                                              ; preds = %135
  %144 = icmp eq i16 %139, 0
  br i1 %144, label %350, label %145

145:                                              ; preds = %143
  %146 = bitcast i32* %10 to i8*
  %147 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11, i32 0, i32 0
  %148 = bitcast i32* %18 to i8*
  %149 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11
  %150 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11, i32 0, i32 1
  %151 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %152 = bitcast %"struct.std::__1::pair"** %150 to i64*
  %153 = bitcast %"class.std::__1::vector"* %149 to i64*
  %154 = bitcast %"struct.std::__1::pair"** %151 to i64*
  %155 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %149, i64 0, i32 0, i32 0
  br label %156

156:                                              ; preds = %145, %342
  %157 = phi i64 [ 0, %145 ], [ %344, %342 ]
  %158 = phi i32 [ 0, %145 ], [ %343, %342 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %146) #14
  store i32 -1431655766, i32* %10, align 4
  %159 = call zeroext i1 @_ZN6quiche16QuicheDataReader7ReadTagEPj(%"class.quiche::QuicheDataReader"* nonnull %136, i32* nonnull %10) #14
  %160 = icmp eq i64 %157, 0
  br i1 %160, label %226, label %161

161:                                              ; preds = %156
  %162 = load i32, i32* %10, align 4
  %163 = add nuw i64 %157, 4294967295
  %164 = and i64 %163, 4294967295
  %165 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %147, align 8
  %166 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %165, i64 %164, i32 0
  %167 = load i32, i32* %166, align 8
  %168 = icmp ugt i32 %162, %167
  br i1 %168, label %226, label %169

169:                                              ; preds = %161
  %170 = icmp eq i32 %162, %167
  br i1 %170, label %171, label %197

171:                                              ; preds = %169
  %172 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %172) #14
  %173 = bitcast %"class.absl::AlphaNum"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %173) #14
  %174 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %12, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8** %174, align 8
  %175 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %12, i64 0, i32 0, i32 1
  store i64 14, i64* %175, align 8
  %176 = bitcast %"class.absl::AlphaNum"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %176) #14
  %177 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %13, i64 0, i32 1, i64 0
  %178 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32 %162, i8* %177) #14
  %179 = ptrtoint i8* %178 to i64
  %180 = ptrtoint i8* %177 to i64
  %181 = sub i64 %179, %180
  %182 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %13, i64 0, i32 0, i32 0
  store i8* %177, i8** %182, align 8
  %183 = icmp sgt i64 %181, -1
  br i1 %183, label %185, label %184, !prof !3

184:                                              ; preds = %171
  call void @llvm.trap() #14
  unreachable

185:                                              ; preds = %171
  %186 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %13, i64 0, i32 0, i32 1
  store i64 %181, i64* %186, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %11, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %12, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %13) #14
  %187 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 8
  %188 = bitcast %"class.std::__1::basic_string"* %187 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %188, i64 0, i32 1, i32 0
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %192, label %195

192:                                              ; preds = %185
  %193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load i8*, i8** %193, align 8
  call void @_ZdlPv(i8* %194) #15
  br label %195

195:                                              ; preds = %192, %185
  %196 = bitcast %"class.std::__1::basic_string"* %187 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %196, i8* nonnull align 8 %172, i64 24, i1 false) #14
  br label %335

197:                                              ; preds = %169
  %198 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %198) #14
  %199 = bitcast %"class.absl::AlphaNum"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %199) #14
  %200 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %15, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %200, align 8
  %201 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %15, i64 0, i32 0, i32 1
  store i64 4, i64* %201, align 8
  %202 = bitcast %"class.absl::AlphaNum"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %202) #14
  %203 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %16, i64 0, i32 1, i64 0
  %204 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32 %162, i8* %203) #14
  %205 = ptrtoint i8* %204 to i64
  %206 = ptrtoint i8* %203 to i64
  %207 = sub i64 %205, %206
  %208 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %16, i64 0, i32 0, i32 0
  store i8* %203, i8** %208, align 8
  %209 = icmp sgt i64 %207, -1
  br i1 %209, label %211, label %210, !prof !3

210:                                              ; preds = %197
  call void @llvm.trap() #14
  unreachable

211:                                              ; preds = %197
  %212 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %16, i64 0, i32 0, i32 1
  store i64 %207, i64* %212, align 8
  %213 = bitcast %"class.absl::AlphaNum"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %213) #14
  %214 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %17, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i8** %214, align 8
  %215 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %17, i64 0, i32 0, i32 1
  store i64 13, i64* %215, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* nonnull sret %14, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %15, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %16, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %17) #14
  %216 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 8
  %217 = bitcast %"class.std::__1::basic_string"* %216 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %218 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %217, i64 0, i32 1, i32 0
  %219 = load i8, i8* %218, align 1
  %220 = icmp slt i8 %219, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %211
  %222 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %216, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load i8*, i8** %222, align 8
  call void @_ZdlPv(i8* %223) #15
  br label %224

224:                                              ; preds = %221, %211
  %225 = bitcast %"class.std::__1::basic_string"* %216 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %225, i8* nonnull align 8 %198, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %213) #14
  br label %335

226:                                              ; preds = %161, %156
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %148) #14
  store i32 -1431655766, i32* %18, align 4
  %227 = call zeroext i1 @_ZN6quiche16QuicheDataReader10ReadUInt32EPj(%"class.quiche::QuicheDataReader"* nonnull %136, i32* nonnull %18) #14
  %228 = load i32, i32* %18, align 4
  %229 = icmp ult i32 %228, %158
  br i1 %229, label %230, label %268

230:                                              ; preds = %226
  %231 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %231) #14
  %232 = bitcast %"class.absl::AlphaNum"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %232) #14
  %233 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %20, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8** %233, align 8
  %234 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %20, i64 0, i32 0, i32 1
  store i64 12, i64* %234, align 8
  %235 = bitcast %"class.absl::AlphaNum"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %235) #14
  %236 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %21, i64 0, i32 1, i64 0
  %237 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32 %228, i8* %236) #14
  %238 = ptrtoint i8* %237 to i64
  %239 = ptrtoint i8* %236 to i64
  %240 = sub i64 %238, %239
  %241 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %21, i64 0, i32 0, i32 0
  store i8* %236, i8** %241, align 8
  %242 = icmp sgt i64 %240, -1
  br i1 %242, label %244, label %243, !prof !3

243:                                              ; preds = %230
  call void @llvm.trap() #14
  unreachable

244:                                              ; preds = %230
  %245 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %21, i64 0, i32 0, i32 1
  store i64 %240, i64* %245, align 8
  %246 = bitcast %"class.absl::AlphaNum"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %246) #14
  %247 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %22, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8** %247, align 8
  %248 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %22, i64 0, i32 0, i32 1
  store i64 4, i64* %248, align 8
  %249 = bitcast %"class.absl::AlphaNum"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %249) #14
  %250 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %23, i64 0, i32 1, i64 0
  %251 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32 %158, i8* %250) #14
  %252 = ptrtoint i8* %251 to i64
  %253 = ptrtoint i8* %250 to i64
  %254 = sub i64 %252, %253
  %255 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %23, i64 0, i32 0, i32 0
  store i8* %250, i8** %255, align 8
  %256 = icmp sgt i64 %254, -1
  br i1 %256, label %258, label %257, !prof !3

257:                                              ; preds = %244
  call void @llvm.trap() #14
  unreachable

258:                                              ; preds = %244
  %259 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %23, i64 0, i32 0, i32 1
  store i64 %254, i64* %259, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_S2_(%"class.std::__1::basic_string"* nonnull sret %19, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %20, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %21, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %22, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %23) #14
  %260 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 8
  %261 = bitcast %"class.std::__1::basic_string"* %260 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %262 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %261, i64 0, i32 1, i32 0
  %263 = load i8, i8* %262, align 1
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %340

265:                                              ; preds = %258
  %266 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %260, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load i8*, i8** %266, align 8
  call void @_ZdlPv(i8* %267) #15
  br label %340

268:                                              ; preds = %226
  %269 = sub i32 %228, %158
  %270 = zext i32 %269 to i64
  %271 = load i32, i32* %10, align 4
  %272 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %150, align 8
  %273 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %151, align 8
  %274 = icmp ult %"struct.std::__1::pair"* %272, %273
  %275 = ptrtoint %"struct.std::__1::pair"* %273 to i64
  br i1 %274, label %276, label %281

276:                                              ; preds = %268
  %277 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %272, i64 0, i32 0
  store i32 %271, i32* %277, align 8
  %278 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %272, i64 0, i32 1
  store i64 %270, i64* %278, align 8
  %279 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %272, i64 1
  %280 = ptrtoint %"struct.std::__1::pair"* %279 to i64
  store i64 %280, i64* %152, align 8
  br label %342

281:                                              ; preds = %268
  %282 = ptrtoint %"struct.std::__1::pair"* %272 to i64
  %283 = load i64, i64* %153, align 8
  %284 = sub i64 %282, %283
  %285 = ashr exact i64 %284, 4
  %286 = add nsw i64 %285, 1
  %287 = icmp ugt i64 %286, 1152921504606846975
  br i1 %287, label %288, label %290

288:                                              ; preds = %281
  %289 = bitcast %"class.std::__1::vector"* %149 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %289) #16
  unreachable

290:                                              ; preds = %281
  %291 = sub i64 %275, %283
  %292 = ashr exact i64 %291, 4
  %293 = icmp ult i64 %292, 576460752303423487
  br i1 %293, label %294, label %302

294:                                              ; preds = %290
  %295 = ashr exact i64 %291, 3
  %296 = icmp ult i64 %295, %286
  %297 = select i1 %296, i64 %286, i64 %295
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %307, label %299

299:                                              ; preds = %294
  %300 = icmp ugt i64 %297, 1152921504606846975
  br i1 %300, label %301, label %302

301:                                              ; preds = %299
  call void @abort() #16
  unreachable

302:                                              ; preds = %299, %290
  %303 = phi i64 [ %297, %299 ], [ 1152921504606846975, %290 ]
  %304 = shl i64 %303, 4
  %305 = call i8* @_Znwm(i64 %304) #15
  %306 = bitcast i8* %305 to %"struct.std::__1::pair"*
  br label %307

307:                                              ; preds = %302, %294
  %308 = phi i64 [ %303, %302 ], [ 0, %294 ]
  %309 = phi %"struct.std::__1::pair"* [ %306, %302 ], [ null, %294 ]
  %310 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %309, i64 %285
  %311 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %309, i64 %308
  %312 = ptrtoint %"struct.std::__1::pair"* %311 to i64
  %313 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %310, i64 0, i32 0
  store i32 %271, i32* %313, align 8
  %314 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %309, i64 %285, i32 1
  store i64 %270, i64* %314, align 8
  %315 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %310, i64 1
  %316 = ptrtoint %"struct.std::__1::pair"* %315 to i64
  %317 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %155, align 8
  %318 = load i64, i64* %152, align 8
  %319 = ptrtoint %"struct.std::__1::pair"* %317 to i64
  %320 = sub i64 %318, %319
  %321 = ashr exact i64 %320, 4
  %322 = sub nsw i64 0, %321
  %323 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %310, i64 %322
  %324 = ptrtoint %"struct.std::__1::pair"* %323 to i64
  %325 = icmp sgt i64 %320, 0
  br i1 %325, label %326, label %330

326:                                              ; preds = %307
  %327 = bitcast %"struct.std::__1::pair"* %323 to i8*
  %328 = bitcast %"struct.std::__1::pair"* %317 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %327, i8* align 8 %328, i64 %320, i1 false) #14
  %329 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %155, align 8
  br label %330

330:                                              ; preds = %326, %307
  %331 = phi %"struct.std::__1::pair"* [ %317, %307 ], [ %329, %326 ]
  store i64 %324, i64* %153, align 8
  store i64 %316, i64* %152, align 8
  store i64 %312, i64* %154, align 8
  %332 = icmp eq %"struct.std::__1::pair"* %331, null
  br i1 %332, label %342, label %333

333:                                              ; preds = %330
  %334 = bitcast %"struct.std::__1::pair"* %331 to i8*
  call void @_ZdlPv(i8* %334) #15
  br label %342

335:                                              ; preds = %195, %224
  %336 = phi i8* [ %176, %195 ], [ %202, %224 ]
  %337 = phi i8* [ %173, %195 ], [ %199, %224 ]
  %338 = phi i8* [ %172, %195 ], [ %198, %224 ]
  %339 = phi i32 [ 43, %195 ], [ 29, %224 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %336) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %337) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %338) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %146) #14
  br label %454

340:                                              ; preds = %258, %265
  %341 = bitcast %"class.std::__1::basic_string"* %260 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %341, i8* nonnull align 8 %231, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %249) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %246) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %235) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %232) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %231) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %148) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %146) #14
  br label %454

342:                                              ; preds = %333, %330, %276
  %343 = load i32, i32* %18, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %148) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %146) #14
  %344 = add nuw nsw i64 %157, 1
  %345 = load i16, i16* %138, align 8
  %346 = zext i16 %345 to i64
  %347 = icmp ult i64 %344, %346
  br i1 %347, label %156, label %348

348:                                              ; preds = %342
  %349 = zext i32 %343 to i64
  br label %350

350:                                              ; preds = %348, %143
  %351 = phi i64 [ 0, %143 ], [ %349, %348 ]
  %352 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 12
  store i64 %351, i64* %352, align 8
  store i32 3, i32* %45, align 8
  br label %353

353:                                              ; preds = %53, %350
  %354 = phi %"class.quiche::QuicheDataReader"* [ %54, %53 ], [ %136, %350 ]
  %355 = call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* nonnull %354) #14
  %356 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 12
  %357 = load i64, i64* %356, align 8
  %358 = icmp ult i64 %355, %357
  br i1 %358, label %359, label %363

359:                                              ; preds = %353
  %360 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 13
  %361 = load i8, i8* %360, align 8, !range !2
  %362 = icmp eq i8 %361, 0
  br i1 %362, label %414, label %363

363:                                              ; preds = %359, %353
  %364 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11
  %365 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %364, i64 0, i32 0, i32 0
  %366 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %365, align 8
  %367 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11, i32 0, i32 1
  %368 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %367, align 8
  %369 = icmp eq %"struct.std::__1::pair"* %366, %368
  br i1 %369, label %375, label %370

370:                                              ; preds = %363
  %371 = bitcast %"class.absl::string_view"* %24 to i8*
  %372 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %24, i64 0, i32 0
  %373 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %24, i64 0, i32 1
  %374 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 7
  br label %400

375:                                              ; preds = %411, %363
  %376 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 1
  %377 = load %"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramerVisitorInterface"** %376, align 8
  %378 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 7
  %379 = bitcast %"class.quic::CryptoFramerVisitorInterface"* %377 to void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoHandshakeMessage"*)***
  %380 = load void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoHandshakeMessage"*)**, void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoHandshakeMessage"*)*** %379, align 8
  %381 = getelementptr inbounds void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoHandshakeMessage"*)*, void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoHandshakeMessage"*)** %380, i64 3
  %382 = load void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoHandshakeMessage"*)*, void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoHandshakeMessage"*)** %381, align 8
  call void %382(%"class.quic::CryptoFramerVisitorInterface"* %377, %"class.quic::CryptoHandshakeMessage"* dereferenceable(48) %378) #14
  call void @_ZN4quic22CryptoHandshakeMessage5ClearEv(%"class.quic::CryptoHandshakeMessage"* %378) #14
  %383 = bitcast %"class.std::__1::vector"* %364 to i64*
  %384 = load i64, i64* %383, align 8
  %385 = bitcast %"struct.std::__1::pair"** %367 to i64*
  store i64 %384, i64* %385, align 8
  %386 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 2
  store i32 0, i32* %386, align 8
  %387 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 8
  %388 = bitcast %"class.std::__1::basic_string"* %387 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %389 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %388, i64 0, i32 1, i32 0
  %390 = load i8, i8* %389, align 1
  %391 = icmp slt i8 %390, 0
  br i1 %391, label %392, label %396

392:                                              ; preds = %375
  %393 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %393, align 8
  %394 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %387, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %395 = load i8*, i8** %394, align 8
  br label %398

396:                                              ; preds = %375
  store i8 0, i8* %389, align 1
  %397 = bitcast %"class.std::__1::basic_string"* %387 to i8*
  br label %398

398:                                              ; preds = %392, %396
  %399 = phi i8* [ %395, %392 ], [ %397, %396 ]
  store i8 0, i8* %399, align 1
  store i32 0, i32* %45, align 8
  br label %414

400:                                              ; preds = %370, %411
  %401 = phi %"struct.std::__1::pair"* [ %366, %370 ], [ %412, %411 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %371) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %371, i8 0, i64 16, i1 false) #14
  %402 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %401, i64 0, i32 1
  %403 = load i64, i64* %402, align 8
  %404 = call zeroext i1 @_ZN6quiche16QuicheDataReader15ReadStringPieceEPN4absl11string_viewEm(%"class.quiche::QuicheDataReader"* nonnull %354, %"class.absl::string_view"* nonnull %24, i64 %403) #14
  %405 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %401, i64 0, i32 0
  %406 = load i32, i32* %405, align 8
  br i1 %404, label %408, label %407

407:                                              ; preds = %400
  call void @_ZN4quic22CryptoHandshakeMessage14SetStringPieceEjN4absl11string_viewE(%"class.quic::CryptoHandshakeMessage"* %374, i32 %406, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #14
  br label %411

408:                                              ; preds = %400
  %409 = load i8*, i8** %372, align 8
  %410 = load i64, i64* %373, align 8
  call void @_ZN4quic22CryptoHandshakeMessage14SetStringPieceEjN4absl11string_viewE(%"class.quic::CryptoHandshakeMessage"* %374, i32 %406, i8* %409, i64 %410) #14
  br label %411

411:                                              ; preds = %407, %408
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %371) #14
  %412 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %401, i64 1
  %413 = icmp eq %"struct.std::__1::pair"* %412, %368
  br i1 %413, label %375, label %400

414:                                              ; preds = %47, %359, %135, %63, %55, %398
  %415 = phi %"class.quiche::QuicheDataReader"* [ %48, %47 ], [ %354, %359 ], [ %136, %135 ], [ %64, %63 ], [ %56, %55 ], [ %354, %398 ]
  %416 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %416) #14
  %417 = call { i8*, i64 } @_ZNK6quiche16QuicheDataReader20PeekRemainingPayloadEv(%"class.quiche::QuicheDataReader"* nonnull %415) #14
  %418 = extractvalue { i8*, i64 } %417, 0
  %419 = extractvalue { i8*, i64 } %417, 1
  %420 = icmp eq i8* %418, null
  br i1 %420, label %421, label %422

421:                                              ; preds = %414
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %416, i8 0, i64 24, i1 false) #14, !alias.scope !4
  br label %446

422:                                              ; preds = %414
  %423 = icmp ugt i64 %419, -17
  br i1 %423, label %424, label %426

424:                                              ; preds = %422
  %425 = bitcast %"class.std::__1::basic_string"* %25 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %425) #16
  unreachable

426:                                              ; preds = %422
  %427 = icmp ult i64 %419, 23
  br i1 %427, label %436, label %428

428:                                              ; preds = %426
  %429 = add nuw i64 %419, 16
  %430 = and i64 %429, -16
  %431 = call i8* @_Znwm(i64 %430) #15
  %432 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %431, i8** %432, align 8, !alias.scope !4
  %433 = or i64 %430, -9223372036854775808
  %434 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %433, i64* %434, align 8, !alias.scope !4
  %435 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %419, i64* %435, align 8, !alias.scope !4
  br label %441

436:                                              ; preds = %426
  %437 = trunc i64 %419 to i8
  %438 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %439 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %438, i64 0, i32 1, i32 0
  store i8 %437, i8* %439, align 1, !alias.scope !4
  %440 = icmp eq i64 %419, 0
  br i1 %440, label %443, label %441

441:                                              ; preds = %436, %428
  %442 = phi i8* [ %431, %428 ], [ %416, %436 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %442, i8* nonnull align 1 %418, i64 %419, i1 false) #14
  br label %443

443:                                              ; preds = %441, %436
  %444 = phi i8* [ %416, %436 ], [ %442, %441 ]
  %445 = getelementptr inbounds i8, i8* %444, i64 %419
  store i8 0, i8* %445, align 1
  br label %446

446:                                              ; preds = %421, %443
  %447 = load i8, i8* %30, align 1
  %448 = icmp slt i8 %447, 0
  br i1 %448, label %449, label %452

449:                                              ; preds = %446
  %450 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %451 = load i8*, i8** %450, align 8
  call void @_ZdlPv(i8* %451) #15
  br label %452

452:                                              ; preds = %449, %446
  %453 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %453, i8* nonnull align 8 %416, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %416) #14
  br label %454

454:                                              ; preds = %335, %340, %452, %97
  %455 = phi i32 [ 0, %452 ], [ 30, %97 ], [ %339, %335 ], [ 29, %340 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #14
  ret i32 %455
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic12CryptoFramer6HasTagEj(%"class.quic::CryptoFramer"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 3
  br i1 %5, label %6, label %20

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11, i32 0, i32 0
  %8 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %9 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11, i32 0, i32 1
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = icmp eq %"struct.std::__1::pair"* %8, %10
  br i1 %11, label %20, label %14

12:                                               ; preds = %14
  %13 = icmp eq %"struct.std::__1::pair"* %19, %10
  br i1 %13, label %20, label %14

14:                                               ; preds = %6, %12
  %15 = phi %"struct.std::__1::pair"* [ %19, %12 ], [ %8, %6 ]
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, %1
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 1
  br i1 %18, label %20, label %12

20:                                               ; preds = %12, %14, %6, %2
  %21 = phi i1 [ false, %2 ], [ false, %6 ], [ false, %12 ], [ true, %14 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12CryptoFramer14ForceHandshakeEv(%"class.quic::CryptoFramer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.quic::QuicDataReader", align 8
  %3 = alloca %"class.absl::string_view", align 8
  %4 = bitcast %"class.quic::QuicDataReader"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 4
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = bitcast %"class.quic::QuicDataReader"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = load i8, i8* %7, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  br label %19

16:                                               ; preds = %1
  %17 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %18 = zext i8 %9 to i64
  br label %19

19:                                               ; preds = %11, %16
  %20 = phi i8* [ %13, %11 ], [ %17, %16 ]
  %21 = phi i64 [ %15, %11 ], [ %18, %16 ]
  call void @_ZN4quic14QuicDataReaderC1EPKcmN6quiche10EndiannessE(%"class.quic::QuicDataReader"* nonnull %2, i8* %20, i64 %21, i32 1) #14
  %22 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11, i32 0, i32 0
  %23 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %22, align 8
  %24 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 11, i32 0, i32 1
  %25 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %24, align 8
  %26 = icmp eq %"struct.std::__1::pair"* %23, %25
  br i1 %26, label %48, label %27

27:                                               ; preds = %19
  %28 = bitcast %"class.absl::string_view"* %3 to i8*
  %29 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %3, i64 0, i32 0
  %30 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %3, i64 0, i32 1
  %31 = bitcast %"class.quic::QuicDataReader"* %2 to %"class.quiche::QuicheDataReader"*
  %32 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 7
  br label %33

33:                                               ; preds = %27, %40
  %34 = phi %"struct.std::__1::pair"* [ %23, %27 ], [ %46, %40 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 16, i1 false) #14
  %35 = call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* nonnull %31) #14
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = icmp ult i64 %35, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #14
  br label %48

40:                                               ; preds = %33
  %41 = call zeroext i1 @_ZN6quiche16QuicheDataReader15ReadStringPieceEPN4absl11string_viewEm(%"class.quiche::QuicheDataReader"* nonnull %31, %"class.absl::string_view"* nonnull %3, i64 %37) #14
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = load i8*, i8** %29, align 8
  %45 = load i64, i64* %30, align 8
  call void @_ZN4quic22CryptoHandshakeMessage14SetStringPieceEjN4absl11string_viewE(%"class.quic::CryptoHandshakeMessage"* %32, i32 %43, i8* %44, i64 %45) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #14
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 1
  %47 = icmp eq %"struct.std::__1::pair"* %46, %25
  br i1 %47, label %48, label %33

48:                                               ; preds = %40, %19, %39
  %49 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 1
  %50 = load %"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoFramerVisitorInterface"** %49, align 8
  %51 = getelementptr inbounds %"class.quic::CryptoFramer", %"class.quic::CryptoFramer"* %0, i64 0, i32 7
  %52 = bitcast %"class.quic::CryptoFramerVisitorInterface"* %50 to void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoHandshakeMessage"*)***
  %53 = load void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoHandshakeMessage"*)**, void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoHandshakeMessage"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoHandshakeMessage"*)*, void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoHandshakeMessage"*)** %53, i64 3
  %55 = load void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoHandshakeMessage"*)*, void (%"class.quic::CryptoFramerVisitorInterface"*, %"class.quic::CryptoHandshakeMessage"*)** %54, align 8
  call void %55(%"class.quic::CryptoFramerVisitorInterface"* %50, %"class.quic::CryptoHandshakeMessage"* dereferenceable(48) %51) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #14
  ret void
}

declare void @_ZN4quic14QuicDataReaderC1EPKcmN6quiche10EndiannessE(%"class.quic::QuicDataReader"*, i8*, i64, i32) unnamed_addr #1

declare i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"*) local_unnamed_addr #1

declare zeroext i1 @_ZN6quiche16QuicheDataReader15ReadStringPieceEPN4absl11string_viewEm(%"class.quiche::QuicheDataReader"*, %"class.absl::string_view"*, i64) local_unnamed_addr #1

declare void @_ZN4quic22CryptoHandshakeMessage14SetStringPieceEjN4absl11string_viewE(%"class.quic::CryptoHandshakeMessage"*, i32, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.quic::QuicData"* @_ZN4quic12CryptoFramer25ConstructHandshakeMessageERKNS_22CryptoHandshakeMessageE(%"class.quic::CryptoHandshakeMessage"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.quic::QuicDataWriter", align 8
  %3 = getelementptr inbounds %"class.quic::CryptoHandshakeMessage", %"class.quic::CryptoHandshakeMessage"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = tail call i64 @_ZNK4quic22CryptoHandshakeMessage4sizeEv(%"class.quic::CryptoHandshakeMessage"* %0) #14
  %6 = tail call i64 @_ZNK4quic22CryptoHandshakeMessage12minimum_sizeEv(%"class.quic::CryptoHandshakeMessage"* %0) #14
  %7 = icmp ult i64 %5, %6
  br i1 %7, label %8, label %17

8:                                                ; preds = %1
  %9 = add i64 %4, 1
  %10 = tail call i64 @_ZNK4quic22CryptoHandshakeMessage12minimum_sizeEv(%"class.quic::CryptoHandshakeMessage"* %0) #14
  %11 = sub i64 %10, %5
  %12 = icmp ugt i64 %11, 8
  %13 = add i64 %11, -8
  %14 = select i1 %12, i64 %13, i64 0
  %15 = add i64 %5, 8
  %16 = add i64 %15, %14
  br label %17

17:                                               ; preds = %8, %1
  %18 = phi i64 [ %16, %8 ], [ %5, %1 ]
  %19 = phi i64 [ %14, %8 ], [ 0, %1 ]
  %20 = phi i8 [ 1, %8 ], [ 0, %1 ]
  %21 = phi i64 [ %9, %8 ], [ %4, %1 ]
  %22 = icmp ugt i64 %21, 128
  br i1 %22, label %211, label %23

23:                                               ; preds = %17
  %24 = tail call i8* @_Znam(i64 %18) #15
  %25 = ptrtoint i8* %24 to i64
  %26 = bitcast %"class.quic::QuicDataWriter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #14
  %27 = bitcast %"class.quic::QuicDataWriter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 32, i1 false)
  call void @_ZN4quic14QuicDataWriterC1EmPcN6quiche10EndiannessE(%"class.quic::QuicDataWriter"* nonnull %2, i64 %18, i8* nonnull %24, i32 1) #14
  %28 = bitcast %"class.quic::QuicDataWriter"* %2 to %"class.quiche::QuicheDataWriter"*
  %29 = getelementptr inbounds %"class.quic::CryptoHandshakeMessage", %"class.quic::CryptoHandshakeMessage"* %0, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = call zeroext i1 @_ZN6quiche16QuicheDataWriter8WriteTagEj(%"class.quiche::QuicheDataWriter"* nonnull %28, i32 %30) #14
  br i1 %31, label %32, label %205

32:                                               ; preds = %23
  %33 = trunc i64 %21 to i16
  %34 = call zeroext i1 @_ZN6quiche16QuicheDataWriter11WriteUInt16Et(%"class.quiche::QuicheDataWriter"* nonnull %28, i16 zeroext %33) #14
  br i1 %34, label %35, label %205

35:                                               ; preds = %32
  %36 = call zeroext i1 @_ZN6quiche16QuicheDataWriter11WriteUInt16Et(%"class.quiche::QuicheDataWriter"* nonnull %28, i16 zeroext 0) #14
  br i1 %36, label %37, label %205

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.quic::CryptoHandshakeMessage", %"class.quic::CryptoHandshakeMessage"* %0, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %40 = getelementptr inbounds %"class.quic::CryptoHandshakeMessage", %"class.quic::CryptoHandshakeMessage"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %41 = icmp eq %"class.std::__1::__tree_end_node"* %39, %40
  br i1 %41, label %118, label %42

42:                                               ; preds = %37
  %43 = trunc i64 %19 to i32
  br label %44

44:                                               ; preds = %42, %115
  %45 = phi i8 [ %20, %42 ], [ %68, %115 ]
  %46 = phi i32 [ 0, %42 ], [ %85, %115 ]
  %47 = phi %"class.std::__1::__tree_end_node"* [ %39, %42 ], [ %116, %115 ]
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 4
  %49 = bitcast %"class.std::__1::__tree_end_node"* %48 to i32*
  %50 = load i32, i32* %49, align 8
  %51 = icmp ne i32 %50, 4473168
  %52 = and i8 %45, 1
  %53 = icmp eq i8 %52, 0
  %54 = or i1 %53, %51
  br i1 %54, label %55, label %205

55:                                               ; preds = %44
  %56 = icmp ult i32 %50, 4473169
  %57 = or i1 %53, %56
  br i1 %57, label %65, label %58

58:                                               ; preds = %55
  %59 = call zeroext i1 @_ZN6quiche16QuicheDataWriter8WriteTagEj(%"class.quiche::QuicheDataWriter"* nonnull %28, i32 4473168) #14
  br i1 %59, label %60, label %205

60:                                               ; preds = %58
  %61 = add i32 %46, %43
  %62 = call zeroext i1 @_ZN6quiche16QuicheDataWriter11WriteUInt32Ej(%"class.quiche::QuicheDataWriter"* nonnull %28, i32 %61) #14
  br i1 %62, label %63, label %205

63:                                               ; preds = %60
  %64 = load i32, i32* %49, align 8
  br label %65

65:                                               ; preds = %63, %55
  %66 = phi i32 [ %50, %55 ], [ %64, %63 ]
  %67 = phi i32 [ %46, %55 ], [ %61, %63 ]
  %68 = phi i8 [ %45, %55 ], [ 0, %63 ]
  %69 = call zeroext i1 @_ZN6quiche16QuicheDataWriter8WriteTagEj(%"class.quiche::QuicheDataWriter"* nonnull %28, i32 %66) #14
  br i1 %69, label %70, label %205

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 5
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 6
  %78 = bitcast %"class.std::__1::__tree_end_node"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  br label %82

80:                                               ; preds = %70
  %81 = zext i8 %74 to i64
  br label %82

82:                                               ; preds = %76, %80
  %83 = phi i64 [ %79, %76 ], [ %81, %80 ]
  %84 = trunc i64 %83 to i32
  %85 = add i32 %67, %84
  %86 = call zeroext i1 @_ZN6quiche16QuicheDataWriter11WriteUInt32Ej(%"class.quiche::QuicheDataWriter"* nonnull %28, i32 %85) #14
  br i1 %86, label %87, label %205

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 1, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, null
  br i1 %90, label %91, label %99

91:                                               ; preds = %87
  %92 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node_base"*
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 2
  %94 = bitcast %"class.std::__1::__tree_end_node"* %93 to %"class.std::__1::__tree_end_node"**
  %95 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %96 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %95, i64 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %92
  br i1 %98, label %115, label %106

99:                                               ; preds = %87, %99
  %100 = phi %"class.std::__1::__tree_node_base"* [ %102, %99 ], [ %89, %87 ]
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %100, i64 0, i32 0, i32 0
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node_base"* %102, null
  br i1 %103, label %104, label %99

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %100, i64 0, i32 0
  br label %115

106:                                              ; preds = %91, %106
  %107 = phi %"class.std::__1::__tree_end_node"** [ %110, %106 ], [ %94, %91 ]
  %108 = bitcast %"class.std::__1::__tree_end_node"** %107 to %"class.std::__1::__tree_node_base"**
  %109 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %108, align 8
  %110 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %109, i64 0, i32 2
  %111 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %110, align 8
  %112 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %111, i64 0, i32 0
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, %109
  br i1 %114, label %115, label %106

115:                                              ; preds = %106, %91, %104
  %116 = phi %"class.std::__1::__tree_end_node"* [ %105, %104 ], [ %95, %91 ], [ %111, %106 ]
  %117 = icmp eq %"class.std::__1::__tree_end_node"* %116, %40
  br i1 %117, label %118, label %44

118:                                              ; preds = %115, %37
  %119 = phi i32 [ 0, %37 ], [ %85, %115 ]
  %120 = phi i8 [ %20, %37 ], [ %68, %115 ]
  %121 = and i8 %120, 1
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %129, label %123

123:                                              ; preds = %118
  %124 = call zeroext i1 @_ZN6quiche16QuicheDataWriter8WriteTagEj(%"class.quiche::QuicheDataWriter"* nonnull %28, i32 4473168) #14
  br i1 %124, label %125, label %205

125:                                              ; preds = %123
  %126 = trunc i64 %19 to i32
  %127 = add i32 %119, %126
  %128 = call zeroext i1 @_ZN6quiche16QuicheDataWriter11WriteUInt32Ej(%"class.quiche::QuicheDataWriter"* nonnull %28, i32 %127) #14
  br i1 %128, label %129, label %205

129:                                              ; preds = %118, %125
  %130 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %131 = icmp eq %"class.std::__1::__tree_end_node"* %130, %40
  br i1 %131, label %195, label %132

132:                                              ; preds = %129, %192
  %133 = phi i8 [ %145, %192 ], [ %20, %129 ]
  %134 = phi %"class.std::__1::__tree_end_node"* [ %193, %192 ], [ %130, %129 ]
  %135 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 4
  %136 = bitcast %"class.std::__1::__tree_end_node"* %135 to i32*
  %137 = load i32, i32* %136, align 8
  %138 = icmp ult i32 %137, 4473169
  %139 = and i8 %133, 1
  %140 = icmp eq i8 %139, 0
  %141 = or i1 %140, %138
  br i1 %141, label %144, label %142

142:                                              ; preds = %132
  %143 = call zeroext i1 @_ZN6quiche16QuicheDataWriter17WriteRepeatedByteEhm(%"class.quiche::QuicheDataWriter"* nonnull %28, i8 zeroext 45, i64 %19) #14
  br i1 %143, label %144, label %205

144:                                              ; preds = %132, %142
  %145 = phi i8 [ 0, %142 ], [ %133, %132 ]
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 5
  %147 = bitcast %"class.std::__1::__tree_end_node"* %146 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %157

151:                                              ; preds = %144
  %152 = bitcast %"class.std::__1::__tree_end_node"* %146 to i8**
  %153 = load i8*, i8** %152, align 8
  %154 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 6
  %155 = bitcast %"class.std::__1::__tree_end_node"* %154 to i64*
  %156 = load i64, i64* %155, align 8
  br label %160

157:                                              ; preds = %144
  %158 = bitcast %"class.std::__1::__tree_end_node"* %146 to i8*
  %159 = zext i8 %149 to i64
  br label %160

160:                                              ; preds = %151, %157
  %161 = phi i8* [ %153, %151 ], [ %158, %157 ]
  %162 = phi i64 [ %156, %151 ], [ %159, %157 ]
  %163 = call zeroext i1 @_ZN6quiche16QuicheDataWriter10WriteBytesEPKvm(%"class.quiche::QuicheDataWriter"* nonnull %28, i8* %161, i64 %162) #14
  br i1 %163, label %164, label %205

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 1, i32 0
  %166 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %165, align 8
  %167 = icmp eq %"class.std::__1::__tree_node_base"* %166, null
  br i1 %167, label %168, label %176

168:                                              ; preds = %164
  %169 = bitcast %"class.std::__1::__tree_end_node"* %134 to %"class.std::__1::__tree_node_base"*
  %170 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 2
  %171 = bitcast %"class.std::__1::__tree_end_node"* %170 to %"class.std::__1::__tree_end_node"**
  %172 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %171, align 8
  %173 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %172, i64 0, i32 0
  %174 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %173, align 8
  %175 = icmp eq %"class.std::__1::__tree_node_base"* %174, %169
  br i1 %175, label %192, label %183

176:                                              ; preds = %164, %176
  %177 = phi %"class.std::__1::__tree_node_base"* [ %179, %176 ], [ %166, %164 ]
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %177, i64 0, i32 0, i32 0
  %179 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %178, align 8
  %180 = icmp eq %"class.std::__1::__tree_node_base"* %179, null
  br i1 %180, label %181, label %176

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %177, i64 0, i32 0
  br label %192

183:                                              ; preds = %168, %183
  %184 = phi %"class.std::__1::__tree_end_node"** [ %187, %183 ], [ %171, %168 ]
  %185 = bitcast %"class.std::__1::__tree_end_node"** %184 to %"class.std::__1::__tree_node_base"**
  %186 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %185, align 8
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %186, i64 0, i32 2
  %188 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %187, align 8
  %189 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %188, i64 0, i32 0
  %190 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %189, align 8
  %191 = icmp eq %"class.std::__1::__tree_node_base"* %190, %186
  br i1 %191, label %192, label %183

192:                                              ; preds = %183, %168, %181
  %193 = phi %"class.std::__1::__tree_end_node"* [ %182, %181 ], [ %172, %168 ], [ %188, %183 ]
  %194 = icmp eq %"class.std::__1::__tree_end_node"* %193, %40
  br i1 %194, label %195, label %132

195:                                              ; preds = %192, %129
  %196 = phi i8 [ %20, %129 ], [ %145, %192 ]
  %197 = and i8 %196, 1
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %201, label %199

199:                                              ; preds = %195
  %200 = call zeroext i1 @_ZN6quiche16QuicheDataWriter17WriteRepeatedByteEhm(%"class.quiche::QuicheDataWriter"* nonnull %28, i8 zeroext 45, i64 %19) #14
  br i1 %200, label %201, label %205

201:                                              ; preds = %195, %199
  %202 = call i8* @_Znwm(i64 32) #15
  %203 = bitcast i8* %202 to %"class.quic::QuicData"*
  call void @_ZN4quic8QuicDataC1EPKcmb(%"class.quic::QuicData"* nonnull %203, i8* nonnull %24, i64 %18, i1 zeroext true) #14
  %204 = ptrtoint i8* %202 to i64
  br label %205

205:                                              ; preds = %58, %82, %65, %60, %44, %160, %142, %123, %201, %125, %199, %35, %32, %23
  %206 = phi i64 [ %25, %23 ], [ %25, %32 ], [ %25, %35 ], [ 0, %201 ], [ %25, %125 ], [ %25, %199 ], [ %25, %123 ], [ %25, %142 ], [ %25, %160 ], [ %25, %44 ], [ %25, %60 ], [ %25, %65 ], [ %25, %82 ], [ %25, %58 ]
  %207 = phi i64 [ 0, %23 ], [ 0, %32 ], [ 0, %35 ], [ %204, %201 ], [ 0, %125 ], [ 0, %199 ], [ 0, %123 ], [ 0, %142 ], [ 0, %160 ], [ 0, %44 ], [ 0, %60 ], [ 0, %65 ], [ 0, %82 ], [ 0, %58 ]
  call void @_ZN4quic14QuicDataWriterD1Ev(%"class.quic::QuicDataWriter"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #14
  %208 = icmp eq i64 %206, 0
  br i1 %208, label %211, label %209

209:                                              ; preds = %205
  %210 = inttoptr i64 %206 to i8*
  call void @_ZdaPv(i8* nonnull %210) #15
  br label %211

211:                                              ; preds = %209, %205, %17
  %212 = phi i64 [ 0, %17 ], [ %207, %205 ], [ %207, %209 ]
  %213 = inttoptr i64 %212 to %"class.quic::QuicData"*
  ret %"class.quic::QuicData"* %213
}

declare i64 @_ZNK4quic22CryptoHandshakeMessage4sizeEv(%"class.quic::CryptoHandshakeMessage"*) local_unnamed_addr #1

declare i64 @_ZNK4quic22CryptoHandshakeMessage12minimum_sizeEv(%"class.quic::CryptoHandshakeMessage"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #9

declare void @_ZN4quic14QuicDataWriterC1EmPcN6quiche10EndiannessE(%"class.quic::QuicDataWriter"*, i64, i8*, i32) unnamed_addr #1

declare zeroext i1 @_ZN6quiche16QuicheDataWriter8WriteTagEj(%"class.quiche::QuicheDataWriter"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN6quiche16QuicheDataWriter11WriteUInt16Et(%"class.quiche::QuicheDataWriter"*, i16 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic12CryptoFramer11WritePadTagEPNS_14QuicDataWriterEmPj(%"class.quic::QuicDataWriter"*, i64, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.quic::QuicDataWriter"* %0 to %"class.quiche::QuicheDataWriter"*
  %5 = tail call zeroext i1 @_ZN6quiche16QuicheDataWriter8WriteTagEj(%"class.quiche::QuicheDataWriter"* %4, i32 4473168) #14
  br i1 %5, label %6, label %11

6:                                                ; preds = %3
  %7 = load i32, i32* %2, align 4
  %8 = trunc i64 %1 to i32
  %9 = add i32 %7, %8
  store i32 %9, i32* %2, align 4
  %10 = tail call zeroext i1 @_ZN6quiche16QuicheDataWriter11WriteUInt32Ej(%"class.quiche::QuicheDataWriter"* %4, i32 %9) #14
  br label %11

11:                                               ; preds = %6, %3
  %12 = phi i1 [ false, %3 ], [ %10, %6 ]
  ret i1 %12
}

declare zeroext i1 @_ZN6quiche16QuicheDataWriter11WriteUInt32Ej(%"class.quiche::QuicheDataWriter"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN6quiche16QuicheDataWriter17WriteRepeatedByteEhm(%"class.quiche::QuicheDataWriter"*, i8 zeroext, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN6quiche16QuicheDataWriter10WriteBytesEPKvm(%"class.quiche::QuicheDataWriter"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4quic14QuicDataWriterD1Ev(%"class.quic::QuicDataWriter"*) unnamed_addr #2

declare void @_ZN4quic22CryptoHandshakeMessage5ClearEv(%"class.quic::CryptoHandshakeMessage"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN6quiche16QuicheDataReader7ReadTagEPj(%"class.quiche::QuicheDataReader"*, i32*) local_unnamed_addr #1

declare zeroext i1 @_ZN6quiche16QuicheDataReader10ReadUInt16EPt(%"class.quiche::QuicheDataReader"*, i16*) local_unnamed_addr #1

declare void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* sret, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #1

declare void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* sret, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #1

declare zeroext i1 @_ZN6quiche16QuicheDataReader10ReadUInt32EPj(%"class.quiche::QuicheDataReader"*, i32*) local_unnamed_addr #1

declare void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_S2_(%"class.std::__1::basic_string"* sret, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #1

declare { i8*, i64 } @_ZNK6quiche16QuicheDataReader20PeekRemainingPayloadEv(%"class.quiche::QuicheDataReader"*) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4quic12_GLOBAL__N_114OneShotVisitorD0Ev(%"class.quic::(anonymous namespace)::OneShotVisitor"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.quic::(anonymous namespace)::OneShotVisitor", %"class.quic::(anonymous namespace)::OneShotVisitor"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4quic12_GLOBAL__N_114OneShotVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::(anonymous namespace)::OneShotVisitor", %"class.quic::(anonymous namespace)::OneShotVisitor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.quic::CryptoHandshakeMessage"*, %"class.quic::CryptoHandshakeMessage"** %3, align 8
  store %"class.quic::CryptoHandshakeMessage"* null, %"class.quic::CryptoHandshakeMessage"** %3, align 8
  %5 = icmp eq %"class.quic::CryptoHandshakeMessage"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN4quic22CryptoHandshakeMessageD1Ev(%"class.quic::CryptoHandshakeMessage"* nonnull %4) #14
  %7 = bitcast %"class.quic::CryptoHandshakeMessage"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.quic::(anonymous namespace)::OneShotVisitor"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #15
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN4quic12_GLOBAL__N_114OneShotVisitor7OnErrorEPNS_12CryptoFramerE(%"class.quic::(anonymous namespace)::OneShotVisitor"* nocapture, %"class.quic::CryptoFramer"* nocapture readnone) unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.quic::(anonymous namespace)::OneShotVisitor", %"class.quic::(anonymous namespace)::OneShotVisitor"* %0, i64 0, i32 2
  store i8 1, i8* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4quic12_GLOBAL__N_114OneShotVisitor18OnHandshakeMessageERKNS_22CryptoHandshakeMessageE(%"class.quic::(anonymous namespace)::OneShotVisitor"* nocapture, %"class.quic::CryptoHandshakeMessage"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 48) #15
  %4 = bitcast i8* %3 to %"class.quic::CryptoHandshakeMessage"*
  tail call void @_ZN4quic22CryptoHandshakeMessageC1ERKS0_(%"class.quic::CryptoHandshakeMessage"* nonnull %4, %"class.quic::CryptoHandshakeMessage"* dereferenceable(48) %1) #14
  %5 = ptrtoint i8* %3 to i64
  %6 = getelementptr inbounds %"class.quic::(anonymous namespace)::OneShotVisitor", %"class.quic::(anonymous namespace)::OneShotVisitor"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.17"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.quic::CryptoHandshakeMessage"*, %"class.quic::CryptoHandshakeMessage"** %7, align 8
  %9 = bitcast %"class.std::__1::unique_ptr.17"* %6 to i64*
  store i64 %5, i64* %9, align 8
  %10 = icmp eq %"class.quic::CryptoHandshakeMessage"* %8, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  tail call void @_ZN4quic22CryptoHandshakeMessageD1Ev(%"class.quic::CryptoHandshakeMessage"* nonnull %8) #14
  %12 = bitcast %"class.quic::CryptoHandshakeMessage"* %8 to i8*
  tail call void @_ZdlPv(i8* %12) #15
  br label %13

13:                                               ; preds = %11, %2
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN4quic22CryptoHandshakeMessageC1ERKS0_(%"class.quic::CryptoHandshakeMessage"*, %"class.quic::CryptoHandshakeMessage"* dereferenceable(48)) unnamed_addr #1

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32, i8*) local_unnamed_addr #1

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32, i8*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #12

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

declare void @_ZN4quic8QuicDataC1EPKcmb(%"class.quic::QuicData"*, i8*, i64, i1 zeroext) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!6 = distinct !{!6, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
