; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/ccp_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/ccp_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spvtools::opt::CCPPass" = type <{ %"class.spvtools::opt::MemPass", %"class.spvtools::opt::analysis::ConstantManager"*, %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.932", i32, [4 x i8] }>
%"class.spvtools::opt::MemPass" = type { %"class.spvtools::opt::Pass.base", [7 x i8], %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_map.249" }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::unordered_set.910" = type { %"class.std::__1::__hash_table.911" }
%"class.std::__1::__hash_table.911" = type <{ %"class.std::__1::unique_ptr.912", %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.929", [4 x i8] }>
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914", %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"struct.std::__1::__hash_node_base.915"** }
%"struct.std::__1::__hash_node_base.915" = type { %"struct.std::__1::__hash_node_base.915"* }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.std::__1::__bucket_list_deallocator.917" }
%"class.std::__1::__bucket_list_deallocator.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.915" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.932" = type { %"class.std::__1::__compressed_pair.933" }
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.spvtools::opt::SSAPropagator"* }
%"class.spvtools::opt::SSAPropagator" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::function.935", %"class.std::__1::queue", %"class.std::__1::queue.950", %"class.std::__1::unordered_set.963", %"class.std::__1::unordered_set.989", %"class.std::__1::unordered_map.1011", %"class.std::__1::unordered_map.1011", %"class.std::__1::set.1035", %"class.std::__1::unordered_map.1045" }
%"class.std::__1::function.935" = type { %"class.std::__1::__function::__policy_func.939" }
%"class.std::__1::__function::__policy_func.939" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.940", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.940" = type { i32 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::BasicBlock"**)* }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.946" }
%"struct.std::__1::__split_buffer" = type { %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"***, %"class.std::__1::__compressed_pair.941" }
%"class.std::__1::__compressed_pair.941" = type { %"struct.std::__1::__compressed_pair_elem.942" }
%"struct.std::__1::__compressed_pair_elem.942" = type { %"class.spvtools::opt::Instruction"*** }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::queue.950" = type { %"class.std::__1::deque.951" }
%"class.std::__1::deque.951" = type { %"class.std::__1::__deque_base.952" }
%"class.std::__1::__deque_base.952" = type { %"struct.std::__1::__split_buffer.953", i64, %"class.std::__1::__compressed_pair.959" }
%"struct.std::__1::__split_buffer.953" = type { %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"***, %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"class.spvtools::opt::BasicBlock"*** }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set.963" = type { %"class.std::__1::__hash_table.964" }
%"class.std::__1::__hash_table.964" = type <{ %"class.std::__1::unique_ptr.965", %"class.std::__1::__compressed_pair.975", %"class.std::__1::__compressed_pair.980", %"class.std::__1::__compressed_pair.984", [4 x i8] }>
%"class.std::__1::unique_ptr.965" = type { %"class.std::__1::__compressed_pair.966" }
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.967", %"struct.std::__1::__compressed_pair_elem.969" }
%"struct.std::__1::__compressed_pair_elem.967" = type { %"struct.std::__1::__hash_node_base.968"** }
%"struct.std::__1::__hash_node_base.968" = type { %"struct.std::__1::__hash_node_base.968"* }
%"struct.std::__1::__compressed_pair_elem.969" = type { %"class.std::__1::__bucket_list_deallocator.970" }
%"class.std::__1::__bucket_list_deallocator.970" = type { %"class.std::__1::__compressed_pair.971" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.976" }
%"struct.std::__1::__compressed_pair_elem.976" = type { %"struct.std::__1::__hash_node_base.968" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.989" = type { %"class.std::__1::__hash_table.990" }
%"class.std::__1::__hash_table.990" = type <{ %"class.std::__1::unique_ptr.991", %"class.std::__1::__compressed_pair.1001", %"class.std::__1::__compressed_pair.1006", %"class.std::__1::__compressed_pair.1008", [4 x i8] }>
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993", %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"struct.std::__1::__hash_node_base.994"** }
%"struct.std::__1::__hash_node_base.994" = type { %"struct.std::__1::__hash_node_base.994"* }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.std::__1::__bucket_list_deallocator.996" }
%"class.std::__1::__bucket_list_deallocator.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"struct.std::__1::__hash_node_base.994" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.1011" = type { %"class.std::__1::__hash_table.1012" }
%"class.std::__1::__hash_table.1012" = type <{ %"class.std::__1::unique_ptr.1013", %"class.std::__1::__compressed_pair.1023", %"class.std::__1::__compressed_pair.1028", %"class.std::__1::__compressed_pair.1031", [4 x i8] }>
%"class.std::__1::unique_ptr.1013" = type { %"class.std::__1::__compressed_pair.1014" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015", %"struct.std::__1::__compressed_pair_elem.1017" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"struct.std::__1::__hash_node_base.1016"** }
%"struct.std::__1::__hash_node_base.1016" = type { %"struct.std::__1::__hash_node_base.1016"* }
%"struct.std::__1::__compressed_pair_elem.1017" = type { %"class.std::__1::__bucket_list_deallocator.1018" }
%"class.std::__1::__bucket_list_deallocator.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"struct.std::__1::__hash_node_base.1016" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::set.1035" = type { %"class.std::__1::__tree.1036" }
%"class.std::__1::__tree.1036" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1037", %"class.std::__1::__compressed_pair.1041" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.1045" = type { %"class.std::__1::__hash_table.1046" }
%"class.std::__1::__hash_table.1046" = type <{ %"class.std::__1::unique_ptr.1047", %"class.std::__1::__compressed_pair.1057", %"class.std::__1::__compressed_pair.1062", %"class.std::__1::__compressed_pair.1065", [4 x i8] }>
%"class.std::__1::unique_ptr.1047" = type { %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049", %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"struct.std::__1::__hash_node_base.1050"** }
%"struct.std::__1::__hash_node_base.1050" = type { %"struct.std::__1::__hash_node_base.1050"* }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.std::__1::__bucket_list_deallocator.1052" }
%"class.std::__1::__bucket_list_deallocator.1052" = type { %"class.std::__1::__compressed_pair.1053" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"struct.std::__1::__hash_node_base.1050" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i32* }
%"class.std::__1::tuple.1126" = type { i8 }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::function.1072" = type { %"class.std::__1::__function::__policy_func.1076" }
%"class.std::__1::__function::__policy_func.1076" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1077", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1077" = type { i32 (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.std::__1::function.1078" = type { %"class.std::__1::__function::__policy_func.1082" }
%"class.std::__1::__function::__policy_func.1082" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1083", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1083" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.spvtools::opt::analysis::NullConstant" = type { %"class.spvtools::opt::analysis::Constant" }
%"class.spvtools::opt::analysis::BoolConstant" = type <{ %"class.spvtools::opt::analysis::ScalarConstant", i8, [7 x i8] }>
%"class.spvtools::opt::analysis::ScalarConstant" = type { %"class.spvtools::opt::analysis::Constant", %"class.std::__1::vector.3" }
%"class.spvtools::opt::analysis::IntConstant" = type { %"class.spvtools::opt::analysis::ScalarConstant" }
%"struct.std::__1::__hash_node.1121" = type { %"struct.std::__1::__hash_node_base.254", i64, %"struct.std::__1::__hash_value_type.1122" }
%"struct.std::__1::__hash_value_type.1122" = type { %"struct.std::__1::pair" }
%"class.std::__1::function.1086" = type { %"class.std::__1::__function::__policy_func.1090" }
%"class.std::__1::__function::__policy_func.1090" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1091", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1091" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.std::__1::function.1094" = type { %"class.std::__1::__function::__policy_func.1098" }
%"class.std::__1::__function::__policy_func.1098" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1099", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1099" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1120" }
%"struct.std::__1::pair.1120" = type <{ %"class.spvtools::opt::analysis::Constant"*, i32, [4 x i8] }>
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.std::__1::__tree_node.1145" = type { %"class.std::__1::__tree_node_base.base", %"struct.spvtools::opt::Edge" }
%"struct.spvtools::opt::Edge" = type { %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"* }

$_ZN8spvtools3opt9IRContext22get_instruction_folderEv = comdat any

$_ZN8spvtools3opt7CCPPassD2Ev = comdat any

$_ZN8spvtools3opt7CCPPassD0Ev = comdat any

$_ZNK8spvtools3opt7CCPPass4nameEv = comdat any

$_ZN8spvtools3opt7CCPPass20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt3CFGD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt8analysis15ConstantManagerD2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZN8spvtools3opt7MemPassD2Ev = comdat any

$_ZN8spvtools3opt7MemPassD0Ev = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZN8spvtools3opt13SSAPropagatorD2Ev = comdat any

$_ZNSt3__16__treeIN8spvtools3opt4EdgeENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt7MemPassE = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@_ZTVN8spvtools3opt7CCPPassE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::CCPPass"*)* @_ZN8spvtools3opt7CCPPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::CCPPass"*)* @_ZN8spvtools3opt7CCPPassD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::CCPPass"*)* @_ZNK8spvtools3opt7CCPPass4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::CCPPass"*)* @_ZN8spvtools3opt7CCPPass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::CCPPass"*)* @_ZN8spvtools3opt7CCPPass7ProcessEv to i8*)] }, align 8
@_ZTVN8spvtools3opt20ConstantFoldingRulesE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN8spvtools3opt12FoldingRulesE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt7MemPassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.1 = private unnamed_addr constant [4 x i8] c"ccp\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass15VisitAssignmentEPNS5_11InstructionEE3$_0FjjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass15VisitAssignmentEPNS5_11InstructionEE3$_1FbPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass15VisitAssignmentEPNS5_11InstructionEE3$_2FbPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass18PropagateConstantsEPNS5_8FunctionEE3$_3FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass18PropagateConstantsEPNS5_8FunctionEE3$_4FNS5_13SSAPropagator10PropStatusEPNS5_11InstructionEPPNS5_10BasicBlockEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass7ProcessEvE3$_5FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt7CCPPass14IsVaryingValueEj(%"class.spvtools::opt::CCPPass"* nocapture readnone, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, -1
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt7CCPPass22MarkInstructionVaryingEPNS0_11InstructionE(%"class.spvtools::opt::CCPPass"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1126", align 1
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = zext i8 %12 to i32
  %14 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %13) #11
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi i32 [ %14, %10 ], [ 0, %2 ]
  store i32 %16, i32* %5, align 4
  %17 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0
  %18 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %5, i32** %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::tuple.1126", %"class.std::__1::tuple.1126"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #11
  %21 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %17, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1126"* nonnull dereferenceable(1) %4) #11
  %22 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %21, 0
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %22, i64 2
  %24 = bitcast %"struct.std::__1::__hash_node_base.254"* %23 to %"struct.std::__1::pair"*
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  store i32 -1, i32* %25, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #11
  ret i32 2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt7CCPPass8VisitPhiEPNS0_11InstructionE(%"class.spvtools::opt::CCPPass"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1126", align 1
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple.1126", align 1
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::tuple", align 8
  %10 = alloca %"class.std::__1::tuple.1126", align 1
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %14 = bitcast %"struct.spvtools::opt::Operand"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = sdiv exact i64 %18, 48
  %20 = trunc i64 %19 to i32
  %21 = icmp ugt i32 %20, 2
  br i1 %21, label %22, label %166

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %26

26:                                               ; preds = %22, %134
  %27 = phi i32 [ 2, %22 ], [ %136, %134 ]
  %28 = phi i32 [ 0, %22 ], [ %135, %134 ]
  %29 = load %"class.spvtools::opt::SSAPropagator"*, %"class.spvtools::opt::SSAPropagator"** %23, align 8
  %30 = tail call zeroext i1 @_ZNK8spvtools3opt13SSAPropagator18IsPhiArgExecutableEPNS0_11InstructionEj(%"class.spvtools::opt::SSAPropagator"* %29, %"class.spvtools::opt::Instruction"* %1, i32 %27) #11
  br i1 %30, label %31, label %134

31:                                               ; preds = %26
  %32 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %27) #11
  %33 = zext i32 %32 to i64
  %34 = load i64, i64* %24, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %134, label %36

36:                                               ; preds = %31
  %37 = tail call i64 @llvm.ctpop.i64(i64 %34) #11, !range !3
  %38 = icmp ugt i64 %37, 1
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = add i64 %34, 4294967295
  %41 = and i64 %40, %33
  br label %46

42:                                               ; preds = %36
  %43 = icmp ugt i64 %34, %33
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %33, %34
  br label %46

46:                                               ; preds = %44, %42, %39
  %47 = phi i64 [ %41, %39 ], [ %45, %44 ], [ %33, %42 ]
  %48 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %25, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %48, i64 %47
  %50 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %49, align 8
  %51 = icmp eq %"struct.std::__1::__hash_node_base.254"* %50, null
  br i1 %51, label %134, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %50, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.254"* %54, null
  br i1 %55, label %134, label %56

56:                                               ; preds = %52
  %57 = add i64 %34, -1
  br label %58

58:                                               ; preds = %79, %56
  %59 = phi %"struct.std::__1::__hash_node_base.254"* [ %54, %56 ], [ %81, %79 ]
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %59, i64 1
  %61 = bitcast %"struct.std::__1::__hash_node_base.254"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, %33
  br i1 %63, label %74, label %64

64:                                               ; preds = %58
  br i1 %38, label %67, label %65

65:                                               ; preds = %64
  %66 = and i64 %62, %57
  br label %71

67:                                               ; preds = %64
  %68 = icmp ult i64 %62, %34
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = urem i64 %62, %34
  br label %71

71:                                               ; preds = %69, %67, %65
  %72 = phi i64 [ %66, %65 ], [ %70, %69 ], [ %62, %67 ]
  %73 = icmp eq i64 %72, %47
  br i1 %73, label %79, label %134

74:                                               ; preds = %58
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %59, i64 2
  %76 = bitcast %"struct.std::__1::__hash_node_base.254"* %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, %32
  br i1 %78, label %83, label %79

79:                                               ; preds = %74, %71
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %59, i64 0, i32 0
  %81 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %80, align 8
  %82 = icmp eq %"struct.std::__1::__hash_node_base.254"* %81, null
  br i1 %82, label %134, label %58

83:                                               ; preds = %74
  %84 = bitcast %"struct.std::__1::__hash_node_base.254"* %75 to %"struct.std::__1::pair"*
  %85 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %84, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, -1
  br i1 %87, label %88, label %109

88:                                               ; preds = %83
  %89 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89) #11
  %90 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %91 = load i8, i8* %90, align 1, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %98, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %95 = load i8, i8* %94, align 4, !range !2
  %96 = zext i8 %95 to i32
  %97 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %96) #11
  br label %98

98:                                               ; preds = %88, %93
  %99 = phi i32 [ %97, %93 ], [ 0, %88 ]
  store i32 %99, i32* %5, align 4
  %100 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0
  %101 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #11
  %102 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %5, i32** %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::tuple.1126", %"class.std::__1::tuple.1126"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %103) #11
  %104 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %100, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1126"* nonnull dereferenceable(1) %4) #11
  %105 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %104, 0
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %105, i64 2
  %107 = bitcast %"struct.std::__1::__hash_node_base.254"* %106 to %"struct.std::__1::pair"*
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %107, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %103) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #11
  store i32 -1, i32* %108, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #11
  br label %166

109:                                              ; preds = %83
  %110 = icmp eq i32 %28, 0
  br i1 %110, label %134, label %111

111:                                              ; preds = %109
  %112 = icmp eq i32 %86, %28
  br i1 %112, label %134, label %113

113:                                              ; preds = %111
  %114 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #11
  %115 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %116 = load i8, i8* %115, align 1, !range !2
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %123, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %120 = load i8, i8* %119, align 4, !range !2
  %121 = zext i8 %120 to i32
  %122 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %121) #11
  br label %123

123:                                              ; preds = %113, %118
  %124 = phi i32 [ %122, %118 ], [ 0, %113 ]
  store i32 %124, i32* %8, align 4
  %125 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0
  %126 = bitcast %"class.std::__1::tuple"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #11
  %127 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::tuple.1126", %"class.std::__1::tuple.1126"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %128) #11
  %129 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %125, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1126"* nonnull dereferenceable(1) %7) #11
  %130 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %129, 0
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %130, i64 2
  %132 = bitcast %"struct.std::__1::__hash_node_base.254"* %131 to %"struct.std::__1::pair"*
  %133 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %132, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %128) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #11
  store i32 -1, i32* %133, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #11
  br label %166

134:                                              ; preds = %79, %71, %52, %31, %46, %111, %109, %26
  %135 = phi i32 [ %28, %26 ], [ %28, %111 ], [ %86, %109 ], [ %28, %46 ], [ %28, %31 ], [ %28, %52 ], [ %28, %71 ], [ %28, %79 ]
  %136 = add i32 %27, 2
  %137 = load i64, i64* %14, align 8
  %138 = load i64, i64* %16, align 8
  %139 = sub i64 %137, %138
  %140 = sdiv exact i64 %139, 48
  %141 = trunc i64 %140 to i32
  %142 = icmp ult i32 %136, %141
  br i1 %142, label %26, label %143

143:                                              ; preds = %134
  %144 = icmp eq i32 %135, 0
  br i1 %144, label %166, label %145

145:                                              ; preds = %143
  %146 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %146) #11
  %147 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %148 = load i8, i8* %147, align 1, !range !2
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %155, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %152 = load i8, i8* %151, align 4, !range !2
  %153 = zext i8 %152 to i32
  %154 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %153) #11
  br label %155

155:                                              ; preds = %145, %150
  %156 = phi i32 [ %154, %150 ], [ 0, %145 ]
  store i32 %156, i32* %11, align 4
  %157 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0
  %158 = bitcast %"class.std::__1::tuple"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #11
  %159 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %159, align 8
  %160 = getelementptr inbounds %"class.std::__1::tuple.1126", %"class.std::__1::tuple.1126"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %160) #11
  %161 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %157, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.1126"* nonnull dereferenceable(1) %10) #11
  %162 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %161, 0
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %162, i64 2
  %164 = bitcast %"struct.std::__1::__hash_node_base.254"* %163 to %"struct.std::__1::pair"*
  %165 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %164, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %160) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #11
  store i32 %135, i32* %165, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %146) #11
  br label %166

166:                                              ; preds = %2, %98, %123, %143, %155
  %167 = phi i32 [ 1, %155 ], [ 0, %143 ], [ 2, %123 ], [ 2, %98 ], [ 0, %2 ]
  ret i32 %167
}

declare zeroext i1 @_ZNK8spvtools3opt13SSAPropagator18IsPhiArgExecutableEPNS0_11InstructionEj(%"class.spvtools::opt::SSAPropagator"*, %"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #3

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt7CCPPass15VisitAssignmentEPNS0_11InstructionE(%"class.spvtools::opt::CCPPass"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1126", align 1
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.1126", align 1
  %7 = alloca i32, align 4
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"class.std::__1::tuple.1126", align 1
  %10 = alloca %"class.std::__1::tuple", align 8
  %11 = alloca %"class.std::__1::tuple.1126", align 1
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::__1::tuple", align 8
  %14 = alloca %"class.std::__1::tuple.1126", align 1
  %15 = alloca i32, align 4
  %16 = alloca %"class.std::__1::tuple", align 8
  %17 = alloca %"class.std::__1::tuple.1126", align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %"class.std::__1::function.1072", align 8
  %21 = alloca i32, align 4
  %22 = alloca %"class.std::__1::function.1078", align 8
  %23 = alloca %"class.std::__1::function.1078", align 8
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 83
  br i1 %26, label %27, label %135

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %29 = load i8, i8* %28, align 4, !range !2
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %32 = load i8, i8* %31, align 1, !range !2
  %33 = icmp eq i8 %32, 0
  %34 = select i1 %33, i32 1, i32 2
  %35 = xor i1 %33, true
  %36 = zext i1 %35 to i32
  %37 = select i1 %30, i32 %36, i32 %34
  %38 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %37) #11
  %39 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2
  %40 = zext i32 %38 to i64
  %41 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %333, label %44

44:                                               ; preds = %27
  %45 = tail call i64 @llvm.ctpop.i64(i64 %42) #11, !range !3
  %46 = icmp ugt i64 %45, 1
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = add i64 %42, 4294967295
  %49 = and i64 %48, %40
  br label %54

50:                                               ; preds = %44
  %51 = icmp ugt i64 %42, %40
  br i1 %51, label %54, label %52

52:                                               ; preds = %50
  %53 = urem i64 %40, %42
  br label %54

54:                                               ; preds = %52, %50, %47
  %55 = phi i64 [ %49, %47 ], [ %53, %52 ], [ %40, %50 ]
  %56 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %57, i64 %55
  %59 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %58, align 8
  %60 = icmp eq %"struct.std::__1::__hash_node_base.254"* %59, null
  br i1 %60, label %333, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %59, i64 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.254"* %63, null
  br i1 %64, label %333, label %65

65:                                               ; preds = %61
  %66 = add i64 %42, -1
  br label %67

67:                                               ; preds = %88, %65
  %68 = phi %"struct.std::__1::__hash_node_base.254"* [ %63, %65 ], [ %90, %88 ]
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %68, i64 1
  %70 = bitcast %"struct.std::__1::__hash_node_base.254"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, %40
  br i1 %72, label %83, label %73

73:                                               ; preds = %67
  br i1 %46, label %76, label %74

74:                                               ; preds = %73
  %75 = and i64 %71, %66
  br label %80

76:                                               ; preds = %73
  %77 = icmp ult i64 %71, %42
  br i1 %77, label %80, label %78

78:                                               ; preds = %76
  %79 = urem i64 %71, %42
  br label %80

80:                                               ; preds = %78, %76, %74
  %81 = phi i64 [ %75, %74 ], [ %79, %78 ], [ %71, %76 ]
  %82 = icmp eq i64 %81, %55
  br i1 %82, label %88, label %333

83:                                               ; preds = %67
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %68, i64 2
  %85 = bitcast %"struct.std::__1::__hash_node_base.254"* %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, %38
  br i1 %87, label %92, label %88

88:                                               ; preds = %83, %80
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %68, i64 0, i32 0
  %90 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %89, align 8
  %91 = icmp eq %"struct.std::__1::__hash_node_base.254"* %90, null
  br i1 %91, label %333, label %67

92:                                               ; preds = %83
  %93 = bitcast %"struct.std::__1::__hash_node_base.254"* %84 to %"struct.std::__1::pair"*
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, -1
  br i1 %96, label %97, label %116

97:                                               ; preds = %92
  %98 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %98) #11
  %99 = load i8, i8* %31, align 1, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %105, label %101

101:                                              ; preds = %97
  %102 = load i8, i8* %28, align 4, !range !2
  %103 = zext i8 %102 to i32
  %104 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %103) #11
  br label %105

105:                                              ; preds = %97, %101
  %106 = phi i32 [ %104, %101 ], [ 0, %97 ]
  store i32 %106, i32* %12, align 4
  %107 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0
  %108 = bitcast %"class.std::__1::tuple"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #11
  %109 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0
  store i32* %12, i32** %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::tuple.1126", %"class.std::__1::tuple.1126"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %110) #11
  %111 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %107, i32* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %10, %"class.std::__1::tuple.1126"* nonnull dereferenceable(1) %11) #11
  %112 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %111, 0
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %112, i64 2
  %114 = bitcast %"struct.std::__1::__hash_node_base.254"* %113 to %"struct.std::__1::pair"*
  %115 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %114, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %110) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #11
  store i32 -1, i32* %115, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #11
  br label %333

116:                                              ; preds = %92
  %117 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117) #11
  %118 = load i8, i8* %31, align 1, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %124, label %120

120:                                              ; preds = %116
  %121 = load i8, i8* %28, align 4, !range !2
  %122 = zext i8 %121 to i32
  %123 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %122) #11
  br label %124

124:                                              ; preds = %116, %120
  %125 = phi i32 [ %123, %120 ], [ 0, %116 ]
  store i32 %125, i32* %19, align 4
  %126 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %39, i64 0, i32 0
  %127 = bitcast %"class.std::__1::tuple"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #11
  %128 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  store i32* %19, i32** %128, align 8
  %129 = getelementptr inbounds %"class.std::__1::tuple.1126", %"class.std::__1::tuple.1126"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %129) #11
  %130 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %126, i32* nonnull dereferenceable(4) %19, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.1126"* nonnull dereferenceable(1) %9) #11
  %131 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %130, 0
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %131, i64 2
  %133 = bitcast %"struct.std::__1::__hash_node_base.254"* %132 to %"struct.std::__1::pair"*
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %133, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %129) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #11
  store i32 %95, i32* %134, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117) #11
  br label %333

135:                                              ; preds = %2
  %136 = tail call zeroext i1 @_ZNK8spvtools3opt11Instruction10IsFoldableEv(%"class.spvtools::opt::Instruction"* %1) #11
  br i1 %136, label %158, label %137

137:                                              ; preds = %135
  %138 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %138) #11
  %139 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %140 = load i8, i8* %139, align 1, !range !2
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %147, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %144 = load i8, i8* %143, align 4, !range !2
  %145 = zext i8 %144 to i32
  %146 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %145) #11
  br label %147

147:                                              ; preds = %137, %142
  %148 = phi i32 [ %146, %142 ], [ 0, %137 ]
  store i32 %148, i32* %7, align 4
  %149 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0
  %150 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #11
  %151 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %7, i32** %151, align 8
  %152 = getelementptr inbounds %"class.std::__1::tuple.1126", %"class.std::__1::tuple.1126"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %152) #11
  %153 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %149, i32* nonnull dereferenceable(4) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1126"* nonnull dereferenceable(1) %6) #11
  %154 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %153, 0
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %154, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.254"* %155 to %"struct.std::__1::pair"*
  %157 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %156, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %152) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #11
  store i32 -1, i32* %157, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138) #11
  br label %333

158:                                              ; preds = %135
  %159 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 0, i32 0, i32 2
  %160 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %159, align 8
  %161 = tail call dereferenceable(24) %"class.spvtools::opt::InstructionFolder"* @_ZN8spvtools3opt9IRContext22get_instruction_folderEv(%"class.spvtools::opt::IRContext"* %160)
  %162 = ptrtoint %"class.spvtools::opt::CCPPass"* %0 to i64
  %163 = getelementptr inbounds %"class.std::__1::function.1072", %"class.std::__1::function.1072"* %20, i64 0, i32 0, i32 1, i32 0
  %164 = getelementptr inbounds %"class.std::__1::function.1072", %"class.std::__1::function.1072"* %20, i64 0, i32 0, i32 2
  store i32 (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFjjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass15VisitAssignmentEPNS7_11InstructionEE3$_0S2_EEEEjPKNS0_16__policy_storageEj", i32 (%"union.std::__1::__function::__policy_storage"*, i32)** %163, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass15VisitAssignmentEPNS5_11InstructionEE3$_0FjjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %164, align 8
  %165 = bitcast %"class.std::__1::function.1072"* %20 to i64*
  store i64 %162, i64* %165, align 8
  %166 = call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt17InstructionFolder25FoldInstructionToConstantEPNS0_11InstructionENSt3__18functionIFjjEEE(%"class.spvtools::opt::InstructionFolder"* %161, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::function.1072"* nonnull %20) #11
  %167 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %164, align 8
  %168 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %167, i64 0, i32 1
  %169 = load void (i8*)*, void (i8*)** %168, align 8
  %170 = icmp eq void (i8*)* %169, null
  br i1 %170, label %174, label %171

171:                                              ; preds = %158
  %172 = getelementptr inbounds %"class.std::__1::function.1072", %"class.std::__1::function.1072"* %20, i64 0, i32 0, i32 0, i32 0
  %173 = load i8*, i8** %172, align 8
  call void %169(i8* %173) #11
  br label %174

174:                                              ; preds = %158, %171
  %175 = icmp eq %"class.spvtools::opt::Instruction"* %166, null
  br i1 %175, label %207, label %176

176:                                              ; preds = %174
  %177 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %166, i64 0, i32 4
  %178 = load i8, i8* %177, align 1, !range !2
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %185, label %180

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %166, i64 0, i32 3
  %182 = load i8, i8* %181, align 4, !range !2
  %183 = zext i8 %182 to i32
  %184 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %166, i32 %183) #11
  br label %185

185:                                              ; preds = %176, %180
  %186 = phi i32 [ %184, %180 ], [ 0, %176 ]
  %187 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %187) #11
  %188 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %189 = load i8, i8* %188, align 1, !range !2
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %196, label %191

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %193 = load i8, i8* %192, align 4, !range !2
  %194 = zext i8 %193 to i32
  %195 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %194) #11
  br label %196

196:                                              ; preds = %185, %191
  %197 = phi i32 [ %195, %191 ], [ 0, %185 ]
  store i32 %197, i32* %21, align 4
  %198 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0
  %199 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %199) #11
  %200 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %21, i32** %200, align 8
  %201 = getelementptr inbounds %"class.std::__1::tuple.1126", %"class.std::__1::tuple.1126"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %201) #11
  %202 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %198, i32* nonnull dereferenceable(4) %21, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1126"* nonnull dereferenceable(1) %4) #11
  %203 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %202, 0
  %204 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %203, i64 2
  %205 = bitcast %"struct.std::__1::__hash_node_base.254"* %204 to %"struct.std::__1::pair"*
  %206 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %205, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %201) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %199) #11
  store i32 %186, i32* %206, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %187) #11
  br label %333

207:                                              ; preds = %174
  %208 = bitcast %"class.std::__1::function.1078"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %208) #11
  %209 = getelementptr inbounds %"class.std::__1::function.1078", %"class.std::__1::function.1078"* %22, i64 0, i32 0, i32 1, i32 0
  %210 = getelementptr inbounds %"class.std::__1::function.1078", %"class.std::__1::function.1078"* %22, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass15VisitAssignmentEPNS8_11InstructionEE3$_1S3_EEEEbPKNS0_16__policy_storageES2_", i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %209, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass15VisitAssignmentEPNS5_11InstructionEE3$_1FbPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %210, align 8
  %211 = bitcast %"class.std::__1::function.1078"* %22 to i64*
  store i64 %162, i64* %211, align 8
  %212 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %213 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %212, align 8
  %214 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %215 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %214, align 8
  %216 = icmp eq %"struct.spvtools::opt::Operand"* %213, %215
  br i1 %216, label %240, label %217

217:                                              ; preds = %207
  %218 = getelementptr inbounds %"class.std::__1::function.1078", %"class.std::__1::function.1078"* %22, i64 0, i32 0, i32 0
  br label %219

219:                                              ; preds = %234, %217
  %220 = phi %"struct.spvtools::opt::Operand"* [ %213, %217 ], [ %235, %234 ]
  %221 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %220, i64 0, i32 0
  %222 = load i32, i32* %221, align 8
  %223 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %222) #11
  br i1 %223, label %224, label %234

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %220, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %226 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %225, align 8
  %227 = icmp eq %"class.std::__1::vector.3"* %226, null
  %228 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %226, i64 0, i32 0, i32 0
  %229 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %220, i64 0, i32 1, i32 2
  %230 = select i1 %227, i32** %229, i32** %228
  %231 = load i32*, i32** %230, align 8
  %232 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %209, align 8
  %233 = call zeroext i1 %232(%"union.std::__1::__function::__policy_storage"* nonnull %218, i32* %231) #11
  br i1 %233, label %234, label %237

234:                                              ; preds = %224, %219
  %235 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %220, i64 1
  %236 = icmp eq %"struct.spvtools::opt::Operand"* %235, %215
  br i1 %236, label %237, label %219

237:                                              ; preds = %234, %224
  %238 = phi i1 [ true, %234 ], [ false, %224 ]
  %239 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %210, align 8
  br label %240

240:                                              ; preds = %237, %207
  %241 = phi %"struct.std::__1::__function::__policy"* [ @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass15VisitAssignmentEPNS5_11InstructionEE3$_1FbPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %207 ], [ %239, %237 ]
  %242 = phi i1 [ true, %207 ], [ %238, %237 ]
  %243 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %241, i64 0, i32 1
  %244 = load void (i8*)*, void (i8*)** %243, align 8
  %245 = icmp eq void (i8*)* %244, null
  br i1 %245, label %249, label %246

246:                                              ; preds = %240
  %247 = getelementptr inbounds %"class.std::__1::function.1078", %"class.std::__1::function.1078"* %22, i64 0, i32 0, i32 0, i32 0
  %248 = load i8*, i8** %247, align 8
  call void %244(i8* %248) #11
  br label %249

249:                                              ; preds = %240, %246
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %208) #11
  br i1 %242, label %271, label %250

250:                                              ; preds = %249
  %251 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %251) #11
  %252 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %253 = load i8, i8* %252, align 1, !range !2
  %254 = icmp eq i8 %253, 0
  br i1 %254, label %260, label %255

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %257 = load i8, i8* %256, align 4, !range !2
  %258 = zext i8 %257 to i32
  %259 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %258) #11
  br label %260

260:                                              ; preds = %250, %255
  %261 = phi i32 [ %259, %255 ], [ 0, %250 ]
  store i32 %261, i32* %15, align 4
  %262 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0
  %263 = bitcast %"class.std::__1::tuple"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %263) #11
  %264 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0
  store i32* %15, i32** %264, align 8
  %265 = getelementptr inbounds %"class.std::__1::tuple.1126", %"class.std::__1::tuple.1126"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %265) #11
  %266 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %262, i32* nonnull dereferenceable(4) %15, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %13, %"class.std::__1::tuple.1126"* nonnull dereferenceable(1) %14) #11
  %267 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %266, 0
  %268 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %267, i64 2
  %269 = bitcast %"struct.std::__1::__hash_node_base.254"* %268 to %"struct.std::__1::pair"*
  %270 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %269, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %265) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %263) #11
  store i32 -1, i32* %270, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %251) #11
  br label %333

271:                                              ; preds = %249
  %272 = bitcast %"class.std::__1::function.1078"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %272) #11
  %273 = getelementptr inbounds %"class.std::__1::function.1078", %"class.std::__1::function.1078"* %23, i64 0, i32 0, i32 1, i32 0
  %274 = getelementptr inbounds %"class.std::__1::function.1078", %"class.std::__1::function.1078"* %23, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass15VisitAssignmentEPNS8_11InstructionEE3$_2S3_EEEEbPKNS0_16__policy_storageES2_", i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %273, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass15VisitAssignmentEPNS5_11InstructionEE3$_2FbPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %274, align 8
  %275 = bitcast %"class.std::__1::function.1078"* %23 to i64*
  store i64 %162, i64* %275, align 8
  %276 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %212, align 8
  %277 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %214, align 8
  %278 = icmp eq %"struct.spvtools::opt::Operand"* %276, %277
  br i1 %278, label %302, label %279

279:                                              ; preds = %271
  %280 = getelementptr inbounds %"class.std::__1::function.1078", %"class.std::__1::function.1078"* %23, i64 0, i32 0, i32 0
  br label %281

281:                                              ; preds = %296, %279
  %282 = phi %"struct.spvtools::opt::Operand"* [ %276, %279 ], [ %297, %296 ]
  %283 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %282, i64 0, i32 0
  %284 = load i32, i32* %283, align 8
  %285 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %284) #11
  br i1 %285, label %286, label %296

286:                                              ; preds = %281
  %287 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %282, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %288 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %287, align 8
  %289 = icmp eq %"class.std::__1::vector.3"* %288, null
  %290 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %288, i64 0, i32 0, i32 0
  %291 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %282, i64 0, i32 1, i32 2
  %292 = select i1 %289, i32** %291, i32** %290
  %293 = load i32*, i32** %292, align 8
  %294 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %273, align 8
  %295 = call zeroext i1 %294(%"union.std::__1::__function::__policy_storage"* nonnull %280, i32* %293) #11
  br i1 %295, label %296, label %299

296:                                              ; preds = %286, %281
  %297 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %282, i64 1
  %298 = icmp eq %"struct.spvtools::opt::Operand"* %297, %277
  br i1 %298, label %299, label %281

299:                                              ; preds = %296, %286
  %300 = phi i1 [ true, %296 ], [ false, %286 ]
  %301 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %274, align 8
  br label %302

302:                                              ; preds = %299, %271
  %303 = phi %"struct.std::__1::__function::__policy"* [ @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass15VisitAssignmentEPNS5_11InstructionEE3$_2FbPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %271 ], [ %301, %299 ]
  %304 = phi i1 [ true, %271 ], [ %300, %299 ]
  %305 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %303, i64 0, i32 1
  %306 = load void (i8*)*, void (i8*)** %305, align 8
  %307 = icmp eq void (i8*)* %306, null
  br i1 %307, label %311, label %308

308:                                              ; preds = %302
  %309 = getelementptr inbounds %"class.std::__1::function.1078", %"class.std::__1::function.1078"* %23, i64 0, i32 0, i32 0, i32 0
  %310 = load i8*, i8** %309, align 8
  call void %306(i8* %310) #11
  br label %311

311:                                              ; preds = %302, %308
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %272) #11
  br i1 %304, label %312, label %333

312:                                              ; preds = %311
  %313 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %313) #11
  %314 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %315 = load i8, i8* %314, align 1, !range !2
  %316 = icmp eq i8 %315, 0
  br i1 %316, label %322, label %317

317:                                              ; preds = %312
  %318 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %319 = load i8, i8* %318, align 4, !range !2
  %320 = zext i8 %319 to i32
  %321 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %320) #11
  br label %322

322:                                              ; preds = %312, %317
  %323 = phi i32 [ %321, %317 ], [ 0, %312 ]
  store i32 %323, i32* %18, align 4
  %324 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0
  %325 = bitcast %"class.std::__1::tuple"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %325) #11
  %326 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %16, i64 0, i32 0, i32 0, i32 0
  store i32* %18, i32** %326, align 8
  %327 = getelementptr inbounds %"class.std::__1::tuple.1126", %"class.std::__1::tuple.1126"* %17, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %327) #11
  %328 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %324, i32* nonnull dereferenceable(4) %18, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %16, %"class.std::__1::tuple.1126"* nonnull dereferenceable(1) %17) #11
  %329 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %328, 0
  %330 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %329, i64 2
  %331 = bitcast %"struct.std::__1::__hash_node_base.254"* %330 to %"struct.std::__1::pair"*
  %332 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %331, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %327) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %325) #11
  store i32 -1, i32* %332, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %313) #11
  br label %333

333:                                              ; preds = %88, %80, %61, %27, %54, %105, %124, %196, %260, %322, %311, %147
  %334 = phi i32 [ 2, %147 ], [ 1, %196 ], [ 2, %260 ], [ 2, %322 ], [ 0, %311 ], [ 2, %105 ], [ 1, %124 ], [ 0, %54 ], [ 0, %27 ], [ 0, %61 ], [ 0, %80 ], [ 0, %88 ]
  ret i32 %334
}

declare zeroext i1 @_ZNK8spvtools3opt11Instruction10IsFoldableEv(%"class.spvtools::opt::Instruction"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.spvtools::opt::InstructionFolder"* @_ZN8spvtools3opt9IRContext22get_instruction_folderEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 26
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.754"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.spvtools::opt::InstructionFolder"*, %"class.spvtools::opt::InstructionFolder"** %3, align 8
  %5 = icmp eq %"class.spvtools::opt::InstructionFolder"* %4, null
  br i1 %5, label %6, label %71

6:                                                ; preds = %1
  %7 = ptrtoint %"class.spvtools::opt::IRContext"* %0 to i64
  %8 = tail call i8* @_Znwm(i64 24) #12
  %9 = bitcast i8* %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = tail call i8* @_Znwm(i64 104) #12
  %12 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8spvtools3opt20ConstantFoldingRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = getelementptr inbounds i8, i8* %11, i64 40
  %15 = bitcast i8* %14 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %11, i64 56
  %17 = getelementptr inbounds i8, i8* %11, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #11
  %18 = bitcast i8* %17 to i8**
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %11, i64 72
  %20 = bitcast i8* %19 to i64*
  store i64 %7, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %11, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #11
  %22 = ptrtoint i8* %11 to i64
  %23 = bitcast i8* %10 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %8, i64 16
  %25 = tail call i8* @_Znwm(i64 104) #12
  %26 = bitcast i8* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8spvtools3opt12FoldingRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 8
  %28 = getelementptr inbounds i8, i8* %25, i64 40
  %29 = bitcast i8* %28 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %25, i64 56
  %31 = getelementptr inbounds i8, i8* %25, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #11
  %32 = bitcast i8* %31 to i8**
  store i8* %30, i8** %32, align 8
  %33 = getelementptr inbounds i8, i8* %25, i64 72
  %34 = bitcast i8* %33 to i64*
  store i64 %7, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %25, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #11
  %36 = ptrtoint i8* %25 to i64
  %37 = bitcast i8* %24 to i64*
  store i64 %36, i64* %37, align 8
  %38 = bitcast i8* %25 to %"class.spvtools::opt::FoldingRules"*
  %39 = load void (%"class.spvtools::opt::FoldingRules"*)*, void (%"class.spvtools::opt::FoldingRules"*)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8spvtools3opt12FoldingRulesE, i64 0, inrange i32 0, i64 4) to void (%"class.spvtools::opt::FoldingRules"*)**), align 8
  tail call void %39(%"class.spvtools::opt::FoldingRules"* nonnull %38) #11
  %40 = bitcast i8* %11 to %"class.spvtools::opt::ConstantFoldingRules"*
  %41 = bitcast i8* %11 to void (%"class.spvtools::opt::ConstantFoldingRules"*)***
  %42 = load void (%"class.spvtools::opt::ConstantFoldingRules"*)**, void (%"class.spvtools::opt::ConstantFoldingRules"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.spvtools::opt::ConstantFoldingRules"*)*, void (%"class.spvtools::opt::ConstantFoldingRules"*)** %42, i64 2
  %44 = load void (%"class.spvtools::opt::ConstantFoldingRules"*)*, void (%"class.spvtools::opt::ConstantFoldingRules"*)** %43, align 8
  tail call void %44(%"class.spvtools::opt::ConstantFoldingRules"* nonnull %40) #11
  %45 = ptrtoint i8* %8 to i64
  %46 = load %"class.spvtools::opt::InstructionFolder"*, %"class.spvtools::opt::InstructionFolder"** %3, align 8
  %47 = bitcast %"class.std::__1::unique_ptr.754"* %2 to i64*
  store i64 %45, i64* %47, align 8
  %48 = icmp eq %"class.spvtools::opt::InstructionFolder"* %46, null
  %49 = bitcast i8* %8 to %"class.spvtools::opt::InstructionFolder"*
  br i1 %48, label %71, label %50

50:                                               ; preds = %6
  %51 = getelementptr inbounds %"class.spvtools::opt::InstructionFolder", %"class.spvtools::opt::InstructionFolder"* %46, i64 0, i32 2, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::FoldingRules"*, %"class.spvtools::opt::FoldingRules"** %51, align 8
  store %"class.spvtools::opt::FoldingRules"* null, %"class.spvtools::opt::FoldingRules"** %51, align 8
  %53 = icmp eq %"class.spvtools::opt::FoldingRules"* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.spvtools::opt::FoldingRules"* %52 to void (%"class.spvtools::opt::FoldingRules"*)***
  %56 = load void (%"class.spvtools::opt::FoldingRules"*)**, void (%"class.spvtools::opt::FoldingRules"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.spvtools::opt::FoldingRules"*)*, void (%"class.spvtools::opt::FoldingRules"*)** %56, i64 1
  %58 = load void (%"class.spvtools::opt::FoldingRules"*)*, void (%"class.spvtools::opt::FoldingRules"*)** %57, align 8
  tail call void %58(%"class.spvtools::opt::FoldingRules"* nonnull %52) #11
  br label %59

59:                                               ; preds = %54, %50
  %60 = getelementptr inbounds %"class.spvtools::opt::InstructionFolder", %"class.spvtools::opt::InstructionFolder"* %46, i64 0, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.spvtools::opt::ConstantFoldingRules"*, %"class.spvtools::opt::ConstantFoldingRules"** %60, align 8
  store %"class.spvtools::opt::ConstantFoldingRules"* null, %"class.spvtools::opt::ConstantFoldingRules"** %60, align 8
  %62 = icmp eq %"class.spvtools::opt::ConstantFoldingRules"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %59
  %64 = bitcast %"class.spvtools::opt::ConstantFoldingRules"* %61 to void (%"class.spvtools::opt::ConstantFoldingRules"*)***
  %65 = load void (%"class.spvtools::opt::ConstantFoldingRules"*)**, void (%"class.spvtools::opt::ConstantFoldingRules"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.spvtools::opt::ConstantFoldingRules"*)*, void (%"class.spvtools::opt::ConstantFoldingRules"*)** %65, i64 1
  %67 = load void (%"class.spvtools::opt::ConstantFoldingRules"*)*, void (%"class.spvtools::opt::ConstantFoldingRules"*)** %66, align 8
  tail call void %67(%"class.spvtools::opt::ConstantFoldingRules"* nonnull %61) #11
  br label %68

68:                                               ; preds = %63, %59
  %69 = bitcast %"class.spvtools::opt::InstructionFolder"* %46 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  %70 = load %"class.spvtools::opt::InstructionFolder"*, %"class.spvtools::opt::InstructionFolder"** %3, align 8
  br label %71

71:                                               ; preds = %1, %6, %68
  %72 = phi %"class.spvtools::opt::InstructionFolder"* [ %4, %1 ], [ %49, %6 ], [ %70, %68 ]
  ret %"class.spvtools::opt::InstructionFolder"* %72
}

declare %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt17InstructionFolder25FoldInstructionToConstantEPNS0_11InstructionENSt3__18functionIFjjEEE(%"class.spvtools::opt::InstructionFolder"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.1072"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8spvtools3opt7CCPPass11VisitBranchEPNS0_11InstructionEPPNS0_10BasicBlockE(%"class.spvtools::opt::CCPPass"* nocapture readonly, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::BasicBlock"** nocapture) local_unnamed_addr #1 align 2 {
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %160 [
    i32 249, label %6
    i32 250, label %18
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  %13 = select i1 %12, i32 1, i32 2
  %14 = xor i1 %12, true
  %15 = zext i1 %14 to i32
  %16 = select i1 %9, i32 %15, i32 %13
  %17 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %16) #11
  br label %345

18:                                               ; preds = %3
  %19 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %430, label %24

24:                                               ; preds = %18
  %25 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, 4294967295
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ugt i64 %22, %20
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %32, %30, %27
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.254"* %39, null
  br i1 %40, label %430, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.254"* %43, null
  br i1 %44, label %430, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  br label %47

47:                                               ; preds = %68, %45
  %48 = phi %"struct.std::__1::__hash_node_base.254"* [ %43, %45 ], [ %70, %68 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.254"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %20
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %46
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %22
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %22
  br label %60

60:                                               ; preds = %58, %56, %54
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %68, label %430

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %48, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.254"* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %19
  br i1 %67, label %72, label %68

68:                                               ; preds = %63, %60
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %48, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.254"* %70, null
  br i1 %71, label %430, label %47

72:                                               ; preds = %63
  %73 = bitcast %"struct.std::__1::__hash_node_base.254"* %64 to %"struct.std::__1::pair"*
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %430, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 1
  %79 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %78, align 8
  %80 = zext i32 %75 to i64
  %81 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %79, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %137, label %84

84:                                               ; preds = %77
  %85 = tail call i64 @llvm.ctpop.i64(i64 %82) #11, !range !3
  %86 = icmp ugt i64 %85, 1
  br i1 %86, label %90, label %87

87:                                               ; preds = %84
  %88 = add i64 %82, 4294967295
  %89 = and i64 %88, %80
  br label %94

90:                                               ; preds = %84
  %91 = icmp ugt i64 %82, %80
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = urem i64 %80, %82
  br label %94

94:                                               ; preds = %92, %90, %87
  %95 = phi i64 [ %89, %87 ], [ %93, %92 ], [ %80, %90 ]
  %96 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %79, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %96, align 8
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %97, i64 %95
  %99 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.408"* %99, null
  br i1 %100, label %137, label %101

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %99, i64 0, i32 0
  %103 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %102, align 8
  %104 = icmp eq %"struct.std::__1::__hash_node_base.408"* %103, null
  br i1 %104, label %137, label %105

105:                                              ; preds = %101
  %106 = add i64 %82, -1
  br label %107

107:                                              ; preds = %128, %105
  %108 = phi %"struct.std::__1::__hash_node_base.408"* [ %103, %105 ], [ %130, %128 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %108, i64 1
  %110 = bitcast %"struct.std::__1::__hash_node_base.408"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = icmp eq i64 %111, %80
  br i1 %112, label %123, label %113

113:                                              ; preds = %107
  br i1 %86, label %116, label %114

114:                                              ; preds = %113
  %115 = and i64 %111, %106
  br label %120

116:                                              ; preds = %113
  %117 = icmp ult i64 %111, %82
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = urem i64 %111, %82
  br label %120

120:                                              ; preds = %118, %116, %114
  %121 = phi i64 [ %115, %114 ], [ %119, %118 ], [ %111, %116 ]
  %122 = icmp eq i64 %121, %95
  br i1 %122, label %128, label %137

123:                                              ; preds = %107
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %108, i64 2
  %125 = bitcast %"struct.std::__1::__hash_node_base.408"* %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, %75
  br i1 %127, label %132, label %128

128:                                              ; preds = %123, %120
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %108, i64 0, i32 0
  %130 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %129, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base.408"* %130, null
  br i1 %131, label %137, label %107

132:                                              ; preds = %123
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %108, i64 3
  %134 = bitcast %"struct.std::__1::__hash_node_base.408"* %133 to %"class.spvtools::opt::analysis::Constant"**
  %135 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %134, align 8
  %136 = bitcast %"class.spvtools::opt::analysis::Constant"* %135 to %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  br label %137

137:                                              ; preds = %120, %128, %77, %94, %101, %132
  %138 = phi %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** [ %136, %132 ], [ null, %94 ], [ null, %77 ], [ null, %101 ], [ null, %128 ], [ null, %120 ]
  %139 = phi %"class.spvtools::opt::analysis::Constant"* [ %135, %132 ], [ null, %94 ], [ null, %77 ], [ null, %101 ], [ null, %128 ], [ null, %120 ]
  %140 = load %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %138, align 8
  %141 = getelementptr inbounds %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %140, i64 22
  %142 = load %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %141, align 8
  %143 = tail call %"class.spvtools::opt::analysis::NullConstant"* %142(%"class.spvtools::opt::analysis::Constant"* %139) #11
  %144 = icmp eq %"class.spvtools::opt::analysis::NullConstant"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %137
  %146 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 2) #11
  br label %345

147:                                              ; preds = %137
  %148 = bitcast %"class.spvtools::opt::analysis::Constant"* %139 to %"class.spvtools::opt::analysis::BoolConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %149 = load %"class.spvtools::opt::analysis::BoolConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::BoolConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %148, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::analysis::BoolConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::BoolConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %149, i64 16
  %151 = load %"class.spvtools::opt::analysis::BoolConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::BoolConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %150, align 8
  %152 = tail call %"class.spvtools::opt::analysis::BoolConstant"* %151(%"class.spvtools::opt::analysis::Constant"* %139) #11
  %153 = getelementptr inbounds %"class.spvtools::opt::analysis::BoolConstant", %"class.spvtools::opt::analysis::BoolConstant"* %152, i64 0, i32 1
  %154 = load i8, i8* %153, align 8, !range !2
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %158, label %156

156:                                              ; preds = %147
  %157 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 1) #11
  br label %345

158:                                              ; preds = %147
  %159 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 2) #11
  br label %345

160:                                              ; preds = %3
  %161 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %162 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %161, align 8
  %163 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %162, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %164 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %163, align 8
  %165 = icmp eq %"class.std::__1::vector.3"* %164, null
  br i1 %165, label %166, label %169

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %162, i64 0, i32 1, i32 1
  %168 = load i64, i64* %167, align 8
  br label %177

169:                                              ; preds = %160
  %170 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %164, i64 0, i32 0, i32 1
  %171 = bitcast i32** %170 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = bitcast %"class.std::__1::vector.3"* %164 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %172, %174
  %176 = ashr exact i64 %175, 2
  br label %177

177:                                              ; preds = %166, %169
  %178 = phi i64 [ %176, %169 ], [ %168, %166 ]
  %179 = icmp eq i64 %178, 1
  br i1 %179, label %180, label %430

180:                                              ; preds = %177
  %181 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  %182 = zext i32 %181 to i64
  %183 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %184 = load i64, i64* %183, align 8
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %430, label %186

186:                                              ; preds = %180
  %187 = tail call i64 @llvm.ctpop.i64(i64 %184) #11, !range !3
  %188 = icmp ugt i64 %187, 1
  br i1 %188, label %192, label %189

189:                                              ; preds = %186
  %190 = add i64 %184, 4294967295
  %191 = and i64 %190, %182
  br label %196

192:                                              ; preds = %186
  %193 = icmp ugt i64 %184, %182
  br i1 %193, label %196, label %194

194:                                              ; preds = %192
  %195 = urem i64 %182, %184
  br label %196

196:                                              ; preds = %194, %192, %189
  %197 = phi i64 [ %191, %189 ], [ %195, %194 ], [ %182, %192 ]
  %198 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %198, align 8
  %200 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %199, i64 %197
  %201 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %200, align 8
  %202 = icmp eq %"struct.std::__1::__hash_node_base.254"* %201, null
  br i1 %202, label %430, label %203

203:                                              ; preds = %196
  %204 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %201, i64 0, i32 0
  %205 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %204, align 8
  %206 = icmp eq %"struct.std::__1::__hash_node_base.254"* %205, null
  br i1 %206, label %430, label %207

207:                                              ; preds = %203
  %208 = add i64 %184, -1
  br label %209

209:                                              ; preds = %230, %207
  %210 = phi %"struct.std::__1::__hash_node_base.254"* [ %205, %207 ], [ %232, %230 ]
  %211 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %210, i64 1
  %212 = bitcast %"struct.std::__1::__hash_node_base.254"* %211 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = icmp eq i64 %213, %182
  br i1 %214, label %225, label %215

215:                                              ; preds = %209
  br i1 %188, label %218, label %216

216:                                              ; preds = %215
  %217 = and i64 %213, %208
  br label %222

218:                                              ; preds = %215
  %219 = icmp ult i64 %213, %184
  br i1 %219, label %222, label %220

220:                                              ; preds = %218
  %221 = urem i64 %213, %184
  br label %222

222:                                              ; preds = %220, %218, %216
  %223 = phi i64 [ %217, %216 ], [ %221, %220 ], [ %213, %218 ]
  %224 = icmp eq i64 %223, %197
  br i1 %224, label %230, label %430

225:                                              ; preds = %209
  %226 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %210, i64 2
  %227 = bitcast %"struct.std::__1::__hash_node_base.254"* %226 to i32*
  %228 = load i32, i32* %227, align 4
  %229 = icmp eq i32 %228, %181
  br i1 %229, label %234, label %230

230:                                              ; preds = %225, %222
  %231 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %210, i64 0, i32 0
  %232 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %231, align 8
  %233 = icmp eq %"struct.std::__1::__hash_node_base.254"* %232, null
  br i1 %233, label %430, label %209

234:                                              ; preds = %225
  %235 = bitcast %"struct.std::__1::__hash_node_base.254"* %226 to %"struct.std::__1::pair"*
  %236 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %235, i64 0, i32 1
  %237 = load i32, i32* %236, align 4
  %238 = icmp eq i32 %237, -1
  br i1 %238, label %430, label %239

239:                                              ; preds = %234
  %240 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 1
  %241 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %240, align 8
  %242 = zext i32 %237 to i64
  %243 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %241, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %244 = load i64, i64* %243, align 8
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %299, label %246

246:                                              ; preds = %239
  %247 = tail call i64 @llvm.ctpop.i64(i64 %244) #11, !range !3
  %248 = icmp ugt i64 %247, 1
  br i1 %248, label %252, label %249

249:                                              ; preds = %246
  %250 = add i64 %244, 4294967295
  %251 = and i64 %250, %242
  br label %256

252:                                              ; preds = %246
  %253 = icmp ugt i64 %244, %242
  br i1 %253, label %256, label %254

254:                                              ; preds = %252
  %255 = urem i64 %242, %244
  br label %256

256:                                              ; preds = %254, %252, %249
  %257 = phi i64 [ %251, %249 ], [ %255, %254 ], [ %242, %252 ]
  %258 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %241, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %258, align 8
  %260 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %259, i64 %257
  %261 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %260, align 8
  %262 = icmp eq %"struct.std::__1::__hash_node_base.408"* %261, null
  br i1 %262, label %299, label %263

263:                                              ; preds = %256
  %264 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %261, i64 0, i32 0
  %265 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %264, align 8
  %266 = icmp eq %"struct.std::__1::__hash_node_base.408"* %265, null
  br i1 %266, label %299, label %267

267:                                              ; preds = %263
  %268 = add i64 %244, -1
  br label %269

269:                                              ; preds = %290, %267
  %270 = phi %"struct.std::__1::__hash_node_base.408"* [ %265, %267 ], [ %292, %290 ]
  %271 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %270, i64 1
  %272 = bitcast %"struct.std::__1::__hash_node_base.408"* %271 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = icmp eq i64 %273, %242
  br i1 %274, label %285, label %275

275:                                              ; preds = %269
  br i1 %248, label %278, label %276

276:                                              ; preds = %275
  %277 = and i64 %273, %268
  br label %282

278:                                              ; preds = %275
  %279 = icmp ult i64 %273, %244
  br i1 %279, label %282, label %280

280:                                              ; preds = %278
  %281 = urem i64 %273, %244
  br label %282

282:                                              ; preds = %280, %278, %276
  %283 = phi i64 [ %277, %276 ], [ %281, %280 ], [ %273, %278 ]
  %284 = icmp eq i64 %283, %257
  br i1 %284, label %290, label %299

285:                                              ; preds = %269
  %286 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %270, i64 2
  %287 = bitcast %"struct.std::__1::__hash_node_base.408"* %286 to i32*
  %288 = load i32, i32* %287, align 4
  %289 = icmp eq i32 %288, %237
  br i1 %289, label %294, label %290

290:                                              ; preds = %285, %282
  %291 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %270, i64 0, i32 0
  %292 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %291, align 8
  %293 = icmp eq %"struct.std::__1::__hash_node_base.408"* %292, null
  br i1 %293, label %299, label %269

294:                                              ; preds = %285
  %295 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %270, i64 3
  %296 = bitcast %"struct.std::__1::__hash_node_base.408"* %295 to %"class.spvtools::opt::analysis::Constant"**
  %297 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %296, align 8
  %298 = bitcast %"class.spvtools::opt::analysis::Constant"* %297 to %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  br label %299

299:                                              ; preds = %282, %290, %239, %256, %263, %294
  %300 = phi %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** [ %298, %294 ], [ null, %256 ], [ null, %239 ], [ null, %263 ], [ null, %290 ], [ null, %282 ]
  %301 = phi %"class.spvtools::opt::analysis::Constant"* [ %297, %294 ], [ null, %256 ], [ null, %239 ], [ null, %263 ], [ null, %290 ], [ null, %282 ]
  %302 = load %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %300, align 8
  %303 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %302, i64 14
  %304 = load %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %303, align 8
  %305 = tail call %"class.spvtools::opt::analysis::IntConstant"* %304(%"class.spvtools::opt::analysis::Constant"* %301) #11
  %306 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %305, null
  br i1 %306, label %317, label %307

307:                                              ; preds = %299
  %308 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %305, i64 0, i32 0
  %309 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %305 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %310 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %309, align 8
  %311 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %310, i64 24
  %312 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %311, align 8
  %313 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %312(%"class.spvtools::opt::analysis::ScalarConstant"* %308) #11
  %314 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %313, i64 0, i32 0, i32 0
  %315 = load i32*, i32** %314, align 8
  %316 = load i32, i32* %315, align 4
  br label %317

317:                                              ; preds = %299, %307
  %318 = phi i32 [ %316, %307 ], [ 0, %299 ]
  %319 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 1) #11
  %320 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %321 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %322 = bitcast %"struct.spvtools::opt::Operand"** %321 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = bitcast %"class.std::__1::vector"* %320 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = sub i64 %323, %325
  %327 = sdiv exact i64 %326, 48
  %328 = trunc i64 %327 to i32
  %329 = icmp ugt i32 %328, 2
  br i1 %329, label %330, label %345

330:                                              ; preds = %317, %337
  %331 = phi i32 [ %338, %337 ], [ 2, %317 ]
  %332 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %331) #11
  %333 = icmp eq i32 %318, %332
  br i1 %333, label %334, label %337

334:                                              ; preds = %330
  %335 = or i32 %331, 1
  %336 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %335) #11
  br label %345

337:                                              ; preds = %330
  %338 = add i32 %331, 2
  %339 = load i64, i64* %322, align 8
  %340 = load i64, i64* %324, align 8
  %341 = sub i64 %339, %340
  %342 = sdiv exact i64 %341, 48
  %343 = trunc i64 %342 to i32
  %344 = icmp ult i32 %338, %343
  br i1 %344, label %330, label %345

345:                                              ; preds = %337, %317, %334, %156, %158, %145, %6
  %346 = phi i32 [ %17, %6 ], [ %146, %145 ], [ %157, %156 ], [ %159, %158 ], [ %336, %334 ], [ %319, %317 ], [ %319, %337 ]
  %347 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 0, i32 0, i32 2
  %348 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %347, align 8
  %349 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %348, i64 0, i32 11
  %350 = load i32, i32* %349, align 8
  %351 = and i32 %350, 16
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %369

353:                                              ; preds = %345
  %354 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %348, i64 0, i32 4, i32 0, i32 0, i32 0
  %355 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %354, align 8
  %356 = tail call i8* @_Znwm(i64 400) #12
  %357 = bitcast i8* %356 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %357, %"class.spvtools::opt::Module"* %355) #11
  %358 = ptrtoint i8* %356 to i64
  %359 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %348, i64 0, i32 15
  %360 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %359, i64 0, i32 0, i32 0, i32 0
  %361 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %360, align 8
  %362 = bitcast %"class.std::__1::unique_ptr.273"* %359 to i64*
  store i64 %358, i64* %362, align 8
  %363 = icmp eq %"class.spvtools::opt::CFG"* %361, null
  br i1 %363, label %366, label %364

364:                                              ; preds = %353
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %361) #11
  %365 = bitcast %"class.spvtools::opt::CFG"* %361 to i8*
  tail call void @_ZdlPv(i8* %365) #12
  br label %366

366:                                              ; preds = %364, %353
  %367 = load i32, i32* %349, align 8
  %368 = or i32 %367, 16
  store i32 %368, i32* %349, align 8
  br label %369

369:                                              ; preds = %345, %366
  %370 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %348, i64 0, i32 15, i32 0, i32 0, i32 0
  %371 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %370, align 8
  %372 = zext i32 %346 to i64
  %373 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %371, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %374 = load i64, i64* %373, align 8
  %375 = icmp eq i64 %374, 0
  br i1 %375, label %424, label %376

376:                                              ; preds = %369
  %377 = tail call i64 @llvm.ctpop.i64(i64 %374) #11, !range !3
  %378 = icmp ugt i64 %377, 1
  br i1 %378, label %382, label %379

379:                                              ; preds = %376
  %380 = add i64 %374, 4294967295
  %381 = and i64 %380, %372
  br label %386

382:                                              ; preds = %376
  %383 = icmp ugt i64 %374, %372
  br i1 %383, label %386, label %384

384:                                              ; preds = %382
  %385 = urem i64 %372, %374
  br label %386

386:                                              ; preds = %384, %382, %379
  %387 = phi i64 [ %381, %379 ], [ %385, %384 ], [ %372, %382 ]
  %388 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %371, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %389 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %388, align 8
  %390 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %389, i64 %387
  %391 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %390, align 8
  %392 = icmp eq %"struct.std::__1::__hash_node_base.333"* %391, null
  br i1 %392, label %424, label %393

393:                                              ; preds = %386
  %394 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %391, i64 0, i32 0
  %395 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %394, align 8
  %396 = icmp eq %"struct.std::__1::__hash_node_base.333"* %395, null
  br i1 %396, label %424, label %397

397:                                              ; preds = %393
  %398 = add i64 %374, -1
  br label %399

399:                                              ; preds = %420, %397
  %400 = phi %"struct.std::__1::__hash_node_base.333"* [ %395, %397 ], [ %422, %420 ]
  %401 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %400, i64 1
  %402 = bitcast %"struct.std::__1::__hash_node_base.333"* %401 to i64*
  %403 = load i64, i64* %402, align 8
  %404 = icmp eq i64 %403, %372
  br i1 %404, label %415, label %405

405:                                              ; preds = %399
  br i1 %378, label %408, label %406

406:                                              ; preds = %405
  %407 = and i64 %403, %398
  br label %412

408:                                              ; preds = %405
  %409 = icmp ult i64 %403, %374
  br i1 %409, label %412, label %410

410:                                              ; preds = %408
  %411 = urem i64 %403, %374
  br label %412

412:                                              ; preds = %410, %408, %406
  %413 = phi i64 [ %407, %406 ], [ %411, %410 ], [ %403, %408 ]
  %414 = icmp eq i64 %413, %387
  br i1 %414, label %420, label %424

415:                                              ; preds = %399
  %416 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %400, i64 2
  %417 = bitcast %"struct.std::__1::__hash_node_base.333"* %416 to i32*
  %418 = load i32, i32* %417, align 4
  %419 = icmp eq i32 %418, %346
  br i1 %419, label %425, label %420

420:                                              ; preds = %415, %412
  %421 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %400, i64 0, i32 0
  %422 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %421, align 8
  %423 = icmp eq %"struct.std::__1::__hash_node_base.333"* %422, null
  br i1 %423, label %424, label %399

424:                                              ; preds = %420, %412, %393, %386, %369
  tail call void @abort() #13
  unreachable

425:                                              ; preds = %415
  %426 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %400, i64 3
  %427 = bitcast %"struct.std::__1::__hash_node_base.333"* %426 to i64*
  %428 = load i64, i64* %427, align 8
  %429 = bitcast %"class.spvtools::opt::BasicBlock"** %2 to i64*
  store i64 %428, i64* %429, align 8
  br label %430

430:                                              ; preds = %68, %60, %230, %222, %203, %180, %196, %234, %41, %18, %34, %72, %177, %425
  %431 = phi i32 [ 1, %425 ], [ 2, %177 ], [ 2, %72 ], [ 2, %34 ], [ 2, %18 ], [ 2, %41 ], [ 2, %234 ], [ 2, %196 ], [ 2, %180 ], [ 2, %203 ], [ 2, %222 ], [ 2, %230 ], [ 2, %60 ], [ 2, %68 ]
  ret i32 %431
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt7CCPPass16VisitInstructionEPNS0_11InstructionEPPNS0_10BasicBlockE(%"class.spvtools::opt::CCPPass"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::BasicBlock"** nocapture) local_unnamed_addr #1 align 2 {
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 245
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = tail call i32 @_ZN8spvtools3opt7CCPPass8VisitPhiEPNS0_11InstructionE(%"class.spvtools::opt::CCPPass"* %0, %"class.spvtools::opt::Instruction"* %1)
  br label %25

9:                                                ; preds = %3
  %10 = tail call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %5) #11
  br i1 %10, label %11, label %13

11:                                               ; preds = %9
  %12 = tail call i32 @_ZNK8spvtools3opt7CCPPass11VisitBranchEPNS0_11InstructionEPPNS0_10BasicBlockE(%"class.spvtools::opt::CCPPass"* %0, %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::BasicBlock"** %2)
  br label %25

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %25, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = zext i8 %19 to i32
  %21 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %20) #11
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  %24 = tail call i32 @_ZN8spvtools3opt7CCPPass15VisitAssignmentEPNS0_11InstructionE(%"class.spvtools::opt::CCPPass"* %0, %"class.spvtools::opt::Instruction"* %1)
  br label %25

25:                                               ; preds = %13, %17, %23, %11, %7
  %26 = phi i32 [ %8, %7 ], [ %12, %11 ], [ %24, %23 ], [ 2, %17 ], [ 2, %13 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt7CCPPass13ReplaceValuesEv(%"class.spvtools::opt::CCPPass"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 0, i32 0, i32 2
  %3 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = icmp ugt i32 %7, %9
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = bitcast %"struct.std::__1::__hash_node_base.254"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %38, %1
  %17 = phi i8 [ %11, %1 ], [ %39, %38 ]
  %18 = and i8 %17, 1
  %19 = icmp ne i8 %18, 0
  ret i1 %19

20:                                               ; preds = %1, %38
  %21 = phi i64 [ %41, %38 ], [ %14, %1 ]
  %22 = phi i8 [ %39, %38 ], [ %11, %1 ]
  %23 = inttoptr i64 %21 to %"struct.std::__1::__hash_node.1121"*
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node.1121", %"struct.std::__1::__hash_node.1121"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node.1121", %"struct.std::__1::__hash_node.1121"* %23, i64 0, i32 2, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, -1
  %29 = icmp eq i32 %25, %27
  %30 = or i1 %28, %29
  br i1 %30, label %38, label %31

31:                                               ; preds = %20
  %32 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  tail call void @_ZN8spvtools3opt9IRContext21KillNamesAndDecoratesEj(%"class.spvtools::opt::IRContext"* %32, i32 %25) #11
  %33 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %34 = tail call zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"* %33, i32 %25, i32 %27) #11
  %35 = zext i1 %34 to i8
  %36 = and i8 %22, 1
  %37 = or i8 %36, %35
  br label %38

38:                                               ; preds = %31, %20
  %39 = phi i8 [ %22, %20 ], [ %37, %31 ]
  %40 = inttoptr i64 %21 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %16, label %20
}

declare void @_ZN8spvtools3opt9IRContext21KillNamesAndDecoratesEj(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt7CCPPass18PropagateConstantsEPNS0_8FunctionE(%"class.spvtools::opt::CCPPass"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::function.1086", align 8
  %4 = bitcast %"class.std::__1::function.1086"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #11
  %5 = ptrtoint %"class.spvtools::opt::CCPPass"* %0 to i64
  %6 = getelementptr inbounds %"class.std::__1::function.1086", %"class.std::__1::function.1086"* %3, i64 0, i32 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.std::__1::function.1086", %"class.std::__1::function.1086"* %3, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_7CCPPass18PropagateConstantsEPNS3_8FunctionEE3$_3S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %6, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass18PropagateConstantsEPNS5_8FunctionEE3$_3FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %7, align 8
  %8 = bitcast %"class.std::__1::function.1086"* %3 to i64*
  store i64 %5, i64* %8, align 8
  call void @_ZN8spvtools3opt8Function12ForEachParamERKNSt3__18functionIFvPNS0_11InstructionEEEEb(%"class.spvtools::opt::Function"* %1, %"class.std::__1::function.1086"* nonnull dereferenceable(32) %3, i1 zeroext false) #11
  %9 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %7, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %9, i64 0, i32 1
  %11 = load void (i8*)*, void (i8*)** %10, align 8
  %12 = icmp eq void (i8*)* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::function.1086", %"class.std::__1::function.1086"* %3, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  call void %11(i8* %15) #11
  br label %16

16:                                               ; preds = %13, %2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #11
  %17 = call i8* @_Znwm(i64 360) #12
  %18 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 0, i32 0, i32 2
  %19 = bitcast %"class.spvtools::opt::IRContext"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast i8* %17 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %17, i64 8
  %23 = bitcast i8* %22 to i64*
  store i64 %5, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %17, i64 24
  %25 = bitcast i8* %24 to i64*
  store i64 ptrtoint (i32 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::BasicBlock"**)* @"_ZNSt3__110__function16__policy_invokerIFN8spvtools3opt13SSAPropagator10PropStatusEPNS3_11InstructionEPPNS3_10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS3_7CCPPass18PropagateConstantsEPNS3_8FunctionEE3$_4SB_EEEES5_PKNS0_16__policy_storageES7_SA_" to i64), i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %17, i64 32
  %27 = bitcast i8* %26 to %"struct.std::__1::__function::__policy"**
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass18PropagateConstantsEPNS5_8FunctionEE3$_4FNS5_13SSAPropagator10PropStatusEPNS5_11InstructionEPPNS5_10BasicBlockEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %27, align 8
  %28 = getelementptr inbounds i8, i8* %17, i64 40
  %29 = getelementptr inbounds i8, i8* %17, i64 168
  %30 = bitcast i8* %29 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 128, i1 false) #11
  store i32 1065353216, i32* %30, align 4
  %31 = getelementptr inbounds i8, i8* %17, i64 176
  %32 = getelementptr inbounds i8, i8* %17, i64 208
  %33 = bitcast i8* %32 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %17, i64 216
  %35 = getelementptr inbounds i8, i8* %17, i64 248
  %36 = bitcast i8* %35 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %17, i64 256
  %38 = getelementptr inbounds i8, i8* %17, i64 288
  %39 = bitcast i8* %38 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %39, align 4
  %40 = getelementptr inbounds i8, i8* %17, i64 304
  %41 = getelementptr inbounds i8, i8* %17, i64 296
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #11
  %42 = bitcast i8* %41 to i8**
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds i8, i8* %17, i64 320
  %44 = getelementptr inbounds i8, i8* %17, i64 352
  %45 = bitcast i8* %44 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %45, align 4
  %46 = ptrtoint i8* %17 to i64
  %47 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 3
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.932", %"class.std::__1::unique_ptr.932"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.spvtools::opt::SSAPropagator"*, %"class.spvtools::opt::SSAPropagator"** %48, align 8
  %50 = bitcast %"class.std::__1::unique_ptr.932"* %47 to i64*
  store i64 %46, i64* %50, align 8
  %51 = icmp eq %"class.spvtools::opt::SSAPropagator"* %49, null
  %52 = bitcast i8* %17 to %"class.spvtools::opt::SSAPropagator"*
  br i1 %51, label %56, label %53

53:                                               ; preds = %16
  call void @_ZN8spvtools3opt13SSAPropagatorD2Ev(%"class.spvtools::opt::SSAPropagator"* nonnull %49) #11
  %54 = bitcast %"class.spvtools::opt::SSAPropagator"* %49 to i8*
  call void @_ZdlPv(i8* %54) #12
  %55 = load %"class.spvtools::opt::SSAPropagator"*, %"class.spvtools::opt::SSAPropagator"** %48, align 8
  br label %56

56:                                               ; preds = %16, %53
  %57 = phi %"class.spvtools::opt::SSAPropagator"* [ %52, %16 ], [ %55, %53 ]
  %58 = call zeroext i1 @_ZN8spvtools3opt13SSAPropagator3RunEPNS0_8FunctionE(%"class.spvtools::opt::SSAPropagator"* %57, %"class.spvtools::opt::Function"* %1) #11
  br i1 %58, label %59, label %100

59:                                               ; preds = %56
  %60 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %18, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 0, i32 3
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 4
  %66 = load i32, i32* %65, align 8
  %67 = icmp ugt i32 %64, %66
  %68 = zext i1 %67 to i8
  %69 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %70 = bitcast %"struct.std::__1::__hash_node_base.254"** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %96, label %73

73:                                               ; preds = %59, %91
  %74 = phi i64 [ %94, %91 ], [ %71, %59 ]
  %75 = phi i8 [ %92, %91 ], [ %68, %59 ]
  %76 = inttoptr i64 %74 to %"struct.std::__1::__hash_node.1121"*
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node.1121", %"struct.std::__1::__hash_node.1121"* %76, i64 0, i32 2, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node.1121", %"struct.std::__1::__hash_node.1121"* %76, i64 0, i32 2, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, -1
  %82 = icmp eq i32 %78, %80
  %83 = or i1 %81, %82
  br i1 %83, label %91, label %84

84:                                               ; preds = %73
  %85 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %18, align 8
  call void @_ZN8spvtools3opt9IRContext21KillNamesAndDecoratesEj(%"class.spvtools::opt::IRContext"* %85, i32 %78) #11
  %86 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %18, align 8
  %87 = call zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"* %86, i32 %78, i32 %80) #11
  %88 = zext i1 %87 to i8
  %89 = and i8 %75, 1
  %90 = or i8 %89, %88
  br label %91

91:                                               ; preds = %84, %73
  %92 = phi i8 [ %75, %73 ], [ %90, %84 ]
  %93 = inttoptr i64 %74 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %73

96:                                               ; preds = %91, %59
  %97 = phi i8 [ %68, %59 ], [ %92, %91 ]
  %98 = and i8 %97, 1
  %99 = icmp ne i8 %98, 0
  br label %100

100:                                              ; preds = %56, %96
  %101 = phi i1 [ %99, %96 ], [ false, %56 ]
  ret i1 %101
}

declare void @_ZN8spvtools3opt8Function12ForEachParamERKNSt3__18functionIFvPNS0_11InstructionEEEEb(%"class.spvtools::opt::Function"*, %"class.std::__1::function.1086"* dereferenceable(32), i1 zeroext) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare zeroext i1 @_ZN8spvtools3opt13SSAPropagator3RunEPNS0_8FunctionE(%"class.spvtools::opt::SSAPropagator"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt7CCPPass10InitializeEv(%"class.spvtools::opt::CCPPass"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.1126", align 1
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.1126", align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 11
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 16384
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %29

14:                                               ; preds = %1
  %15 = tail call i8* @_Znwm(i64 136) #12
  %16 = bitcast i8* %15 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %16, %"class.spvtools::opt::IRContext"* %9) #11
  %17 = ptrtoint i8* %15 to i64
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 19
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.400"* %18 to i64*
  store i64 %17, i64* %21, align 8
  %22 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %14
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %20) #11
  %24 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %23, %14
  %26 = load i32, i32* %10, align 8
  %27 = or i32 %26, 16384
  store i32 %27, i32* %10, align 8
  %28 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  br label %29

29:                                               ; preds = %1, %25
  %30 = phi %"class.spvtools::opt::IRContext"* [ %9, %1 ], [ %28, %25 ]
  %31 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 19, i32 0, i32 0, i32 0
  %32 = bitcast %"class.spvtools::opt::analysis::ConstantManager"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 1
  %35 = bitcast %"class.spvtools::opt::analysis::ConstantManager"** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %30, i64 0, i32 4, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %36, align 8
  %38 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %37, i64 0, i32 14, i32 0, i32 1, i32 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %37, i64 0, i32 14, i32 0, i32 1
  %40 = bitcast %"class.spvtools::opt::Instruction"** %38 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = inttoptr i64 %41 to %"class.spvtools::opt::Instruction"*
  %43 = icmp eq %"class.spvtools::opt::Instruction"* %39, %42
  br i1 %43, label %58, label %44

44:                                               ; preds = %29
  %45 = bitcast i32* %7 to i8*
  %46 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0
  %47 = bitcast %"class.std::__1::tuple"* %4 to i8*
  %48 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::tuple.1126", %"class.std::__1::tuple.1126"* %5, i64 0, i32 0
  %50 = bitcast i32* %6 to i8*
  %51 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %52 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::tuple.1126", %"class.std::__1::tuple.1126"* %3, i64 0, i32 0
  br label %63

54:                                               ; preds = %102
  %55 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %56 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %55, i64 0, i32 4, i32 0, i32 0, i32 0
  %57 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %56, align 8
  br label %58

58:                                               ; preds = %54, %29
  %59 = phi %"class.spvtools::opt::Module"* [ %57, %54 ], [ %37, %29 ]
  %60 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %59, i64 0, i32 0, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 4
  store i32 %61, i32* %62, align 8
  ret void

63:                                               ; preds = %44, %102
  %64 = phi %"class.spvtools::opt::Instruction"* [ %42, %44 ], [ %116, %102 ]
  %65 = phi i64 [ %41, %44 ], [ %115, %102 ]
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 2
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, -41
  %69 = icmp ult i32 %68, 6
  br i1 %69, label %70, label %90

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 4
  %72 = load i8, i8* %71, align 1, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %70
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #11
  br label %86

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 3
  %77 = load i8, i8* %76, align 4, !range !2
  %78 = zext i8 %77 to i32
  %79 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %64, i32 %78) #11
  %80 = load i8, i8* %71, align 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #11
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %75
  %83 = load i8, i8* %76, align 4, !range !2
  %84 = zext i8 %83 to i32
  %85 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %64, i32 %84) #11
  br label %86

86:                                               ; preds = %74, %75, %82
  %87 = phi i32 [ %79, %82 ], [ %79, %75 ], [ 0, %74 ]
  %88 = phi i32 [ %85, %82 ], [ 0, %75 ], [ 0, %74 ]
  store i32 %88, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  store i32* %6, i32** %52, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %53) #11
  %89 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %46, i32* nonnull dereferenceable(4) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1126"* nonnull dereferenceable(1) %3) #11
  br label %102

90:                                               ; preds = %63
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #11
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 4
  %92 = load i8, i8* %91, align 1, !range !2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %99, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 3
  %96 = load i8, i8* %95, align 4, !range !2
  %97 = zext i8 %96 to i32
  %98 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %64, i32 %97) #11
  br label %99

99:                                               ; preds = %90, %94
  %100 = phi i32 [ %98, %94 ], [ 0, %90 ]
  store i32 %100, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  store i32* %7, i32** %48, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %49) #11
  %101 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %46, i32* nonnull dereferenceable(4) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1126"* nonnull dereferenceable(1) %5) #11
  br label %102

102:                                              ; preds = %99, %86
  %103 = phi { %"struct.std::__1::__hash_node_base.254"*, i8 } [ %101, %99 ], [ %89, %86 ]
  %104 = phi i8* [ %49, %99 ], [ %53, %86 ]
  %105 = phi i8* [ %47, %99 ], [ %51, %86 ]
  %106 = phi i32 [ -1, %99 ], [ %87, %86 ]
  %107 = phi i8* [ %45, %99 ], [ %50, %86 ]
  %108 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %103, 0
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %108, i64 2
  %110 = bitcast %"struct.std::__1::__hash_node_base.254"* %109 to %"struct.std::__1::pair"*
  %111 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %110, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %104) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #11
  store i32 %106, i32* %111, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %107) #11
  %112 = inttoptr i64 %65 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %113 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %112, i64 0, i32 1
  %114 = bitcast %"class.spvtools::opt::Instruction"** %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = inttoptr i64 %115 to %"class.spvtools::opt::Instruction"*
  %117 = icmp eq %"class.spvtools::opt::Instruction"* %39, %116
  br i1 %117, label %54, label %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt7CCPPass7ProcessEv(%"class.spvtools::opt::CCPPass"*) unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::function.1094", align 8
  tail call void @_ZN8spvtools3opt7CCPPass10InitializeEv(%"class.spvtools::opt::CCPPass"* %0)
  %3 = bitcast %"class.std::__1::function.1094"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.std::__1::function.1094", %"class.std::__1::function.1094"* %2, i64 0, i32 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.std::__1::function.1094", %"class.std::__1::function.1094"* %2, i64 0, i32 0, i32 2
  %6 = ptrtoint %"class.spvtools::opt::CCPPass"* %0 to i64
  %7 = getelementptr inbounds %"class.std::__1::function.1094", %"class.std::__1::function.1094"* %2, i64 0, i32 0, i32 0, i32 1, i64 0
  %8 = bitcast i8* %7 to i64*
  store i64 -6148914691236517206, i64* %8, align 8
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_7CCPPass7ProcessEvE3$_5S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)** %4, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass7ProcessEvE3$_5FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %5, align 8
  %9 = bitcast %"class.std::__1::function.1094"* %2 to i64*
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 0, i32 0, i32 2
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = call zeroext i1 @_ZN8spvtools3opt9IRContext24ProcessReachableCallTreeERNSt3__18functionIFbPNS0_8FunctionEEEE(%"class.spvtools::opt::IRContext"* %11, %"class.std::__1::function.1094"* nonnull dereferenceable(32) %2) #11
  %13 = select i1 %12, i32 16, i32 17
  %14 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %5, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %14, i64 0, i32 1
  %16 = load void (i8*)*, void (i8*)** %15, align 8
  %17 = icmp eq void (i8*)* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.std::__1::function.1094", %"class.std::__1::function.1094"* %2, i64 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void %16(i8* %20) #11
  br label %21

21:                                               ; preds = %1, %18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #11
  ret i32 %13
}

declare zeroext i1 @_ZN8spvtools3opt9IRContext24ProcessReachableCallTreeERNSt3__18functionIFbPNS0_8FunctionEEEE(%"class.spvtools::opt::IRContext"*, %"class.std::__1::function.1094"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7CCPPassD2Ev(%"class.spvtools::opt::CCPPass"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt7CCPPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.spvtools::opt::SSAPropagator"*, %"class.spvtools::opt::SSAPropagator"** %3, align 8
  store %"class.spvtools::opt::SSAPropagator"* null, %"class.spvtools::opt::SSAPropagator"** %3, align 8
  %5 = icmp eq %"class.spvtools::opt::SSAPropagator"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN8spvtools3opt13SSAPropagatorD2Ev(%"class.spvtools::opt::SSAPropagator"* nonnull %4) #11
  %7 = bitcast %"class.spvtools::opt::SSAPropagator"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %9, align 8
  %11 = icmp eq %"struct.std::__1::__hash_node_base.254"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8, %12
  %13 = phi %"struct.std::__1::__hash_node_base.254"* [ %15, %12 ], [ %10, %8 ]
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %13, i64 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %14, align 8
  %16 = bitcast %"struct.std::__1::__hash_node_base.254"* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  %17 = icmp eq %"struct.std::__1::__hash_node_base.254"* %15, null
  br i1 %17, label %18, label %12

18:                                               ; preds = %12, %8
  %19 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %19, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.254"** %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = bitcast %"struct.std::__1::__hash_node_base.254"** %20 to i8*
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %18, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 0
  tail call void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"* %25) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7CCPPassD0Ev(%"class.spvtools::opt::CCPPass"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt7CCPPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.spvtools::opt::SSAPropagator"*, %"class.spvtools::opt::SSAPropagator"** %3, align 8
  store %"class.spvtools::opt::SSAPropagator"* null, %"class.spvtools::opt::SSAPropagator"** %3, align 8
  %5 = icmp eq %"class.spvtools::opt::SSAPropagator"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN8spvtools3opt13SSAPropagatorD2Ev(%"class.spvtools::opt::SSAPropagator"* nonnull %4) #11
  %7 = bitcast %"class.spvtools::opt::SSAPropagator"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #12
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %9, align 8
  %11 = icmp eq %"struct.std::__1::__hash_node_base.254"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8, %12
  %13 = phi %"struct.std::__1::__hash_node_base.254"* [ %15, %12 ], [ %10, %8 ]
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %13, i64 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %14, align 8
  %16 = bitcast %"struct.std::__1::__hash_node_base.254"* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  %17 = icmp eq %"struct.std::__1::__hash_node_base.254"* %15, null
  br i1 %17, label %18, label %12

18:                                               ; preds = %12, %8
  %19 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %19, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.254"** %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = bitcast %"struct.std::__1::__hash_node_base.254"** %20 to i8*
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %18, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %0, i64 0, i32 0
  tail call void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"* %25) #11
  %26 = bitcast %"class.spvtools::opt::CCPPass"* %0 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt7CCPPass4nameEv(%"class.spvtools::opt::CCPPass"*) unnamed_addr #1 comdat align 2 {
  ret i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt7CCPPass20GetPreservedAnalysesEv(%"class.spvtools::opt::CCPPass"*) unnamed_addr #1 comdat align 2 {
  ret i32 49343
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32) local_unnamed_addr #3

declare void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Module"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.333"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.333"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.333"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  %10 = icmp eq %"struct.std::__1::__hash_node_base.333"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.309"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %17, %34
  %22 = phi %"struct.std::__1::__hash_node_base.309"* [ %24, %34 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 3
  %26 = bitcast %"struct.std::__1::__hash_node_base.309"* %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 4
  %32 = bitcast %"struct.std::__1::__hash_node_base.309"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %29, %21
  %35 = bitcast %"struct.std::__1::__hash_node_base.309"* %22 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  %36 = icmp eq %"struct.std::__1::__hash_node_base.309"* %24, null
  br i1 %36, label %37, label %21

37:                                               ; preds = %34, %17
  %38 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.309"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.309"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 1
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 0, i32 3
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp ne i8 %48, 0
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  %51 = or i1 %50, %49
  br i1 %51, label %79, label %52

52:                                               ; preds = %43, %52
  %53 = phi %"class.spvtools::opt::Instruction"* [ %73, %52 ], [ %46, %43 ]
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 2
  %55 = bitcast %"class.spvtools::opt::Instruction"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.spvtools::opt::Instruction"** %57 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %59 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %59, i64 0, i32 2
  %61 = bitcast %"class.spvtools::opt::Instruction"** %60 to i64*
  store i64 %56, i64* %61, align 8
  %62 = bitcast %"class.spvtools::opt::Instruction"** %57 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.spvtools::opt::Instruction"** %54 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %65 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %65, i64 0, i32 1
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %63, i64* %67, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #11
  %69 = bitcast %"class.spvtools::opt::Instruction"* %53 to void (%"class.spvtools::opt::Instruction"*)***
  %70 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %70, i64 1
  %72 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %71, align 8
  tail call void %72(%"class.spvtools::opt::Instruction"* nonnull %53) #11
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 3
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp ne i8 %75, 0
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  %78 = or i1 %77, %76
  br i1 %78, label %79, label %52

79:                                               ; preds = %52, %43
  %80 = phi %"class.spvtools::opt::Instruction"* [ %46, %43 ], [ %73, %52 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 0, i32 3
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp ne i8 %82, 0
  %84 = icmp eq %"class.spvtools::opt::Instruction"* %80, null
  %85 = or i1 %84, %83
  br i1 %85, label %109, label %86

86:                                               ; preds = %79, %86
  %87 = phi %"class.spvtools::opt::Instruction"* [ %103, %86 ], [ %80, %79 ]
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 2
  %89 = bitcast %"class.spvtools::opt::Instruction"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::Instruction"** %91 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %93 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %93, i64 0, i32 2
  %95 = bitcast %"class.spvtools::opt::Instruction"** %94 to i64*
  store i64 %90, i64* %95, align 8
  %96 = bitcast %"class.spvtools::opt::Instruction"** %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.spvtools::opt::Instruction"** %88 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %99 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %98, align 8
  %100 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %99, i64 0, i32 1
  %101 = bitcast %"class.spvtools::opt::Instruction"** %100 to i64*
  store i64 %97, i64* %101, align 8
  %102 = bitcast %"class.spvtools::opt::Instruction"** %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #11
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 3
  %105 = load i8, i8* %104, align 8, !range !2
  %106 = icmp ne i8 %105, 0
  %107 = icmp eq %"class.spvtools::opt::Instruction"* %103, null
  %108 = or i1 %107, %106
  br i1 %108, label %109, label %86

109:                                              ; preds = %86, %79
  %110 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %110) #11
  %111 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = icmp eq %"class.spvtools::opt::Instruction"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.spvtools::opt::Instruction"* %112 to void (%"class.spvtools::opt::Instruction"*)***
  %116 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %116, i64 1
  %118 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %117, align 8
  tail call void %118(%"class.spvtools::opt::Instruction"* nonnull %112) #11
  br label %119

119:                                              ; preds = %109, %114
  %120 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 1
  %122 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %122, i64 0, i32 0, i32 3
  %124 = load i8, i8* %123, align 8, !range !2
  %125 = icmp ne i8 %124, 0
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %122, null
  %127 = or i1 %126, %125
  br i1 %127, label %155, label %128

128:                                              ; preds = %119, %128
  %129 = phi %"class.spvtools::opt::Instruction"* [ %149, %128 ], [ %122, %119 ]
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 2
  %131 = bitcast %"class.spvtools::opt::Instruction"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 1
  %134 = bitcast %"class.spvtools::opt::Instruction"** %133 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %135 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %135, i64 0, i32 2
  %137 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %132, i64* %137, align 8
  %138 = bitcast %"class.spvtools::opt::Instruction"** %133 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"** %130 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %141 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %140, align 8
  %142 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %141, i64 0, i32 1
  %143 = bitcast %"class.spvtools::opt::Instruction"** %142 to i64*
  store i64 %139, i64* %143, align 8
  %144 = bitcast %"class.spvtools::opt::Instruction"** %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 16, i1 false) #11
  %145 = bitcast %"class.spvtools::opt::Instruction"* %129 to void (%"class.spvtools::opt::Instruction"*)***
  %146 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %146, i64 1
  %148 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, align 8
  tail call void %148(%"class.spvtools::opt::Instruction"* nonnull %129) #11
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 0, i32 3
  %151 = load i8, i8* %150, align 8, !range !2
  %152 = icmp ne i8 %151, 0
  %153 = icmp eq %"class.spvtools::opt::Instruction"* %149, null
  %154 = or i1 %153, %152
  br i1 %154, label %155, label %128

155:                                              ; preds = %128, %119
  %156 = phi %"class.spvtools::opt::Instruction"* [ %122, %119 ], [ %149, %128 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 0, i32 3
  %158 = load i8, i8* %157, align 8, !range !2
  %159 = icmp ne i8 %158, 0
  %160 = icmp eq %"class.spvtools::opt::Instruction"* %156, null
  %161 = or i1 %160, %159
  br i1 %161, label %185, label %162

162:                                              ; preds = %155, %162
  %163 = phi %"class.spvtools::opt::Instruction"* [ %179, %162 ], [ %156, %155 ]
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"** %167 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %169 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %169, i64 0, i32 2
  %171 = bitcast %"class.spvtools::opt::Instruction"** %170 to i64*
  store i64 %166, i64* %171, align 8
  %172 = bitcast %"class.spvtools::opt::Instruction"** %167 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.spvtools::opt::Instruction"** %164 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %175 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %175, i64 0, i32 1
  %177 = bitcast %"class.spvtools::opt::Instruction"** %176 to i64*
  store i64 %173, i64* %177, align 8
  %178 = bitcast %"class.spvtools::opt::Instruction"** %167 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 16, i1 false) #11
  %179 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %179, i64 0, i32 0, i32 3
  %181 = load i8, i8* %180, align 8, !range !2
  %182 = icmp ne i8 %181, 0
  %183 = icmp eq %"class.spvtools::opt::Instruction"* %179, null
  %184 = or i1 %183, %182
  br i1 %184, label %185, label %162

185:                                              ; preds = %162, %155
  %186 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %186) #11
  %187 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %187, align 8
  %189 = icmp eq %"class.spvtools::opt::Instruction"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.spvtools::opt::Instruction"* %188 to void (%"class.spvtools::opt::Instruction"*)***
  %192 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %192, i64 1
  %194 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %193, align 8
  tail call void %194(%"class.spvtools::opt::Instruction"* nonnull %188) #11
  br label %195

195:                                              ; preds = %185, %190
  %196 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.281"* %197, null
  br i1 %198, label %215, label %199

199:                                              ; preds = %195, %212
  %200 = phi %"struct.std::__1::__hash_node_base.281"* [ %202, %212 ], [ %197, %195 ]
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 3
  %204 = bitcast %"struct.std::__1::__hash_node_base.281"* %203 to %"class.spvtools::opt::BasicBlock"***
  %205 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %204, align 8
  %206 = icmp eq %"class.spvtools::opt::BasicBlock"** %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %199
  %208 = ptrtoint %"class.spvtools::opt::BasicBlock"** %205 to i64
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 4
  %210 = bitcast %"struct.std::__1::__hash_node_base.281"* %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast %"class.spvtools::opt::BasicBlock"** %205 to i8*
  tail call void @_ZdlPv(i8* %211) #12
  br label %212

212:                                              ; preds = %207, %199
  %213 = bitcast %"struct.std::__1::__hash_node_base.281"* %200 to i8*
  tail call void @_ZdlPv(i8* %213) #12
  %214 = icmp eq %"struct.std::__1::__hash_node_base.281"* %202, null
  br i1 %214, label %215, label %199

215:                                              ; preds = %212, %195
  %216 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.281"**, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  store %"struct.std::__1::__hash_node_base.281"** null, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.281"** %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = bitcast %"struct.std::__1::__hash_node_base.281"** %217 to i8*
  tail call void @_ZdlPv(i8* %220) #12
  br label %221

221:                                              ; preds = %215, %219
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #11
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %38, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.3"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #12
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #1 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #11
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

declare zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32) local_unnamed_addr #3

declare void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.458", %"class.std::__1::vector.458"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.460"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.460"* %4 to i8*
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.460"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.460"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::analysis::Constant"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.spvtools::opt::analysis::Constant"* %15 to void (%"class.spvtools::opt::analysis::Constant"*)***
  %19 = load void (%"class.spvtools::opt::analysis::Constant"*)**, void (%"class.spvtools::opt::analysis::Constant"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %19, i64 1
  %21 = load void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %20, align 8
  tail call void %21(%"class.spvtools::opt::analysis::Constant"* nonnull %15) #11
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.460"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.458"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.460"* %4, %"class.std::__1::unique_ptr.460"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.441"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29, %33
  %34 = phi %"struct.std::__1::__hash_node_base.441"* [ %36, %33 ], [ %31, %29 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %34, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %35, align 8
  %37 = bitcast %"struct.std::__1::__hash_node_base.441"* %34 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  %38 = icmp eq %"struct.std::__1::__hash_node_base.441"* %36, null
  br i1 %38, label %39, label %33

39:                                               ; preds = %33, %29
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  store %"struct.std::__1::__hash_node_base.441"** null, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.441"** %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"struct.std::__1::__hash_node_base.441"** %41 to i8*
  tail call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %39, %43
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0
  %47 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node"**
  %49 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %48, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %46, %"class.std::__1::__tree_node"* %49) #11
  %50 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.408"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %45, %53
  %54 = phi %"struct.std::__1::__hash_node_base.408"* [ %56, %53 ], [ %51, %45 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %55, align 8
  %57 = bitcast %"struct.std::__1::__hash_node_base.408"* %54 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  %58 = icmp eq %"struct.std::__1::__hash_node_base.408"* %56, null
  br i1 %58, label %59, label %53

59:                                               ; preds = %53, %45
  %60 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  store %"struct.std::__1::__hash_node_base.408"** null, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.408"** %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = bitcast %"struct.std::__1::__hash_node_base.408"** %61 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %59, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt7MemPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.254"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.254"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.254"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  %11 = icmp eq %"struct.std::__1::__hash_node_base.254"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.254"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.254"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.915"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"struct.std::__1::__hash_node_base.915"* [ %25, %22 ], [ %20, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %23, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base.915"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  %27 = icmp eq %"struct.std::__1::__hash_node_base.915"* %25, null
  br i1 %27, label %28, label %22

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.915"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.915"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.915"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %34, %38
  %39 = phi %"struct.std::__1::__hash_node_base.915"* [ %41, %38 ], [ %36, %34 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base.915"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  %43 = icmp eq %"struct.std::__1::__hash_node_base.915"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %34
  %45 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.915"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.915"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %52 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %52, i64 0, i32 1
  %54 = load void (i8*)*, void (i8*)** %53, align 8
  %55 = icmp eq void (i8*)* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  tail call void %54(i8* %58) #11
  br label %59

59:                                               ; preds = %50, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7MemPassD0Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #1 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #1 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #1 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1126"* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.254"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.254"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.254"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.254"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.254"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 24) #12, !noalias !4
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !4
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !4
  store i32 %62, i32* %61, align 4, !noalias !4
  %63 = getelementptr inbounds i8, i8* %57, i64 20
  %64 = bitcast i8* %63 to i32*
  store i32 0, i32* %64, align 4, !noalias !4
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !4
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"**
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %67, align 8, !noalias !4
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !3
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #11
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #11, !range !3
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.254"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.254"* %110, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.254"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.254"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #11, !range !3
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.254"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.254"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } undef, %"struct.std::__1::__hash_node_base.254"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.254"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.250"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.250"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.254"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.254"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.256", %"class.std::__1::__bucket_list_deallocator.256"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !7

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.254"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.254"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.254"* %36, %"struct.std::__1::__hash_node_base.254"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.254"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.254"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.254"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.254"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.254"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.254"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.254"* %82, %"struct.std::__1::__hash_node_base.254"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.254"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.254"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.254"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.254"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.254"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.254"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.254"* %80, %"struct.std::__1::__hash_node_base.254"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.254"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.254"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.254"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.254"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.256", %"class.std::__1::__bucket_list_deallocator.256"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nounwind readonly ssp uwtable
define internal i32 @"_ZNSt3__110__function16__policy_invokerIFjjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass15VisitAssignmentEPNS7_11InstructionEE3$_0S2_EEEEjPKNS0_16__policy_storageEj"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #10 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::CCPPass"**
  %4 = load %"class.spvtools::opt::CCPPass"*, %"class.spvtools::opt::CCPPass"** %3, align 8
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %63, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.254"* %24, null
  br i1 %25, label %63, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.254"* %28, null
  br i1 %29, label %63, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base.254"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.254"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %63

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.254"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %1
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.254"* %55, null
  br i1 %56, label %63, label %32

57:                                               ; preds = %48
  %58 = bitcast %"struct.std::__1::__hash_node_base.254"* %49 to %"struct.std::__1::pair"*
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %58, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, -1
  %62 = select i1 %61, i32 %1, i32 %60
  br label %63

63:                                               ; preds = %45, %53, %2, %19, %26, %57
  %64 = phi i32 [ %62, %57 ], [ %1, %26 ], [ %1, %19 ], [ %1, %2 ], [ %1, %53 ], [ %1, %45 ]
  ret i32 %64
}

; Function Attrs: nounwind readonly ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass15VisitAssignmentEPNS8_11InstructionEE3$_1S3_EEEEbPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #10 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::CCPPass"**
  %4 = load %"class.spvtools::opt::CCPPass"*, %"class.spvtools::opt::CCPPass"** %3, align 8
  %5 = load i32, i32* %1, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %63, label %10

10:                                               ; preds = %2
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #11, !range !3
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, 4294967295
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ugt i64 %8, %6
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %18, %16, %13
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.254"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %25, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.254"* %29, null
  br i1 %30, label %63, label %31

31:                                               ; preds = %27
  %32 = add i64 %8, -1
  br label %33

33:                                               ; preds = %54, %31
  %34 = phi %"struct.std::__1::__hash_node_base.254"* [ %29, %31 ], [ %56, %54 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %34, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.254"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %33
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %32
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %44, %42, %40
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %54, label %63

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %34, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base.254"* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %5
  br i1 %53, label %58, label %54

54:                                               ; preds = %49, %46
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %34, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.254"* %56, null
  br i1 %57, label %63, label %33

58:                                               ; preds = %49
  %59 = bitcast %"struct.std::__1::__hash_node_base.254"* %50 to %"struct.std::__1::pair"*
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %59, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %64, label %63

63:                                               ; preds = %54, %46, %58, %27, %20, %2
  br label %64

64:                                               ; preds = %58, %63
  %65 = phi i1 [ true, %63 ], [ false, %58 ]
  ret i1 %65
}

; Function Attrs: nounwind readonly ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt7CCPPass15VisitAssignmentEPNS8_11InstructionEE3$_2S3_EEEEbPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #10 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::CCPPass"**
  %4 = load %"class.spvtools::opt::CCPPass"*, %"class.spvtools::opt::CCPPass"** %3, align 8
  %5 = load i32, i32* %1, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %58, label %10

10:                                               ; preds = %2
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #11, !range !3
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, 4294967295
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ugt i64 %8, %6
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %18, %16, %13
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.254"* %25, null
  br i1 %26, label %58, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %25, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.254"* %29, null
  br i1 %30, label %58, label %31

31:                                               ; preds = %27
  %32 = add i64 %8, -1
  br label %33

33:                                               ; preds = %54, %31
  %34 = phi %"struct.std::__1::__hash_node_base.254"* [ %29, %31 ], [ %56, %54 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %34, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.254"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %33
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %32
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %44, %42, %40
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %54, label %58

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %34, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base.254"* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %5
  br i1 %53, label %58, label %54

54:                                               ; preds = %49, %46
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %34, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.254"* %56, null
  br i1 %57, label %58, label %33

58:                                               ; preds = %46, %49, %54, %2, %20, %27
  %59 = phi %"struct.std::__1::__hash_node_base.254"* [ null, %20 ], [ null, %2 ], [ null, %27 ], [ %34, %49 ], [ null, %54 ], [ null, %46 ]
  %60 = icmp ne %"struct.std::__1::__hash_node_base.254"* %59, null
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_7CCPPass18PropagateConstantsEPNS3_8FunctionEE3$_3S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #1 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1126", align 1
  %5 = alloca i32, align 4
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::CCPPass"**
  %7 = load %"class.spvtools::opt::CCPPass"*, %"class.spvtools::opt::CCPPass"** %6, align 8
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = zext i8 %14 to i32
  %16 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %15) #11
  br label %17

17:                                               ; preds = %2, %12
  %18 = phi i32 [ %16, %12 ], [ 0, %2 ]
  store i32 %18, i32* %5, align 4
  %19 = getelementptr inbounds %"class.spvtools::opt::CCPPass", %"class.spvtools::opt::CCPPass"* %7, i64 0, i32 2, i32 0
  %20 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %5, i32** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::tuple.1126", %"class.std::__1::tuple.1126"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %22) #11
  %23 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %19, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1126"* nonnull dereferenceable(1) %4) #11
  %24 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %23, 0
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %24, i64 2
  %26 = bitcast %"struct.std::__1::__hash_node_base.254"* %25 to %"struct.std::__1::pair"*
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  store i32 -1, i32* %27, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @"_ZNSt3__110__function16__policy_invokerIFN8spvtools3opt13SSAPropagator10PropStatusEPNS3_11InstructionEPPNS3_10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS3_7CCPPass18PropagateConstantsEPNS3_8FunctionEE3$_4SB_EEEES5_PKNS0_16__policy_storageES7_SA_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::BasicBlock"**) #1 align 2 {
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::CCPPass"**
  %5 = load %"class.spvtools::opt::CCPPass"*, %"class.spvtools::opt::CCPPass"** %4, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %2, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 245
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  %10 = tail call i32 @_ZN8spvtools3opt7CCPPass8VisitPhiEPNS0_11InstructionE(%"class.spvtools::opt::CCPPass"* %5, %"class.spvtools::opt::Instruction"* %1) #11
  br label %27

11:                                               ; preds = %3
  %12 = tail call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %7) #11
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = tail call i32 @_ZNK8spvtools3opt7CCPPass11VisitBranchEPNS0_11InstructionEPPNS0_10BasicBlockE(%"class.spvtools::opt::CCPPass"* %5, %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::BasicBlock"** %2) #11
  br label %27

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %27, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %21 = load i8, i8* %20, align 4, !range !2
  %22 = zext i8 %21 to i32
  %23 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %22) #11
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  %26 = tail call i32 @_ZN8spvtools3opt7CCPPass15VisitAssignmentEPNS0_11InstructionE(%"class.spvtools::opt::CCPPass"* %5, %"class.spvtools::opt::Instruction"* %1) #11
  br label %27

27:                                               ; preds = %9, %13, %15, %19, %25
  %28 = phi i32 [ %10, %9 ], [ %14, %13 ], [ %26, %25 ], [ 2, %19 ], [ 2, %15 ]
  ret i32 %28
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt13SSAPropagatorD2Ev(%"class.spvtools::opt::SSAPropagator"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.1050"*, %"struct.std::__1::__hash_node_base.1050"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.1050"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.1050"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1050", %"struct.std::__1::__hash_node_base.1050"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.1050"*, %"struct.std::__1::__hash_node_base.1050"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.1050"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  %10 = icmp eq %"struct.std::__1::__hash_node_base.1050"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.1050"**, %"struct.std::__1::__hash_node_base.1050"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.1050"** null, %"struct.std::__1::__hash_node_base.1050"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1050"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.1050"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 8, i32 0
  %19 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node.1145"**
  %21 = load %"class.std::__1::__tree_node.1145"*, %"class.std::__1::__tree_node.1145"** %20, align 8
  tail call void @_ZNSt3__16__treeIN8spvtools3opt4EdgeENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.1036"* %18, %"class.std::__1::__tree_node.1145"* %21) #11
  %22 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.1016"*, %"struct.std::__1::__hash_node_base.1016"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base.1016"* %23, null
  br i1 %24, label %41, label %25

25:                                               ; preds = %17, %38
  %26 = phi %"struct.std::__1::__hash_node_base.1016"* [ %28, %38 ], [ %23, %17 ]
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1016", %"struct.std::__1::__hash_node_base.1016"* %26, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.1016"*, %"struct.std::__1::__hash_node_base.1016"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1016", %"struct.std::__1::__hash_node_base.1016"* %26, i64 3
  %30 = bitcast %"struct.std::__1::__hash_node_base.1016"* %29 to %"struct.spvtools::opt::Edge"**
  %31 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %30, align 8
  %32 = icmp eq %"struct.spvtools::opt::Edge"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %25
  %34 = ptrtoint %"struct.spvtools::opt::Edge"* %31 to i64
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1016", %"struct.std::__1::__hash_node_base.1016"* %26, i64 4
  %36 = bitcast %"struct.std::__1::__hash_node_base.1016"* %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"struct.spvtools::opt::Edge"* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %33, %25
  %39 = bitcast %"struct.std::__1::__hash_node_base.1016"* %26 to i8*
  tail call void @_ZdlPv(i8* %39) #12
  %40 = icmp eq %"struct.std::__1::__hash_node_base.1016"* %28, null
  br i1 %40, label %41, label %25

41:                                               ; preds = %38, %17
  %42 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.1016"**, %"struct.std::__1::__hash_node_base.1016"*** %42, align 8
  store %"struct.std::__1::__hash_node_base.1016"** null, %"struct.std::__1::__hash_node_base.1016"*** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.1016"** %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  %46 = bitcast %"struct.std::__1::__hash_node_base.1016"** %43 to i8*
  tail call void @_ZdlPv(i8* %46) #12
  br label %47

47:                                               ; preds = %41, %45
  %48 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.1016"*, %"struct.std::__1::__hash_node_base.1016"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.1016"* %49, null
  br i1 %50, label %67, label %51

51:                                               ; preds = %47, %64
  %52 = phi %"struct.std::__1::__hash_node_base.1016"* [ %54, %64 ], [ %49, %47 ]
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1016", %"struct.std::__1::__hash_node_base.1016"* %52, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.1016"*, %"struct.std::__1::__hash_node_base.1016"** %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1016", %"struct.std::__1::__hash_node_base.1016"* %52, i64 3
  %56 = bitcast %"struct.std::__1::__hash_node_base.1016"* %55 to %"struct.spvtools::opt::Edge"**
  %57 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %56, align 8
  %58 = icmp eq %"struct.spvtools::opt::Edge"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %51
  %60 = ptrtoint %"struct.spvtools::opt::Edge"* %57 to i64
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1016", %"struct.std::__1::__hash_node_base.1016"* %52, i64 4
  %62 = bitcast %"struct.std::__1::__hash_node_base.1016"* %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = bitcast %"struct.spvtools::opt::Edge"* %57 to i8*
  tail call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %59, %51
  %65 = bitcast %"struct.std::__1::__hash_node_base.1016"* %52 to i8*
  tail call void @_ZdlPv(i8* %65) #12
  %66 = icmp eq %"struct.std::__1::__hash_node_base.1016"* %54, null
  br i1 %66, label %67, label %51

67:                                               ; preds = %64, %47
  %68 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base.1016"**, %"struct.std::__1::__hash_node_base.1016"*** %68, align 8
  store %"struct.std::__1::__hash_node_base.1016"** null, %"struct.std::__1::__hash_node_base.1016"*** %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base.1016"** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = bitcast %"struct.std::__1::__hash_node_base.1016"** %69 to i8*
  tail call void @_ZdlPv(i8* %72) #12
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.994"* %75, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %73, %77
  %78 = phi %"struct.std::__1::__hash_node_base.994"* [ %80, %77 ], [ %75, %73 ]
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %78, i64 0, i32 0
  %80 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %79, align 8
  %81 = bitcast %"struct.std::__1::__hash_node_base.994"* %78 to i8*
  tail call void @_ZdlPv(i8* %81) #12
  %82 = icmp eq %"struct.std::__1::__hash_node_base.994"* %80, null
  br i1 %82, label %83, label %77

83:                                               ; preds = %77, %73
  %84 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %84, align 8
  store %"struct.std::__1::__hash_node_base.994"** null, %"struct.std::__1::__hash_node_base.994"*** %84, align 8
  %86 = icmp eq %"struct.std::__1::__hash_node_base.994"** %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = bitcast %"struct.std::__1::__hash_node_base.994"** %85 to i8*
  tail call void @_ZdlPv(i8* %88) #12
  br label %89

89:                                               ; preds = %83, %87
  %90 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %91 = load %"struct.std::__1::__hash_node_base.968"*, %"struct.std::__1::__hash_node_base.968"** %90, align 8
  %92 = icmp eq %"struct.std::__1::__hash_node_base.968"* %91, null
  br i1 %92, label %99, label %93

93:                                               ; preds = %89, %93
  %94 = phi %"struct.std::__1::__hash_node_base.968"* [ %96, %93 ], [ %91, %89 ]
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base.968", %"struct.std::__1::__hash_node_base.968"* %94, i64 0, i32 0
  %96 = load %"struct.std::__1::__hash_node_base.968"*, %"struct.std::__1::__hash_node_base.968"** %95, align 8
  %97 = bitcast %"struct.std::__1::__hash_node_base.968"* %94 to i8*
  tail call void @_ZdlPv(i8* %97) #12
  %98 = icmp eq %"struct.std::__1::__hash_node_base.968"* %96, null
  br i1 %98, label %99, label %93

99:                                               ; preds = %93, %89
  %100 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load %"struct.std::__1::__hash_node_base.968"**, %"struct.std::__1::__hash_node_base.968"*** %100, align 8
  store %"struct.std::__1::__hash_node_base.968"** null, %"struct.std::__1::__hash_node_base.968"*** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.968"** %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %99
  %104 = bitcast %"struct.std::__1::__hash_node_base.968"** %101 to i8*
  tail call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %99, %103
  %106 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %107 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %106, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = lshr i64 %109, 9
  %111 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %107, i64 %110
  %112 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %113 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %112, align 8
  %114 = icmp eq %"class.spvtools::opt::BasicBlock"*** %113, %107
  %115 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %113 to i64
  %116 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %107 to i64
  br i1 %114, label %117, label %119

117:                                              ; preds = %105
  %118 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %132

119:                                              ; preds = %105
  %120 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %111, align 8
  %121 = and i64 %109, 511
  %122 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %120, i64 %121
  %123 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, %109
  %126 = lshr i64 %125, 9
  %127 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %107, i64 %126
  %128 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %127, align 8
  %129 = and i64 %125, 511
  %130 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %128, i64 %129
  %131 = icmp eq %"class.spvtools::opt::BasicBlock"** %130, %122
  br i1 %131, label %132, label %138

132:                                              ; preds = %151, %119, %117
  %133 = phi i64* [ %118, %117 ], [ %123, %119 ], [ %123, %151 ]
  store i64 0, i64* %133, align 8
  %134 = bitcast %"class.spvtools::opt::BasicBlock"**** %112 to i64*
  %135 = sub i64 %115, %116
  %136 = ashr exact i64 %135, 3
  %137 = icmp ugt i64 %136, 2
  br i1 %137, label %156, label %169

138:                                              ; preds = %119, %151
  %139 = phi %"class.spvtools::opt::BasicBlock"** [ %154, %151 ], [ %122, %119 ]
  %140 = phi %"class.spvtools::opt::BasicBlock"*** [ %153, %151 ], [ %111, %119 ]
  %141 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %139, i64 1
  %142 = ptrtoint %"class.spvtools::opt::BasicBlock"** %141 to i64
  %143 = bitcast %"class.spvtools::opt::BasicBlock"*** %140 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = sub i64 %142, %144
  %146 = icmp eq i64 %145, 4096
  br i1 %146, label %147, label %151

147:                                              ; preds = %138
  %148 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %140, i64 1
  %149 = bitcast %"class.spvtools::opt::BasicBlock"*** %148 to i64*
  %150 = load i64, i64* %149, align 8
  br label %151

151:                                              ; preds = %147, %138
  %152 = phi i64 [ %150, %147 ], [ %142, %138 ]
  %153 = phi %"class.spvtools::opt::BasicBlock"*** [ %148, %147 ], [ %140, %138 ]
  %154 = inttoptr i64 %152 to %"class.spvtools::opt::BasicBlock"**
  %155 = icmp eq %"class.spvtools::opt::BasicBlock"** %130, %154
  br i1 %155, label %132, label %138

156:                                              ; preds = %132, %156
  %157 = phi %"class.spvtools::opt::BasicBlock"*** [ %161, %156 ], [ %107, %132 ]
  %158 = bitcast %"class.spvtools::opt::BasicBlock"*** %157 to i8**
  %159 = load i8*, i8** %158, align 8
  tail call void @_ZdlPv(i8* %159) #12
  %160 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %106, align 8
  %161 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %160, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %161, %"class.spvtools::opt::BasicBlock"**** %106, align 8
  %162 = load i64, i64* %134, align 8
  %163 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %161 to i64
  %164 = sub i64 %162, %163
  %165 = ashr exact i64 %164, 3
  %166 = icmp ugt i64 %165, 2
  br i1 %166, label %156, label %167

167:                                              ; preds = %156
  %168 = inttoptr i64 %162 to %"class.spvtools::opt::BasicBlock"***
  br label %169

169:                                              ; preds = %167, %132
  %170 = phi %"class.spvtools::opt::BasicBlock"*** [ %113, %132 ], [ %168, %167 ]
  %171 = phi %"class.spvtools::opt::BasicBlock"*** [ %107, %132 ], [ %161, %167 ]
  %172 = phi i64 [ %136, %132 ], [ %165, %167 ]
  switch i64 %172, label %176 [
    i64 1, label %174
    i64 2, label %173
  ]

173:                                              ; preds = %169
  br label %174

174:                                              ; preds = %169, %173
  %175 = phi i64 [ 512, %173 ], [ 256, %169 ]
  store i64 %175, i64* %108, align 8
  br label %176

176:                                              ; preds = %174, %169
  %177 = icmp eq %"class.spvtools::opt::BasicBlock"*** %171, %170
  br i1 %177, label %196, label %178

178:                                              ; preds = %176, %178
  %179 = phi %"class.spvtools::opt::BasicBlock"*** [ %182, %178 ], [ %171, %176 ]
  %180 = bitcast %"class.spvtools::opt::BasicBlock"*** %179 to i8**
  %181 = load i8*, i8** %180, align 8
  tail call void @_ZdlPv(i8* %181) #12
  %182 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %179, i64 1
  %183 = icmp eq %"class.spvtools::opt::BasicBlock"*** %182, %170
  br i1 %183, label %184, label %178

184:                                              ; preds = %178
  %185 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %106, align 8
  %186 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %112, align 8
  %187 = icmp eq %"class.spvtools::opt::BasicBlock"*** %186, %185
  br i1 %187, label %196, label %188

188:                                              ; preds = %184
  %189 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %185 to i64
  %190 = getelementptr %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %186, i64 -1
  %191 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %190 to i64
  %192 = sub i64 %191, %189
  %193 = lshr i64 %192, 3
  %194 = xor i64 %193, -1
  %195 = getelementptr %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %186, i64 %194
  store %"class.spvtools::opt::BasicBlock"*** %195, %"class.spvtools::opt::BasicBlock"**** %112, align 8
  br label %196

196:                                              ; preds = %188, %184, %176
  %197 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %198 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %197, align 8
  %199 = icmp eq %"class.spvtools::opt::BasicBlock"*** %198, null
  br i1 %199, label %202, label %200

200:                                              ; preds = %196
  %201 = bitcast %"class.spvtools::opt::BasicBlock"*** %198 to i8*
  tail call void @_ZdlPv(i8* %201) #12
  br label %202

202:                                              ; preds = %196, %200
  %203 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %204 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %203, align 8
  %205 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %206 = load i64, i64* %205, align 8
  %207 = lshr i64 %206, 9
  %208 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %204, i64 %207
  %209 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %210 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %209, align 8
  %211 = icmp eq %"class.spvtools::opt::Instruction"*** %210, %204
  %212 = ptrtoint %"class.spvtools::opt::Instruction"*** %210 to i64
  %213 = ptrtoint %"class.spvtools::opt::Instruction"*** %204 to i64
  br i1 %211, label %214, label %216

214:                                              ; preds = %202
  %215 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %229

216:                                              ; preds = %202
  %217 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %208, align 8
  %218 = and i64 %206, 511
  %219 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %217, i64 %218
  %220 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %221 = load i64, i64* %220, align 8
  %222 = add i64 %221, %206
  %223 = lshr i64 %222, 9
  %224 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %204, i64 %223
  %225 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %224, align 8
  %226 = and i64 %222, 511
  %227 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %225, i64 %226
  %228 = icmp eq %"class.spvtools::opt::Instruction"** %227, %219
  br i1 %228, label %229, label %235

229:                                              ; preds = %248, %216, %214
  %230 = phi i64* [ %215, %214 ], [ %220, %216 ], [ %220, %248 ]
  store i64 0, i64* %230, align 8
  %231 = bitcast %"class.spvtools::opt::Instruction"**** %209 to i64*
  %232 = sub i64 %212, %213
  %233 = ashr exact i64 %232, 3
  %234 = icmp ugt i64 %233, 2
  br i1 %234, label %253, label %266

235:                                              ; preds = %216, %248
  %236 = phi %"class.spvtools::opt::Instruction"** [ %251, %248 ], [ %219, %216 ]
  %237 = phi %"class.spvtools::opt::Instruction"*** [ %250, %248 ], [ %208, %216 ]
  %238 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %236, i64 1
  %239 = ptrtoint %"class.spvtools::opt::Instruction"** %238 to i64
  %240 = bitcast %"class.spvtools::opt::Instruction"*** %237 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = sub i64 %239, %241
  %243 = icmp eq i64 %242, 4096
  br i1 %243, label %244, label %248

244:                                              ; preds = %235
  %245 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %237, i64 1
  %246 = bitcast %"class.spvtools::opt::Instruction"*** %245 to i64*
  %247 = load i64, i64* %246, align 8
  br label %248

248:                                              ; preds = %244, %235
  %249 = phi i64 [ %247, %244 ], [ %239, %235 ]
  %250 = phi %"class.spvtools::opt::Instruction"*** [ %245, %244 ], [ %237, %235 ]
  %251 = inttoptr i64 %249 to %"class.spvtools::opt::Instruction"**
  %252 = icmp eq %"class.spvtools::opt::Instruction"** %227, %251
  br i1 %252, label %229, label %235

253:                                              ; preds = %229, %253
  %254 = phi %"class.spvtools::opt::Instruction"*** [ %258, %253 ], [ %204, %229 ]
  %255 = bitcast %"class.spvtools::opt::Instruction"*** %254 to i8**
  %256 = load i8*, i8** %255, align 8
  tail call void @_ZdlPv(i8* %256) #12
  %257 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %203, align 8
  %258 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %257, i64 1
  store %"class.spvtools::opt::Instruction"*** %258, %"class.spvtools::opt::Instruction"**** %203, align 8
  %259 = load i64, i64* %231, align 8
  %260 = ptrtoint %"class.spvtools::opt::Instruction"*** %258 to i64
  %261 = sub i64 %259, %260
  %262 = ashr exact i64 %261, 3
  %263 = icmp ugt i64 %262, 2
  br i1 %263, label %253, label %264

264:                                              ; preds = %253
  %265 = inttoptr i64 %259 to %"class.spvtools::opt::Instruction"***
  br label %266

266:                                              ; preds = %264, %229
  %267 = phi %"class.spvtools::opt::Instruction"*** [ %210, %229 ], [ %265, %264 ]
  %268 = phi %"class.spvtools::opt::Instruction"*** [ %204, %229 ], [ %258, %264 ]
  %269 = phi i64 [ %233, %229 ], [ %262, %264 ]
  switch i64 %269, label %273 [
    i64 1, label %271
    i64 2, label %270
  ]

270:                                              ; preds = %266
  br label %271

271:                                              ; preds = %266, %270
  %272 = phi i64 [ 512, %270 ], [ 256, %266 ]
  store i64 %272, i64* %205, align 8
  br label %273

273:                                              ; preds = %271, %266
  %274 = icmp eq %"class.spvtools::opt::Instruction"*** %268, %267
  br i1 %274, label %293, label %275

275:                                              ; preds = %273, %275
  %276 = phi %"class.spvtools::opt::Instruction"*** [ %279, %275 ], [ %268, %273 ]
  %277 = bitcast %"class.spvtools::opt::Instruction"*** %276 to i8**
  %278 = load i8*, i8** %277, align 8
  tail call void @_ZdlPv(i8* %278) #12
  %279 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 1
  %280 = icmp eq %"class.spvtools::opt::Instruction"*** %279, %267
  br i1 %280, label %281, label %275

281:                                              ; preds = %275
  %282 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %203, align 8
  %283 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %209, align 8
  %284 = icmp eq %"class.spvtools::opt::Instruction"*** %283, %282
  br i1 %284, label %293, label %285

285:                                              ; preds = %281
  %286 = ptrtoint %"class.spvtools::opt::Instruction"*** %282 to i64
  %287 = getelementptr %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %283, i64 -1
  %288 = ptrtoint %"class.spvtools::opt::Instruction"*** %287 to i64
  %289 = sub i64 %288, %286
  %290 = lshr i64 %289, 3
  %291 = xor i64 %290, -1
  %292 = getelementptr %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %283, i64 %291
  store %"class.spvtools::opt::Instruction"*** %292, %"class.spvtools::opt::Instruction"**** %209, align 8
  br label %293

293:                                              ; preds = %285, %281, %273
  %294 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %295 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %294, align 8
  %296 = icmp eq %"class.spvtools::opt::Instruction"*** %295, null
  br i1 %296, label %299, label %297

297:                                              ; preds = %293
  %298 = bitcast %"class.spvtools::opt::Instruction"*** %295 to i8*
  tail call void @_ZdlPv(i8* %298) #12
  br label %299

299:                                              ; preds = %293, %297
  %300 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 1, i32 0, i32 2
  %301 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %300, align 8
  %302 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %301, i64 0, i32 1
  %303 = load void (i8*)*, void (i8*)** %302, align 8
  %304 = icmp eq void (i8*)* %303, null
  br i1 %304, label %308, label %305

305:                                              ; preds = %299
  %306 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %307 = load i8*, i8** %306, align 8
  tail call void %303(i8* %307) #11
  br label %308

308:                                              ; preds = %299, %305
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN8spvtools3opt4EdgeENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.1036"*, %"class.std::__1::__tree_node.1145"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1145"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1145"* %1 to %"class.std::__1::__tree_node.1145"**
  %6 = load %"class.std::__1::__tree_node.1145"*, %"class.std::__1::__tree_node.1145"** %5, align 8
  tail call void @_ZNSt3__16__treeIN8spvtools3opt4EdgeENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.1036"* %0, %"class.std::__1::__tree_node.1145"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1145", %"class.std::__1::__tree_node.1145"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1145"**
  %9 = load %"class.std::__1::__tree_node.1145"*, %"class.std::__1::__tree_node.1145"** %8, align 8
  tail call void @_ZNSt3__16__treeIN8spvtools3opt4EdgeENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.1036"* %0, %"class.std::__1::__tree_node.1145"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node.1145"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_7CCPPass7ProcessEvE3$_5S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Function"*) #1 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::CCPPass"**
  %4 = load %"class.spvtools::opt::CCPPass"*, %"class.spvtools::opt::CCPPass"** %3, align 8
  %5 = tail call zeroext i1 @_ZN8spvtools3opt7CCPPass18PropagateConstantsEPNS0_8FunctionE(%"class.spvtools::opt::CCPPass"* %4, %"class.spvtools::opt::Function"* %1) #11
  ret i1 %5
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
