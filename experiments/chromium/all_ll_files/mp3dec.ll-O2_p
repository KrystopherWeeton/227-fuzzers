; ModuleID = '../../third_party/ffmpeg/libavformat/mp3dec.c'
source_filename = "../../third_party/ffmpeg/libavformat/mp3dec.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVCodecTag = type { i32, i32 }
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32, i32 }
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, {}*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVRational = type { i32, i32 }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, i8*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, i8*, %struct.AVProbeData, [17 x i64], i8*, i32, i32, i32, i32, i32, i32, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32, i64, i32 }
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVProfile = type { i32, i8* }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVStreamInternal = type { i32, %struct.AVBSFContext*, i32, %struct.AVCodecContext*, i32, i32, %struct.anon, i32, i32, %struct.FFFrac*, %struct.anon.0*, %struct.AVIndexEntry*, i32, i32, i64, i64, i32, i32, i32, i64, i64, i64, i32, i64, i64, i32, i32, [17 x i64], [17 x i8], [17 x i64], i64, i8, i8, i32, %struct.AVRational, %struct.AVProbeData, %struct.AVPacketList* }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.anon = type { %struct.AVBSFContext*, %struct.AVPacket*, i32 }
%struct.FFFrac = type { i64, i64, i64 }
%struct.anon.0 = type { i64, i64, i32, i64, [2 x [399 x double]]*, i64, i64, i32, i32, i64, i64, i32, i64, i32 }
%struct.AVIndexEntry = type { i64, i64, i32, i32 }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVDictionary = type opaque
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type { i32, %struct.AVPacketList*, %struct.AVPacketList*, i64, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, i32, i64, %struct.AVRational, i32, i32, i32, i64, i32, i32, %struct.AVDictionary*, i32, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal**, i32* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%struct.MPADecodeHeader = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.MP3DecContext = type { %struct.AVClass*, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVDictionaryEntry = type { i8*, i8* }
%union.unaligned_32 = type { i32 }

@.str = private unnamed_addr constant [4 x i8] c"mp3\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"MP2/3 (MPEG audio layer 2/3)\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"mp2,mp3,m2a,mpa\00", align 1
@demuxer_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([2 x %struct.AVOption], [2 x %struct.AVOption]* @options, i32 0, i32 0), i32 3687524, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 4, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null, %struct.AVClass* (i8**)* null }, align 8
@ff_mp3_demuxer = hidden local_unnamed_addr global %struct.AVInputFormat { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i32 0, i32 0), %struct.AVCodecTag** null, %struct.AVClass* @demuxer_class, i8* null, %struct.AVInputFormat* null, i32 0, i32 48, i32 (%struct.AVProbeData*)* @mp3_read_probe, i32 (%struct.AVFormatContext*)* @mp3_read_header, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @mp3_read_packet, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*, i32, i64, i32)* @mp3_seek, i64 (%struct.AVFormatContext*, i32, i64*, i64)* null, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null }, align 8
@options = internal constant [2 x %struct.AVOption] [%struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i32 0, i32 0), i32 28, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 2, i8* null }, %struct.AVOption zeroinitializer], align 16
@.str.3 = private unnamed_addr constant [7 x i8] c"usetoc\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"use table of contents\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"ID3\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"skip_id3v1_tags\00", align 1
@.str.7 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.8 = private unnamed_addr constant [35 x i8] c"Skipping %d bytes of junk at %ld.\0A\00", align 1
@.str.9 = private unnamed_addr constant [49 x i8] c"Invalid frame size (%d): Could not seek to %ld.\0A\00", align 1
@.str.10 = private unnamed_addr constant [51 x i8] c"Failed to read frame size: Could not seek to %ld.\0A\00", align 1
@mp3_parse_info_tag.xing_offtbl = internal unnamed_addr constant [2 x [2 x i64]] [[2 x i64] [i64 32, i64 17], [2 x i64] [i64 17, i64 9]], align 16
@.str.11 = private unnamed_addr constant [65 x i8] c"invalid concatenated file detected - using bitrate for duration\0A\00", align 1
@.str.12 = private unnamed_addr constant [52 x i8] c"filesize and duration do not match (growing file?)\0A\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"pad %d %d\0A\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"encoder\00", align 1
@.str.15 = private unnamed_addr constant [49 x i8] c"Cannot determine file size, skipping TOC table.\0A\00", align 1
@.str.16 = private unnamed_addr constant [42 x i8] c"Using MP3 TOC to seek; may be imprecise.\0A\00", align 1
@.str.17 = private unnamed_addr constant [50 x i8] c"Using scaling to seek VBR MP3; may be imprecise.\0A\00", align 1
@.str.18 = private unnamed_addr constant [24 x i8] c"Could not seek to %ld.\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define internal i32 @mp3_read_probe(%struct.AVProbeData* nocapture readonly) #0 {
  %2 = alloca %struct.MPADecodeHeader, align 4
  %3 = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds i8, i8* %4, i64 %7
  %9 = getelementptr inbounds i8, i8* %8, i64 -4
  %10 = icmp ult i8* %4, %9
  br i1 %10, label %11, label %18

11:                                               ; preds = %1, %15
  %12 = phi i8* [ %16, %15 ], [ %4, %1 ]
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = getelementptr inbounds i8, i8* %12, i64 1
  %17 = icmp eq i8* %16, %9
  br i1 %17, label %115, label %11

18:                                               ; preds = %11, %1
  %19 = phi i8* [ %4, %1 ], [ %12, %11 ]
  %20 = icmp ult i8* %19, %9
  br i1 %20, label %21, label %115

21:                                               ; preds = %18
  %22 = bitcast %struct.MPADecodeHeader* %2 to i8*
  %23 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %2, i64 0, i32 0
  %24 = ptrtoint i8* %9 to i64
  %25 = getelementptr inbounds i8, i8* %9, i64 4
  br label %26

26:                                               ; preds = %21, %83
  %27 = phi i8* [ %19, %21 ], [ %96, %83 ]
  %28 = phi i32 [ 0, %21 ], [ %90, %83 ]
  %29 = phi i32 [ 0, %21 ], [ %95, %83 ]
  %30 = phi i32 [ 0, %21 ], [ %93, %83 ]
  %31 = phi i32 [ 0, %21 ], [ %88, %83 ]
  %32 = icmp ult i8* %27, %9
  br i1 %32, label %33, label %83

33:                                               ; preds = %26, %79
  %34 = phi i8* [ %80, %79 ], [ %27, %26 ]
  %35 = phi i32 [ %72, %79 ], [ 0, %26 ]
  %36 = phi i32 [ %81, %79 ], [ 0, %26 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %22, i8 -86, i64 40, i1 false)
  %37 = bitcast i8* %34 to i32*
  %38 = load i32, i32* %37, align 1
  %39 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %38) #5, !srcloc !2
  %40 = call i32 @avpriv_mpegaudio_decode_header(%struct.MPADecodeHeader* nonnull %2, i32 %39) #4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %76

42:                                               ; preds = %33
  %43 = load i32, i32* %23, align 4
  %44 = sext i32 %43 to i64
  %45 = ptrtoint i8* %34 to i64
  %46 = sub i64 %24, %45
  %47 = icmp slt i64 %46, %44
  %48 = select i1 %47, i64 %46, i64 %44
  %49 = trunc i64 %48 to i32
  %50 = shl i64 %48, 32
  %51 = ashr exact i64 %50, 32
  %52 = getelementptr inbounds i8, i8* %34, i64 %51
  %53 = icmp sgt i64 %50, 17179869184
  br i1 %53, label %54, label %71

54:                                               ; preds = %42
  %55 = getelementptr inbounds i8, i8* %34, i64 4
  br label %56

56:                                               ; preds = %54, %56
  %57 = phi i32 [ %66, %56 ], [ 0, %54 ]
  %58 = phi i8* [ %67, %56 ], [ %55, %54 ]
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 1
  %61 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %60) #5, !srcloc !2
  %62 = xor i32 %61, %39
  %63 = and i32 %62, -127793
  %64 = icmp eq i32 %63, 0
  %65 = zext i1 %64 to i32
  %66 = add nuw nsw i32 %57, %65
  %67 = getelementptr inbounds i8, i8* %58, i64 1
  %68 = icmp ult i8* %67, %52
  br i1 %68, label %56, label %69

69:                                               ; preds = %56
  %70 = icmp ugt i32 %66, 2
  br i1 %70, label %76, label %71

71:                                               ; preds = %42, %69
  %72 = add nsw i32 %43, %35
  %73 = icmp sgt i32 %43, %49
  br i1 %73, label %74, label %79

74:                                               ; preds = %71
  %75 = add nuw nsw i32 %36, 1
  br label %76

76:                                               ; preds = %33, %69, %74
  %77 = phi i32 [ %75, %74 ], [ %36, %69 ], [ %36, %33 ]
  %78 = phi i32 [ %72, %74 ], [ %35, %69 ], [ %35, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #4
  br label %83

79:                                               ; preds = %71
  %80 = getelementptr inbounds i8, i8* %34, i64 %44
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #4
  %81 = add nuw nsw i32 %36, 1
  %82 = icmp ult i8* %80, %9
  br i1 %82, label %33, label %83

83:                                               ; preds = %79, %26, %76
  %84 = phi i8* [ %34, %76 ], [ %27, %26 ], [ %80, %79 ]
  %85 = phi i32 [ %77, %76 ], [ 0, %26 ], [ %81, %79 ]
  %86 = phi i32 [ %78, %76 ], [ 0, %26 ], [ %72, %79 ]
  %87 = icmp sgt i32 %31, %85
  %88 = select i1 %87, i32 %31, i32 %85
  %89 = icmp sgt i32 %28, %86
  %90 = select i1 %89, i32 %28, i32 %86
  %91 = icmp eq i8* %27, %19
  %92 = icmp eq i8* %84, %25
  %93 = select i1 %91, i32 %85, i32 %30
  %94 = and i1 %91, %92
  %95 = select i1 %94, i32 1, i32 %29
  %96 = getelementptr inbounds i8, i8* %84, i64 1
  %97 = icmp ult i8* %96, %9
  br i1 %97, label %26, label %98

98:                                               ; preds = %83
  %99 = icmp sgt i32 %93, 6
  br i1 %99, label %142, label %100

100:                                              ; preds = %98
  %101 = icmp sgt i32 %88, 200
  br i1 %101, label %102, label %106

102:                                              ; preds = %100
  %103 = load i32, i32* %5, align 8
  %104 = shl nsw i32 %90, 1
  %105 = icmp slt i32 %103, %104
  br i1 %105, label %142, label %111

106:                                              ; preds = %100
  %107 = icmp sgt i32 %88, 3
  br i1 %107, label %108, label %115

108:                                              ; preds = %106
  %109 = load i32, i32* %5, align 8
  %110 = shl nsw i32 %90, 1
  br label %111

111:                                              ; preds = %108, %102
  %112 = phi i32 [ %110, %108 ], [ %104, %102 ]
  %113 = phi i32 [ %109, %108 ], [ %103, %102 ]
  %114 = icmp slt i32 %113, %112
  br i1 %114, label %142, label %115

115:                                              ; preds = %15, %18, %111, %106
  %116 = phi i8* [ %19, %111 ], [ %19, %106 ], [ %19, %18 ], [ %9, %15 ]
  %117 = phi i32 [ %88, %111 ], [ %88, %106 ], [ 0, %18 ], [ 0, %15 ]
  %118 = phi i32 [ %93, %111 ], [ %93, %106 ], [ 0, %18 ], [ 0, %15 ]
  %119 = phi i32 [ %95, %111 ], [ %95, %106 ], [ 0, %18 ], [ 0, %15 ]
  %120 = phi i32 [ %90, %111 ], [ %90, %106 ], [ 0, %18 ], [ 0, %15 ]
  %121 = call i32 @ff_id3v2_match(i8* %116, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0)) #4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %115
  %124 = call i32 @ff_id3v2_tag_len(i8* %116) #4
  %125 = shl nsw i32 %124, 1
  %126 = load i32, i32* %5, align 8
  %127 = icmp slt i32 %125, %126
  br i1 %127, label %131, label %128

128:                                              ; preds = %123
  %129 = icmp slt i32 %126, 1048576
  %130 = select i1 %129, i32 12, i32 48
  br label %142

131:                                              ; preds = %123, %115
  %132 = icmp sgt i32 %118, 1
  %133 = icmp ne i32 %119, 0
  %134 = and i1 %132, %133
  br i1 %134, label %142, label %135

135:                                              ; preds = %131
  %136 = icmp sgt i32 %117, 0
  br i1 %136, label %137, label %141

137:                                              ; preds = %135
  %138 = load i32, i32* %5, align 8
  %139 = mul nsw i32 %120, 10
  %140 = icmp slt i32 %138, %139
  br i1 %140, label %142, label %141

141:                                              ; preds = %137, %135
  br label %142

142:                                              ; preds = %137, %131, %111, %102, %98, %141, %128
  %143 = phi i32 [ %130, %128 ], [ 0, %141 ], [ 51, %98 ], [ 50, %102 ], [ 25, %111 ], [ 5, %131 ], [ 1, %137 ]
  ret i32 %143
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mp3_read_header(%struct.AVFormatContext*) #0 {
  %2 = alloca [10 x i8], align 4
  %3 = alloca %struct.MPADecodeHeader, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %7 = bitcast i8** %6 to %struct.MP3DecContext**
  %8 = load %struct.MP3DecContext*, %struct.MP3DecContext** %7, align 8
  %9 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 29
  %10 = load %struct.AVDictionary*, %struct.AVDictionary** %9, align 8
  %11 = tail call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), %struct.AVDictionaryEntry* null, i32 2) #4
  tail call void @av_dict_free(%struct.AVDictionary** %9) #4
  %12 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 55
  %13 = load %struct.AVFormatInternal*, %struct.AVFormatInternal** %12, align 8
  %14 = getelementptr inbounds %struct.AVFormatInternal, %struct.AVFormatInternal* %13, i64 0, i32 17
  %15 = bitcast %struct.AVDictionary** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %struct.AVDictionary** %9 to i64*
  store i64 %16, i64* %17, align 8
  store %struct.AVDictionary* null, %struct.AVDictionary** %14, align 8
  %18 = tail call %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext* %0, %struct.AVCodec* null) #4
  %19 = icmp eq %struct.AVStream* %18, null
  br i1 %19, label %478, label %20

20:                                               ; preds = %1
  %21 = icmp eq %struct.AVDictionaryEntry* %11, null
  %22 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 19
  %23 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %22, align 8
  %24 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %23, i64 0, i32 0
  store i32 1, i32* %24, align 8
  %25 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %22, align 8
  %26 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %25, i64 0, i32 1
  store i32 86017, i32* %26, align 4
  %27 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 28
  store i32 5, i32* %27, align 4
  %28 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 5
  store i64 0, i64* %28, align 8
  tail call void @avpriv_set_pts_info(%struct.AVStream* nonnull %18, i32 64, i32 1, i32 14112000) #4
  %29 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %30 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %31 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %30, i64 0, i32 20
  store i64 -1, i64* %31, align 8
  %32 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %33 = tail call i64 @avio_seek(%struct.AVIOContext* %32, i64 0, i32 1) #4
  br i1 %21, label %34, label %39

34:                                               ; preds = %20
  %35 = load %struct.AVDictionary*, %struct.AVDictionary** %9, align 8
  %36 = tail call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %35, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), %struct.AVDictionaryEntry* null, i32 2) #4
  %37 = icmp eq %struct.AVDictionaryEntry* %36, null
  br i1 %37, label %38, label %39

38:                                               ; preds = %34
  tail call void @ff_id3v1_read(%struct.AVFormatContext* %0) #4
  br label %39

39:                                               ; preds = %34, %20, %38
  %40 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %41 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %40, i64 0, i32 19
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %39
  %46 = tail call i64 @avio_size(%struct.AVIOContext* %40) #4
  %47 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %8, i64 0, i32 1
  store i64 %46, i64* %47, align 8
  %48 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  br label %49

49:                                               ; preds = %39, %45
  %50 = phi %struct.AVIOContext* [ %40, %39 ], [ %48, %45 ]
  %51 = bitcast %struct.MPADecodeHeader* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %51) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %51, i8 -86, i64 40, i1 false) #4
  %52 = load %struct.MP3DecContext*, %struct.MP3DecContext** %7, align 8
  tail call void @ffio_init_checksum(%struct.AVIOContext* %50, i64 (i64, i8*, i32)* nonnull @ff_crcA001_update, i64 0) #4
  %53 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %54 = tail call i32 @avio_rb32(%struct.AVIOContext* %53) #4
  %55 = call i32 @avpriv_mpegaudio_decode_header(%struct.MPADecodeHeader* nonnull %3, i32 %54) #4
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %374, label %57

57:                                               ; preds = %49
  %58 = icmp eq i32 %55, 0
  %59 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %3, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = select i1 %58, i32 %60, i32 0
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %3, i64 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 3
  br i1 %65, label %66, label %374

66:                                               ; preds = %57
  %67 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %3, i64 0, i32 9
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  %70 = select i1 %69, i32 1152, i32 576
  %71 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %52, i64 0, i32 6
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %52, i64 0, i32 7
  store i32 0, i32* %72, align 4
  %73 = getelementptr inbounds [10 x i8], [10 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %73) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %73, i8 -86, i64 10, i1 false) #4
  %74 = load %struct.MP3DecContext*, %struct.MP3DecContext** %7, align 8
  %75 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %76 = call i64 @avio_size(%struct.AVIOContext* %75) #4
  %77 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %78 = call i64 @avio_seek(%struct.AVIOContext* %77, i64 0, i32 1) #4
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %84, label %80

80:                                               ; preds = %66
  %81 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %82 = call i64 @avio_seek(%struct.AVIOContext* %81, i64 0, i32 1) #4
  %83 = sub i64 %76, %82
  br label %84

84:                                               ; preds = %80, %66
  %85 = phi i64 [ %83, %80 ], [ 0, %66 ]
  %86 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %87 = load i32, i32* %67, align 4
  %88 = icmp eq i32 %87, 1
  %89 = zext i1 %88 to i64
  %90 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %3, i64 0, i32 6
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 1
  %93 = zext i1 %92 to i64
  %94 = getelementptr inbounds [2 x [2 x i64]], [2 x [2 x i64]]* @mp3_parse_info_tag.xing_offtbl, i64 0, i64 %89, i64 %93
  %95 = load i64, i64* %94, align 8
  %96 = call i64 @avio_skip(%struct.AVIOContext* %86, i64 %95) #4
  %97 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %98 = call i32 @avio_rb32(%struct.AVIOContext* %97) #4
  %99 = icmp eq i32 %98, 1231971951
  %100 = zext i1 %99 to i32
  %101 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %74, i64 0, i32 8
  store i32 %100, i32* %101, align 8
  switch i32 %98, label %305 [
    i32 1483304551, label %102
    i32 1231971951, label %102
  ]

102:                                              ; preds = %84, %84
  %103 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %104 = call i32 @avio_rb32(%struct.AVIOContext* %103) #4
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %102
  %108 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %109 = call i32 @avio_rb32(%struct.AVIOContext* %108) #4
  %110 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %74, i64 0, i32 6
  store i32 %109, i32* %110, align 8
  br label %111

111:                                              ; preds = %107, %102
  %112 = and i32 %104, 2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %118, label %114

114:                                              ; preds = %111
  %115 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %116 = call i32 @avio_rb32(%struct.AVIOContext* %115) #4
  %117 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %74, i64 0, i32 7
  store i32 %116, i32* %117, align 4
  br label %118

118:                                              ; preds = %114, %111
  %119 = icmp eq i64 %85, 0
  br i1 %119, label %139, label %120

120:                                              ; preds = %118
  %121 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %74, i64 0, i32 7
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %139, label %124

124:                                              ; preds = %120
  %125 = zext i32 %122 to i64
  %126 = icmp ugt i64 %85, %125
  %127 = select i1 %126, i64 %125, i64 %85
  %128 = select i1 %126, i64 %85, i64 %125
  %129 = sub i64 %128, %127
  %130 = lshr i64 %127, 4
  %131 = icmp ugt i64 %129, %130
  %132 = and i1 %126, %131
  br i1 %132, label %133, label %136

133:                                              ; preds = %124
  %134 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %74, i64 0, i32 6
  store i32 0, i32* %134, align 8
  %135 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %135, i32 24, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.11, i64 0, i64 0)) #4
  br label %139

136:                                              ; preds = %124
  br i1 %131, label %137, label %139

137:                                              ; preds = %136
  %138 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %138, i32 24, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i64 0, i64 0)) #4
  br label %139

139:                                              ; preds = %137, %136, %133, %120, %118
  %140 = and i32 %104, 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %200, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %74, i64 0, i32 7
  %144 = load i32, i32* %143, align 4
  %145 = zext i32 %144 to i64
  %146 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %74, i64 0, i32 6
  %147 = load i32, i32* %146, align 8
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %3, i64 0, i32 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 4
  %152 = zext i32 %150 to i64
  %153 = shl nuw i64 %152, 32
  %154 = zext i32 %70 to i64
  %155 = or i64 %153, %154
  %156 = bitcast %struct.AVRational* %151 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = call i64 @av_rescale_q(i64 %148, i64 %155, i64 %157) #5
  %159 = load %struct.MP3DecContext*, %struct.MP3DecContext** %7, align 8
  %160 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 15
  %161 = load i32, i32* %160, align 8
  %162 = and i32 %161, 524288
  %163 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %159, i64 0, i32 5
  %164 = load i32, i32* %163, align 4
  %165 = or i32 %164, %162
  %166 = icmp ne i32 %165, 0
  %167 = icmp sgt i64 %158, 0
  %168 = and i1 %167, %166
  %169 = zext i1 %168 to i32
  %170 = icmp eq i32 %144, 0
  br i1 %170, label %171, label %177

171:                                              ; preds = %142
  %172 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %173 = call i64 @avio_size(%struct.AVIOContext* %172) #4
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %171
  %176 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %176, i32 24, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15, i64 0, i64 0)) #4
  br label %177

177:                                              ; preds = %175, %171, %142
  %178 = phi i64 [ %145, %142 ], [ %173, %171 ], [ 0, %175 ]
  %179 = phi i32 [ %169, %142 ], [ %169, %171 ], [ 0, %175 ]
  %180 = icmp eq i32 %179, 0
  %181 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  br label %182

182:                                              ; preds = %194, %177
  %183 = phi i64 [ 0, %177 ], [ %195, %194 ]
  %184 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %185 = call i32 @avio_r8(%struct.AVIOContext* %184) #4
  br i1 %180, label %194, label %186

186:                                              ; preds = %182
  %187 = load %struct.AVStream**, %struct.AVStream*** %181, align 8
  %188 = load %struct.AVStream*, %struct.AVStream** %187, align 8
  %189 = and i32 %185, 255
  %190 = zext i32 %189 to i64
  %191 = call i64 @av_rescale(i64 %190, i64 %178, i64 256) #5
  %192 = call i64 @av_rescale(i64 %183, i64 %158, i64 100) #5
  %193 = call i32 @av_add_index_entry(%struct.AVStream* %188, i64 %191, i64 %192, i32 0, i32 0, i32 1) #4
  br label %194

194:                                              ; preds = %186, %182
  %195 = add nuw nsw i64 %183, 1
  %196 = icmp eq i64 %195, 100
  br i1 %196, label %197, label %182

197:                                              ; preds = %194
  br i1 %180, label %200, label %198

198:                                              ; preds = %197
  %199 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %159, i64 0, i32 2
  store i32 1, i32* %199, align 8
  br label %200

200:                                              ; preds = %198, %197, %139
  %201 = and i32 %104, 8
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %206, label %203

203:                                              ; preds = %200
  %204 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %205 = call i32 @avio_rb32(%struct.AVIOContext* %204) #4
  br label %206

206:                                              ; preds = %203, %200
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %73, i8 0, i64 10, i1 false) #4
  %207 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %208 = call i32 @avio_read(%struct.AVIOContext* %207, i8* nonnull %73, i32 9) #4
  %209 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %210 = call i32 @avio_r8(%struct.AVIOContext* %209) #4
  %211 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %212 = call i32 @avio_r8(%struct.AVIOContext* %211) #4
  %213 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %214 = call i32 @avio_rb32(%struct.AVIOContext* %213) #4
  %215 = zext i32 %214 to i64
  %216 = call i64 @av_rescale(i64 %215, i64 100000, i64 8388608) #5
  %217 = trunc i64 %216 to i32
  %218 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %219 = call i32 @avio_rb16(%struct.AVIOContext* %218) #4
  %220 = and i32 %219, 57344
  %221 = icmp eq i32 %220, 8192
  br i1 %221, label %222, label %228

222:                                              ; preds = %206
  %223 = and i32 %219, 511
  %224 = and i32 %219, 512
  %225 = icmp eq i32 %224, 0
  %226 = select i1 %225, i32 10000, i32 -10000
  %227 = mul nsw i32 %226, %223
  br label %228

228:                                              ; preds = %222, %206
  %229 = phi i32 [ -2147483648, %206 ], [ %227, %222 ]
  %230 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %231 = call i32 @avio_rb16(%struct.AVIOContext* %230) #4
  %232 = and i32 %231, 57344
  %233 = icmp eq i32 %232, 16384
  br i1 %233, label %234, label %240

234:                                              ; preds = %228
  %235 = and i32 %231, 511
  %236 = and i32 %231, 512
  %237 = icmp eq i32 %236, 0
  %238 = select i1 %237, i32 10000, i32 -10000
  %239 = mul nsw i32 %238, %235
  br label %240

240:                                              ; preds = %234, %228
  %241 = phi i32 [ -2147483648, %228 ], [ %239, %234 ]
  %242 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %243 = call i32 @avio_r8(%struct.AVIOContext* %242) #4
  %244 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %245 = call i32 @avio_r8(%struct.AVIOContext* %244) #4
  %246 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %247 = call i32 @avio_rb24(%struct.AVIOContext* %246) #4
  %248 = bitcast [10 x i8]* %2 to i32*
  %249 = load i32, i32* %248, align 4
  %250 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %249) #5, !srcloc !2
  switch i32 %250, label %283 [
    i32 1279348037, label %251
    i32 1281455718, label %251
    i32 1281455715, label %251
  ]

251:                                              ; preds = %240, %240, %240
  %252 = lshr i32 %247, 12
  %253 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %74, i64 0, i32 3
  store i32 %252, i32* %253, align 4
  %254 = and i32 %247, 4095
  %255 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %74, i64 0, i32 4
  store i32 %254, i32* %255, align 8
  %256 = add nuw nsw i32 %252, 529
  %257 = zext i32 %256 to i64
  %258 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 40
  %259 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %258, align 8
  %260 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %259, i64 0, i32 19
  store i64 %257, i64* %260, align 8
  %261 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %74, i64 0, i32 6
  %262 = load i32, i32* %261, align 8
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %279, label %264

264:                                              ; preds = %251
  %265 = load i32, i32* %255, align 8
  %266 = sub i32 529, %265
  %267 = sext i32 %266 to i64
  %268 = zext i32 %262 to i64
  %269 = zext i32 %70 to i64
  %270 = mul nuw nsw i64 %268, %269
  %271 = add nsw i64 %270, %267
  %272 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %258, align 8
  %273 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %272, i64 0, i32 20
  store i64 %271, i64* %273, align 8
  %274 = load i32, i32* %261, align 8
  %275 = zext i32 %274 to i64
  %276 = mul nuw nsw i64 %275, %269
  %277 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %258, align 8
  %278 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %277, i64 0, i32 21
  store i64 %276, i64* %278, align 8
  br label %279

279:                                              ; preds = %264, %251
  %280 = bitcast %struct.AVFormatContext* %0 to i8*
  %281 = load i32, i32* %253, align 4
  %282 = load i32, i32* %255, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %280, i32 48, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i32 %281, i32 %282) #4
  br label %283

283:                                              ; preds = %279, %240
  %284 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %285 = call i32 @avio_r8(%struct.AVIOContext* %284) #4
  %286 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %287 = call i32 @avio_r8(%struct.AVIOContext* %286) #4
  %288 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %289 = call i32 @avio_rb16(%struct.AVIOContext* %288) #4
  %290 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %291 = call i32 @avio_rb32(%struct.AVIOContext* %290) #4
  %292 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %293 = call i32 @avio_rb16(%struct.AVIOContext* %292) #4
  %294 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %295 = call i64 @ffio_get_checksum(%struct.AVIOContext* %294) #4
  %296 = trunc i64 %295 to i32
  %297 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %298 = call i32 @avio_rb16(%struct.AVIOContext* %297) #4
  %299 = and i32 %296, 65535
  %300 = icmp eq i32 %298, %299
  br i1 %300, label %301, label %305

301:                                              ; preds = %283
  %302 = call i32 @ff_replaygain_export_raw(%struct.AVStream* nonnull %18, i32 %229, i32 %217, i32 %241, i32 0) #4
  %303 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 11
  %304 = call i32 @av_dict_set(%struct.AVDictionary** %303, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i8* nonnull %73, i32 0) #4
  br label %305

305:                                              ; preds = %301, %283, %84
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %73) #4
  %306 = load %struct.MP3DecContext*, %struct.MP3DecContext** %7, align 8
  %307 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %308 = add nsw i64 %33, 36
  %309 = call i64 @avio_seek(%struct.AVIOContext* %307, i64 %308, i32 0) #4
  %310 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %311 = call i32 @avio_rb32(%struct.AVIOContext* %310) #4
  %312 = icmp eq i32 %311, 1447187017
  br i1 %312, label %313, label %326

313:                                              ; preds = %305
  %314 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %315 = call i32 @avio_rb16(%struct.AVIOContext* %314) #4
  %316 = icmp eq i32 %315, 1
  br i1 %316, label %317, label %326

317:                                              ; preds = %313
  %318 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %319 = call i64 @avio_skip(%struct.AVIOContext* %318, i64 4) #4
  %320 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %321 = call i32 @avio_rb32(%struct.AVIOContext* %320) #4
  %322 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %306, i64 0, i32 7
  store i32 %321, i32* %322, align 4
  %323 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %324 = call i32 @avio_rb32(%struct.AVIOContext* %323) #4
  %325 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %306, i64 0, i32 6
  store i32 %324, i32* %325, align 8
  br label %326

326:                                              ; preds = %317, %313, %305
  %327 = load i32, i32* %71, align 8
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %332

329:                                              ; preds = %326
  %330 = load i32, i32* %72, align 4
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %374, label %332

332:                                              ; preds = %329, %326
  %333 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %334 = add nsw i64 %33, %62
  %335 = call i64 @avio_seek(%struct.AVIOContext* %333, i64 %334, i32 0) #4
  %336 = load i32, i32* %71, align 8
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %351, label %338

338:                                              ; preds = %332
  %339 = zext i32 %336 to i64
  %340 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %3, i64 0, i32 3
  %341 = load i32, i32* %340, align 4
  %342 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 4
  %343 = zext i32 %341 to i64
  %344 = shl nuw i64 %343, 32
  %345 = zext i32 %70 to i64
  %346 = or i64 %344, %345
  %347 = bitcast %struct.AVRational* %342 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = call i64 @av_rescale_q(i64 %339, i64 %346, i64 %348) #5
  %350 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 6
  store i64 %349, i64* %350, align 8
  br label %351

351:                                              ; preds = %338, %332
  %352 = load i32, i32* %72, align 4
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %373, label %354

354:                                              ; preds = %351
  %355 = load i32, i32* %71, align 8
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %373, label %357

357:                                              ; preds = %354
  %358 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %52, i64 0, i32 8
  %359 = load i32, i32* %358, align 8
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %361, label %373

361:                                              ; preds = %357
  %362 = zext i32 %352 to i64
  %363 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %3, i64 0, i32 3
  %364 = load i32, i32* %363, align 4
  %365 = shl nsw i32 %364, 3
  %366 = sext i32 %365 to i64
  %367 = zext i32 %355 to i64
  %368 = zext i32 %70 to i64
  %369 = mul nuw nsw i64 %367, %368
  %370 = call i64 @av_rescale(i64 %362, i64 %366, i64 %369) #5
  %371 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %22, align 8
  %372 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %371, i64 0, i32 6
  store i64 %370, i64* %372, align 8
  br label %373

373:                                              ; preds = %357, %354, %351, %361
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %51) #4
  br label %377

374:                                              ; preds = %329, %57, %49
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %51) #4
  %375 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %376 = call i64 @avio_seek(%struct.AVIOContext* %375, i64 %33, i32 0) #4
  br label %377

377:                                              ; preds = %373, %374
  %378 = load %struct.AVDictionary*, %struct.AVDictionary** %9, align 8
  %379 = call i32 @ff_replaygain_export(%struct.AVStream* nonnull %18, %struct.AVDictionary* %378) #4
  %380 = icmp slt i32 %379, 0
  br i1 %380, label %478, label %381

381:                                              ; preds = %377
  %382 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %383 = call i64 @avio_seek(%struct.AVIOContext* %382, i64 0, i32 1) #4
  %384 = bitcast i32* %4 to i8*
  %385 = bitcast i32* %5 to i8*
  br label %386

386:                                              ; preds = %453, %381
  %387 = phi i64 [ 0, %381 ], [ %454, %453 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %384) #4
  store i32 -1431655766, i32* %4, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %385) #4
  store i32 -1431655766, i32* %5, align 4
  %388 = and i64 %387, 1023
  %389 = icmp eq i64 %388, 0
  br i1 %389, label %390, label %394

390:                                              ; preds = %386
  %391 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %392 = add nuw nsw i64 %387, 1028
  %393 = call i32 @ffio_ensure_seekback(%struct.AVIOContext* %391, i64 %392) #4
  br label %394

394:                                              ; preds = %386, %390
  %395 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %396 = add nsw i64 %383, %387
  %397 = call fastcc i32 @check(%struct.AVIOContext* %395, i64 %396, i32* nonnull %4)
  %398 = icmp sgt i32 %397, 0
  br i1 %398, label %399, label %435

399:                                              ; preds = %394
  %400 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %401 = call i64 @avio_seek(%struct.AVIOContext* %400, i64 %383, i32 0) #4
  %402 = trunc i64 %401 to i32
  %403 = icmp slt i32 %402, 0
  br i1 %403, label %448, label %404

404:                                              ; preds = %399
  %405 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %406 = trunc i64 %387 to i32
  %407 = add i32 %406, 1028
  %408 = add i32 %407, %397
  %409 = sext i32 %408 to i64
  %410 = call i32 @ffio_ensure_seekback(%struct.AVIOContext* %405, i64 %409) #4
  %411 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %412 = sext i32 %397 to i64
  %413 = add nsw i64 %396, %412
  %414 = call fastcc i32 @check(%struct.AVIOContext* %411, i64 %413, i32* nonnull %5)
  %415 = icmp sgt i32 %414, -1
  br i1 %415, label %416, label %431

416:                                              ; preds = %404
  %417 = load i32, i32* %4, align 4
  %418 = load i32, i32* %5, align 4
  %419 = xor i32 %418, %417
  %420 = and i32 %419, -127793
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %422, label %441

422:                                              ; preds = %416
  %423 = trunc i64 %387 to i32
  %424 = bitcast %struct.AVFormatContext* %0 to i8*
  %425 = icmp eq i32 %423, 0
  %426 = select i1 %425, i32 40, i32 32
  call void (i8*, i32, i8*, ...) @av_log(i8* %424, i32 %426, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8, i64 0, i64 0), i32 %423, i64 %383) #4
  %427 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %428 = call i64 @avio_seek(%struct.AVIOContext* %427, i64 %396, i32 0) #4
  %429 = trunc i64 %428 to i32
  %430 = icmp slt i32 %429, 0
  br i1 %430, label %450, label %452

431:                                              ; preds = %404
  %432 = icmp eq i32 %414, -2
  br i1 %432, label %433, label %441

433:                                              ; preds = %431
  %434 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %434, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i64 0, i64 0), i32 %397, i64 %413) #4
  br label %450

435:                                              ; preds = %394
  %436 = icmp eq i32 %397, -2
  br i1 %436, label %437, label %441

437:                                              ; preds = %435
  %438 = bitcast %struct.AVFormatContext* %0 to i8*
  %439 = add nuw i64 %387, 1026
  %440 = and i64 %439, 4294967295
  call void (i8*, i32, i8*, ...) @av_log(i8* %438, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i64 %440) #4
  br label %450

441:                                              ; preds = %416, %435, %431
  %442 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %443 = call i64 @avio_seek(%struct.AVIOContext* %442, i64 %383, i32 0) #4
  %444 = trunc i64 %443 to i32
  %445 = icmp slt i32 %444, 0
  br i1 %445, label %446, label %453

446:                                              ; preds = %441
  %447 = trunc i64 %443 to i32
  br label %450

448:                                              ; preds = %399
  %449 = trunc i64 %401 to i32
  br label %450

450:                                              ; preds = %446, %448, %433, %437, %422
  %451 = phi i32 [ -22, %437 ], [ -22, %433 ], [ %429, %422 ], [ %447, %446 ], [ %449, %448 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %385) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %384) #4
  br label %478

452:                                              ; preds = %422
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %385) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %384) #4
  br label %456

453:                                              ; preds = %441
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %385) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %384) #4
  %454 = add nuw nsw i64 %387, 1
  %455 = icmp eq i64 %454, 65536
  br i1 %455, label %456, label %386

456:                                              ; preds = %453, %452
  %457 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 40
  %458 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %457, align 8
  %459 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %458, i64 0, i32 12
  %460 = load i32, i32* %459, align 8
  %461 = icmp sgt i32 %460, 0
  br i1 %461, label %462, label %478

462:                                              ; preds = %456, %462
  %463 = phi i64 [ %472, %462 ], [ 0, %456 ]
  %464 = load %struct.AVIOContext*, %struct.AVIOContext** %29, align 8
  %465 = call i64 @avio_seek(%struct.AVIOContext* %464, i64 0, i32 1) #4
  %466 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %457, align 8
  %467 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %466, i64 0, i32 11
  %468 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %467, align 8
  %469 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %468, i64 %463, i32 0
  %470 = load i64, i64* %469, align 8
  %471 = add nsw i64 %470, %465
  store i64 %471, i64* %469, align 8
  %472 = add nuw nsw i64 %463, 1
  %473 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %457, align 8
  %474 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %473, i64 0, i32 12
  %475 = load i32, i32* %474, align 8
  %476 = sext i32 %475 to i64
  %477 = icmp slt i64 %472, %476
  br i1 %477, label %462, label %478

478:                                              ; preds = %462, %456, %450, %377, %1
  %479 = phi i32 [ -12, %1 ], [ %379, %377 ], [ %451, %450 ], [ 0, %456 ], [ 0, %462 ]
  ret i32 %479
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mp3_read_packet(%struct.AVFormatContext* nocapture readonly, %struct.AVPacket*) #0 {
  %3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %4 = bitcast i8** %3 to %struct.MP3DecContext**
  %5 = load %struct.MP3DecContext*, %struct.MP3DecContext** %4, align 8
  %6 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %6, align 8
  %8 = tail call i64 @avio_seek(%struct.AVIOContext* %7, i64 0, i32 1) #4
  %9 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %5, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %10, 128
  %12 = icmp sgt i64 %10, %8
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %19

14:                                               ; preds = %2
  %15 = sub nsw i64 %10, %8
  %16 = icmp slt i64 %15, 1024
  %17 = select i1 %16, i64 %15, i64 1024
  %18 = trunc i64 %17 to i32
  br label %19

19:                                               ; preds = %14, %2
  %20 = phi i32 [ 1024, %2 ], [ %18, %14 ]
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %6, align 8
  %22 = tail call i32 @av_get_packet(%struct.AVIOContext* %21, %struct.AVPacket* %1, i32 %20) #4
  %23 = icmp slt i32 %22, 1
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = icmp eq i32 %22, 0
  %26 = select i1 %25, i32 -541478725, i32 %22
  br label %32

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 6
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -3
  store i32 %30, i32* %28, align 8
  %31 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 5
  store i32 0, i32* %31, align 4
  br label %32

32:                                               ; preds = %24, %27
  %33 = phi i32 [ %22, %27 ], [ %26, %24 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mp3_seek(%struct.AVFormatContext*, i32, i64, i32) #0 {
  %5 = alloca %struct.AVIndexEntry, align 8
  %6 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %7 = bitcast i8** %6 to %struct.MP3DecContext**
  %8 = load %struct.MP3DecContext*, %struct.MP3DecContext** %7, align 8
  %9 = bitcast %struct.AVIndexEntry* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #4
  %10 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %5, i64 0, i32 0
  %11 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %5, i64 0, i32 1
  %12 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %13 = bitcast %struct.AVIndexEntry* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = load %struct.AVStream**, %struct.AVStream*** %12, align 8
  %15 = load %struct.AVStream*, %struct.AVStream** %14, align 8
  %16 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 15
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 524288
  %19 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %8, i64 0, i32 7
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = icmp eq i32 %20, 0
  br i1 %22, label %23, label %36

23:                                               ; preds = %4
  %24 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %25 = load %struct.AVIOContext*, %struct.AVIOContext** %24, align 8
  %26 = tail call i64 @avio_size(%struct.AVIOContext* %25) #4
  %27 = icmp sgt i64 %26, 0
  br i1 %27, label %28, label %36

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 55
  %30 = load %struct.AVFormatInternal*, %struct.AVFormatInternal** %29, align 8
  %31 = getelementptr inbounds %struct.AVFormatInternal, %struct.AVFormatInternal* %30, i64 0, i32 3
  %32 = load i64, i64* %31, align 8
  %33 = icmp sgt i64 %26, %32
  %34 = sub nsw i64 %26, %32
  %35 = select i1 %33, i64 %34, i64 %21
  br label %36

36:                                               ; preds = %28, %23, %4
  %37 = phi i64 [ %21, %4 ], [ 0, %23 ], [ %35, %28 ]
  %38 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %8, i64 0, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %64, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %8, i64 0, i32 5
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = icmp eq i32 %18, 0
  br i1 %46, label %203, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %8, i64 0, i32 8
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %66

51:                                               ; preds = %47, %41
  %52 = tail call i32 @av_index_search_timestamp(%struct.AVStream* %15, i64 %2, i32 %3) #4
  %53 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %53, i32 24, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0)) #4
  %54 = icmp slt i32 %52, 0
  br i1 %54, label %203, label %55

55:                                               ; preds = %51
  %56 = sext i32 %52 to i64
  %57 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %15, i64 0, i32 40
  %58 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %57, align 8
  %59 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %58, i64 0, i32 11
  %60 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %59, align 8
  %61 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %60, i64 %56
  %62 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  br label %91

64:                                               ; preds = %36
  %65 = icmp eq i32 %18, 0
  br i1 %65, label %203, label %66

66:                                               ; preds = %47, %64
  %67 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %15, i64 0, i32 6
  %68 = load i64, i64* %67, align 8
  %69 = icmp sgt i64 %68, 0
  %70 = icmp sgt i64 %37, 0
  %71 = and i1 %70, %69
  br i1 %71, label %72, label %203

72:                                               ; preds = %66
  %73 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %8, i64 0, i32 8
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %72
  %77 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %77, i32 24, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.17, i64 0, i64 0)) #4
  %78 = load i64, i64* %67, align 8
  br label %79

79:                                               ; preds = %72, %76
  %80 = phi i64 [ %68, %72 ], [ %78, %76 ]
  %81 = icmp slt i64 %2, 0
  %82 = icmp slt i64 %80, %2
  %83 = select i1 %82, i64 %80, i64 %2
  %84 = select i1 %81, i64 0, i64 %83
  store i64 %84, i64* %11, align 8
  %85 = tail call i64 @av_rescale(i64 %84, i64 %37, i64 %80) #5
  %86 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 55
  %87 = load %struct.AVFormatInternal*, %struct.AVFormatInternal** %86, align 8
  %88 = getelementptr inbounds %struct.AVFormatInternal, %struct.AVFormatInternal* %87, i64 0, i32 3
  %89 = load i64, i64* %88, align 8
  %90 = add nsw i64 %89, %85
  store i64 %90, i64* %10, align 8
  br label %91

91:                                               ; preds = %55, %79
  %92 = phi i64 [ %90, %79 ], [ %63, %55 ]
  %93 = phi %struct.AVIndexEntry* [ %5, %79 ], [ %61, %55 ]
  %94 = and i32 %3, 1
  %95 = icmp eq i32 %94, 0
  %96 = select i1 %95, i64 1, i64 -1
  %97 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %98 = load %struct.AVIOContext*, %struct.AVIOContext** %97, align 8
  %99 = icmp sgt i64 %92, 4096
  %100 = select i1 %99, i64 %92, i64 4096
  %101 = add nsw i64 %100, -4096
  %102 = tail call i64 @avio_seek(%struct.AVIOContext* %98, i64 %101, i32 0) #4
  %103 = load %struct.AVIOContext*, %struct.AVIOContext** %97, align 8
  %104 = tail call i64 @avio_seek(%struct.AVIOContext* %103, i64 %92, i32 0) #4
  %105 = icmp slt i64 %104, 0
  br i1 %105, label %171, label %106

106:                                              ; preds = %91, %137
  %107 = phi i32 [ %140, %137 ], [ 0, %91 ]
  %108 = phi i32 [ %139, %137 ], [ 999, %91 ]
  %109 = phi i64 [ %138, %137 ], [ %92, %91 ]
  %110 = add nsw i32 %107, -1024
  %111 = sub nsw i32 0, %107
  %112 = select i1 %95, i32 %110, i32 %111
  %113 = sext i32 %112 to i64
  %114 = add nsw i64 %92, %113
  %115 = icmp slt i64 %114, 0
  br i1 %115, label %137, label %116

116:                                              ; preds = %106
  %117 = load %struct.AVIOContext*, %struct.AVIOContext** %97, align 8
  %118 = tail call fastcc i32 @check(%struct.AVIOContext* %117, i64 %114, i32* null) #4
  %119 = sext i32 %118 to i64
  %120 = icmp slt i32 %118, 0
  br i1 %120, label %121, label %125

121:                                              ; preds = %116
  switch i32 %118, label %125 [
    i32 -1, label %137
    i32 -2, label %122
  ]

122:                                              ; preds = %153, %142, %121
  %123 = phi i64 [ %114, %121 ], [ %130, %142 ], [ %149, %153 ]
  %124 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %124, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i64 0, i64 0), i64 %123) #4
  br label %171

125:                                              ; preds = %121, %116
  %126 = mul nsw i64 %96, %113
  %127 = icmp sgt i64 %126, -1
  %128 = select i1 %127, i64 %114, i64 -1
  %129 = select i1 %127, i32 1, i32 999
  %130 = add nsw i64 %114, %119
  %131 = load %struct.AVIOContext*, %struct.AVIOContext** %97, align 8
  %132 = tail call fastcc i32 @check(%struct.AVIOContext* %131, i64 %130, i32* null) #4
  %133 = sext i32 %132 to i64
  %134 = icmp slt i32 %132, 0
  br i1 %134, label %142, label %143

135:                                              ; preds = %162
  %136 = icmp eq i32 %164, 0
  br i1 %136, label %166, label %137

137:                                              ; preds = %162, %153, %142, %135, %121, %106
  %138 = phi i64 [ %109, %106 ], [ %163, %135 ], [ %109, %162 ], [ %109, %153 ], [ %109, %142 ], [ %109, %121 ]
  %139 = phi i32 [ %108, %106 ], [ %164, %135 ], [ %108, %162 ], [ %108, %153 ], [ %108, %142 ], [ %108, %121 ]
  %140 = add nuw nsw i32 %107, 1
  %141 = icmp eq i32 %140, 4096
  br i1 %141, label %166, label %106

142:                                              ; preds = %125
  switch i32 %132, label %143 [
    i32 -1, label %137
    i32 -2, label %122
  ]

143:                                              ; preds = %142, %125
  %144 = sub nsw i64 %92, %130
  %145 = mul nsw i64 %144, %96
  %146 = icmp slt i64 %145, 1
  %147 = select i1 %146, i64 %130, i64 %128
  %148 = select i1 %146, i32 0, i32 %129
  %149 = add nsw i64 %130, %133
  %150 = load %struct.AVIOContext*, %struct.AVIOContext** %97, align 8
  %151 = tail call fastcc i32 @check(%struct.AVIOContext* %150, i64 %149, i32* null) #4
  %152 = icmp slt i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %143
  switch i32 %151, label %154 [
    i32 -1, label %137
    i32 -2, label %122
  ]

154:                                              ; preds = %153, %143
  %155 = sub nsw i64 %92, %149
  %156 = mul nsw i64 %155, %96
  %157 = icmp slt i64 %156, 1
  br i1 %157, label %158, label %162

158:                                              ; preds = %154
  %159 = icmp ugt i32 %148, 1
  %160 = select i1 %159, i64 %149, i64 %147
  %161 = select i1 %159, i32 1, i32 %148
  br label %162

162:                                              ; preds = %158, %154
  %163 = phi i64 [ %147, %154 ], [ %160, %158 ]
  %164 = phi i32 [ %148, %154 ], [ %161, %158 ]
  %165 = icmp sgt i32 %108, %164
  br i1 %165, label %135, label %137

166:                                              ; preds = %135, %137
  %167 = phi i64 [ %138, %137 ], [ %163, %135 ]
  %168 = load %struct.AVIOContext*, %struct.AVIOContext** %97, align 8
  %169 = tail call i64 @avio_seek(%struct.AVIOContext* %168, i64 %167, i32 0) #4
  %170 = icmp slt i64 %169, 0
  br i1 %170, label %171, label %174

171:                                              ; preds = %122, %91, %166
  %172 = phi i64 [ %169, %166 ], [ -22, %122 ], [ %104, %91 ]
  %173 = trunc i64 %172 to i32
  br label %203

174:                                              ; preds = %166
  %175 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %8, i64 0, i32 8
  %176 = load i32, i32* %175, align 8
  %177 = icmp ne i32 %176, 0
  %178 = icmp eq %struct.AVIndexEntry* %93, %5
  %179 = and i1 %178, %177
  br i1 %179, label %180, label %200

180:                                              ; preds = %174
  %181 = getelementptr inbounds %struct.MP3DecContext, %struct.MP3DecContext* %8, i64 0, i32 6
  %182 = load i32, i32* %181, align 8
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %200, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %15, i64 0, i32 6
  %186 = load i64, i64* %185, align 8
  %187 = zext i32 %182 to i64
  %188 = call i64 @av_rescale(i64 %186, i64 1, i64 %187) #5
  %189 = shl i64 %188, 32
  %190 = ashr exact i64 %189, 32
  %191 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 55
  %192 = load %struct.AVFormatInternal*, %struct.AVFormatInternal** %191, align 8
  %193 = getelementptr inbounds %struct.AVFormatInternal, %struct.AVFormatInternal* %192, i64 0, i32 3
  %194 = load i64, i64* %193, align 8
  %195 = sub nsw i64 %169, %194
  %196 = load i32, i32* %19, align 4
  %197 = zext i32 %196 to i64
  %198 = call i64 @av_rescale(i64 %195, i64 %187, i64 %197) #5
  %199 = mul nsw i64 %198, %190
  store i64 %199, i64* %11, align 8
  br label %200

200:                                              ; preds = %180, %184, %174
  %201 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %93, i64 0, i32 1
  %202 = load i64, i64* %201, align 8
  call void @ff_update_cur_dts(%struct.AVFormatContext* %0, %struct.AVStream* %15, i64 %202) #4
  br label %203

203:                                              ; preds = %51, %45, %66, %64, %200, %171
  %204 = phi i32 [ %173, %171 ], [ 0, %200 ], [ -1, %45 ], [ -1, %64 ], [ -1, %66 ], [ %52, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #4
  ret i32 %204
}

declare i8* @av_default_item_name(i8*) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i32 @avpriv_mpegaudio_decode_header(%struct.MPADecodeHeader*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @ff_id3v2_match(i8*, i8*) local_unnamed_addr #1

declare i32 @ff_id3v2_tag_len(i8*) local_unnamed_addr #1

declare %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary*, i8*, %struct.AVDictionaryEntry*, i32) local_unnamed_addr #1

declare void @av_dict_free(%struct.AVDictionary**) local_unnamed_addr #1

declare %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext*, %struct.AVCodec*) local_unnamed_addr #1

declare void @avpriv_set_pts_info(%struct.AVStream*, i32, i32, i32) local_unnamed_addr #1

declare void @ff_id3v1_read(%struct.AVFormatContext*) local_unnamed_addr #1

declare i64 @avio_size(%struct.AVIOContext*) local_unnamed_addr #1

declare i64 @avio_seek(%struct.AVIOContext*, i64, i32) local_unnamed_addr #1

declare i32 @ff_replaygain_export(%struct.AVStream*, %struct.AVDictionary*) local_unnamed_addr #1

declare i32 @ffio_ensure_seekback(%struct.AVIOContext*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @check(%struct.AVIOContext*, i64, i32*) unnamed_addr #0 {
  %4 = alloca %union.unaligned_32, align 4
  %5 = alloca %struct.MPADecodeHeader, align 4
  %6 = tail call i64 @avio_seek(%struct.AVIOContext* %0, i64 %1, i32 0) #4
  %7 = bitcast %union.unaligned_32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #4
  %8 = bitcast %struct.MPADecodeHeader* %5 to i8*
  %9 = getelementptr inbounds %union.unaligned_32, %union.unaligned_32* %4, i64 0, i32 0
  store i32 -1431655766, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 -86, i64 40, i1 false)
  %10 = icmp slt i64 %6, 0
  br i1 %10, label %40, label %11

11:                                               ; preds = %3
  %12 = call i32 @avio_read(%struct.AVIOContext* %0, i8* nonnull %7, i32 4) #4
  %13 = icmp slt i32 %12, 4
  br i1 %13, label %40, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %union.unaligned_32, %union.unaligned_32* %4, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %16) #5, !srcloc !2
  %18 = icmp ult i32 %17, -2097152
  %19 = and i32 %17, 1572864
  %20 = icmp eq i32 %19, 524288
  %21 = or i1 %18, %20
  %22 = and i32 %17, 393216
  %23 = icmp eq i32 %22, 0
  %24 = or i1 %23, %21
  %25 = and i32 %17, 61440
  %26 = icmp eq i32 %25, 61440
  %27 = or i1 %26, %24
  %28 = and i32 %17, 3072
  %29 = icmp eq i32 %28, 3072
  %30 = or i1 %29, %27
  br i1 %30, label %40, label %31

31:                                               ; preds = %14
  %32 = call i32 @avpriv_mpegaudio_decode_header(%struct.MPADecodeHeader* nonnull %5, i32 %17) #4
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %40, label %34

34:                                               ; preds = %31
  %35 = icmp eq i32* %2, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %34
  store i32 %17, i32* %2, align 4
  br label %37

37:                                               ; preds = %34, %36
  %38 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %5, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br label %40

40:                                               ; preds = %14, %31, %11, %3, %37
  %41 = phi i32 [ %39, %37 ], [ -2, %3 ], [ -2, %11 ], [ -1, %31 ], [ -1, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #4
  ret i32 %41
}

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #1

declare void @ffio_init_checksum(%struct.AVIOContext*, i64 (i64, i8*, i32)*, i64) local_unnamed_addr #1

declare i64 @ff_crcA001_update(i64, i8*, i32) #1

declare i32 @avio_rb32(%struct.AVIOContext*) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i64 @av_rescale_q(i64, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i64 @av_rescale(i64, i64, i64) local_unnamed_addr #3

declare i64 @avio_skip(%struct.AVIOContext*, i64) local_unnamed_addr #1

declare i32 @avio_read(%struct.AVIOContext*, i8*, i32) local_unnamed_addr #1

declare i32 @avio_r8(%struct.AVIOContext*) local_unnamed_addr #1

declare i32 @avio_rb16(%struct.AVIOContext*) local_unnamed_addr #1

declare i32 @avio_rb24(%struct.AVIOContext*) local_unnamed_addr #1

declare i64 @ffio_get_checksum(%struct.AVIOContext*) local_unnamed_addr #1

declare i32 @ff_replaygain_export_raw(%struct.AVStream*, i32, i32, i32, i32) local_unnamed_addr #1

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) local_unnamed_addr #1

declare i32 @av_add_index_entry(%struct.AVStream*, i64, i64, i32, i32, i32) local_unnamed_addr #1

declare i32 @av_get_packet(%struct.AVIOContext*, %struct.AVPacket*, i32) local_unnamed_addr #1

declare i32 @av_index_search_timestamp(%struct.AVStream*, i64, i32) local_unnamed_addr #1

declare void @ff_update_cur_dts(%struct.AVFormatContext*, %struct.AVStream*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 1490047}
