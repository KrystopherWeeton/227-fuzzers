; ModuleID = '../../third_party/skia/src/core/SkQuadClipper.cpp'
source_filename = "../../third_party/skia/src/core/SkQuadClipper.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkQuadClipper = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkPoint = type { float, float }

@_ZN13SkQuadClipperC1Ev = hidden unnamed_addr alias void (%class.SkQuadClipper*), void (%class.SkQuadClipper*)* @_ZN13SkQuadClipperC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkQuadClipperC2Ev(%class.SkQuadClipper* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkQuadClipper* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 16, i1 false) #4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN13SkQuadClipper7setClipERK7SkIRect(%class.SkQuadClipper* nocapture, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = sitofp i32 %4 to float
  %6 = getelementptr inbounds %class.SkQuadClipper, %class.SkQuadClipper* %0, i64 0, i32 0, i32 0
  store float %5, float* %6, align 4
  %7 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = sitofp i32 %8 to float
  %10 = getelementptr inbounds %class.SkQuadClipper, %class.SkQuadClipper* %0, i64 0, i32 0, i32 1
  store float %9, float* %10, align 4
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = sitofp i32 %12 to float
  %14 = getelementptr inbounds %class.SkQuadClipper, %class.SkQuadClipper* %0, i64 0, i32 0, i32 2
  store float %13, float* %14, align 4
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = sitofp i32 %16 to float
  %18 = getelementptr inbounds %class.SkQuadClipper, %class.SkQuadClipper* %0, i64 0, i32 0, i32 3
  store float %17, float* %18, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkQuadClipper8clipQuadEPK7SkPointPS0_(%class.SkQuadClipper* nocapture readonly, %struct.SkPoint* nocapture readonly, %struct.SkPoint*) local_unnamed_addr #0 align 2 {
  %4 = alloca [2 x float], align 4
  %5 = alloca [5 x %struct.SkPoint], align 16
  %6 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 1
  %9 = load float, float* %8, align 4
  %10 = fcmp ogt float %7, %9
  br i1 %10, label %11, label %28

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2
  %13 = bitcast %struct.SkPoint* %12 to i64*
  %14 = bitcast %struct.SkPoint* %2 to i64*
  %15 = load i64, i64* %13, align 4
  store i64 %15, i64* %14, align 4
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %17 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 1
  %18 = bitcast %struct.SkPoint* %16 to i64*
  %19 = bitcast %struct.SkPoint* %17 to i64*
  %20 = load i64, i64* %18, align 4
  store i64 %20, i64* %19, align 4
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 2
  %22 = bitcast %struct.SkPoint* %1 to i64*
  %23 = bitcast %struct.SkPoint* %21 to i64*
  %24 = load i64, i64* %22, align 4
  store i64 %24, i64* %23, align 4
  %25 = lshr i64 %24, 32
  %26 = trunc i64 %25 to i32
  %27 = bitcast i32 %26 to float
  br label %33

28:                                               ; preds = %3
  %29 = bitcast %struct.SkPoint* %2 to i8*
  %30 = bitcast %struct.SkPoint* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 24, i1 false)
  %31 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 2, i32 1
  %32 = load float, float* %31, align 4
  br label %33

33:                                               ; preds = %28, %11
  %34 = phi float [ %27, %11 ], [ %32, %28 ]
  %35 = phi i1 [ true, %11 ], [ false, %28 ]
  %36 = getelementptr inbounds %class.SkQuadClipper, %class.SkQuadClipper* %0, i64 0, i32 0, i32 1
  %37 = load float, float* %36, align 4
  %38 = getelementptr inbounds %class.SkQuadClipper, %class.SkQuadClipper* %0, i64 0, i32 0, i32 3
  %39 = load float, float* %38, align 4
  %40 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 2
  %41 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 2, i32 1
  %42 = fcmp ugt float %34, %37
  br i1 %42, label %43, label %129

43:                                               ; preds = %33
  %44 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %45 = load float, float* %44, align 4
  %46 = fcmp ult float %45, %39
  br i1 %46, label %47, label %129

47:                                               ; preds = %43
  %48 = bitcast [5 x %struct.SkPoint]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %48) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %48, i8 -1, i64 40, i1 false)
  %49 = fcmp olt float %45, %37
  br i1 %49, label %50, label %84

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 1, i32 1
  %52 = load float, float* %51, align 4
  %53 = fsub float %45, %52
  %54 = fsub float %53, %52
  %55 = fadd float %34, %54
  %56 = fsub float %52, %45
  %57 = fmul float %56, 2.000000e+00
  %58 = fsub float %45, %37
  %59 = bitcast [2 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #4
  %60 = getelementptr inbounds [2 x float], [2 x float]* %4, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %60, align 4
  %61 = getelementptr inbounds [2 x float], [2 x float]* %4, i64 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %61, align 4
  %62 = call i32 @_Z19SkFindUnitQuadRootsfffPf(float %55, float %57, float %58, float* nonnull %60) #4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #4
  %65 = load float, float* %44, align 4
  %66 = fcmp olt float %65, %37
  br i1 %66, label %79, label %80

67:                                               ; preds = %50
  %68 = load float, float* %60, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #4
  %69 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %5, i64 0, i64 0
  call void @_Z12SkChopQuadAtPK7SkPointPS_f(%struct.SkPoint* %2, %struct.SkPoint* nonnull %69, float %68) #4
  %70 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %5, i64 0, i64 2
  %71 = bitcast %struct.SkPoint* %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 16
  %73 = bitcast %struct.SkPoint* %2 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %73, align 4
  %74 = load float, float* %41, align 4
  %75 = extractelement <2 x i64> %72, i32 0
  %76 = lshr i64 %75, 32
  %77 = trunc i64 %76 to i32
  %78 = bitcast i32 %77 to float
  br label %84

79:                                               ; preds = %64
  store float %37, float* %44, align 4
  br label %80

80:                                               ; preds = %64, %79
  %81 = phi float [ %65, %64 ], [ %37, %79 ]
  %82 = load float, float* %51, align 4
  %83 = fcmp olt float %82, %37
  br i1 %83, label %136, label %137

84:                                               ; preds = %137, %140, %67, %47
  %85 = phi float [ %78, %67 ], [ %45, %47 ], [ %81, %140 ], [ %81, %137 ]
  %86 = phi float [ %74, %67 ], [ %34, %47 ], [ %37, %140 ], [ %138, %137 ]
  %87 = fcmp ogt float %86, %39
  br i1 %87, label %88, label %117

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 1, i32 1
  %90 = load float, float* %89, align 4
  %91 = fsub float %85, %90
  %92 = fsub float %91, %90
  %93 = fadd float %86, %92
  %94 = fsub float %90, %85
  %95 = fmul float %94, 2.000000e+00
  %96 = fsub float %85, %39
  %97 = bitcast [2 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #4
  %98 = getelementptr inbounds [2 x float], [2 x float]* %4, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %98, align 4
  %99 = getelementptr inbounds [2 x float], [2 x float]* %4, i64 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %99, align 4
  %100 = call i32 @_Z19SkFindUnitQuadRootsfffPf(float %93, float %95, float %96, float* nonnull %98) #4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #4
  %103 = load float, float* %44, align 4
  %104 = fcmp ogt float %103, %39
  br i1 %104, label %113, label %114

105:                                              ; preds = %88
  %106 = load float, float* %98, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #4
  %107 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %5, i64 0, i64 0
  call void @_Z12SkChopQuadAtPK7SkPointPS_f(%struct.SkPoint* %2, %struct.SkPoint* nonnull %107, float %106) #4
  %108 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %5, i64 0, i64 1
  %109 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 1
  %110 = bitcast %struct.SkPoint* %108 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8
  %112 = bitcast %struct.SkPoint* %109 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %112, align 4
  br label %117

113:                                              ; preds = %102
  store float %39, float* %44, align 4
  br label %114

114:                                              ; preds = %102, %113
  %115 = load float, float* %89, align 4
  %116 = fcmp ogt float %115, %39
  br i1 %116, label %131, label %132

117:                                              ; preds = %132, %135, %105, %84
  br i1 %35, label %118, label %128

118:                                              ; preds = %117
  %119 = bitcast %struct.SkPoint* %2 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = bitcast float* %44 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = bitcast %struct.SkPoint* %40 to i64*
  %124 = bitcast %struct.SkPoint* %2 to i64*
  %125 = load i64, i64* %123, align 4
  store i64 %125, i64* %124, align 4
  %126 = bitcast %struct.SkPoint* %40 to i32*
  store i32 %120, i32* %126, align 4
  %127 = bitcast float* %41 to i32*
  store i32 %122, i32* %127, align 4
  br label %128

128:                                              ; preds = %118, %117
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %48) #4
  br label %129

129:                                              ; preds = %33, %43, %128
  %130 = phi i1 [ true, %128 ], [ false, %43 ], [ false, %33 ]
  ret i1 %130

131:                                              ; preds = %114
  store float %39, float* %89, align 4
  br label %132

132:                                              ; preds = %131, %114
  %133 = load float, float* %41, align 4
  %134 = fcmp ogt float %133, %39
  br i1 %134, label %135, label %117

135:                                              ; preds = %132
  store float %39, float* %41, align 4
  br label %117

136:                                              ; preds = %80
  store float %37, float* %51, align 4
  br label %137

137:                                              ; preds = %136, %80
  %138 = load float, float* %41, align 4
  %139 = fcmp olt float %138, %37
  br i1 %139, label %140, label %84

140:                                              ; preds = %137
  store float %37, float* %41, align 4
  br label %84
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_Z12SkChopQuadAtPK7SkPointPS_f(%struct.SkPoint*, %struct.SkPoint*, float) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_Z19SkFindUnitQuadRootsfffPf(float, float, float, float*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
