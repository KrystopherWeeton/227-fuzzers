; ModuleID = '../../third_party/lzma_sdk/Bra.c'
source_filename = "../../third_party/lzma_sdk/Bra.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @ARM_Convert(i8* nocapture, i64, i32, i32) local_unnamed_addr #0 {
  %5 = icmp ult i64 %1, 4
  br i1 %5, label %47, label %6

6:                                                ; preds = %4
  %7 = add i64 %1, -4
  %8 = add i32 %2, 8
  %9 = icmp eq i32 %3, 0
  br label %10

10:                                               ; preds = %6, %44
  %11 = phi i64 [ 0, %6 ], [ %45, %44 ]
  %12 = or i64 %11, 3
  %13 = getelementptr inbounds i8, i8* %0, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, -21
  br i1 %15, label %16, label %44

16:                                               ; preds = %10
  %17 = or i64 %11, 2
  %18 = getelementptr inbounds i8, i8* %0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 16
  %22 = or i64 %11, 1
  %23 = getelementptr inbounds i8, i8* %0, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 8
  %27 = or i32 %26, %21
  %28 = getelementptr inbounds i8, i8* %0, i64 %11
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = or i32 %27, %30
  %32 = shl nuw nsw i32 %31, 2
  %33 = trunc i64 %11 to i32
  %34 = add i32 %8, %33
  %35 = sub i32 0, %34
  %36 = select i1 %9, i32 %35, i32 %34
  %37 = add i32 %32, %36
  %38 = lshr i32 %37, 2
  %39 = lshr i32 %37, 18
  %40 = trunc i32 %39 to i8
  store i8 %40, i8* %18, align 1
  %41 = lshr i32 %37, 10
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %23, align 1
  %43 = trunc i32 %38 to i8
  store i8 %43, i8* %28, align 1
  br label %44

44:                                               ; preds = %10, %16
  %45 = add i64 %11, 4
  %46 = icmp ugt i64 %45, %7
  br i1 %46, label %47, label %10

47:                                               ; preds = %44, %4
  %48 = phi i64 [ 0, %4 ], [ %45, %44 ]
  ret i64 %48
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @ARMT_Convert(i8* nocapture, i64, i32, i32) local_unnamed_addr #0 {
  %5 = icmp ult i64 %1, 4
  br i1 %5, label %62, label %6

6:                                                ; preds = %4
  %7 = add i64 %1, -4
  %8 = add i32 %2, 4
  %9 = icmp eq i32 %3, 0
  br label %10

10:                                               ; preds = %6, %58
  %11 = phi i64 [ 0, %6 ], [ %60, %58 ]
  %12 = add i64 %11, 1
  %13 = getelementptr inbounds i8, i8* %0, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = and i32 %15, 248
  %17 = icmp eq i32 %16, 240
  br i1 %17, label %18, label %58

18:                                               ; preds = %10
  %19 = add i64 %11, 3
  %20 = getelementptr inbounds i8, i8* %0, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = and i32 %22, 248
  %24 = icmp eq i32 %23, 248
  br i1 %24, label %25, label %58

25:                                               ; preds = %18
  %26 = shl nuw nsw i32 %15, 19
  %27 = and i32 %26, 3670016
  %28 = getelementptr inbounds i8, i8* %0, i64 %11
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 11
  %32 = shl nuw nsw i32 %22, 8
  %33 = and i32 %32, 1792
  %34 = add i64 %11, 2
  %35 = getelementptr inbounds i8, i8* %0, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = or i32 %33, %27
  %39 = or i32 %38, %31
  %40 = or i32 %39, %37
  %41 = shl nuw nsw i32 %40, 1
  %42 = trunc i64 %11 to i32
  %43 = add i32 %8, %42
  %44 = sub i32 0, %43
  %45 = select i1 %9, i32 %44, i32 %43
  %46 = add i32 %41, %45
  %47 = lshr i32 %46, 1
  %48 = lshr i32 %46, 20
  %49 = trunc i32 %48 to i8
  %50 = and i8 %49, 7
  %51 = or i8 %50, -16
  store i8 %51, i8* %13, align 1
  %52 = lshr i32 %46, 12
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %28, align 1
  %54 = lshr i32 %46, 9
  %55 = trunc i32 %54 to i8
  %56 = or i8 %55, -8
  store i8 %56, i8* %20, align 1
  %57 = trunc i32 %47 to i8
  store i8 %57, i8* %35, align 1
  br label %58

58:                                               ; preds = %10, %18, %25
  %59 = phi i64 [ %34, %25 ], [ %11, %18 ], [ %11, %10 ]
  %60 = add i64 %59, 2
  %61 = icmp ugt i64 %60, %7
  br i1 %61, label %62, label %10

62:                                               ; preds = %58, %4
  %63 = phi i64 [ 0, %4 ], [ %60, %58 ]
  ret i64 %63
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @PPC_Convert(i8* nocapture, i64, i32, i32) local_unnamed_addr #0 {
  %5 = icmp ult i64 %1, 4
  br i1 %5, label %59, label %6

6:                                                ; preds = %4
  %7 = add i64 %1, -4
  %8 = icmp eq i32 %3, 0
  br label %9

9:                                                ; preds = %6, %56
  %10 = phi i64 [ 0, %6 ], [ %57, %56 ]
  %11 = getelementptr inbounds i8, i8* %0, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = and i32 %13, 252
  %15 = icmp eq i32 %14, 72
  br i1 %15, label %16, label %56

16:                                               ; preds = %9
  %17 = or i64 %10, 3
  %18 = getelementptr inbounds i8, i8* %0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = and i32 %20, 3
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %56

23:                                               ; preds = %16
  %24 = shl nuw i32 %13, 24
  %25 = and i32 %24, 50331648
  %26 = or i64 %10, 1
  %27 = getelementptr inbounds i8, i8* %0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i64 %10, 2
  %32 = getelementptr inbounds i8, i8* %0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 8
  %36 = and i32 %20, 252
  %37 = or i32 %36, %25
  %38 = or i32 %37, %30
  %39 = or i32 %38, %35
  %40 = trunc i64 %10 to i32
  %41 = add i32 %40, %2
  %42 = sub i32 0, %41
  %43 = select i1 %8, i32 %42, i32 %41
  %44 = add i32 %39, %43
  %45 = lshr i32 %44, 24
  %46 = trunc i32 %45 to i8
  %47 = and i8 %46, 3
  %48 = or i8 %47, 72
  store i8 %48, i8* %11, align 1
  %49 = lshr i32 %44, 16
  %50 = trunc i32 %49 to i8
  store i8 %50, i8* %27, align 1
  %51 = lshr i32 %44, 8
  %52 = trunc i32 %51 to i8
  store i8 %52, i8* %32, align 1
  %53 = and i8 %19, 3
  %54 = trunc i32 %44 to i8
  %55 = or i8 %53, %54
  store i8 %55, i8* %18, align 1
  br label %56

56:                                               ; preds = %9, %16, %23
  %57 = add i64 %10, 4
  %58 = icmp ugt i64 %57, %7
  br i1 %58, label %59, label %9

59:                                               ; preds = %56, %4
  %60 = phi i64 [ 0, %4 ], [ %57, %56 ]
  ret i64 %60
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @SPARC_Convert(i8* nocapture, i64, i32, i32) local_unnamed_addr #0 {
  %5 = icmp ult i64 %1, 4
  br i1 %5, label %70, label %6

6:                                                ; preds = %4
  %7 = add i64 %1, -4
  %8 = icmp eq i32 %3, 0
  br label %9

9:                                                ; preds = %6, %64
  %10 = phi i64 [ 0, %6 ], [ %66, %64 ]
  %11 = phi i32 [ 0, %6 ], [ %65, %64 ]
  %12 = getelementptr inbounds i8, i8* %0, i64 %10
  %13 = load i8, i8* %12, align 1
  switch i8 %13, label %64 [
    i8 64, label %14
    i8 127, label %20
  ]

14:                                               ; preds = %9
  %15 = or i32 %11, 1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %0, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = icmp ult i8 %18, 64
  br i1 %19, label %26, label %64

20:                                               ; preds = %9
  %21 = or i32 %11, 1
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %0, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = icmp ugt i8 %24, -65
  br i1 %25, label %26, label %64

26:                                               ; preds = %20, %14
  %27 = phi i8 [ %24, %20 ], [ %18, %14 ]
  %28 = phi i64 [ %22, %20 ], [ %16, %14 ]
  %29 = getelementptr inbounds i8, i8* %0, i64 %28
  %30 = zext i8 %27 to i32
  %31 = shl nuw nsw i32 %30, 16
  %32 = or i32 %11, 2
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %0, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = shl nuw nsw i32 %36, 8
  %38 = or i32 %31, %37
  %39 = or i32 %11, 3
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %0, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = or i32 %38, %43
  %45 = shl nuw nsw i32 %44, 2
  %46 = add i32 %11, %2
  %47 = sub i32 0, %46
  %48 = select i1 %8, i32 %47, i32 %46
  %49 = add i32 %45, %48
  %50 = lshr i32 %49, 2
  %51 = and i32 %50, 4194304
  %52 = sub nsw i32 0, %51
  %53 = and i32 %50, 4128768
  %54 = or i32 %53, %52
  %55 = lshr i32 %52, 24
  %56 = trunc i32 %55 to i8
  %57 = and i8 %56, 63
  %58 = or i8 %57, 64
  store i8 %58, i8* %12, align 1
  %59 = lshr exact i32 %54, 16
  %60 = trunc i32 %59 to i8
  store i8 %60, i8* %29, align 1
  %61 = lshr i32 %49, 10
  %62 = trunc i32 %61 to i8
  store i8 %62, i8* %34, align 1
  %63 = trunc i32 %50 to i8
  store i8 %63, i8* %41, align 1
  br label %64

64:                                               ; preds = %9, %14, %20, %26
  %65 = add i32 %11, 4
  %66 = zext i32 %65 to i64
  %67 = icmp ult i64 %7, %66
  br i1 %67, label %68, label %9

68:                                               ; preds = %64
  %69 = zext i32 %65 to i64
  br label %70

70:                                               ; preds = %68, %4
  %71 = phi i64 [ 0, %4 ], [ %69, %68 ]
  ret i64 %71
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
