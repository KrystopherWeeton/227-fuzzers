; ModuleID = '../../third_party/blink/renderer/core/animation/animation_input_helpers.cc'
source_filename = "../../third_party/blink/renderer/core/animation/animation_input_helpers.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<blink::QualifiedName, const blink::QualifiedName *, blink::QualifiedNameHash, WTF::HashTraits<blink::QualifiedName>, WTF::HashTraits<const blink::QualifiedName *>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<blink::QualifiedName, const blink::QualifiedName *, blink::QualifiedNameHash, WTF::HashTraits<blink::QualifiedName>, WTF::HashTraits<const blink::QualifiedName *>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.71", %"class.WTF::Vector.71", i8, i32, %"class.blink::Member.82", %"class.blink::Member.84", %"class.blink::Member.86", %"class.blink::Member.88", %"class.blink::Member.90", %"class.blink::Member.92", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.95", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.101", %"class.blink::Member.103", %"class.blink::Member.61", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.106", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.315", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.324", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.331", i16, i8, %"class.blink::Member.338", %"class.blink::Member.340", %"class.blink::Member.342", %"class.blink::Member.344", %"class.blink::TextLinkColors", %"class.blink::Member.346", i8, [7 x i8], %"class.blink::HeapHashMap.348", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.355", %"class.blink::Member.360", %"class.blink::Member.362", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.364", %"class.blink::HeapVector.366", %"class.std::__1::unique_ptr.374", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.380", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.393", %"class.WTF::Vector.395", i8, i8, %"class.std::__1::unique_ptr.400", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.406", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.414", i8, i32, %"class.blink::Member.416", %"class.blink::Member.418", %"class.blink::Member.420", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.422", %"class.WTF::HashMap.424", %"class.blink::Member.429", %"class.blink::Member.431", %"class.blink::Member.433", %"class.blink::Member.435", %"class.blink::Member.9", %"class.blink::Member.9", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.437", i8, i32, %"class.blink::Member.444", %"class.blink::Member.446", i32, %"class.blink::Member.448", %"class.blink::Member.450", %"class.blink::Member.452", %"class.std::__1::unique_ptr.454", i64, %"class.std::__1::unique_ptr.460", i32, i32, %"class.blink::Member.466", %"class.blink::Member.468", %"class.blink::Member.470", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.472", %"class.WTF::Vector.474", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.479", %"class.blink::Member.486", %"class.std::__1::unique_ptr.488", %"class.blink::Member.494", i8, i8, %"class.WTF::String", %"class.blink::Member.496", i8, [7 x i8], %"class.blink::HeapHashMap.498", %"class.blink::HeapObserverSet", %"class.blink::Member.512", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.514", i32, i8, i8, %"class.blink::WeakMember.516", %"class.blink::Member.517" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.1", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.3" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.7", %"class.blink::Member.9", %"class.blink::Member.1", %"class.blink::Member.11", %"class.blink::Member.11", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.53", %"class.blink::HeapVector.55" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::HeapHashMap.52"* }
%"class.blink::HeapHashMap.52" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.55" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.61"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.64" }
%"class.blink::HeapHashMap.64" = type { %"class.WTF::HashMap.67" }
%"class.WTF::HashMap.67" = type { %"class.WTF::HashTable.68" }
%"class.WTF::HashTable.68" = type <{ %"struct.WTF::KeyValuePair.70"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.70" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.71" = type { %"class.WTF::VectorBuffer.72" }
%"class.WTF::VectorBuffer.72" = type { %"class.WTF::VectorBufferBase.73" }
%"class.WTF::VectorBufferBase.73" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.74 }
%class.scoped_refptr.74 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.75" }
%"struct.std::__1::atomic.75" = type { %"struct.std::__1::__atomic_base.76" }
%"struct.std::__1::__atomic_base.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__cxx_atomic_impl.78" }
%"struct.std::__1::__cxx_atomic_impl.78" = type { %"struct.std::__1::__cxx_atomic_base_impl.79" }
%"struct.std::__1::__cxx_atomic_base_impl.79" = type { i32 }
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.535", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.576", i32, i8, [3 x i8], %"class.blink::HeapVector.578", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.586", %"class.blink::Member.588", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.597", %"class.blink::Member.603", %"class.blink::Member.605", i8, [7 x i8] }>
%"class.blink::Supplementable.535" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.536" }
%"class.blink::HeapHashMap.536" = type { %"class.WTF::HashMap.539" }
%"class.WTF::HashMap.539" = type { %"class.WTF::HashTable.540" }
%"class.WTF::HashTable.540" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.551" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.543" }
%"class.blink::HeapObserverSet.543" = type { i32, [4 x i8], %"class.blink::HeapHashSet.544" }
%"class.blink::HeapHashSet.544" = type { %"class.WTF::HashSet.547" }
%"class.WTF::HashSet.547" = type { %"class.WTF::HashTable.548" }
%"class.WTF::HashTable.548" = type <{ %"class.blink::WeakMember.550"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.550" = type opaque
%"class.blink::Supplementable.551" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.552" }
%"class.blink::HeapHashMap.552" = type { %"class.WTF::HashMap.555" }
%"class.WTF::HashMap.555" = type { %"class.WTF::HashTable.556" }
%"class.WTF::HashTable.556" = type <{ %"struct.WTF::KeyValuePair.558"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.558" = type { i8*, %"class.blink::Member.665" }
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.667" }
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.559, %"class.std::__1::unique_ptr.560", %"class.std::__1::unique_ptr.560", %"class.std::__1::unique_ptr.566", %"class.std::__1::unique_ptr.566", %"class.blink::Member.84", i32, [4 x i8], %"class.WTF::HashSet.572", i32, i32 }
%class.scoped_refptr.559 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.560" = type { %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.578" = type { %"class.WTF::Vector.581" }
%"class.WTF::Vector.581" = type { %"class.WTF::VectorBuffer.582" }
%"class.WTF::VectorBuffer.582" = type { %"class.WTF::VectorBufferBase.583" }
%"class.WTF::VectorBufferBase.583" = type { %"class.blink::Member.584"*, i32, i32 }
%"class.blink::Member.584" = type opaque
%"class.blink::Member.586" = type { %"class.blink::MemberBase.587" }
%"class.blink::MemberBase.587" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.590", i32, i32 }
%"class.blink::HeapHashMap.590" = type { %"class.WTF::HashMap.593" }
%"class.WTF::HashMap.593" = type { %"class.WTF::HashTable.594" }
%"class.WTF::HashTable.594" = type <{ %"struct.WTF::KeyValuePair.596"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.596" = type opaque
%"class.std::__1::unique_ptr.597" = type { %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.88" = type { %"class.blink::MemberBase.89" }
%"class.blink::MemberBase.89" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.105 }
%class.scoped_refptr.105 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.106" = type { %"class.WTF::VectorBuffer.107" }
%"class.WTF::VectorBuffer.107" = type { %"class.WTF::VectorBufferBase.108" }
%"class.WTF::VectorBufferBase.108" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.109 }
%class.scoped_refptr.109 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.110", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.110" = type { %"class.base::RefCounted.111" }
%"class.base::RefCounted.111" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.114" }
%"class.blink::HeapHashMap.114" = type { %"class.WTF::HashMap.117" }
%"class.WTF::HashMap.117" = type { %"class.WTF::HashTable.118" }
%"class.WTF::HashTable.118" = type <{ %"struct.WTF::KeyValuePair.120"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.120" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.121" }
%"class.blink::MemberBase.121" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.122", i32, [4 x i8], %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.274", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.292", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.299", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.238", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.158" = type { %"struct.std::__1::__atomic_base.159" }
%"struct.std::__1::__atomic_base.159" = type { %"struct.std::__1::__atomic_base.160" }
%"struct.std::__1::__atomic_base.160" = type { %"struct.std::__1::__cxx_atomic_impl.161" }
%"struct.std::__1::__cxx_atomic_impl.161" = type { %"struct.std::__1::__cxx_atomic_base_impl.162" }
%"struct.std::__1::__cxx_atomic_base_impl.162" = type { i64 }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::Worklist.169"* }
%"class.blink::Worklist.169" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::Worklist.176"* }
%"class.blink::Worklist.176" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::Worklist.183"* }
%"class.blink::Worklist.183" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::Worklist.190"* }
%"class.blink::Worklist.190" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::Worklist.197"* }
%"class.blink::Worklist.197" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::Worklist.204"* }
%"class.blink::Worklist.204" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::Worklist.211"* }
%"class.blink::Worklist.211" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.218", %"class.std::__1::__compressed_pair.225", %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.232", [4 x i8] }>
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220", %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { i64 }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { float }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.241", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.250" }
%"class.WTF::Vector.250" = type { %"class.WTF::VectorBuffer.251" }
%"class.WTF::VectorBuffer.251" = type { %"class.WTF::VectorBufferBase.252" }
%"class.WTF::VectorBufferBase.252" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.266" }
%"class.WTF::VectorBuffer.266" = type { %"class.WTF::VectorBufferBase.267" }
%"class.WTF::VectorBufferBase.267" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.280" }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.169"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.176"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.183"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.190"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.197"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.530" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.298 }
%class.scoped_refptr.298 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.299" = type { %"struct.std::__1::__atomic_base.300" }
%"struct.std::__1::__atomic_base.300" = type { %"struct.std::__1::__cxx_atomic_impl.301" }
%"struct.std::__1::__cxx_atomic_impl.301" = type { %"struct.std::__1::__cxx_atomic_base_impl.302" }
%"struct.std::__1::__cxx_atomic_base_impl.302" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.315" = type { %"class.blink::MemberBase.316" }
%"class.blink::MemberBase.316" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.317" }
%"class.blink::HeapHashMap.317" = type { %"class.WTF::HashMap.320" }
%"class.WTF::HashMap.320" = type { %"class.WTF::HashTable.321" }
%"class.WTF::HashTable.321" = type <{ %"struct.WTF::KeyValuePair.323"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.323" = type opaque
%"class.blink::Member.324" = type { %"class.blink::MemberBase.325" }
%"class.blink::MemberBase.325" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.328" }
%"class.WTF::HashTable.328" = type <{ %"class.blink::WeakMember.330"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.330" = type opaque
%"class.blink::HeapHashSet.331" = type { %"class.WTF::HashSet.334" }
%"class.WTF::HashSet.334" = type { %"class.WTF::HashTable.335" }
%"class.WTF::HashTable.335" = type <{ %"class.blink::WeakMember.337"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.337" = type opaque
%"class.blink::Member.338" = type { %"class.blink::MemberBase.339" }
%"class.blink::MemberBase.339" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.340" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.344" = type { %"class.blink::MemberBase.345" }
%"class.blink::MemberBase.345" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.346" = type { %"class.blink::MemberBase.347" }
%"class.blink::MemberBase.347" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.348" = type { %"class.WTF::HashMap.351" }
%"class.WTF::HashMap.351" = type { %"class.WTF::HashTable.352" }
%"class.WTF::HashTable.352" = type <{ %"struct.WTF::KeyValuePair.354"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.354" = type opaque
%"class.WTF::Vector.355" = type { %"class.WTF::VectorBuffer.356" }
%"class.WTF::VectorBuffer.356" = type { %"class.WTF::VectorBufferBase.357" }
%"class.WTF::VectorBufferBase.357" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.360" = type { %"class.blink::MemberBase.361" }
%"class.blink::MemberBase.361" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.35", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.35" = type { %"class.base::RefCounted.36" }
%"class.base::RefCounted.36" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.366" = type { %"class.WTF::Vector.369" }
%"class.WTF::Vector.369" = type { %"class.WTF::VectorBuffer.370" }
%"class.WTF::VectorBuffer.370" = type { %"class.WTF::VectorBufferBase.371" }
%"class.WTF::VectorBufferBase.371" = type { %"class.blink::Member.372"*, i32, i32 }
%"class.blink::Member.372" = type opaque
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.380" = type { %"class.WTF::HashSet.383" }
%"class.WTF::HashSet.383" = type { %"class.WTF::HashTable.384" }
%"class.WTF::HashTable.384" = type <{ %"class.blink::WeakMember.386"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.386" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.387", i32, [4 x i8] }>
%"class.WTF::Vector.387" = type { %"class.WTF::VectorBuffer.388" }
%"class.WTF::VectorBuffer.388" = type { %"class.WTF::VectorBufferBase.389" }
%"class.WTF::VectorBufferBase.389" = type { %"struct.std::__1::pair.390"*, i32, i32 }
%"struct.std::__1::pair.390" = type opaque
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.395" = type { %"class.WTF::VectorBuffer.396" }
%"class.WTF::VectorBuffer.396" = type { %"class.WTF::VectorBufferBase.397" }
%"class.WTF::VectorBufferBase.397" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.40" }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::HeapVector.406" = type { %"class.WTF::Vector.409" }
%"class.WTF::Vector.409" = type { %"class.WTF::VectorBuffer.410" }
%"class.WTF::VectorBuffer.410" = type { %"class.WTF::VectorBufferBase.411" }
%"class.WTF::VectorBufferBase.411" = type { %"class.blink::Member.412"*, i32, i32 }
%"class.blink::Member.412" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.9" }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.424" = type { %"class.WTF::HashTable.425" }
%"class.WTF::HashTable.425" = type <{ %"struct.WTF::KeyValuePair.428"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.428" = type opaque
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.314", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.305, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.305 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.306" }>
%"class.base::RefCountedThreadSafe.306" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.307 }
%class.scoped_refptr.307 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.308", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.308" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.309" }
%"struct.std::__1::atomic.309" = type { %"struct.std::__1::__atomic_base.310" }
%"struct.std::__1::__atomic_base.310" = type { %"struct.std::__1::__atomic_base.311" }
%"struct.std::__1::__atomic_base.311" = type { %"struct.std::__1::__cxx_atomic_impl.312" }
%"struct.std::__1::__cxx_atomic_impl.312" = type { %"struct.std::__1::__cxx_atomic_base_impl.313" }
%"struct.std::__1::__cxx_atomic_base_impl.313" = type { i8 }
%"class.blink::WeakMember.314" = type { %"class.blink::MemberBase.10" }
%"class.blink::HeapHashSet.437" = type { %"class.WTF::HashSet.440" }
%"class.WTF::HashSet.440" = type { %"class.WTF::HashTable.441" }
%"class.WTF::HashTable.441" = type <{ %"class.blink::Member.443"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.443" = type opaque
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.454" = type { %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.474" = type { %"class.WTF::VectorBuffer.475" }
%"class.WTF::VectorBuffer.475" = type { %"class.WTF::VectorBufferBase.476" }
%"class.WTF::VectorBufferBase.476" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.479" = type { %"class.WTF::HashMap.482" }
%"class.WTF::HashMap.482" = type { %"class.WTF::HashTable.483" }
%"class.WTF::HashTable.483" = type <{ %"struct.WTF::KeyValuePair.485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.485" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.498" = type { %"class.WTF::HashMap.501" }
%"class.WTF::HashMap.501" = type { %"class.WTF::HashTable.502" }
%"class.WTF::HashTable.502" = type <{ %"struct.WTF::KeyValuePair.504"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.504" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.505" }
%"class.blink::HeapHashSet.505" = type { %"class.WTF::HashSet.508" }
%"class.WTF::HashSet.508" = type { %"class.WTF::HashTable.509" }
%"class.WTF::HashTable.509" = type <{ %"class.blink::WeakMember.511"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.511" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.9", %"class.blink::HeapHashSet.521", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.528", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.521" = type { %"class.WTF::HashSet.524" }
%"class.WTF::HashSet.524" = type { %"class.WTF::HashTable.525" }
%"class.WTF::HashTable.525" = type <{ %"class.blink::Member.527"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.527" = type opaque
%"class.blink::HeapTaskRunnerTimer.528" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.529", { i64, i64 } }
%"class.blink::WeakMember.529" = type { %"class.blink::MemberBase.515" }
%"class.blink::WeakMember.516" = type { %"class.blink::MemberBase" }
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon, i32, i8, i8, [2 x i8] }>
%union.anon = type { %"class.WTF::Vector.607" }
%"class.WTF::Vector.607" = type { %"class.WTF::VectorBuffer.608" }
%"class.WTF::VectorBuffer.608" = type { %"class.WTF::VectorBufferBase.609", [16 x i8] }
%"class.WTF::VectorBufferBase.609" = type { i8*, i32, i32 }
%"class.WTF::Vector.612" = type { %"class.WTF::VectorBuffer.613" }
%"class.WTF::VectorBuffer.613" = type { %"class.WTF::VectorBufferBase.614", [16 x i8] }
%"class.WTF::VectorBufferBase.614" = type { i16*, i32, i32 }
%"class.WTF::HashMap.617" = type { %"class.WTF::HashTable.618" }
%"class.WTF::HashTable.618" = type <{ %"struct.WTF::KeyValuePair.621"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.621" = type { %"class.blink::QualifiedName", %"class.blink::QualifiedName"* }
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet.624", %"class.blink::HeapHashMap.631", %"class.blink::Member.638", %"class.blink::Member.640" }
%"class.blink::HeapHashSet.624" = type { %"class.WTF::HashSet.627" }
%"class.WTF::HashSet.627" = type { %"class.WTF::HashTable.628" }
%"class.WTF::HashTable.628" = type <{ %"class.blink::WeakMember.630"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.630" = type opaque
%"class.blink::HeapHashMap.631" = type { %"class.WTF::HashMap.634" }
%"class.WTF::HashMap.634" = type { %"class.WTF::HashTable.635" }
%"class.WTF::HashTable.635" = type <{ %"struct.WTF::KeyValuePair.637"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.637" = type opaque
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::SVGAnimatedPropertyBase" = type opaque
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.643" }
%"class.base::RefCountedThreadSafe.643" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.644" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.644" = type { %"class.v8::TracedReference.645" }
%"class.v8::TracedReference.645" = type { %"class.v8::BasicTracedReference.646" }
%"class.v8::BasicTracedReference.646" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.663", i8* }
%"class.WTF::StringAppend.663" = type { i8*, %"class.WTF::String" }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.109, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.651", i32, [4 x i8] }>
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::WeakMember.651" = type { %"class.blink::MemberBase.652" }
%"class.blink::MemberBase.652" = type { %"class.blink::Document"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.WTF::Vector.656" = type { %"class.WTF::VectorBuffer.657" }
%"class.WTF::VectorBuffer.657" = type { %"class.WTF::VectorBufferBase.658", [32 x i8] }
%"class.WTF::VectorBufferBase.658" = type { %"class.blink::Member.659"*, i32, i32 }
%"class.blink::Member.659" = type { %"class.blink::MemberBase.660" }
%"class.blink::MemberBase.660" = type { %"class.blink::CSSValue"* }
%"class.WTF::StringTypeAdapter.692" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::PropertyHandle" = type { i32, %union.anon.664, %"class.WTF::AtomicString" }
%union.anon.664 = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.671 }
%union.anon.671 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringTypeAdapter.693" = type { %"class.WTF::StringTypeAdapter.694" }
%"class.WTF::StringTypeAdapter.694" = type { %"class.WTF::StringView" }

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_PKS2_EENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS4_RS5_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_PKS2_EENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_PKS2_EENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE13AllocateTableEj = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_PKS2_EENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSG_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_PKS2_EENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERS4_ = comdat any

$_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_PKS2_EENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE4findERS4_ = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

@.str = private unnamed_addr constant [9 x i8] c"cssFloat\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"cssOffset\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZZN5blink22GetSupportedAttributesEvE22s_supported_attributes = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink22GetSupportedAttributesEvE22s_supported_attributes = internal global i64 0, align 8
@_ZN5blink10html_names10kClassAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kAmplitudeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names12kAzimuthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names18kBaseFrequencyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names9kBiasAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names18kClipPathUnitsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kCxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kCyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names6kDAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names20kDiffuseConstantAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names12kDivisorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kDxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kDyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names13kEdgeModeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kElevationAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names13kExponentAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kFilterUnitsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kFxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kFyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names22kGradientTransformAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names18kGradientUnitsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kHeightAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names9kHrefAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names8kIn2AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kInAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kInterceptAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kK1AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kK2AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kK3AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kK4AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names17kKernelMatrixAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names21kKernelUnitLengthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names17kLengthAdjustAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names22kLimitingConeAngleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names17kMarkerHeightAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kMarkerUnitsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kMarkerWidthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names21kMaskContentUnitsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kMaskUnitsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kMethodAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names9kModeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names15kNumOctavesAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kOffsetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names13kOperatorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names10kOrderAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kOrientAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names15kPathLengthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names24kPatternContentUnitsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names21kPatternTransformAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names17kPatternUnitsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kPointsAtXAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kPointsAtYAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kPointsAtZAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kPointsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names18kPreserveAlphaAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names24kPreserveAspectRatioAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names19kPrimitiveUnitsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names6kRAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kRadiusAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names9kRefXAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names9kRefYAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kResultAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kRotateAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kRxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kRyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names10kScaleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names9kSeedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names10kSlopeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names12kSpacingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names21kSpecularConstantAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names21kSpecularExponentAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names17kSpreadMethodAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kStartOffsetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names17kStdDeviationAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kStitchTilesAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names17kSurfaceScaleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kTableValuesAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kTargetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names12kTargetXAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names12kTargetYAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names15kTextLengthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kTransformAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names9kTypeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kValuesAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names12kViewBoxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names10kWidthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kX1AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kX2AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names6kXAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names21kXChannelSelectorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kY1AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kY2AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names6kYAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names21kYChannelSelectorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names6kZAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.2 = private unnamed_addr constant [35 x i8] c"Easing may not be the empty string\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"' is not a valid value for easing\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"Easing may not be set to a list of values\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.6 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.7 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.10 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase30is_web_animations_svg_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blinkL10kSVGPrefixE = internal constant [5 x i8] c"svg-\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.13 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink13QualifiedNameEPKS3_EEEEPKcv = private unnamed_addr constant [117 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::QualifiedName, const blink::QualifiedName *>]\00", align 1
@_ZN5blink11g_null_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kSetTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names11kAnimateTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names17kAnimateMotionTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names20kAnimateTransformTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@.str.14 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.15 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink21AnimationInputHelpers30KeyframeAttributeToCSSPropertyERKN3WTF6StringERKNS_8DocumentE(%"class.WTF::String"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %3 = alloca i16, align 2
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringBuilder", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = tail call zeroext i1 @_ZN5blink17CSSVariableParser19IsValidVariableNameERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %0) #9
  br i1 %10, label %264, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %56, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %54, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  br i1 %23, label %29, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.WTF::StringImpl"* %24 to i8*
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i16
  br label %32

29:                                               ; preds = %19
  %30 = bitcast %"class.WTF::StringImpl"* %24 to i16*
  %31 = load i16, i16* %30, align 2
  br label %32

32:                                               ; preds = %25, %29
  %33 = phi i16 [ %28, %25 ], [ %31, %29 ]
  %34 = icmp eq i16 %33, 45
  br i1 %34, label %264, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  br i1 %39, label %45, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i16
  br label %48

45:                                               ; preds = %35
  %46 = bitcast %"class.WTF::StringImpl"* %40 to i16*
  %47 = load i16, i16* %46, align 2
  br label %48

48:                                               ; preds = %41, %45
  %49 = phi i16 [ %44, %41 ], [ %47, %45 ]
  %50 = add i16 %49, -65
  %51 = icmp ult i16 %50, 26
  br i1 %51, label %264, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.WTF::StringView"* %6 to i8*
  br label %61

54:                                               ; preds = %15
  %55 = bitcast %"class.WTF::StringView"* %6 to i8*
  br label %61

56:                                               ; preds = %11
  %57 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #9
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %58, align 8
  %59 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %60 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %59, i64* %60, align 8
  br label %69

61:                                               ; preds = %54, %52
  %62 = phi i8* [ %55, %54 ], [ %53, %52 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #9
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %63, align 8
  %64 = load i32, i32* %16, align 4
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %67 = bitcast i8** %66 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %67, align 8
  %68 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %69

69:                                               ; preds = %61, %56
  %70 = phi i64 [ %68, %61 ], [ %59, %56 ]
  %71 = phi i8* [ %62, %61 ], [ %57, %56 ]
  %72 = phi i32 [ %64, %61 ], [ 0, %56 ]
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %72, i32* %73, align 8
  %74 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #9
  %75 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %70, i64* %75, align 8
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8** %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 8, i32* %77, align 8
  %78 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #9
  br i1 %78, label %264, label %79

79:                                               ; preds = %69
  %80 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #9
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %83, label %87

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %84, align 8
  %85 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %86 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %85, i64* %86, align 8
  br label %95

87:                                               ; preds = %79
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %88, align 8
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 1
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %93 = bitcast i8** %92 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %93, align 8
  %94 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %95

95:                                               ; preds = %87, %83
  %96 = phi i64 [ %94, %87 ], [ %85, %83 ]
  %97 = phi i32 [ %90, %87 ], [ 0, %83 ]
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %97, i32* %98, align 8
  %99 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #9
  %100 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %96, i64* %100, align 8
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8** %101, align 8
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 9, i32* %102, align 8
  %103 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #9
  br i1 %103, label %264, label %104

104:                                              ; preds = %95
  %105 = bitcast %"class.WTF::StringBuilder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %105) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 -86, i64 48, i1 false)
  %106 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %106, align 8
  %107 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 1
  %108 = bitcast %union.anon* %107 to i8*
  store i8 0, i8* %108, align 8
  %109 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 2
  store i32 0, i32* %109, align 8
  %110 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 3
  store i8 1, i8* %110, align 4
  %111 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 4
  store i8 0, i8* %111, align 1
  %112 = bitcast i16* %3 to i8*
  %113 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %114 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %115 = bitcast %union.anon* %107 to i16**
  %116 = bitcast %union.anon* %107 to %"class.WTF::Vector.612"*
  br label %117

117:                                              ; preds = %222, %104
  %118 = phi i64 [ %223, %222 ], [ 0, %104 ]
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %124, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 1
  %123 = load i32, i32* %122, align 4
  br label %124

124:                                              ; preds = %117, %121
  %125 = phi i32 [ %123, %121 ], [ 0, %117 ]
  %126 = zext i32 %125 to i64
  %127 = icmp ult i64 %118, %126
  br i1 %127, label %128, label %224

128:                                              ; preds = %124
  br i1 %120, label %195, label %129

129:                                              ; preds = %128
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = zext i32 %131 to i64
  %133 = icmp ult i64 %118, %132
  br i1 %133, label %134, label %174

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 1
  br i1 %138, label %145, label %140

140:                                              ; preds = %134
  %141 = bitcast %"class.WTF::StringImpl"* %139 to i8*
  %142 = getelementptr inbounds i8, i8* %141, i64 %118
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i16
  br label %149

145:                                              ; preds = %134
  %146 = bitcast %"class.WTF::StringImpl"* %139 to i16*
  %147 = getelementptr inbounds i16, i16* %146, i64 %118
  %148 = load i16, i16* %147, align 2
  br label %149

149:                                              ; preds = %140, %145
  %150 = phi i16 [ %144, %140 ], [ %148, %145 ]
  %151 = icmp eq i16 %150, 45
  br i1 %151, label %246, label %152

152:                                              ; preds = %149
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 1
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 1
  br i1 %156, label %163, label %158

158:                                              ; preds = %152
  %159 = bitcast %"class.WTF::StringImpl"* %157 to i8*
  %160 = getelementptr inbounds i8, i8* %159, i64 %118
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i16
  br label %167

163:                                              ; preds = %152
  %164 = bitcast %"class.WTF::StringImpl"* %157 to i16*
  %165 = getelementptr inbounds i16, i16* %164, i64 %118
  %166 = load i16, i16* %165, align 2
  br label %167

167:                                              ; preds = %158, %163
  %168 = phi i16 [ %162, %158 ], [ %166, %163 ]
  %169 = add i16 %168, -65
  %170 = icmp ult i16 %169, 26
  br i1 %170, label %171, label %174

171:                                              ; preds = %167
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %8, i8 zeroext 45) #9
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %195, label %174

174:                                              ; preds = %129, %167, %171
  %175 = phi %"class.WTF::StringImpl"* [ %172, %171 ], [ %119, %167 ], [ %119, %129 ]
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = zext i32 %177 to i64
  %179 = icmp ult i64 %118, %178
  br i1 %179, label %180, label %195

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 1
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 1
  br i1 %184, label %191, label %186

186:                                              ; preds = %180
  %187 = bitcast %"class.WTF::StringImpl"* %185 to i8*
  %188 = getelementptr inbounds i8, i8* %187, i64 %118
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i16
  br label %195

191:                                              ; preds = %180
  %192 = bitcast %"class.WTF::StringImpl"* %185 to i16*
  %193 = getelementptr inbounds i16, i16* %192, i64 %118
  %194 = load i16, i16* %193, align 2
  br label %195

195:                                              ; preds = %128, %171, %174, %186, %191
  %196 = phi i16 [ 0, %174 ], [ 0, %171 ], [ %190, %186 ], [ %194, %191 ], [ 0, %128 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %112)
  store i16 %196, i16* %3, align 2
  %197 = load i8, i8* %110, align 4, !range !2
  %198 = icmp ne i8 %197, 0
  %199 = icmp ult i16 %196, 256
  %200 = and i1 %199, %198
  br i1 %200, label %201, label %203

201:                                              ; preds = %195
  %202 = trunc i16 %196 to i8
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %8, i8 zeroext %202) #9
  br label %222

203:                                              ; preds = %195
  %204 = load i8, i8* %111, align 1
  %205 = icmp eq i8 %204, 0
  %206 = or i1 %198, %205
  br i1 %206, label %207, label %208

207:                                              ; preds = %203
  call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* nonnull %8, i32 1) #9
  br label %208

208:                                              ; preds = %203, %207
  %209 = load i32, i32* %113, align 4
  %210 = load i32, i32* %114, align 8
  %211 = icmp eq i32 %209, %210
  br i1 %211, label %218, label %212, !prof !3

212:                                              ; preds = %208
  %213 = load i16*, i16** %115, align 8
  %214 = zext i32 %209 to i64
  %215 = getelementptr inbounds i16, i16* %213, i64 %214
  store i16 %196, i16* %215, align 2
  %216 = load i32, i32* %113, align 4
  %217 = add i32 %216, 1
  store i32 %217, i32* %113, align 4
  br label %219

218:                                              ; preds = %208
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.612"* %116, i16* nonnull dereferenceable(2) %3) #9
  br label %219

219:                                              ; preds = %218, %212
  %220 = load i32, i32* %109, align 8
  %221 = add i32 %220, 1
  store i32 %221, i32* %109, align 8
  br label %222

222:                                              ; preds = %201, %219
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %112)
  %223 = add nuw nsw i64 %118, 1
  br label %117

224:                                              ; preds = %124
  %225 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #9
  %226 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %226) #9
  %227 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %8) #9
  %228 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %227, %"class.WTF::StringImpl"** %228, align 8
  %229 = call i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %225, %"class.WTF::String"* nonnull dereferenceable(8) %9) #9
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %228, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %230, null
  br i1 %231, label %245, label %232

232:                                              ; preds = %224
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  br i1 %236, label %239, label %241

239:                                              ; preds = %232
  %240 = add i32 %238, -1
  store i32 %240, i32* %237, align 4
  br label %241

241:                                              ; preds = %239, %232
  %242 = phi i32 [ %240, %239 ], [ %238, %232 ]
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %241
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %230) #9
  br label %245

245:                                              ; preds = %224, %241, %244
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %226) #9
  br label %246

246:                                              ; preds = %149, %245
  %247 = phi i32 [ %229, %245 ], [ 0, %149 ]
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %8) #9
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %248, null
  br i1 %249, label %263, label %250

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = load atomic i32, i32* %251 monotonic, align 4
  %253 = and i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 0
  %256 = load i32, i32* %255, align 4
  br i1 %254, label %257, label %259

257:                                              ; preds = %250
  %258 = add i32 %256, -1
  store i32 %258, i32* %255, align 4
  br label %259

259:                                              ; preds = %257, %250
  %260 = phi i32 [ %258, %257 ], [ %256, %250 ]
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %263

262:                                              ; preds = %259
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %248) #9
  br label %263

263:                                              ; preds = %246, %259, %262
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %105) #9
  br label %264

264:                                              ; preds = %95, %69, %48, %32, %2, %263
  %265 = phi i32 [ %247, %263 ], [ 1, %2 ], [ 0, %32 ], [ 0, %48 ], [ 151, %69 ], [ 495, %95 ]
  ret i32 %265
}

declare zeroext i1 @_ZN5blink17CSSVariableParser19IsValidVariableNameERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink21AnimationInputHelpers40KeyframeAttributeToPresentationAttributeERKN3WTF6StringEPKNS_7ElementE(%"class.WTF::String"* dereferenceable(8), %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::QualifiedName", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_web_animations_svg_enabled_E, align 1, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = icmp ne %"class.blink::Element"* %1, null
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %107

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 48
  %16 = icmp eq i32 %15, 32
  br i1 %16, label %17, label %107

17:                                               ; preds = %11
  %18 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #9
  %19 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %20 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN5blinkL10kSVGPrefixE, i64 0, i64 0), i8** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 4, i32* %22, align 8
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %26, label %27

26:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #9
  br label %107

27:                                               ; preds = %17
  %28 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %24, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #9
  br i1 %28, label %29, label %107

29:                                               ; preds = %27
  %30 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %32 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %0, i32 4, i32 -1) #9
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %31, align 8
  %33 = bitcast %"class.blink::QualifiedName"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %35 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %36, label %60, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 acquire, align 4
  %40 = and i32 %39, 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = load atomic i32, i32* %38 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %60

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #9
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  call void @llvm.trap() #9
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %60

58:                                               ; preds = %37
  %59 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %32) #9
  br label %60

60:                                               ; preds = %29, %42, %56, %58
  %61 = phi %"class.WTF::StringImpl"* [ %59, %58 ], [ %32, %42 ], [ %32, %56 ], [ null, %29 ]
  %62 = ptrtoint %"class.WTF::StringImpl"* %61 to i64
  %63 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  store i64 %62, i64* %63, align 8
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* nonnull %5, %"class.WTF::AtomicString"* dereferenceable(8) %34, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, %"class.WTF::AtomicString"* dereferenceable(8) %34) #9
  %64 = call zeroext i1 @_ZN5blink10SVGElement23IsAnimatableCSSPropertyERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* nonnull dereferenceable(8) %5) #9
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %5) #9
  %65 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #9
  br label %81

81:                                               ; preds = %60, %77, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  br i1 %64, label %82, label %89

82:                                               ; preds = %81
  %83 = bitcast %"class.blink::Element"* %1 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %84 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %83, align 8
  %85 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %84, i64 10
  %86 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %85, align 8
  %87 = call %"class.blink::ExecutionContext"* %86(%"class.blink::Node"* %12) #9
  %88 = call i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %87, %"class.WTF::String"* nonnull dereferenceable(8) %4) #9
  br label %89

89:                                               ; preds = %81, %82
  %90 = phi i32 [ %88, %82 ], [ 0, %81 ]
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #9
  br label %106

106:                                              ; preds = %89, %102, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  br label %107

107:                                              ; preds = %26, %2, %11, %27, %106
  %108 = phi i32 [ %90, %106 ], [ 0, %27 ], [ 0, %11 ], [ 0, %2 ], [ 0, %26 ]
  ret i32 %108
}

declare zeroext i1 @_ZN5blink10SVGElement23IsAnimatableCSSPropertyERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.WTF::HashMap.617"* @_ZN5blink22GetSupportedAttributesEv() local_unnamed_addr #0 {
  %1 = alloca [95 x %"class.blink::QualifiedName"*], align 16
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink22GetSupportedAttributesEvE22s_supported_attributes to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !4

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink22GetSupportedAttributesEvE22s_supported_attributes) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink22GetSupportedAttributesEvE22s_supported_attributes, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #9
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink22GetSupportedAttributesEvE22s_supported_attributes) #9
  br label %8

8:                                                ; preds = %4, %7, %0
  %9 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink22GetSupportedAttributesEvE22s_supported_attributes, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %315

11:                                               ; preds = %8
  %12 = bitcast [95 x %"class.blink::QualifiedName"*]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 760, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 760, i1 false)
  %13 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE to i64*), align 8
  %14 = bitcast [95 x %"class.blink::QualifiedName"*]* %1 to i64*
  store i64 %13, i64* %14, align 16
  %15 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 1
  %16 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names14kAmplitudeAttrE to i64*), align 8
  %17 = bitcast %"class.blink::QualifiedName"** %15 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 2
  %19 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names12kAzimuthAttrE to i64*), align 8
  %20 = bitcast %"class.blink::QualifiedName"** %18 to i64*
  store i64 %19, i64* %20, align 16
  %21 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 3
  %22 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names18kBaseFrequencyAttrE to i64*), align 8
  %23 = bitcast %"class.blink::QualifiedName"** %21 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 4
  %25 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names9kBiasAttrE to i64*), align 8
  %26 = bitcast %"class.blink::QualifiedName"** %24 to i64*
  store i64 %25, i64* %26, align 16
  %27 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 5
  %28 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names18kClipPathUnitsAttrE to i64*), align 8
  %29 = bitcast %"class.blink::QualifiedName"** %27 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 6
  %31 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names7kCxAttrE to i64*), align 8
  %32 = bitcast %"class.blink::QualifiedName"** %30 to i64*
  store i64 %31, i64* %32, align 16
  %33 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 7
  %34 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names7kCyAttrE to i64*), align 8
  %35 = bitcast %"class.blink::QualifiedName"** %33 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 8
  %37 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names6kDAttrE to i64*), align 8
  %38 = bitcast %"class.blink::QualifiedName"** %36 to i64*
  store i64 %37, i64* %38, align 16
  %39 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 9
  %40 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names20kDiffuseConstantAttrE to i64*), align 8
  %41 = bitcast %"class.blink::QualifiedName"** %39 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 10
  %43 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names12kDivisorAttrE to i64*), align 8
  %44 = bitcast %"class.blink::QualifiedName"** %42 to i64*
  store i64 %43, i64* %44, align 16
  %45 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 11
  %46 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names7kDxAttrE to i64*), align 8
  %47 = bitcast %"class.blink::QualifiedName"** %45 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 12
  %49 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names7kDyAttrE to i64*), align 8
  %50 = bitcast %"class.blink::QualifiedName"** %48 to i64*
  store i64 %49, i64* %50, align 16
  %51 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 13
  %52 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names13kEdgeModeAttrE to i64*), align 8
  %53 = bitcast %"class.blink::QualifiedName"** %51 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 14
  %55 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names14kElevationAttrE to i64*), align 8
  %56 = bitcast %"class.blink::QualifiedName"** %54 to i64*
  store i64 %55, i64* %56, align 16
  %57 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 15
  %58 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names13kExponentAttrE to i64*), align 8
  %59 = bitcast %"class.blink::QualifiedName"** %57 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 16
  %61 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kFilterUnitsAttrE to i64*), align 8
  %62 = bitcast %"class.blink::QualifiedName"** %60 to i64*
  store i64 %61, i64* %62, align 16
  %63 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 17
  %64 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names7kFxAttrE to i64*), align 8
  %65 = bitcast %"class.blink::QualifiedName"** %63 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 18
  %67 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names7kFyAttrE to i64*), align 8
  %68 = bitcast %"class.blink::QualifiedName"** %66 to i64*
  store i64 %67, i64* %68, align 16
  %69 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 19
  %70 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names22kGradientTransformAttrE to i64*), align 8
  %71 = bitcast %"class.blink::QualifiedName"** %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 20
  %73 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names18kGradientUnitsAttrE to i64*), align 8
  %74 = bitcast %"class.blink::QualifiedName"** %72 to i64*
  store i64 %73, i64* %74, align 16
  %75 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 21
  %76 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names11kHeightAttrE to i64*), align 8
  %77 = bitcast %"class.blink::QualifiedName"** %75 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 22
  %79 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names9kHrefAttrE to i64*), align 8
  %80 = bitcast %"class.blink::QualifiedName"** %78 to i64*
  store i64 %79, i64* %80, align 16
  %81 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 23
  %82 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names8kIn2AttrE to i64*), align 8
  %83 = bitcast %"class.blink::QualifiedName"** %81 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 24
  %85 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names7kInAttrE to i64*), align 8
  %86 = bitcast %"class.blink::QualifiedName"** %84 to i64*
  store i64 %85, i64* %86, align 16
  %87 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 25
  %88 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names14kInterceptAttrE to i64*), align 8
  %89 = bitcast %"class.blink::QualifiedName"** %87 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 26
  %91 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names7kK1AttrE to i64*), align 8
  %92 = bitcast %"class.blink::QualifiedName"** %90 to i64*
  store i64 %91, i64* %92, align 16
  %93 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 27
  %94 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names7kK2AttrE to i64*), align 8
  %95 = bitcast %"class.blink::QualifiedName"** %93 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 28
  %97 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names7kK3AttrE to i64*), align 8
  %98 = bitcast %"class.blink::QualifiedName"** %96 to i64*
  store i64 %97, i64* %98, align 16
  %99 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 29
  %100 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names7kK4AttrE to i64*), align 8
  %101 = bitcast %"class.blink::QualifiedName"** %99 to i64*
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 30
  %103 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names17kKernelMatrixAttrE to i64*), align 8
  %104 = bitcast %"class.blink::QualifiedName"** %102 to i64*
  store i64 %103, i64* %104, align 16
  %105 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 31
  %106 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names21kKernelUnitLengthAttrE to i64*), align 8
  %107 = bitcast %"class.blink::QualifiedName"** %105 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 32
  %109 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names17kLengthAdjustAttrE to i64*), align 8
  %110 = bitcast %"class.blink::QualifiedName"** %108 to i64*
  store i64 %109, i64* %110, align 16
  %111 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 33
  %112 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names22kLimitingConeAngleAttrE to i64*), align 8
  %113 = bitcast %"class.blink::QualifiedName"** %111 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 34
  %115 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names17kMarkerHeightAttrE to i64*), align 8
  %116 = bitcast %"class.blink::QualifiedName"** %114 to i64*
  store i64 %115, i64* %116, align 16
  %117 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 35
  %118 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kMarkerUnitsAttrE to i64*), align 8
  %119 = bitcast %"class.blink::QualifiedName"** %117 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 36
  %121 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kMarkerWidthAttrE to i64*), align 8
  %122 = bitcast %"class.blink::QualifiedName"** %120 to i64*
  store i64 %121, i64* %122, align 16
  %123 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 37
  %124 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names21kMaskContentUnitsAttrE to i64*), align 8
  %125 = bitcast %"class.blink::QualifiedName"** %123 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 38
  %127 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names14kMaskUnitsAttrE to i64*), align 8
  %128 = bitcast %"class.blink::QualifiedName"** %126 to i64*
  store i64 %127, i64* %128, align 16
  %129 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 39
  %130 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names11kMethodAttrE to i64*), align 8
  %131 = bitcast %"class.blink::QualifiedName"** %129 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 40
  %133 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names9kModeAttrE to i64*), align 8
  %134 = bitcast %"class.blink::QualifiedName"** %132 to i64*
  store i64 %133, i64* %134, align 16
  %135 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 41
  %136 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names15kNumOctavesAttrE to i64*), align 8
  %137 = bitcast %"class.blink::QualifiedName"** %135 to i64*
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 42
  %139 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names11kOffsetAttrE to i64*), align 8
  %140 = bitcast %"class.blink::QualifiedName"** %138 to i64*
  store i64 %139, i64* %140, align 16
  %141 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 43
  %142 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names13kOperatorAttrE to i64*), align 8
  %143 = bitcast %"class.blink::QualifiedName"** %141 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 44
  %145 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names10kOrderAttrE to i64*), align 8
  %146 = bitcast %"class.blink::QualifiedName"** %144 to i64*
  store i64 %145, i64* %146, align 16
  %147 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 45
  %148 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names11kOrientAttrE to i64*), align 8
  %149 = bitcast %"class.blink::QualifiedName"** %147 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 46
  %151 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names15kPathLengthAttrE to i64*), align 8
  %152 = bitcast %"class.blink::QualifiedName"** %150 to i64*
  store i64 %151, i64* %152, align 16
  %153 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 47
  %154 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names24kPatternContentUnitsAttrE to i64*), align 8
  %155 = bitcast %"class.blink::QualifiedName"** %153 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 48
  %157 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names21kPatternTransformAttrE to i64*), align 8
  %158 = bitcast %"class.blink::QualifiedName"** %156 to i64*
  store i64 %157, i64* %158, align 16
  %159 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 49
  %160 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names17kPatternUnitsAttrE to i64*), align 8
  %161 = bitcast %"class.blink::QualifiedName"** %159 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 50
  %163 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names14kPointsAtXAttrE to i64*), align 8
  %164 = bitcast %"class.blink::QualifiedName"** %162 to i64*
  store i64 %163, i64* %164, align 16
  %165 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 51
  %166 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names14kPointsAtYAttrE to i64*), align 8
  %167 = bitcast %"class.blink::QualifiedName"** %165 to i64*
  store i64 %166, i64* %167, align 8
  %168 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 52
  %169 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names14kPointsAtZAttrE to i64*), align 8
  %170 = bitcast %"class.blink::QualifiedName"** %168 to i64*
  store i64 %169, i64* %170, align 16
  %171 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 53
  %172 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names11kPointsAttrE to i64*), align 8
  %173 = bitcast %"class.blink::QualifiedName"** %171 to i64*
  store i64 %172, i64* %173, align 8
  %174 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 54
  %175 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names18kPreserveAlphaAttrE to i64*), align 8
  %176 = bitcast %"class.blink::QualifiedName"** %174 to i64*
  store i64 %175, i64* %176, align 16
  %177 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 55
  %178 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names24kPreserveAspectRatioAttrE to i64*), align 8
  %179 = bitcast %"class.blink::QualifiedName"** %177 to i64*
  store i64 %178, i64* %179, align 8
  %180 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 56
  %181 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names19kPrimitiveUnitsAttrE to i64*), align 8
  %182 = bitcast %"class.blink::QualifiedName"** %180 to i64*
  store i64 %181, i64* %182, align 16
  %183 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 57
  %184 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names6kRAttrE to i64*), align 8
  %185 = bitcast %"class.blink::QualifiedName"** %183 to i64*
  store i64 %184, i64* %185, align 8
  %186 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 58
  %187 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names11kRadiusAttrE to i64*), align 8
  %188 = bitcast %"class.blink::QualifiedName"** %186 to i64*
  store i64 %187, i64* %188, align 16
  %189 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 59
  %190 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names9kRefXAttrE to i64*), align 8
  %191 = bitcast %"class.blink::QualifiedName"** %189 to i64*
  store i64 %190, i64* %191, align 8
  %192 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 60
  %193 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names9kRefYAttrE to i64*), align 8
  %194 = bitcast %"class.blink::QualifiedName"** %192 to i64*
  store i64 %193, i64* %194, align 16
  %195 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 61
  %196 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names11kResultAttrE to i64*), align 8
  %197 = bitcast %"class.blink::QualifiedName"** %195 to i64*
  store i64 %196, i64* %197, align 8
  %198 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 62
  %199 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names11kRotateAttrE to i64*), align 8
  %200 = bitcast %"class.blink::QualifiedName"** %198 to i64*
  store i64 %199, i64* %200, align 16
  %201 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 63
  %202 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names7kRxAttrE to i64*), align 8
  %203 = bitcast %"class.blink::QualifiedName"** %201 to i64*
  store i64 %202, i64* %203, align 8
  %204 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 64
  %205 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names7kRyAttrE to i64*), align 8
  %206 = bitcast %"class.blink::QualifiedName"** %204 to i64*
  store i64 %205, i64* %206, align 16
  %207 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 65
  %208 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names10kScaleAttrE to i64*), align 8
  %209 = bitcast %"class.blink::QualifiedName"** %207 to i64*
  store i64 %208, i64* %209, align 8
  %210 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 66
  %211 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names9kSeedAttrE to i64*), align 8
  %212 = bitcast %"class.blink::QualifiedName"** %210 to i64*
  store i64 %211, i64* %212, align 16
  %213 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 67
  %214 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names10kSlopeAttrE to i64*), align 8
  %215 = bitcast %"class.blink::QualifiedName"** %213 to i64*
  store i64 %214, i64* %215, align 8
  %216 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 68
  %217 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names12kSpacingAttrE to i64*), align 8
  %218 = bitcast %"class.blink::QualifiedName"** %216 to i64*
  store i64 %217, i64* %218, align 16
  %219 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 69
  %220 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names21kSpecularConstantAttrE to i64*), align 8
  %221 = bitcast %"class.blink::QualifiedName"** %219 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 70
  %223 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names21kSpecularExponentAttrE to i64*), align 8
  %224 = bitcast %"class.blink::QualifiedName"** %222 to i64*
  store i64 %223, i64* %224, align 16
  %225 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 71
  %226 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names17kSpreadMethodAttrE to i64*), align 8
  %227 = bitcast %"class.blink::QualifiedName"** %225 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 72
  %229 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kStartOffsetAttrE to i64*), align 8
  %230 = bitcast %"class.blink::QualifiedName"** %228 to i64*
  store i64 %229, i64* %230, align 16
  %231 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 73
  %232 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names17kStdDeviationAttrE to i64*), align 8
  %233 = bitcast %"class.blink::QualifiedName"** %231 to i64*
  store i64 %232, i64* %233, align 8
  %234 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 74
  %235 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kStitchTilesAttrE to i64*), align 8
  %236 = bitcast %"class.blink::QualifiedName"** %234 to i64*
  store i64 %235, i64* %236, align 16
  %237 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 75
  %238 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names17kSurfaceScaleAttrE to i64*), align 8
  %239 = bitcast %"class.blink::QualifiedName"** %237 to i64*
  store i64 %238, i64* %239, align 8
  %240 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 76
  %241 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kTableValuesAttrE to i64*), align 8
  %242 = bitcast %"class.blink::QualifiedName"** %240 to i64*
  store i64 %241, i64* %242, align 16
  %243 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 77
  %244 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names11kTargetAttrE to i64*), align 8
  %245 = bitcast %"class.blink::QualifiedName"** %243 to i64*
  store i64 %244, i64* %245, align 8
  %246 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 78
  %247 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names12kTargetXAttrE to i64*), align 8
  %248 = bitcast %"class.blink::QualifiedName"** %246 to i64*
  store i64 %247, i64* %248, align 16
  %249 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 79
  %250 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names12kTargetYAttrE to i64*), align 8
  %251 = bitcast %"class.blink::QualifiedName"** %249 to i64*
  store i64 %250, i64* %251, align 8
  %252 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 80
  %253 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names15kTextLengthAttrE to i64*), align 8
  %254 = bitcast %"class.blink::QualifiedName"** %252 to i64*
  store i64 %253, i64* %254, align 16
  %255 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 81
  %256 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names14kTransformAttrE to i64*), align 8
  %257 = bitcast %"class.blink::QualifiedName"** %255 to i64*
  store i64 %256, i64* %257, align 8
  %258 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 82
  %259 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names9kTypeAttrE to i64*), align 8
  %260 = bitcast %"class.blink::QualifiedName"** %258 to i64*
  store i64 %259, i64* %260, align 16
  %261 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 83
  %262 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names11kValuesAttrE to i64*), align 8
  %263 = bitcast %"class.blink::QualifiedName"** %261 to i64*
  store i64 %262, i64* %263, align 8
  %264 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 84
  %265 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names12kViewBoxAttrE to i64*), align 8
  %266 = bitcast %"class.blink::QualifiedName"** %264 to i64*
  store i64 %265, i64* %266, align 16
  %267 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 85
  %268 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names10kWidthAttrE to i64*), align 8
  %269 = bitcast %"class.blink::QualifiedName"** %267 to i64*
  store i64 %268, i64* %269, align 8
  %270 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 86
  %271 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names7kX1AttrE to i64*), align 8
  %272 = bitcast %"class.blink::QualifiedName"** %270 to i64*
  store i64 %271, i64* %272, align 16
  %273 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 87
  %274 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names7kX2AttrE to i64*), align 8
  %275 = bitcast %"class.blink::QualifiedName"** %273 to i64*
  store i64 %274, i64* %275, align 8
  %276 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 88
  %277 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names6kXAttrE to i64*), align 8
  %278 = bitcast %"class.blink::QualifiedName"** %276 to i64*
  store i64 %277, i64* %278, align 16
  %279 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 89
  %280 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names21kXChannelSelectorAttrE to i64*), align 8
  %281 = bitcast %"class.blink::QualifiedName"** %279 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 90
  %283 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names7kY1AttrE to i64*), align 8
  %284 = bitcast %"class.blink::QualifiedName"** %282 to i64*
  store i64 %283, i64* %284, align 16
  %285 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 91
  %286 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names7kY2AttrE to i64*), align 8
  %287 = bitcast %"class.blink::QualifiedName"** %285 to i64*
  store i64 %286, i64* %287, align 8
  %288 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 92
  %289 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names6kYAttrE to i64*), align 8
  %290 = bitcast %"class.blink::QualifiedName"** %288 to i64*
  store i64 %289, i64* %290, align 16
  %291 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 93
  %292 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names21kYChannelSelectorAttrE to i64*), align 8
  %293 = bitcast %"class.blink::QualifiedName"** %291 to i64*
  store i64 %292, i64* %293, align 8
  %294 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 94
  %295 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names6kZAttrE to i64*), align 8
  %296 = bitcast %"class.blink::QualifiedName"** %294 to i64*
  store i64 %295, i64* %296, align 16
  br label %298

297:                                              ; preds = %312
  call void @llvm.lifetime.end.p0i8(i64 760, i8* nonnull %12) #9
  br label %315

298:                                              ; preds = %312, %11
  %299 = phi i64 [ 0, %11 ], [ %313, %312 ]
  %300 = getelementptr inbounds [95 x %"class.blink::QualifiedName"*], [95 x %"class.blink::QualifiedName"*]* %1, i64 0, i64 %299
  %301 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %300, align 8
  %302 = call { %"struct.WTF::KeyValuePair.621"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_PKS2_EENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS4_RS5_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable.618"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink22GetSupportedAttributesEvE22s_supported_attributes to %"class.WTF::HashTable.618"*), %"class.blink::QualifiedName"* dereferenceable(8) %301, %"class.blink::QualifiedName"** dereferenceable(8) %300) #9
  %303 = extractvalue { %"struct.WTF::KeyValuePair.621"*, i8 } %302, 1
  %304 = and i8 %303, 1
  %305 = icmp eq i8 %304, 0
  br i1 %305, label %306, label %312

306:                                              ; preds = %298
  %307 = extractvalue { %"struct.WTF::KeyValuePair.621"*, i8 } %302, 0
  %308 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %307, i64 0, i32 1
  %309 = bitcast %"class.blink::QualifiedName"** %300 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.blink::QualifiedName"** %308 to i64*
  store i64 %310, i64* %311, align 8
  br label %312

312:                                              ; preds = %298, %306
  %313 = add nuw nsw i64 %299, 1
  %314 = icmp eq i64 %313, 95
  br i1 %314, label %297, label %298

315:                                              ; preds = %297, %8
  ret %"class.WTF::HashMap.617"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink22GetSupportedAttributesEvE22s_supported_attributes to %"class.WTF::HashMap.617"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SvgAttributeNameERKN3WTF6StringE(%"class.blink::QualifiedName"* noalias sret, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %5 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %32, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 acquire, align 4
  %12 = and i32 %11, 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %30, label %14

14:                                               ; preds = %9
  %15 = load atomic i32, i32* %10 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %32

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #9
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %18
  tail call void @llvm.trap() #9
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %32

30:                                               ; preds = %9
  %31 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %7) #9
  br label %32

32:                                               ; preds = %2, %14, %28, %30
  %33 = phi %"class.WTF::StringImpl"* [ %31, %30 ], [ %7, %14 ], [ %7, %28 ], [ null, %2 ]
  %34 = ptrtoint %"class.WTF::StringImpl"* %33 to i64
  %35 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  store i64 %34, i64* %35, align 8
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %4, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3, %"class.WTF::AtomicString"* dereferenceable(8) %4) #9
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #9
  br label %52

52:                                               ; preds = %32, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::QualifiedName"* @_ZN5blink21AnimationInputHelpers31KeyframeAttributeToSVGAttributeERKN3WTF6StringEPNS_7ElementE(%"class.WTF::String"* dereferenceable(8), %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::QualifiedName", align 8
  %6 = icmp eq %"class.blink::Element"* %1, null
  br i1 %6, label %102, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 48
  %11 = icmp eq i32 %10, 32
  %12 = bitcast %"class.blink::Element"* %1 to %"class.blink::SVGElement"*
  %13 = select i1 %11, %"class.blink::SVGElement"* %12, %"class.blink::SVGElement"* null
  %14 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_web_animations_svg_enabled_E, align 1, !range !2
  %15 = icmp ne i8 %14, 0
  %16 = and i1 %15, %11
  br i1 %16, label %17, label %102

17:                                               ; preds = %7
  %18 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #9
  %19 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %20 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN5blinkL10kSVGPrefixE, i64 0, i64 0), i8** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 4, i32* %22, align 8
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %26, label %27

26:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #9
  br label %102

27:                                               ; preds = %17
  %28 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %24, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #9
  br i1 %28, label %29, label %102

29:                                               ; preds = %27
  %30 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kSetTagE, align 8
  %31 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %36, %38
  br i1 %39, label %102, label %40

40:                                               ; preds = %29
  %41 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names11kAnimateTagE, align 8
  %42 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %36, %45
  br i1 %46, label %102, label %47

47:                                               ; preds = %40
  %48 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names17kAnimateMotionTagE, align 8
  %49 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %36, %52
  br i1 %53, label %102, label %54

54:                                               ; preds = %47
  %55 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names20kAnimateTransformTagE, align 8
  %56 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 3, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %36, %59
  br i1 %60, label %102, label %61

61:                                               ; preds = %54
  %62 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #9
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %64 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %0, i32 4, i32 -1) #9
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %63, align 8
  %65 = bitcast %"class.blink::QualifiedName"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #9
  %66 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* inttoptr (i64 -6148914691236517206 to %"class.blink::QualifiedName::QualifiedNameImpl"*), %"class.blink::QualifiedName::QualifiedNameImpl"** %66, align 8
  call void @_ZN5blink16SvgAttributeNameERKN3WTF6StringE(%"class.blink::QualifiedName"* nonnull sret %5, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  %67 = call dereferenceable(24) %"class.WTF::HashMap.617"* @_ZN5blink22GetSupportedAttributesEv()
  %68 = getelementptr inbounds %"class.WTF::HashMap.617", %"class.WTF::HashMap.617"* %67, i64 0, i32 0
  %69 = call { %"struct.WTF::KeyValuePair.621"*, %"struct.WTF::KeyValuePair.621"* } @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_PKS2_EENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE4findERS4_(%"class.WTF::HashTable.618"* %68, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %5) #9
  %70 = extractvalue { %"struct.WTF::KeyValuePair.621"*, %"struct.WTF::KeyValuePair.621"* } %69, 0
  %71 = getelementptr inbounds %"class.WTF::HashMap.617", %"class.WTF::HashMap.617"* %67, i64 0, i32 0, i32 0
  %72 = load %"struct.WTF::KeyValuePair.621"*, %"struct.WTF::KeyValuePair.621"** %71, align 8
  %73 = getelementptr inbounds %"class.WTF::HashMap.617", %"class.WTF::HashMap.617"* %67, i64 0, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %72, i64 %75
  %77 = icmp eq %"struct.WTF::KeyValuePair.621"* %70, %76
  br i1 %77, label %85, label %78

78:                                               ; preds = %61
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %70, i64 0, i32 1
  %80 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %79, align 8
  %81 = call %"class.blink::SVGAnimatedPropertyBase"* @_ZNK5blink10SVGElement21PropertyFromAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* nonnull %13, %"class.blink::QualifiedName"* dereferenceable(8) %80) #9
  %82 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %78
  %84 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %79, align 8
  br label %85

85:                                               ; preds = %61, %78, %83
  %86 = phi %"class.blink::QualifiedName"* [ %84, %83 ], [ null, %78 ], [ null, %61 ]
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #9
  %87 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #9
  br label %101

101:                                              ; preds = %85, %97, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #9
  br label %102

102:                                              ; preds = %29, %40, %47, %2, %26, %54, %7, %27, %101
  %103 = phi %"class.blink::QualifiedName"* [ %86, %101 ], [ null, %27 ], [ null, %7 ], [ null, %54 ], [ null, %26 ], [ null, %2 ], [ null, %47 ], [ null, %40 ], [ null, %29 ]
  ret %"class.blink::QualifiedName"* %103
}

declare %"class.blink::SVGAnimatedPropertyBase"* @_ZNK5blink10SVGElement21PropertyFromAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TimingFunction"* @_ZN5blink21AnimationInputHelpers19ParseTimingFunctionERKN3WTF6StringEPNS_8DocumentERNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), %"class.blink::Document"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %3, %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0)) #9
  br label %195

14:                                               ; preds = %9
  %15 = icmp eq %"class.blink::Document"* %1, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %14
  %17 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* nonnull %1) #9
  %18 = icmp eq %"class.blink::ExecutionContext"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %16
  %20 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* nonnull %1) #9
  %21 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %20, i64 0, i32 6, i32 11
  %22 = load i32, i32* %21, align 8
  br label %23

23:                                               ; preds = %16, %14, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %16 ], [ 0, %14 ]
  %25 = tail call %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32 %24) #9
  %26 = tail call %"class.blink::CSSValue"* @_ZN5blink9CSSParser16ParseSingleValueENS_13CSSPropertyIDERKN3WTF6StringEPKNS_16CSSParserContextE(i32 376, %"class.WTF::String"* dereferenceable(8) %0, %"class.blink::CSSParserContext"* %25) #9
  %27 = icmp eq %"class.blink::CSSValue"* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %26, i64 0, i32 2
  %30 = load i8, i8* %29, align 1
  %31 = icmp ult i8 %30, 52
  br i1 %31, label %32, label %182

32:                                               ; preds = %28, %23
  %33 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #9
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %112, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %54

44:                                               ; preds = %37
  %45 = zext i32 %43 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #9
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !3

51:                                               ; preds = %44
  tail call void @llvm.trap() #9
  unreachable

52:                                               ; preds = %44
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %42, align 4
  br label %54

54:                                               ; preds = %52, %37
  %55 = phi i32 [ %53, %52 ], [ %43, %37 ]
  %56 = load atomic i32, i32* %38 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %69

59:                                               ; preds = %54
  %60 = zext i32 %55 to i33
  %61 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #9
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !3

66:                                               ; preds = %59
  tail call void @llvm.trap() #9
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %42, align 4
  br label %69

69:                                               ; preds = %67, %54
  %70 = phi i32 [ %68, %67 ], [ %55, %54 ]
  %71 = load atomic i32, i32* %38 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %69
  %75 = add i32 %70, -1
  store i32 %75, i32* %42, align 4
  br label %76

76:                                               ; preds = %74, %69
  %77 = phi i32 [ %75, %74 ], [ %70, %69 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #9
  br label %80

80:                                               ; preds = %76, %79
  %81 = load atomic i32, i32* %38 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %95

84:                                               ; preds = %80
  %85 = load i32, i32* %42, align 4
  %86 = zext i32 %85 to i33
  %87 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #9
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %84
  tail call void @llvm.trap() #9
  unreachable

93:                                               ; preds = %84
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %42, align 4
  br label %95

95:                                               ; preds = %80, %93
  %96 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.3 to i64), i64* %96, align 8
  %97 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %97, align 8
  %98 = load atomic i32, i32* %38 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %116

101:                                              ; preds = %95
  %102 = load i32, i32* %42, align 4
  %103 = zext i32 %102 to i33
  %104 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #9
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !3

109:                                              ; preds = %101
  tail call void @llvm.trap() #9
  unreachable

110:                                              ; preds = %101
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %42, align 4
  br label %116

112:                                              ; preds = %32
  %113 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.3 to i64), i64* %113, align 8
  %114 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %114, align 8
  %115 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i8** %115, align 8
  br label %128

116:                                              ; preds = %110, %95
  %117 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i8** %117, align 8
  %118 = load atomic i32, i32* %38 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = load i32, i32* %42, align 4
  br i1 %120, label %122, label %124

122:                                              ; preds = %116
  %123 = add i32 %121, -1
  store i32 %123, i32* %42, align 4
  br label %124

124:                                              ; preds = %122, %116
  %125 = phi i32 [ %123, %122 ], [ %121, %116 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #9
  br label %128

128:                                              ; preds = %112, %124, %127
  %129 = phi %"class.WTF::StringImpl"** [ %114, %112 ], [ %97, %124 ], [ %97, %127 ]
  %130 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %5)
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %130, %"class.WTF::StringImpl"** %131, align 8
  %132 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %133 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %133, i64 3
  %135 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %134, align 8
  call void %135(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #9
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %128
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #9
  br label %151

151:                                              ; preds = %128, %147, %150
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #9
  br label %167

167:                                              ; preds = %151, %163, %166
  br i1 %36, label %181, label %168

168:                                              ; preds = %167
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  br i1 %172, label %175, label %177

175:                                              ; preds = %168
  %176 = add i32 %174, -1
  store i32 %176, i32* %173, align 4
  br label %177

177:                                              ; preds = %175, %168
  %178 = phi i32 [ %176, %175 ], [ %174, %168 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #9
  br label %181

181:                                              ; preds = %167, %177, %180
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  br label %195

182:                                              ; preds = %28
  %183 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %26, i64 6, i32 2
  %184 = bitcast i8* %183 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = icmp ugt i32 %185, 1
  br i1 %186, label %187, label %188

187:                                              ; preds = %182
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #9
  br label %195

188:                                              ; preds = %182
  %189 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %26, i64 2, i32 2
  %190 = bitcast i8* %189 to %"class.WTF::Vector.656"*
  %191 = tail call dereferenceable(8) %"class.blink::Member.659"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.656"* %190, i32 0) #9
  %192 = getelementptr inbounds %"class.blink::Member.659", %"class.blink::Member.659"* %191, i64 0, i32 0, i32 0
  %193 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %192, align 8
  %194 = tail call %"class.blink::TimingFunction"* @_ZN5blink13CSSToStyleMap26MapAnimationTimingFunctionERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3) %193) #9
  br label %195

195:                                              ; preds = %181, %187, %188, %13
  %196 = phi %"class.blink::TimingFunction"* [ null, %13 ], [ null, %181 ], [ null, %187 ], [ %194, %188 ]
  ret %"class.blink::TimingFunction"* %196
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare %"class.blink::CSSValue"* @_ZN5blink9CSSParser16ParseSingleValueENS_13CSSPropertyIDERKN3WTF6StringEPKNS_16CSSParserContextE(i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::CSSParserContext"*) local_unnamed_addr #1

declare %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.692", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.692", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.692"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #9
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.692"* nonnull %3, i8* %8) #9
  %9 = bitcast %"class.WTF::StringTypeAdapter.692"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #9
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.692"* nonnull %2, i8* %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #9
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #9
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %34
  call void @llvm.trap() #9
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #9
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #9
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #9
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %70
  call void @llvm.trap() #9
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #9
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #9
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare %"class.blink::TimingFunction"* @_ZN5blink13CSSToStyleMap26MapAnimationTimingFunctionERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink21AnimationInputHelpers33PropertyHandleToKeyframeAttributeENS_14PropertyHandleE(%"class.blink::PropertyHandle"* nocapture readonly byval(%"class.blink::PropertyHandle") align 8) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = or i32 %6, 1
  %8 = icmp eq i32 %7, 3
  br i1 %8, label %9, label %55

9:                                                ; preds = %1
  %10 = icmp eq i32 %6, 3
  br i1 %10, label %11, label %32

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %130, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %130

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #9
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #9
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %130

32:                                               ; preds = %9
  %33 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 1, i32 0
  %34 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %33, align 8
  %35 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %34, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  switch i32 %37, label %40 [
    i32 151, label %38
    i32 495, label %39
  ]

38:                                               ; preds = %32
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 8) #9
  br label %52

39:                                               ; preds = %32
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i64 9) #9
  br label %52

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %34, i64 0, i32 0
  %42 = bitcast %"class.blink::CSSProperty"* %34 to i8* (%"class.blink::CSSUnresolvedProperty"*)***
  %43 = load i8* (%"class.blink::CSSUnresolvedProperty"*)**, i8* (%"class.blink::CSSUnresolvedProperty"*)*** %42, align 8
  %44 = getelementptr inbounds i8* (%"class.blink::CSSUnresolvedProperty"*)*, i8* (%"class.blink::CSSUnresolvedProperty"*)** %43, i64 5
  %45 = load i8* (%"class.blink::CSSUnresolvedProperty"*)*, i8* (%"class.blink::CSSUnresolvedProperty"*)** %44, align 8
  %46 = tail call i8* %45(%"class.blink::CSSUnresolvedProperty"* %41) #9
  %47 = icmp eq i8* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %40
  %49 = tail call i64 @strlen(i8* nonnull %46) #10
  br label %50

50:                                               ; preds = %48, %40
  %51 = phi i64 [ %49, %48 ], [ 0, %40 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %46, i64 %51) #9
  br label %52

52:                                               ; preds = %38, %39, %50
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  br label %130

55:                                               ; preds = %1
  %56 = icmp eq i32 %6, 4
  br i1 %56, label %57, label %104

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 1, i32 0
  %59 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %58, align 8
  %60 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %60) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 48, i1 false) #9
  %61 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %63 = bitcast %union.anon* %62 to i8*
  store i8 0, i8* %63, align 8
  %64 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  store i32 0, i32* %64, align 8
  %65 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %65, align 4
  %66 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %66, align 1
  call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN5blinkL10kSVGPrefixE, i64 0, i64 0), i32 4) #9
  %67 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #9
  %68 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %59, i64 0, i32 0
  %69 = bitcast %"class.blink::CSSProperty"* %59 to i8* (%"class.blink::CSSUnresolvedProperty"*)***
  %70 = load i8* (%"class.blink::CSSUnresolvedProperty"*)**, i8* (%"class.blink::CSSUnresolvedProperty"*)*** %69, align 8
  %71 = getelementptr inbounds i8* (%"class.blink::CSSUnresolvedProperty"*)*, i8* (%"class.blink::CSSUnresolvedProperty"*)** %70, i64 3
  %72 = load i8* (%"class.blink::CSSUnresolvedProperty"*)*, i8* (%"class.blink::CSSUnresolvedProperty"*)** %71, align 8
  %73 = call i8* %72(%"class.blink::CSSUnresolvedProperty"* %68) #9
  %74 = icmp eq i8* %73, null
  br i1 %74, label %81, label %75

75:                                               ; preds = %57
  %76 = call i64 @strlen(i8* nonnull %73) #10
  %77 = icmp ult i64 %76, 4294967296
  br i1 %77, label %79, label %78, !prof !5

78:                                               ; preds = %75
  call void @llvm.trap() #9
  unreachable

79:                                               ; preds = %75
  %80 = trunc i64 %76 to i32
  br label %81

81:                                               ; preds = %79, %57
  %82 = phi i32 [ %80, %79 ], [ 0, %57 ]
  %83 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %84 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* %73, i8** %85, align 8
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %82, i32* %86, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #9
  %87 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #9
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #9
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %81
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #9
  br label %103

103:                                              ; preds = %81, %99, %102
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %60) #9
  br label %130

104:                                              ; preds = %55
  %105 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 1
  %106 = bitcast %union.anon.664* %105 to %"class.blink::QualifiedName"**
  %107 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %107, i64 0, i32 0, i32 0
  %109 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %109, i64 0, i32 3, i32 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %130, label %113

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %130

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = zext i32 %120 to i33
  %122 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #9
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !3

127:                                              ; preds = %118
  tail call void @llvm.trap() #9
  unreachable

128:                                              ; preds = %118
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %119, align 4
  br label %130

130:                                              ; preds = %128, %113, %104, %30, %15, %11, %52, %103
  %131 = phi %"class.WTF::StringImpl"* [ %54, %52 ], [ %87, %103 ], [ null, %11 ], [ %13, %15 ], [ %13, %30 ], [ null, %104 ], [ %111, %113 ], [ %111, %128 ]
  %132 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #9
  br label %148

148:                                              ; preds = %130, %144, %147
  ret %"class.WTF::StringImpl"* %131
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #9
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !3

22:                                               ; preds = %15
  %23 = bitcast %union.anon* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon* %16 to %"class.WTF::Vector.612"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.612"* %30, i16* nonnull dereferenceable(2) %3) #9
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #9
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !3

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.607"* %41, i8* nonnull dereferenceable(1) %4) #9
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.607"*, i8* dereferenceable(1)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.607"* %0, i32 %5) #9
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.607"* %0, i32 %5) #9
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.607"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !5

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.607"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.607"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.607"* %0, i32 %27) #9
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.607"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.607"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.607"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #9
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.608"* %18, i8* nonnull %6) #9
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #9
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !5

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #9
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !5

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.608"* %46, i8* %42) #9
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.607"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #9
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.608"*, i8*) local_unnamed_addr #7 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #9
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.612"*, i16* dereferenceable(2)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.612", %"class.WTF::Vector.612"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.612", %"class.WTF::Vector.612"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.612"* %0, i32 %5) #9
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.612"* %0, i32 %5) #9
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.612"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.612", %"class.WTF::Vector.612"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !5

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.612", %"class.WTF::Vector.612"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.612"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.612", %"class.WTF::Vector.612"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.612"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.612"* %0, i32 %27) #9
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.612"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.612", %"class.WTF::Vector.612"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.612", %"class.WTF::Vector.612"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.612"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.612", %"class.WTF::Vector.612"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.612", %"class.WTF::Vector.612"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.612", %"class.WTF::Vector.612"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.612"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.612", %"class.WTF::Vector.612"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #9
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.613"* %19, i16* nonnull %6) #9
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #9
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #9
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.612", %"class.WTF::Vector.612"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !5

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.612", %"class.WTF::Vector.612"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #9
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.612", %"class.WTF::Vector.612"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !5

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.612", %"class.WTF::Vector.612"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.613"* %53, i16* %48) #9
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.612"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.612", %"class.WTF::Vector.612"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.613"*, i16*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.659"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.656"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.656", %"class.WTF::Vector.656"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.656", %"class.WTF::Vector.656"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.659"*, %"class.blink::Member.659"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.659", %"class.blink::Member.659"* %24, i64 %25
  ret %"class.blink::Member.659"* %26
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #9
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #9
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #9
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #9
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #9
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.621"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_PKS2_EENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS4_RS5_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable.618"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::QualifiedName"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.WTF::KeyValuePair.621", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.618", %"class.WTF::HashTable.618"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.621"*, %"struct.WTF::KeyValuePair.621"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.621"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair.621"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_PKS2_EENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.618"* %0, %"struct.WTF::KeyValuePair.621"* null)
  %10 = load %"struct.WTF::KeyValuePair.621"*, %"struct.WTF::KeyValuePair.621"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair.621"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.618", %"class.WTF::HashTable.618"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 16777215
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %11
  %24 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %18) #9
  %25 = load i32, i32* %19, align 4
  %26 = and i32 %24, 16777215
  %27 = and i32 %25, -16777216
  %28 = or i32 %27, %26
  store i32 %28, i32* %19, align 4
  br label %29

29:                                               ; preds = %11, %23
  %30 = phi i32 [ %21, %11 ], [ %26, %23 ]
  %31 = and i32 %30, %15
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %12, i64 %32
  %34 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %33, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %34, i64 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %38
  br i1 %39, label %112, label %40

40:                                               ; preds = %29
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %42 = xor i32 %30, -1
  %43 = lshr i32 %30, 23
  %44 = add nsw i32 %43, %42
  %45 = shl i32 %44, 12
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 7
  %48 = xor i32 %47, %46
  %49 = shl i32 %48, 2
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 20
  %52 = xor i32 %51, %50
  %53 = or i32 %52, 1
  %54 = zext i32 %53 to i64
  br label %55

55:                                               ; preds = %40, %66
  %56 = phi %"struct.WTF::KeyValuePair.621"* [ %33, %40 ], [ %72, %66 ]
  %57 = phi %"struct.WTF::KeyValuePair.621"* [ null, %40 ], [ %67, %66 ]
  %58 = phi i64 [ %32, %40 ], [ %71, %66 ]
  %59 = phi i64 [ 0, %40 ], [ %69, %66 ]
  %60 = bitcast %"struct.WTF::KeyValuePair.621"* %56 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, inttoptr (i64 -1 to i8*)
  br i1 %62, label %66, label %63

63:                                               ; preds = %55
  %64 = bitcast i8* %61 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %65 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %41, %64
  br i1 %65, label %157, label %66

66:                                               ; preds = %55, %63
  %67 = phi %"struct.WTF::KeyValuePair.621"* [ %57, %63 ], [ %56, %55 ]
  %68 = icmp eq i64 %59, 0
  %69 = select i1 %68, i64 %54, i64 %59
  %70 = add i64 %69, %58
  %71 = and i64 %70, %16
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %12, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %74, %38
  br i1 %75, label %76, label %55

76:                                               ; preds = %66
  %77 = icmp eq %"struct.WTF::KeyValuePair.621"* %67, null
  br i1 %77, label %112, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.621"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8, !alias.scope !6
  %81 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, null
  br i1 %81, label %82, label %86

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %4, i64 0, i32 1
  %84 = bitcast %"class.blink::QualifiedName"** %83 to i64*
  store i64 0, i64* %84, align 8, !alias.scope !6
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %67, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* null, %"class.blink::QualifiedName::QualifiedNameImpl"** %85, align 8
  br label %102

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 1
  %88 = load i32, i32* %87, align 4, !noalias !6
  %89 = and i32 %88, 16777216
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %92) #9, !noalias !6
  br label %93

93:                                               ; preds = %91, %86
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %4, i64 0, i32 1
  %95 = bitcast %"class.blink::QualifiedName"** %94 to i64*
  store i64 0, i64* %95, align 8, !alias.scope !6
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %67, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %"class.blink::QualifiedName::QualifiedNameImpl"** %96, align 8
  %97 = load i32, i32* %87, align 4
  %98 = and i32 %97, 16777216
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %101) #9
  br label %102

102:                                              ; preds = %82, %93, %100
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %67, i64 0, i32 1
  %104 = bitcast %"class.blink::QualifiedName"** %103 to i64*
  store i64 0, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %4, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %105) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #9
  %106 = getelementptr inbounds %"class.WTF::HashTable.618", %"class.WTF::HashTable.618"* %0, i64 0, i32 3
  %107 = load i32, i32* %106, align 8
  %108 = add i32 %107, 2147483647
  %109 = and i32 %108, 2147483647
  %110 = and i32 %107, -2147483648
  %111 = or i32 %109, %110
  store i32 %111, i32* %106, align 8
  br label %112

112:                                              ; preds = %29, %76, %102
  %113 = phi %"struct.WTF::KeyValuePair.621"* [ %67, %102 ], [ %72, %76 ], [ %33, %29 ]
  %114 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %115 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %114, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = and i32 %118, 16777216
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %114, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %122) #9
  br label %123

123:                                              ; preds = %121, %116, %112
  %124 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %114 to i64
  %125 = bitcast %"struct.WTF::KeyValuePair.621"* %113 to i64*
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %113, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %126, align 8
  store i64 %124, i64* %125, align 8
  %128 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %127, null
  br i1 %128, label %141, label %129

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %127, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = and i32 %131, 16777216
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %141

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %127, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %135) #9
  %136 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %134
  call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %127) #9
  %140 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %127 to i8*
  call void @free(i8* %140) #9
  br label %141

141:                                              ; preds = %123, %129, %134, %139
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %113, i64 0, i32 1
  %143 = bitcast %"class.blink::QualifiedName"** %2 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.blink::QualifiedName"** %142 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.WTF::HashTable.618", %"class.WTF::HashTable.618"* %0, i64 0, i32 2
  %147 = load i32, i32* %146, align 4
  %148 = add i32 %147, 1
  store i32 %148, i32* %146, align 4
  %149 = getelementptr inbounds %"class.WTF::HashTable.618", %"class.WTF::HashTable.618"* %0, i64 0, i32 3
  %150 = load i32, i32* %149, align 8
  %151 = add i32 %150, %148
  %152 = shl i32 %151, 1
  %153 = load i32, i32* %13, align 8
  %154 = icmp ult i32 %152, %153
  br i1 %154, label %157, label %155

155:                                              ; preds = %141
  %156 = call %"struct.WTF::KeyValuePair.621"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_PKS2_EENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.618"* %0, %"struct.WTF::KeyValuePair.621"* %113)
  br label %157

157:                                              ; preds = %63, %141, %155
  %158 = phi i8 [ 1, %141 ], [ 1, %155 ], [ 0, %63 ]
  %159 = phi %"struct.WTF::KeyValuePair.621"* [ %113, %141 ], [ %156, %155 ], [ %56, %63 ]
  %160 = insertvalue { %"struct.WTF::KeyValuePair.621"*, i8 } undef, %"struct.WTF::KeyValuePair.621"* %159, 0
  %161 = insertvalue { %"struct.WTF::KeyValuePair.621"*, i8 } %160, i8 %158, 1
  ret { %"struct.WTF::KeyValuePair.621"*, i8 } %161
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.621"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_PKS2_EENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.618"*, %"struct.WTF::KeyValuePair.621"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.618", %"class.WTF::HashTable.618"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.618", %"class.WTF::HashTable.618"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = call %"struct.WTF::KeyValuePair.621"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_PKS2_EENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE13AllocateTableEj(i32 %32) #9
  %34 = call %"struct.WTF::KeyValuePair.621"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_PKS2_EENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSG_(%"class.WTF::HashTable.618"* %0, %"struct.WTF::KeyValuePair.621"* %33, i32 %32, %"struct.WTF::KeyValuePair.621"* %1) #9
  ret %"struct.WTF::KeyValuePair.621"* %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.621"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_PKS2_EENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE13AllocateTableEj(i32) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.WTF::KeyValuePair.621", align 8
  %3 = zext i32 %0 to i64
  %4 = shl nuw nsw i64 %3, 4
  %5 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %4, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink13QualifiedNameEPKS3_EEEEPKcv, i64 0, i64 0)) #9
  %6 = bitcast i8* %5 to %"struct.WTF::KeyValuePair.621"*
  %7 = icmp eq i32 %0, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = bitcast %"struct.WTF::KeyValuePair.621"* %2 to i8*
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !9
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %2, i64 0, i32 1
  %14 = bitcast %"class.blink::QualifiedName"** %13 to i64*
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %2, i64 0, i32 0
  br label %17

16:                                               ; preds = %38, %1
  ret %"struct.WTF::KeyValuePair.621"* %6

17:                                               ; preds = %38, %8
  %18 = phi i64 [ 0, %8 ], [ %41, %38 ]
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %6, i64 %18
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8, !noalias !9
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %20, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8, !alias.scope !9
  %21 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  store i64 0, i64* %14, align 8, !alias.scope !9
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %19, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* null, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  br label %38

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 1
  %26 = load i32, i32* %25, align 4, !noalias !9
  %27 = and i32 %26, 16777216
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %30) #9, !noalias !9
  br label %31

31:                                               ; preds = %29, %24
  store i64 0, i64* %14, align 8, !alias.scope !9
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %19, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %20, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %33 = load i32, i32* %25, align 4
  %34 = and i32 %33, 16777216
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %37) #9
  br label %38

38:                                               ; preds = %22, %31, %36
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %6, i64 %18, i32 1
  %40 = bitcast %"class.blink::QualifiedName"** %39 to i64*
  store i64 0, i64* %40, align 8
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  %41 = add nuw nsw i64 %18, 1
  %42 = icmp eq i64 %41, %3
  br i1 %42, label %16, label %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.621"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_PKS2_EENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSG_(%"class.WTF::HashTable.618"*, %"struct.WTF::KeyValuePair.621"*, i32, %"struct.WTF::KeyValuePair.621"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.618", align 8
  %6 = bitcast %"class.WTF::HashTable.618"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable.618", %"class.WTF::HashTable.618"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.618", %"class.WTF::HashTable.618"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.618", %"class.WTF::HashTable.618"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.618", %"class.WTF::HashTable.618"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.618"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.621"* %1, %"struct.WTF::KeyValuePair.621"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.618", %"class.WTF::HashTable.618"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.618", %"class.WTF::HashTable.618"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.621"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.618"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.618"* %5 to i64*
  br label %30

21:                                               ; preds = %4
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  %24 = load %"struct.WTF::KeyValuePair.621"*, %"struct.WTF::KeyValuePair.621"** %15, align 8
  %25 = ptrtoint %"struct.WTF::KeyValuePair.621"* %24 to i64
  br label %60

26:                                               ; preds = %101
  %27 = bitcast %"class.WTF::HashTable.618"* %5 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.WTF::HashTable.618"* %0 to i64*
  br label %30

30:                                               ; preds = %16, %26
  %31 = phi i64* [ %20, %16 ], [ %27, %26 ]
  %32 = phi i64* [ %18, %16 ], [ %29, %26 ]
  %33 = phi i64 [ %17, %16 ], [ %28, %26 ]
  %34 = phi i64 [ %19, %16 ], [ %102, %26 ]
  %35 = phi %"struct.WTF::KeyValuePair.621"* [ null, %16 ], [ %105, %26 ]
  %36 = phi i32 [ 0, %16 ], [ %103, %26 ]
  store atomic i64 %33, i64* %32 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %34, i64* %31, align 8
  store i32 %36, i32* %8, align 8
  %37 = inttoptr i64 %34 to %"struct.WTF::KeyValuePair.621"*
  %38 = icmp eq i64 %34, 0
  br i1 %38, label %56, label %39

39:                                               ; preds = %30
  %40 = icmp eq i32 %36, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %39
  %42 = zext i32 %36 to i64
  br label %43

43:                                               ; preds = %51, %41
  %44 = phi i64 [ 0, %41 ], [ %52, %51 ]
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %37, i64 %44
  %46 = bitcast %"struct.WTF::KeyValuePair.621"* %45 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %51, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %45, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %50) #9
  br label %51

51:                                               ; preds = %49, %43
  %52 = add nuw nsw i64 %44, 1
  %53 = icmp eq i64 %52, %42
  br i1 %53, label %54, label %43

54:                                               ; preds = %51, %39
  %55 = inttoptr i64 %34 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %55) #9
  store atomic i64 0, i64* %31 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %56

56:                                               ; preds = %30, %54
  %57 = getelementptr inbounds %"class.WTF::HashTable.618", %"class.WTF::HashTable.618"* %0, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, -2147483648
  store i32 %59, i32* %57, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"struct.WTF::KeyValuePair.621"* %35

60:                                               ; preds = %21, %101
  %61 = phi i64 [ %25, %21 ], [ %102, %101 ]
  %62 = phi i32 [ %13, %21 ], [ %103, %101 ]
  %63 = phi %"struct.WTF::KeyValuePair.621"* [ %24, %21 ], [ %104, %101 ]
  %64 = phi %"struct.WTF::KeyValuePair.621"* [ null, %21 ], [ %105, %101 ]
  %65 = phi i32 [ 0, %21 ], [ %106, %101 ]
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %63, i64 %66
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %70 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %71 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %69, %70
  %72 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %69, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %73 = or i1 %72, %71
  br i1 %73, label %101, label %74

74:                                               ; preds = %60
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %67, i64 0, i32 0
  %76 = call { %"struct.WTF::KeyValuePair.621"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_PKS2_EENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERS4_(%"class.WTF::HashTable.618"* nonnull %5, %"class.blink::QualifiedName"* dereferenceable(8) %75) #9
  %77 = extractvalue { %"struct.WTF::KeyValuePair.621"*, i8 } %76, 0
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %77, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %78) #9
  %79 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %77, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %79, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8
  %81 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %79, null
  br i1 %81, label %89, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %79, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = and i32 %84, 16777216
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %79, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %88) #9
  br label %89

89:                                               ; preds = %74, %82, %87
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %77, i64 0, i32 1
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %63, i64 %66, i32 1
  %92 = bitcast %"class.blink::QualifiedName"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::QualifiedName"** %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = load %"struct.WTF::KeyValuePair.621"*, %"struct.WTF::KeyValuePair.621"** %15, align 8
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %95, i64 %66
  %97 = icmp eq %"struct.WTF::KeyValuePair.621"* %96, %3
  %98 = select i1 %97, %"struct.WTF::KeyValuePair.621"* %77, %"struct.WTF::KeyValuePair.621"* %64
  %99 = load i32, i32* %12, align 8
  %100 = ptrtoint %"struct.WTF::KeyValuePair.621"* %95 to i64
  br label %101

101:                                              ; preds = %60, %89
  %102 = phi i64 [ %61, %60 ], [ %100, %89 ]
  %103 = phi i32 [ %62, %60 ], [ %99, %89 ]
  %104 = phi %"struct.WTF::KeyValuePair.621"* [ %63, %60 ], [ %95, %89 ]
  %105 = phi %"struct.WTF::KeyValuePair.621"* [ %64, %60 ], [ %98, %89 ]
  %106 = add i32 %65, 1
  %107 = icmp eq i32 %106, %103
  br i1 %107, label %26, label %60
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.621"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_PKS2_EENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERS4_(%"class.WTF::HashTable.618"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.618", %"class.WTF::HashTable.618"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.621"*, %"struct.WTF::KeyValuePair.621"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.618", %"class.WTF::HashTable.618"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 16777215
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %10) #9
  %17 = load i32, i32* %11, align 4
  %18 = and i32 %16, 16777215
  %19 = and i32 %17, -16777216
  %20 = or i32 %19, %18
  store i32 %20, i32* %11, align 4
  br label %21

21:                                               ; preds = %15, %2
  %22 = phi i32 [ %13, %2 ], [ %18, %15 ]
  %23 = and i32 %22, %7
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %4, i64 %24
  %26 = ptrtoint %"struct.WTF::KeyValuePair.621"* %25 to i64
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %25, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %29, %31
  br i1 %32, label %50, label %33

33:                                               ; preds = %21
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %35 = xor i32 %22, -1
  %36 = lshr i32 %22, 23
  %37 = add nsw i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %56

48:                                               ; preds = %68
  %49 = ptrtoint %"struct.WTF::KeyValuePair.621"* %74 to i64
  br label %50

50:                                               ; preds = %48, %21
  %51 = phi i64 [ %26, %21 ], [ %49, %48 ]
  %52 = phi %"struct.WTF::KeyValuePair.621"* [ null, %21 ], [ %69, %48 ]
  %53 = icmp eq %"struct.WTF::KeyValuePair.621"* %52, null
  %54 = ptrtoint %"struct.WTF::KeyValuePair.621"* %52 to i64
  %55 = select i1 %53, i64 %51, i64 %54
  br label %79

56:                                               ; preds = %68, %33
  %57 = phi %"struct.WTF::KeyValuePair.621"* [ null, %33 ], [ %69, %68 ]
  %58 = phi i64 [ %26, %33 ], [ %75, %68 ]
  %59 = phi %"struct.WTF::KeyValuePair.621"* [ %25, %33 ], [ %74, %68 ]
  %60 = phi i64 [ %24, %33 ], [ %73, %68 ]
  %61 = phi i64 [ 0, %33 ], [ %71, %68 ]
  %62 = bitcast %"struct.WTF::KeyValuePair.621"* %59 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, inttoptr (i64 -1 to i8*)
  br i1 %64, label %68, label %65

65:                                               ; preds = %56
  %66 = bitcast i8* %63 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %34, %66
  br i1 %67, label %79, label %68

68:                                               ; preds = %65, %56
  %69 = phi %"struct.WTF::KeyValuePair.621"* [ %57, %65 ], [ %59, %56 ]
  %70 = icmp eq i64 %61, 0
  %71 = select i1 %70, i64 %47, i64 %61
  %72 = add i64 %71, %60
  %73 = and i64 %72, %8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %4, i64 %73
  %75 = ptrtoint %"struct.WTF::KeyValuePair.621"* %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %74, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %77, %31
  br i1 %78, label %48, label %56

79:                                               ; preds = %65, %50
  %80 = phi i64 [ %55, %50 ], [ %58, %65 ]
  %81 = phi i8 [ 0, %50 ], [ 1, %65 ]
  %82 = inttoptr i64 %80 to %"struct.WTF::KeyValuePair.621"*
  %83 = insertvalue { %"struct.WTF::KeyValuePair.621"*, i8 } undef, %"struct.WTF::KeyValuePair.621"* %82, 0
  %84 = insertvalue { %"struct.WTF::KeyValuePair.621"*, i8 } %83, i8 %81, 1
  ret { %"struct.WTF::KeyValuePair.621"*, i8 } %84
}

declare i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.621"*, %"struct.WTF::KeyValuePair.621"* } @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_PKS2_EENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE4findERS4_(%"class.WTF::HashTable.618"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.618", %"class.WTF::HashTable.618"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.621"*, %"struct.WTF::KeyValuePair.621"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.621"* %4, null
  br i1 %5, label %70, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.618", %"class.WTF::HashTable.618"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777215
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %12) #9
  %19 = load i32, i32* %13, align 4
  %20 = and i32 %18, 16777215
  %21 = and i32 %19, -16777216
  %22 = or i32 %21, %20
  store i32 %22, i32* %13, align 4
  br label %23

23:                                               ; preds = %17, %6
  %24 = phi i32 [ %15, %6 ], [ %20, %17 ]
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %4, i64 %26
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %30, %32
  br i1 %33, label %70, label %34

34:                                               ; preds = %23
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %36 = xor i32 %24, -1
  %37 = lshr i32 %24, 23
  %38 = add nsw i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %59, %34
  %50 = phi %"struct.WTF::KeyValuePair.621"* [ %27, %34 ], [ %64, %59 ]
  %51 = phi i64 [ %26, %34 ], [ %63, %59 ]
  %52 = phi i64 [ 0, %34 ], [ %61, %59 ]
  %53 = bitcast %"struct.WTF::KeyValuePair.621"* %50 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ne i8* %54, inttoptr (i64 -1 to i8*)
  %56 = bitcast i8* %54 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %57 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %56
  %58 = and i1 %55, %57
  br i1 %58, label %68, label %59

59:                                               ; preds = %49
  %60 = icmp eq i64 %52, 0
  %61 = select i1 %60, i64 %48, i64 %52
  %62 = add i64 %61, %51
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %4, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %32
  br i1 %67, label %70, label %49

68:                                               ; preds = %49
  %69 = icmp eq %"struct.WTF::KeyValuePair.621"* %50, null
  br i1 %69, label %70, label %76

70:                                               ; preds = %59, %68, %23, %2
  %71 = load %"struct.WTF::KeyValuePair.621"*, %"struct.WTF::KeyValuePair.621"** %3, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.618", %"class.WTF::HashTable.618"* %0, i64 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %71, i64 %74
  br label %81

76:                                               ; preds = %68
  %77 = load %"struct.WTF::KeyValuePair.621"*, %"struct.WTF::KeyValuePair.621"** %3, align 8
  %78 = load i32, i32* %7, align 8
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %77, i64 %79
  br label %81

81:                                               ; preds = %70, %76
  %82 = phi %"struct.WTF::KeyValuePair.621"* [ %50, %76 ], [ %75, %70 ]
  %83 = phi %"struct.WTF::KeyValuePair.621"* [ %80, %76 ], [ %75, %70 ]
  %84 = insertvalue { %"struct.WTF::KeyValuePair.621"*, %"struct.WTF::KeyValuePair.621"* } undef, %"struct.WTF::KeyValuePair.621"* %82, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.621"*, %"struct.WTF::KeyValuePair.621"* } %84, %"struct.WTF::KeyValuePair.621"* %83, 1
  ret { %"struct.WTF::KeyValuePair.621"*, %"struct.WTF::KeyValuePair.621"* } %85
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.692", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.692"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.692", %"class.WTF::StringTypeAdapter.692"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.692"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.692"* nonnull %4, i8* %14) #9
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.663"* %9) #9
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.663"* %9) #9
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* %25, i8* %26) #9
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.692", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.693", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.692", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.692"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.692"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.692"* nonnull %5, i8* %10) #9
  %11 = bitcast %"class.WTF::StringTypeAdapter.692"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.692", %"class.WTF::StringTypeAdapter.692"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #9
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.692"* nonnull %3, i8* %14) #9
  %15 = bitcast %"class.WTF::StringTypeAdapter.693"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.693", %"class.WTF::StringTypeAdapter.693"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.693", %"class.WTF::StringTypeAdapter.693"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #9
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.693"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.692"* nonnull %3, i8* %1) #9
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.693", %"class.WTF::StringTypeAdapter.693"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.694"* nonnull %34, i8* %37) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.663"* %6) #9
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.692"* nonnull %5, i8* %40) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.692", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.693", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.692", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.692"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.692"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.692"* nonnull %5, i8* %10) #9
  %11 = bitcast %"class.WTF::StringTypeAdapter.692"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.692", %"class.WTF::StringTypeAdapter.692"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #9
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.692"* nonnull %3, i8* %14) #9
  %15 = bitcast %"class.WTF::StringTypeAdapter.693"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.693", %"class.WTF::StringTypeAdapter.693"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.693", %"class.WTF::StringTypeAdapter.693"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #9
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.693"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.692"* nonnull %3, i16* %1) #9
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.693", %"class.WTF::StringTypeAdapter.693"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.694"* nonnull %34, i16* %37) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.663"* %6) #9
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.692"* nonnull %5, i16* %40) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.692"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.663"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.692", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.692"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.692", %"class.WTF::StringTypeAdapter.692"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.663", %"class.WTF::StringAppend.663"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.692"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.692"* nonnull %4, i8* %13) #9
  %14 = getelementptr inbounds %"class.WTF::StringAppend.663", %"class.WTF::StringAppend.663"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* %30, i8* %31) #9
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i8* %45, i8* %46) #9
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.692"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.694"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.692"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.694"*, i16*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1, i32 1048575}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_IPKS3_EEE10EmptyValueEv: argument 0"}
!8 = distinct !{!8, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_IPKS3_EEE10EmptyValueEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_IPKS3_EEE10EmptyValueEv: argument 0"}
!11 = distinct !{!11, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_IPKS3_EEE10EmptyValueEv"}
