; ModuleID = '../../third_party/webrtc/modules/audio_processing/aecm/echo_control_mobile.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aecm/echo_control_mobile.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.webrtc::AecmCore" = type { i32, i32, i32, i32, i32, %struct.RingBuffer*, %struct.RingBuffer*, %struct.RingBuffer*, %struct.RingBuffer*, [256 x i16], i16, i32, i8*, i8*, i16, [6500 x i16], i32, [100 x i32], i16, i16, i32, i16, i16, i16, i16, [64 x i16], i16, [64 x i16], [64 x i16], [73 x i16], [73 x i16], [73 x i32], [144 x i16], [144 x i16], [144 x i16], [72 x i16], i16*, i16*, i32*, i16*, i16*, i16*, i16*, [65 x i32], [65 x i16], [65 x i32], [65 x i32], [65 x i32], i16, i16, i32, i32, i32, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.RealFFT* }
%struct.RingBuffer = type { i64, i64, i64, i64, i32, i8* }
%struct.RealFFT = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @WebRtcAecm_Create() local_unnamed_addr #0 {
  %1 = tail call noalias i8* @calloc(i64 1, i64 392) #8
  %2 = tail call %"struct.webrtc::AecmCore"* @_ZN6webrtc21WebRtcAecm_CreateCoreEv() #8
  %3 = getelementptr inbounds i8, i8* %1, i64 384
  %4 = bitcast i8* %3 to %"struct.webrtc::AecmCore"**
  store %"struct.webrtc::AecmCore"* %2, %"struct.webrtc::AecmCore"** %4, align 8
  %5 = icmp eq %"struct.webrtc::AecmCore"* %2, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %0
  %7 = icmp eq i8* %1, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %6
  tail call void @_ZN6webrtc19WebRtcAecm_FreeCoreEPNS_8AecmCoreE(%"struct.webrtc::AecmCore"* null) #8
  tail call void @WebRtc_FreeBuffer(i8* null) #8
  tail call void @free(i8* nonnull %1) #8
  br label %18

9:                                                ; preds = %0
  %10 = tail call %struct.RingBuffer* @WebRtc_CreateBuffer(i64 4000, i64 2) #8
  %11 = getelementptr inbounds i8, i8* %1, i64 376
  %12 = bitcast i8* %11 to %struct.RingBuffer**
  store %struct.RingBuffer* %10, %struct.RingBuffer** %12, align 8
  %13 = icmp eq %struct.RingBuffer* %10, null
  %14 = bitcast %struct.RingBuffer* %10 to i8*
  br i1 %13, label %15, label %18

15:                                               ; preds = %9
  %16 = icmp eq i8* %1, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %15
  tail call void @_ZN6webrtc19WebRtcAecm_FreeCoreEPNS_8AecmCoreE(%"struct.webrtc::AecmCore"* nonnull %2) #8
  tail call void @WebRtc_FreeBuffer(i8* %14) #8
  tail call void @free(i8* nonnull %1) #8
  br label %18

18:                                               ; preds = %17, %15, %8, %6, %9
  %19 = phi i8* [ %1, %9 ], [ null, %6 ], [ null, %8 ], [ null, %15 ], [ null, %17 ]
  ret i8* %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #2

declare %"struct.webrtc::AecmCore"* @_ZN6webrtc21WebRtcAecm_CreateCoreEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @WebRtcAecm_Free(i8*) local_unnamed_addr #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i64 384
  %5 = bitcast i8* %4 to %"struct.webrtc::AecmCore"**
  %6 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %5, align 8
  tail call void @_ZN6webrtc19WebRtcAecm_FreeCoreEPNS_8AecmCoreE(%"struct.webrtc::AecmCore"* %6) #8
  %7 = getelementptr inbounds i8, i8* %0, i64 376
  %8 = bitcast i8* %7 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @WebRtc_FreeBuffer(i8* %9) #8
  tail call void @free(i8* nonnull %0) #8
  br label %10

10:                                               ; preds = %1, %3
  ret void
}

declare %struct.RingBuffer* @WebRtc_CreateBuffer(i64, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6webrtc19WebRtcAecm_FreeCoreEPNS_8AecmCoreE(%"struct.webrtc::AecmCore"*) local_unnamed_addr #3

declare void @WebRtc_FreeBuffer(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebRtcAecm_Init(i8*, i32) local_unnamed_addr #0 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %51, label %4

4:                                                ; preds = %2
  switch i32 %1, label %51 [
    i32 16000, label %5
    i32 8000, label %5
  ]

5:                                                ; preds = %4, %4
  %6 = bitcast i8* %0 to i32*
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 384
  %8 = bitcast i8* %7 to %"struct.webrtc::AecmCore"**
  %9 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %8, align 8
  %10 = tail call i32 @_ZN6webrtc19WebRtcAecm_InitCoreEPNS_8AecmCoreEi(%"struct.webrtc::AecmCore"* %9, i32 %1) #8
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %51, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds i8, i8* %0, i64 376
  %14 = bitcast i8* %13 to %struct.RingBuffer**
  %15 = load %struct.RingBuffer*, %struct.RingBuffer** %14, align 8
  tail call void @WebRtc_InitBuffer(%struct.RingBuffer* %15) #8
  %16 = getelementptr inbounds i8, i8* %0, i64 336
  %17 = bitcast i8* %16 to i16*
  store i16 42, i16* %17, align 8
  %18 = getelementptr inbounds i8, i8* %0, i64 340
  %19 = bitcast i8* %18 to i16*
  store i16 0, i16* %19, align 4
  %20 = getelementptr inbounds i8, i8* %0, i64 338
  %21 = bitcast i8* %20 to i16*
  store i16 0, i16* %21, align 2
  %22 = getelementptr inbounds i8, i8* %0, i64 342
  %23 = bitcast i8* %22 to i16*
  store i16 0, i16* %23, align 2
  %24 = getelementptr inbounds i8, i8* %0, i64 8
  %25 = bitcast i8* %24 to i16*
  store i16 0, i16* %25, align 8
  %26 = getelementptr inbounds i8, i8* %0, i64 344
  %27 = bitcast i8* %26 to i16*
  store i16 0, i16* %27, align 8
  %28 = getelementptr inbounds i8, i8* %0, i64 348
  %29 = bitcast i8* %28 to i16*
  store i16 0, i16* %29, align 4
  %30 = getelementptr inbounds i8, i8* %0, i64 352
  %31 = bitcast i8* %30 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 1, i32 1>, <4 x i32>* %31, align 8
  %32 = getelementptr inbounds i8, i8* %0, i64 12
  %33 = getelementptr inbounds i8, i8* %0, i64 368
  %34 = bitcast i8* %33 to i16*
  store i16 0, i16* %34, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %32, i8 0, i64 324, i1 false)
  %35 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %8, align 8
  %36 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %35, i64 0, i32 49
  store i16 1, i16* %36, align 2
  %37 = getelementptr inbounds i8, i8* %0, i64 370
  %38 = bitcast i8* %37 to i16*
  store i16 3, i16* %38, align 2
  %39 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %8, align 8
  %40 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %39, i64 0, i32 62
  store i16 256, i16* %40, align 2
  %41 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %8, align 8
  %42 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %41, i64 0, i32 63
  store i16 256, i16* %42, align 4
  %43 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %8, align 8
  %44 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %43, i64 0, i32 64
  store i16 3072, i16* %44, align 2
  %45 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %8, align 8
  %46 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %45, i64 0, i32 65
  store i16 256, i16* %46, align 8
  %47 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %8, align 8
  %48 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %47, i64 0, i32 66
  store i16 1536, i16* %48, align 2
  %49 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %8, align 8
  %50 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %49, i64 0, i32 67
  store i16 1280, i16* %50, align 4
  br label %51

51:                                               ; preds = %12, %5, %4, %2
  %52 = phi i32 [ -1, %2 ], [ 12004, %4 ], [ 12000, %5 ], [ 0, %12 ]
  ret i32 %52
}

declare i32 @_ZN6webrtc19WebRtcAecm_InitCoreEPNS_8AecmCoreEi(%"struct.webrtc::AecmCore"*, i32) local_unnamed_addr #3

declare void @WebRtc_InitBuffer(%struct.RingBuffer*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @WebRtcAecm_set_config(i8*, i32) local_unnamed_addr #5 {
  %3 = trunc i32 %1 to i16
  %4 = lshr i32 %1, 16
  %5 = trunc i32 %4 to i16
  %6 = icmp eq i8* %0, null
  br i1 %6, label %90, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds i8, i8* %0, i64 336
  %9 = bitcast i8* %8 to i16*
  %10 = load i16, i16* %9, align 8
  %11 = icmp eq i16 %10, 42
  br i1 %11, label %12, label %90

12:                                               ; preds = %7
  %13 = shl i32 %1, 16
  switch i32 %13, label %90 [
    i32 0, label %14
    i32 65536, label %14
  ]

14:                                               ; preds = %12, %12
  %15 = getelementptr inbounds i8, i8* %0, i64 384
  %16 = bitcast i8* %15 to %"struct.webrtc::AecmCore"**
  %17 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %18 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %17, i64 0, i32 49
  store i16 %3, i16* %18, align 2
  %19 = icmp ugt i32 %1, 327679
  br i1 %19, label %90, label %20

20:                                               ; preds = %14
  %21 = lshr i32 %1, 16
  %22 = getelementptr inbounds i8, i8* %0, i64 370
  %23 = bitcast i8* %22 to i16*
  store i16 %5, i16* %23, align 2
  %24 = trunc i32 %21 to i16
  switch i16 %24, label %90 [
    i16 0, label %25
    i16 1, label %38
    i16 2, label %51
    i16 3, label %64
    i16 4, label %77
  ]

25:                                               ; preds = %20
  %26 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %27 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %26, i64 0, i32 62
  store i16 32, i16* %27, align 2
  %28 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %29 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %28, i64 0, i32 63
  store i16 32, i16* %29, align 4
  %30 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %31 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %30, i64 0, i32 64
  store i16 384, i16* %31, align 2
  %32 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %33 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %32, i64 0, i32 65
  store i16 32, i16* %33, align 8
  %34 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %35 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %34, i64 0, i32 66
  store i16 192, i16* %35, align 2
  %36 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %37 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %36, i64 0, i32 67
  store i16 160, i16* %37, align 4
  br label %90

38:                                               ; preds = %20
  %39 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %40 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %39, i64 0, i32 62
  store i16 64, i16* %40, align 2
  %41 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %42 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %41, i64 0, i32 63
  store i16 64, i16* %42, align 4
  %43 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %44 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %43, i64 0, i32 64
  store i16 768, i16* %44, align 2
  %45 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %46 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %45, i64 0, i32 65
  store i16 64, i16* %46, align 8
  %47 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %48 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %47, i64 0, i32 66
  store i16 384, i16* %48, align 2
  %49 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %50 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %49, i64 0, i32 67
  store i16 320, i16* %50, align 4
  br label %90

51:                                               ; preds = %20
  %52 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %53 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %52, i64 0, i32 62
  store i16 128, i16* %53, align 2
  %54 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %55 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %54, i64 0, i32 63
  store i16 128, i16* %55, align 4
  %56 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %57 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %56, i64 0, i32 64
  store i16 1536, i16* %57, align 2
  %58 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %59 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %58, i64 0, i32 65
  store i16 128, i16* %59, align 8
  %60 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %61 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %60, i64 0, i32 66
  store i16 768, i16* %61, align 2
  %62 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %63 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %62, i64 0, i32 67
  store i16 640, i16* %63, align 4
  br label %90

64:                                               ; preds = %20
  %65 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %66 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %65, i64 0, i32 62
  store i16 256, i16* %66, align 2
  %67 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %68 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %67, i64 0, i32 63
  store i16 256, i16* %68, align 4
  %69 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %70 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %69, i64 0, i32 64
  store i16 3072, i16* %70, align 2
  %71 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %72 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %71, i64 0, i32 65
  store i16 256, i16* %72, align 8
  %73 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %74 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %73, i64 0, i32 66
  store i16 1536, i16* %74, align 2
  %75 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %76 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %75, i64 0, i32 67
  store i16 1280, i16* %76, align 4
  br label %90

77:                                               ; preds = %20
  %78 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %79 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %78, i64 0, i32 62
  store i16 512, i16* %79, align 2
  %80 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %81 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %80, i64 0, i32 63
  store i16 512, i16* %81, align 4
  %82 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %83 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %82, i64 0, i32 64
  store i16 6144, i16* %83, align 2
  %84 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %85 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %84, i64 0, i32 65
  store i16 512, i16* %85, align 8
  %86 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %87 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %86, i64 0, i32 66
  store i16 3072, i16* %87, align 2
  %88 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %89 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %88, i64 0, i32 67
  store i16 2560, i16* %89, align 4
  br label %90

90:                                               ; preds = %25, %51, %77, %64, %38, %20, %14, %12, %7, %2
  %91 = phi i32 [ -1, %2 ], [ 12002, %7 ], [ 12004, %12 ], [ 12004, %14 ], [ 0, %20 ], [ 0, %38 ], [ 0, %64 ], [ 0, %77 ], [ 0, %51 ], [ 0, %25 ]
  ret i32 %91
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @WebRtcAecm_GetBufferFarendError(i8* readonly, i16* readnone, i64) local_unnamed_addr #6 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %3
  %6 = icmp eq i16* %1, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds i8, i8* %0, i64 336
  %9 = bitcast i8* %8 to i16*
  %10 = load i16, i16* %9, align 8
  %11 = icmp eq i16 %10, 42
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  switch i64 %2, label %14 [
    i64 160, label %13
    i64 80, label %13
  ]

13:                                               ; preds = %12, %12
  br label %14

14:                                               ; preds = %12, %7, %5, %3, %13
  %15 = phi i32 [ 0, %13 ], [ -1, %3 ], [ 12003, %5 ], [ 12002, %7 ], [ 12004, %12 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebRtcAecm_BufferFarend(i8*, i16*, i64) local_unnamed_addr #0 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %58, label %5

5:                                                ; preds = %3
  %6 = icmp eq i16* %1, null
  br i1 %6, label %58, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds i8, i8* %0, i64 336
  %9 = bitcast i8* %8 to i16*
  %10 = load i16, i16* %9, align 8
  %11 = icmp eq i16 %10, 42
  br i1 %11, label %12, label %58

12:                                               ; preds = %7
  switch i64 %2, label %58 [
    i64 160, label %13
    i64 80, label %13
  ]

13:                                               ; preds = %12, %12
  %14 = getelementptr inbounds i8, i8* %0, i64 356
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %52

18:                                               ; preds = %13
  %19 = getelementptr inbounds i8, i8* %0, i64 376
  %20 = bitcast i8* %19 to %struct.RingBuffer**
  %21 = load %struct.RingBuffer*, %struct.RingBuffer** %20, align 8
  %22 = tail call i64 @WebRtc_available_read(%struct.RingBuffer* %21) #8
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds i8, i8* %0, i64 346
  %25 = bitcast i8* %24 to i16*
  %26 = load i16, i16* %25, align 2
  %27 = sext i16 %26 to i32
  %28 = shl nsw i32 %27, 3
  %29 = getelementptr inbounds i8, i8* %0, i64 384
  %30 = bitcast i8* %29 to %"struct.webrtc::AecmCore"**
  %31 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %30, align 8
  %32 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %31, i64 0, i32 10
  %33 = load i16, i16* %32, align 8
  %34 = sext i16 %33 to i32
  %35 = mul nsw i32 %28, %34
  %36 = sub nsw i32 %35, %23
  %37 = mul nsw i32 %34, -80
  %38 = add nsw i32 %37, 256
  %39 = icmp sgt i32 %36, %38
  br i1 %39, label %40, label %52

40:                                               ; preds = %18
  %41 = ashr exact i32 %35, 1
  %42 = sub nsw i32 %41, %23
  %43 = icmp sgt i32 %42, 80
  %44 = select i1 %43, i32 %42, i32 80
  %45 = icmp slt i32 %44, 800
  %46 = select i1 %45, i32 %44, i32 800
  %47 = load %struct.RingBuffer*, %struct.RingBuffer** %20, align 8
  %48 = sub nsw i32 0, %46
  %49 = tail call i32 @WebRtc_MoveReadPtr(%struct.RingBuffer* %47, i32 %48) #8
  %50 = getelementptr inbounds i8, i8* %0, i64 364
  %51 = bitcast i8* %50 to i32*
  store i32 1, i32* %51, align 4
  br label %52

52:                                               ; preds = %13, %40, %18
  %53 = getelementptr inbounds i8, i8* %0, i64 376
  %54 = bitcast i8* %53 to %struct.RingBuffer**
  %55 = load %struct.RingBuffer*, %struct.RingBuffer** %54, align 8
  %56 = bitcast i16* %1 to i8*
  %57 = tail call i64 @WebRtc_WriteBuffer(%struct.RingBuffer* %55, i8* nonnull %56, i64 %2) #8
  br label %58

58:                                               ; preds = %12, %7, %5, %3, %52
  %59 = phi i32 [ 0, %52 ], [ 12004, %12 ], [ 12002, %7 ], [ 12003, %5 ], [ -1, %3 ]
  ret i32 %59
}

declare i64 @WebRtc_WriteBuffer(%struct.RingBuffer*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebRtcAecm_Process(i8*, i16*, i16*, i16*, i64, i16 signext) local_unnamed_addr #0 {
  %7 = alloca [80 x i16], align 16
  %8 = alloca i16*, align 8
  %9 = icmp eq i8* %0, null
  br i1 %9, label %286, label %10

10:                                               ; preds = %6
  %11 = icmp eq i16* %1, null
  %12 = icmp eq i16* %3, null
  %13 = or i1 %11, %12
  br i1 %13, label %286, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds i8, i8* %0, i64 336
  %16 = bitcast i8* %15 to i16*
  %17 = load i16, i16* %16, align 8
  %18 = icmp eq i16 %17, 42
  br i1 %18, label %19, label %286

19:                                               ; preds = %14
  switch i64 %4, label %286 [
    i64 160, label %20
    i64 80, label %20
  ]

20:                                               ; preds = %19, %19
  %21 = icmp slt i16 %5, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %20
  %23 = icmp sgt i16 %5, 500
  %24 = select i1 %23, i32 12100, i32 0
  %25 = add nuw i16 %5, 10
  %26 = select i1 %23, i16 510, i16 %25
  br label %27

27:                                               ; preds = %22, %20
  %28 = phi i16 [ 10, %20 ], [ %26, %22 ]
  %29 = phi i32 [ 12100, %20 ], [ %24, %22 ]
  %30 = getelementptr inbounds i8, i8* %0, i64 346
  %31 = bitcast i8* %30 to i16*
  store i16 %28, i16* %31, align 2
  %32 = trunc i64 %4 to i8
  %33 = udiv i8 %32, 80
  %34 = zext i8 %33 to i64
  %35 = getelementptr inbounds i8, i8* %0, i64 384
  %36 = bitcast i8* %35 to %"struct.webrtc::AecmCore"**
  %37 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %36, align 8
  %38 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %37, i64 0, i32 10
  %39 = load i16, i16* %38, align 8
  %40 = sext i16 %39 to i64
  %41 = udiv i64 %34, %40
  %42 = getelementptr inbounds i8, i8* %0, i64 356
  %43 = bitcast i8* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %65

46:                                               ; preds = %27
  %47 = bitcast [80 x i16]* %7 to i8*
  %48 = bitcast i16** %8 to i8*
  %49 = getelementptr inbounds i8, i8* %0, i64 376
  %50 = bitcast i8* %49 to %struct.RingBuffer**
  %51 = getelementptr inbounds [80 x i16], [80 x i16]* %7, i64 0, i64 0
  %52 = getelementptr inbounds i8, i8* %0, i64 16
  %53 = bitcast i8* %52 to [2 x [80 x i16]]*
  %54 = bitcast i16** %8 to i8**
  %55 = bitcast i8* %0 to i32*
  %56 = getelementptr inbounds i8, i8* %0, i64 348
  %57 = bitcast i8* %56 to i16*
  %58 = getelementptr inbounds i8, i8* %0, i64 12
  %59 = bitcast i8* %58 to i32*
  %60 = getelementptr inbounds i8, i8* %0, i64 352
  %61 = bitcast i8* %60 to i32*
  %62 = getelementptr inbounds i8, i8* %0, i64 368
  %63 = bitcast i8* %62 to i16*
  %64 = icmp eq i16* %2, null
  br label %199

65:                                               ; preds = %27
  %66 = icmp eq i16* %2, null
  br i1 %66, label %67, label %73

67:                                               ; preds = %65
  %68 = icmp eq i16* %3, %1
  br i1 %68, label %79, label %69

69:                                               ; preds = %67
  %70 = bitcast i16* %3 to i8*
  %71 = bitcast i16* %1 to i8*
  %72 = shl i64 %4, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %70, i8* nonnull align 2 %71, i64 %72, i1 false)
  br label %79

73:                                               ; preds = %65
  %74 = icmp eq i16* %3, %2
  br i1 %74, label %79, label %75

75:                                               ; preds = %73
  %76 = bitcast i16* %3 to i8*
  %77 = bitcast i16* %2 to i8*
  %78 = shl i64 %4, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %76, i8* nonnull align 2 %77, i64 %78, i1 false)
  br label %79

79:                                               ; preds = %67, %73, %75, %69
  %80 = getelementptr inbounds i8, i8* %0, i64 376
  %81 = bitcast i8* %80 to %struct.RingBuffer**
  %82 = load %struct.RingBuffer*, %struct.RingBuffer** %81, align 8
  %83 = tail call i64 @WebRtc_available_read(%struct.RingBuffer* %82) #8
  %84 = trunc i64 %83 to i32
  %85 = shl i32 %84, 16
  %86 = ashr exact i32 %85, 16
  %87 = sdiv i32 %86, 80
  %88 = getelementptr inbounds i8, i8* %0, i64 360
  %89 = bitcast i8* %88 to i32*
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %179, label %92

92:                                               ; preds = %79
  %93 = getelementptr inbounds i8, i8* %0, i64 344
  %94 = bitcast i8* %93 to i16*
  %95 = load i16, i16* %94, align 8
  %96 = add i16 %95, 1
  store i16 %96, i16* %94, align 8
  %97 = getelementptr inbounds i8, i8* %0, i64 338
  %98 = bitcast i8* %97 to i16*
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %99, 0
  br i1 %100, label %106, label %101

101:                                              ; preds = %92
  %102 = getelementptr inbounds i8, i8* %0, i64 342
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = load i16, i16* %31, align 2
  br label %112

106:                                              ; preds = %92
  %107 = load i16, i16* %31, align 2
  %108 = getelementptr inbounds i8, i8* %0, i64 342
  %109 = bitcast i8* %108 to i16*
  store i16 %107, i16* %109, align 2
  %110 = getelementptr inbounds i8, i8* %0, i64 340
  %111 = bitcast i8* %110 to i16*
  store i16 0, i16* %111, align 4
  br label %112

112:                                              ; preds = %101, %106
  %113 = phi i16 [ %105, %101 ], [ %107, %106 ]
  %114 = phi i16 [ %104, %101 ], [ %107, %106 ]
  %115 = sext i16 %114 to i32
  %116 = sext i16 %113 to i32
  %117 = sub nsw i32 %115, %116
  %118 = icmp slt i32 %117, 0
  %119 = sub nsw i32 0, %117
  %120 = select i1 %118, i32 %119, i32 %117
  %121 = sitofp i32 %120 to double
  %122 = sitofp i16 %113 to double
  %123 = fmul double %122, 2.000000e-01
  %124 = fcmp ogt double %123, 8.000000e+00
  %125 = select i1 %124, double %123, double 8.000000e+00
  %126 = fcmp ogt double %125, %121
  br i1 %126, label %127, label %133

127:                                              ; preds = %112
  %128 = getelementptr inbounds i8, i8* %0, i64 340
  %129 = bitcast i8* %128 to i16*
  %130 = load i16, i16* %129, align 4
  %131 = add i16 %130, %113
  store i16 %131, i16* %129, align 4
  %132 = add i16 %99, 1
  br label %133

133:                                              ; preds = %112, %127
  %134 = phi i16 [ %132, %127 ], [ 0, %112 ]
  store i16 %134, i16* %98, align 2
  %135 = sext i16 %134 to i64
  %136 = mul nsw i64 %41, %135
  %137 = icmp ugt i64 %136, 5
  br i1 %137, label %138, label %157

138:                                              ; preds = %133
  %139 = getelementptr inbounds i8, i8* %0, i64 340
  %140 = bitcast i8* %139 to i16*
  %141 = load i16, i16* %140, align 4
  %142 = sext i16 %141 to i32
  %143 = mul nsw i32 %142, 3
  %144 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %36, align 8
  %145 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %144, i64 0, i32 10
  %146 = load i16, i16* %145, align 8
  %147 = sext i16 %146 to i32
  %148 = mul nsw i32 %143, %147
  %149 = sext i16 %134 to i32
  %150 = mul nsw i32 %149, 40
  %151 = sdiv i32 %148, %150
  %152 = icmp slt i32 %151, 50
  %153 = select i1 %152, i32 %151, i32 50
  %154 = trunc i32 %153 to i16
  %155 = getelementptr inbounds i8, i8* %0, i64 8
  %156 = bitcast i8* %155 to i16*
  store i16 %154, i16* %156, align 8
  store i32 0, i32* %89, align 8
  br label %157

157:                                              ; preds = %138, %133
  %158 = phi i32 [ 0, %138 ], [ %90, %133 ]
  %159 = sext i16 %96 to i64
  %160 = mul nsw i64 %41, %159
  %161 = icmp ugt i64 %160, 50
  br i1 %161, label %162, label %177

162:                                              ; preds = %157
  %163 = mul nsw i32 %116, 3
  %164 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %36, align 8
  %165 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %164, i64 0, i32 10
  %166 = load i16, i16* %165, align 8
  %167 = sext i16 %166 to i32
  %168 = mul nsw i32 %163, %167
  %169 = icmp slt i32 %168, 2000
  br i1 %169, label %170, label %173

170:                                              ; preds = %162
  %171 = sdiv i32 %168, 40
  %172 = trunc i32 %171 to i16
  br label %173

173:                                              ; preds = %162, %170
  %174 = phi i16 [ %172, %170 ], [ 50, %162 ]
  %175 = getelementptr inbounds i8, i8* %0, i64 8
  %176 = bitcast i8* %175 to i16*
  store i16 %174, i16* %176, align 8
  store i32 0, i32* %89, align 8
  br label %179

177:                                              ; preds = %157
  %178 = icmp eq i32 %158, 0
  br i1 %178, label %179, label %286

179:                                              ; preds = %173, %79, %177
  %180 = getelementptr inbounds i8, i8* %0, i64 8
  %181 = bitcast i8* %180 to i16*
  %182 = load i16, i16* %181, align 8
  %183 = sext i16 %182 to i32
  %184 = icmp eq i32 %87, %183
  br i1 %184, label %185, label %186

185:                                              ; preds = %179
  store i32 0, i32* %43, align 4
  br label %286

186:                                              ; preds = %179
  %187 = icmp sgt i32 %87, %183
  br i1 %187, label %188, label %286

188:                                              ; preds = %186
  %189 = load %struct.RingBuffer*, %struct.RingBuffer** %81, align 8
  %190 = tail call i64 @WebRtc_available_read(%struct.RingBuffer* %189) #8
  %191 = trunc i64 %190 to i32
  %192 = load i16, i16* %181, align 8
  %193 = sext i16 %192 to i32
  %194 = mul nsw i32 %193, -80
  %195 = add i32 %194, %191
  %196 = tail call i32 @WebRtc_MoveReadPtr(%struct.RingBuffer* %189, i32 %195) #8
  store i32 0, i32* %43, align 4
  br label %286

197:                                              ; preds = %275
  %198 = icmp ult i64 %285, %34
  br i1 %198, label %199, label %286

199:                                              ; preds = %46, %197
  %200 = phi i64 [ 0, %46 ], [ %285, %197 ]
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %47) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %47, i8 -86, i64 160, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #8
  store i16* null, i16** %8, align 8
  %201 = load %struct.RingBuffer*, %struct.RingBuffer** %50, align 8
  %202 = call i64 @WebRtc_available_read(%struct.RingBuffer* %201) #8
  %203 = trunc i64 %202 to i16
  %204 = icmp sgt i16 %203, 79
  br i1 %204, label %205, label %211

205:                                              ; preds = %199
  %206 = load %struct.RingBuffer*, %struct.RingBuffer** %50, align 8
  %207 = call i64 @WebRtc_ReadBuffer(%struct.RingBuffer* %206, i8** nonnull %54, i8* nonnull %47, i64 80) #8
  %208 = getelementptr inbounds [2 x [80 x i16]], [2 x [80 x i16]]* %53, i64 0, i64 %200, i64 0
  %209 = bitcast i16* %208 to i8*
  %210 = load i8*, i8** %54, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %209, i8* align 2 %210, i64 160, i1 false)
  br label %214

211:                                              ; preds = %199
  %212 = getelementptr inbounds [2 x [80 x i16]], [2 x [80 x i16]]* %53, i64 0, i64 %200, i64 0
  %213 = bitcast i16* %212 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %47, i8* align 8 %213, i64 160, i1 false)
  store i16* %51, i16** %8, align 8
  br label %214

214:                                              ; preds = %211, %205
  switch i64 %200, label %275 [
    i64 0, label %215
    i64 1, label %218
  ]

215:                                              ; preds = %214
  %216 = load i32, i32* %55, align 8
  %217 = icmp eq i32 %216, 8000
  br i1 %217, label %221, label %275

218:                                              ; preds = %214
  %219 = load i32, i32* %55, align 8
  %220 = icmp eq i32 %219, 16000
  br i1 %220, label %221, label %275

221:                                              ; preds = %218, %215
  %222 = load i16, i16* %31, align 2
  %223 = load %struct.RingBuffer*, %struct.RingBuffer** %50, align 8
  %224 = call i64 @WebRtc_available_read(%struct.RingBuffer* %223) #8
  %225 = shl i16 %222, 3
  %226 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %36, align 8
  %227 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %226, i64 0, i32 10
  %228 = load i16, i16* %227, align 8
  %229 = mul i16 %225, %228
  %230 = trunc i64 %224 to i16
  %231 = sub i16 %229, %230
  %232 = icmp slt i16 %231, 80
  br i1 %232, label %233, label %237

233:                                              ; preds = %221
  %234 = load %struct.RingBuffer*, %struct.RingBuffer** %50, align 8
  %235 = call i32 @WebRtc_MoveReadPtr(%struct.RingBuffer* %234, i32 80) #8
  %236 = add nsw i16 %231, 80
  br label %237

237:                                              ; preds = %233, %221
  %238 = phi i16 [ %236, %233 ], [ %231, %221 ]
  %239 = load i16, i16* %57, align 4
  %240 = sext i16 %239 to i32
  %241 = shl nsw i32 %240, 3
  %242 = sext i16 %238 to i32
  %243 = shl nsw i32 %242, 1
  %244 = add nsw i32 %241, %243
  %245 = icmp slt i32 %244, -9
  br i1 %245, label %249, label %246

246:                                              ; preds = %237
  %247 = sdiv i32 %244, 10
  %248 = trunc i32 %247 to i16
  br label %249

249:                                              ; preds = %246, %237
  %250 = phi i16 [ %248, %246 ], [ 0, %237 ]
  store i16 %250, i16* %57, align 4
  %251 = load i32, i32* %59, align 4
  %252 = trunc i32 %251 to i16
  %253 = sub i16 %250, %252
  %254 = icmp sgt i16 %253, 224
  br i1 %254, label %255, label %258

255:                                              ; preds = %249
  %256 = load i16, i16* %63, align 8
  %257 = icmp slt i16 %256, 96
  br i1 %257, label %265, label %266

258:                                              ; preds = %249
  %259 = icmp slt i16 %253, 96
  %260 = icmp sgt i32 %251, 0
  %261 = and i1 %260, %259
  br i1 %261, label %262, label %265

262:                                              ; preds = %258
  %263 = load i16, i16* %63, align 8
  %264 = icmp sgt i16 %263, 224
  br i1 %264, label %265, label %266

265:                                              ; preds = %258, %262, %255
  store i32 0, i32* %61, align 8
  store i16 %253, i16* %63, align 8
  br label %275

266:                                              ; preds = %262, %255
  %267 = load i32, i32* %61, align 8
  %268 = add nsw i32 %267, 1
  store i32 %268, i32* %61, align 8
  store i16 %253, i16* %63, align 8
  %269 = icmp sgt i32 %267, 24
  br i1 %269, label %270, label %275

270:                                              ; preds = %266
  %271 = sext i16 %250 to i32
  %272 = icmp sgt i32 %271, 160
  %273 = select i1 %272, i32 %271, i32 160
  %274 = add nsw i32 %273, -160
  store i32 %274, i32* %59, align 4
  br label %275

275:                                              ; preds = %270, %266, %265, %215, %214, %218
  %276 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %36, align 8
  %277 = load i16*, i16** %8, align 8
  %278 = mul nuw nsw i64 %200, 80
  %279 = getelementptr inbounds i16, i16* %1, i64 %278
  %280 = getelementptr inbounds i16, i16* %2, i64 %278
  %281 = select i1 %64, i16* null, i16* %280
  %282 = getelementptr inbounds i16, i16* %3, i64 %278
  %283 = call i32 @_ZN6webrtc23WebRtcAecm_ProcessFrameEPNS_8AecmCoreEPKsS3_S3_Ps(%"struct.webrtc::AecmCore"* %276, i16* %277, i16* %279, i16* %281, i16* %282) #8
  %284 = icmp eq i32 %283, -1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #8
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %47) #8
  %285 = add nuw nsw i64 %200, 1
  br i1 %284, label %286, label %197

286:                                              ; preds = %197, %275, %185, %188, %186, %177, %19, %14, %10, %6
  %287 = phi i32 [ -1, %6 ], [ 12003, %10 ], [ 12002, %14 ], [ 12004, %19 ], [ %29, %177 ], [ %29, %186 ], [ %29, %188 ], [ %29, %185 ], [ %29, %197 ], [ -1, %275 ]
  ret i32 %287
}

declare i64 @WebRtc_available_read(%struct.RingBuffer*) local_unnamed_addr #3

declare i32 @WebRtc_MoveReadPtr(%struct.RingBuffer*, i32) local_unnamed_addr #3

declare i64 @WebRtc_ReadBuffer(%struct.RingBuffer*, i8**, i8*, i64) local_unnamed_addr #3

declare i32 @_ZN6webrtc23WebRtcAecm_ProcessFrameEPNS_8AecmCoreEPKsS3_S3_Ps(%"struct.webrtc::AecmCore"*, i16*, i16*, i16*, i16*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebRtcAecm_InitEchoPath(i8* readonly, i8*, i64) local_unnamed_addr #0 {
  %4 = bitcast i8* %1 to i16*
  %5 = icmp eq i8* %0, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %3
  %7 = icmp eq i8* %1, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %6
  %9 = icmp eq i64 %2, 130
  br i1 %9, label %10, label %19

10:                                               ; preds = %8
  %11 = getelementptr inbounds i8, i8* %0, i64 336
  %12 = bitcast i8* %11 to i16*
  %13 = load i16, i16* %12, align 8
  %14 = icmp eq i16 %13, 42
  br i1 %14, label %15, label %19

15:                                               ; preds = %10
  %16 = getelementptr inbounds i8, i8* %0, i64 384
  %17 = bitcast i8* %16 to %"struct.webrtc::AecmCore"**
  %18 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %17, align 8
  tail call void @_ZN6webrtc27WebRtcAecm_InitEchoPathCoreEPNS_8AecmCoreEPKs(%"struct.webrtc::AecmCore"* %18, i16* nonnull %4) #8
  br label %19

19:                                               ; preds = %10, %8, %6, %3, %15
  %20 = phi i32 [ 0, %15 ], [ -1, %3 ], [ 12003, %6 ], [ 12004, %8 ], [ 12002, %10 ]
  ret i32 %20
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @WebRtcAecm_echo_path_size_bytes() local_unnamed_addr #7 {
  ret i64 130
}

declare void @_ZN6webrtc27WebRtcAecm_InitEchoPathCoreEPNS_8AecmCoreEPKs(%"struct.webrtc::AecmCore"*, i16*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebRtcAecm_GetEchoPath(i8* readonly, i8*, i64) local_unnamed_addr #0 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %3
  %6 = icmp eq i8* %1, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %5
  %8 = icmp eq i64 %2, 130
  br i1 %8, label %9, label %21

9:                                                ; preds = %7
  %10 = getelementptr inbounds i8, i8* %0, i64 336
  %11 = bitcast i8* %10 to i16*
  %12 = load i16, i16* %11, align 8
  %13 = icmp eq i16 %12, 42
  br i1 %13, label %14, label %21

14:                                               ; preds = %9
  %15 = getelementptr inbounds i8, i8* %0, i64 384
  %16 = bitcast i8* %15 to %"struct.webrtc::AecmCore"**
  %17 = load %"struct.webrtc::AecmCore"*, %"struct.webrtc::AecmCore"** %16, align 8
  %18 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %17, i64 0, i32 36
  %19 = bitcast i16** %18 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %1, i8* align 2 %20, i64 130, i1 false)
  br label %21

21:                                               ; preds = %9, %7, %5, %3, %14
  %22 = phi i32 [ 0, %14 ], [ -1, %3 ], [ 12003, %5 ], [ 12004, %7 ], [ 12002, %9 ]
  ret i32 %22
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
